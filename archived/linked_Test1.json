[
  {
    "sparql_id": "308",
    "question": "Which royalty was married to ptolemy XIII Theos Philopator and had mother named Cleopatra V ?",
    "SerialNumber": "6",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/mother\u003e \u003chttp://dbpedia.org/resource/Cleopatra_V_of_Egypt\u003e . ?uri \u003chttp://dbpedia.org/property/spouse\u003e \u003chttp://dbpedia.org/resource/Ptolemy_XIII_Theos_Philopator\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Royalty\u003e}",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Cleopatra V",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Cleopatra_V_of_Egypt",
        "seq": "999,1000"
      },
      {
        "label": "ptolemy XIII Theos Philopator",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ptolemy_XIII_Theos_Philopator",
        "seq": "29,58"
      }
    ],
    "id": "e963127fc9c048e089c071e56b80f214",
    "predicate mapping": [
      {
        "label": "mother",
        "uri": "http://dbpedia.org/property/mother",
        "seq": "67,72",
        "mappedBy": "manual corrections"
      },
      {
        "label": "married",
        "uri": "http://dbpedia.org/property/spouse",
        "seq": "18,25",
        "mappedBy": "manual corrections"
      },
      {
        "label": "royalty",
        "uri": "http://dbpedia.org/ontology/Royalty",
        "seq": "6,12",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "7",
    "question": "What tv series can be said to be related to the sarah jane adventure and dr who confidential?",
    "SerialNumber": "15",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/ontology/related\u003e \u003chttp://dbpedia.org/resource/The_Sarah_Jane_Adventures\u003e . ?uri \u003chttp://dbpedia.org/ontology/related\u003e \u003chttp://dbpedia.org/resource/Doctor_Who_Confidential\u003e . }",
    "checked": "true",
    "entity mapping": [
      {
        "label": "the sarah jane adventure ",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Sarah_Jane_Adventures",
        "seq": "44,69"
      },
      {
        "label": "dr who confidential",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Doctor_Who_Confidential",
        "seq": "999,1000"
      }
    ],
    "id": "6ff03a568e2e4105b491ab1c1411c1ab",
    "predicate mapping": [
      {
        "label": "related",
        "uri": "http://dbpedia.org/ontology/related",
        "seq": "33,39",
        "mappedBy": "manual corrections"
      },
      {
        "label": "related",
        "uri": "http://dbpedia.org/ontology/related",
        "seq": "33,39",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the common genere of Abhijit Kunte and Kasparov ?",
    "SerialNumber": "18",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Abhijit_Kunte\u003e \u003chttp://dbpedia.org/property/knownFor\u003e ?uri. \u003chttp://dbpedia.org/resource/Virtual_Kasparov\u003e \u003chttp://dbpedia.org/ontology/genre\u003e ?uri} ",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Abhijit Kunte",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Abhijit_Kunte",
        "seq": "29,42"
      },
      {
        "label": "kasparov",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Virtual_Kasparov",
        "seq": "999,1000"
      }
    ],
    "id": "8b08c0d0fc3d45e1936149c78c6637df",
    "predicate mapping": [
      {
        "label": "@@@",
        "uri": "http://dbpedia.org/property/knownFor",
        "seq": "-1,-1",
        "mappedBy": "manual corrections"
      },
      {
        "label": "genere",
        "uri": "http://dbpedia.org/ontology/genre",
        "seq": "19,24",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which source country of SamurAbsheron channel is the birth place of Anar Salmanov ?",
    "SerialNumber": "21",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Samur–Absheron_channel\u003e \u003chttp://dbpedia.org/ontology/sourceCountry\u003e ?uri. \u003chttp://dbpedia.org/resource/Anar_Salmanov\u003e \u003chttp://dbpedia.org/property/placeOfBirth\u003e ?uri} ",
    "checked": "true",
    "entity mapping": [
      {
        "label": "SamurAbsheron channel",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Samur–Absheron_channel",
        "seq": "999,1000"
      },
      {
        "label": "Anar Salmanov",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Anar_Salmanov",
        "seq": "68,81"
      }
    ],
    "id": "62fc3395a7ce4c27ba5bfb82e020dab6",
    "predicate mapping": [
      {
        "label": "country source",
        "uri": "http://dbpedia.org/ontology/sourceCountry",
        "seq": "6,19",
        "mappedBy": "manual corrections"
      },
      {
        "label": "birth place",
        "uri": "http://dbpedia.org/property/placeOfBirth",
        "seq": "53,63",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Did Timm Gunn guest in Sunrise (HIMYM)?",
    "SerialNumber": "25",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Sunrise_(How_I_Met_Your_Mother)\u003e \u003chttp://dbpedia.org/property/guests\u003e \u003chttp://dbpedia.org/resource/Tim_Gunn\u003e }",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Sunrise",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Sunrise_(How_I_Met_Your_Mother)",
        "seq": "23,30"
      },
      {
        "label": "Timm Gunn",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Tim_Gunn",
        "seq": "999,1000"
      }
    ],
    "id": "502ef78b55df4f73beb3f5df73483a51",
    "predicate mapping": [
      {
        "label": "guest",
        "uri": "http://dbpedia.org/property/guests",
        "seq": "14,18",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Who is the common manager of Aston Villa 2000-02 season and aldo the manager of Middlesbrough F.C. season 2009-10",
    "SerialNumber": "30",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/2000–01_Aston_Villa_F.C._season\u003e \u003chttp://dbpedia.org/property/name\u003e ?uri. \u003chttp://dbpedia.org/resource/2009–10_Middlesbrough_F.C._season\u003e \u003chttp://dbpedia.org/ontology/manager\u003e ?uri} ",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Aston Villa 2000-02 season",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/2000–01_Aston_Villa_F.C._season",
        "seq": "999,1000"
      },
      {
        "label": "Middlesbrough F.C. season 2009-10",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/2009–10_Middlesbrough_F.C._season",
        "seq": "999,1000"
      }
    ],
    "id": "e1b83f5a76aa411aa260424b3255ce89",
    "predicate mapping": [
      {
        "label": "Who",
        "uri": "http://dbpedia.org/property/name",
        "seq": "0,2",
        "mappedBy": "manual corrections"
      },
      {
        "label": "manager",
        "uri": "http://dbpedia.org/ontology/manager",
        "seq": "18,24",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "How many tenats have been there, of the constructions of PCL constructures?",
    "SerialNumber": "32",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/builder\u003e \u003chttp://dbpedia.org/resource/PCL_Construction\u003e . ?x \u003chttp://dbpedia.org/ontology/tenant\u003e ?uri  . }",
    "checked": "true",
    "entity mapping": [
      {
        "label": "PCL constructures",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/PCL_Construction",
        "seq": "999,1000"
      }
    ],
    "id": "ce216d620d154f13814dd2f6b967c292",
    "predicate mapping": [
      {
        "label": "constructions",
        "uri": "http://dbpedia.org/ontology/builder",
        "seq": "40,52",
        "mappedBy": "manual corrections"
      },
      {
        "label": "tenats",
        "uri": "http://dbpedia.org/ontology/tenant",
        "seq": "9,14",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which planet was discovered by Johann Gottfried and Urbain Le Verrier ?",
    "SerialNumber": "51",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/discoverer\u003e \u003chttp://dbpedia.org/resource/Johann_Gottfried_Galle\u003e . ?uri \u003chttp://dbpedia.org/ontology/discoverer\u003e \u003chttp://dbpedia.org/resource/Urbain_Le_Verrier\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Planet\u003e}",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Johann Gottfried",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Johann_Gottfried_Galle",
        "seq": "999,1000"
      },
      {
        "label": "Urbain Le Verrier",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Urbain_Le_Verrier",
        "seq": "52,69"
      }
    ],
    "id": "3f7a7a7d95104fcb8c6ebe00786a990b",
    "predicate mapping": [
      {
        "label": "discovered by",
        "uri": "http://dbpedia.org/property/discoverer",
        "seq": "17,29",
        "mappedBy": "manual corrections"
      },
      {
        "label": "planet",
        "uri": "http://dbpedia.org/ontology/Planet",
        "seq": "6,11",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Who started at the pole position in both 1997 canadian grand prix and the 94 spanish one?",
    "SerialNumber": "56",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/1997_Canadian_Grand_Prix\u003e \u003chttp://dbpedia.org/property/poleDriver\u003e ?uri. \u003chttp://dbpedia.org/resource/1994_Spanish_Grand_Prix\u003e \u003chttp://dbpedia.org/property/poleDriver\u003e ?uri . }",
    "checked": "true",
    "entity mapping": [
      {
        "label": "1997 canadian grand prix",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/1997_Canadian_Grand_Prix",
        "seq": "41,65"
      },
      {
        "label": "94 spanish one",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/1994_Spanish_Grand_Prix",
        "seq": "999,1000"
      }
    ],
    "id": "3f53ed3c088c4ede9a3582e26303ee83",
    "predicate mapping": [
      {
        "label": "pole position",
        "uri": "http://dbpedia.org/property/poleDriver",
        "seq": "19,31",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which tenants of the Master Card center is also th draft team of Sam Carrick ",
    "SerialNumber": "59",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/MasterCard_Centre\u003e \u003chttp://dbpedia.org/property/tenants\u003e ?uri. \u003chttp://dbpedia.org/resource/Sam_Carrick\u003e \u003chttp://dbpedia.org/property/draftTeam\u003e ?uri} ",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Master Card center",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/MasterCard_Centre",
        "seq": "999,1000"
      },
      {
        "label": "Sam Carrick",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Sam_Carrick",
        "seq": "65,76"
      }
    ],
    "id": "94d9288c52b54642bdac4aba4fedcc04",
    "predicate mapping": [
      {
        "label": "tenants",
        "uri": "http://dbpedia.org/property/tenants",
        "seq": "6,12",
        "mappedBy": "manual corrections"
      },
      {
        "label": "draft team",
        "uri": "http://dbpedia.org/property/draftTeam",
        "seq": "51,60",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which title of Zaman Shah Durrani is also the nationality of Salahuddin ?",
    "SerialNumber": "85",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Zaman_Shah_Durrani\u003e \u003chttp://dbpedia.org/property/title\u003e ?uri. \u003chttp://dbpedia.org/resource/Salahuddin_Rabbani\u003e \u003chttp://dbpedia.org/ontology/nationality\u003e ?uri} ",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Zaman Shah Durrani",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Zaman_Shah_Durrani",
        "seq": "15,33"
      },
      {
        "label": "Salahuddin",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Salahuddin_Rabbani",
        "seq": "999,1000"
      }
    ],
    "id": "34d6402839924ecbbffe213ce8966124",
    "predicate mapping": [
      {
        "label": "title",
        "uri": "http://dbpedia.org/property/title",
        "seq": "6,10",
        "mappedBy": "manual corrections"
      },
      {
        "label": "nationality",
        "uri": "http://dbpedia.org/ontology/nationality",
        "seq": "46,56",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What woman acted in the mating habits of earthbound humans and is often associated with Mams taylor?",
    "SerialNumber": "96",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/The_Mating_Habits_of_the_Earthbound_Human\u003e \u003chttp://dbpedia.org/property/starring\u003e ?uri. \u003chttp://dbpedia.org/resource/Mams_Taylor\u003e \u003chttp://dbpedia.org/ontology/associatedMusicalArtist\u003e ?uri . }",
    "checked": "true",
    "entity mapping": [
      {
        "label": "the mating habits of earthbound humans",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/The_Mating_Habits_of_the_Earthbound_Human",
        "seq": "999,1000"
      },
      {
        "label": "Mams taylor",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Mams_Taylor",
        "seq": "88,99"
      }
    ],
    "id": "6d1d440ec5414694a662782baff67759",
    "predicate mapping": [
      {
        "label": "acted",
        "uri": "http://dbpedia.org/property/starring",
        "seq": "11,15",
        "mappedBy": "manual corrections"
      },
      {
        "label": "associated",
        "uri": "http://dbpedia.org/ontology/associatedMusicalArtist",
        "seq": "72,81",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "How many things are crossed over by bridges which can carry cars?",
    "SerialNumber": "128",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/carries\u003e \u003chttp://dbpedia.org/resource/Motor_vehicle\u003e . ?x \u003chttp://dbpedia.org/property/crosses\u003e ?uri  . }",
    "checked": "true",
    "entity mapping": [
      {
        "label": "cars",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Motor_vehicle",
        "seq": "999,1000"
      }
    ],
    "id": "62a255d7774446fca4a570b227bc463e",
    "predicate mapping": [
      {
        "label": "carry",
        "uri": "http://dbpedia.org/property/carries",
        "seq": "54,58",
        "mappedBy": "manual corrections"
      },
      {
        "label": "crossed",
        "uri": "http://dbpedia.org/property/crosses",
        "seq": "20,26",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Is the chestnut white bellied rat a mammal?",
    "SerialNumber": "143",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Chestnut_white-bellied_rat\u003e \u003chttp://dbpedia.org/ontology/class\u003e \u003chttp://dbpedia.org/resource/Mammal\u003e }",
    "checked": "true",
    "entity mapping": [
      {
        "label": "chestnut bellied white rat",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Chestnut_white-bellied_rat",
        "seq": "999,1000"
      },
      {
        "label": "mammal",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Mammal",
        "seq": "36,42"
      }
    ],
    "id": "dc3644ed1dfc4da882751c8ba8661e2a",
    "predicate mapping": [
      {
        "label": "a",
        "uri": "http://dbpedia.org/ontology/class",
        "seq": "31,31",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "what are some common games played at both Fr Agnel Multipurpose School and Vishwajyot High School?",
    "SerialNumber": "149",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Fr._Agnel_Multipurpose_School_and_Junior_College\u003e \u003chttp://dbpedia.org/ontology/sport\u003e ?uri. \u003chttp://dbpedia.org/resource/Vishwajyot_High_School\u003e \u003chttp://dbpedia.org/ontology/sport\u003e ?uri . }",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Fr Agnel Multipurpose School",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Fr._Agnel_Multipurpose_School_and_Junior_College",
        "seq": "999,1000"
      },
      {
        "label": "Vishwajyot High School",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Vishwajyot_High_School",
        "seq": "75,97"
      }
    ],
    "id": "cc5a0469264f4b9db2f762d99fac320f",
    "predicate mapping": [
      {
        "label": "games",
        "uri": "http://dbpedia.org/ontology/sport",
        "seq": "21,25",
        "mappedBy": "manual corrections"
      },
      {
        "label": "games",
        "uri": "http://dbpedia.org/ontology/sport",
        "seq": "21,25",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What relegious affiliation of Josiah Idowu-Fearon was canonized by john of Damasucs ?",
    "SerialNumber": "165",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/John_of_Damascus\u003e \u003chttp://dbpedia.org/ontology/canonizedBy\u003e ?uri. \u003chttp://dbpedia.org/resource/Josiah_Idowu-Fearon\u003e \u003chttp://dbpedia.org/ontology/religion\u003e ?uri} ",
    "checked": "true",
    "entity mapping": [
      {
        "label": "john of Damasucs",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/John_of_Damascus",
        "seq": "999,1000"
      },
      {
        "label": "Josiah Idowu-Fearon",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Josiah_Idowu-Fearon",
        "seq": "30,49"
      }
    ],
    "id": "30d274c7ebc944d6ac4e29e01c552fbb",
    "predicate mapping": [
      {
        "label": "canonized by",
        "uri": "http://dbpedia.org/ontology/canonizedBy",
        "seq": "54,65",
        "mappedBy": "manual corrections"
      },
      {
        "label": "relegious",
        "uri": "http://dbpedia.org/ontology/religion",
        "seq": "5,13",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "106",
    "question": "Count all that was built by a company whose leader is Kazuo Hirai?",
    "SerialNumber": "173",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/keyPeople\u003e \u003chttp://dbpedia.org/resource/Kazuo_Hirai\u003e . ?uri \u003chttp://dbpedia.org/ontology/manufacturer\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Kazuo Hirai",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Kazuo_Hirai",
        "seq": "54,65"
      }
    ],
    "id": "058b1ad027e8461f8bdc3cbe71af5877",
    "predicate mapping": [
      {
        "label": "leader",
        "uri": "http://dbpedia.org/property/keyPeople",
        "seq": "44,49",
        "mappedBy": "miss"
      },
      {
        "label": "built by",
        "uri": "http://dbpedia.org/ontology/manufacturer",
        "seq": "19,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Name the tenant of Ever bank field which has also has player named Dan Shamash ?",
    "SerialNumber": "175",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Dan_Shamash\u003e \u003chttp://dbpedia.org/ontology/team\u003e ?uri. \u003chttp://dbpedia.org/resource/EverBank_Field\u003e \u003chttp://dbpedia.org/ontology/tenant\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Dan Shamash",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Dan_Shamash",
        "seq": "67,78"
      },
      {
        "label": "Ever bank field",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/EverBank_Field",
        "seq": "999,1000"
      }
    ],
    "id": "af9721be263d4f1183dd36c6263b988a",
    "predicate mapping": [
      {
        "label": "player",
        "uri": "http://dbpedia.org/ontology/team",
        "seq": "9,14",
        "mappedBy": "miss"
      },
      {
        "label": "tenant",
        "uri": "http://dbpedia.org/ontology/tenant",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "What is the largest city in the country where the San Marcos River originates?",
    "SerialNumber": "177",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/San_Marcos_River\u003e \u003chttp://dbpedia.org/ontology/sourceMountain\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/largestCity\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Country\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "San Marcos River",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/San_Marcos_River",
        "seq": "50,66"
      }
    ],
    "id": "40d8dc6cc6a44008b90476173e0fcbe3",
    "predicate mapping": [
      {
        "label": "originates",
        "uri": "http://dbpedia.org/ontology/sourceMountain",
        "seq": "32,38",
        "mappedBy": "miss"
      },
      {
        "label": "largest city",
        "uri": "http://dbpedia.org/ontology/largestCity",
        "seq": "12,24",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/Country",
        "seq": "32,39",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Give a list of all the labels that have jazz fusion artists signed up with them?",
    "SerialNumber": "178",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/genre\u003e \u003chttp://dbpedia.org/resource/Jazz_fusion\u003e . ?x \u003chttp://dbpedia.org/ontology/recordLabel\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MusicalArtist\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "jazz fusion",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Jazz_fusion",
        "seq": "40,51"
      }
    ],
    "id": "0d89f5d0f59b44e8a5353d50205fefa4",
    "predicate mapping": [
      {
        "label": "artists",
        "uri": "http://dbpedia.org/ontology/genre",
        "seq": "60,65",
        "mappedBy": "merged"
      },
      {
        "label": "label",
        "uri": "http://dbpedia.org/ontology/recordLabel",
        "seq": "23,28",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "artists",
        "uri": "http://dbpedia.org/ontology/MusicalArtist",
        "seq": "52,59",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Which holy places did consider Pope Gregory I as a saint?",
    "SerialNumber": "181",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Pope_Gregory_I\u003e \u003chttp://dbpedia.org/property/veneratedIn\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Pope Gregory I",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Pope_Gregory_I",
        "seq": "31,45"
      }
    ],
    "id": "c57100a716d5441bb8cc6a588c54982b",
    "predicate mapping": [
      {
        "label": "saint",
        "uri": "http://dbpedia.org/property/veneratedIn",
        "seq": "51,55",
        "mappedBy": "miss"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "List the religion of people in the Cambodian human rights party?",
    "SerialNumber": "182",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/otherParty\u003e \u003chttp://dbpedia.org/resource/Human_Rights_Party_(Cambodia)\u003e . ?x \u003chttp://dbpedia.org/ontology/religion\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "human rights party",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Human_Rights_Party_(Cambodia)",
        "seq": "45,63"
      }
    ],
    "id": "148cdeb62654466ba6820ef343817fdb",
    "predicate mapping": [
      {
        "label": "party",
        "uri": "http://dbpedia.org/ontology/otherParty",
        "seq": "-1,8",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion",
        "seq": "9,17",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "people",
        "uri": "http://dbpedia.org/ontology/Person",
        "seq": "21,26",
        "mappedBy": "miss"
      }
    ]
  },
  {
    "sparql_id": "405",
    "question": "Count the wars in which people awarded with the Croix de guerre fought.",
    "SerialNumber": "184",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/awards\u003e \u003chttp://dbpedia.org/resource/Croix_de_guerre_1939–1945_(France)\u003e . ?x \u003chttp://dbpedia.org/property/battles\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MilitaryConflict\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Croix de guerre",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Croix_de_guerre_1939–1945_(France)",
        "seq": "999,1000"
      }
    ],
    "id": "f1e12faf9fbc416a9f4c648088eb0ce4",
    "predicate mapping": [
      {
        "label": "awarded",
        "uri": "http://dbpedia.org/property/awards",
        "seq": "31,38",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "fought",
        "uri": "http://dbpedia.org/property/battles",
        "seq": "6,8",
        "mappedBy": "miss"
      },
      {
        "label": "wars",
        "uri": "http://dbpedia.org/ontology/MilitaryConflict",
        "seq": "0,4",
        "mappedBy": "miss"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "For which clubs do the players of Azam F.C. play for?",
    "SerialNumber": "185",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Azam_F.C.\u003e \u003chttp://dbpedia.org/property/name\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/team\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/SoccerPlayer\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Azam F.C.",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Azam_F.C.",
        "seq": "34,43"
      }
    ],
    "id": "fdfee7b9d0c14c7eb2865ce63f009f2d",
    "predicate mapping": [
      {
        "label": "azam",
        "uri": "http://dbpedia.org/property/name",
        "seq": "34,37",
        "mappedBy": "NA"
      },
      {
        "label": "club",
        "uri": "http://dbpedia.org/ontology/team",
        "seq": "19,21",
        "mappedBy": "miss"
      },
      {
        "label": "players",
        "uri": "http://dbpedia.org/ontology/SoccerPlayer",
        "seq": "23,30",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which location of  INKAS is also the location of  T.I. Ahmadiyya Senior High School, Kumasi ?",
    "SerialNumber": "186",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/INKAS\u003e \u003chttp://dbpedia.org/property/locations\u003e ?uri. \u003chttp://dbpedia.org/resource/T.I._Ahmadiyya_Senior_High_School,_Kumasi\u003e \u003chttp://dbpedia.org/ontology/denomination\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "INKAS",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/INKAS",
        "seq": "19,24"
      },
      {
        "label": "T.I. Ahmadiyya Senior High School, Kumasi",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/T.I._Ahmadiyya_Senior_High_School,_Kumasi",
        "seq": "50,91"
      }
    ],
    "id": "e24e471cc44e4ea99d44a35f6932aa9b",
    "predicate mapping": [
      {
        "label": "location",
        "uri": "http://dbpedia.org/property/locations",
        "seq": "6,14",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "location",
        "uri": "http://dbpedia.org/ontology/denomination",
        "seq": "6,13",
        "mappedBy": "miss"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name a  river with source country as Zambia and source location as Ikelenge  District?",
    "SerialNumber": "190",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/sourceCountry\u003e \u003chttp://dbpedia.org/resource/Zambia\u003e . ?uri \u003chttp://dbpedia.org/property/sourceLocation\u003e \u003chttp://dbpedia.org/resource/Ikelenge_District\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/River\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Zambia",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Zambia",
        "seq": "37,43"
      },
      {
        "label": "Ikelenge  District",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Ikelenge_District",
        "seq": "999,1000"
      }
    ],
    "id": "0e83db3bc85c4c33bbc49dafc2825eb4",
    "predicate mapping": [
      {
        "label": "source country",
        "uri": "http://dbpedia.org/ontology/sourceCountry",
        "seq": "19,33",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "source location",
        "uri": "http://dbpedia.org/property/sourceLocation",
        "seq": "48,63",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River",
        "seq": "8,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Which researchers received fellowship from Royal Society?",
    "SerialNumber": "191",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/award\u003e \u003chttp://dbpedia.org/resource/Royal_Society\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Scientist\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Royal Society",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Royal_Society",
        "seq": "43,56"
      }
    ],
    "id": "7f65c4ab542e475aa78b39ba487c66d2",
    "predicate mapping": [
      {
        "label": "fellowship",
        "uri": "http://dbpedia.org/ontology/award",
        "seq": "18,26",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "researchers",
        "uri": "http://dbpedia.org/ontology/Scientist",
        "seq": "49,55",
        "mappedBy": "miss"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "acer nigrum is used in making what?",
    "SerialNumber": "192",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/ingredient\u003e \u003chttp://dbpedia.org/resource/Acer_nigrum\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "acer nigrum",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Acer_nigrum",
        "seq": "0,11"
      }
    ],
    "id": "e166d5d43fdf4091b8a0c9a5482c75c5",
    "predicate mapping": [
      {
        "label": "in making",
        "uri": "http://dbpedia.org/ontology/ingredient",
        "seq": "5,10",
        "mappedBy": "miss"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "what are some famous people out of the Filipinos?",
    "SerialNumber": "193",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/stateOfOrigin\u003e \u003chttp://dbpedia.org/resource/Filipinos\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Filipinos",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Filipinos",
        "seq": "39,48"
      }
    ],
    "id": "89b2ce4827404f8bbd451c6143340f72",
    "predicate mapping": [
      {
        "label": "filipinos",
        "uri": "http://dbpedia.org/ontology/stateOfOrigin",
        "seq": "39,47",
        "mappedBy": "people out of"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "To whom was Tessa Dahl born to?",
    "SerialNumber": "198",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Tessa_Dahl\u003e \u003chttp://dbpedia.org/ontology/parent\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Tessa Dahl",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Tessa_Dahl",
        "seq": "12,22"
      }
    ],
    "id": "139da48f4c4e4d1e91d23b6890ef6f4f",
    "predicate mapping": [
      {
        "label": "born",
        "uri": "http://dbpedia.org/ontology/parent",
        "seq": "23,26",
        "mappedBy": "miss"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "Count the number of religions followed by the alumini of Ananda College.",
    "SerialNumber": "201",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/almaMater\u003e \u003chttp://dbpedia.org/resource/Ananda_College\u003e . ?x \u003chttp://dbpedia.org/ontology/religion\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ananda College",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ananda_College",
        "seq": "57,71"
      }
    ],
    "id": "a0423af0bfd24f718c7e57062d36a615",
    "predicate mapping": [
      {
        "label": "alumini",
        "uri": "http://dbpedia.org/ontology/almaMater",
        "seq": "10,15",
        "mappedBy": "miss"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion",
        "seq": "20,28",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which city located on Mediterranean Sea is also the stadium of Panionios G.S.S. season ?",
    "SerialNumber": "202",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/2014–15_Panionios_G.S.S._season\u003e \u003chttp://dbpedia.org/property/stadium\u003e ?uri. \u003chttp://dbpedia.org/resource/Mediterranean_Sea\u003e \u003chttp://dbpedia.org/property/cities\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Panionios G.S.S. season",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/2014–15_Panionios_G.S.S._season",
        "seq": "999,1000"
      },
      {
        "label": "Mediterranean Sea",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Mediterranean_Sea",
        "seq": "22,39"
      }
    ],
    "id": "ebe64596063a43719e1b6479a9d09d94",
    "predicate mapping": [
      {
        "label": "stadium",
        "uri": "http://dbpedia.org/property/stadium",
        "seq": "52,59",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "city",
        "uri": "http://dbpedia.org/property/cities",
        "seq": "6,10",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "What is the river whose source is Cowombat  Flat and has it\u0027s mouth located in Murray Mouth?",
    "SerialNumber": "203",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/source\u003e \u003chttp://dbpedia.org/resource/Cowombat_Flat\u003e . ?uri \u003chttp://dbpedia.org/ontology/riverMouth\u003e \u003chttp://dbpedia.org/resource/Murray_Mouth\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/River\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Cowombat  Flat",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Cowombat_Flat",
        "seq": "999,1000"
      },
      {
        "label": "Murray Mouth",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Murray_Mouth",
        "seq": "79,91"
      }
    ],
    "id": "7b9c6c00806d42ef9ece1689ddac88c8",
    "predicate mapping": [
      {
        "label": "source",
        "uri": "http://dbpedia.org/ontology/source",
        "seq": "24,30",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "river mouth",
        "uri": "http://dbpedia.org/ontology/riverMouth",
        "seq": "-1,10",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River",
        "seq": "12,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "Who were in the youth clubs that were in season of 2015 Argentine Primera Division?",
    "SerialNumber": "205",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/season\u003e \u003chttp://dbpedia.org/resource/2015_Argentine_Primera_División\u003e . ?uri \u003chttp://dbpedia.org/property/youthclubs\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "2015 Argentine Primera Division",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/2015_Argentine_Primera_División",
        "seq": "999,1000"
      }
    ],
    "id": "43659f479aa14b2aa8703e06d7a71405",
    "predicate mapping": [
      {
        "label": "season",
        "uri": "http://dbpedia.org/ontology/season",
        "seq": "41,47",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "youth clubs",
        "uri": "http://dbpedia.org/property/youthclubs",
        "seq": "16,27",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "What is the name of the movie whose director of photography was Jordan Cronenweth and music composer was Vangelis?",
    "SerialNumber": "208",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/cinematography\u003e \u003chttp://dbpedia.org/resource/Jordan_Cronenweth\u003e . ?uri \u003chttp://dbpedia.org/ontology/musicComposer\u003e \u003chttp://dbpedia.org/resource/Vangelis\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jordan Cronenweth",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Jordan_Cronenweth",
        "seq": "64,81"
      },
      {
        "label": "Vangelis",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Vangelis",
        "seq": "105,113"
      }
    ],
    "id": "ce7341ebdfa44c9b8066a65553c210b4",
    "predicate mapping": [
      {
        "label": "photography",
        "uri": "http://dbpedia.org/property/cinematography",
        "seq": "48,58",
        "mappedBy": "miss"
      },
      {
        "label": "music composer",
        "uri": "http://dbpedia.org/ontology/musicComposer",
        "seq": "86,100",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "24,29",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "405",
    "question": "From how many coutries do companies come, which are headquartered in the Klang Valley?",
    "SerialNumber": "209",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/headquarters\u003e \u003chttp://dbpedia.org/resource/Klang_Valley\u003e . ?x \u003chttp://dbpedia.org/property/country\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Country\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Klang Valley",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Klang_Valley",
        "seq": "73,85"
      }
    ],
    "id": "515d73dc046545aa893eb5a29754ae6d",
    "predicate mapping": [
      {
        "label": "headquarter",
        "uri": "http://dbpedia.org/property/headquarters",
        "seq": "52,63",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "coutries",
        "uri": "http://dbpedia.org/property/country",
        "seq": "14,21",
        "mappedBy": "miss"
      },
      {
        "label": "coutries",
        "uri": "http://dbpedia.org/ontology/Country",
        "seq": "14,21",
        "mappedBy": "miss"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which parent organization of Get TV also owns the Galleria ?",
    "SerialNumber": "215",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/GetTV\u003e \u003chttp://dbpedia.org/ontology/parentOrganisation\u003e ?uri. \u003chttp://dbpedia.org/resource/The_Galleria\u003e \u003chttp://dbpedia.org/ontology/owner\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Get TV",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/GetTV",
        "seq": "999,1000"
      },
      {
        "label": "the Galleria",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Galleria",
        "seq": "46,58"
      }
    ],
    "id": "37e79131355440699c0b9efeb17ecc4a",
    "predicate mapping": [
      {
        "label": "parent organization",
        "uri": "http://dbpedia.org/ontology/parentOrganisation",
        "seq": "13,24",
        "mappedBy": "miss"
      },
      {
        "label": "owns",
        "uri": "http://dbpedia.org/ontology/owner",
        "seq": "41,45",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who all have rented the stadium whose architect is Populous?",
    "SerialNumber": "220",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/architect\u003e \u003chttp://dbpedia.org/resource/Populous_(company)\u003e . ?x \u003chttp://dbpedia.org/ontology/tenant\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Stadium\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Populous",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Populous_(company)",
        "seq": "51,59"
      }
    ],
    "id": "c6237ded5fec4e6e88b97e8bf24b84c8",
    "predicate mapping": [
      {
        "label": "architect",
        "uri": "http://dbpedia.org/property/architect",
        "seq": "38,47",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "rented",
        "uri": "http://dbpedia.org/ontology/tenant",
        "seq": "13,18",
        "mappedBy": "miss"
      },
      {
        "label": "stadium",
        "uri": "http://dbpedia.org/ontology/Stadium",
        "seq": "24,31",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Which body governs over the place made by the chumash people?",
    "SerialNumber": "221",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/architect\u003e \u003chttp://dbpedia.org/resource/Chumash_people\u003e . ?x \u003chttp://dbpedia.org/ontology/governingBody\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Place\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "chumash people",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Chumash_people",
        "seq": "46,60"
      }
    ],
    "id": "fca07533e88d461686cd3a1827d8d790",
    "predicate mapping": [
      {
        "label": "made by",
        "uri": "http://dbpedia.org/property/architect",
        "seq": "0,4",
        "mappedBy": "miss"
      },
      {
        "label": "governs",
        "uri": "http://dbpedia.org/ontology/governingBody",
        "seq": "11,18",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "place",
        "uri": "http://dbpedia.org/ontology/Place",
        "seq": "28,33",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which TV show developed by J. Michael Stracznski has artist as Christopher Franke ?",
    "SerialNumber": "223",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/artist\u003e \u003chttp://dbpedia.org/resource/Christopher_Franke\u003e . ?uri \u003chttp://dbpedia.org/ontology/developer\u003e \u003chttp://dbpedia.org/resource/J._Michael_Straczynski\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Christopher Franke",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Christopher_Franke",
        "seq": "63,81"
      },
      {
        "label": "J. Michael Stracznski",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/J._Michael_Straczynski",
        "seq": "999,1000"
      }
    ],
    "id": "e54d1194593e4fabba95e42efed756c9",
    "predicate mapping": [
      {
        "label": "artist",
        "uri": "http://dbpedia.org/property/artist",
        "seq": "53,59",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "developed by",
        "uri": "http://dbpedia.org/ontology/developer",
        "seq": "14,26",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "9,13",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Does the merlin express have a hub at the cibano international airport?",
    "SerialNumber": "228",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Merlin_Express\u003e \u003chttp://dbpedia.org/ontology/hubAirport\u003e \u003chttp://dbpedia.org/resource/Cibao_International_Airport\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "merlin express",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Merlin_Express",
        "seq": "9,23"
      },
      {
        "label": "cibano international airport",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Cibao_International_Airport",
        "seq": "999,1000"
      }
    ],
    "id": "d97aad57df5d45eb95490446fc978a61",
    "predicate mapping": [
      {
        "label": "airport hub",
        "uri": "http://dbpedia.org/ontology/hubAirport",
        "seq": "-1,10",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "101",
    "question": "How many people live in Wilton, Connecticut?",
    "SerialNumber": "229",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/property/residence\u003e \u003chttp://dbpedia.org/resource/Wilton,_Connecticut\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Wilton, Connecticut",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Wilton,_Connecticut",
        "seq": "24,43"
      }
    ],
    "id": "c6aec20e26bf401b81d1b6aa04ae91a5",
    "predicate mapping": [
      {
        "label": "live",
        "uri": "http://dbpedia.org/property/residence",
        "seq": "21,22",
        "mappedBy": "miss"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "For how many different teams have Ontarians been drafted ?",
    "SerialNumber": "230",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/placeOfBirth\u003e \u003chttp://dbpedia.org/resource/Ontario\u003e . ?x \u003chttp://dbpedia.org/ontology/draftTeam\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ontaria",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ontario",
        "seq": "34,41"
      }
    ],
    "id": "859ca6438ab1484a8e5317f11e6d7dba",
    "predicate mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/property/placeOfBirth",
        "seq": "13,21",
        "mappedBy": "NA"
      },
      {
        "label": "drafted",
        "uri": "http://dbpedia.org/ontology/draftTeam",
        "seq": "49,56",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which Fox  show is presented by Ryan Seacrest?",
    "SerialNumber": "231",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/presenter\u003e \u003chttp://dbpedia.org/resource/Ryan_Seacrest\u003e . ?uri \u003chttp://dbpedia.org/property/channel\u003e \u003chttp://dbpedia.org/resource/Fox_Broadcasting_Company\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ryan Seacrest",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ryan_Seacrest",
        "seq": "32,45"
      },
      {
        "label": "Fox",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Fox_Broadcasting_Company",
        "seq": "999,1000"
      }
    ],
    "id": "10c87cc916094a9a81664a0eed9decea",
    "predicate mapping": [
      {
        "label": "presented",
        "uri": "http://dbpedia.org/ontology/presenter",
        "seq": "19,28",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/property/channel",
        "seq": "32,35",
        "mappedBy": "miss"
      },
      {
        "label": "show is",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "11,18",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "405",
    "question": "How many rivers are crossed by different Box Girder bridges?",
    "SerialNumber": "232",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/design\u003e \u003chttp://dbpedia.org/resource/Box_girder_bridge\u003e . ?x \u003chttp://dbpedia.org/property/crosses\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/River\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Box Girder bridge",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Box_girder_bridge",
        "seq": "41,58"
      }
    ],
    "id": "21dcb126b1924db68d44a389f565f443",
    "predicate mapping": [
      {
        "label": "bridges",
        "uri": "http://dbpedia.org/property/design",
        "seq": "52,58",
        "mappedBy": "NA"
      },
      {
        "label": "crossed",
        "uri": "http://dbpedia.org/property/crosses",
        "seq": "20,27",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What railway lines go through the stations maintained by Western Australian Public Transport Authority?",
    "SerialNumber": "234",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/owningOrganisation\u003e \u003chttp://dbpedia.org/resource/Public_Transport_Authority_(Western_Australia)\u003e . ?x \u003chttp://dbpedia.org/ontology/servingRailwayLine\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Station\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Western Australian Public Transport Authority",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Public_Transport_Authority_(Western_Australia)",
        "seq": "76,102"
      }
    ],
    "id": "3b7070ada99b44be80d9025524919a86",
    "predicate mapping": [
      {
        "label": "maintained by",
        "uri": "http://dbpedia.org/ontology/owningOrganisation",
        "seq": "34,41",
        "mappedBy": "miss"
      },
      {
        "label": "railway lines",
        "uri": "http://dbpedia.org/ontology/servingRailwayLine",
        "seq": "5,12",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "station",
        "uri": "http://dbpedia.org/ontology/Station",
        "seq": "34,41",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "What sporting goods companies are located in Herzogenaurach?",
    "SerialNumber": "239",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/location\u003e \u003chttp://dbpedia.org/resource/Herzogenaurach\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Herzogenaurach",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Herzogenaurach",
        "seq": "45,59"
      }
    ],
    "id": "d07c4caf5e9b42379ae12c0f145c97dc",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/property/location",
        "seq": "34,40",
        "mappedBy": "miss"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What genre of games are made by Blizzard Entertainment studios?",
    "SerialNumber": "241",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/developer\u003e \u003chttp://dbpedia.org/resource/Blizzard_Entertainment\u003e . ?x \u003chttp://dbpedia.org/property/genre\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/VideoGame\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Blizzard Entertainment studios",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Blizzard_Entertainment",
        "seq": "32,54"
      }
    ],
    "id": "c98f57f9e1cc479eb0dcea4abd33d23a",
    "predicate mapping": [
      {
        "label": "made",
        "uri": "http://dbpedia.org/ontology/developer",
        "seq": "24,27",
        "mappedBy": "miss"
      },
      {
        "label": "genre",
        "uri": "http://dbpedia.org/property/genre",
        "seq": "5,10",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "games",
        "uri": "http://dbpedia.org/ontology/VideoGame",
        "seq": "14,19",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who built the stadium which was rented by Costa Rica national football team?",
    "SerialNumber": "243",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/tenants\u003e \u003chttp://dbpedia.org/resource/Costa_Rica_national_football_team\u003e . ?x \u003chttp://dbpedia.org/ontology/builder\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Stadium\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Costa Rica national football team",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Costa_Rica_national_football_team",
        "seq": "42,75"
      }
    ],
    "id": "0975db6bce494a3ca9713353d0589ad3",
    "predicate mapping": [
      {
        "label": "rented by",
        "uri": "http://dbpedia.org/property/tenants",
        "seq": "71,74",
        "mappedBy": "miss"
      },
      {
        "label": "built",
        "uri": "http://dbpedia.org/ontology/builder",
        "seq": "4,9",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "stadium",
        "uri": "http://dbpedia.org/ontology/Stadium",
        "seq": "14,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "101",
    "question": "Count all the scientologists.",
    "SerialNumber": "246",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/ontology/religion\u003e \u003chttp://dbpedia.org/resource/Scientology\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "scientologi",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Scientology",
        "seq": "14,25"
      }
    ],
    "id": "eeeeba8f2afb457886b8942434d292ac",
    "predicate mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/ontology/religion",
        "seq": "0,4",
        "mappedBy": "NA"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "How many genres of games can I find on the commodore CDTV?",
    "SerialNumber": "250",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/computingPlatform\u003e \u003chttp://dbpedia.org/resource/Commodore_CDTV\u003e . ?x \u003chttp://dbpedia.org/ontology/genre\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "commodore CDTV",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Commodore_CDTV",
        "seq": "43,57"
      }
    ],
    "id": "573991970f0e4f4c84b043e20bedf9ef",
    "predicate mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/ontology/computingPlatform",
        "seq": "43,51",
        "mappedBy": "NA"
      },
      {
        "label": "genre",
        "uri": "http://dbpedia.org/ontology/genre",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "List the cast member of the movies whose producer is Mark Johnson.",
    "SerialNumber": "251",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/producer\u003e \u003chttp://dbpedia.org/resource/Mark_Johnson_(producer)\u003e . ?x \u003chttp://dbpedia.org/ontology/starring\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Mark Johnson",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Mark_Johnson_(producer)",
        "seq": "53,65"
      }
    ],
    "id": "8e4a97eb98a546acb53208b55d2b191a",
    "predicate mapping": [
      {
        "label": "producer",
        "uri": "http://dbpedia.org/ontology/producer",
        "seq": "41,49",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "cast member",
        "uri": "http://dbpedia.org/ontology/starring",
        "seq": "53,56",
        "mappedBy": "miss"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "28,33",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "403",
    "question": "In how many  territories were the wars fought where Fusil Gras Mile 1874 were used?",
    "SerialNumber": "253",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { \u003chttp://dbpedia.org/resource/Fusil_Gras_mle_1874\u003e \u003chttp://dbpedia.org/ontology/usedInWar\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/territory\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MilitaryConflict\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Fusil Gras Mile 1874",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Fusil_Gras_mle_1874",
        "seq": "68,72"
      }
    ],
    "id": "229566aad8594cd09f94da93dbe723fb",
    "predicate mapping": [
      {
        "label": "used",
        "uri": "http://dbpedia.org/ontology/usedInWar",
        "seq": "78,82",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "territories",
        "uri": "http://dbpedia.org/ontology/territory",
        "seq": "13,24",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "wars",
        "uri": "http://dbpedia.org/ontology/MilitaryConflict",
        "seq": "63,66",
        "mappedBy": "miss"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Where do the CNN employees typically graduate from?",
    "SerialNumber": "257",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/employer\u003e \u003chttp://dbpedia.org/resource/CNN\u003e . ?x \u003chttp://dbpedia.org/ontology/almaMater\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "CNN",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/CNN",
        "seq": "13,16"
      }
    ],
    "id": "7b8f4f86aea64af6bca2e94f317956c2",
    "predicate mapping": [
      {
        "label": "employees",
        "uri": "http://dbpedia.org/property/employer",
        "seq": "17,25",
        "mappedBy": "miss"
      },
      {
        "label": "graduate",
        "uri": "http://dbpedia.org/ontology/almaMater",
        "seq": "37,45",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who has stock in the railway lines managed by Norfolk Southern Railway?",
    "SerialNumber": "258",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/system\u003e \u003chttp://dbpedia.org/resource/Norfolk_Southern_Railway\u003e . ?x \u003chttp://dbpedia.org/property/owner\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/RailwayLine\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Norfolk Southern Railway",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Norfolk_Southern_Railway",
        "seq": "46,70"
      }
    ],
    "id": "3de0478033a3450e981f4086b2f53e3e",
    "predicate mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/property/system",
        "seq": "17,19",
        "mappedBy": "NA"
      },
      {
        "label": "managed",
        "uri": "http://dbpedia.org/property/owner",
        "seq": "54,61",
        "mappedBy": "miss"
      },
      {
        "label": "railway line",
        "uri": "http://dbpedia.org/ontology/RailwayLine",
        "seq": "21,33",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Do the asiana airlines fly  to Jeju airport?",
    "SerialNumber": "265",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Asiana_Airlines\u003e \u003chttp://dbpedia.org/ontology/targetAirport\u003e \u003chttp://dbpedia.org/resource/Jeju_International_Airport\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "asiana airlines",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Asiana_Airlines",
        "seq": "7,22"
      },
      {
        "label": "Jeju airport",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Jeju_International_Airport",
        "seq": "999,1000"
      }
    ],
    "id": "89044eb32d9442b1b3b0e8dab3d7a99d",
    "predicate mapping": [
      {
        "label": "fly",
        "uri": "http://dbpedia.org/ontology/targetAirport",
        "seq": "36,43",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Which motion picture stories were edited by Ishir Honda?",
    "SerialNumber": "268",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/writer\u003e \u003chttp://dbpedia.org/resource/Ishirō_Honda\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ishir Honda",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Ishirō_Honda",
        "seq": "44,55"
      }
    ],
    "id": "c937de2356174723a6ec3e5563b02fa8",
    "predicate mapping": [
      {
        "label": "edited by",
        "uri": "http://dbpedia.org/ontology/writer",
        "seq": "29,32",
        "mappedBy": "miss"
      },
      {
        "label": "motion picture",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "0,4",
        "mappedBy": "miss"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "What is the location of death of the skier who was the bronze medalist of Alpine skiing at the 1964 Winter Olympics  Men\u0027s slalom ?",
    "SerialNumber": "269",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Alpine_skiing_at_the_1964_Winter_Olympics_–_Men\u0027s_slalom\u003e \u003chttp://dbpedia.org/ontology/bronzeMedalist\u003e ?x . ?x \u003chttp://dbpedia.org/property/deathPlace\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Skier\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Alpine skiing at the 1964 Winter Olympics  Men\u0027s slalom",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Alpine_skiing_at_the_1964_Winter_Olympics_–_Men\u0027s_slalom",
        "seq": "999,1000"
      }
    ],
    "id": "938480f17cdc4fbfaa215a3e4217843d",
    "predicate mapping": [
      {
        "label": "bronze medalist",
        "uri": "http://dbpedia.org/ontology/bronzeMedalist",
        "seq": "55,70",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "location of death",
        "uri": "http://dbpedia.org/property/deathPlace",
        "seq": "12,29",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "skier",
        "uri": "http://dbpedia.org/ontology/Skier",
        "seq": "37,42",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Where all does the sister station of virgin radio play?",
    "SerialNumber": "270",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/sisterStation\u003e \u003chttp://dbpedia.org/resource/Virgin_Radio\u003e . ?x \u003chttp://dbpedia.org/property/location\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "virgin radio",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Virgin_Radio",
        "seq": "37,49"
      }
    ],
    "id": "745acda3a54043fab3bafce782bae4f9",
    "predicate mapping": [
      {
        "label": "sister station",
        "uri": "http://dbpedia.org/ontology/sisterStation",
        "seq": "19,33",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "Where",
        "uri": "http://dbpedia.org/property/location",
        "seq": "26,32",
        "mappedBy": "miss"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the affiliation of tani University ?",
    "SerialNumber": "271",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Ōtani_University\u003e \u003chttp://dbpedia.org/property/affiliation\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "tani University",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Ōtani_University",
        "seq": "999,1000"
      }
    ],
    "id": "549f424393e345c0b173231ac5954fd1",
    "predicate mapping": [
      {
        "label": "affiliation",
        "uri": "http://dbpedia.org/property/affiliation",
        "seq": "12,23",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "Which rivers originate from Dowra?",
    "SerialNumber": "272",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/sourceMountain\u003e \u003chttp://dbpedia.org/resource/Dowra\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Dowra",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Dowra",
        "seq": "28,33"
      }
    ],
    "id": "2069abd16c734d1f8e9758bea35da77d",
    "predicate mapping": [
      {
        "label": "originate",
        "uri": "http://dbpedia.org/ontology/sourceMountain",
        "seq": "13,21",
        "mappedBy": "miss"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who was the architect of the stadium currently run by the Pittsburgh Pirates?",
    "SerialNumber": "273",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/operator\u003e \u003chttp://dbpedia.org/resource/Pittsburgh_Pirates\u003e . ?x \u003chttp://dbpedia.org/property/architect\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Stadium\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Pittsburgh Pirates",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Pittsburgh_Pirates",
        "seq": "58,76"
      }
    ],
    "id": "4d1bbe0ed05744749e253c143259609c",
    "predicate mapping": [
      {
        "label": "run by",
        "uri": "http://dbpedia.org/property/operator",
        "seq": "69,75",
        "mappedBy": "miss"
      },
      {
        "label": "architect",
        "uri": "http://dbpedia.org/property/architect",
        "seq": "12,21",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "stadium",
        "uri": "http://dbpedia.org/ontology/Stadium",
        "seq": "29,36",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "401",
    "question": "How many TV shows have been created by Simon Fuller ?",
    "SerialNumber": "274",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/property/creator\u003e \u003chttp://dbpedia.org/resource/Simon_Fuller\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Simon Fuller",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Simon_Fuller",
        "seq": "39,51"
      }
    ],
    "id": "876df0eecd7c4e78a79daa9a1e7b3343",
    "predicate mapping": [
      {
        "label": "created",
        "uri": "http://dbpedia.org/property/creator",
        "seq": "28,34",
        "mappedBy": "miss"
      },
      {
        "label": "TV shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "39,43",
        "mappedBy": "miss"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Did Henry Ford design the Model C?",
    "SerialNumber": "276",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Ford_Model_C\u003e \u003chttp://dbpedia.org/ontology/designCompany\u003e \u003chttp://dbpedia.org/resource/Henry_Ford\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Model C",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Ford_Model_C",
        "seq": "999,1000"
      },
      {
        "label": "Henry Ford",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Henry_Ford",
        "seq": "4,14"
      }
    ],
    "id": "4d489bcad0334bd58b83cdeedbd1c5ec",
    "predicate mapping": [
      {
        "label": "design",
        "uri": "http://dbpedia.org/ontology/designCompany",
        "seq": "15,21",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "WHich region of the Providence Chapel, Charlwood is also the region of the Joseph Case High School",
    "SerialNumber": "278",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Providence_Chapel,_Charlwood\u003e \u003chttp://dbpedia.org/property/style\u003e ?uri. \u003chttp://dbpedia.org/resource/Joseph_Case_High_School\u003e \u003chttp://dbpedia.org/ontology/region\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Providence Chapel, Charlwood",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Providence_Chapel,_Charlwood",
        "seq": "20,48"
      },
      {
        "label": "Joseph Case High School",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Joseph_Case_High_School",
        "seq": "75,98"
      }
    ],
    "id": "09b0466736b646098262ca3fce5092aa",
    "predicate mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/property/style",
        "seq": "16,18",
        "mappedBy": "NA"
      },
      {
        "label": "region",
        "uri": "http://dbpedia.org/ontology/region",
        "seq": "6,12",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the scientist whose supervisor was John Robert Woodyard and has won Norbert Wiener Award for Social and Professional Responsibility?",
    "SerialNumber": "279",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/doctoralAdvisor\u003e \u003chttp://dbpedia.org/resource/John_Robert_Woodyard\u003e . ?uri \u003chttp://dbpedia.org/property/prizes\u003e \u003chttp://dbpedia.org/resource/Norbert_Wiener_Award_for_Social_and_Professional_Responsibility\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Scientist\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "John Robert Woodyard",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/John_Robert_Woodyard",
        "seq": "40,60"
      },
      {
        "label": "Norbert Wiener Award for Social and Professional Responsibility",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Norbert_Wiener_Award_for_Social_and_Professional_Responsibility",
        "seq": "73,136"
      }
    ],
    "id": "2cc0b2ad617642aaace9eab113615942",
    "predicate mapping": [
      {
        "label": "supervisor",
        "uri": "http://dbpedia.org/property/doctoralAdvisor",
        "seq": "25,35",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "won",
        "uri": "http://dbpedia.org/property/prizes",
        "seq": "109,120",
        "mappedBy": "miss"
      },
      {
        "label": "scientist",
        "uri": "http://dbpedia.org/ontology/Scientist",
        "seq": "9,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "315",
    "question": "Which branch of american military have both George Siebels jr and Leroy Collins served?",
    "SerialNumber": "280",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/George_G._Siebels,_Jr.\u003e \u003chttp://dbpedia.org/property/branch\u003e ?uri. \u003chttp://dbpedia.org/resource/LeRoy_Collins\u003e \u003chttp://dbpedia.org/property/branch\u003e ?uri . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MilitaryUnit\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "George Siebels jr",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/George_G._Siebels,_Jr.",
        "seq": "999,1000"
      },
      {
        "label": "Leroy Collins",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/LeRoy_Collins",
        "seq": "66,79"
      }
    ],
    "id": "5091ad9fb7954f7b90ab7da686543728",
    "predicate mapping": [
      {
        "label": "branch",
        "uri": "http://dbpedia.org/property/branch",
        "seq": "6,12",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "branch",
        "uri": "http://dbpedia.org/property/branch",
        "seq": "6,12",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "military",
        "uri": "http://dbpedia.org/ontology/MilitaryUnit",
        "seq": "25,33",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What are some relatives of armymen who died in Germany?",
    "SerialNumber": "281",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/placeOfDeath\u003e \u003chttp://dbpedia.org/resource/Germany\u003e . ?x \u003chttp://dbpedia.org/ontology/relation\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MilitaryPerson\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Germany",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Germany",
        "seq": "47,54"
      }
    ],
    "id": "c4d7c24ab2a34c4ea2ff5945ba35ef69",
    "predicate mapping": [
      {
        "label": "died",
        "uri": "http://dbpedia.org/property/placeOfDeath",
        "seq": "14,22",
        "mappedBy": "miss"
      },
      {
        "label": "relatives",
        "uri": "http://dbpedia.org/ontology/relation",
        "seq": "14,22",
        "mappedBy": "miss"
      },
      {
        "label": "armymen",
        "uri": "http://dbpedia.org/ontology/MilitaryPerson",
        "seq": "27,33",
        "mappedBy": "miss"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What is the college of the baseball player who lives in Ashton Historic district?",
    "SerialNumber": "284",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/birthPlace\u003e \u003chttp://dbpedia.org/resource/Ashton_Historic_District\u003e . ?x \u003chttp://dbpedia.org/property/college\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/BaseballPlayer\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ashton Historic district",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ashton_Historic_District",
        "seq": "58,82"
      }
    ],
    "id": "6bd921a06e6e42a39a5c041bfb20eb9e",
    "predicate mapping": [
      {
        "label": "lives",
        "uri": "http://dbpedia.org/property/birthPlace",
        "seq": "38,43",
        "mappedBy": "miss"
      },
      {
        "label": "college",
        "uri": "http://dbpedia.org/property/college",
        "seq": "12,19",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "baseball player",
        "uri": "http://dbpedia.org/ontology/BaseballPlayer",
        "seq": "27,36",
        "mappedBy": "corrected"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Greater Napanee is the home town of what people?",
    "SerialNumber": "285",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/hometown\u003e \u003chttp://dbpedia.org/resource/Greater_Napanee\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Greater Napanee",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Greater_Napanee",
        "seq": "0,15"
      }
    ],
    "id": "489c3ac08b304bbaae50df383689eebe",
    "predicate mapping": [
      {
        "label": "home town",
        "uri": "http://dbpedia.org/ontology/hometown",
        "seq": "23,32",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "people",
        "uri": "http://dbpedia.org/ontology/Person",
        "seq": "41,46",
        "mappedBy": "miss"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the company founded in US and provides OneDrive as service ?",
    "SerialNumber": "288",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/services\u003e \u003chttp://dbpedia.org/resource/OneDrive\u003e . ?uri \u003chttp://dbpedia.org/property/foundation\u003e \u003chttp://dbpedia.org/resource/United_States\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Company\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "OneDrive",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/OneDrive",
        "seq": "44,52"
      },
      {
        "label": "US",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/United_States",
        "seq": "999,1000"
      }
    ],
    "id": "2a6c65a45e7249bebfda9d7ab36715ad",
    "predicate mapping": [
      {
        "label": "service",
        "uri": "http://dbpedia.org/property/services",
        "seq": "56,63",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "founded",
        "uri": "http://dbpedia.org/property/foundation",
        "seq": "17,24",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company",
        "seq": "9,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "405",
    "question": "How many currencies are in used in places where people speak French?",
    "SerialNumber": "293",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/officialLanguage\u003e \u003chttp://dbpedia.org/resource/French_language\u003e . ?x \u003chttp://dbpedia.org/ontology/currency\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Currency\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "French",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/French_language",
        "seq": "61,67"
      }
    ],
    "id": "2ffbfa007109419280e603e3a3512ac9",
    "predicate mapping": [
      {
        "label": "speak",
        "uri": "http://dbpedia.org/ontology/officialLanguage",
        "seq": "35,40",
        "mappedBy": "miss"
      },
      {
        "label": "currencies",
        "uri": "http://dbpedia.org/ontology/currency",
        "seq": "9,19",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "currencies",
        "uri": "http://dbpedia.org/ontology/Currency",
        "seq": "9,19",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "What political party has governed both in Baraily,MP and Jowai?",
    "SerialNumber": "294",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Baraily\u003e \u003chttp://dbpedia.org/ontology/leaderName\u003e ?uri. \u003chttp://dbpedia.org/resource/Jowai\u003e \u003chttp://dbpedia.org/ontology/leaderName\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Baraily",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Baraily",
        "seq": "42,49"
      },
      {
        "label": "Jowai",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Jowai",
        "seq": "57,62"
      }
    ],
    "id": "6701db8180aa493ba901a225bd9a6ff2",
    "predicate mapping": [
      {
        "label": "governed",
        "uri": "http://dbpedia.org/ontology/leaderName",
        "seq": "25,32",
        "mappedBy": "miss"
      },
      {
        "label": "governed",
        "uri": "http://dbpedia.org/ontology/leaderName",
        "seq": "25,32",
        "mappedBy": "miss"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Which officers fought in the war of Siege of Fort Recovery?",
    "SerialNumber": "295",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/battle\u003e \u003chttp://dbpedia.org/resource/Siege_of_Fort_Recovery\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/OfficeHolder\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Siege of Fort Recovery",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Siege_of_Fort_Recovery",
        "seq": "36,58"
      }
    ],
    "id": "5ff2409a01034c5ba98c340602657d3b",
    "predicate mapping": [
      {
        "label": "war",
        "uri": "http://dbpedia.org/ontology/battle",
        "seq": "29,32",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "officers",
        "uri": "http://dbpedia.org/ontology/OfficeHolder",
        "seq": "6,13",
        "mappedBy": "miss"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Was Duanne Allman known to play the Les Paul?",
    "SerialNumber": "297",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Duane_Allman\u003e \u003chttp://dbpedia.org/property/notableInstruments\u003e \u003chttp://dbpedia.org/resource/Gibson_Les_Paul\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Duanne Allman",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Duane_Allman",
        "seq": "999,1000"
      },
      {
        "label": "Les Paul",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Gibson_Les_Paul",
        "seq": "999,1000"
      }
    ],
    "id": "4eba9f2aaa744ba699fd23239145e64b",
    "predicate mapping": [
      {
        "label": "known to play",
        "uri": "http://dbpedia.org/property/notableInstruments",
        "seq": "11,16",
        "mappedBy": "miss"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "For which other teams do members of tanzanian national football team play?",
    "SerialNumber": "298",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/nationalteam\u003e \u003chttp://dbpedia.org/resource/Tanzania_national_football_team\u003e . ?x \u003chttp://dbpedia.org/ontology/team\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "tanzanian national football",
        "uri": "http://dbpedia.org/resource/Tanzania_national_football_team",
        "seq": "999,1000"
      }
    ],
    "id": "aaab23649cce43d6957cdd09c3a4ea47",
    "predicate mapping": [
      {
        "label": "national team",
        "uri": "http://dbpedia.org/property/nationalteam",
        "seq": "-1,12",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "teams",
        "uri": "http://dbpedia.org/ontology/team",
        "seq": "16,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is Jon Speelman famous for?",
    "SerialNumber": "302",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Jon_Speelman\u003e \u003chttp://dbpedia.org/ontology/field\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jon Speelman",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Jon_Speelman",
        "seq": "8,20"
      }
    ],
    "id": "b83ff0ecbd954891879ab98e725eb333",
    "predicate mapping": [
      {
        "label": "famous",
        "uri": "http://dbpedia.org/ontology/field",
        "seq": "12,19",
        "mappedBy": "miss"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "tonle sap flows into which river?",
    "SerialNumber": "307",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/rightTributary\u003e \u003chttp://dbpedia.org/resource/Tonlé_Sap\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "tonle sap",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Tonlé_Sap",
        "seq": "0,9"
      }
    ],
    "id": "c1149b9f20bf470fad0154de4f2e72b7",
    "predicate mapping": [
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/rightTributary",
        "seq": "27,31",
        "mappedBy": "miss"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "List some teammates of Ndonga Mianga?",
    "SerialNumber": "309",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/currentMember\u003e \u003chttp://dbpedia.org/resource/Ndonga_Mianga\u003e . ?x \u003chttp://dbpedia.org/property/name\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ndonga Mianga",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ndonga_Mianga",
        "seq": "23,36"
      }
    ],
    "id": "f0f45ed050d342e9bfdffc12670f1bfc",
    "predicate mapping": [
      {
        "label": "teammates",
        "uri": "http://dbpedia.org/ontology/currentMember",
        "seq": "10,18",
        "mappedBy": "miss"
      },
      {
        "label": "",
        "uri": "http://dbpedia.org/property/name",
        "seq": "5,8",
        "mappedBy": "NA"
      }
    ]
  },
  {
    "sparql_id": "106",
    "question": "Give me a count of everything under the archipelago, where Papeete is the biggest town.",
    "SerialNumber": "310",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/largestCity\u003e \u003chttp://dbpedia.org/resource/Papeete\u003e . ?uri \u003chttp://dbpedia.org/property/archipelago\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Papeete",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Papeete",
        "seq": "59,66"
      }
    ],
    "id": "3922223c92bd4c62a2b341fe8c73879c",
    "predicate mapping": [
      {
        "label": "biggest town",
        "uri": "http://dbpedia.org/ontology/largestCity",
        "seq": "74,80",
        "mappedBy": "miss"
      },
      {
        "label": "archipelago",
        "uri": "http://dbpedia.org/property/archipelago",
        "seq": "40,51",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Where is Benjamin Franklin Terry buried, and US Route 59 has a junction?",
    "SerialNumber": "314",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Benjamin_Franklin_Terry\u003e \u003chttp://dbpedia.org/property/placeofburial\u003e ?uri. \u003chttp://dbpedia.org/resource/U.S._Route_59_in_Texas\u003e \u003chttp://dbpedia.org/property/junction\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Benjamin Franklin Terry",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Benjamin_Franklin_Terry",
        "seq": "9,32"
      },
      {
        "label": "US Route 59",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/U.S._Route_59_in_Texas",
        "seq": "999,1000"
      }
    ],
    "id": "f86ad7519a244286acaa2a1bf42446cf",
    "predicate mapping": [
      {
        "label": "buried,",
        "uri": "http://dbpedia.org/property/placeofburial",
        "seq": "33,39",
        "mappedBy": "miss"
      },
      {
        "label": "junction",
        "uri": "http://dbpedia.org/property/junction",
        "seq": "63,71",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Where were the doctoral students of James Langer born?",
    "SerialNumber": "315",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/James_S._Langer\u003e \u003chttp://dbpedia.org/ontology/doctoralStudent\u003e ?x . ?x \u003chttp://dbpedia.org/property/placeOfBirth\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "James Langer",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/James_S._Langer",
        "seq": "36,48"
      }
    ],
    "id": "d50f2ea2f8f0440c87444bcf085f6899",
    "predicate mapping": [
      {
        "label": "doctoral student",
        "uri": "http://dbpedia.org/ontology/doctoralStudent",
        "seq": "15,31",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "born",
        "uri": "http://dbpedia.org/property/placeOfBirth",
        "seq": "42,47",
        "mappedBy": "miss"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Was A foreign policy on freedom covered by John Trumbull?",
    "SerialNumber": "316",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/A_Foreign_Policy_of_Freedom\u003e \u003chttp://dbpedia.org/property/coverArtist\u003e \u003chttp://dbpedia.org/resource/John_Trumbull\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "freedom foreign policy",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/A_Foreign_Policy_of_Freedom",
        "seq": "999,1000"
      },
      {
        "label": "John Trumbull",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/John_Trumbull",
        "seq": "43,56"
      }
    ],
    "id": "e6f3d395b66f485cb8901bfbcb1c4c0c",
    "predicate mapping": [
      {
        "label": "covered",
        "uri": "http://dbpedia.org/property/coverArtist",
        "seq": "32,39",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What company\u0027s leader is Edwin Catmull?",
    "SerialNumber": "318",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/keyPeople\u003e \u003chttp://dbpedia.org/resource/Edwin_Catmull\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Company\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Edwin Catmull",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Edwin_Catmull",
        "seq": "25,38"
      }
    ],
    "id": "9650115540914f179ceb06bf8beef981",
    "predicate mapping": [
      {
        "label": "leader",
        "uri": "http://dbpedia.org/property/keyPeople",
        "seq": "15,20",
        "mappedBy": "miss"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company",
        "seq": "5,12",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "What are some companies which are founded in Dallas Jurisdiction?",
    "SerialNumber": "321",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/governingBody\u003e \u003chttp://dbpedia.org/resource/Dallas\u003e . ?uri \u003chttp://dbpedia.org/ontology/foundationPlace\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Company\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Dallas",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Dallas",
        "seq": "45,51"
      }
    ],
    "id": "4b257aeff6b340ebb07ca27538749ed4",
    "predicate mapping": [
      {
        "label": "Jusrisdiction",
        "uri": "http://dbpedia.org/property/governingBody",
        "seq": "34,40",
        "mappedBy": "miss"
      },
      {
        "label": "founded",
        "uri": "http://dbpedia.org/ontology/foundationPlace",
        "seq": "34,41",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "companies",
        "uri": "http://dbpedia.org/ontology/Company",
        "seq": "14,23",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which philosophy journal has compiler as Stephen Law ?",
    "SerialNumber": "323",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/editor\u003e \u003chttp://dbpedia.org/resource/Stephen_Law\u003e . ?uri \u003chttp://dbpedia.org/property/discipline\u003e \u003chttp://dbpedia.org/resource/Philosophy\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/AcademicJournal\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Stephen Law",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Stephen_Law",
        "seq": "41,52"
      },
      {
        "label": "philosophy",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Philosophy",
        "seq": "6,16"
      }
    ],
    "id": "01710e1b53c94aaf85bd50e8344efefa",
    "predicate mapping": [
      {
        "label": "compiler",
        "uri": "http://dbpedia.org/property/editor",
        "seq": "29,37",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "",
        "uri": "http://dbpedia.org/property/discipline",
        "seq": "29,36",
        "mappedBy": "NA"
      },
      {
        "label": "journal",
        "uri": "http://dbpedia.org/ontology/AcademicJournal",
        "seq": "17,24",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "In which country is there a political party whose leader is Jose Cha Cha Jimenez?",
    "SerialNumber": "326",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/leader\u003e \u003chttp://dbpedia.org/resource/Jose_Cha_Cha_Jimenez\u003e . ?x \u003chttp://dbpedia.org/property/international\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/PoliticalParty\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jose Cha Cha Jimenez",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Jose_Cha_Cha_Jimenez",
        "seq": "60,80"
      }
    ],
    "id": "023818b03dce457481b4859b9adf89c5",
    "predicate mapping": [
      {
        "label": "leader",
        "uri": "http://dbpedia.org/property/leader",
        "seq": "50,56",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "",
        "uri": "http://dbpedia.org/property/international",
        "seq": "28,36",
        "mappedBy": "NA"
      },
      {
        "label": "political party",
        "uri": "http://dbpedia.org/ontology/PoliticalParty",
        "seq": "28,43",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which mascot of Celal Bayer university is also the nickname of kore Presbyterian Theological Seminar ?",
    "SerialNumber": "329",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Korea_Presbyterian_Theological_Seminary\u003e \u003chttp://dbpedia.org/property/nickname\u003e ?uri. \u003chttp://dbpedia.org/resource/Celal_Bayar_University\u003e \u003chttp://dbpedia.org/property/mascot\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "kore Presbyterian Theological Seminar",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Korea_Presbyterian_Theological_Seminary",
        "seq": "999,1000"
      },
      {
        "label": "Celal Bayer university",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Celal_Bayar_University",
        "seq": "999,1000"
      }
    ],
    "id": "aa123035cddf49b293de9bdddbd4fcf9",
    "predicate mapping": [
      {
        "label": "nickname",
        "uri": "http://dbpedia.org/property/nickname",
        "seq": "51,59",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "mascot",
        "uri": "http://dbpedia.org/property/mascot",
        "seq": "6,12",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "Give me some series related to the one which had Yasmin Paige in them.",
    "SerialNumber": "331",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/starring\u003e \u003chttp://dbpedia.org/resource/Yasmin_Paige\u003e . ?uri \u003chttp://dbpedia.org/ontology/related\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Yasmin Paige",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Yasmin_Paige",
        "seq": "49,61"
      }
    ],
    "id": "f2e2e1b4a67049c092236c11cfbef795",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/property/starring",
        "seq": "56,60",
        "mappedBy": "miss"
      },
      {
        "label": "related",
        "uri": "http://dbpedia.org/ontology/related",
        "seq": "20,27",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "series",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "49,54",
        "mappedBy": "miss"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "With whom is Heinz Kokott a relative to who also served Nazi Army?",
    "SerialNumber": "332",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Heinz_Kokott\u003e \u003chttp://dbpedia.org/ontology/relation\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Heinz Kokott",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Heinz_Kokott",
        "seq": "13,25"
      }
    ],
    "id": "32db83b5ad5b4e198ff2e7e7eee6f790",
    "predicate mapping": [
      {
        "label": "relative",
        "uri": "http://dbpedia.org/ontology/relation",
        "seq": "28,35",
        "mappedBy": "miss"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What are the towns who have Thesaban system?",
    "SerialNumber": "337",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/settlementType\u003e \u003chttp://dbpedia.org/resource/Thesaban\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Town\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Thesaban",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Thesaban",
        "seq": "28,36"
      }
    ],
    "id": "07133019a5a74f7f83b418752c785bbf",
    "predicate mapping": [
      {
        "label": "system",
        "uri": "http://dbpedia.org/property/settlementType",
        "seq": "37,42",
        "mappedBy": "miss"
      },
      {
        "label": "town",
        "uri": "http://dbpedia.org/ontology/Town",
        "seq": "13,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which TV show\u0027s  opening theme is The Best of Both Worlds (song) and executive producer is Steven Peterman?",
    "SerialNumber": "341",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/openingTheme\u003e \u003chttp://dbpedia.org/resource/The_Best_of_Both_Worlds_(song)\u003e . ?uri \u003chttp://dbpedia.org/property/executiveProducer\u003e \u003chttp://dbpedia.org/resource/Steven_Peterman\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "The Best of Both Worlds (song)",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Best_of_Both_Worlds_(song)",
        "seq": "34,64"
      },
      {
        "label": "Steven Peterman",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Steven_Peterman",
        "seq": "91,106"
      }
    ],
    "id": "53a9beca92384cdda4e74205f5800cb0",
    "predicate mapping": [
      {
        "label": "opening theme",
        "uri": "http://dbpedia.org/ontology/openingTheme",
        "seq": "17,30",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "executive producer",
        "uri": "http://dbpedia.org/property/executiveProducer",
        "seq": "69,87",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "TV show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "91,96",
        "mappedBy": "miss"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Paul Morphy compiled journals of which field?",
    "SerialNumber": "343",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/editor\u003e \u003chttp://dbpedia.org/resource/Paul_Morphy\u003e . ?x \u003chttp://dbpedia.org/property/discipline\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Paul Morphy",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Paul_Morphy",
        "seq": "0,11"
      }
    ],
    "id": "337774a6b5bc4fb4bdf86ecb5abf0a33",
    "predicate mapping": [
      {
        "label": "compiled",
        "uri": "http://dbpedia.org/property/editor",
        "seq": "5,10",
        "mappedBy": "miss"
      },
      {
        "label": "field",
        "uri": "http://dbpedia.org/property/discipline",
        "seq": "12,19",
        "mappedBy": "miss"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "In which city is Corringham railway station located?",
    "SerialNumber": "354",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Corringham_railway_station\u003e \u003chttp://dbpedia.org/property/borough\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Corringham railway station",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Corringham_railway_station",
        "seq": "17,43"
      }
    ],
    "id": "00a22ab72d9d4286a7d3d61c4d67c0b4",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/property/borough",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Did stan lee narrate the incredible hulk tv show?",
    "SerialNumber": "355",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/The_Incredible_Hulk_(1982_TV_series)\u003e \u003chttp://dbpedia.org/ontology/narrator\u003e \u003chttp://dbpedia.org/resource/Stan_Lee\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "incredible hulk",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/The_Incredible_Hulk_(1982_TV_series)",
        "seq": "25,40"
      },
      {
        "label": "stan lee",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Stan_Lee",
        "seq": "4,12"
      }
    ],
    "id": "4d935fb5d0694c4fbfba00b5d22705a2",
    "predicate mapping": [
      {
        "label": "narrate",
        "uri": "http://dbpedia.org/ontology/narrator",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Where do the sister stations of Al Khaleejiya 100.9 play?",
    "SerialNumber": "357",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/sisterStations\u003e \u003chttp://dbpedia.org/resource/Al_Khaleejiya_100.9\u003e . ?x \u003chttp://dbpedia.org/property/location\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Al Khaleejiya 100.9",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Al_Khaleejiya_100.9",
        "seq": "32,51"
      }
    ],
    "id": "fd3f2656075c476493d51a420c168054",
    "predicate mapping": [
      {
        "label": "sister stations",
        "uri": "http://dbpedia.org/property/sisterStations",
        "seq": "13,28",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "Where",
        "uri": "http://dbpedia.org/property/location",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Which sports are played in schools affiliated with the Harvest Christian Center?",
    "SerialNumber": "358",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/religiousAffiliation\u003e \u003chttp://dbpedia.org/resource/Harvest_Christian_Center\u003e . ?x \u003chttp://dbpedia.org/ontology/sport\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/School\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Harvest Christian Center",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Harvest_Christian_Center",
        "seq": "55,79"
      }
    ],
    "id": "74a2300b33df4ad6a44b4184c0c8642d",
    "predicate mapping": [
      {
        "label": "affiliated",
        "uri": "http://dbpedia.org/property/religiousAffiliation",
        "mappedBy": "word2vec"
      },
      {
        "label": "sport",
        "uri": "http://dbpedia.org/ontology/sport",
        "seq": "6,11",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "school",
        "uri": "http://dbpedia.org/ontology/School",
        "seq": "27,33",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is common between sports played at Fr Agnel School and Jr college, and the genre of Virtual Kasparov?",
    "SerialNumber": "360",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Virtual_Kasparov\u003e \u003chttp://dbpedia.org/ontology/genre\u003e ?uri. \u003chttp://dbpedia.org/resource/Fr._Agnel_Multipurpose_School_and_Junior_College\u003e \u003chttp://dbpedia.org/ontology/sport\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Virtual Kasparov",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Virtual_Kasparov",
        "seq": "89,105"
      },
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Fr._Agnel_Multipurpose_School_and_Junior_College",
        "seq": "999,1000"
      }
    ],
    "id": "4cb08818578d4dfaa26b1d3490c0610a",
    "predicate mapping": [
      {
        "label": "genre",
        "uri": "http://dbpedia.org/ontology/genre",
        "seq": "80,85",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "sport",
        "uri": "http://dbpedia.org/ontology/sport",
        "seq": "23,28",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "How many different genres of games are produced by Blizzard?",
    "SerialNumber": "362",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/developer\u003e \u003chttp://dbpedia.org/resource/Blizzard_Entertainment\u003e . ?x \u003chttp://dbpedia.org/property/genre\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "blizzard",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Blizzard_Entertainment",
        "seq": "999,1000"
      }
    ],
    "id": "9f609480ea4647028bd3694a224482f1",
    "predicate mapping": [
      {
        "label": "produced",
        "uri": "http://dbpedia.org/ontology/developer",
        "mappedBy": "word2vec"
      },
      {
        "label": "genre",
        "uri": "http://dbpedia.org/property/genre",
        "seq": "19,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the river flowing through Reading and source place as Gloucestershire ?",
    "SerialNumber": "364",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/city\u003e \u003chttp://dbpedia.org/resource/Reading,_Berkshire\u003e . ?uri \u003chttp://dbpedia.org/ontology/sourcePlace\u003e \u003chttp://dbpedia.org/resource/Gloucestershire\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/River\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "reading",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Reading,_Berkshire",
        "seq": "999,1000"
      },
      {
        "label": "Gloucestershire",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Gloucestershire",
        "seq": "59,74"
      }
    ],
    "id": "304ccd0b380a4d59a9dfc01c77cf3ec1",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/city",
        "seq": "19,21",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "source place",
        "uri": "http://dbpedia.org/ontology/sourcePlace",
        "seq": "43,55",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "List the people who were born in Gelnhausen and graduated from Pepperdine University?",
    "SerialNumber": "365",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/birthPlace\u003e \u003chttp://dbpedia.org/resource/Gelnhausen\u003e . ?uri \u003chttp://dbpedia.org/property/education\u003e \u003chttp://dbpedia.org/resource/Pepperdine_University\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Gelnhausen",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Gelnhausen",
        "seq": "33,43"
      },
      {
        "label": "Pepperdine University",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Pepperdine_University",
        "seq": "63,84"
      }
    ],
    "id": "ad3dd519fa5749e789a15373b17b25db",
    "predicate mapping": [
      {
        "label": "born in",
        "uri": "http://dbpedia.org/ontology/birthPlace",
        "seq": "25,32",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "graduated from",
        "uri": "http://dbpedia.org/property/education",
        "seq": "48,62",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "people",
        "uri": "http://dbpedia.org/ontology/Person",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "7",
    "question": "Who was in conflicts of Fort Barrancas and Gadsden?",
    "SerialNumber": "368",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/ontology/battle\u003e \u003chttp://dbpedia.org/resource/Fort_Barrancas\u003e . ?uri \u003chttp://dbpedia.org/ontology/battle\u003e \u003chttp://dbpedia.org/resource/Fort_Gadsden\u003e . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Fort Barrancas",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Fort_Barrancas",
        "seq": "24,38"
      },
      {
        "label": "gadsden fort",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Fort_Gadsden",
        "seq": "999,1000"
      }
    ],
    "id": "56d56e554afa47df8316e2975165949d",
    "predicate mapping": [
      {
        "label": "in conflict",
        "uri": "http://dbpedia.org/ontology/battle",
        "seq": "8,19",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "in conflict",
        "uri": "http://dbpedia.org/ontology/battle",
        "seq": "8,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Which university was attended by both Richard H Immerman and Franklin W Olin?",
    "SerialNumber": "369",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Richard_H._Immerman\u003e \u003chttp://dbpedia.org/property/education\u003e ?uri. \u003chttp://dbpedia.org/resource/Franklin_W._Olin\u003e \u003chttp://dbpedia.org/property/education\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "immerman richard",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Richard_H._Immerman",
        "seq": "999,1000"
      },
      {
        "label": "franklin olin",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Franklin_W._Olin",
        "seq": "999,1000"
      }
    ],
    "id": "ba2570473e36467c8a631f60944cd2bd",
    "predicate mapping": [
      {
        "label": "attended",
        "uri": "http://dbpedia.org/property/education",
        "seq": "21,29",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "attended",
        "uri": "http://dbpedia.org/property/education",
        "seq": "21,29",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "Name someone known for a project involved in the Occupation of Japan?",
    "SerialNumber": "370",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/battle\u003e \u003chttp://dbpedia.org/resource/Occupation_of_Japan\u003e . ?uri \u003chttp://dbpedia.org/property/knownFor\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Occupation of Japan",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Occupation_of_Japan",
        "seq": "49,68"
      }
    ],
    "id": "2a27443085d84446813f5a30b2152d6c",
    "predicate mapping": [
      {
        "label": "project",
        "uri": "http://dbpedia.org/ontology/battle",
        "mappedBy": "word2vec"
      },
      {
        "label": "known for",
        "uri": "http://dbpedia.org/property/knownFor",
        "seq": "13,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "What are Monrow Carell Jr Children Hospital and Vanderbilt University Medical Center both affiliated with?",
    "SerialNumber": "371",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Monroe_Carell_Jr._Children\u0027s_Hospital_at_Vanderbilt\u003e \u003chttp://dbpedia.org/property/affiliation\u003e ?uri. \u003chttp://dbpedia.org/resource/Vanderbilt_University_Medical_Center\u003e \u003chttp://dbpedia.org/property/affiliation\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "vanderbilt hospital children",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Monroe_Carell_Jr._Children\u0027s_Hospital_at_Vanderbilt",
        "seq": "999,1000"
      },
      {
        "label": "Vanderbilt University Medical Center",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Vanderbilt_University_Medical_Center",
        "seq": "48,84"
      }
    ],
    "id": "38c50543e2ca4c8ba2f11406ebb1f0c9",
    "predicate mapping": [
      {
        "label": "affiliated",
        "uri": "http://dbpedia.org/property/affiliation",
        "mappedBy": "word2vec"
      },
      {
        "label": "affiliated",
        "uri": "http://dbpedia.org/property/affiliation",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What are some cars which came before the ones on a GM B base?",
    "SerialNumber": "372",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/automobilePlatform\u003e \u003chttp://dbpedia.org/resource/GM_B_platform\u003e . ?x \u003chttp://dbpedia.org/ontology/predecessor\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Automobile\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "GM B",
        "matchedBy": "manual corrections",
        "uri": "http://dbpedia.org/resource/GM_B_platform",
        "seq": "999,1000"
      }
    ],
    "id": "5dd1957c2b5c46c4bcb3c8d94b4df437",
    "predicate mapping": [
      {
        "label": "base",
        "uri": "http://dbpedia.org/ontology/automobilePlatform",
        "mappedBy": "word2vec"
      },
      {
        "label": "before",
        "uri": "http://dbpedia.org/ontology/predecessor",
        "mappedBy": "word2vec"
      },
      {
        "label": "cars",
        "uri": "http://dbpedia.org/ontology/Automobile",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "What is the awards given to the horse whose grandson is the famous Counterpoint?",
    "SerialNumber": "374",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Counterpoint_(horse)\u003e \u003chttp://dbpedia.org/property/grandsire\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/honours\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Horse\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Counterpoint",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Counterpoint_(horse)",
        "seq": "67,79"
      }
    ],
    "id": "400f95dfb86547a18c1426b3fc417bb7",
    "predicate mapping": [
      {
        "label": "grandson",
        "uri": "http://dbpedia.org/property/grandsire",
        "mappedBy": "word2vec"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/honours",
        "seq": "12,18",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "horse",
        "uri": "http://dbpedia.org/ontology/Horse",
        "seq": "32,37",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "what kind of games can I find for PC 9800?",
    "SerialNumber": "375",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/computingPlatform\u003e \u003chttp://dbpedia.org/resource/PC-9800_Series\u003e . ?x \u003chttp://dbpedia.org/property/genre\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/VideoGame\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "9800",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/PC-9800_Series",
        "seq": "37,41"
      }
    ],
    "id": "7da5440ab8834b4ca92805e80dd7b5a2",
    "predicate mapping": [
      {
        "label": "PC",
        "uri": "http://dbpedia.org/ontology/computingPlatform",
        "mappedBy": "word2vec"
      },
      {
        "label": "kind",
        "uri": "http://dbpedia.org/property/genre",
        "mappedBy": "word2vec"
      },
      {
        "label": "games",
        "uri": "http://dbpedia.org/ontology/VideoGame",
        "seq": "13,18",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "406",
    "question": "Count all the ethinic group who speaks language which belongs to Anglo-Frisian language family ?",
    "SerialNumber": "376",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/languageFamily\u003e \u003chttp://dbpedia.org/resource/Anglo-Frisian_languages\u003e . ?uri \u003chttp://dbpedia.org/property/languages\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/EthnicGroup\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Anglo-Frisian language ",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Anglo-Frisian_languages",
        "seq": "65,88"
      }
    ],
    "id": "786455b1e7fa4fed9f46d49db488e88d",
    "predicate mapping": [
      {
        "label": "language family",
        "uri": "http://dbpedia.org/ontology/languageFamily",
        "seq": "88,94",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "language",
        "uri": "http://dbpedia.org/property/languages",
        "seq": "39,47",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "ethinic group",
        "uri": "http://dbpedia.org/ontology/EthnicGroup",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "Name all those whose spouses have performed with Tony Bennett?",
    "SerialNumber": "377",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/associatedMusicalArtist\u003e \u003chttp://dbpedia.org/resource/Tony_Bennett\u003e . ?uri \u003chttp://dbpedia.org/ontology/spouse\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Tony Bennett",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Tony_Bennett",
        "seq": "49,61"
      }
    ],
    "id": "bd739b63ea0e48d19bbd74153447ff73",
    "predicate mapping": [
      {
        "label": "performed",
        "uri": "http://dbpedia.org/ontology/associatedMusicalArtist",
        "mappedBy": "word2vec"
      },
      {
        "label": "spouse",
        "uri": "http://dbpedia.org/ontology/spouse",
        "seq": "21,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "What are the books written by the the person who made the Novelas ejemplares?",
    "SerialNumber": "379",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/notableWork\u003e \u003chttp://dbpedia.org/resource/Novelas_ejemplares\u003e . ?uri \u003chttp://dbpedia.org/ontology/author\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Book\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Novelas ejemplares",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Novelas_ejemplares",
        "seq": "58,76"
      }
    ],
    "id": "7881083538c54de4a888d1e28df7238c",
    "predicate mapping": [
      {
        "label": "made",
        "uri": "http://dbpedia.org/ontology/notableWork",
        "mappedBy": "word2vec"
      },
      {
        "label": "written by",
        "uri": "http://dbpedia.org/ontology/author",
        "seq": "19,29",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "book",
        "uri": "http://dbpedia.org/ontology/Book",
        "seq": "13,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "Whos a famous relative of anne spielberg?",
    "SerialNumber": "380",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/relation\u003e \u003chttp://dbpedia.org/resource/Anne_Spielberg\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "anne spielberg",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Anne_Spielberg",
        "seq": "26,40"
      }
    ],
    "id": "815d064630b3451baa5acb5bedd5e7ad",
    "predicate mapping": [
      {
        "label": "relative",
        "uri": "http://dbpedia.org/ontology/relation",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the TV show whose network is NBC and is the subsequent work of Fraiser ?",
    "SerialNumber": "381",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/network\u003e \u003chttp://dbpedia.org/resource/NBC\u003e . ?uri \u003chttp://dbpedia.org/ontology/subsequentWork\u003e \u003chttp://dbpedia.org/resource/Frasier\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "NBC",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/NBC",
        "seq": "34,37"
      },
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Frasier",
        "seq": "999,1000"
      }
    ],
    "id": "ace6e364c8cc4f1fb0813dc404b6fae6",
    "predicate mapping": [
      {
        "label": "network",
        "uri": "http://dbpedia.org/ontology/network",
        "seq": "23,30",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "subsequent work",
        "uri": "http://dbpedia.org/ontology/subsequentWork",
        "seq": "49,64",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "12,16",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Where is the grave of Ivan III of Russia ?",
    "SerialNumber": "387",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Ivan_III_of_Russia\u003e \u003chttp://dbpedia.org/property/placeOfBurial\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ivan III",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Ivan_III_of_Russia",
        "seq": "22,30"
      }
    ],
    "id": "3aaf4525a6d24e27be8fe037d5ba28c2",
    "predicate mapping": [
      {
        "label": "grave",
        "uri": "http://dbpedia.org/property/placeOfBurial",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "406",
    "question": "how many companies are located in a spanish speaking region?",
    "SerialNumber": "392",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/language\u003e \u003chttp://dbpedia.org/resource/Spanish_language\u003e . ?uri \u003chttp://dbpedia.org/ontology/location\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Organisation\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "spanish",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Spanish_language",
        "seq": "999,1000"
      }
    ],
    "id": "b541f708c7fd48ad8eb1c5c9489444e1",
    "predicate mapping": [
      {
        "label": "speaking",
        "uri": "http://dbpedia.org/ontology/language",
        "mappedBy": "word2vec"
      },
      {
        "label": "located in",
        "uri": "http://dbpedia.org/ontology/location",
        "mappedBy": "word2vec"
      },
      {
        "label": "companies",
        "uri": "http://dbpedia.org/ontology/Organisation",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "What are some US citizens famous for?",
    "SerialNumber": "393",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/nationality\u003e \u003chttp://dbpedia.org/resource/United_States\u003e . ?x \u003chttp://dbpedia.org/ontology/knownFor\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "US",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/United_States",
        "seq": "14,16"
      }
    ],
    "id": "88f9b624d17b45edb9e1ec11cdb1db22",
    "predicate mapping": [
      {
        "label": "citizens",
        "uri": "http://dbpedia.org/ontology/nationality",
        "mappedBy": "word2vec"
      },
      {
        "label": "famous",
        "uri": "http://dbpedia.org/ontology/knownFor",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Which genre of books are published by Random House?",
    "SerialNumber": "394",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/publisher\u003e \u003chttp://dbpedia.org/resource/Random_House\u003e . ?x \u003chttp://dbpedia.org/property/subject\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Book\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Random House",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Random_House",
        "seq": "38,50"
      }
    ],
    "id": "246e38b975c94fdbbbe94ec51f1540eb",
    "predicate mapping": [
      {
        "label": "published",
        "uri": "http://dbpedia.org/property/publisher",
        "seq": "25,34",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "genre",
        "uri": "http://dbpedia.org/property/subject",
        "mappedBy": "word2vec"
      },
      {
        "label": "book",
        "uri": "http://dbpedia.org/ontology/Book",
        "seq": "15,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the office holder whose child is Lori Black and predecessor is Henry E. Catto Jr ?",
    "SerialNumber": "395",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/children\u003e \u003chttp://dbpedia.org/resource/Lori_Black\u003e . ?uri \u003chttp://dbpedia.org/ontology/predecessor\u003e \u003chttp://dbpedia.org/resource/Henry_E._Catto,_Jr.\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/OfficeHolder\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Lori Black",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Lori_Black",
        "seq": "38,48"
      },
      {
        "label": "henry catto",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Henry_E._Catto,_Jr.",
        "seq": "999,1000"
      }
    ],
    "id": "c919ac2e708f41ee93b91d3731428939",
    "predicate mapping": [
      {
        "label": "child",
        "uri": "http://dbpedia.org/property/children",
        "seq": "29,34",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "predecessor",
        "uri": "http://dbpedia.org/ontology/predecessor",
        "seq": "53,64",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "office holder",
        "uri": "http://dbpedia.org/ontology/OfficeHolder",
        "seq": "9,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "401",
    "question": "How many golf players are there in Arizona State Sun Devils ?",
    "SerialNumber": "396",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/ontology/college\u003e \u003chttp://dbpedia.org/resource/Arizona_State_Sun_Devils\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/GolfPlayer\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Arizona State Sun Devils",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Arizona_State_Sun_Devils",
        "seq": "35,59"
      }
    ],
    "id": "279ba468ad7c402ea5b91c6b11a7dd1c",
    "predicate mapping": [
      { 
        "label": "in",
        "uri": "http://dbpedia.org/ontology/college",
        "mappedBy": "NA"
      },
      {
        "label": "golf player",
        "uri": "http://dbpedia.org/ontology/GolfPlayer",
        "seq": "9,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "Which rivers start in Wyoming?",
    "SerialNumber": "397",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/sourceRegion\u003e \u003chttp://dbpedia.org/resource/Wyoming\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Wyoming",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Wyoming",
        "seq": "22,29"
      }
    ],
    "id": "5e356a23a8734f9d987c09850314cf36",
    "predicate mapping": [
      {
        "label": "start",
        "uri": "http://dbpedia.org/ontology/sourceRegion",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What country is Jeffrey Werleman from, which also has the American Mediterranean Sea?",
    "SerialNumber": "400",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Jeffrey_Werleman\u003e \u003chttp://dbpedia.org/ontology/birthPlace\u003e ?uri. \u003chttp://dbpedia.org/resource/American_Mediterranean_Sea\u003e \u003chttp://dbpedia.org/ontology/country\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jeffrey Werleman",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Jeffrey_Werleman",
        "seq": "16,32"
      },
      {
        "label": "American Mediterranean Sea",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/American_Mediterranean_Sea",
        "seq": "58,84"
      }
    ],
    "id": "c5ddb0c77d054690b00ec818448e108c",
    "predicate mapping": [
      {
        "label": "from",
        "uri": "http://dbpedia.org/ontology/birthPlace",
        "mappedBy": "word2vec"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/country",
        "seq": "5,12",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "The Prime minister who worked in the Khmer Issarak follows which religion?",
    "SerialNumber": "401",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/militaryBranch\u003e \u003chttp://dbpedia.org/resource/Khmer_Issarak\u003e . ?x \u003chttp://dbpedia.org/ontology/religion\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/PrimeMinister\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Khmer Issarak",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Khmer_Issarak",
        "seq": "37,50"
      }
    ],
    "id": "a785e76da4ec49cea487642d65c77144",
    "predicate mapping": [
      {
        "label": "worked",
        "uri": "http://dbpedia.org/ontology/militaryBranch",
        "mappedBy": "word2vec"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion",
        "seq": "65,73",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "Prime minister",
        "uri": "http://dbpedia.org/ontology/PrimeMinister",
        "seq": "4,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "List the other members of the team where Jason Hayne currently plays?",
    "SerialNumber": "408",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/currentMember\u003e \u003chttp://dbpedia.org/resource/Jason_Hayne\u003e . ?x \u003chttp://dbpedia.org/property/name\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/OrganisationMember\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jason Hayne",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Jason_Hayne",
        "seq": "41,52"
      }
    ],
    "id": "25b1049cd35247ecb0c2f42335ca48a1",
    "predicate mapping": [
      {
        "label": "currently plays",
        "uri": "http://dbpedia.org/ontology/currentMember",
        "mappedBy": "word2vec"
      },
      {
        "label": "members",
        "uri": "http://dbpedia.org/property/name",
        "mappedBy": "word2vec"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/OrganisationMember",
        "seq": "15,22",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "List the newspapers whose offices are situated in 1211 Avenue of the Americas?",
    "SerialNumber": "413",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/headquarter\u003e \u003chttp://dbpedia.org/resource/1211_Avenue_of_the_Americas\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Newspaper\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "1211 Avenue of the Americas",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/1211_Avenue_of_the_Americas",
        "seq": "50,77"
      }
    ],
    "id": "f068beeb6bd0423cb18dd641ec14bc2f",
    "predicate mapping": [
      {
        "label": "offices",
        "uri": "http://dbpedia.org/ontology/headquarter",
        "mappedBy": "word2vec"
      },
      {
        "label": "newspaper",
        "uri": "http://dbpedia.org/ontology/Newspaper",
        "seq": "9,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "Name the sitcoms whose network\u0027s owning company is Chris-Craft Industries?",
    "SerialNumber": "416",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/owningCompany\u003e \u003chttp://dbpedia.org/resource/Chris-Craft_Industries\u003e . ?uri \u003chttp://dbpedia.org/ontology/network\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Chris-Craft Industries",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Chris-Craft_Industries",
        "seq": "51,73"
      }
    ],
    "id": "e9433939da964198814e9dcd3e3cdc47",
    "predicate mapping": [
      {
        "label": "owning company",
        "uri": "http://dbpedia.org/ontology/owningCompany",
        "seq": "33,47",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "network",
        "uri": "http://dbpedia.org/ontology/network",
        "seq": "23,30",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "sitcoms",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Which astronauts went on the Gemini 8 mission?",
    "SerialNumber": "417",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/mission\u003e \u003chttp://dbpedia.org/resource/Gemini_8\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Astronaut\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Gemini 8",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Gemini_8",
        "seq": "29,37"
      }
    ],
    "id": "dbc798f969d840c7b737048f657342d2",
    "predicate mapping": [
      {
        "label": "mission",
        "uri": "http://dbpedia.org/property/mission",
        "seq": "38,45",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "astronaut",
        "uri": "http://dbpedia.org/ontology/Astronaut",
        "seq": "6,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "103",
    "question": "How many developers have games where I can hear Lightning McQueen?",
    "SerialNumber": "418",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { \u003chttp://dbpedia.org/resource/Lightning_McQueen\u003e \u003chttp://dbpedia.org/ontology/voice\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/developer\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Lightning McQueen",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Lightning_McQueen",
        "seq": "48,65"
      }
    ],
    "id": "00da309171bc4424aad2bbb3071aee17",
    "predicate mapping": [
      {
        "label": "hear",
        "uri": "http://dbpedia.org/ontology/voice",
        "mappedBy": "word2vec"
      },
      {
        "label": "developer",
        "uri": "http://dbpedia.org/ontology/developer",
        "seq": "9,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Does Caroline Augusta Foley Rhys Davids study Buddhism?",
    "SerialNumber": "421",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Caroline_Augusta_Foley_Rhys_Davids\u003e \u003chttp://dbpedia.org/ontology/field\u003e \u003chttp://dbpedia.org/resource/Buddhism\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Caroline Augusta Foley Rhys Davids",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Caroline_Augusta_Foley_Rhys_Davids",
        "seq": "5,39"
      },
      {
        "label": "Buddhism",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Buddhism",
        "seq": "46,54"
      }
    ],
    "id": "115415a95f22482aa6e5441ccf0b6f31",
    "predicate mapping": [
      {
        "label": "study",
        "uri": "http://dbpedia.org/ontology/field",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "103",
    "question": "In how many other states do people live, whose languages are spoken in Nebraska?",
    "SerialNumber": "423",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { \u003chttp://dbpedia.org/resource/Nebraska\u003e \u003chttp://dbpedia.org/ontology/language\u003e ?x . ?x \u003chttp://dbpedia.org/property/region\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Nebraska",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Nebraska",
        "seq": "71,79"
      }
    ],
    "id": "4d672dceaf7f4e9382ae34c3623f7b85",
    "predicate mapping": [
      {
        "label": "language",
        "uri": "http://dbpedia.org/ontology/language",
        "seq": "47,55",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "states",
        "uri": "http://dbpedia.org/property/region",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Who founded the city where First Church of Christ, Scientist is located?",
    "SerialNumber": "424",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/First_Church_of_Christ,_Scientist_(Pittsburgh)\u003e \u003chttp://dbpedia.org/property/locationTown\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/founder\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "First Church of Christ, Scientist",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/First_Church_of_Christ,_Scientist_(Pittsburgh)",
        "seq": "27,60"
      }
    ],
    "id": "366d5c6e16434f55ad841357ad55f327",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/property/locationTown",
        "mappedBy": "word2vec"
      },
      {
        "label": "founded",
        "uri": "http://dbpedia.org/ontology/founder",
        "seq": "4,11",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Name the team for which Cam Plante played for which were also the tenants of MasterCard center ?",
    "SerialNumber": "428",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Cam_Plante\u003e \u003chttp://dbpedia.org/property/playedFor\u003e ?uri. \u003chttp://dbpedia.org/resource/MasterCard_Centre\u003e \u003chttp://dbpedia.org/property/tenants\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Cam Plante",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Cam_Plante",
        "seq": "24,34"
      },
      {
        "label": "mastercard",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/MasterCard_Centre",
        "seq": "999,1000"
      }
    ],
    "id": "24e7a1c8ce674304a0400059c245e3d3",
    "predicate mapping": [
      {
        "label": "played for",
        "uri": "http://dbpedia.org/property/playedFor",
        "seq": "35,45",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "tenants",
        "uri": "http://dbpedia.org/property/tenants",
        "seq": "66,73",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Where is Carmel Winery?",
    "SerialNumber": "430",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Carmel_Winery\u003e \u003chttp://dbpedia.org/property/locationCountry\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Carmel Winery",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Carmel_Winery",
        "seq": "9,22"
      }
    ],
    "id": "89ed257c1a244e339c0b5129de2cbce9",
    "predicate mapping": [
      {
        "label": "Where",
        "uri": "http://dbpedia.org/property/locationCountry",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "11",
    "question": "List the stadium of the teams which uses Nea Smyrni  as one of the stadium ?",
    "SerialNumber": "432",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/stadium\u003e \u003chttp://dbpedia.org/resource/Nea_Smyrni_Stadium\u003e . ?x \u003chttp://dbpedia.org/property/stadium\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "stadium smyrni",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Nea_Smyrni_Stadium",
        "seq": "999,1000"
      }
    ],
    "id": "a7070d6a40cf48d4bf91099e23350ddf",
    "predicate mapping": [
      {
        "label": "stadium",
        "uri": "http://dbpedia.org/property/stadium",
        "seq": "9,16",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "stadium",
        "uri": "http://dbpedia.org/property/stadium",
        "seq": "9,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What awards have been awarded both to Ingmar bergman and James O\u0027Brien?",
    "SerialNumber": "433",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Ingmar_Bergman\u003e \u003chttp://dbpedia.org/property/awards\u003e ?uri. \u003chttp://dbpedia.org/resource/James_F._O\u0027Brien\u003e \u003chttp://dbpedia.org/ontology/award\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ingmar bergman",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Ingmar_Bergman",
        "seq": "38,52"
      },
      {
        "label": "o\u0027brien james",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/James_F._O\u0027Brien",
        "seq": "999,1000"
      }
    ],
    "id": "4df17f35aff7484b8f81fb0f1fafd50f",
    "predicate mapping": [
      {
        "label": "awarded",
        "uri": "http://dbpedia.org/property/awards",
        "seq": "22,29",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "awarded",
        "uri": "http://dbpedia.org/ontology/award",
        "seq": "22,29",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "8",
    "question": "List the colonel with branch as Militia ?",
    "SerialNumber": "434",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/branch\u003e \u003chttp://dbpedia.org/resource/Militia\u003e . ?uri \u003chttp://dbpedia.org/property/rank\u003e \u003chttp://dbpedia.org/resource/Colonel_(United_States)\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Militia",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Militia",
        "seq": "32,39"
      },
      {
        "label": "colonel",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Colonel_(United_States)",
        "seq": "9,16"
      }
    ],
    "id": "378830c0afdf4906b1f824f35f822318",
    "predicate mapping": [
      {
        "label": "branch",
        "uri": "http://dbpedia.org/property/branch",
        "seq": "22,28",
        "mappedBy": "byLabelMatch"
      },
      {
        
        "label": "with",
        "uri": "http://dbpedia.org/property/rank",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "401",
    "question": "How many companies are located in Toronto ?",
    "SerialNumber": "435",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/ontology/locationCity\u003e \u003chttp://dbpedia.org/resource/Toronto\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Company\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Toronto",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Toronto",
        "seq": "34,41"
      }
    ],
    "id": "bc0a6b36790b465ea463c2ec3ead0fda",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/ontology/locationCity",
        "mappedBy": "word2vec"
      },
      {
        "label": "companies",
        "uri": "http://dbpedia.org/ontology/Company",
        "seq": "9,18",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "Name the chairman of the soccer club for which Mike Salmon currently plays?",
    "SerialNumber": "436",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Mike_Salmon\u003e \u003chttp://dbpedia.org/property/currentclub\u003e ?x . ?x \u003chttp://dbpedia.org/property/chairman\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/SoccerClub\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Mike Salmon",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Mike_Salmon",
        "seq": "47,58"
      }
    ],
    "id": "0ce4ccee1f484ba7b18881040f845d12",
    "predicate mapping": [
      {
        "label": "currently plays",
        "uri": "http://dbpedia.org/property/currentclub",
        "mappedBy": "word2vec"
      },
      {
        "label": "chairman",
        "uri": "http://dbpedia.org/property/chairman",
        "seq": "9,17",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "soccer club",
        "uri": "http://dbpedia.org/ontology/SoccerClub",
        "seq": "25,36",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who is a successor of Kingship whose parents were Julius Caesar?",
    "SerialNumber": "437",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/parent\u003e \u003chttp://dbpedia.org/resource/Julius_Caesar\u003e . ?x \u003chttp://dbpedia.org/ontology/successor\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Royalty\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Julius Caesar",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Julius_Caesar",
        "seq": "50,63"
      }
    ],
    "id": "2c3ccc326827477db7ba435118944617",
    "predicate mapping": [
      {
        "label": "parent",
        "uri": "http://dbpedia.org/ontology/parent",
        "seq": "37,43",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "successor",
        "uri": "http://dbpedia.org/ontology/successor",
        "seq": "9,18",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "Kingship",
        "uri": "http://dbpedia.org/ontology/Royalty",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who wrote the musical based on Mary Poppins?",
    "SerialNumber": "438",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/basedOn\u003e \u003chttp://dbpedia.org/resource/Mary_Poppins\u003e . ?x \u003chttp://dbpedia.org/ontology/author\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Musical\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Mary Poppins",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Mary_Poppins",
        "seq": "31,43"
      }
    ],
    "id": "e6871a80517d4e3a993fc667347d30aa",
    "predicate mapping": [
      {
        "label": "based on",
        "uri": "http://dbpedia.org/ontology/basedOn",
        "seq": "22,30",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "wrote",
        "uri": "http://dbpedia.org/ontology/author",
        "mappedBy": "word2vec"
      },
      {
        "label": "musical",
        "uri": "http://dbpedia.org/ontology/Musical",
        "seq": "14,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Which fields are covered by academic journals in the US?",
    "SerialNumber": "440",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/country\u003e \u003chttp://dbpedia.org/resource/United_States\u003e . ?x \u003chttp://dbpedia.org/property/discipline\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/AcademicJournal\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "US",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/United_States",
        "seq": "53,55"
      }
    ],
    "id": "a60454067d7b4592bc6169e7a7d9a6cd",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/property/country",
        "mappedBy": "NA"
      },
      {
        "label": "fields",
        "uri": "http://dbpedia.org/property/discipline",
        "seq": "6,12",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "academic journal",
        "uri": "http://dbpedia.org/ontology/AcademicJournal",
        "seq": "28,44",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "What river ends in Indian Ocean and also starts somewhere in Zambia?",
    "SerialNumber": "441",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/riverMouth\u003e \u003chttp://dbpedia.org/resource/Indian_Ocean\u003e . ?uri \u003chttp://dbpedia.org/ontology/sourceCountry\u003e \u003chttp://dbpedia.org/resource/Zambia\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/River\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Indian Ocean",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Indian_Ocean",
        "seq": "19,31"
      },
      {
        "label": "Zambia",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Zambia",
        "seq": "61,67"
      }
    ],
    "id": "198cb4233ecc4e64a23d2ce9e2c20cc9",
    "predicate mapping": [
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/riverMouth",
        "seq": "5,10",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "starts",
        "uri": "http://dbpedia.org/ontology/sourceCountry",
        "mappedBy": "word2vec"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River",
        "seq": "5,10",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Where do the people, famous for the Panathinaikos FC reside?",
    "SerialNumber": "442",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/knownFor\u003e \u003chttp://dbpedia.org/resource/Panathinaikos_F.C.\u003e . ?x \u003chttp://dbpedia.org/property/residence\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Panathinaikos FC",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Panathinaikos_F.C.",
        "seq": "36,52"
      }
    ],
    "id": "7f2f6e1a38ab4f07be61d11e39732b54",
    "predicate mapping": [
      {
        "label": "famous",
        "uri": "http://dbpedia.org/ontology/knownFor",
        "mappedBy": "word2vec"
      },
      {
        "label": "reside",
        "uri": "http://dbpedia.org/property/residence",
        "seq": "53,59",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "people",
        "uri": "http://dbpedia.org/ontology/Person",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "How many people have voiced characters sculpted by Clamp?",
    "SerialNumber": "443",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/creator\u003e \u003chttp://dbpedia.org/resource/Clamp_(manga_artists)\u003e . ?x \u003chttp://dbpedia.org/ontology/voice\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Clamp",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Clamp_(manga_artists)",
        "seq": "51,56"
      }
    ],
    "id": "6d4c25756b6346589f78aefa48a0d4ec",
    "predicate mapping": [
      {
        "label": "sculpted",
        "uri": "http://dbpedia.org/property/creator",
        "mappedBy": "word2vec"
      },
      {
        "label": "voice",
        "uri": "http://dbpedia.org/ontology/voice",
        "seq": "21,26",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "To which company does Raymond Conner is critical to?",
    "SerialNumber": "444",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/keyPeople\u003e \u003chttp://dbpedia.org/resource/Raymond_Conner\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Company\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Raymond Conner",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Raymond_Conner",
        "seq": "22,36"
      }
    ],
    "id": "a78468ab14af48d8a7e5c8649b7b7da6",
    "predicate mapping": [
      {
        "label": "critical",
        "uri": "http://dbpedia.org/property/keyPeople",
        "mappedBy": "word2vec"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company",
        "seq": "9,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the death place of the Elbieta Czartoryska which is also place of birth of the Charles Journet",
    "SerialNumber": "446",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Elżbieta_Czartoryska_(1905–1989)\u003e \u003chttp://dbpedia.org/property/deathPlace\u003e ?uri. \u003chttp://dbpedia.org/resource/Charles_Journet\u003e \u003chttp://dbpedia.org/ontology/birthPlace\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "czartoryska",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Elżbieta_Czartoryska_(1905–1989)",
        "seq": "999,1000"
      },
      {
        "label": "Charles Journet",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Charles_Journet",
        "seq": "87,102"
      }
    ],
    "id": "46ae412ded1647d0af1f52f6db1953d7",
    "predicate mapping": [
      {
        "label": "death place",
        "uri": "http://dbpedia.org/property/deathPlace",
        "seq": "12,23",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "place",
        "uri": "http://dbpedia.org/ontology/birthPlace",
        "seq": "18,23",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "In which country did Philippe tesnire and judson huss die?",
    "SerialNumber": "448",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Philippe_Tesnière\u003e \u003chttp://dbpedia.org/property/placeOfDeath\u003e ?uri. \u003chttp://dbpedia.org/resource/Judson_Huss\u003e \u003chttp://dbpedia.org/property/placeOfDeath\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Philippe tesnire",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Philippe_Tesnière",
        "seq": "999,1000"
      },
      {
        "label": "judson huss",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Judson_Huss",
        "seq": "42,53"
      }
    ],
    "id": "be2d43507d27490580cef0ab4aca9355",
    "predicate mapping": [
      {
        "label": "die",
        "uri": "http://dbpedia.org/property/placeOfDeath",
        "mappedBy": "word2vec"
      },
      {
        "label": "die",
        "uri": "http://dbpedia.org/property/placeOfDeath",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "Which shows are voiced be US citizens?",
    "SerialNumber": "449",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/stateOfOrigin\u003e \u003chttp://dbpedia.org/resource/United_States\u003e . ?uri \u003chttp://dbpedia.org/property/voices\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "US",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/United_States",
        "seq": "26,28"
      }
    ],
    "id": "ce1b21f49b74424fb4c6ab11cc56fedd",
    "predicate mapping": [
      {
        "label": "citizens",
        "uri": "http://dbpedia.org/ontology/stateOfOrigin",
        "mappedBy": "word2vec"
      },
      {
        "label": "voiced",
        "uri": "http://dbpedia.org/property/voices",
        "seq": "16,22",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "6,11",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who has starred in the amusement park attractions where Jim Dooley was performing?",
    "SerialNumber": "450",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/music\u003e \u003chttp://dbpedia.org/resource/Jim_Dooley\u003e . ?x \u003chttp://dbpedia.org/property/starring\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/AmusementParkAttraction\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jim Dooley",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Jim_Dooley",
        "seq": "56,66"
      }
    ],
    "id": "9d8c57c836a840a28c591ca7d8a2de8d",
    "predicate mapping": [
      {
        "label": "performing",
        "uri": "http://dbpedia.org/property/music",
        "mappedBy": "word2vec"
      },
      {
        "label": "starred",
        "uri": "http://dbpedia.org/property/starring",
        "seq": "8,15",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "amusement park attraction",
        "uri": "http://dbpedia.org/ontology/AmusementParkAttraction",
        "seq": "23,48",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Was Derg the anthem of Ethopia?",
    "SerialNumber": "451",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Derg\u003e \u003chttp://dbpedia.org/ontology/anthem\u003e \u003chttp://dbpedia.org/resource/Ethiopia\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Derg",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Derg",
        "seq": "4,8"
      },
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Ethiopia",
        "seq": "999,1000"
      }
    ],
    "id": "e56c54175e0941fd9afe385c983ce16a",
    "predicate mapping": [
      {
        "label": "anthem",
        "uri": "http://dbpedia.org/ontology/anthem",
        "seq": "13,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "what region is governed by Mario Olivero?",
    "SerialNumber": "453",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/leader\u003e \u003chttp://dbpedia.org/resource/Mario_Oliverio\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Mario Olivero",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Mario_Oliverio",
        "seq": "27,40"
      }
    ],
    "id": "ea7a3cc64bcc4334ad16e18130602c7f",
    "predicate mapping": [
      {
        "label": "governed",
        "uri": "http://dbpedia.org/property/leader",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "405",
    "question": "Count the different origins of members of the Vitis Vinifera species.",
    "SerialNumber": "459",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/species\u003e \u003chttp://dbpedia.org/resource/Vitis_vinifera\u003e . ?x \u003chttp://dbpedia.org/ontology/origin\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Place\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Vitis Vinifera",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Vitis_vinifera",
        "seq": "46,60"
      }
    ],
    "id": "96454da162fa47f48d85f23ed72f4933",
    "predicate mapping": [
      {
        "label": "species",
        "uri": "http://dbpedia.org/ontology/species",
        "seq": "61,68",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "origin",
        "uri": "http://dbpedia.org/ontology/origin",
        "seq": "20,26",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": " ",
        "uri": "http://dbpedia.org/ontology/Place",
        "mappedBy": "NA"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Where do the airlines garrisoned at Manchester airport fly to?",
    "SerialNumber": "463",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/headquarter\u003e \u003chttp://dbpedia.org/resource/Manchester_Airport\u003e . ?x \u003chttp://dbpedia.org/property/destinations\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Airline\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Manchester airport",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Manchester_Airport",
        "seq": "36,54"
      }
    ],
    "id": "4c039e3d1eab4b4e906e046cc3096bbc",
    "predicate mapping": [
      {
        "label": "garrisoned",
        "uri": "http://dbpedia.org/ontology/headquarter",
        "seq": "22,30",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "fly to",
        "uri": "http://dbpedia.org/property/destinations",
        "mappedBy": "word2vec"
      },
      {
        "label": "airline",
        "uri": "http://dbpedia.org/ontology/Airline",
        "seq": "13,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "List the show related to the which was followed by Doctor Who Extra?",
    "SerialNumber": "466",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/subsequentWork\u003e \u003chttp://dbpedia.org/resource/Doctor_Who_Extra\u003e . ?uri \u003chttp://dbpedia.org/ontology/related\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Doctor Who Extra",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Doctor_Who_Extra",
        "seq": "51,67"
      }
    ],
    "id": "09ec259ff20c48b09885b7efccb5acd0",
    "predicate mapping": [
      {
        "label": "followed by",
        "uri": "http://dbpedia.org/ontology/subsequentWork",
        "mappedBy": "word2vec"
      },
      {
        "label": "related",
        "uri": "http://dbpedia.org/ontology/related",
        "seq": "14,21",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "9,13",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the result of the GazaIsrael conflict is also  the  place of the Qaqun?",
    "SerialNumber": "470",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Gaza–Israel_conflict\u003e \u003chttp://dbpedia.org/property/result\u003e ?uri. \u003chttp://dbpedia.org/resource/Qaqun\u003e \u003chttp://dbpedia.org/property/place\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Gaza–Israel_conflict",
        "seq": "999,1000"
      },
      {
        "label": "Qaqun",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Qaqun",
        "seq": "73,78"
      }
    ],
    "id": "03e2743086c3467287d376e6e7e01dea",
    "predicate mapping": [
      {
        "label": "result",
        "uri": "http://dbpedia.org/property/result",
        "seq": "12,18",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "place",
        "uri": "http://dbpedia.org/property/place",
        "seq": "60,65",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "Members of how many political parties have died in Delhi?",
    "SerialNumber": "471",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/placeOfDeath\u003e \u003chttp://dbpedia.org/resource/Delhi\u003e . ?x \u003chttp://dbpedia.org/property/party\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Delhi",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Delhi",
        "seq": "51,56"
      }
    ],
    "id": "7a22387ad6c34f20a9681b0d18d27390",
    "predicate mapping": [
      {
        "label": "died in",
        "uri": "http://dbpedia.org/property/placeOfDeath",
        "mappedBy": "word2vec"
      },
      {
        "label": "parties",
        "uri": "http://dbpedia.org/property/party",
        "seq": "30,37",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "405",
    "question": "To how many places does the airlines fly, whose head office is located at the Gatwick Airport?",
    "SerialNumber": "472",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/headquarter\u003e \u003chttp://dbpedia.org/resource/Gatwick_Airport\u003e . ?x \u003chttp://dbpedia.org/property/destinations\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Place\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Gatwick Airport",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Gatwick_Airport",
        "seq": "78,93"
      }
    ],
    "id": "80727b167d9247f4a7228327aa7d521a",
    "predicate mapping": [
      {
        "label": "head office",
        "uri": "http://dbpedia.org/ontology/headquarter",
        "seq": "48,52",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "fly",
        "uri": "http://dbpedia.org/property/destinations",
        "mappedBy": "word2vec"
      },
      {
        "label": "place",
        "uri": "http://dbpedia.org/ontology/Place",
        "seq": "12,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Where do current famous NatGeo photographers live?",
    "SerialNumber": "475",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/knownFor\u003e \u003chttp://dbpedia.org/resource/National_Geographic_(magazine)\u003e . ?x \u003chttp://dbpedia.org/ontology/residence\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Photographer\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "NatGeo",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/National_Geographic_(magazine)",
        "seq": "9,16"
      }
    ],
    "id": "6665d7d8a4f34fc1953ceda037ad3451",
    "predicate mapping": [
      {
        "label": "famous",
        "uri": "http://dbpedia.org/ontology/knownFor",
        "mappedBy": "word2vec"
      },
      {
        "label": "live",
        "uri": "http://dbpedia.org/ontology/residence",
        "mappedBy": "word2vec"
      },
      {
        "label": "photographer",
        "uri": "http://dbpedia.org/ontology/Photographer",
        "seq": "31,43",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "How many awards have been given to Italians?",
    "SerialNumber": "476",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/birthPlace\u003e \u003chttp://dbpedia.org/resource/Italy\u003e . ?x \u003chttp://dbpedia.org/property/awards\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Itali",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Italy",
        "seq": "35,40"
      }
    ],
    "id": "0e7a98d81f2644ccad9cf21e77378c3b",
    "predicate mapping": [
      {
        "label": "ans",
        "uri": "http://dbpedia.org/property/birthPlace",
        "mappedBy": "word2vec"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Is Hyundai Lavita assembled in Malaysia?",
    "SerialNumber": "478",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Hyundai_Lavita\u003e \u003chttp://dbpedia.org/ontology/assembly\u003e \u003chttp://dbpedia.org/resource/Malaysia\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Hyundai Lavita",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Hyundai_Lavita",
        "seq": "3,17"
      },
      {
        "label": "Malaysia",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Malaysia",
        "seq": "31,39"
      }
    ],
    "id": "576ea9f202d7463cb793f77628511e97",
    "predicate mapping": [
      {
        "label": "assembled",
        "uri": "http://dbpedia.org/ontology/assembly",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "311",
    "question": "List the shrines of the saint whose one of the shrine is Ponza ?",
    "SerialNumber": "483",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/majorShrine\u003e \u003chttp://dbpedia.org/resource/Poznań\u003e . ?x \u003chttp://dbpedia.org/ontology/majorShrine\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Saint\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Poznań",
        "seq": "999,1000"
      }
    ],
    "id": "cf7aca2e48a445299efbf5664c867e8e",
    "predicate mapping": [
      {
        "label": "shrine",
        "uri": "http://dbpedia.org/ontology/majorShrine",
        "seq": "9,15",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "shrine",
        "uri": "http://dbpedia.org/ontology/majorShrine",
        "seq": "9,15",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "saint",
        "uri": "http://dbpedia.org/ontology/Saint",
        "seq": "24,29",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Who is the former partner of the pupil of Dalilah Sappenfield?",
    "SerialNumber": "485",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/coach\u003e \u003chttp://dbpedia.org/resource/Dalilah_Sappenfield\u003e . ?x \u003chttp://dbpedia.org/ontology/formerPartner\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Dalilah Sappenfield",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Dalilah_Sappenfield",
        "seq": "42,61"
      }
    ],
    "id": "1422749d46f24fb7bf292b5370dcae01",
    "predicate mapping": [
      {
        "label": "pupil",
        "uri": "http://dbpedia.org/property/coach",
        "mappedBy": "word2vec"
      },
      {
        "label": "former partner",
        "uri": "http://dbpedia.org/ontology/formerPartner",
        "seq": "11,25",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "Who died due to Morphine ?",
    "SerialNumber": "486",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/deathCause\u003e \u003chttp://dbpedia.org/resource/Morphine\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Morphine",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Morphine",
        "seq": "16,24"
      }
    ],
    "id": "44bacf63913b413c97f15d7f4de91547",
    "predicate mapping": [
      {
        "label": "died due",
        "uri": "http://dbpedia.org/ontology/deathCause",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "405",
    "question": "How many people were opponents of the ones buried in the tower of London?",
    "SerialNumber": "488",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/restingPlace\u003e \u003chttp://dbpedia.org/resource/Tower_of_London\u003e . ?x \u003chttp://dbpedia.org/ontology/opponent\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "tower of London",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Tower_of_London",
        "seq": "57,72"
      }
    ],
    "id": "8f2af1e74b9f40ac84e66b6aea4f3770",
    "predicate mapping": [
      {
        "label": "buried in",
        "uri": "http://dbpedia.org/property/restingPlace",
        "seq": "43,52",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "opponent",
        "uri": "http://dbpedia.org/ontology/opponent",
        "seq": "21,29",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "people",
        "uri": "http://dbpedia.org/ontology/Person",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Name the common university of the Cardinal and Jim Wylie?",
    "SerialNumber": "489",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Stanford_Cardinal\u003e \u003chttp://dbpedia.org/ontology/university\u003e ?uri. \u003chttp://dbpedia.org/resource/Jim_Wylie\u003e \u003chttp://dbpedia.org/ontology/university\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "cardinal",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Stanford_Cardinal",
        "seq": "999,1000"
      },
      {
        "label": "Jim Wylie",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Jim_Wylie",
        "seq": "47,56"
      }
    ],
    "id": "dbf6b1fd3ef142aa8fa7dadd70dcd502",
    "predicate mapping": [
      {
        "label": "university",
        "uri": "http://dbpedia.org/ontology/university",
        "seq": "16,26",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "university",
        "uri": "http://dbpedia.org/ontology/university",
        "seq": "16,26",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "In which country did the planes designed by Ursula Hanle originate?",
    "SerialNumber": "491",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/designer\u003e \u003chttp://dbpedia.org/resource/Ursula_Hänle\u003e . ?x \u003chttp://dbpedia.org/property/nationalOrigin\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Aircraft\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ursula Hanle",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Ursula_Hänle",
        "seq": "44,56"
      }
    ],
    "id": "abc719a6e7a1435ba3b1472897a5249c",
    "predicate mapping": [
      {
        "label": "designed",
        "uri": "http://dbpedia.org/property/designer",
        "seq": "32,40",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "originate",
        "uri": "http://dbpedia.org/property/nationalOrigin",
        "mappedBy": "word2vec"
      },
      {
        "label": "planes",
        "uri": "http://dbpedia.org/ontology/Aircraft",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "405",
    "question": "From how many different institutes have the members of Judge Advocate General\u0027s Corps graduated?",
    "SerialNumber": "493",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/militaryRank\u003e \u003chttp://dbpedia.org/resource/Judge_Advocate_General\u0027s_Corps,_United_States_Army\u003e . ?x \u003chttp://dbpedia.org/ontology/almaMater\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/EducationalInstitution\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Judge Advocate General \u0027s Corps",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Judge_Advocate_General\u0027s_Corps,_United_States_Army",
        "seq": "-1,30"
      }
    ],
    "id": "e8328bd8391f448d93a1ea6a456e32dd",
    "predicate mapping": [
      {
        "label": "members",
        "uri": "http://dbpedia.org/ontology/militaryRank",
        "mappedBy": "word2vec"
      },
      {
        "label": "graduated",
        "uri": "http://dbpedia.org/ontology/almaMater",
        "mappedBy": "word2vec"
      },
      {
        "label": "institutes",
        "uri": "http://dbpedia.org/ontology/EducationalInstitution",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which newspaper owned by Schibsted is published in Swedish ?",
    "SerialNumber": "494",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/language\u003e \u003chttp://dbpedia.org/resource/Swedish_language\u003e . ?uri \u003chttp://dbpedia.org/property/owners\u003e \u003chttp://dbpedia.org/resource/Schibsted\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Newspaper\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "swedish",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Swedish_language",
        "seq": "999,1000"
      },
      {
        "label": "Schibsted",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Schibsted",
        "seq": "25,34"
      }
    ],
    "id": "d06c3f86937f45449b1e81e9448f48ed",
    "predicate mapping": [
      {
        "label": "Swedish",
        "uri": "http://dbpedia.org/property/language",
        "mappedBy": "NA"
      },
      {
        "label": "owned",
        "uri": "http://dbpedia.org/property/owners",
        "seq": "16,21",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "newspaper",
        "uri": "http://dbpedia.org/ontology/Newspaper",
        "seq": "6,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "405",
    "question": "In how many different places have ehtics philosophers died?",
    "SerialNumber": "495",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/mainInterests\u003e \u003chttp://dbpedia.org/resource/Ethics\u003e . ?x \u003chttp://dbpedia.org/property/placeOfDeath\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Place\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Ethics",
        "seq": "999,1000"
      }
    ],
    "id": "f2abcff9c290486ab8f1affd60f412f8",
    "predicate mapping": [
      {
        "label": "philosophers",
        "uri": "http://dbpedia.org/property/mainInterests",
        "mappedBy": "word2vec"
      },
      {
        "label": "died",
        "uri": "http://dbpedia.org/property/placeOfDeath",
        "seq": "22,28",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "place",
        "uri": "http://dbpedia.org/ontology/Place",
        "seq": "22,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What political ideology of the Palang Dharma Party is relegion of Inthakin?",
    "SerialNumber": "496",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Palang_Dharma_Party\u003e \u003chttp://dbpedia.org/ontology/ideology\u003e ?uri. \u003chttp://dbpedia.org/resource/Inthakin\u003e \u003chttp://dbpedia.org/ontology/type\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Palang Dharma Party",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Palang_Dharma_Party",
        "seq": "31,50"
      },
      {
        "label": "Inthakin",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Inthakin",
        "seq": "66,74"
      }
    ],
    "id": "c7bac34e1c854968971d32c09b321bf0",
    "predicate mapping": [
      {
        "label": "ideology",
        "uri": "http://dbpedia.org/ontology/ideology",
        "seq": "15,23",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": " ",
        "uri": "http://dbpedia.org/ontology/type",
        "mappedBy": "NA"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Where did Fort Lauderdale Strikers season of 16 take place?",
    "SerialNumber": "497",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/2016_Fort_Lauderdale_Strikers_season\u003e \u003chttp://dbpedia.org/ontology/ground\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Fort Lauderdale Strikers season of 16",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/2016_Fort_Lauderdale_Strikers_season",
        "seq": "45,47"
      }
    ],
    "id": "34130d2812d84c70bdaaf30ade9a2204",
    "predicate mapping": [
      {
        "label": "place",
        "uri": "http://dbpedia.org/ontology/ground",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What are some relatives of the people who fought in Operation Barbarossa?",
    "SerialNumber": "498",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/battle\u003e \u003chttp://dbpedia.org/resource/Operation_Barbarossa\u003e . ?x \u003chttp://dbpedia.org/ontology/relation\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Operation Barbarossa",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Operation_Barbarossa",
        "seq": "52,72"
      }
    ],
    "id": "a65384e0c6d64302868aa3c04c47d3e9",
    "predicate mapping": [
      {
        "label": "fought",
        "uri": "http://dbpedia.org/ontology/battle",
        "mappedBy": "word2vec"
      },
      {
        "label": "relatives",
        "uri": "http://dbpedia.org/ontology/relation",
        "mappedBy": "word2vec"
      },
      {
        "label": "people",
        "uri": "http://dbpedia.org/ontology/Person",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Where is the king buried whose predecessor was Iyasu II?",
    "SerialNumber": "503",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/predecessor\u003e \u003chttp://dbpedia.org/resource/Iyasu_II\u003e . ?x \u003chttp://dbpedia.org/property/placeOfBurial\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Monarch\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Iyasu II",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Iyasu_II",
        "seq": "47,55"
      }
    ],
    "id": "9b7b9393ba92438d807402980092a498",
    "predicate mapping": [
      {
        "label": "predecessor",
        "uri": "http://dbpedia.org/property/predecessor",
        "seq": "31,42",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "buried",
        "uri": "http://dbpedia.org/property/placeOfBurial",
        "seq": "18,24",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "king",
        "uri": "http://dbpedia.org/ontology/Monarch",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Is Audie Murphy buried in the Arlington national cementery?",
    "SerialNumber": "504",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Audie_Murphy\u003e \u003chttp://dbpedia.org/property/placeofburial\u003e \u003chttp://dbpedia.org/resource/Arlington_National_Cemetery\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Audie Murphy",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Audie_Murphy",
        "seq": "3,15"
      },
      {
        "label": "arlington national",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Arlington_National_Cemetery",
        "seq": "999,1000"
      }
    ],
    "id": "0f64ebf1ec944faa999a799ae051e373",
    "predicate mapping": [
      {
        "label": "buried",
        "uri": "http://dbpedia.org/property/placeofburial",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "405",
    "question": "How many people have written stuff broadcasted on the Tokyo Broadcasting System?",
    "SerialNumber": "506",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/network\u003e \u003chttp://dbpedia.org/resource/Tokyo_Broadcasting_System\u003e . ?x \u003chttp://dbpedia.org/property/writer\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Tokyo Broadcasting System",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Tokyo_Broadcasting_System",
        "seq": "54,79"
      }
    ],
    "id": "9fcaa73b3dca47a9a3bf12a42abe54b7",
    "predicate mapping": [
      {
        "label": "broadcasted",
        "uri": "http://dbpedia.org/ontology/network",
        "mappedBy": "word2vec"
      },
      {
        "label": "written",
        "uri": "http://dbpedia.org/property/writer",
        "seq": "21,28",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "people",
        "uri": "http://dbpedia.org/ontology/Person",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "403",
    "question": "How many more teams have rented the stadium used by Raptors 905?",
    "SerialNumber": "508",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { \u003chttp://dbpedia.org/resource/Raptors_905\u003e \u003chttp://dbpedia.org/property/arena\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/tenant\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Stadium\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Raptors 905",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Raptors_905",
        "seq": "52,63"
      }
    ],
    "id": "609a310df5854bada8e182bcc9f2fee9",
    "predicate mapping": [
      {
        "label": " ",
        "uri": "http://dbpedia.org/property/arena",
        "mappedBy": "NA"
      },
      {
        "label": "rented",
        "uri": "http://dbpedia.org/ontology/tenant",
        "mappedBy": "word2vec"
      },
      {
        "label": "stadium",
        "uri": "http://dbpedia.org/ontology/Stadium",
        "seq": "36,43",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "406",
    "question": "Give me a count of musicians who play an instrument developed by George Beauchamp ?",
    "SerialNumber": "509",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/keyPeople\u003e \u003chttp://dbpedia.org/resource/George_Beauchamp\u003e . ?uri \u003chttp://dbpedia.org/ontology/instrument\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MusicalArtist\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "George Beauchamp",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/George_Beauchamp",
        "seq": "65,81"
      }
    ],
    "id": "331ab7e173c740318ed2adfa0f08046b",
    "predicate mapping": [
      {
        "label": "developed",
        "uri": "http://dbpedia.org/property/keyPeople",
        "mappedBy": "word2vec"
      },
      {
        "label": "instrument",
        "uri": "http://dbpedia.org/ontology/instrument",
        "seq": "41,51",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "musician",
        "uri": "http://dbpedia.org/ontology/MusicalArtist",
        "seq": "19,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Does the St lawrence river start in Kingston, Ontario?",
    "SerialNumber": "511",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Saint_Lawrence_River\u003e \u003chttp://dbpedia.org/ontology/sourceMountain\u003e \u003chttp://dbpedia.org/resource/Kingston,_Ontario\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "St lawrence river",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Saint_Lawrence_River",
        "seq": "9,26"
      },
      {
        "label": "Kingston, Ontario",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Kingston,_Ontario",
        "seq": "36,53"
      }
    ],
    "id": "d4ed4754c8194ab69b712750149fdd7a",
    "predicate mapping": [
      {
        "label": "start",
        "uri": "http://dbpedia.org/ontology/sourceMountain",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "Give me an estimate of the number of manufacturers whose products are managed by MTR?",
    "SerialNumber": "512",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/operator\u003e \u003chttp://dbpedia.org/resource/MTR\u003e . ?x \u003chttp://dbpedia.org/ontology/manufacturer\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "MTR",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/MTR",
        "seq": "81,84"
      }
    ],
    "id": "3fe7d243d8064aadbe198b10a38cf9b4",
    "predicate mapping": [
      {
        "label": "managed",
        "uri": "http://dbpedia.org/ontology/operator",
        "mappedBy": "word2vec"
      },
      {
        "label": "manufacturer",
        "uri": "http://dbpedia.org/ontology/manufacturer",
        "seq": "37,49",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What company developed Mac OS 9 and also brought Tiny Tower to the market?",
    "SerialNumber": "517",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Mac_OS_9\u003e \u003chttp://dbpedia.org/ontology/developer\u003e ?uri. \u003chttp://dbpedia.org/resource/Tiny_Tower\u003e \u003chttp://dbpedia.org/property/distributor\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Mac OS 9",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Mac_OS_9",
        "seq": "23,31"
      },
      {
        "label": "Tiny Tower",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Tiny_Tower",
        "seq": "49,59"
      }
    ],
    "id": "51504ea36f364007a53aea8d7060e17d",
    "predicate mapping": [
      {
        "label": "developed",
        "uri": "http://dbpedia.org/ontology/developer",
        "seq": "13,22",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "market",
        "uri": "http://dbpedia.org/property/distributor",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "Which currency is primarily used by the company which is the distributing label of VDE-Gallo Records?",
    "SerialNumber": "518",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/VDE-Gallo_Records\u003e \u003chttp://dbpedia.org/ontology/distributingLabel\u003e ?x . ?x \u003chttp://dbpedia.org/property/currency\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Organisation\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "VDE-Gallo Records",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/VDE-Gallo_Records",
        "seq": "83,100"
      }
    ],
    "id": "3bdef03debd5421ab0cd7f4a3758b46b",
    "predicate mapping": [
      {
        "label": "distributing label",
        "uri": "http://dbpedia.org/ontology/distributingLabel",
        "seq": "61,79",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "currency",
        "uri": "http://dbpedia.org/property/currency",
        "seq": "6,14",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Organisation",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "Who all have been in bands which have recorded their work in the Electric Lady Studios?",
    "SerialNumber": "519",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/recordedIn\u003e \u003chttp://dbpedia.org/resource/Electric_Lady_Studios\u003e . ?uri \u003chttp://dbpedia.org/property/associatedActs\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Electric Lady Studios",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Electric_Lady_Studios",
        "seq": "65,86"
      }
    ],
    "id": "13fc91a5ba564ac6aaa2be0d37c03aa1",
    "predicate mapping": [
      {
        "label": "recorded",
        "uri": "http://dbpedia.org/ontology/recordedIn",
        "seq": "38,46",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "bands",
        "uri": "http://dbpedia.org/property/associatedActs",
        "mappedBy": "word2vec"
      },
      {
        "label": "Who",
        "uri": "http://dbpedia.org/ontology/Person",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "What is the label of things produced by the band If?",
    "SerialNumber": "520",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/artist\u003e \u003chttp://dbpedia.org/resource/If_(band)\u003e . ?x \u003chttp://dbpedia.org/property/label\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "the band If",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/If_(band)",
        "seq": "49,51"
      }
    ],
    "id": "30f39069de5b4672a6f01513ae7e3491",
    "predicate mapping": [
      {
        "label": "produced by",
        "uri": "http://dbpedia.org/property/artist",
        "mappedBy": "word2vec"
      },
      {
        "label": "label",
        "uri": "http://dbpedia.org/property/label",
        "seq": "12,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What people were born in Ridgewood, New Jersey?",
    "SerialNumber": "522",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/birthPlace\u003e \u003chttp://dbpedia.org/resource/Ridgewood,_New_Jersey\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ridgewood, New Jersey",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Ridgewood,_New_Jersey",
        "seq": "25,46"
      }
    ],
    "id": "ff87b9ebc25a4997a01aed4bac145920",
    "predicate mapping": [
      {
        "label": "born in",
        "uri": "http://dbpedia.org/property/birthPlace",
        "seq": "17,24",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "people",
        "uri": "http://dbpedia.org/ontology/Person",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What is the company to which Fusajiro Yamauchi proprietor to ?",
    "SerialNumber": "524",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/foundedBy\u003e \u003chttp://dbpedia.org/resource/Fusajiro_Yamauchi\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Company\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Fusajiro Yamauchi",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Fusajiro_Yamauchi",
        "seq": "29,46"
      }
    ],
    "id": "8b84e189a1384ad4bf36163f27e3acac",
    "predicate mapping": [
      {
        "label": "proprietor",
        "uri": "http://dbpedia.org/ontology/foundedBy",
        "mappedBy": "word2vec"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company",
        "seq": "12,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What is the POD of the successor of Pmare I ?",
    "SerialNumber": "527",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Pōmare_I\u003e \u003chttp://dbpedia.org/property/successor\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/deathPlace\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Pōmare_I",
        "seq": "999,1000"
      }
    ],
    "id": "54e96a6a9d9749f6878cac13550c192a",
    "predicate mapping": [
      {
        "label": "successor",
        "uri": "http://dbpedia.org/property/successor",
        "seq": "23,32",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "POD",
        "uri": "http://dbpedia.org/ontology/deathPlace",
        "seq": "12,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "101",
    "question": "How many utopian and dystopian fiction books are there?",
    "SerialNumber": "530",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/ontology/literaryGenre\u003e \u003chttp://dbpedia.org/resource/Utopian_and_dystopian_fiction\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "utopian and dystopian fiction",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Utopian_and_dystopian_fiction",
        "seq": "9,38"
      }
    ],
    "id": "d0847ee1f87a43a88507df1216bc342b",
    "predicate mapping": [
      {
        "label": "books",
        "uri": "http://dbpedia.org/ontology/literaryGenre",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Does the Westchester Avenue fall under the Bronx?",
    "SerialNumber": "533",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Westchester_Avenue\u003e \u003chttp://dbpedia.org/property/counties\u003e \u003chttp://dbpedia.org/resource/The_Bronx\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Westchester Avenue",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Westchester_Avenue",
        "seq": "9,27"
      },
      {
        "label": "Bronx",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/The_Bronx",
        "seq": "43,48"
      }
    ],
    "id": "74a5cff93ee946babd0e69d98b975931",
    "predicate mapping": [
      {
        "label": "fall under",
        "uri": "http://dbpedia.org/property/counties",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "Which parties have their members live in the PM House, Colombo?",
    "SerialNumber": "538",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/residence\u003e \u003chttp://dbpedia.org/resource/Prime_Minister\u0027s_House_(Colombo)\u003e . ?uri \u003chttp://dbpedia.org/ontology/leader\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/PoliticalParty\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "colombo",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Prime_Minister\u0027s_House_(Colombo)",
        "seq": "999,1000"
      }
    ],
    "id": "2c3d0f285c6140879c32fc68bf2d2cfb",
    "predicate mapping": [
      {
        "label": "live in",
        "uri": "http://dbpedia.org/property/residence",
        "mappedBy": "word2vec"
      },
      {
        "label": "members",
        "uri": "http://dbpedia.org/ontology/leader",
        "mappedBy": "word2vec"
      },
      {
        "label": "parties",
        "uri": "http://dbpedia.org/ontology/PoliticalParty",
        "seq": "6,13",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "On what subject does WTJC-LP air?",
    "SerialNumber": "542",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/WTJC-LP\u003e \u003chttp://dbpedia.org/property/format\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "WTJC-LP",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/WTJC-LP",
        "seq": "21,28"
      }
    ],
    "id": "a1a2b9381ed049a882c87648db96c438",
    "predicate mapping": [
      {
        "label": "subject",
        "uri": "http://dbpedia.org/property/format",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which fictional character\u0027s relative is Clan McDuck and belongs to American Pekin duck ?",
    "SerialNumber": "548",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/relatives\u003e \u003chttp://dbpedia.org/resource/Clan_McDuck\u003e . ?uri \u003chttp://dbpedia.org/ontology/species\u003e \u003chttp://dbpedia.org/resource/American_Pekin_duck\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/FictionalCharacter\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Clan McDuck",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Clan_McDuck",
        "seq": "40,51"
      },
      {
        "label": "American Pekin duck",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/American_Pekin_duck",
        "seq": "67,86"
      }
    ],
    "id": "7282c5f557974ec99165996f0b27200a",
    "predicate mapping": [
      {
        "label": "relative",
        "uri": "http://dbpedia.org/property/relatives",
        "seq": "28,36",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "belongs",
        "uri": "http://dbpedia.org/ontology/species",
        "mappedBy": "word2vec"
      },
      {
        "label": "fictional character",
        "uri": "http://dbpedia.org/ontology/FictionalCharacter",
        "seq": "6,25",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Is michelangelo the painter of The Persian Boy?",
    "SerialNumber": "549",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/The_Persian_Boy\u003e \u003chttp://dbpedia.org/ontology/illustrator\u003e \u003chttp://dbpedia.org/resource/Michelangelo\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "The Persian Boy",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/The_Persian_Boy",
        "seq": "31,46"
      },
      {
        "label": "michelangelo",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Michelangelo",
        "seq": "3,15"
      }
    ],
    "id": "9b04388b468a4460a8e15aacaadf7853",
    "predicate mapping": [
      {
        "label": "painter",
        "uri": "http://dbpedia.org/ontology/illustrator",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which boarder country of Korean Peninsula was the state of Sodagreen ?",
    "SerialNumber": "552",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Korean_Peninsula\u003e \u003chttp://dbpedia.org/ontology/border\u003e ?uri. \u003chttp://dbpedia.org/resource/Sodagreen\u003e \u003chttp://dbpedia.org/ontology/country\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Korean Peninsula",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Korean_Peninsula",
        "seq": "25,41"
      },
      {
        "label": "Sodagreen",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Sodagreen",
        "seq": "59,68"
      }
    ],
    "id": "62461469fd01444f88e0d4d08359db98",
    "predicate mapping": [
      {
        "label": "boarder country",
        "uri": "http://dbpedia.org/ontology/border",
        "mappedBy": "word2vec"
      },
      {
        "label": "state of",
        "uri": "http://dbpedia.org/ontology/country",
        "seq": "14,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Where is the capital of Kelsey Creek located?",
    "SerialNumber": "553",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Kelsey_Creek\u003e \u003chttp://dbpedia.org/ontology/region\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/countySeat\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Kelsey Creek",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Kelsey_Creek",
        "seq": "24,36"
      }
    ],
    "id": "7f6ce18d38014a87a073ee8285106c60",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/ontology/region",
        "mappedBy": "word2vec"
      },
      {
        "label": "capital",
        "uri": "http://dbpedia.org/ontology/countySeat",
        "seq": "13,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "What does the famous relative of Levon Ashotovich Grigorian do for a living?",
    "SerialNumber": "556",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/relatives\u003e \u003chttp://dbpedia.org/resource/Levon_Ashotovich_Grigorian\u003e . ?x \u003chttp://dbpedia.org/ontology/occupation\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Levon Ashotovich Grigorian",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Levon_Ashotovich_Grigorian",
        "seq": "33,59"
      }
    ],
    "id": "b9d3a2fe75124f64855ddc9e0f97e76d",
    "predicate mapping": [
      {
        "label": "relative",
        "uri": "http://dbpedia.org/property/relatives",
        "seq": "21,29",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "living",
        "uri": "http://dbpedia.org/ontology/occupation",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "How many games are played at universities in Metro Manilla?",
    "SerialNumber": "559",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/state\u003e \u003chttp://dbpedia.org/resource/Metro_Manila\u003e . ?x \u003chttp://dbpedia.org/property/athletics\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Metro Manill",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Metro_Manila",
        "seq": "45,57"
      }
    ],
    "id": "3f0c5c6e16f44478976a62d32ee3a123",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/property/state",
        "seq": "42,44",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "played",
        "uri": "http://dbpedia.org/property/athletics",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Is Compaq a software company?",
    "SerialNumber": "561",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Compaq\u003e \u003chttp://dbpedia.org/ontology/industry\u003e \u003chttp://dbpedia.org/resource/Software\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Compaq",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Compaq",
        "seq": "3,9"
      },
      {
        "label": "software",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Software",
        "seq": "12,20"
      }
    ],
    "id": "35616e0b45534d1ba5aa8c3514527462",
    "predicate mapping": [
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/industry",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "Name the president served by a lieutenant who succeeded Bob C Riley.",
    "SerialNumber": "562",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/predecessor\u003e \u003chttp://dbpedia.org/resource/Bob_C._Riley\u003e . ?uri \u003chttp://dbpedia.org/ontology/lieutenant\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/President\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Bob C Riley",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Bob_C._Riley",
        "seq": "56,67"
      }
    ],
    "id": "039208f28c41401297caeb292230c23f",
    "predicate mapping": [
      {
        "label": "succeeded",
        "uri": "http://dbpedia.org/property/predecessor",
        "mappedBy": "word2vec"
      },
      {
        "label": "lieutenant",
        "uri": "http://dbpedia.org/ontology/lieutenant",
        "seq": "31,41",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "president",
        "uri": "http://dbpedia.org/ontology/President",
        "seq": "9,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Where is Oskar Blues located ?",
    "SerialNumber": "566",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Oskar_Blues_Brewery\u003e \u003chttp://dbpedia.org/property/location\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Oskar Blues",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Oskar_Blues_Brewery",
        "seq": "9,20"
      }
    ],
    "id": "b6fb2de828a94638a57cdb650825441c",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/property/location",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Was the FIS Alpine World Ski Championship of 1950 held in Colorado?",
    "SerialNumber": "567",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/FIS_Alpine_World_Ski_Championships_1950\u003e \u003chttp://dbpedia.org/property/hostCity\u003e \u003chttp://dbpedia.org/resource/Colorado\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "championship alpine world",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/FIS_Alpine_World_Ski_Championships_1950",
        "seq": "999,1000"
      },
      {
        "label": "Colorado",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Colorado",
        "seq": "58,66"
      }
    ],
    "id": "3cd2c8b70c7849889e3c298974187aed",
    "predicate mapping": [
      {
        "label": "held",
        "uri": "http://dbpedia.org/property/hostCity",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "List the science fiction shows broadcasted on BBC HD ?",
    "SerialNumber": "569",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/genre\u003e \u003chttp://dbpedia.org/resource/Science_fiction\u003e . ?uri \u003chttp://dbpedia.org/ontology/network\u003e \u003chttp://dbpedia.org/resource/BBC_HD\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "science fiction",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Science_fiction",
        "seq": "9,24"
      },
      {
        "label": "BBC HD",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/BBC_HD",
        "seq": "46,52"
      }
    ],
    "id": "06865b556f72412591e45e2b25e27d31",
    "predicate mapping": [
      {
        "label": " ",
        "uri": "http://dbpedia.org/property/genre",
        "mappedBy": "NA"
      },
      {
        "label": "broadcasted",
        "uri": "http://dbpedia.org/ontology/network",
        "mappedBy": "word2vec"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "25,30",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What is the division of the companies who make Runes of Magic?",
    "SerialNumber": "571",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/products\u003e \u003chttp://dbpedia.org/resource/Runes_of_Magic\u003e . ?x \u003chttp://dbpedia.org/ontology/division\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Company\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Runes of Magic",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Runes_of_Magic",
        "seq": "47,61"
      }
    ],
    "id": "8f4dcf2dc41047969a71b87fbfef4cc4",
    "predicate mapping": [
      {
        "label": "make",
        "uri": "http://dbpedia.org/property/products",
        "mappedBy": "word2vec"
      },
      {
        "label": "division",
        "uri": "http://dbpedia.org/ontology/division",
        "seq": "12,20",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "companies",
        "uri": "http://dbpedia.org/ontology/Company",
        "seq": "28,37",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "What common teams do Ramiro Pea and Bruce Bochy share?",
    "SerialNumber": "573",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Ramiro_Peña\u003e \u003chttp://dbpedia.org/ontology/team\u003e ?uri. \u003chttp://dbpedia.org/resource/Bruce_Bochy\u003e \u003chttp://dbpedia.org/ontology/team\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "ramiro",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Ramiro_Peña",
        "seq": "999,1000"
      },
      {
        "label": "Bruce Bochy",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Bruce_Bochy",
        "seq": "36,47"
      }
    ],
    "id": "bc77c3a5c2aa48beb648fd70de67488e",
    "predicate mapping": [
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/team",
        "seq": "12,16",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/team",
        "seq": "12,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "In which sitcom did Jeff Conaway acted and had TNT as its network ?",
    "SerialNumber": "574",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/network\u003e \u003chttp://dbpedia.org/resource/TNT_(TV_channel)\u003e . ?uri \u003chttp://dbpedia.org/ontology/starring\u003e \u003chttp://dbpedia.org/resource/Jeff_Conaway\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "TNT",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/TNT_(TV_channel)",
        "seq": "47,50"
      },
      {
        "label": "Jeff Conaway",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Jeff_Conaway",
        "seq": "20,32"
      }
    ],
    "id": "491b0f3480c14c608b26e8e745514b9a",
    "predicate mapping": [
      {
        "label": "network",
        "uri": "http://dbpedia.org/property/network",
        "seq": "58,65",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "acted",
        "uri": "http://dbpedia.org/ontology/starring",
        "seq": "-1,1",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "sitcom",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "406",
    "question": "How many buildings are located in the jurisdiction of John Tory?",
    "SerialNumber": "576",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/leaderName\u003e \u003chttp://dbpedia.org/resource/John_Tory\u003e . ?uri \u003chttp://dbpedia.org/property/location\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Building\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "John Tory",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/John_Tory",
        "seq": "54,63"
      }
    ],
    "id": "323011153fec4b5ca0658605fdf7ff6e",
    "predicate mapping": [
      {
        "label": "jurisdiction",
        "uri": "http://dbpedia.org/ontology/leaderName",
        "mappedBy": "word2vec"
      },
      {
        "label": "located",
        "uri": "http://dbpedia.org/property/location",
        "mappedBy": "word2vec"
      },
      {
        "label": "building",
        "uri": "http://dbpedia.org/ontology/Building",
        "seq": "9,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Which railway line goes through the stations which are a part of the North Caucasus railway?",
    "SerialNumber": "577",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/type\u003e \u003chttp://dbpedia.org/resource/North_Caucasus_Railway\u003e . ?x \u003chttp://dbpedia.org/ontology/servingRailwayLine\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Station\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "North Caucasus railway",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/North_Caucasus_Railway",
        "seq": "69,91"
      }
    ],
    "id": "d988b1b86f7d4f20bb3fc106bb997062",
    "predicate mapping": [
      {
        "label": "part",
        "uri": "http://dbpedia.org/ontology/type",
        "mappedBy": "word2vec"
      },
      {
        "label": "railway line",
        "uri": "http://dbpedia.org/ontology/servingRailwayLine",
        "seq": "6,13",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "station",
        "uri": "http://dbpedia.org/ontology/Station",
        "seq": "36,43",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What are some bands originating in London?",
    "SerialNumber": "579",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/hometown\u003e \u003chttp://dbpedia.org/resource/London\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Band\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "London",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/London",
        "seq": "35,41"
      }
    ],
    "id": "0200198676244b77993641150454251c",
    "predicate mapping": [
      {
        "label": "originating",
        "uri": "http://dbpedia.org/ontology/hometown",
        "mappedBy": "word2vec"
      },
      {
        "label": "band",
        "uri": "http://dbpedia.org/ontology/Band",
        "seq": "14,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "What are some video games whose music is composed by an employ of the company Creatures?",
    "SerialNumber": "582",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/occupation\u003e \u003chttp://dbpedia.org/resource/Creatures_(company)\u003e . ?uri \u003chttp://dbpedia.org/property/composer\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/VideoGame\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Creatures",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Creatures_(company)",
        "seq": "78,87"
      }
    ],
    "id": "4d2907c9a4124f3097f04807bcef9d19",
    "predicate mapping": [
      {
        "label": "employ",
        "uri": "http://dbpedia.org/ontology/occupation",
        "mappedBy": "word2vec"
      },
      {
        "label": "composed",
        "uri": "http://dbpedia.org/property/composer",
        "seq": "41,49",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "video game",
        "uri": "http://dbpedia.org/ontology/VideoGame",
        "seq": "14,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which televion show\u0027s theme music was given by Ron Grainer and is broadcasted by BBC HD ?",
    "SerialNumber": "584",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/themeMusicComposer\u003e \u003chttp://dbpedia.org/resource/Ron_Grainer\u003e . ?uri \u003chttp://dbpedia.org/ontology/network\u003e \u003chttp://dbpedia.org/resource/BBC_HD\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ron Grainer",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ron_Grainer",
        "seq": "47,58"
      },
      {
        "label": "BBC HD",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/BBC_HD",
        "seq": "81,87"
      }
    ],
    "id": "c949eeb67a4c448589588ee0e2862b8d",
    "predicate mapping": [
      {
        "label": "theme music",
        "uri": "http://dbpedia.org/property/themeMusicComposer",
        "seq": "22,33",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "broadcasted",
        "uri": "http://dbpedia.org/ontology/network",
        "mappedBy": "word2vec"
      },
      {
        "label": "televion show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What team did J P Paris was former team of Bert McCaffrey play for?",
    "SerialNumber": "585",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/J._P._Parisé\u003e \u003chttp://dbpedia.org/property/playedFor\u003e ?uri. \u003chttp://dbpedia.org/resource/Bert_McCaffrey\u003e \u003chttp://dbpedia.org/ontology/formerTeam\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "paris",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/J._P._Parisé",
        "seq": "999,1000"
      },
      {
        "label": "Bert McCaffrey",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Bert_McCaffrey",
        "seq": "43,57"
      }
    ],
    "id": "c251f7bc65ec4dc9a1b5611b34395b65",
    "predicate mapping": [
      {
        "label": "team",
        "uri": "http://dbpedia.org/property/playedFor",
        "seq": "5,9",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "former team",
        "uri": "http://dbpedia.org/ontology/formerTeam",
        "seq": "28,39",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "List the opponents of the relatives of Thomas Helwys?",
    "SerialNumber": "587",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/relation\u003e \u003chttp://dbpedia.org/resource/Thomas_Helwys\u003e . ?x \u003chttp://dbpedia.org/ontology/opponent\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Thomas Helwys",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Thomas_Helwys",
        "seq": "39,52"
      }
    ],
    "id": "7d7c76e45ef64f46920bd1841c5aab92",
    "predicate mapping": [
      {
        "label": "relatives",
        "uri": "http://dbpedia.org/ontology/relation",
        "mappedBy": "word2vec"
      },
      {
        "label": "opponent",
        "uri": "http://dbpedia.org/ontology/opponent",
        "seq": "9,17",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": " ",
        "uri": "http://dbpedia.org/ontology/Person",
        "mappedBy": "NA"
      }
    ]
  },
  {
    "sparql_id": "403",
    "question": "What are some other great things by the person who produced Queer as Folk?",
    "SerialNumber": "592",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { \u003chttp://dbpedia.org/resource/Queer_as_Folk_(UK_TV_series)\u003e \u003chttp://dbpedia.org/ontology/producer\u003e ?x . ?x \u003chttp://dbpedia.org/property/notableworks\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Queer as Folk",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Queer_as_Folk_(UK_TV_series)",
        "seq": "60,73"
      }
    ],
    "id": "96c4bef12a134fb8bb1ac835d064c51a",
    "predicate mapping": [
      {
        "label": "produced",
        "uri": "http://dbpedia.org/ontology/producer",
        "seq": "51,59",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "great things",
        "uri": "http://dbpedia.org/property/notableworks",
        "mappedBy": "word2vec"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/Person",
        "seq": "40,46",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which relative of George Madison was the leader of United States House of Representatives elections, 1788 and 1789 ?",
    "SerialNumber": "595",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/George_Madison\u003e \u003chttp://dbpedia.org/ontology/relation\u003e ?uri. \u003chttp://dbpedia.org/resource/United_States_House_of_Representatives_elections,_1788_and_1789\u003e \u003chttp://dbpedia.org/property/leader\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "George Madison",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/George_Madison",
        "seq": "18,32"
      },
      {
        "label": "United States House of Representatives elections, 1788 and 1789",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/United_States_House_of_Representatives_elections,_1788_and_1789",
        "seq": "51,114"
      }
    ],
    "id": "188d75500ece496ca5e4f31ef1d853e0",
    "predicate mapping": [
      {
        "label": "relative",
        "uri": "http://dbpedia.org/ontology/relation",
        "mappedBy": "word2vec"
      },
      {
        "label": "leader",
        "uri": "http://dbpedia.org/property/leader",
        "seq": "41,47",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Name the profession of Oamr D Conger for which Jack Ryan was also nominated ?",
    "SerialNumber": "600",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Jack_Ryan_(politician)\u003e \u003chttp://dbpedia.org/ontology/nominee\u003e ?uri. \u003chttp://dbpedia.org/resource/Omar_D._Conger\u003e \u003chttp://dbpedia.org/property/order\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jack Ryan",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Jack_Ryan_(politician)",
        "seq": "47,56"
      },
      {
        "label": "conger",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Omar_D._Conger",
        "seq": "999,1000"
      }
    ],
    "id": "7a064f0bfba14e8da7581b3b362b0a37",
    "predicate mapping": [
      {
        "label": "nominated",
        "uri": "http://dbpedia.org/ontology/nominee",
        "mappedBy": "word2vec"
      },
      {
        "label": "profession",
        "uri": "http://dbpedia.org/property/order",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Does the Vadodara Railway station lie at the end of the Mathura Vadodara route?",
    "SerialNumber": "602",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Mathura–Vadodara_Section\u003e \u003chttp://dbpedia.org/ontology/routeEnd\u003e \u003chttp://dbpedia.org/resource/Vadodara_Junction_railway_station\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "vadodara mathura",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Mathura–Vadodara_Section",
        "seq": "999,1000"
      },
      {
        "label": "vadodara station railway",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Vadodara_Junction_railway_station",
        "seq": "999,1000"
      }
    ],
    "id": "cb70f9c4ab6e46b9bb6781e259febc55",
    "predicate mapping": [
      {
        "label": "route end",
        "uri": "http://dbpedia.org/ontology/routeEnd",
        "seq": "-1,8",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "In which city are buildings by Solon Spencer Beman found?",
    "SerialNumber": "605",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/architect\u003e \u003chttp://dbpedia.org/resource/Solon_Spencer_Beman\u003e . ?x \u003chttp://dbpedia.org/property/locationTown\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Building\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Solon Spencer Beman",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Solon_Spencer_Beman",
        "seq": "31,50"
      }
    ],
    "id": "2fd09016a75d42d4b3601fc9712d3ae5",
    "predicate mapping": [
      {
        "label": "found",
        "uri": "http://dbpedia.org/ontology/architect",
        "mappedBy": "word2vec"
      },
      {
        "label": "city",
        "uri": "http://dbpedia.org/property/locationTown",
        "mappedBy": "word2vec"
      },
      {
        "label": "building",
        "uri": "http://dbpedia.org/ontology/Building",
        "seq": "18,26",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the scientist who was the winner of Royal Society award and had Georg Meissner as his doctoral advisor ?",
    "SerialNumber": "606",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/prizes\u003e \u003chttp://dbpedia.org/resource/Royal_Society\u003e . ?uri \u003chttp://dbpedia.org/property/doctoralAdvisor\u003e \u003chttp://dbpedia.org/resource/Georg_Meissner\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Scientist\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Royal Society",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Royal_Society",
        "seq": "41,54"
      },
      {
        "label": "Georg Meissner",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Georg_Meissner",
        "seq": "69,83"
      }
    ],
    "id": "1df69aaf84db4e6ebf8479f68c52d2fe",
    "predicate mapping": [
      {
        "label": "award",
        "uri": "http://dbpedia.org/property/prizes",
        "mappedBy": "word2vec"
      },
      {
        "label": "doctoral advisor",
        "uri": "http://dbpedia.org/property/doctoralAdvisor",
        "seq": "91,107",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "scientist",
        "uri": "http://dbpedia.org/ontology/Scientist",
        "seq": "9,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "How many religions are practiced by diplomats?",
    "SerialNumber": "609",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/profession\u003e \u003chttp://dbpedia.org/resource/Diplomacy\u003e . ?x \u003chttp://dbpedia.org/property/religion\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "diplomats",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Diplomacy",
        "seq": "999,1000"
      }
    ],
    "id": "1b089c7e3c454ff898540e7d20d840c6",
    "predicate mapping": [
      {
        "label": "practiced",
        "uri": "http://dbpedia.org/ontology/profession",
        "mappedBy": "word2vec"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/property/religion",
        "seq": "9,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Where is the senator from whose successor was James belford?",
    "SerialNumber": "613",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/successor\u003e \u003chttp://dbpedia.org/resource/James_B._Belford\u003e . ?x \u003chttp://dbpedia.org/ontology/region\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Senator\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "James",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/James_B._Belford",
        "seq": "46,51"
      }
    ],
    "id": "b7c61495bc5c42969a8ec600aea66096",
    "predicate mapping": [
      {
        "label": "successor",
        "uri": "http://dbpedia.org/property/successor",
        "seq": "32,41",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "Where",
        "uri": "http://dbpedia.org/ontology/region",
        "mappedBy": "word2vec"
      },
      {
        "label": "senator",
        "uri": "http://dbpedia.org/ontology/Senator",
        "seq": "13,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "101",
    "question": "How many ",
    "SerialNumber": "621",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/property/team\u003e \u003chttp://dbpedia.org/resource/Chicago_Bulls\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Chicago_Bulls",
        "seq": "999,1000"
      }
    ],
    "id": "29d041b6917e47cbbcc098c7a848a397",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/team",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "Name the airlines which have a hub in airport in SF?",
    "SerialNumber": "624",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/cityServed\u003e \u003chttp://dbpedia.org/resource/San_Francisco\u003e . ?uri \u003chttp://dbpedia.org/property/hubs\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Airline\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "SF",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/San_Francisco",
        "seq": "999,1000"
      }
    ],
    "id": "60f31d985aed488e9d589db655e932ad",
    "predicate mapping": [
      {
        "label": "airport",
        "uri": "http://dbpedia.org/property/cityServed",
        "mappedBy": "word2vec"
      },
      {
        "label": "hub",
        "uri": "http://dbpedia.org/property/hubs",
        "seq": "31,34",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "airline",
        "uri": "http://dbpedia.org/ontology/Airline",
        "seq": "9,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "What is the religion of the ethnic group to which the relatives of Waxiang people belong?",
    "SerialNumber": "628",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Waxiang_people\u003e \u003chttp://dbpedia.org/property/related\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/religion\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/EthnicGroup\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Waxiang people",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Waxiang_people",
        "seq": "67,81"
      }
    ],
    "id": "b955cb31b2e74d689d1313c1238b9510",
    "predicate mapping": [
      {
        "label": "relatives",
        "uri": "http://dbpedia.org/property/related",
        "mappedBy": "word2vec"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion",
        "seq": "12,20",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "ethnic group",
        "uri": "http://dbpedia.org/ontology/EthnicGroup",
        "seq": "28,40",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which wine region of Bogdanua is the mouth country of Upper Neretva ?",
    "SerialNumber": "629",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Bogdanuša\u003e \u003chttp://dbpedia.org/ontology/wineRegion\u003e ?uri. \u003chttp://dbpedia.org/resource/Upper_Neretva\u003e \u003chttp://dbpedia.org/ontology/mouthCountry\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Bogdanuša",
        "seq": "999,1000"
      },
      {
        "label": "Upper Neretva",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Upper_Neretva",
        "seq": "54,67"
      }
    ],
    "id": "6635a5b9155b48f792eef26dfc0df7d4",
    "predicate mapping": [
      {
        "label": "wine region",
        "uri": "http://dbpedia.org/ontology/wineRegion",
        "seq": "6,17",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "mouth country",
        "uri": "http://dbpedia.org/ontology/mouthCountry",
        "seq": "37,50",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "Under whom did Charles Drummond Ellis do his PhD?",
    "SerialNumber": "630",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/doctoralStudent\u003e \u003chttp://dbpedia.org/resource/Charles_Drummond_Ellis\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Charles Drummond Ellis",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Charles_Drummond_Ellis",
        "seq": "15,37"
      }
    ],
    "id": "990ab53fdb8b485cbcd019106a15fdf2",
    "predicate mapping": [
      {
        "label": "PhD",
        "uri": "http://dbpedia.org/ontology/doctoralStudent",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which associat of Martin Pugh is also married to Alana Stewert ?",
    "SerialNumber": "632",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Martin_Pugh\u003e \u003chttp://dbpedia.org/property/associatedActs\u003e ?uri. \u003chttp://dbpedia.org/resource/Alana_Stewart\u003e \u003chttp://dbpedia.org/ontology/spouse\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Martin Pugh",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Martin_Pugh",
        "seq": "18,29"
      },
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Alana_Stewart",
        "seq": "999,1000"
      }
    ],
    "id": "985720996060414598cdbaa9aaacff57",
    "predicate mapping": [
      {
        "label": "associat",
        "uri": "http://dbpedia.org/property/associatedActs",
        "seq": "6,14",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "married to",
        "uri": "http://dbpedia.org/ontology/spouse",
        "seq": "38,48",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What is the drafted team of the people expected to join toronto marlies?",
    "SerialNumber": "634",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/prospectTeam\u003e \u003chttp://dbpedia.org/resource/Toronto_Marlies\u003e . ?x \u003chttp://dbpedia.org/property/draftTeam\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "toronto marlies",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Toronto_Marlies",
        "seq": "56,71"
      }
    ],
    "id": "498184a91d854ed990f032d429a05ca2",
    "predicate mapping": [
      {
        "label": "expected to join",
        "uri": "http://dbpedia.org/ontology/prospectTeam",
        "seq": "20,24",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "drafted team",
        "uri": "http://dbpedia.org/property/draftTeam",
        "seq": "12,19",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "people",
        "uri": "http://dbpedia.org/ontology/Person",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What city in the US was Alfred Phillips born in, and is the resting place of William Smith?",
    "SerialNumber": "635",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/William_H._Smith_(Connecticut)\u003e \u003chttp://dbpedia.org/ontology/restingPlace\u003e ?uri. \u003chttp://dbpedia.org/resource/Alfred_N._Phillips\u003e \u003chttp://dbpedia.org/property/birthPlace\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "william smith",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/William_H._Smith_(Connecticut)",
        "seq": "999,1000"
      },
      {
        "label": "phillips alfred",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Alfred_N._Phillips",
        "seq": "999,1000"
      }
    ],
    "id": "0a162d878e5549cd8ae6dc4f7072b4f6",
    "predicate mapping": [
      {
        "label": "resting place",
        "uri": "http://dbpedia.org/ontology/restingPlace",
        "seq": "60,73",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "born in",
        "uri": "http://dbpedia.org/property/birthPlace",
        "seq": "40,47",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Who is the prime minister of Michael Jeffery who is also the minister of Williuam Deane ?",
    "SerialNumber": "636",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Michael_Jeffery\u003e \u003chttp://dbpedia.org/property/primeminister\u003e ?uri. \u003chttp://dbpedia.org/resource/William_Deane\u003e \u003chttp://dbpedia.org/ontology/primeMinister\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Michael Jeffery",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Michael_Jeffery",
        "seq": "29,44"
      },
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/William_Deane",
        "seq": "999,1000"
      }
    ],
    "id": "84c03af6b5c245db868cbc950af922c2",
    "predicate mapping": [
      {
        "label": "minister",
        "uri": "http://dbpedia.org/property/primeminister",
        "seq": "17,25",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "prime minister",
        "uri": "http://dbpedia.org/ontology/primeMinister",
        "seq": "11,25",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who appointed the governor under whom Richard Winn works?",
    "SerialNumber": "637",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/lieutenant\u003e \u003chttp://dbpedia.org/resource/Richard_Winn\u003e . ?x \u003chttp://dbpedia.org/property/appointer\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Governor\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Richard Winn",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Richard_Winn",
        "seq": "38,50"
      }
    ],
    "id": "f5a63f5184f9424c9270d397df5f2af4",
    "predicate mapping": [
      {
        "label": "works",
        "uri": "http://dbpedia.org/property/lieutenant",
        "mappedBy": "word2vec"
      },
      {
        "label": "appointed",
        "uri": "http://dbpedia.org/property/appointer",
        "seq": "4,13",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "governor",
        "uri": "http://dbpedia.org/ontology/Governor",
        "seq": "18,26",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Which company owns the manufacturer of the Edsel Ranger?",
    "SerialNumber": "643",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/products\u003e \u003chttp://dbpedia.org/resource/Edsel_Ranger\u003e . ?x \u003chttp://dbpedia.org/property/parent\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Edsel Ranger",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Edsel_Ranger",
        "seq": "43,55"
      }
    ],
    "id": "67ecca468f0c460ab67ebee020cb7268",
    "predicate mapping": [
      {
        "label": "company",
        "uri": "http://dbpedia.org/property/products",
        "mappedBy": "word2vec"
      },
      {
        "label": "manufacturer",
        "uri": "http://dbpedia.org/property/parent",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "Which are the major hubs of airline which operates the Menora Tunnel?",
    "SerialNumber": "644",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Menora_Tunnel\u003e \u003chttp://dbpedia.org/property/operator\u003e ?x . ?x \u003chttp://dbpedia.org/property/hubs\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Airline\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Menora Tunnel",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Menora_Tunnel",
        "seq": "55,68"
      }
    ],
    "id": "db326f887c6646c28e21a7483a238e7b",
    "predicate mapping": [
      {
        "label": "operates",
        "uri": "http://dbpedia.org/property/operator",
        "mappedBy": "word2vec"
      },
      {
        "label": "hubs",
        "uri": "http://dbpedia.org/property/hubs",
        "seq": "20,24",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "airline",
        "uri": "http://dbpedia.org/ontology/Airline",
        "seq": "28,35",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name a scientist whose official residence is Cape Town and also won a gold medal at the Royal Astronomical Society ?",
    "SerialNumber": "645",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/prizes\u003e \u003chttp://dbpedia.org/resource/Gold_Medal_of_the_Royal_Astronomical_Society\u003e . ?uri \u003chttp://dbpedia.org/property/residence\u003e \u003chttp://dbpedia.org/resource/Cape_Town\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Scientist\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "astronomical society",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Gold_Medal_of_the_Royal_Astronomical_Society",
        "seq": "999,1000"
      },
      {
        "label": "Cape Town",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Cape_Town",
        "seq": "45,54"
      }
    ],
    "id": "ec18ccd4be91486aa5253f7a802da354",
    "predicate mapping": [
      {
        "label": "won a gold medal",
        "uri": "http://dbpedia.org/property/prizes",
        "mappedBy": "word2vec"
      },
      {
        "label": "residence",
        "uri": "http://dbpedia.org/property/residence",
        "seq": "32,41",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "scientist",
        "uri": "http://dbpedia.org/ontology/Scientist",
        "seq": "7,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "307",
    "question": "What is the military conflict whose commanders are John McEwen and Phm Vn ng?",
    "SerialNumber": "646",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/ontology/commander\u003e \u003chttp://dbpedia.org/resource/John_McEwen\u003e . ?uri \u003chttp://dbpedia.org/ontology/commander\u003e \u003chttp://dbpedia.org/resource/Phạm_Văn_Đồng\u003e . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MilitaryConflict\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "John McEwen",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/John_McEwen",
        "seq": "51,62"
      },
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Phạm_Văn_Đồng",
        "seq": "999,1000"
      }
    ],
    "id": "0b3d0e13d8b3401a856b23b0fc75529c",
    "predicate mapping": [
      {
        "label": "commander",
        "uri": "http://dbpedia.org/ontology/commander",
        "seq": "36,45",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "commander",
        "uri": "http://dbpedia.org/ontology/commander",
        "seq": "36,45",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "military conflict",
        "uri": "http://dbpedia.org/ontology/MilitaryConflict",
        "seq": "12,29",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "In which countries have models hanged themselves?",
    "SerialNumber": "647",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/deathCause\u003e \u003chttp://dbpedia.org/resource/Suicide_by_hanging\u003e . ?x \u003chttp://dbpedia.org/property/citizenship\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Model\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "hanged themselves",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Suicide_by_hanging",
        "seq": "999,1000"
      }
    ],
    "id": "1b8c3dffd3644c3bbd459adb51ae437e",
    "predicate mapping": [
      {
        "label": "hanged",
        "uri": "http://dbpedia.org/property/deathCause",
        "mappedBy": "word2vec"
      },
      {
        "label": "countries",
        "uri": "http://dbpedia.org/property/citizenship",
        "mappedBy": "word2vec"
      },
      {
        "label": "model",
        "uri": "http://dbpedia.org/ontology/Model",
        "seq": "24,29",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Bridges over what can carry vehicles?",
    "SerialNumber": "648",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/carries\u003e \u003chttp://dbpedia.org/resource/Motor_vehicle\u003e . ?x \u003chttp://dbpedia.org/property/crosses\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Bridge\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Motor_vehicle",
        "seq": "999,1000"
      }
    ],
    "id": "8a41604d7495428fa67cccf0d3789635",
    "predicate mapping": [
      {
        "label": "carry",
        "uri": "http://dbpedia.org/property/carries",
        "seq": "22,27",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "over",
        "uri": "http://dbpedia.org/property/crosses",
        "seq": "8,12",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "Bridge",
        "uri": "http://dbpedia.org/ontology/Bridge",
        "seq": "0,6",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "406",
    "question": "Count the number of schools which are in a city governed by the West Berkshire Council?",
    "SerialNumber": "653",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/leaderName\u003e \u003chttp://dbpedia.org/resource/West_Berkshire_Council\u003e . ?uri \u003chttp://dbpedia.org/property/city\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/School\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "West Berkshire Council",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/West_Berkshire_Council",
        "seq": "64,86"
      }
    ],
    "id": "aa3079fefe4f4e10a2d8ca21b1b91900",
    "predicate mapping": [
      {
        "label": "governed",
        "uri": "http://dbpedia.org/ontology/leaderName",
        "mappedBy": "word2vec"
      },
      {
        "label": "city",
        "uri": "http://dbpedia.org/property/city",
        "seq": "43,47",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "school",
        "uri": "http://dbpedia.org/ontology/School",
        "seq": "20,26",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Did Hank Williams Jr. make Early in the Morning and Late at Night?",
    "SerialNumber": "654",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Early_in_the_Morning_and_Late_at_Night\u003e \u003chttp://dbpedia.org/ontology/musicalArtist\u003e \u003chttp://dbpedia.org/resource/Hank_Williams_Jr.\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Early in the Morning and Late at Night",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Early_in_the_Morning_and_Late_at_Night",
        "seq": "27,65"
      },
      {
        "label": "Hank Williams Jr.",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Hank_Williams_Jr.",
        "seq": "4,21"
      }
    ],
    "id": "61ea6ede582149b797b26eb6e7d81466",
    "predicate mapping": [
      {
        "label": "make",
        "uri": "http://dbpedia.org/ontology/musicalArtist",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "List some leaders of regions in the Indian Standard Time Zone?",
    "SerialNumber": "656",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/timeZone\u003e \u003chttp://dbpedia.org/resource/Indian_Standard_Time\u003e . ?x \u003chttp://dbpedia.org/ontology/leaderName\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Place\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Indian Standard Time",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Indian_Standard_Time",
        "seq": "36,56"
      }
    ],
    "id": "090a2f17823f4673b945c4a938226989",
    "predicate mapping": [
      {
        "label": "Time Zone",
        "uri": "http://dbpedia.org/ontology/timeZone",
        "seq": "52,61",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "leaders",
        "uri": "http://dbpedia.org/ontology/leaderName",
        "seq": "10,17",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "regions",
        "uri": "http://dbpedia.org/ontology/Place",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "8",
    "question": "List the spanish football player in the NYC FC ?",
    "SerialNumber": "657",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/currentclub\u003e \u003chttp://dbpedia.org/resource/New_York_City_FC\u003e . ?uri \u003chttp://dbpedia.org/property/nationalteam\u003e \u003chttp://dbpedia.org/resource/Spain_national_football_team\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "NYC FC",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/New_York_City_FC",
        "seq": "999,1000"
      },
      {
        "label": "spanish football",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Spain_national_football_team",
        "seq": "999,1000"
      }
    ],
    "id": "e65c0a467ab640ffaacbfe397559a139",
    "predicate mapping": [
      {
        "label": "player",
        "uri": "http://dbpedia.org/property/currentclub",
        "mappedBy": "word2vec"
      },
      {
        "label": "player",
        "uri": "http://dbpedia.org/property/nationalteam",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "Who is the person whose child performed with Tony Bennett?",
    "SerialNumber": "658",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/associatedActs\u003e \u003chttp://dbpedia.org/resource/Tony_Bennett\u003e . ?uri \u003chttp://dbpedia.org/ontology/child\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Tony Bennett",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Tony_Bennett",
        "seq": "45,57"
      }
    ],
    "id": "390c756eecd94acfb6335abcaa91832a",
    "predicate mapping": [
      {
        "label": "performed",
        "uri": "http://dbpedia.org/property/associatedActs",
        "mappedBy": "word2vec"
      },
      {
        "label": "child",
        "uri": "http://dbpedia.org/ontology/child",
        "seq": "24,29",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "Name the rivers originating from an English speaking nation?",
    "SerialNumber": "659",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/officialLanguage\u003e \u003chttp://dbpedia.org/resource/English_language\u003e . ?uri \u003chttp://dbpedia.org/ontology/sourceCountry\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/River\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "English",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/English_language",
        "seq": "36,43"
      }
    ],
    "id": "4c95fa0cb00b42b29b9f111561804b5b",
    "predicate mapping": [
      {
        "label": "speaking",
        "uri": "http://dbpedia.org/ontology/officialLanguage",
        "mappedBy": "word2vec"
      },
      {
        "label": "originating",
        "uri": "http://dbpedia.org/ontology/sourceCountry",
        "mappedBy": "word2vec"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "Which cities were in the TV Show which came after The Ultimate Fighter: Brazil 2?",
    "SerialNumber": "663",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/The_Ultimate_Fighter:_Brazil_2\u003e \u003chttp://dbpedia.org/ontology/subsequentWork\u003e ?x . ?x \u003chttp://dbpedia.org/property/city\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "The Ultimate Fighter: Brazil 2",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Ultimate_Fighter:_Brazil_2",
        "seq": "50,80"
      }
    ],
    "id": "f860781f868d4a7f9f59ad56d60e1021",
    "predicate mapping": [
      {
        "label": "came after",
        "uri": "http://dbpedia.org/ontology/subsequentWork",
        "mappedBy": "word2vec"
      },
      {
        "label": "in",
        "uri": "http://dbpedia.org/property/city",
        "seq": "18,20",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "TV Show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "-1,3",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "403",
    "question": "How many teams have used the stadium which hosted the WCW mayhem?",
    "SerialNumber": "666",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { \u003chttp://dbpedia.org/resource/WCW_Mayhem\u003e \u003chttp://dbpedia.org/property/venue\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/tenant\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Stadium\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "WCW mayhem",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/WCW_Mayhem",
        "seq": "54,64"
      }
    ],
    "id": "85765cfbd20546b2a65b2cfc5e50cf3e",
    "predicate mapping": [
      {
        "label": "hosted",
        "uri": "http://dbpedia.org/property/venue",
        "mappedBy": "word2vec"
      },
      {
        "label": "used",
        "uri": "http://dbpedia.org/ontology/tenant",
        "mappedBy": "word2vec"
      },
      {
        "label": "stadium",
        "uri": "http://dbpedia.org/ontology/Stadium",
        "seq": "29,36",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Marika Gombitov makes songs in which languages?",
    "SerialNumber": "667",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/artist\u003e \u003chttp://dbpedia.org/resource/Marika_Gombitová\u003e . ?x \u003chttp://dbpedia.org/property/language\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Marika Gombitov ",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Marika_Gombitová",
        "seq": "0,16"
      }
    ],
    "id": "2f4493990eff40b794e67500a851e312",
    "predicate mapping": [
      {
        "label": "songs",
        "uri": "http://dbpedia.org/property/artist",
        "mappedBy": "word2vec"
      },
      {
        "label": "language",
        "uri": "http://dbpedia.org/property/language",
        "seq": "37,45",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "106",
    "question": "How many people have played for a club whose coach is Fred Hoiberg?",
    "SerialNumber": "671",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/coach\u003e \u003chttp://dbpedia.org/resource/Fred_Hoiberg\u003e . ?uri \u003chttp://dbpedia.org/property/team\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Fred Hoiberg",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Fred_Hoiberg",
        "seq": "54,66"
      }
    ],
    "id": "f297c53e8f6b4b54abee32483ecdf9a2",
    "predicate mapping": [
      {
        "label": "coach",
        "uri": "http://dbpedia.org/ontology/coach",
        "seq": "45,50",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "club",
        "uri": "http://dbpedia.org/property/team",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the TV show distributed by Broadcast Syndication and is broadcasted by comedy central ?",
    "SerialNumber": "673",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/distributor\u003e \u003chttp://dbpedia.org/resource/Broadcast_syndication\u003e . ?uri \u003chttp://dbpedia.org/property/network\u003e \u003chttp://dbpedia.org/resource/Comedy_Central\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Broadcast Syndication",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Broadcast_syndication",
        "seq": "32,53"
      },
      {
        "label": "comedy central",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Comedy_Central",
        "seq": "76,90"
      }
    ],
    "id": "ff2c4d6fe5ce44f99d580e8a58235a3f",
    "predicate mapping": [
      {
        "label": "distributed by",
        "uri": "http://dbpedia.org/ontology/distributor",
        "seq": "17,31",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "broadcasted",
        "uri": "http://dbpedia.org/property/network",
        "mappedBy": "word2vec"
      },
      {
        "label": "TV show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "12,16",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "How many relatives are there of people fought in the Battle of the Bulge?",
    "SerialNumber": "674",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/battles\u003e \u003chttp://dbpedia.org/resource/Battle_of_the_Bulge\u003e . ?x \u003chttp://dbpedia.org/ontology/relation\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Battle of the Bulge",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Battle_of_the_Bulge",
        "seq": "53,72"
      }
    ],
    "id": "f7e7d5fe2f2f43e7b214ca25b7e066a8",
    "predicate mapping": [
      {
        "label": "battle",
        "uri": "http://dbpedia.org/property/battles",
        "seq": "-1,5",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "relatives",
        "uri": "http://dbpedia.org/ontology/relation",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What band made The trial and One of these days song?",
    "SerialNumber": "676",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/The_Trial_(song)\u003e \u003chttp://dbpedia.org/property/artist\u003e ?uri. \u003chttp://dbpedia.org/resource/One_of_These_Days_(instrumental)\u003e \u003chttp://dbpedia.org/ontology/musicalArtist\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "The trial",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Trial_(song)",
        "seq": "15,24"
      },
      {
        "label": "One of these days",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/One_of_These_Days_(instrumental)",
        "seq": "29,46"
      }
    ],
    "id": "16115d9103a74efaa5fcb54f18cbde0e",
    "predicate mapping": [
      {
        "label": "song",
        "uri": "http://dbpedia.org/property/artist",
        "mappedBy": "word2vec"
      },
      {
        "label": "band",
        "uri": "http://dbpedia.org/ontology/musicalArtist",
        "seq": "5,9",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who was the bronze medalist of Swimming at the 2008 Summer Olympics  Men\u0027s 400 metre individual medley ?",
    "SerialNumber": "678",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Swimming_at_the_2008_Summer_Olympics_–_Men\u0027s_400_metre_individual_medley\u003e \u003chttp://dbpedia.org/ontology/bronzeMedalist\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "individual swimming olympics summer medley",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Swimming_at_the_2008_Summer_Olympics_–_Men\u0027s_400_metre_individual_medley",
        "seq": "999,1000"
      }
    ],
    "id": "6fc805721dc8491585c10f0f2e2592d1",
    "predicate mapping": [
      {
        "label": "bronze medalist",
        "uri": "http://dbpedia.org/ontology/bronzeMedalist",
        "seq": "12,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Which country\u0027s people work in the Birdman enterprises?",
    "SerialNumber": "680",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/institution\u003e \u003chttp://dbpedia.org/resource/Birdman_Enterprises\u003e . ?x \u003chttp://dbpedia.org/property/nationality\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Engineer\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Birdman enterprises",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Birdman_Enterprises",
        "seq": "35,54"
      }
    ],
    "id": "a858757ca891436e99cb9089f22a2dca",
    "predicate mapping": [
      {
        "label": "work in",
        "uri": "http://dbpedia.org/ontology/institution",
        "seq": "28,30",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "country\u0027s",
        "uri": "http://dbpedia.org/property/nationality",
        "seq": "6,15",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "people",
        "uri": "http://dbpedia.org/ontology/Engineer",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "List the sports associated with Mariveles, Bataan?",
    "SerialNumber": "681",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/city\u003e \u003chttp://dbpedia.org/resource/Mariveles,_Bataan\u003e . ?x \u003chttp://dbpedia.org/ontology/sport\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Mariveles, Bataan",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Mariveles,_Bataan",
        "seq": "32,49"
      }
    ],
    "id": "c177520ccb0d4c55bc8fbdfc3bbb7506",
    "predicate mapping": [
      {
        "label": " ",
        "uri": "http://dbpedia.org/property/city",
        "mappedBy": "NA"
      },
      {
        "label": "sport",
        "uri": "http://dbpedia.org/ontology/sport",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which team of Dan Shamash is also the debutant team of John Estes ?",
    "SerialNumber": "682",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/John_Estes\u003e \u003chttp://dbpedia.org/ontology/debutTeam\u003e ?uri. \u003chttp://dbpedia.org/resource/Dan_Shamash\u003e \u003chttp://dbpedia.org/ontology/team\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "John Estes",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/John_Estes",
        "seq": "55,65"
      },
      {
        "label": "Dan Shamash",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Dan_Shamash",
        "seq": "14,25"
      }
    ],
    "id": "b187393e6ede44b6997e10e532b27a42",
    "predicate mapping": [
      {
        "label": "debutant team",
        "uri": "http://dbpedia.org/ontology/debutTeam",
        "mappedBy": "word2vec"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/team",
        "seq": "6,10",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "Who is the tenant of the home stadium of Toronto Phantoms?",
    "SerialNumber": "683",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Toronto_Phantoms\u003e \u003chttp://dbpedia.org/property/arena\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/tenant\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Stadium\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Toronto Phantoms",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Toronto_Phantoms",
        "seq": "41,57"
      }
    ],
    "id": "8c5594e6c01f4f09988e31939b1c2799",
    "predicate mapping": [
      {
        "label": " ",
        "uri": "http://dbpedia.org/property/arena",
        "mappedBy": "NA"
      },
      {
        "label": "tenant",
        "uri": "http://dbpedia.org/ontology/tenant",
        "seq": "11,17",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "stadium",
        "uri": "http://dbpedia.org/ontology/Stadium",
        "seq": "30,37",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Does the little colorado river flow in the Grand Canyon?",
    "SerialNumber": "684",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Little_Colorado_River\u003e \u003chttp://dbpedia.org/ontology/mouthMountain\u003e \u003chttp://dbpedia.org/resource/Grand_Canyon\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "little colorado river",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Little_Colorado_River",
        "seq": "9,30"
      },
      {
        "label": "Grand Canyon",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Grand_Canyon",
        "seq": "43,55"
      }
    ],
    "id": "6d42f2fa938d4141bd635759b1e81402",
    "predicate mapping": [
      {
        "label": "flow",
        "uri": "http://dbpedia.org/ontology/mouthMountain",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "How many religions are followed by the people in the Royal Thai Army?",
    "SerialNumber": "686",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/militaryBranch\u003e \u003chttp://dbpedia.org/resource/Royal_Thai_Army\u003e . ?x \u003chttp://dbpedia.org/ontology/religion\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Royal Thai Army",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Royal_Thai_Army",
        "seq": "53,68"
      }
    ],
    "id": "827cb970029b44e580c1a44fcc272eb2",
    "predicate mapping": [
      {
        "label": "people",
        "uri": "http://dbpedia.org/ontology/militaryBranch",
        "mappedBy": "word2vec"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion",
        "seq": "9,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "316",
    "question": "What company made facebook messenger and is the platform where Words of Gold can be played?",
    "SerialNumber": "687",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Words_of_Gold\u003e \u003chttp://dbpedia.org/ontology/computingPlatform\u003e ?uri. \u003chttp://dbpedia.org/resource/Facebook_Messenger\u003e \u003chttp://dbpedia.org/property/developer\u003e ?uri . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Company\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Words of Gold",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Words_of_Gold",
        "seq": "63,76"
      },
      {
        "label": "facebook messenger",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Facebook_Messenger",
        "seq": "18,36"
      }
    ],
    "id": "c2998ab4051f4bef95ec8cda3eae919f",
    "predicate mapping": [
      {
        "label": "platform",
        "uri": "http://dbpedia.org/ontology/computingPlatform",
        "seq": "48,56",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "made",
        "uri": "http://dbpedia.org/property/developer",
        "mappedBy": "word2vec"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company",
        "seq": "5,12",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "In which cities can the beverage related to Barq\u0027s be found?",
    "SerialNumber": "689",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Barq\u0027s\u003e \u003chttp://dbpedia.org/ontology/related\u003e ?x . ?x \u003chttp://dbpedia.org/property/locationCity\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Barq\u0027s",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Barq\u0027s",
        "seq": "44,50"
      }
    ],
    "id": "47d8d22a769c4d82a0f5e592f5fbdb24",
    "predicate mapping": [
      {
        "label": "related",
        "uri": "http://dbpedia.org/ontology/related",
        "seq": "33,40",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "cities",
        "uri": "http://dbpedia.org/property/locationCity",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "In which city is  Arsenal Cider House ? located ?",
    "SerialNumber": "690",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Arsenal_Cider_House\u003e \u003chttp://dbpedia.org/property/locationCity\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Arsenal Cider House",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Arsenal_Cider_House",
        "seq": "18,37"
      }
    ],
    "id": "34200ced3ab544579326e2fc505d3bc8",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/property/locationCity",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "From which state do the White Plum Asangas come?",
    "SerialNumber": "691",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/religion\u003e \u003chttp://dbpedia.org/resource/White_Plum_Asanga\u003e . ?x \u003chttp://dbpedia.org/ontology/stateOfOrigin\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "White Plum Asanga",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/White_Plum_Asanga",
        "seq": "24,41"
      }
    ],
    "id": "43702440e850423dbdd82331dfc624be",
    "predicate mapping": [
      {
        "label": " ",
        "uri": "http://dbpedia.org/ontology/religion",
        "mappedBy": "NA"
      },
      {
        "label": "state",
        "uri": "http://dbpedia.org/ontology/stateOfOrigin",
        "seq": "11,16",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "7",
    "question": "Which board game can be said as a mind based game?",
    "SerialNumber": "694",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/ontology/genre\u003e \u003chttp://dbpedia.org/resource/Board_game\u003e . ?uri \u003chttp://dbpedia.org/ontology/genre\u003e \u003chttp://dbpedia.org/resource/Mind_sport\u003e . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "board game",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Board_game",
        "seq": "6,16"
      },
      {
        "label": "mind",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Mind_sport",
        "seq": "999,1000"
      }
    ],
    "id": "d841f35943ac4a9cad0f6e33ba3a8650",
    "predicate mapping": [
      {
        "label": " ",
        "uri": "http://dbpedia.org/ontology/genre",
        "mappedBy": "NA"
      },
      {
        "label": " ",
        "uri": "http://dbpedia.org/ontology/genre",
        "mappedBy": "NA"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Was GM first aired in Albania?",
    "SerialNumber": "695",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Gümüş_(TV_series)\u003e \u003chttp://dbpedia.org/property/firstAired\u003e \u003chttp://dbpedia.org/resource/Albania\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Gümüş_(TV_series)",
        "seq": "999,1000"
      },
      {
        "label": "Albania",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Albania",
        "seq": "22,29"
      }
    ],
    "id": "0f40d8629b94485292d2bdb7107b1da7",
    "predicate mapping": [
      {
        "label": "first aired",
        "uri": "http://dbpedia.org/property/firstAired",
        "seq": "7,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "In which ice hockey league, did the team coached by Joel Quenneville win?",
    "SerialNumber": "696",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/headCoach\u003e \u003chttp://dbpedia.org/resource/Joel_Quenneville\u003e . ?uri \u003chttp://dbpedia.org/property/champion\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/IceHockeyLeague\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Joel Quenneville",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Joel_Quenneville",
        "seq": "52,68"
      }
    ],
    "id": "a851cba6c3fd4f91b75012d43e14ffe8",
    "predicate mapping": [
      {
        "label": "team coached",
        "uri": "http://dbpedia.org/property/headCoach",
        "seq": "41,48",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "win",
        "uri": "http://dbpedia.org/property/champion",
        "mappedBy": "word2vec"
      },
      {
        "label": "ice hockey league",
        "uri": "http://dbpedia.org/ontology/IceHockeyLeague",
        "seq": "9,26",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "406",
    "question": "How many games have a publisher based in US?",
    "SerialNumber": "698",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/location\u003e \u003chttp://dbpedia.org/resource/United_States\u003e . ?uri \u003chttp://dbpedia.org/ontology/publisher\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/VideoGame\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "US",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/United_States",
        "seq": "41,43"
      }
    ],
    "id": "32ef05a6fd884fddae5d465551cf17e3",
    "predicate mapping": [
      {
        "label": "based",
        "uri": "http://dbpedia.org/ontology/location",
        "mappedBy": "word2vec"
      },
      {
        "label": "publisher",
        "uri": "http://dbpedia.org/ontology/publisher",
        "seq": "22,31",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "games",
        "uri": "http://dbpedia.org/ontology/VideoGame",
        "seq": "9,14",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "401",
    "question": "How many fictional characters were humans?",
    "SerialNumber": "699",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/ontology/species\u003e \u003chttp://dbpedia.org/resource/Human\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/FictionalCharacter\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "human",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Human",
        "seq": "35,40"
      }
    ],
    "id": "9af86fea79ba45b599a74bbd5341a401",
    "predicate mapping": [
      {
        "label": " ",
        "uri": "http://dbpedia.org/ontology/species",
        "mappedBy": "word2vec"
      },
      {
        "label": "fictional character",
        "uri": "http://dbpedia.org/ontology/FictionalCharacter",
        "seq": "9,28",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Where was James H. Fields buried ?",
    "SerialNumber": "700",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/James_H._Fields\u003e \u003chttp://dbpedia.org/property/placeofburial\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "James H. Fields",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/James_H._Fields",
        "seq": "10,25"
      }
    ],
    "id": "72220051ada34ae48a21ec1e045f930f",
    "predicate mapping": [
      {
        "label": "buried",
        "uri": "http://dbpedia.org/property/placeofburial",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Is Julia Gillard a part of monarch of elizabeth 2?",
    "SerialNumber": "701",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Julia_Gillard\u003e \u003chttp://dbpedia.org/property/monarch\u003e \u003chttp://dbpedia.org/resource/Elizabeth_II\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Julia Gillard",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Julia_Gillard",
        "seq": "3,16"
      },
      {
        "label": "elizabeth",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Elizabeth_II",
        "seq": "999,1000"
      }
    ],
    "id": "b1451c98780e446b815e9f342751cbb0",
    "predicate mapping": [
      {
        "label": "monarch",
        "uri": "http://dbpedia.org/property/monarch",
        "seq": "27,34",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Which cities come in the course of the river, into which Big Creek around Texas flows too?",
    "SerialNumber": "702",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/rightTributary\u003e \u003chttp://dbpedia.org/resource/Big_Creek_(Texas_Co._Missouri)\u003e . ?x \u003chttp://dbpedia.org/ontology/city\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/River\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Big Creek around Texas",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Big_Creek_(Texas_Co._Missouri)",
        "seq": "57,66"
      }
    ],
    "id": "749558f932b9486b85df68d4eccfe5c0",
    "predicate mapping": [
      {
        "label": "flows",
        "uri": "http://dbpedia.org/ontology/rightTributary",
        "mappedBy": "word2vec"
      },
      {
        "label": "cities",
        "uri": "http://dbpedia.org/ontology/city",
        "seq": "18,20",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River",
        "seq": "39,44",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Where are INKAS located which is also the state of origin for Jojo Chintoh ?",
    "SerialNumber": "703",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Jojo_Chintoh\u003e \u003chttp://dbpedia.org/ontology/stateOfOrigin\u003e ?uri. \u003chttp://dbpedia.org/resource/INKAS\u003e \u003chttp://dbpedia.org/property/locations\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jojo Chintoh",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Jojo_Chintoh",
        "seq": "62,74"
      },
      {
        "label": "INKAS",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/INKAS",
        "seq": "10,15"
      }
    ],
    "id": "fa242acb93b743fea9e35fc94ee08a4e",
    "predicate mapping": [
      {
        "label": "state of origin",
        "uri": "http://dbpedia.org/ontology/stateOfOrigin",
        "seq": "42,57",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "located",
        "uri": "http://dbpedia.org/property/locations",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who wrote the frost king?",
    "SerialNumber": "704",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/The_Frost_King\u003e \u003chttp://dbpedia.org/ontology/author\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "the frost king",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Frost_King",
        "seq": "10,24"
      }
    ],
    "id": "5cc36b5f5baf40ee961a155b20d24163",
    "predicate mapping": [
      {
        "label": "wrote",
        "uri": "http://dbpedia.org/ontology/author",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Which party does Iqbal Singh and B Shiva Rao currently belong to?",
    "SerialNumber": "712",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Iqbal_Singh_(politician)\u003e \u003chttp://dbpedia.org/property/party\u003e ?uri. \u003chttp://dbpedia.org/resource/B._Shiva_Rao\u003e \u003chttp://dbpedia.org/property/party\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Iqbal Singh",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Iqbal_Singh_(politician)",
        "seq": "17,28"
      },
      {
        "label": "shiva rao",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/B._Shiva_Rao",
        "seq": "999,1000"
      }
    ],
    "id": "5ffde5a7c874424cbd665253d618fcfe",
    "predicate mapping": [
      {
        "label": "party",
        "uri": "http://dbpedia.org/property/party",
        "seq": "6,11",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "party",
        "uri": "http://dbpedia.org/property/party",
        "seq": "6,11",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name a show hosted by Brian Dunkleman and judged by Harry Connick, Jr.?",
    "SerialNumber": "714",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/presenter\u003e \u003chttp://dbpedia.org/resource/Brian_Dunkleman\u003e . ?uri \u003chttp://dbpedia.org/property/judges\u003e \u003chttp://dbpedia.org/resource/Harry_Connick,_Jr.\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Brian Dunkleman",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Brian_Dunkleman",
        "seq": "22,37"
      },
      {
        "label": "Harry Connick, Jr.",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Harry_Connick,_Jr.",
        "seq": "52,70"
      }
    ],
    "id": "77480fbfae19475b9120f4a4bb9dd835",
    "predicate mapping": [
      {
        "label": "hosted",
        "uri": "http://dbpedia.org/property/presenter",
        "mappedBy": "word2vec"
      },
      {
        "label": "judged",
        "uri": "http://dbpedia.org/property/judges",
        "seq": "42,48",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "7,11",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Name the notable work by Russell T Davis which is also the series of Doctor Who:Destiny of the Doctors ?",
    "SerialNumber": "716",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Russell_T_Davies\u003e \u003chttp://dbpedia.org/property/notableworks\u003e ?uri. \u003chttp://dbpedia.org/resource/Doctor_Who:_Destiny_of_the_Doctors\u003e \u003chttp://dbpedia.org/ontology/series\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Russell T Davis",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Russell_T_Davies",
        "seq": "25,40"
      },
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Doctor_Who:_Destiny_of_the_Doctors",
        "seq": "999,1000"
      }
    ],
    "id": "075580e801b242728cc06ad403056096",
    "predicate mapping": [
      {
        "label": "notable",
        "uri": "http://dbpedia.org/property/notableworks",
        "seq": "9,16",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "series",
        "uri": "http://dbpedia.org/ontology/series",
        "seq": "59,65",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "What are some rivers over which there is a box girder bridge?",
    "SerialNumber": "720",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/design\u003e \u003chttp://dbpedia.org/resource/Box_girder_bridge\u003e . ?x \u003chttp://dbpedia.org/property/crosses\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "box girder bridge",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Box_girder_bridge",
        "seq": "43,60"
      }
    ],
    "id": "e22121aed5034a2ebb9a8b79dda6a98d",
    "predicate mapping": [
      {
        "label": " ",
        "uri": "http://dbpedia.org/property/design",
        "mappedBy": "NA"
      },
      {
        "label": "over",
        "uri": "http://dbpedia.org/property/crosses",
        "seq": "21,25",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Where did the Vitis Vinifera grapes originate?",
    "SerialNumber": "723",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/species\u003e \u003chttp://dbpedia.org/resource/Vitis_vinifera\u003e . ?x \u003chttp://dbpedia.org/ontology/origin\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Grape\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Vitis Vinifera",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Vitis_vinifera",
        "seq": "20,35"
      }
    ],
    "id": "05a75d41426e47feada1cd1a9d0f7dd2",
    "predicate mapping": [
      {
        "label": " ",
        "uri": "http://dbpedia.org/ontology/species",
        "mappedBy": "NA"
      },
      {
        "label": "originate",
        "uri": "http://dbpedia.org/ontology/origin",
        "seq": "36,42",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "grape",
        "uri": "http://dbpedia.org/ontology/Grape",
        "seq": "29,34",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What sports are there at the universities affiliated to the National Capital Region Athletic Association?",
    "SerialNumber": "725",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/affiliation\u003e \u003chttp://dbpedia.org/resource/National_Capital_Region_Athletic_Association\u003e . ?x \u003chttp://dbpedia.org/property/athletics\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/University\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "National Capital Region Athletic Association",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/National_Capital_Region_Athletic_Association",
        "seq": "60,104"
      }
    ],
    "id": "99eede401e804ca88838398c7452d788",
    "predicate mapping": [
      {
        "label": "affiliated",
        "uri": "http://dbpedia.org/ontology/affiliation",
        "mappedBy": "word2vec"
      },
      {
        "label": "athletic",
        "uri": "http://dbpedia.org/property/athletics",
        "seq": "-1,7",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "universities",
        "uri": "http://dbpedia.org/ontology/University",
        "seq": "29,41",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "406",
    "question": "How many ships belong to states which has Unitary as government type ?",
    "SerialNumber": "728",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/governmentType\u003e \u003chttp://dbpedia.org/resource/Unitary_state\u003e . ?uri \u003chttp://dbpedia.org/ontology/country\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Ship\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "unitary",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Unitary_state",
        "seq": "999,1000"
      }
    ],
    "id": "4e212b324a314ddb90f5c7d4b4f980a2",
    "predicate mapping": [
      {
        "label": "government type",
        "uri": "http://dbpedia.org/ontology/governmentType",
        "seq": "53,68",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "state",
        "uri": "http://dbpedia.org/ontology/country",
        "seq": "25,30",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "ship",
        "uri": "http://dbpedia.org/ontology/Ship",
        "seq": "9,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the university located in Indiana and has affiliations with Kaplan, Inc.?",
    "SerialNumber": "729",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/campus\u003e \u003chttp://dbpedia.org/resource/Indiana\u003e . ?uri \u003chttp://dbpedia.org/property/affiliations\u003e \u003chttp://dbpedia.org/resource/Kaplan,_Inc.\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/University\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Indiana",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Indiana",
        "seq": "31,38"
      },
      {
        "label": "Kaplan, Inc.",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Kaplan,_Inc.",
        "seq": "65,77"
      }
    ],
    "id": "8885d643a55646fcb84f0bdfdd1920ab",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/ontology/campus",
        "mappedBy": "word2vec"
      },
      {
        "label": "affiliations",
        "uri": "http://dbpedia.org/property/affiliations",
        "seq": "47,59",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "university",
        "uri": "http://dbpedia.org/ontology/University",
        "seq": "9,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "601",
    "question": "Which technological products were manufactured by Foxconn?",
    "SerialNumber": "733",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/manufacturer\u003e \u003chttp://dbpedia.org/resource/Foxconn\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/InformationAppliance\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Foxconn",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Foxconn",
        "seq": "50,57"
      }
    ],
    "id": "dbf3f468b028435ead6f22d7094216f5",
    "predicate mapping": [
      {
        "label": "manufactured by",
        "uri": "http://dbpedia.org/ontology/manufacturer",
        "seq": "34,49",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "technological products",
        "uri": "http://dbpedia.org/ontology/InformationAppliance",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Does Gibby Haynes play the saxophone?",
    "SerialNumber": "734",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Gibby_Haynes\u003e \u003chttp://dbpedia.org/property/instrument\u003e \u003chttp://dbpedia.org/resource/Saxophone\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Gibby Haynes",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Gibby_Haynes",
        "seq": "5,17"
      },
      {
        "label": "saxophone",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Saxophone",
        "seq": "27,36"
      }
    ],
    "id": "40679e799df0477cb3225b955fbf7290",
    "predicate mapping": [
      {
        "label": "play",
        "uri": "http://dbpedia.org/property/instrument",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "Things going to the mediterranean sea also go where?",
    "SerialNumber": "736",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/destinations\u003e \u003chttp://dbpedia.org/resource/Mediterranean_Sea\u003e . ?x \u003chttp://dbpedia.org/ontology/destination\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "mediterranean sea",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Mediterranean_Sea",
        "seq": "20,37"
      }
    ],
    "id": "24f384f61c0d499a9e5553258d63a154",
    "predicate mapping": [
      {
        "label": "going",
        "uri": "http://dbpedia.org/property/destinations",
        "mappedBy": "word2vec"
      },
      {
        "label": "go where",
        "uri": "http://dbpedia.org/ontology/destination",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Was Tommy Tucker\u0027s Tooth animated by Walt Disney?",
    "SerialNumber": "738",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Tommy_Tucker\u0027s_Tooth\u003e \u003chttp://dbpedia.org/ontology/animator\u003e \u003chttp://dbpedia.org/resource/Walt_Disney\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Tommy Tucker\u0027s Tooth",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Tommy_Tucker\u0027s_Tooth",
        "seq": "4,24"
      },
      {
        "label": "Walt Disney",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Walt_Disney",
        "seq": "37,48"
      }
    ],
    "id": "4afe90c0a2d24c9abb78be2dc41b3fa7",
    "predicate mapping": [
      {
        "label": "animated",
        "uri": "http://dbpedia.org/ontology/animator",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "8",
    "question": "What appliance Sony made after the success of PlayStation 2?",
    "SerialNumber": "743",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/manufacturer\u003e \u003chttp://dbpedia.org/resource/Sony\u003e . ?uri \u003chttp://dbpedia.org/ontology/predecessor\u003e \u003chttp://dbpedia.org/resource/PlayStation_2\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Sony",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Sony",
        "seq": "15,19"
      },
      {
        "label": "PlayStation 2",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/PlayStation_2",
        "seq": "46,59"
      }
    ],
    "id": "927bed1a09eb4ccebe9ce52f962a6866",
    "predicate mapping": [
      {
        "label": "appliance",
        "uri": "http://dbpedia.org/ontology/manufacturer",
        "mappedBy": "word2vec"
      },
      {
        "label": "success",
        "uri": "http://dbpedia.org/ontology/predecessor",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "406",
    "question": "How many shows are made by the channel whose predecessor was the Comedy Channel?",
    "SerialNumber": "745",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/predecessor\u003e \u003chttp://dbpedia.org/resource/The_Comedy_Channel_(United_States)\u003e . ?uri \u003chttp://dbpedia.org/property/network\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "the Comedy Channel",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Comedy_Channel_(United_States)",
        "seq": "61,79"
      }
    ],
    "id": "2a8fe39c189643d9bc607d285c32bdbf",
    "predicate mapping": [
      {
        "label": "predecessor",
        "uri": "http://dbpedia.org/ontology/predecessor",
        "seq": "45,56",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "channel",
        "uri": "http://dbpedia.org/property/network",
        "mappedBy": "word2vec"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "9,14",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "401",
    "question": "How many wars took place in Israel?",
    "SerialNumber": "749",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/ontology/place\u003e \u003chttp://dbpedia.org/resource/Israel\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MilitaryConflict\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Israel",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Israel",
        "seq": "28,34"
      }
    ],
    "id": "d31842ed59c74ddba76748ddc86819ad",
    "predicate mapping": [
      {
        "label": "place",
        "uri": "http://dbpedia.org/ontology/place",
        "seq": "19,24",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "wars",
        "uri": "http://dbpedia.org/ontology/MilitaryConflict",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Where is Richard Stites located ?",
    "SerialNumber": "750",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Richard_Stites\u003e \u003chttp://dbpedia.org/ontology/birthPlace\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Richard Stites",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Richard_Stites",
        "seq": "9,23"
      }
    ],
    "id": "b602d2ec54c940bfb3308e310fb48114",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/ontology/birthPlace",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Semani languages are spoken in which countries?",
    "SerialNumber": "751",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/languages\u003e \u003chttp://dbpedia.org/resource/Semnani_languages\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Country\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "languages",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Semnani_languages",
        "seq": "999,1000"
      }
    ],
    "id": "5a5552c654f843e2af53c66e80782253",
    "predicate mapping": [
      {
        "label": "languages",
        "uri": "http://dbpedia.org/property/languages",
        "seq": "7,16",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "countries",
        "uri": "http://dbpedia.org/ontology/Country",
        "seq": "37,46",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who wrote The Times They Are a-Changin?",
    "SerialNumber": "753",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/The_Times_They_Are_a-Changin\u0027_(musical)\u003e \u003chttp://dbpedia.org/ontology/musicBy\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "The Times They Are a-Changin",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/The_Times_They_Are_a-Changin\u0027_(musical)",
        "seq": "999,1000"
      }
    ],
    "id": "c6d5d4c7a5fb417ba8654ec416c2d263",
    "predicate mapping": [
      {
        "label": "wrote",
        "uri": "http://dbpedia.org/ontology/musicBy",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Where can i find companies which were started in Toronto?",
    "SerialNumber": "758",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/foundationPlace\u003e \u003chttp://dbpedia.org/resource/Toronto\u003e . ?x \u003chttp://dbpedia.org/property/locations\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Company\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Toronto",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Toronto",
        "seq": "49,56"
      }
    ],
    "id": "72d5cb491ec94f14b8d9683a64782b9c",
    "predicate mapping": [
      {
        "label": "started",
        "uri": "http://dbpedia.org/ontology/foundationPlace",
        "mappedBy": "word2vec"
      },
      {
        "label": "Where",
        "uri": "http://dbpedia.org/property/locations",
        "mappedBy": "word2vec"
      },
      {
        "label": "companies",
        "uri": "http://dbpedia.org/ontology/Company",
        "seq": "17,26",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Which company released the software RenderMan?",
    "SerialNumber": "760",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/products\u003e \u003chttp://dbpedia.org/resource/RenderMan_(software)\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Company\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "the software RenderMan",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/RenderMan_(software)",
        "seq": "36,45"
      }
    ],
    "id": "0f04a6c5f26342d9a5b0cf207019d29d",
    "predicate mapping": [
      {
        "label": "released",
        "uri": "http://dbpedia.org/property/products",
        "mappedBy": "word2vec"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company",
        "seq": "6,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which associate of Thomas bryan Martin is also the president of Carmichael ?",
    "SerialNumber": "762",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Thomas_Bryan_Martin\u003e \u003chttp://dbpedia.org/ontology/associate\u003e ?uri. \u003chttp://dbpedia.org/resource/William_Carmichael_(diplomat)\u003e \u003chttp://dbpedia.org/property/president\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Thomas bryan Martin",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Thomas_Bryan_Martin",
        "seq": "19,38"
      },
      {
        "label": "carmichael",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/William_Carmichael_(diplomat)",
        "seq": "999,1000"
      }
    ],
    "id": "99747a8bc83f452f85a46aab60a6b3e2",
    "predicate mapping": [
      {
        "label": "associate",
        "uri": "http://dbpedia.org/ontology/associate",
        "seq": "6,15",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "president",
        "uri": "http://dbpedia.org/property/president",
        "seq": "51,60",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What cities are nearer to Fuountain Lake Farm?",
    "SerialNumber": "763",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Fountain_Lake_Farm\u003e \u003chttp://dbpedia.org/property/nearestCity\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Fuountain Lake Farm",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Fountain_Lake_Farm",
        "seq": "26,45"
      }
    ],
    "id": "537bdce8e8dd4a238a2dbb9059f5fe9f",
    "predicate mapping": [
      {
        "label": "nearer",
        "uri": "http://dbpedia.org/property/nearestCity",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "401",
    "question": "How many shows are made by Larry David?",
    "SerialNumber": "765",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/ontology/creator\u003e \u003chttp://dbpedia.org/resource/Larry_David\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Larry David",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Larry_David",
        "seq": "27,38"
      }
    ],
    "id": "e6d36153fb7c4298a55e5ee6c0738c1d",
    "predicate mapping": [
      {
        "label": "made",
        "uri": "http://dbpedia.org/ontology/creator",
        "mappedBy": "word2vec"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "9,14",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "How many kinds of games can be played on the Amiga?",
    "SerialNumber": "771",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/computingPlatform\u003e \u003chttp://dbpedia.org/resource/Amiga\u003e . ?x \u003chttp://dbpedia.org/property/genre\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Amiga",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Amiga",
        "seq": "45,50"
      }
    ],
    "id": "d2b07c6181a64cf183b36bd37459e852",
    "predicate mapping": [
      {
        "label": "games",
        "uri": "http://dbpedia.org/ontology/computingPlatform",
        "seq": "18,23",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "kinds of",
        "uri": "http://dbpedia.org/property/genre",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Is Michael Schumacher the first driver of the 1994 grand prix?",
    "SerialNumber": "772",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/1994_Hungarian_Grand_Prix\u003e \u003chttp://dbpedia.org/property/firstDriver\u003e \u003chttp://dbpedia.org/resource/Michael_Schumacher\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "grand prix 1994",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/1994_Hungarian_Grand_Prix",
        "seq": "999,1000"
      },
      {
        "label": "Michael Schumacher",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Michael_Schumacher",
        "seq": "3,21"
      }
    ],
    "id": "b8f31b0cece6487a95dd21301ce60003",
    "predicate mapping": [
      {
        "label": "first driver",
        "uri": "http://dbpedia.org/property/firstDriver",
        "seq": "26,38",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who all have been a president of educational institutes in Paud?",
    "SerialNumber": "774",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/location\u003e \u003chttp://dbpedia.org/resource/Paud\u003e . ?x \u003chttp://dbpedia.org/property/president\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/EducationalInstitution\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Paud",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Paud",
        "seq": "59,63"
      }
    ],
    "id": "3fb7e88b8f1943958246f70177f3e5dc",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/location",
        "mappedBy": "word2vec"
      },
      {
        "label": "president",
        "uri": "http://dbpedia.org/property/president",
        "seq": "20,29",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "educational institutes",
        "uri": "http://dbpedia.org/ontology/EducationalInstitution",
        "seq": "33,44",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which governer of Winston Bryant is the president of Joseph Stiglitz ?",
    "SerialNumber": "776",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Winston_Bryant\u003e \u003chttp://dbpedia.org/property/governor\u003e ?uri. \u003chttp://dbpedia.org/resource/Joseph_Stiglitz\u003e \u003chttp://dbpedia.org/property/president\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Winston Bryant",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Winston_Bryant",
        "seq": "18,32"
      },
      {
        "label": "Joseph Stiglitz",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Joseph_Stiglitz",
        "seq": "53,68"
      }
    ],
    "id": "432f4fcb54a449ca830d2bb1037a274a",
    "predicate mapping": [
      {
        "label": "governer",
        "uri": "http://dbpedia.org/property/governor",
        "mappedBy": "word2vec"
      },
      {
        "label": "president",
        "uri": "http://dbpedia.org/property/president",
        "seq": "40,49",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "In which city is the distributor of Jeevan Mrityu located ?",
    "SerialNumber": "777",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Jeevan_Mrityu\u003e \u003chttp://dbpedia.org/property/distributor\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/locationCity\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jeevan Mrityu",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Jeevan_Mrityu",
        "seq": "36,49"
      }
    ],
    "id": "d76def8ae04b49f6b1d126ba95c0e2cd",
    "predicate mapping": [
      {
        "label": "distributor",
        "uri": "http://dbpedia.org/property/distributor",
        "seq": "21,32",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "located",
        "uri": "http://dbpedia.org/ontology/locationCity",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who has written the mary poppins musical?",
    "SerialNumber": "784",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Mary_Poppins_(musical)\u003e \u003chttp://dbpedia.org/ontology/author\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "mary poppins",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Mary_Poppins_(musical)",
        "seq": "20,32"
      }
    ],
    "id": "13059b538b8e43ff9915f2e14199673a",
    "predicate mapping": [
      {
        "label": "written",
        "uri": "http://dbpedia.org/ontology/author",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "Cable stayed bridges have been used to cross over how many things?",
    "SerialNumber": "785",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/design\u003e \u003chttp://dbpedia.org/resource/Cable-stayed_bridge\u003e . ?x \u003chttp://dbpedia.org/property/crosses\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "stayed",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Cable-stayed_bridge",
        "seq": "999,1000"
      }
    ],
    "id": "3b73318138c443e789981e3e4d613dab",
    "predicate mapping": [
      {
        "label": "used to",
        "uri": "http://dbpedia.org/property/design",
        "mappedBy": "word2vec"
      },
      {
        "label": "cross over",
        "uri": "http://dbpedia.org/property/crosses",
        "seq": "45,49",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who originally wrote the manga which was later illustrated by Tamon Ohta?",
    "SerialNumber": "797",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/illustrator\u003e \u003chttp://dbpedia.org/resource/Tamon_Ohta\u003e . ?x \u003chttp://dbpedia.org/property/author\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Manga\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Tamon Ohta",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Tamon_Ohta",
        "seq": "62,72"
      }
    ],
    "id": "cffa17640f4e4456a5557b1ab1d65bdd",
    "predicate mapping": [
      {
        "label": "illustrated by",
        "uri": "http://dbpedia.org/ontology/illustrator",
        "seq": "47,61",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "wrote",
        "uri": "http://dbpedia.org/property/author",
        "mappedBy": "word2vec"
      },
      {
        "label": "manga",
        "uri": "http://dbpedia.org/ontology/Manga",
        "seq": "25,30",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "402",
    "question": "How many shows is Russell Davies known for?",
    "SerialNumber": "800",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { \u003chttp://dbpedia.org/resource/Russell_T_Davies\u003e \u003chttp://dbpedia.org/property/notableworks\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Russell Davies",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Russell_T_Davies",
        "seq": "18,32"
      }
    ],
    "id": "1cf9bbe76b1441ba8ad28dac3a1a50e8",
    "predicate mapping": [
      {
        "label": "known for",
        "uri": "http://dbpedia.org/property/notableworks",
        "mappedBy": "word2vec"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "9,14",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which sitcom\u0027s company is Paramount Television and is located in Cheers Beacon hill ?",
    "SerialNumber": "807",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/company\u003e \u003chttp://dbpedia.org/resource/Paramount_Television\u003e . ?uri \u003chttp://dbpedia.org/property/location\u003e \u003chttp://dbpedia.org/resource/Cheers_Beacon_Hill\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Paramount Television",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Paramount_Television",
        "seq": "26,46"
      },
      {
        "label": "Cheers Beacon hill",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Cheers_Beacon_Hill",
        "seq": "65,83"
      }
    ],
    "id": "c228f0f4e7004f3d84822625c29a1e93",
    "predicate mapping": [
      {
        "label": "company",
        "uri": "http://dbpedia.org/property/company",
        "seq": "15,22",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "located",
        "uri": "http://dbpedia.org/property/location",
        "mappedBy": "word2vec"
      },
      {
        "label": "television",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "-1,9",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which leader of united states house representatives election was married to Dolley Madison ?",
    "SerialNumber": "808",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/United_States_House_of_Representatives_elections,_1788_and_1789\u003e \u003chttp://dbpedia.org/property/leader\u003e ?uri. \u003chttp://dbpedia.org/resource/Dolley_Madison\u003e \u003chttp://dbpedia.org/ontology/spouse\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "representatives election united states house",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/United_States_House_of_Representatives_elections,_1788_and_1789",
        "seq": "999,1000"
      },
      {
        "label": "Dolley Madison",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Dolley_Madison",
        "seq": "76,90"
      }
    ],
    "id": "553c08c614e943c5afc6b87973a5558b",
    "predicate mapping": [
      {
        "label": "leader",
        "uri": "http://dbpedia.org/property/leader",
        "seq": "6,12",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "married to",
        "uri": "http://dbpedia.org/ontology/spouse",
        "seq": "65,75",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "Name the TV shows owned by divisions of CBS?",
    "SerialNumber": "809",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/parent\u003e \u003chttp://dbpedia.org/resource/CBS\u003e . ?uri \u003chttp://dbpedia.org/property/company\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "CBS",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/CBS",
        "seq": "40,43"
      }
    ],
    "id": "d8a37738293349dca33bdc20e691151e",
    "predicate mapping": [
      {
        "label": "owned by",
        "uri": "http://dbpedia.org/property/parent",
        "mappedBy": "word2vec"
      },
      {
        "label": "divisions",
        "uri": "http://dbpedia.org/property/company",
        "mappedBy": "word2vec"
      },
      {
        "label": "TV shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who was the president under whom, a governor participated in Shay\u0027s rebellion?",
    "SerialNumber": "810",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/battle\u003e \u003chttp://dbpedia.org/resource/Shays\u0027_Rebellion\u003e . ?x \u003chttp://dbpedia.org/property/president\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Governor\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Shay",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Shays\u0027_Rebellion",
        "seq": "61,65"
      }
    ],
    "id": "d2f75ded680643ad862ef07d47d0df4d",
    "predicate mapping": [
      {
        "label": "rebellion",
        "uri": "http://dbpedia.org/ontology/battle",
        "mappedBy": "word2vec"
      },
      {
        "label": "president",
        "uri": "http://dbpedia.org/property/president",
        "seq": "12,21",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "governor",
        "uri": "http://dbpedia.org/ontology/Governor",
        "seq": "12,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "What program is  presented by Brian Dunkleman and has artist as Simon Fuller?",
    "SerialNumber": "811",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/presenter\u003e \u003chttp://dbpedia.org/resource/Brian_Dunkleman\u003e . ?uri \u003chttp://dbpedia.org/property/creator\u003e \u003chttp://dbpedia.org/resource/Simon_Fuller\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Brian Dunkleman",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Brian_Dunkleman",
        "seq": "30,45"
      },
      {
        "label": "Simon Fuller",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Simon_Fuller",
        "seq": "64,76"
      }
    ],
    "id": "f109644380a448f0a102f3fd65f6cd48",
    "predicate mapping": [
      {
        "label": "presented",
        "uri": "http://dbpedia.org/property/presenter",
        "seq": "17,26",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "artist",
        "uri": "http://dbpedia.org/property/creator",
        "mappedBy": "word2vec"
      },
      {
        "label": "program",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Is the charat district a district in peru?",
    "SerialNumber": "812",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Charat_District\u003e \u003chttp://dbpedia.org/property/settlementType\u003e \u003chttp://dbpedia.org/resource/Districts_of_Peru\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "charat district",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Charat_District",
        "seq": "7,22"
      },
      {
        "label": "district in peru",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Districts_of_Peru",
        "seq": "999,1000"
      }
    ],
    "id": "c8aee0b9dcfc4996bee3b2aaec26e95e",
    "predicate mapping": [
      {
        "label": " ",
        "uri": "http://dbpedia.org/property/settlementType",
        "mappedBy": "NA"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "What are some movies written by British writers?",
    "SerialNumber": "814",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/nationality\u003e \u003chttp://dbpedia.org/resource/British_people\u003e . ?uri \u003chttp://dbpedia.org/ontology/writer\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "British",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/British_people",
        "seq": "32,39"
      }
    ],
    "id": "709cd39da1d043b3bd5f9c07c32b7664",
    "predicate mapping": [
      {
        "label": "British",
        "uri": "http://dbpedia.org/ontology/nationality",
        "mappedBy": "NA"
      },
      {
        "label": "written by",
        "uri": "http://dbpedia.org/ontology/writer",
        "seq": "21,31",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "14,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "405",
    "question": "How many different people own the Timeform award winners?",
    "SerialNumber": "815",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/awards\u003e \u003chttp://dbpedia.org/resource/Timeform\u003e . ?x \u003chttp://dbpedia.org/ontology/owner\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Timeform",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Timeform",
        "seq": "34,42"
      }
    ],
    "id": "8052e68b93484281a78f6b9bbf08ce39",
    "predicate mapping": [
      {
        "label": "award",
        "uri": "http://dbpedia.org/property/awards",
        "seq": "43,48",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "own",
        "uri": "http://dbpedia.org/ontology/owner",
        "seq": "26,29",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "people",
        "uri": "http://dbpedia.org/ontology/Person",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "311",
    "question": "List presidents of the school whose one of the president is Charles. Prince of Wales ?",
    "SerialNumber": "816",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/president\u003e \u003chttp://dbpedia.org/resource/Charles,_Prince_of_Wales\u003e . ?x \u003chttp://dbpedia.org/property/president\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/School\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Charles,_Prince_of_Wales",
        "seq": "999,1000"
      }
    ],
    "id": "af13e3f9870d4324b50ac10156f815b4",
    "predicate mapping": [
      {
        "label": "president",
        "uri": "http://dbpedia.org/ontology/president",
        "seq": "5,14",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "president",
        "uri": "http://dbpedia.org/property/president",
        "seq": "5,14",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "school",
        "uri": "http://dbpedia.org/ontology/School",
        "seq": "23,29",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which political party of Chandra Shekhar is also the political party of Datl Satyanarayana Raju ?",
    "SerialNumber": "824",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Chandra_Shekhar\u003e \u003chttp://dbpedia.org/ontology/otherParty\u003e ?uri. \u003chttp://dbpedia.org/resource/Datla_Satyanarayana_Raju\u003e \u003chttp://dbpedia.org/ontology/party\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Chandra Shekhar",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Chandra_Shekhar",
        "seq": "25,40"
      },
      {
        "label": "satyanarayana raju datl",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Datla_Satyanarayana_Raju",
        "seq": "999,1000"
      }
    ],
    "id": "2b868081fdbe405391ff35702728b9d0",
    "predicate mapping": [
      {
        "label": "party",
        "uri": "http://dbpedia.org/ontology/otherParty",
        "seq": "16,21",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "political party",
        "uri": "http://dbpedia.org/ontology/party",
        "seq": "6,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "405",
    "question": "How many people have been presenters for NBC shows?",
    "SerialNumber": "825",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/channel\u003e \u003chttp://dbpedia.org/resource/NBC\u003e . ?x \u003chttp://dbpedia.org/property/presenter\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "NBC",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/NBC",
        "seq": "41,44"
      }
    ],
    "id": "772f236fcf8248868491ba2393667c59",
    "predicate mapping": [
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/channel",
        "mappedBy": "word2vec"
      },
      {
        "label": "presenter",
        "uri": "http://dbpedia.org/property/presenter",
        "seq": "26,35",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "people",
        "uri": "http://dbpedia.org/ontology/Person",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What river originates in Kingston Ontario?",
    "SerialNumber": "826",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/sourceLocation\u003e \u003chttp://dbpedia.org/resource/Kingston,_Ontario\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/River\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Kingston Ontario",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Kingston,_Ontario",
        "seq": "25,41"
      }
    ],
    "id": "197329c3928340ed8151eeba459d4ce9",
    "predicate mapping": [
      {
        "label": "originates",
        "uri": "http://dbpedia.org/property/sourceLocation",
        "mappedBy": "word2vec"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River",
        "seq": "5,10",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "How many producers have worked for FremantleMedia productions?",
    "SerialNumber": "830",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/company\u003e \u003chttp://dbpedia.org/resource/FremantleMedia\u003e . ?x \u003chttp://dbpedia.org/ontology/producer\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "FremantleMedia",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/FremantleMedia",
        "seq": "35,49"
      }
    ],
    "id": "ead02f462db84844be242c56c4066037",
    "predicate mapping": [
      {
        "label": "worked for",
        "uri": "http://dbpedia.org/property/company",
        "mappedBy": "word2vec"
      },
      {
        "label": "producer",
        "uri": "http://dbpedia.org/ontology/producer",
        "seq": "9,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Where is Hafthor Julius Bjornsson from?",
    "SerialNumber": "840",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Hafthór_Júlíus_Björnsson\u003e \u003chttp://dbpedia.org/ontology/stateOfOrigin\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Hafthor Julius Bjornsson",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Hafthór_Júlíus_Björnsson",
        "seq": "9,33"
      }
    ],
    "id": "a0cdc0611f2c4b879e0205a8d1f477ba",
    "predicate mapping": [
      {
        "label": "from",
        "uri": "http://dbpedia.org/ontology/stateOfOrigin",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "406",
    "question": "How many islands belong to archipelagos located in the pacific?",
    "SerialNumber": "841",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/location\u003e \u003chttp://dbpedia.org/resource/Pacific_Ocean\u003e . ?uri \u003chttp://dbpedia.org/property/archipelago\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Island\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "pacific",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Pacific_Ocean",
        "seq": "999,1000"
      }
    ],
    "id": "f9b9f6eac29a4d1190ce28061725f806",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/property/location",
        "mappedBy": "word2vec"
      },
      {
        "label": "archipelago",
        "uri": "http://dbpedia.org/property/archipelago",
        "seq": "27,38",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "island",
        "uri": "http://dbpedia.org/ontology/Island",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "103",
    "question": "How many other important things have been written by the creator of Stuart Alan Jones?",
    "SerialNumber": "842",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { \u003chttp://dbpedia.org/resource/Stuart_Alan_Jones\u003e \u003chttp://dbpedia.org/ontology/creator\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/notableWork\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Stuart Alan Jones",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Stuart_Alan_Jones",
        "seq": "68,85"
      }
    ],
    "id": "430faddac48e4969b0732a137f2dd260",
    "predicate mapping": [
      {
        "label": "creator",
        "uri": "http://dbpedia.org/ontology/creator",
        "seq": "57,64",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "written",
        "uri": "http://dbpedia.org/ontology/notableWork",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "What shows used to air on the channel which was earlier known as \"The Comedy Central\"?",
    "SerialNumber": "846",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/predecessor\u003e \u003chttp://dbpedia.org/resource/The_Comedy_Channel_(United_States)\u003e . ?uri \u003chttp://dbpedia.org/property/distributor\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "channel comedy",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/The_Comedy_Channel_(United_States)",
        "seq": "999,1000"
      }
    ],
    "id": "482f01e78dbf4a2595e15e5c9ad32ab3",
    "predicate mapping": [
      {
        "label": "earlier",
        "uri": "http://dbpedia.org/ontology/predecessor",
        "mappedBy": "word2vec"
      },
      {
        "label": "air on the channel",
        "uri": "http://dbpedia.org/property/distributor",
        "mappedBy": "word2vec"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "5,10",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Does Kirk Hammett play the Gibson Flying V?",
    "SerialNumber": "850",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Kirk_Hammett\u003e \u003chttp://dbpedia.org/ontology/instrument\u003e \u003chttp://dbpedia.org/resource/Gibson_Flying_V\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Kirk Hammett",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Kirk_Hammett",
        "seq": "5,17"
      },
      {
        "label": "Gibson Flying V",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Gibson_Flying_V",
        "seq": "27,42"
      }
    ],
    "id": "d0ef14f4b99740528d80da61bfe95c01",
    "predicate mapping": [
      {
        "label": "play",
        "uri": "http://dbpedia.org/ontology/instrument",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "For all the senators who once studied in Sturm College of Law, give their burial place?",
    "SerialNumber": "853",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/almaMater\u003e \u003chttp://dbpedia.org/resource/Sturm_College_of_Law\u003e . ?x \u003chttp://dbpedia.org/property/restingplace\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Senator\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Sturm College of Law",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Sturm_College_of_Law",
        "seq": "41,61"
      }
    ],
    "id": "e9566c930e254ae2893011a6acc92008",
    "predicate mapping": [
      {
        "label": "studied in",
        "uri": "http://dbpedia.org/ontology/almaMater",
        "mappedBy": "word2vec"
      },
      {
        "label": "burial place",
        "uri": "http://dbpedia.org/property/restingplace",
        "seq": "81,86",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "senator",
        "uri": "http://dbpedia.org/ontology/Senator",
        "seq": "12,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Which people are known for appearing on the television show Dragon\u0027s Den?",
    "SerialNumber": "856",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/knownFor\u003e \u003chttp://dbpedia.org/resource/Dragons\u0027_Den_(UK_TV_series)\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "television show Dragon\u0027s Den",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Dragons\u0027_Den_(UK_TV_series)",
        "seq": "999,1000"
      }
    ],
    "id": "f78b3fe9e8724eb4810bdeed1a83e057",
    "predicate mapping": [
      {
        "label": "known for",
        "uri": "http://dbpedia.org/ontology/knownFor",
        "seq": "17,26",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "people",
        "uri": "http://dbpedia.org/ontology/Person",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "405",
    "question": "How many railway lines go through the station maintained by Public transport authority of western australia?",
    "SerialNumber": "857",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/owningOrganisation\u003e \u003chttp://dbpedia.org/resource/Public_Transport_Authority_(Western_Australia)\u003e . ?x \u003chttp://dbpedia.org/ontology/servingRailwayLine\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/RailwayLine\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Public transport authority of western australia",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Public_Transport_Authority_(Western_Australia)",
        "seq": "60,86"
      }
    ],
    "id": "8504746ca9ea4d50aeb241b91e816acc",
    "predicate mapping": [
      {
        "label": "maintained by",
        "uri": "http://dbpedia.org/ontology/owningOrganisation",
        "mappedBy": "word2vec"
      },
      {
        "label": "station",
        "uri": "http://dbpedia.org/ontology/servingRailwayLine",
        "seq": "9,16",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "railway line",
        "uri": "http://dbpedia.org/ontology/RailwayLine",
        "seq": "9,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What  awards did the cast members of Gods of Egypt win?",
    "SerialNumber": "860",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Gods_of_Egypt_(film)\u003e \u003chttp://dbpedia.org/ontology/starring\u003e ?x . ?x \u003chttp://dbpedia.org/property/awards\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Gods of Egypt",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Gods_of_Egypt_(film)",
        "seq": "37,50"
      }
    ],
    "id": "a8d5e073c778486bb2d6db640cf49768",
    "predicate mapping": [
      {
        "label": "cast members",
        "uri": "http://dbpedia.org/ontology/starring",
        "mappedBy": "word2vec"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards",
        "seq": "6,12",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "Carl Sagan has penned books on how many matters?",
    "SerialNumber": "862",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/author\u003e \u003chttp://dbpedia.org/resource/Carl_Sagan\u003e . ?x \u003chttp://dbpedia.org/property/subject\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Carl Sagan",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Carl_Sagan",
        "seq": "0,10"
      }
    ],
    "id": "a20c86dfc1f64b2fb91429ef3c3c2445",
    "predicate mapping": [
      {
        "label": "penned books",
        "uri": "http://dbpedia.org/ontology/author",
        "mappedBy": "word2vec"
      },
      {
        "label": "matters",
        "uri": "http://dbpedia.org/property/subject",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "what are some units udner the US department of navy?",
    "SerialNumber": "863",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/commandStructure\u003e \u003chttp://dbpedia.org/resource/United_States_Department_of_the_Navy\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "US department of navy",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/United_States_Department_of_the_Navy",
        "seq": "30,32"
      }
    ],
    "id": "df37b7d93b35429b9671ea6a2a572b06",
    "predicate mapping": [
      {
        "label": "units udner",
        "uri": "http://dbpedia.org/ontology/commandStructure",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What sport has made Eric Schiller famous, and has employed Craig Van Tibury?",
    "SerialNumber": "866",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Craig_Van_Tilbury\u003e \u003chttp://dbpedia.org/ontology/occupation\u003e ?uri. \u003chttp://dbpedia.org/resource/Eric_Schiller\u003e \u003chttp://dbpedia.org/ontology/knownFor\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Craig Van Tibury",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Craig_Van_Tilbury",
        "seq": "999,1000"
      },
      {
        "label": "Eric Schiller",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Eric_Schiller",
        "seq": "20,33"
      }
    ],
    "id": "bfebc6df79f647e8b83b027420295a9d",
    "predicate mapping": [
      {
        "label": "employed",
        "uri": "http://dbpedia.org/ontology/occupation",
        "mappedBy": "word2vec"
      },
      {
        "label": "famous",
        "uri": "http://dbpedia.org/ontology/knownFor",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Which part of the US political framework did Arthur Bagby and Thomas H hicks both serve?",
    "SerialNumber": "867",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Arthur_P._Bagby\u003e \u003chttp://dbpedia.org/property/order\u003e ?uri. \u003chttp://dbpedia.org/resource/Thomas_Holliday_Hicks\u003e \u003chttp://dbpedia.org/property/order\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "arthur bagby",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Arthur_P._Bagby",
        "seq": "999,1000"
      },
      {
        "label": "thomas hicks",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Thomas_Holliday_Hicks",
        "seq": "999,1000"
      }
    ],
    "id": "80c709f991704001a1b7c97b46375fb5",
    "predicate mapping": [
      {
        "label": "serve",
        "uri": "http://dbpedia.org/property/order",
        "mappedBy": "word2vec"
      },
      {
        "label": "serve",
        "uri": "http://dbpedia.org/property/order",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who gave the voice to the characters sculpted by Clamp?",
    "SerialNumber": "868",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/creator\u003e \u003chttp://dbpedia.org/resource/Clamp_(manga_artists)\u003e . ?x \u003chttp://dbpedia.org/ontology/voice\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/FictionalCharacter\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Clamp",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Clamp_(manga_artists)",
        "seq": "49,54"
      }
    ],
    "id": "e9737da1b4f945b39ad2ed1d09ad062b",
    "predicate mapping": [
      {
        "label": "sculpted",
        "uri": "http://dbpedia.org/property/creator",
        "mappedBy": "word2vec"
      },
      {
        "label": "voice",
        "uri": "http://dbpedia.org/ontology/voice",
        "seq": "13,18",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "characters",
        "uri": "http://dbpedia.org/ontology/FictionalCharacter",
        "seq": "26,36",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What is the country whose administrative centre is Hagta, Guam?",
    "SerialNumber": "869",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/capital\u003e \u003chttp://dbpedia.org/resource/Hagåtña,_Guam\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Country\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Hagåtña,_Guam",
        "seq": "999,1000"
      }
    ],
    "id": "2e12375aa47a42acaeab4fdba7d3890c",
    "predicate mapping": [
      {
        "label": "administrative centre",
        "uri": "http://dbpedia.org/ontology/capital",
        "seq": "26,47",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/Country",
        "seq": "12,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "What is the political party of the of Bengalis ?",
    "SerialNumber": "870",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/ethnicity\u003e \u003chttp://dbpedia.org/resource/Bengalis\u003e . ?x \u003chttp://dbpedia.org/ontology/party\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Bengalis",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Bengalis",
        "seq": "38,46"
      }
    ],
    "id": "47eda5b35417485b88697d20e48839d0",
    "predicate mapping": [
      {
        
        "label": " ",
        "uri": "http://dbpedia.org/ontology/ethnicity",
        "mappedBy": "NA"
      },
      {
        "label": "political party",
        "uri": "http://dbpedia.org/ontology/party",
        "seq": "12,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which political party of kumta had affiliation with Indian general election, 2004 (Andhra Pradesh) ",
    "SerialNumber": "871",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Kumta\u003e \u003chttp://dbpedia.org/property/governmentType\u003e ?uri. \u003chttp://dbpedia.org/resource/Indian_general_election,_2004_(Andhra_Pradesh)\u003e \u003chttp://dbpedia.org/ontology/affiliation\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "kumta",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Kumta",
        "seq": "25,30"
      },
      {
        "label": "Indian general election, 2004 (Andhra Pradesh)",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Indian_general_election,_2004_(Andhra_Pradesh)",
        "seq": "52,98"
      }
    ],
    "id": "53e6578861dc4630ad27012f1696ddcf",
    "predicate mapping": [
      {
        "label": " ",
        "uri": "http://dbpedia.org/property/governmentType",
        "mappedBy": "NA"
      },
      {
        "label": "affiliation",
        "uri": "http://dbpedia.org/ontology/affiliation",
        "seq": "35,46",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which composer of Motorpsycho Nitemare has also composed The time are A-Changing ?",
    "SerialNumber": "873",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Motorpsycho_Nitemare\u003e \u003chttp://dbpedia.org/property/composer\u003e ?uri. \u003chttp://dbpedia.org/resource/The_Times_They_Are_a-Changin\u0027_(musical)\u003e \u003chttp://dbpedia.org/ontology/musicBy\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Motorpsycho Nitemare",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Motorpsycho_Nitemare",
        "seq": "18,38"
      },
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/The_Times_They_Are_a-Changin\u0027_(musical)",
        "seq": "999,1000"
      }
    ],
    "id": "69b624f3af604a859f19a2adc6ffb845",
    "predicate mapping": [
      {
        "label": "composer",
        "uri": "http://dbpedia.org/property/composer",
        "seq": "6,14",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "composer",
        "uri": "http://dbpedia.org/ontology/musicBy",
        "seq": "6,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "How many different kinds of games are published by Interplay Entertainment?",
    "SerialNumber": "880",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/publisher\u003e \u003chttp://dbpedia.org/resource/Interplay_Entertainment\u003e . ?x \u003chttp://dbpedia.org/property/genre\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Interplay Entertainment",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Interplay_Entertainment",
        "seq": "51,74"
      }
    ],
    "id": "600d505ebfd1495fb2158a5b52fc4045",
    "predicate mapping": [
      {
        "label": "published",
        "uri": "http://dbpedia.org/ontology/publisher",
        "seq": "38,47",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "different kinds of",
        "uri": "http://dbpedia.org/property/genre",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "How many different kinds of softwares have been released under the GPL license?",
    "SerialNumber": "881",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/license\u003e \u003chttp://dbpedia.org/resource/GNU_General_Public_License\u003e . ?x \u003chttp://dbpedia.org/ontology/genre\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "GPL license",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/GNU_General_Public_License",
        "seq": "67,70"
      }
    ],
    "id": "0651212fb47546e089477eecc4777e69",
    "predicate mapping": [
      {
        "label": "license",
        "uri": "http://dbpedia.org/property/license",
        "seq": "71,78",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "different kinds of",
        "uri": "http://dbpedia.org/ontology/genre",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "311",
    "question": "List the schools of the athlete with Balgowan as one of the school ?",
    "SerialNumber": "883",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/school\u003e \u003chttp://dbpedia.org/resource/Balgowan,_KwaZulu-Natal\u003e . ?x \u003chttp://dbpedia.org/property/school\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Athlete\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "balgowan",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Balgowan,_KwaZulu-Natal",
        "seq": "999,1000"
      }
    ],
    "id": "726523874a964323aa5d43c5af238c05",
    "predicate mapping": [
      {
        "label": "school",
        "uri": "http://dbpedia.org/property/school",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "school",
        "uri": "http://dbpedia.org/property/school",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "athlete",
        "uri": "http://dbpedia.org/ontology/Athlete",
        "seq": "24,31",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which coach of Marquette Golden Eagles men\u0027s basketball team is also the head coach  of Virginia Tech Hokies men\u0027s basketball team ?",
    "SerialNumber": "888",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/2014–15_Virginia_Tech_Hokies_men\u0027s_basketball_team\u003e \u003chttp://dbpedia.org/property/headcoach\u003e ?uri. \u003chttp://dbpedia.org/resource/2012–13_Marquette_Golden_Eagles_men\u0027s_basketball_team\u003e \u003chttp://dbpedia.org/ontology/coach\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "basketball virginia hokies",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/2014–15_Virginia_Tech_Hokies_men\u0027s_basketball_team",
        "seq": "999,1000"
      },
      {
        "label": "basketball marquette golden eagles",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/2012–13_Marquette_Golden_Eagles_men\u0027s_basketball_team",
        "seq": "999,1000"
      }
    ],
    "id": "cfdba0daa427405b9b5b656f75e5a771",
    "predicate mapping": [
      {
        "label": "coach",
        "uri": "http://dbpedia.org/property/headcoach",
        "seq": "6,11",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "coach",
        "uri": "http://dbpedia.org/ontology/coach",
        "seq": "6,11",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Where do the judge advocate general corps live?",
    "SerialNumber": "892",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/rank\u003e \u003chttp://dbpedia.org/resource/Judge_Advocate_General\u0027s_Corps\u003e . ?x \u003chttp://dbpedia.org/property/residence\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "judge advocate general corps",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Judge_Advocate_General\u0027s_Corps",
        "seq": "13,41"
      }
    ],
    "id": "89d174ad69534ed48313311864b3fca6",
    "predicate mapping": [
      {
        "label": " ",
        "uri": "http://dbpedia.org/property/rank",
        "mappedBy": "NA"
      },
      {
        "label": "live",
        "uri": "http://dbpedia.org/property/residence",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Does Walt Disney Studio have a subsidiary called PixarCascadia_",
    "SerialNumber": "894",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Walt_Disney_Studios_(division)\u003e \u003chttp://dbpedia.org/ontology/subsidiary\u003e \u003chttp://dbpedia.org/resource/Pixar\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "studio disney walt",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Walt_Disney_Studios_(division)",
        "seq": "999,1000"
      },
      {
        "label": "Pixar",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Pixar",
        "seq": "49,54"
      }
    ],
    "id": "0961c5610ded49229b123d87522e0ce9",
    "predicate mapping": [
      {
        "label": "subsidiary",
        "uri": "http://dbpedia.org/ontology/subsidiary",
        "seq": "31,41",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "On which river are there things belonging to zambezi river authority?",
    "SerialNumber": "896",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/owner\u003e \u003chttp://dbpedia.org/resource/Zambezi_River_Authority\u003e . ?x \u003chttp://dbpedia.org/ontology/river\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "zambezi river authority",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Zambezi_River_Authority",
        "seq": "45,68"
      }
    ],
    "id": "533717b10afe49fb9b10cc531f19ce41",
    "predicate mapping": [
      {
        "label": "belonging to",
        "uri": "http://dbpedia.org/property/owner",
        "mappedBy": "word2vec"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/river",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Does vance johnson play as a wide receiver?",
    "SerialNumber": "899",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Vance_Johnson\u003e \u003chttp://dbpedia.org/ontology/position\u003e \u003chttp://dbpedia.org/resource/Wide_receiver\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "vance johnson",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Vance_Johnson",
        "seq": "5,18"
      },
      {
        "label": "wide receiver",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Wide_receiver",
        "seq": "29,42"
      }
    ],
    "id": "ee0133ba177848fdaa63a9a0a5fc217d",
    "predicate mapping": [
      {
        "label": "play",
        "uri": "http://dbpedia.org/ontology/position",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "How many different products are there of the companies located in the US?",
    "SerialNumber": "901",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/location\u003e \u003chttp://dbpedia.org/resource/United_States\u003e . ?x \u003chttp://dbpedia.org/ontology/product\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "US",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/United_States",
        "seq": "70,72"
      }
    ],
    "id": "65cb7ea9917b44e29c8adbc3e95d1470",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/ontology/location",
        "mappedBy": "word2vec"
      },
      {
        "label": "product",
        "uri": "http://dbpedia.org/ontology/product",
        "seq": "19,26",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Which are the countires where Pioneer Corporation has flourished?",
    "SerialNumber": "902",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Pioneer_Corporation\u003e \u003chttp://dbpedia.org/property/country\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Pioneer Corporation",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Pioneer_Corporation",
        "seq": "30,49"
      }
    ],
    "id": "85d2a3aff592486fbe48e0f6d67cebf3",
    "predicate mapping": [
      {
        "label": "countires",
        "uri": "http://dbpedia.org/property/country",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which city do both Arthur Ross and Edward Niesen come from?",
    "SerialNumber": "906",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Arthur_A._Ross\u003e \u003chttp://dbpedia.org/property/placeOfBirth\u003e ?uri. \u003chttp://dbpedia.org/resource/Edward_Niesen\u003e \u003chttp://dbpedia.org/ontology/birthPlace\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "arthur ross",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Arthur_A._Ross",
        "seq": "999,1000"
      },
      {
        "label": "Edward Niesen",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Edward_Niesen",
        "seq": "35,48"
      }
    ],
    "id": "31afaf9538e24202876296db1b6f2b87",
    "predicate mapping": [
      {
        "label": "come from",
        "uri": "http://dbpedia.org/property/placeOfBirth",
        "mappedBy": "word2vec"
      },
      {
        "label": "come from",
        "uri": "http://dbpedia.org/ontology/birthPlace",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who wrote Heroman?",
    "SerialNumber": "910",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Heroman\u003e \u003chttp://dbpedia.org/property/author\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Heroman",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Heroman",
        "seq": "10,17"
      }
    ],
    "id": "3e54cd98e79d4fa6b3b2dc7f2674c5d8",
    "predicate mapping": [
      {
        "label": "wrote",
        "uri": "http://dbpedia.org/property/author",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Was Zambezi originate in the north western province of zambia?",
    "SerialNumber": "913",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Zambezi\u003e \u003chttp://dbpedia.org/property/sourceRegion\u003e \u003chttp://dbpedia.org/resource/North-Western_Province,_Zambia\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Zambezi",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Zambezi",
        "seq": "4,11"
      },
      {
        "label": "province western zambia north",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/North-Western_Province,_Zambia",
        "seq": "999,1000"
      }
    ],
    "id": "8e833704b64d4d40bbff73d5746d98c4",
    "predicate mapping": [
      {
        "label": "originate in",
        "uri": "http://dbpedia.org/property/sourceRegion",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What all is produced by companies in Douglas, Isle of Man?",
    "SerialNumber": "918",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/locationCity\u003e \u003chttp://dbpedia.org/resource/Douglas,_Isle_of_Man\u003e . ?x \u003chttp://dbpedia.org/ontology/product\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Company\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Douglas, Isle of Man",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Douglas,_Isle_of_Man",
        "seq": "37,57"
      }
    ],
    "id": "3abffed2b2504a16b1cbaecbe05b2bde",
    "predicate mapping": [
      {
        "label": " ",
        "uri": "http://dbpedia.org/ontology/locationCity",
        "mappedBy": "NA"
      },
      {
        "label": "produced",
        "uri": "http://dbpedia.org/ontology/product",
        "mappedBy": "word2vec"
      },
      {
        "label": "companies",
        "uri": "http://dbpedia.org/ontology/Company",
        "seq": "24,33",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "What is the number of occupation of the people who died in tampa bay, florida?",
    "SerialNumber": "919",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/deathPlace\u003e \u003chttp://dbpedia.org/resource/Tampa,_Florida\u003e . ?x \u003chttp://dbpedia.org/ontology/occupation\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "florida tampa",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Tampa,_Florida",
        "seq": "999,1000"
      }
    ],
    "id": "01e74239bfaf4b1d8de9cb7ed623a268",
    "predicate mapping": [
      {
        "label": "died in",
        "uri": "http://dbpedia.org/ontology/deathPlace",
        "seq": "51,58",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "occupation",
        "uri": "http://dbpedia.org/ontology/occupation",
        "seq": "22,32",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Whose work is in the Musee d\u0027orsay?",
    "SerialNumber": "921",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/museum\u003e \u003chttp://dbpedia.org/resource/Musée_d\u0027Orsay\u003e . ?x \u003chttp://dbpedia.org/property/artist\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Artwork\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Musee d\u0027orsay",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Musée_d\u0027Orsay",
        "seq": "21,34"
      }
    ],
    "id": "5d06f0ac2946469f965844d87feb57c4",
    "predicate mapping": [
      {
        "label": " ",
        "uri": "http://dbpedia.org/property/museum",
        "mappedBy": "NA"
      },
      {
        "label": " ",
        "uri": "http://dbpedia.org/property/artist",
        "mappedBy": "NA"
      },
      {
        "label": "work",
        "uri": "http://dbpedia.org/ontology/Artwork",
        "seq": "6,10",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "Who all are known to play the Gibson Guitar Corporation?",
    "SerialNumber": "925",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/notableInstruments\u003e \u003chttp://dbpedia.org/resource/Gibson_Guitar_Corporation\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Gibson Guitar Corporation",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Gibson_Guitar_Corporation",
        "seq": "30,55"
      }
    ],
    "id": "2d858381e01142748e34b68e8303754c",
    "predicate mapping": [
      {
        "label": "play",
        "uri": "http://dbpedia.org/property/notableInstruments",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who built the stadium which was rented for the 2013 Copa Centroamericana ?",
    "SerialNumber": "927",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/tenant\u003e \u003chttp://dbpedia.org/resource/2013_Copa_Centroamericana\u003e . ?x \u003chttp://dbpedia.org/ontology/builder\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Stadium\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "2013 Copa Centroamericana",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/2013_Copa_Centroamericana",
        "seq": "47,72"
      }
    ],
    "id": "0211cc1ff7b94942958a04da756282b7",
    "predicate mapping": [
      {
        "label": "rented",
        "uri": "http://dbpedia.org/ontology/tenant",
        "mappedBy": "word2vec"
      },
      {
        "label": "built",
        "uri": "http://dbpedia.org/ontology/builder",
        "seq": "4,9",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "stadium",
        "uri": "http://dbpedia.org/ontology/Stadium",
        "seq": "14,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "406",
    "question": "How many fictional characters are there in a series in which Craig Robinson acted?",
    "SerialNumber": "929",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/starring\u003e \u003chttp://dbpedia.org/resource/Craig_Robinson_(actor)\u003e . ?uri \u003chttp://dbpedia.org/ontology/series\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/FictionalCharacter\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Craig Robinson",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Craig_Robinson_(actor)",
        "seq": "61,75"
      }
    ],
    "id": "c476c7a2e55b4c00a92923d7d08a1e5f",
    "predicate mapping": [
      {
        "label": "acted",
        "uri": "http://dbpedia.org/ontology/starring",
        "mappedBy": "word2vec"
      },
      {
        "label": "series",
        "uri": "http://dbpedia.org/ontology/series",
        "seq": "45,51",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "fictional character",
        "uri": "http://dbpedia.org/ontology/FictionalCharacter",
        "seq": "9,28",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "in which country does the river end which originates in Lebrsnik?",
    "SerialNumber": "931",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/sourcePlace\u003e \u003chttp://dbpedia.org/resource/Lebršnik\u003e . ?x \u003chttp://dbpedia.org/ontology/mouthCountry\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Lebrsnik",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Lebršnik",
        "seq": "56,64"
      }
    ],
    "id": "8b10de10cf09466f94c4570b9c61aa72",
    "predicate mapping": [
      {
        "label": "originates",
        "uri": "http://dbpedia.org/ontology/sourcePlace",
        "mappedBy": "word2vec"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/mouthCountry",
        "seq": "9,16",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is that something which made Breann McGregor famous, and Frank Thorne received as an award?",
    "SerialNumber": "935",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Frank_Thorne\u003e \u003chttp://dbpedia.org/ontology/award\u003e ?uri. \u003chttp://dbpedia.org/resource/Breann_McGregor\u003e \u003chttp://dbpedia.org/property/knownFor\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Frank Thorne",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Frank_Thorne",
        "seq": "62,74"
      },
      {
        "label": "Breann McGregor",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Breann_McGregor",
        "seq": "34,49"
      }
    ],
    "id": "8f2c9b53aca646c08bfe2eeee0544df4",
    "predicate mapping": [
      {
        "label": "award",
        "uri": "http://dbpedia.org/ontology/award",
        "seq": "90,95",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "famous",
        "uri": "http://dbpedia.org/property/knownFor",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "what are the nicknames of the people who are in Ekstraliga?",
    "SerialNumber": "940",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/league\u003e \u003chttp://dbpedia.org/resource/Ekstraliga_(speedway)\u003e . ?x \u003chttp://dbpedia.org/property/nickname\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ekstraliga",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ekstraliga_(speedway)",
        "seq": "48,58"
      }
    ],
    "id": "226f3a3f6f844c5fbfee523f31ed439d",
    "predicate mapping": [
      {
        "label": "people",
        "uri": "http://dbpedia.org/property/league",
        "mappedBy": "word2vec"
      },
      {
        "label": "nickname",
        "uri": "http://dbpedia.org/property/nickname",
        "seq": "13,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Who is a famous relative of Aaround Van Heemstra?",
    "SerialNumber": "941",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/relative\u003e \u003chttp://dbpedia.org/resource/Aarnoud_van_Heemstra\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Aaround Van Heemstra",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Aarnoud_van_Heemstra",
        "seq": "28,48"
      }
    ],
    "id": "dc1d2cb750ca4e2e9f9a74ccd1c6c5cc",
    "predicate mapping": [
      {
        "label": "relative",
        "uri": "http://dbpedia.org/ontology/relative",
        "seq": "16,24",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "famous",
        "uri": "http://dbpedia.org/ontology/Person",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "List the television shows whose distributors are located at Burbank, California.",
    "SerialNumber": "943",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/locationCity\u003e \u003chttp://dbpedia.org/resource/Burbank,_California\u003e . ?uri \u003chttp://dbpedia.org/property/distributor\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Burbank, California",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Burbank,_California",
        "seq": "60,79"
      }
    ],
    "id": "e575b8c0e88a481db2a8c94388a81fdc",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/property/locationCity",
        "mappedBy": "word2vec"
      },
      {
        "label": "distributor",
        "uri": "http://dbpedia.org/property/distributor",
        "seq": "32,43",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "9,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What is the birth city of the Salford City F.C players ?",
    "SerialNumber": "946",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/team\u003e \u003chttp://dbpedia.org/resource/Salford_City_F.C.\u003e . ?x \u003chttp://dbpedia.org/ontology/birthPlace\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/SoccerPlayer\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Salford City F.C",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Salford_City_F.C.",
        "seq": "30,42"
      }
    ],
    "id": "c6d8bd8b828a4ffca756fcd6a7b9cad6",
    "predicate mapping": [
      {
        "label": " ",
        "uri": "http://dbpedia.org/ontology/team",
        "mappedBy": "NA"
      },
      {
        "label": "birth city",
        "uri": "http://dbpedia.org/ontology/birthPlace",
        "seq": "12,22",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "players",
        "uri": "http://dbpedia.org/ontology/SoccerPlayer",
        "seq": "47,54",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },------------------
  {
    "sparql_id": "305",
    "question": "To which US states does the roads belong which meet at the East Whiteland Township in Pennsylvania?",
    "SerialNumber": "948",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/routeJunction\u003e \u003chttp://dbpedia.org/resource/East_Whiteland_Township,_Chester_County,_Pennsylvania\u003e . ?x \u003chttp://dbpedia.org/ontology/state\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Road\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "pennsylvania whiteland township",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/East_Whiteland_Township,_Chester_County,_Pennsylvania",
        "seq": "999,1000"
      }
    ],
    "id": "a12b9f66bee84b9db6177e03023690f7",
    "predicate mapping": [
      {
        "label": "Pennsylvania",
        "uri": "http://dbpedia.org/ontology/routeJunction",
        "mappedBy": "word2vec"
      },
      {
        "label": "state",
        "uri": "http://dbpedia.org/ontology/state",
        "seq": "12,17",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "road",
        "uri": "http://dbpedia.org/ontology/Road",
        "seq": "28,32",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "To what other locations does the airlines have flights, who also fly to Birmingham?",
    "SerialNumber": "949",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/targetAirport\u003e \u003chttp://dbpedia.org/resource/Birmingham_Airport\u003e . ?x \u003chttp://dbpedia.org/property/destinations\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Airline\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Birmingham",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Birmingham_Airport",
        "seq": "72,82"
      }
    ],
    "id": "655aee0c067641ffbd67c9dac3ce438a",
    "predicate mapping": [
      {
        "label": "fly",
        "uri": "http://dbpedia.org/ontology/targetAirport",
        "mappedBy": "word2vec"
      },
      {
        "label": "fly",
        "uri": "http://dbpedia.org/property/destinations",
        "mappedBy": "word2vec"
      },
      {
        "label": "airline",
        "uri": "http://dbpedia.org/ontology/Airline",
        "seq": "33,40",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Which are the predecessors of the cars which are similar to the Oldsmobile 88?",
    "SerialNumber": "951",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Oldsmobile_88\u003e \u003chttp://dbpedia.org/property/related\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/predecessor\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Oldsmobile 88",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Oldsmobile_88",
        "seq": "64,77"
      }
    ],
    "id": "9559251273fe4cfd94ae14dc401612d9",
    "predicate mapping": [
      {
        "label": "similar",
        "uri": "http://dbpedia.org/property/related",
        "mappedBy": "word2vec"
      },
      {
        "label": "predecessor",
        "uri": "http://dbpedia.org/ontology/predecessor",
        "seq": "14,25",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "406",
    "question": "How many people are there whose children died in Indiana?",
    "SerialNumber": "952",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/deathPlace\u003e \u003chttp://dbpedia.org/resource/Indiana\u003e . ?uri \u003chttp://dbpedia.org/ontology/child\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Indiana",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Indiana",
        "seq": "49,56"
      }
    ],
    "id": "bcf6d38828d24556aa001e0484100b31",
    "predicate mapping": [
      {
        "label": "died in",
        "uri": "http://dbpedia.org/ontology/deathPlace",
        "seq": "41,48",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "children",
        "uri": "http://dbpedia.org/ontology/child",
        "seq": "32,40",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "people",
        "uri": "http://dbpedia.org/ontology/Person",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Which mountain range is the one with Ponte d\u0027Aveneyre and Le Gibloux?",
    "SerialNumber": "953",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Pointe_d\u0027Aveneyre\u003e \u003chttp://dbpedia.org/ontology/mountainRange\u003e ?uri. \u003chttp://dbpedia.org/resource/Le_Gibloux\u003e \u003chttp://dbpedia.org/ontology/mountainRange\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "d\u0027aveneyre",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Pointe_d\u0027Aveneyre",
        "seq": "999,1000"
      },
      {
        "label": "Gibloux",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Le_Gibloux",
        "seq": "61,68"
      }
    ],
    "id": "ad765492f88c48c3b2bc9040652ce954",
    "predicate mapping": [
      {
        "label": "mountain range",
        "uri": "http://dbpedia.org/ontology/mountainRange",
        "seq": "6,20",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "mountain range",
        "uri": "http://dbpedia.org/ontology/mountainRange",
        "seq": "6,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "What are some movies whose distributors are led by Kevin Tsujihara?",
    "SerialNumber": "960",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/keyPerson\u003e \u003chttp://dbpedia.org/resource/Kevin_Tsujihara\u003e . ?uri \u003chttp://dbpedia.org/property/distributor\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Kevin Tsujihara",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Kevin_Tsujihara",
        "seq": "51,66"
      }
    ],
    "id": "5dd25945300c4882b7f41d51f864edbf",
    "predicate mapping": [
      {
        "label": "led",
        "uri": "http://dbpedia.org/ontology/keyPerson",
        "mappedBy": "word2vec"
      },
      {
        "label": "distributor",
        "uri": "http://dbpedia.org/property/distributor",
        "seq": "27,38",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "14,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "Who are the relatives of the character after which Quagmire\u0027s Quagmire was made?",
    "SerialNumber": "962",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/subsequentWork\u003e \u003chttp://dbpedia.org/resource/Quagmire\u0027s_Quagmire\u003e . ?uri \u003chttp://dbpedia.org/ontology/relative\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Quagmire\u0027s Quagmire",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Quagmire\u0027s_Quagmire",
        "seq": "51,70"
      }
    ],
    "id": "3f32bfb3b7df4136b3983a9dfe3beed0",
    "predicate mapping": [
      {
        "label": "made",
        "uri": "http://dbpedia.org/ontology/subsequentWork",
        "mappedBy": "word2vec"
      },
      {
        "label": "relative",
        "uri": "http://dbpedia.org/ontology/relative",
        "seq": "12,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "Who all play for the teams performing in the united center?",
    "SerialNumber": "968",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/arena\u003e \u003chttp://dbpedia.org/resource/United_Center\u003e . ?uri \u003chttp://dbpedia.org/property/team\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "united center",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/United_Center",
        "seq": "45,58"
      }
    ],
    "id": "2361961d044049bfb2ea19866fcc28b9",
    "predicate mapping": [
      {
        "label": "performing",
        "uri": "http://dbpedia.org/property/arena",
        "mappedBy": "word2vec"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/property/team",
        "seq": "21,25",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Where is the gold coast football club located?",
    "SerialNumber": "969",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Gold_Coast_Football_Club\u003e \u003chttp://dbpedia.org/property/location\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "gold coast football club",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Gold_Coast_Football_Club",
        "seq": "13,37"
      }
    ],
    "id": "9db99f7b0b424eef87494372c398bb83",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/property/location",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which award that has been given to James F Obrien, had used Laemmle Theatres for some service?",
    "SerialNumber": "970",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Laemmle_Theatres\u003e \u003chttp://dbpedia.org/ontology/service\u003e ?uri. \u003chttp://dbpedia.org/resource/James_F._O\u0027Brien\u003e \u003chttp://dbpedia.org/ontology/award\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Laemmle Theatres",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Laemmle_Theatres",
        "seq": "60,76"
      },
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/James_F._O\u0027Brien",
        "seq": "999,1000"
      }
    ],
    "id": "d499386227fb4943ad773dfaf48271a3",
    "predicate mapping": [
      {
        "label": "service",
        "uri": "http://dbpedia.org/ontology/service",
        "seq": "86,93",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "award",
        "uri": "http://dbpedia.org/ontology/award",
        "seq": "6,11",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Where are the Dinamo Krasnodar players born?",
    "SerialNumber": "971",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/club\u003e \u003chttp://dbpedia.org/resource/Dinamo_Krasnodar\u003e . ?x \u003chttp://dbpedia.org/property/placeOfBirth\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Athlete\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Dinamo Krasnodar",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Dinamo_Krasnodar",
        "seq": "14,30"
      }
    ],
    "id": "613d4281e6a24597aed9eb6dc6ddae4a",
    "predicate mapping": [
      {
        "label": "born",
        "uri": "http://dbpedia.org/ontology/club",
        "mappedBy": "word2vec"
      },
      {
        "uri": "http://dbpedia.org/property/placeOfBirth",
        "mappedBy": "word2vec"
      },
      {
        "label": "born",
        "uri": "http://dbpedia.org/ontology/Athlete",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "Name the people whose academic advisor has also mentored the thesis of Alexius Meinong?",
    "SerialNumber": "972",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/doctoralStudents\u003e \u003chttp://dbpedia.org/resource/Alexius_Meinong\u003e . ?uri \u003chttp://dbpedia.org/ontology/academicAdvisor\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Alexius Meinong",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Alexius_Meinong",
        "seq": "71,86"
      }
    ],
    "id": "0f0065ebc6d9448a9925cf985837df80",
    "predicate mapping": [
      {
        "label": "thesis",
        "uri": "http://dbpedia.org/property/doctoralStudents",
        "mappedBy": "word2vec"
      },
      {
        "label": "academic advisor",
        "uri": "http://dbpedia.org/ontology/academicAdvisor",
        "seq": "22,38",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "thesis",
        "uri": "http://dbpedia.org/ontology/Person",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who is the founder of Wuropean School, Karlsruhe ?",
    "SerialNumber": "973",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/European_School,_Karlsruhe\u003e \u003chttp://dbpedia.org/property/founder\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "karlsruhe school,",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/European_School,_Karlsruhe",
        "seq": "999,1000"
      }
    ],
    "id": "13a6659956ff48d8ad29034fecc6357d",
    "predicate mapping": [
      {
        "label": "founder of",
        "uri": "http://dbpedia.org/property/founder",
        "seq": "11,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Does the croton river flow into the hudson?",
    "SerialNumber": "974",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Hudson_River\u003e \u003chttp://dbpedia.org/ontology/leftTributary\u003e \u003chttp://dbpedia.org/resource/Croton_River\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "hudson",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Hudson_River",
        "seq": "36,42"
      },
      {
        "label": "croton river",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Croton_River",
        "seq": "9,21"
      }
    ],
    "id": "459448bd75ec43279fcae4db9efacd08",
    "predicate mapping": [
      {
        "label": "flow",
        "uri": "http://dbpedia.org/ontology/leftTributary",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which fields of the Paul Demiville is also the faith of Koay Teng Hai ?",
    "SerialNumber": "976",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Paul_Demiéville\u003e \u003chttp://dbpedia.org/property/fields\u003e ?uri. \u003chttp://dbpedia.org/resource/Koay_Teng_Hai\u003e \u003chttp://dbpedia.org/ontology/religion\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Paul_Demiéville",
        "seq": "999,1000"
      },
      {
        "label": "Koay Teng Hai",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Koay_Teng_Hai",
        "seq": "56,69"
      }
    ],
    "id": "8994dc83e54f403699937e9328a327a8",
    "predicate mapping": [
      {
        "label": "fields",
        "uri": "http://dbpedia.org/property/fields",
        "seq": "6,12",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "faith",
        "uri": "http://dbpedia.org/ontology/religion",
        "seq": "47,52",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which leader of United States House of Representatives was the appinter of ohn Drayton ?",
    "SerialNumber": "981",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/United_States_House_of_Representatives_elections,_1788_and_1789\u003e \u003chttp://dbpedia.org/property/leader\u003e ?uri. \u003chttp://dbpedia.org/resource/John_Drayton\u003e \u003chttp://dbpedia.org/property/appointer\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "representatives united states",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/United_States_House_of_Representatives_elections,_1788_and_1789",
        "seq": "999,1000"
      },
      {
        "label": "drayton ohn",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/John_Drayton",
        "seq": "999,1000"
      }
    ],
    "id": "af5f1360af214572ad2d8a7f52b326c1",
    "predicate mapping": [
      {
        "label": "leader",
        "uri": "http://dbpedia.org/property/leader",
        "seq": "6,12",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "Drayton",
        "uri": "http://dbpedia.org/property/appointer",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "How many local authorities manage mixed gender schools?",
    "SerialNumber": "991",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/gender\u003e \u003chttp://dbpedia.org/resource/Mixed-sex_education\u003e . ?x \u003chttp://dbpedia.org/ontology/localAuthority\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "mixed",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Mixed-sex_education",
        "seq": "999,1000"
      }
    ],
    "id": "62c64f48fb4e42cba7d5df25238d0c00",
    "predicate mapping": [
      {
        "label": "gender",
        "uri": "http://dbpedia.org/ontology/gender",
        "seq": "40,46",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "authorities",
        "uri": "http://dbpedia.org/ontology/localAuthority",
        "seq": "15,26",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "What are some apes?",
    "SerialNumber": "992",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/family\u003e \u003chttp://dbpedia.org/resource/Ape\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "ape",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ape",
        "seq": "14,17"
      }
    ],
    "id": "19a1601d48324aeb87419019f0e0e027",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/family",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Is Peter Crouch currently in the Stoke City FC?",
    "SerialNumber": "997",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Peter_Crouch\u003e \u003chttp://dbpedia.org/property/currentclub\u003e \u003chttp://dbpedia.org/resource/Stoke_City_F.C.\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Peter Crouch",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Peter_Crouch",
        "seq": "3,15"
      },
      {
        "label": "Stoke City FC",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Stoke_City_F.C.",
        "seq": "33,46"
      }
    ],
    "id": "f915a7c6e28343a1861fb5a31d770432",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/currentclub",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Is Lloyd  Nosler the editor of The Temptress?",
    "SerialNumber": "998",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/The_Temptress\u003e \u003chttp://dbpedia.org/ontology/editing\u003e \u003chttp://dbpedia.org/resource/Lloyd_Nosler\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "The Temptress",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Temptress",
        "seq": "31,44"
      },
      {
        "label": "nosler lloyd",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Lloyd_Nosler",
        "seq": "999,1000"
      }
    ],
    "id": "5e350b58254d4f07a7a629bb71533ba6",
    "predicate mapping": [
      {
        "label": "editor",
        "uri": "http://dbpedia.org/ontology/editing",
        "seq": "21,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "401",
    "question": "How many Thesaban towns are there?",
    "SerialNumber": "1001",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/property/settlementType\u003e \u003chttp://dbpedia.org/resource/Thesaban\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Town\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Thesaban",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Thesaban",
        "seq": "9,17"
      }
    ],
    "id": "8a90aa06557b4f7387d69334dbc420ef",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/settlementType",
        "mappedBy": "word2vec"
      },
      {
        "label": "town",
        "uri": "http://dbpedia.org/ontology/Town",
        "seq": "18,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Did Oliver Sacks study at the Columbia University?",
    "SerialNumber": "1004",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Oliver_Sacks\u003e \u003chttp://dbpedia.org/ontology/institution\u003e \u003chttp://dbpedia.org/resource/Columbia_University\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Oliver Sacks",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Oliver_Sacks",
        "seq": "4,16"
      },
      {
        "label": "Columbia University",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Columbia_University",
        "seq": "30,49"
      }
    ],
    "id": "d15fc086b4a342d0a45205ffd6963f8c",
    "predicate mapping": [
      {
        "label": "study",
        "uri": "http://dbpedia.org/ontology/institution",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "111",
    "question": "How many other genere are there of the radio stations whose one of the genre  is Classic rock ?",
    "SerialNumber": "1005",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/programmeFormat\u003e \u003chttp://dbpedia.org/resource/Classic_rock\u003e . ?x \u003chttp://dbpedia.org/ontology/programmeFormat\u003e ?uri }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Classic rock",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Classic_rock",
        "seq": "81,93"
      }
    ],
    "id": "02ae1a10a037480a91be9b50a5073a8b",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/programmeFormat",
        "mappedBy": "word2vec"
      },
      {
        "uri": "http://dbpedia.org/ontology/programmeFormat",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who was the narrator in the point?",
    "SerialNumber": "1009",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/The_Point!\u003e \u003chttp://dbpedia.org/property/narrated\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "the point?",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Point!",
        "seq": "24,34"
      }
    ],
    "id": "6cf76cd43efe4dae9271d0dcafd040d0",
    "predicate mapping": [
      {
        "label": "narrator",
        "uri": "http://dbpedia.org/property/narrated",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "Which basketball team\u0027s president studied in the Brockport Golden Eagles?",
    "SerialNumber": "1011",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/college\u003e \u003chttp://dbpedia.org/resource/Brockport_Golden_Eagles\u003e . ?uri \u003chttp://dbpedia.org/property/president\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/BasketballTeam\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Brockport Golden Eagles",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Brockport_Golden_Eagles",
        "seq": "49,72"
      }
    ],
    "id": "37d312b3fc364f16bdc7b55e5a845a90",
    "predicate mapping": [
      {
        "label": "studied",
        "uri": "http://dbpedia.org/ontology/college",
        "mappedBy": "word2vec"
      },
      {
        "label": "president",
        "uri": "http://dbpedia.org/property/president",
        "seq": "24,33",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "basketball team",
        "uri": "http://dbpedia.org/ontology/BasketballTeam",
        "seq": "6,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "406",
    "question": "How many scientist became famous for the battle of Occupation of Japan?",
    "SerialNumber": "1015",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/battle\u003e \u003chttp://dbpedia.org/resource/Occupation_of_Japan\u003e . ?uri \u003chttp://dbpedia.org/property/knownFor\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Scientist\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Occupation of Japan",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Occupation_of_Japan",
        "seq": "51,70"
      }
    ],
    "id": "7124c65f43eb4c7db607755053ad3252",
    "predicate mapping": [
      {
        "label": "battle",
        "uri": "http://dbpedia.org/ontology/battle",
        "seq": "41,47",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "famous",
        "uri": "http://dbpedia.org/property/knownFor",
        "mappedBy": "word2vec"
      },
      {
        "label": "scientist",
        "uri": "http://dbpedia.org/ontology/Scientist",
        "seq": "9,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which owner of the national Herald india is the leader of Kumta ?",
    "SerialNumber": "1016",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/The_National_Herald_(India)\u003e \u003chttp://dbpedia.org/ontology/owner\u003e ?uri. \u003chttp://dbpedia.org/resource/Kumta\u003e \u003chttp://dbpedia.org/property/governmentType\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "national Herald",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/The_National_Herald_(India)",
        "seq": "19,34"
      },
      {
        "label": "Kumta",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Kumta",
        "seq": "58,63"
      }
    ],
    "id": "722afd3c1d7f45638c954d4bac6d0dfb",
    "predicate mapping": [
      {
        "label": "owner",
        "uri": "http://dbpedia.org/ontology/owner",
        "seq": "6,11",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "leader",
        "uri": "http://dbpedia.org/property/governmentType",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "405",
    "question": "In how many countries does the Zurich Affoltern am Albis Zug line go?",
    "SerialNumber": "1018",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/line\u003e \u003chttp://dbpedia.org/resource/Zürich–Affoltern_am_Albis–Zug_railway_line\u003e . ?x \u003chttp://dbpedia.org/ontology/country\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Country\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "affoltern albis",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Zürich–Affoltern_am_Albis–Zug_railway_line",
        "seq": "999,1000"
      }
    ],
    "id": "b64d9fce937f4f0e9a0ca37ee8953f92",
    "predicate mapping": [
      {
        "label": "line",
        "uri": "http://dbpedia.org/property/line",
        "seq": "61,65",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "In",
        "uri": "http://dbpedia.org/ontology/country",
        "seq": "0,2",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "countries",
        "uri": "http://dbpedia.org/ontology/Country",
        "seq": "12,21",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "405",
    "question": "Give me the count of all people who ascented a peak in California?",
    "SerialNumber": "1019",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/locatedInArea\u003e \u003chttp://dbpedia.org/resource/California\u003e . ?x \u003chttp://dbpedia.org/ontology/firstAscentPerson\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "California",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/California",
        "seq": "55,65"
      }
    ],
    "id": "975c249b705448208e1323922ac6f2da",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/locatedInArea",
        "seq": "52,54",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "ascented",
        "uri": "http://dbpedia.org/ontology/firstAscentPerson",
        "seq": "36,44",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "peak",
        "uri": "http://dbpedia.org/ontology/Person",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What people are known to work for Johnny Cash?",
    "SerialNumber": "1020",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/associatedActs\u003e \u003chttp://dbpedia.org/resource/Johnny_Cash\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Johnny Cash",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Johnny_Cash",
        "seq": "34,45"
      }
    ],
    "id": "d7cf27ca038544a0aedfa9c7533e0743",
    "predicate mapping": [
      {
        "label": "work",
        "uri": "http://dbpedia.org/property/associatedActs",
        "mappedBy": "word2vec"
      },
      {
        "label": "work",
        "uri": "http://dbpedia.org/ontology/Person",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What rivers originate from Australian Alps?",
    "SerialNumber": "1022",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/sourcePlace\u003e \u003chttp://dbpedia.org/resource/Australian_Alps\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/River\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Australian Alps",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Australian_Alps",
        "seq": "27,42"
      }
    ],
    "id": "a40f13291ca14b10b2f098c618bb7b4d",
    "predicate mapping": [
      {
        "label": "originate",
        "uri": "http://dbpedia.org/ontology/sourcePlace",
        "mappedBy": "word2vec"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River",
        "seq": "5,10",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What\u0027s the religion of the winner of china election of 2008?",
    "SerialNumber": "1024",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Republic_of_China_legislative_election,_2008\u003e \u003chttp://dbpedia.org/property/leader\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/religion\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "2008",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Republic_of_China_legislative_election,_2008",
        "seq": "55,59"
      }
    ],
    "id": "ec098d0e9dc04cb997cf1bedf575db5c",
    "predicate mapping": [
      {
        "label": "election",
        "uri": "http://dbpedia.org/property/leader",
        "mappedBy": "word2vec"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion",
        "seq": "11,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What is the constituency of the people who died in Lampedusa?",
    "SerialNumber": "1027",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/deathPlace\u003e \u003chttp://dbpedia.org/resource/Lampedusa\u003e . ?x \u003chttp://dbpedia.org/property/constituency\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Lampedusa",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Lampedusa",
        "seq": "51,60"
      }
    ],
    "id": "85cdd790d3474b37b3fbbb8ecfd40517",
    "predicate mapping": [
      {
        "label": "died in",
        "uri": "http://dbpedia.org/property/deathPlace",
        "seq": "43,50",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "constituency",
        "uri": "http://dbpedia.org/property/constituency",
        "seq": "12,24",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "people",
        "uri": "http://dbpedia.org/ontology/Person",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Where else did the graduates of the university of west indies study?",
    "SerialNumber": "1028",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/institution\u003e \u003chttp://dbpedia.org/resource/University_of_the_West_Indies\u003e . ?x \u003chttp://dbpedia.org/property/almaMater\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "university indies west",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/University_of_the_West_Indies",
        "seq": "999,1000"
      }
    ],
    "id": "5b6758a1346840589e4406f834826e3c",
    "predicate mapping": [
      {
        "label": "study",
        "uri": "http://dbpedia.org/ontology/institution",
        "mappedBy": "word2vec"
      },
      {
        "label": "graduates",
        "uri": "http://dbpedia.org/property/almaMater",
        "seq": "19,28",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Which statesman is married to Dolley Madison?",
    "SerialNumber": "1030",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/spouse\u003e \u003chttp://dbpedia.org/resource/Dolley_Madison\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/OfficeHolder\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Dolley Madison",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Dolley_Madison",
        "seq": "30,44"
      }
    ],
    "id": "cb55d0a92ec24545ab35ad668354f53e",
    "predicate mapping": [
      {
        "label": "married to",
        "uri": "http://dbpedia.org/property/spouse",
        "seq": "19,29",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "statesman",
        "uri": "http://dbpedia.org/ontology/OfficeHolder",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "403",
    "question": "How many groups have fought in wars where Richard Taylor fought too?",
    "SerialNumber": "1032",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { \u003chttp://dbpedia.org/resource/Richard_Taylor_(colonel)\u003e \u003chttp://dbpedia.org/property/battles\u003e ?x . ?x \u003chttp://dbpedia.org/property/combatant\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MilitaryConflict\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Richard Taylor",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Richard_Taylor_(colonel)",
        "seq": "42,56"
      }
    ],
    "id": "7dfadb99e8c946deaabb77d1f0ef093c",
    "predicate mapping": [
      {
        "label": "fought",
        "uri": "http://dbpedia.org/property/battles",
        "mappedBy": "word2vec"
      },
      {
        "label": "fought",
        "uri": "http://dbpedia.org/property/combatant",
        "mappedBy": "word2vec"
      },
      {
        "label": "fought",
        "uri": "http://dbpedia.org/ontology/MilitaryConflict",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Who directed the haunted house and alice in wonderland?",
    "SerialNumber": "1034",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Alice\u0027s_Wonderland\u003e \u003chttp://dbpedia.org/ontology/director\u003e ?uri. \u003chttp://dbpedia.org/resource/The_Haunted_House_(1929_film)\u003e \u003chttp://dbpedia.org/ontology/director\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "wonderland alice",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Alice\u0027s_Wonderland",
        "seq": "999,1000"
      },
      {
        "label": "the haunted house",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Haunted_House_(1929_film)",
        "seq": "13,30"
      }
    ],
    "id": "da7f8fc6054d436fa5dc4a6dca13af51",
    "predicate mapping": [
      {
        "label": "directed",
        "uri": "http://dbpedia.org/ontology/director",
        "seq": "4,12",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "directed",
        "uri": "http://dbpedia.org/ontology/director",
        "seq": "4,12",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "Count the sports played at universities located in Urban Areas?",
    "SerialNumber": "1036",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/campus\u003e \u003chttp://dbpedia.org/resource/Urban_area\u003e . ?x \u003chttp://dbpedia.org/ontology/sport\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Urban Area",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Urban_area",
        "seq": "51,61"
      }
    ],
    "id": "39670fa8f4204ba69a06afe012d003cb",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/ontology/campus",
        "mappedBy": "word2vec"
      },
      {
        "label": "sport",
        "uri": "http://dbpedia.org/ontology/sport",
        "seq": "10,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Where the club of Kiki Cutter located?",
    "SerialNumber": "1037",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Kiki_Cutter\u003e \u003chttp://dbpedia.org/property/club\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/location\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Kiki Cutter",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Kiki_Cutter",
        "seq": "18,29"
      }
    ],
    "id": "c24dda07f8a74f7a97a4c283745cc67c",
    "predicate mapping": [
      {
        "label": "club",
        "uri": "http://dbpedia.org/property/club",
        "seq": "10,14",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "located",
        "uri": "http://dbpedia.org/ontology/location",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Who penned Emma and Jane Austen in Manhatten?",
    "SerialNumber": "1038",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Jane_Austen_in_Manhattan\u003e \u003chttp://dbpedia.org/ontology/writer\u003e ?uri. \u003chttp://dbpedia.org/resource/Emma_(novel)\u003e \u003chttp://dbpedia.org/property/author\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Jane_Austen_in_Manhattan",
        "seq": "999,1000"
      },
      {
        "label": "Emma",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Emma_(novel)",
        "seq": "11,15"
      }
    ],
    "id": "8facfcdabe5c45f6a4ff24195185f240",
    "predicate mapping": [
      {
        "label": "Manhatten",
        "uri": "http://dbpedia.org/ontology/writer",
        "mappedBy": "word2vec"
      },
      {
        "label": "Manhatten",
        "uri": "http://dbpedia.org/property/author",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "Which wars were fought by the commander whose deputy was Robert T. Herres?",
    "SerialNumber": "1039",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/deputy\u003e \u003chttp://dbpedia.org/resource/Robert_T._Herres\u003e . ?uri \u003chttp://dbpedia.org/ontology/commander\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MilitaryConflict\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Robert T. Herres",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Robert_T._Herres",
        "seq": "57,73"
      }
    ],
    "id": "b80894dd929f4fff8e33453137e5f838",
    "predicate mapping": [
      {
        "label": "deputy",
        "uri": "http://dbpedia.org/ontology/deputy",
        "seq": "46,52",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "commander",
        "uri": "http://dbpedia.org/ontology/commander",
        "seq": "30,39",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "fought",
        "uri": "http://dbpedia.org/ontology/MilitaryConflict",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Is the Bucyrus MT6300AC assembled in north america?",
    "SerialNumber": "1040",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Bucyrus_MT6300AC\u003e \u003chttp://dbpedia.org/property/assembly\u003e \u003chttp://dbpedia.org/resource/North_America\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Bucyrus MT6300AC",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Bucyrus_MT6300AC",
        "seq": "7,23"
      },
      {
        "label": "north america",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/North_America",
        "seq": "37,50"
      }
    ],
    "id": "44579153ae3b44e89b30a9b9990e1c09",
    "predicate mapping": [
      {
        "label": "assembled",
        "uri": "http://dbpedia.org/property/assembly",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "What are all the religions in which Jacob and Abraham are important?",
    "SerialNumber": "1041",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Jacob\u003e \u003chttp://dbpedia.org/property/veneratedIn\u003e ?uri. \u003chttp://dbpedia.org/resource/Abraham\u003e \u003chttp://dbpedia.org/property/veneratedIn\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jacob",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Jacob",
        "seq": "36,41"
      },
      {
        "label": "Abraham",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Abraham",
        "seq": "46,53"
      }
    ],
    "id": "a807b47daf314dd1867083e605303a2b",
    "predicate mapping": [
      {
        "label": "important",
        "uri": "http://dbpedia.org/property/veneratedIn",
        "mappedBy": "word2vec"
      },
      {
        "label": "important",
        "uri": "http://dbpedia.org/property/veneratedIn",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the common award won by geoffrey Rush and Laemmle Theatres ?",
    "SerialNumber": "1045",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Geoffrey_Rush\u003e \u003chttp://dbpedia.org/property/awards\u003e ?uri. \u003chttp://dbpedia.org/resource/Laemmle_Theatres\u003e \u003chttp://dbpedia.org/ontology/service\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "geoffrey Rush",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Geoffrey_Rush",
        "seq": "32,45"
      },
      {
        "label": "Laemmle Theatres",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Laemmle_Theatres",
        "seq": "50,66"
      }
    ],
    "id": "0f95ea47819f4c68bd0ce67b5a955e3f",
    "predicate mapping": [
      {
        "label": "award won",
        "uri": "http://dbpedia.org/property/awards",
        "seq": "19,28",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "common",
        "uri": "http://dbpedia.org/ontology/service",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Who develops the computation platform of Microsoft Expression Encoder ?",
    "SerialNumber": "1046",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Microsoft_Expression_Encoder\u003e \u003chttp://dbpedia.org/ontology/computingPlatform\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/developer\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Microsoft Expression Encoder",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Microsoft_Expression_Encoder",
        "seq": "41,69"
      }
    ],
    "id": "4a3f11eb3f2d4d0389762febc9a3d122",
    "predicate mapping": [
      {
        "label": "platform",
        "uri": "http://dbpedia.org/ontology/computingPlatform",
        "mappedBy": "word2vec"
      },
      {
        "label": "develops",
        "uri": "http://dbpedia.org/ontology/developer",
        "seq": "4,12",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "In which country is the Chapelle Saint-Louis de Carthage located ?",
    "SerialNumber": "1048",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Chapelle_Saint-Louis_de_Carthage\u003e \u003chttp://dbpedia.org/ontology/location\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/country\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Chapelle Saint-Louis de Carthage",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Chapelle_Saint-Louis_de_Carthage",
        "seq": "24,56"
      }
    ],
    "id": "3a6432cd1ada457994b8cd04721bcccd",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/ontology/location",
        "mappedBy": "word2vec"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/country",
        "seq": "9,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "In how many places can I find tombs of people who fought in the Norwalk Trainband?",
    "SerialNumber": "1050",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/militaryUnit\u003e \u003chttp://dbpedia.org/resource/Norwalk_Trainband\u003e . ?x \u003chttp://dbpedia.org/property/restingplace\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Norwalk Trainband",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Norwalk_Trainband",
        "seq": "64,81"
      }
    ],
    "id": "2f9f8fd7f42f40a19ee4c0b72746fef6",
    "predicate mapping": [
      {
        "label": "fought",
        "uri": "http://dbpedia.org/ontology/militaryUnit",
        "mappedBy": "word2vec"
      },
      {
        "label": "places",
        "uri": "http://dbpedia.org/property/restingplace",
        "seq": "12,18",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which nationality of Newin Chidchob is also the nationality of Ajahn Sao Kantaslo ?",
    "SerialNumber": "1051",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Newin_Chidchob\u003e \u003chttp://dbpedia.org/property/nationality\u003e ?uri. \u003chttp://dbpedia.org/resource/Ajahn_Sao_Kantasīlo\u003e \u003chttp://dbpedia.org/ontology/nationality\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Newin Chidchob",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Newin_Chidchob",
        "seq": "21,35"
      },
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Ajahn_Sao_Kantasīlo",
        "seq": "999,1000"
      }
    ],
    "id": "7f491bee97b44a1eb028ecd5aea8a442",
    "predicate mapping": [
      {
        "label": "nationality",
        "uri": "http://dbpedia.org/property/nationality",
        "seq": "6,17",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "nationality",
        "uri": "http://dbpedia.org/ontology/nationality",
        "seq": "6,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "Which movies\u0027 composers have won a BAFTA for film music?",
    "SerialNumber": "1052",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/award\u003e \u003chttp://dbpedia.org/resource/BAFTA_Award_for_Best_Film_Music\u003e . ?uri \u003chttp://dbpedia.org/ontology/musicComposer\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "music bafta film for",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/BAFTA_Award_for_Best_Film_Music",
        "seq": "999,1000"
      }
    ],
    "id": "a655921614b54e81b96b9832c987cc05",
    "predicate mapping": [
      {
        "label": "music",
        "uri": "http://dbpedia.org/ontology/award",
        "mappedBy": "word2vec"
      },
      {
        "label": "composers",
        "uri": "http://dbpedia.org/ontology/musicComposer",
        "seq": "14,23",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "6,11",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Is Microsoft office written in C++",
    "SerialNumber": "1053",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Microsoft_Office\u003e \u003chttp://dbpedia.org/property/programmingLanguage\u003e \u003chttp://dbpedia.org/resource/C++\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Microsoft office",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Microsoft_Office",
        "seq": "3,19"
      },
      {
        "label": "C++",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/C++",
        "seq": "31,34"
      }
    ],
    "id": "a4af0ba8a3fe4331ac77ceb9f178ed02",
    "predicate mapping": [
      {
        "label": "written",
        "uri": "http://dbpedia.org/property/programmingLanguage",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Was the altazor drawn by Picasso?",
    "SerialNumber": "1054",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Altazor\u003e \u003chttp://dbpedia.org/property/illustrator\u003e \u003chttp://dbpedia.org/resource/Pablo_Picasso\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "altazor",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Altazor",
        "seq": "8,15"
      },
      {
        "label": "Picasso",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Pablo_Picasso",
        "seq": "25,32"
      }
    ],
    "id": "abca45aad53b4fdbaa4b40cd8f0a6490",
    "predicate mapping": [
      {
        "label": "drawn",
        "uri": "http://dbpedia.org/property/illustrator",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "101",
    "question": "How many people used to play for Toronto Argonauts?",
    "SerialNumber": "1055",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/ontology/formerTeam\u003e \u003chttp://dbpedia.org/resource/Toronto_Argonauts\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Toronto Argonauts",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Toronto_Argonauts",
        "seq": "33,50"
      }
    ],
    "id": "081763becc9f4357b36cb9ef05856c1d",
    "predicate mapping": [
      {
        "label": "play",
        "uri": "http://dbpedia.org/ontology/formerTeam",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "In how many languages did Marika Gombitova sing?",
    "SerialNumber": "1057",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/artist\u003e \u003chttp://dbpedia.org/resource/Marika_Gombitová\u003e . ?x \u003chttp://dbpedia.org/property/language\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Marika Gombitova",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Marika_Gombitová",
        "seq": "26,42"
      }
    ],
    "id": "522b9a5a5c03491bbbb0b8eb89fc063f",
    "predicate mapping": [
      {
        "label": "sing",
        "uri": "http://dbpedia.org/property/artist",
        "mappedBy": "word2vec"
      },
      {
        "label": "language",
        "uri": "http://dbpedia.org/property/language",
        "seq": "12,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the official residence of the Christopher Daz Figuero which is also the  state of the Cruce a Nado Internacional",
    "SerialNumber": "1059",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Christopher_Díaz_Figueroa\u003e \u003chttp://dbpedia.org/property/residence\u003e ?uri. \u003chttp://dbpedia.org/resource/Cruce_a_Nado_Internacional\u003e \u003chttp://dbpedia.org/ontology/country\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "christopher figuero",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Christopher_Díaz_Figueroa",
        "seq": "999,1000"
      },
      {
        "label": "Cruce a Nado Internacional",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Cruce_a_Nado_Internacional",
        "seq": "94,120"
      }
    ],
    "id": "e1d32c8ac1044f5b815f5bd8b971b736",
    "predicate mapping": [
      {
        "label": "residence",
        "uri": "http://dbpedia.org/property/residence",
        "seq": "21,30",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "state",
        "uri": "http://dbpedia.org/ontology/country",
        "seq": "81,86",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What are the track and field events of Jamiatu Muslim Mindanao?",
    "SerialNumber": "1060",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Jamiatu_Muslim_Mindanao\u003e \u003chttp://dbpedia.org/property/athletics\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jamiatu Muslim Mindanao",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Jamiatu_Muslim_Mindanao",
        "seq": "39,62"
      }
    ],
    "id": "477b36580d6c453e9fe828225b61fbb0",
    "predicate mapping": [
      {
        "label": "events",
        "uri": "http://dbpedia.org/property/athletics",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Which athlete was the flag bearer for Switzerland in 2004 and 2008 summer Olympics ?",
    "SerialNumber": "1067",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Switzerland_at_the_2004_Summer_Olympics\u003e \u003chttp://dbpedia.org/property/flagbearer\u003e ?uri. \u003chttp://dbpedia.org/resource/Switzerland_at_the_2008_Summer_Olympics\u003e \u003chttp://dbpedia.org/property/flagbearer\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "switzerland olympics summer 2004",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Switzerland_at_the_2004_Summer_Olympics",
        "seq": "999,1000"
      },
      {
        "label": "switzerland olympics summer 2008",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Switzerland_at_the_2008_Summer_Olympics",
        "seq": "999,1000"
      }
    ],
    "id": "3a4019df663a4b7694548d7e5fa8ed39",
    "predicate mapping": [
      {
        "label": "bearer flag",
        "uri": "http://dbpedia.org/property/flagbearer",
        "seq": "-1,10",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "bearer flag",
        "uri": "http://dbpedia.org/property/flagbearer",
        "seq": "-1,10",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "List some pupils of National Science Medal winning scientists?",
    "SerialNumber": "1070",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/prizes\u003e \u003chttp://dbpedia.org/resource/National_Medal_of_Science\u003e . ?x \u003chttp://dbpedia.org/property/doctoralStudents\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Scientist\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "national science medal",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/National_Medal_of_Science",
        "seq": "999,1000"
      }
    ],
    "id": "0875010dd1d442a09d23bdaaf2293064",
    "predicate mapping": [
      {
        "label": "winning",
        "uri": "http://dbpedia.org/property/prizes",
        "mappedBy": "word2vec"
      },
      {
        "label": "winning",
        "uri": "http://dbpedia.org/property/doctoralStudents",
        "mappedBy": "word2vec"
      },
      {
        "label": "scientist",
        "uri": "http://dbpedia.org/ontology/Scientist",
        "seq": "51,60",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the TV show which has judge as harry Connick and is broadcasted on Fox Broadcasting Company ?",
    "SerialNumber": "1073",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/channel\u003e \u003chttp://dbpedia.org/resource/Fox_Broadcasting_Company\u003e . ?uri \u003chttp://dbpedia.org/property/judges\u003e \u003chttp://dbpedia.org/resource/Harry_Connick,_Jr.\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Fox Broadcasting Company",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Fox_Broadcasting_Company",
        "seq": "72,96"
      },
      {
        "label": "connick harry",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Harry_Connick,_Jr.",
        "seq": "999,1000"
      }
    ],
    "id": "82c928cbd1774387a68f7fb4dd3e62ec",
    "predicate mapping": [
      {
        "label": "broadcasted",
        "uri": "http://dbpedia.org/ontology/channel",
        "mappedBy": "word2vec"
      },
      {
        "label": "judge",
        "uri": "http://dbpedia.org/property/judges",
        "seq": "27,32",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "12,16",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What company brought Riddim Ribbon to the market, and developed the batch monitor?",
    "SerialNumber": "1074",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Batch_Monitor\u003e \u003chttp://dbpedia.org/property/developer\u003e ?uri. \u003chttp://dbpedia.org/resource/Riddim_Ribbon_feat._The_Black_Eyed_Peas\u003e \u003chttp://dbpedia.org/property/distributor\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "batch monitor",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Batch_Monitor",
        "seq": "68,81"
      },
      {
        "label": "riddim ribbon",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Riddim_Ribbon_feat._The_Black_Eyed_Peas",
        "seq": "999,1000"
      }
    ],
    "id": "7ad84cbcf92d434bb36c969e41e4969c",
    "predicate mapping": [
      {
        "label": "developed",
        "uri": "http://dbpedia.org/property/developer",
        "seq": "54,63",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "Ribbon",
        "uri": "http://dbpedia.org/property/distributor",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Who is the builder of Estadio Nacional de Costa Rica and also location of Xianren Cave ?",
    "SerialNumber": "1079",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Estadio_Nacional_de_Costa_Rica_(2011)\u003e \u003chttp://dbpedia.org/ontology/builder\u003e ?uri. \u003chttp://dbpedia.org/resource/Xianren_Cave\u003e \u003chttp://dbpedia.org/ontology/country\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Estadio Nacional de Costa Rica",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Estadio_Nacional_de_Costa_Rica_(2011)",
        "seq": "22,52"
      },
      {
        "label": "Xianren Cave",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Xianren_Cave",
        "seq": "74,86"
      }
    ],
    "id": "fc3fe84aeff64b73884ae52e139bfb71",
    "predicate mapping": [
      {
        "label": "builder",
        "uri": "http://dbpedia.org/ontology/builder",
        "seq": "11,18",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "location",
        "uri": "http://dbpedia.org/ontology/country",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Erik Jendresen is writer and Play tone is company of which TV show ?",
    "SerialNumber": "1084",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/writer\u003e \u003chttp://dbpedia.org/resource/Erik_Jendresen\u003e . ?uri \u003chttp://dbpedia.org/property/company\u003e \u003chttp://dbpedia.org/resource/Playtone\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Erik Jendresen",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Erik_Jendresen",
        "seq": "0,14"
      },
      {
        "label": "tone play",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Playtone",
        "seq": "999,1000"
      }
    ],
    "id": "ef953fcfd8774d258a795e40f2c3858b",
    "predicate mapping": [
      {
        "label": "writer",
        "uri": "http://dbpedia.org/property/writer",
        "seq": "18,24",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/property/company",
        "seq": "42,49",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "62,66",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Where is the residence of the governor of Bangkok ?",
    "SerialNumber": "1086",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Bangkok\u003e \u003chttp://dbpedia.org/ontology/leaderName\u003e ?x . ?x \u003chttp://dbpedia.org/property/residence\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Bangkok",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Bangkok",
        "seq": "42,49"
      }
    ],
    "id": "6c81695f20d946cfbb2d34523cce45c7",
    "predicate mapping": [
      {
        "label": "governor",
        "uri": "http://dbpedia.org/ontology/leaderName",
        "mappedBy": "word2vec"
      },
      {
        "label": "residence",
        "uri": "http://dbpedia.org/property/residence",
        "seq": "13,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "who all play for of the american football players at  Quarterback position?",
    "SerialNumber": "1088",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/position\u003e \u003chttp://dbpedia.org/resource/Quarterback\u003e . ?x \u003chttp://dbpedia.org/ontology/team\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/AmericanFootballPlayer\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Quarterback",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Quarterback",
        "seq": "54,65"
      }
    ],
    "id": "997800a673344212a2c5e15235cd6f2a",
    "predicate mapping": [
      {
        "label": "position",
        "uri": "http://dbpedia.org/property/position",
        "seq": "66,74",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "play",
        "uri": "http://dbpedia.org/ontology/team",
        "mappedBy": "word2vec"
      },
      {
        "label": "american football player",
        "uri": "http://dbpedia.org/ontology/AmericanFootballPlayer",
        "seq": "24,48",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Where is Emmett Hughes from?",
    "SerialNumber": "1091",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Emmett_Hughes\u003e \u003chttp://dbpedia.org/ontology/nationality\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Emmett Hughes",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Emmett_Hughes",
        "seq": "9,22"
      }
    ],
    "id": "d492192a5490409c9eedf51d1e09b74b",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/nationality",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "307",
    "question": "What are the television shows which are in NTSC and 5.1 surround sound?",
    "SerialNumber": "1096",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/ontology/format\u003e \u003chttp://dbpedia.org/resource/NTSC\u003e . ?uri \u003chttp://dbpedia.org/ontology/format\u003e \u003chttp://dbpedia.org/resource/5.1_surround_sound\u003e . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "NTSC",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/NTSC",
        "seq": "43,47"
      },
      {
        "label": "5.1 surround sound",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/5.1_surround_sound",
        "seq": "52,70"
      }
    ],
    "id": "72c7e0fedd6143eb940bc3debcdec811",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/format",
        "mappedBy": "word2vec"
      },
      {
        "uri": "http://dbpedia.org/ontology/format",
        "mappedBy": "word2vec"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "13,28",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "In which sects was the aristocrat venerated, whose parent is Thelred the Unready?",
    "SerialNumber": "1099",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/parent\u003e \u003chttp://dbpedia.org/resource/Æthelred_the_Unready\u003e . ?x \u003chttp://dbpedia.org/property/veneratedIn\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Royalty\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "unready thelred",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Æthelred_the_Unready",
        "seq": "999,1000"
      }
    ],
    "id": "6f0ee8f2cf284dce972eed151ef62685",
    "predicate mapping": [
      {
        "label": "parent",
        "uri": "http://dbpedia.org/ontology/parent",
        "seq": "51,57",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "venerated,",
        "uri": "http://dbpedia.org/property/veneratedIn",
        "seq": "34,44",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "Unready",
        "uri": "http://dbpedia.org/ontology/Royalty",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "307",
    "question": "What is the appliance build jointly by Sony and Asus?",
    "SerialNumber": "1101",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/ontology/manufacturer\u003e \u003chttp://dbpedia.org/resource/Sony\u003e . ?uri \u003chttp://dbpedia.org/ontology/manufacturer\u003e \u003chttp://dbpedia.org/resource/Asus\u003e . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/InformationAppliance\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Sony",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Sony",
        "seq": "39,43"
      },
      {
        "label": "Asus",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Asus",
        "seq": "48,52"
      }
    ],
    "id": "468c3951514945a0be198af850f2e036",
    "predicate mapping": [
      {
        "label": "jointly",
        "uri": "http://dbpedia.org/ontology/manufacturer",
        "mappedBy": "word2vec"
      },
      {
        "label": "jointly",
        "uri": "http://dbpedia.org/ontology/manufacturer",
        "mappedBy": "word2vec"
      },
      {
        "label": "appliance",
        "uri": "http://dbpedia.org/ontology/InformationAppliance",
        "seq": "12,21",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What games are played at institutions affiliated with the international association of universities?",
    "SerialNumber": "1102",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/affiliations\u003e \u003chttp://dbpedia.org/resource/International_Association_of_Universities\u003e . ?x \u003chttp://dbpedia.org/ontology/sport\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/EducationalInstitution\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "international association of universities",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/International_Association_of_Universities",
        "seq": "58,99"
      }
    ],
    "id": "e16be5fbd56d460f90909d96e7655e59",
    "predicate mapping": [
      {
        "label": "affiliated",
        "uri": "http://dbpedia.org/property/affiliations",
        "mappedBy": "word2vec"
      },
      {
        "label": "affiliated",
        "uri": "http://dbpedia.org/ontology/sport",
        "mappedBy": "word2vec"
      },
      {
        "label": "institutions",
        "uri": "http://dbpedia.org/ontology/EducationalInstitution",
        "seq": "25,37",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "Whose units are responsible for close air support?",
    "SerialNumber": "1103",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/role\u003e \u003chttp://dbpedia.org/resource/Close_air_support\u003e . ?uri \u003chttp://dbpedia.org/ontology/militaryUnit\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "close air support",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Close_air_support",
        "seq": "32,49"
      }
    ],
    "id": "2ab3f24e0f7942e2beb152acb193fba3",
    "predicate mapping": [
      {
        "label": "responsible",
        "uri": "http://dbpedia.org/property/role",
        "mappedBy": "word2vec"
      },
      {
        "label": "units",
        "uri": "http://dbpedia.org/ontology/militaryUnit",
        "seq": "6,11",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which work of Craig van Tilbury is close to the area of The Chess Monthyl ?",
    "SerialNumber": "1104",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/The_Chess_Monthly\u003e \u003chttp://dbpedia.org/property/discipline\u003e ?uri. \u003chttp://dbpedia.org/resource/Craig_Van_Tilbury\u003e \u003chttp://dbpedia.org/ontology/occupation\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/The_Chess_Monthly",
        "seq": "999,1000"
      },
      {
        "label": "Craig van Tilbury",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Craig_Van_Tilbury",
        "seq": "14,31"
      }
    ],
    "id": "e0baa3e7583a49c484a441b60d77088a",
    "predicate mapping": [
      {
        "label": "area",
        "uri": "http://dbpedia.org/property/discipline",
        "seq": "48,52",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "work",
        "uri": "http://dbpedia.org/ontology/occupation",
        "seq": "6,10",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "101",
    "question": " Count the participants of the NBA.",
    "SerialNumber": "1105",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/ontology/league\u003e \u003chttp://dbpedia.org/resource/National_Basketball_Association\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "NBA",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/National_Basketball_Association",
        "seq": "31,34"
      }
    ],
    "id": "55b783d8ff214544b144eab6929fe919",
    "predicate mapping": [
      {
        "label": "participants",
        "uri": "http://dbpedia.org/ontology/league",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "401",
    "question": "How many politicians are in the US Senate?",
    "SerialNumber": "1106",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/property/order\u003e \u003chttp://dbpedia.org/resource/United_States_Senate\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/OfficeHolder\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "US Senate",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/United_States_Senate",
        "seq": "32,41"
      }
    ],
    "id": "4f6ae681c8cd42ca97172a0eb6a2601b",
    "predicate mapping": [
      {
        "label": "politicians",
        "uri": "http://dbpedia.org/property/order",
        "mappedBy": "word2vec"
      },
      {
        "label": "politicians",
        "uri": "http://dbpedia.org/ontology/OfficeHolder",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "402",
    "question": "How many players participated in the 2004-05 FC Barcelona season?",
    "SerialNumber": "1107",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { \u003chttp://dbpedia.org/resource/2004–05_FC_Barcelona_season\u003e \u003chttp://dbpedia.org/property/name\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/SoccerPlayer\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "barcelona season",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/2004–05_FC_Barcelona_season",
        "seq": "999,1000"
      }
    ],
    "id": "c4d5f1f0500b4321ace51aaa29c775f4",
    "predicate mapping": [
      {
        "label": "season",
        "uri": "http://dbpedia.org/property/name",
        "mappedBy": "word2vec"
      },
      {
        "label": "players",
        "uri": "http://dbpedia.org/ontology/SoccerPlayer",
        "seq": "9,16",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "106",
    "question": "Count everyone who studied at an institute which are in Suburbs?",
    "SerialNumber": "1108",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/campus\u003e \u003chttp://dbpedia.org/resource/Suburb\u003e . ?uri \u003chttp://dbpedia.org/property/education\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Suburb",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Suburb",
        "seq": "56,62"
      }
    ],
    "id": "835041264319434da9eae0ff2fa79b48",
    "predicate mapping": [
      {
        "label": "institute",
        "uri": "http://dbpedia.org/ontology/campus",
        "mappedBy": "word2vec"
      },
      {
        "label": "studied at",
        "uri": "http://dbpedia.org/property/education",
        "seq": "19,29",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which source of broad creek is the Audenried tunnel located ?",
    "SerialNumber": "1109",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Broad_Creek_(Susquehanna_River)\u003e \u003chttp://dbpedia.org/ontology/source\u003e ?uri. \u003chttp://dbpedia.org/resource/Audenried_Tunnel\u003e \u003chttp://dbpedia.org/ontology/location\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "broad creek",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Broad_Creek_(Susquehanna_River)",
        "seq": "16,27"
      },
      {
        "label": "Audenried tunnel",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Audenried_Tunnel",
        "seq": "35,51"
      }
    ],
    "id": "1538e37aff2242c1a828e3a85c5ed1c1",
    "predicate mapping": [
      {
        "label": "source",
        "uri": "http://dbpedia.org/ontology/source",
        "seq": "6,12",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "located",
        "uri": "http://dbpedia.org/ontology/location",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "406",
    "question": "Count me the number of people whose military unit is involved with Close air support ?",
    "SerialNumber": "1110",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/role\u003e \u003chttp://dbpedia.org/resource/Close_air_support\u003e . ?uri \u003chttp://dbpedia.org/ontology/militaryUnit\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MilitaryPerson\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Close air support",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Close_air_support",
        "seq": "67,84"
      }
    ],
    "id": "73855487a1de46828e5f91a3cf063c8d",
    "predicate mapping": [
      {
        "label": "involved",
        "uri": "http://dbpedia.org/property/role",
        "mappedBy": "word2vec"
      },
      {
        "label": "military unit",
        "uri": "http://dbpedia.org/ontology/militaryUnit",
        "seq": "36,49",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "military",
        "uri": "http://dbpedia.org/ontology/MilitaryPerson",
        "seq": "36,44",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "403",
    "question": "Who were fighting the war where the QF Hotchkiss was used?",
    "SerialNumber": "1111",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { \u003chttp://dbpedia.org/resource/QF_6-pounder_Hotchkiss\u003e \u003chttp://dbpedia.org/ontology/usedInWar\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/territory\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MilitaryConflict\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Hotchkiss",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/QF_6-pounder_Hotchkiss",
        "seq": "39,48"
      }
    ],
    "id": "39ff074f19dd4139aa8df33d7f1f58bb",
    "predicate mapping": [
      {
        "label": "used war",
        "uri": "http://dbpedia.org/ontology/usedInWar",
        "seq": "-1,7",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "QF",
        "uri": "http://dbpedia.org/ontology/territory",
        "mappedBy": "word2vec"
      },
      {
        "label": "QF",
        "uri": "http://dbpedia.org/ontology/MilitaryConflict",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What awards have been given to the artists coming out of the university of Melbourne, faculty of VCA and MCM?",
    "SerialNumber": "1112",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/training\u003e \u003chttp://dbpedia.org/resource/University_of_Melbourne_Faculty_of_VCA_and_MCM\u003e . ?x \u003chttp://dbpedia.org/ontology/award\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Artist\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "university",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/University_of_Melbourne_Faculty_of_VCA_and_MCM",
        "seq": "999,1000"
      }
    ],
    "id": "61b80c35c46340f49bd57e0bc1086975",
    "predicate mapping": [
      {
        "label": "MCM",
        "uri": "http://dbpedia.org/ontology/training",
        "mappedBy": "word2vec"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/award",
        "seq": "5,11",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "artist",
        "uri": "http://dbpedia.org/ontology/Artist",
        "seq": "35,41",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "what are some common surnames of female people?",
    "SerialNumber": "1118",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/gender\u003e \u003chttp://dbpedia.org/resource/Female\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "female",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Female",
        "seq": "33,39"
      }
    ],
    "id": "1eb5d6d148254250bbcdae0ff473cf35",
    "predicate mapping": [
      {
        "label": "people",
        "uri": "http://dbpedia.org/property/gender",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "405",
    "question": "Give the total number of places to which airlines go, who also go to Glasgow?",
    "SerialNumber": "1124",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/targetAirport\u003e \u003chttp://dbpedia.org/resource/Glasgow_Airport\u003e . ?x \u003chttp://dbpedia.org/property/destinations\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Place\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Glasgow",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Glasgow_Airport",
        "seq": "69,76"
      }
    ],
    "id": "82e734b7dd9541a89f7cef6cbcb9b9df",
    "predicate mapping": [
      {
        "label": "airlines",
        "uri": "http://dbpedia.org/ontology/targetAirport",
        "mappedBy": "word2vec"
      },
      {
        "label": "airlines",
        "uri": "http://dbpedia.org/property/destinations",
        "mappedBy": "word2vec"
      },
      {
        "label": "place",
        "uri": "http://dbpedia.org/ontology/Place",
        "seq": "25,30",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Where does the rail route, which ends at the Moskovsky station, begins?",
    "SerialNumber": "1125",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/routeEnd\u003e \u003chttp://dbpedia.org/resource/Moskovsky_railway_station_(Saint_Petersburg)\u003e . ?x \u003chttp://dbpedia.org/ontology/routeStart\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "moskovsky",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Moskovsky_railway_station_(Saint_Petersburg)",
        "seq": "999,1000"
      }
    ],
    "id": "0dc38267699e4810bc3da41fe383f592",
    "predicate mapping": [
      {
        "label": "route,",
        "uri": "http://dbpedia.org/ontology/routeEnd",
        "seq": "20,26",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "route,",
        "uri": "http://dbpedia.org/ontology/routeStart",
        "seq": "20,26",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Who is the common prime minster of William Deaner and mark Latham ?",
    "SerialNumber": "1128",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/William_Deane\u003e \u003chttp://dbpedia.org/ontology/primeMinister\u003e ?uri. \u003chttp://dbpedia.org/resource/Mark_Latham\u003e \u003chttp://dbpedia.org/property/primeminister\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "William Deane",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/William_Deane",
        "seq": "35,48"
      },
      {
        "label": "mark Latham",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Mark_Latham",
        "seq": "54,65"
      }
    ],
    "id": "606abcc3ca2744b2906bb0e7cdd47256",
    "predicate mapping": [
      {
        "label": "minster",
        "uri": "http://dbpedia.org/ontology/primeMinister",
        "mappedBy": "word2vec"
      },
      {
        "label": "minster",
        "uri": "http://dbpedia.org/property/primeminister",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "111",
    "question": "Count the number of sports played by the universities whihc also plays Volleyball ?",
    "SerialNumber": "1134",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/athletics\u003e \u003chttp://dbpedia.org/resource/Volleyball\u003e . ?x \u003chttp://dbpedia.org/property/athletics\u003e ?uri }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Volleyball",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Volleyball",
        "seq": "71,81"
      }
    ],
    "id": "b335029079ec49f5972d4b5846330c15",
    "predicate mapping": [
      {
        "label": "plays",
        "uri": "http://dbpedia.org/ontology/athletics",
        "mappedBy": "word2vec"
      },
      {
        "label": "plays",
        "uri": "http://dbpedia.org/property/athletics",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "In which religions are both Pope Gregory 1 and Edwin of northumbria reverred?",
    "SerialNumber": "1135",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Pope_Gregory_I\u003e \u003chttp://dbpedia.org/property/veneratedIn\u003e ?uri. \u003chttp://dbpedia.org/resource/Edwin_of_Northumbria\u003e \u003chttp://dbpedia.org/property/veneratedIn\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Pope Gregory 1",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Pope_Gregory_I",
        "seq": "28,42"
      },
      {
        "label": "Edwin of northumbria",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Edwin_of_Northumbria",
        "seq": "47,67"
      }
    ],
    "id": "fac30a60a31948d38da3463419202599",
    "predicate mapping": [
      {
        "label": "reverred",
        "uri": "http://dbpedia.org/property/veneratedIn",
        "mappedBy": "word2vec"
      },
      {
        "label": "reverred",
        "uri": "http://dbpedia.org/property/veneratedIn",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which wine region of Bogdanua is the Croatian Inline hockey team part of ?",
    "SerialNumber": "1136",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Bogdanuša\u003e \u003chttp://dbpedia.org/ontology/wineRegion\u003e ?uri. \u003chttp://dbpedia.org/resource/Croatian_Inline_Hockey_League\u003e \u003chttp://dbpedia.org/ontology/country\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Bogdanuša",
        "seq": "999,1000"
      },
      {
        "label": "croatian inline hockey",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Croatian_Inline_Hockey_League",
        "seq": "999,1000"
      }
    ],
    "id": "f3500fd23d3a4a29bff285293f25ae61",
    "predicate mapping": [
      {
        "label": "wine region",
        "uri": "http://dbpedia.org/ontology/wineRegion",
        "seq": "6,17",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/country",
        "seq": "7,9",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "For which games are Sam Loyd and Eric Schiller both famous?",
    "SerialNumber": "1137",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Sam_Loyd\u003e \u003chttp://dbpedia.org/ontology/knownFor\u003e ?uri. \u003chttp://dbpedia.org/resource/Eric_Schiller\u003e \u003chttp://dbpedia.org/ontology/knownFor\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Sam Loyd",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Sam_Loyd",
        "seq": "20,28"
      },
      {
        "label": "Eric Schiller",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Eric_Schiller",
        "seq": "33,46"
      }
    ],
    "id": "918fa31e392c498eb55811d9fa7b697c",
    "predicate mapping": [
      {
        "label": "famous",
        "uri": "http://dbpedia.org/ontology/knownFor",
        "mappedBy": "word2vec"
      },
      {
        "label": "famous",
        "uri": "http://dbpedia.org/ontology/knownFor",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "Count the number of religions followed by Janta Dal members.",
    "SerialNumber": "1138",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/party\u003e \u003chttp://dbpedia.org/resource/Janata_Dal\u003e . ?x \u003chttp://dbpedia.org/ontology/religion\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Janta Dal",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Janata_Dal",
        "seq": "42,51"
      }
    ],
    "id": "8c33f93613d64297b003b2f378be8c76",
    "predicate mapping": [
      {
        "label": "number",
        "uri": "http://dbpedia.org/property/party",
        "mappedBy": "word2vec"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion",
        "seq": "20,28",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Which president of United States had vice president as John Adams?",
    "SerialNumber": "1140",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/vicePresident\u003e \u003chttp://dbpedia.org/resource/John_Adams\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/OfficeHolder\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "John Adams",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/John_Adams",
        "seq": "55,65"
      }
    ],
    "id": "d536516bc342455c89d920f17b86dc1e",
    "predicate mapping": [
      {
        "label": "vice president",
        "uri": "http://dbpedia.org/ontology/vicePresident",
        "seq": "37,51",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "States",
        "uri": "http://dbpedia.org/ontology/OfficeHolder",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Where are the tombs of kings and queens who have died in England?",
    "SerialNumber": "1141",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/placeOfDeath\u003e \u003chttp://dbpedia.org/resource/England\u003e . ?x \u003chttp://dbpedia.org/property/placeOfBurial\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Royalty\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "England",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/England",
        "seq": "57,64"
      }
    ],
    "id": "d84486681133495fa12247728693ae90",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/placeOfDeath",
        "mappedBy": "word2vec"
      },
      {
        "label": "tomb",
        "uri": "http://dbpedia.org/property/placeOfBurial",
        "seq": "14,18",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "died",
        "uri": "http://dbpedia.org/ontology/Royalty",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Where was the successor of Hank Brown born?",
    "SerialNumber": "1142",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Hank_Brown\u003e \u003chttp://dbpedia.org/property/successor\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/birthPlace\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Hank Brown",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Hank_Brown",
        "seq": "27,37"
      }
    ],
    "id": "6e1b08820a934affb050c025035b8a9a",
    "predicate mapping": [
      {
        "label": "successor",
        "uri": "http://dbpedia.org/property/successor",
        "seq": "14,23",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "born",
        "uri": "http://dbpedia.org/ontology/birthPlace",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Greek writers have won which award?",
    "SerialNumber": "1143",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/ethnicity\u003e \u003chttp://dbpedia.org/resource/Greeks\u003e . ?x \u003chttp://dbpedia.org/ontology/award\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Writer\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Greek ",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Greeks",
        "seq": "0,6"
      }
    ],
    "id": "6e0f647889314bb68424848e0c6e2d13",
    "predicate mapping": [
      {
        "label": "won",
        "uri": "http://dbpedia.org/property/ethnicity",
        "mappedBy": "word2vec"
      },
      {
        "label": "award",
        "uri": "http://dbpedia.org/ontology/award",
        "seq": "29,34",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "writers",
        "uri": "http://dbpedia.org/ontology/Writer",
        "seq": "6,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "106",
    "question": "Count everyone who lives in a place where Indian English is an official language ?",
    "SerialNumber": "1148",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/officialLanguage\u003e \u003chttp://dbpedia.org/resource/Indian_English\u003e . ?uri \u003chttp://dbpedia.org/ontology/residence\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Indian English",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Indian_English",
        "seq": "42,56"
      }
    ],
    "id": "3c8a202e192c4382af9462f6ba5b67bb",
    "predicate mapping": [
      {
        "label": "official language",
        "uri": "http://dbpedia.org/ontology/officialLanguage",
        "seq": "63,80",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "place",
        "uri": "http://dbpedia.org/ontology/residence",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Where does Dennis DeConcini and Scott Berkun both live?",
    "SerialNumber": "1150",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Scott_Berkun\u003e \u003chttp://dbpedia.org/property/residence\u003e ?uri. \u003chttp://dbpedia.org/resource/Dennis_DeConcini\u003e \u003chttp://dbpedia.org/property/residence\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Scott Berkun",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Scott_Berkun",
        "seq": "32,44"
      },
      {
        "label": "Dennis DeConcini",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Dennis_DeConcini",
        "seq": "11,27"
      }
    ],
    "id": "ab981f539cf94ceea0c6ca6ddf8f673d",
    "predicate mapping": [
      {
        "label": "live",
        "uri": "http://dbpedia.org/property/residence",
        "mappedBy": "word2vec"
      },
      {
        "label": "live",
        "uri": "http://dbpedia.org/property/residence",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Where does John A Danaher III work?",
    "SerialNumber": "1151",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/John_A._Danaher_III\u003e \u003chttp://dbpedia.org/property/office\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "John A Danaher III",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/John_A._Danaher_III",
        "seq": "11,29"
      }
    ],
    "id": "0c2db5b405ac48dcb16b0ce50df877d1",
    "predicate mapping": [
      {
        "label": "work",
        "uri": "http://dbpedia.org/property/office",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Where was MacKenzie Miller born?",
    "SerialNumber": "1154",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/MacKenzie_Miller\u003e \u003chttp://dbpedia.org/property/birthPlace\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "MacKenzie Miller",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/MacKenzie_Miller",
        "seq": "10,26"
      }
    ],
    "id": "3cf7f7b831724521976ea028c52cda60",
    "predicate mapping": [
      {
        "label": "born",
        "uri": "http://dbpedia.org/property/birthPlace",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "315",
    "question": "What disease led to the demise of Letitia MacTavish Hargrave and Martino Martini ?",
    "SerialNumber": "1156",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Letitia_MacTavish_Hargrave\u003e \u003chttp://dbpedia.org/ontology/deathCause\u003e ?uri. \u003chttp://dbpedia.org/resource/Martino_Martini\u003e \u003chttp://dbpedia.org/ontology/deathCause\u003e ?uri . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Disease\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Letitia MacTavish Hargrave",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Letitia_MacTavish_Hargrave",
        "seq": "34,60"
      },
      {
        "label": "Martino Martini",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Martino_Martini",
        "seq": "65,80"
      }
    ],
    "id": "9077ab52a3a64bf292bf4d297b63970e",
    "predicate mapping": [
      {
        "label": "demise",
        "uri": "http://dbpedia.org/ontology/deathCause",
        "mappedBy": "word2vec"
      },
      {
        "label": "demise",
        "uri": "http://dbpedia.org/ontology/deathCause",
        "mappedBy": "word2vec"
      },
      {
        "label": "disease",
        "uri": "http://dbpedia.org/ontology/Disease",
        "seq": "5,12",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "311",
    "question": "List the graves of the royalities which have been buried at Beeleigh Abbey ?",
    "SerialNumber": "1160",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/placeOfBurial\u003e \u003chttp://dbpedia.org/resource/Beeleigh_Abbey\u003e . ?x \u003chttp://dbpedia.org/property/placeOfBurial\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Royalty\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Beeleigh Abbey",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Beeleigh_Abbey",
        "seq": "60,74"
      }
    ],
    "id": "1defef355b2c46aabc6b54f50c3c95fc",
    "predicate mapping": [
      {
        "label": "buried",
        "uri": "http://dbpedia.org/property/placeOfBurial",
        "seq": "50,56",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "buried",
        "uri": "http://dbpedia.org/property/placeOfBurial",
        "seq": "50,56",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "royalities",
        "uri": "http://dbpedia.org/ontology/Royalty",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "In which country does the Auckland rugby union team play  ?",
    "SerialNumber": "1161",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Auckland_rugby_union_team\u003e \u003chttp://dbpedia.org/ontology/league\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/country\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Auckland rugby union team",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Auckland_rugby_union_team",
        "seq": "26,51"
      }
    ],
    "id": "5202a1a43509411c97552eca15f0aa05",
    "predicate mapping": [
      {
        "label": "play",
        "uri": "http://dbpedia.org/ontology/league",
        "mappedBy": "word2vec"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/country",
        "seq": "9,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the sports played by Jamiatu Muslim Mindanao?",
    "SerialNumber": "1163",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Jamiatu_Muslim_Mindanao\u003e \u003chttp://dbpedia.org/ontology/athletics\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jamiatu Muslim Mindanao",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Jamiatu_Muslim_Mindanao",
        "seq": "26,49"
      }
    ],
    "id": "4f1f3f16733d448ab1125085d243f9f5",
    "predicate mapping": [
      {
        "label": "played",
        "uri": "http://dbpedia.org/ontology/athletics",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which person naratted The Incredible Hulk and also the writer of Tales of Suspense ?",
    "SerialNumber": "1165",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/The_Incredible_Hulk_(1982_TV_series)\u003e \u003chttp://dbpedia.org/property/narrated\u003e ?uri. \u003chttp://dbpedia.org/resource/Tales_of_Suspense\u003e \u003chttp://dbpedia.org/property/writers\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "The Incredible Hulk",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Incredible_Hulk_(1982_TV_series)",
        "seq": "22,41"
      },
      {
        "label": "Suspense",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Tales_of_Suspense",
        "seq": "74,82"
      }
    ],
    "id": "c453823ead1c41b19be3ef0d12dffbcf",
    "predicate mapping": [
      {
        "label": "Tales",
        "uri": "http://dbpedia.org/property/narrated",
        "mappedBy": "word2vec"
      },
      {
        "label": "writer",
        "uri": "http://dbpedia.org/property/writers",
        "seq": "55,61",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "What is the total number of participant in conflict of SFOR?",
    "SerialNumber": "1167",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/battles\u003e \u003chttp://dbpedia.org/resource/SFOR\u003e . ?x \u003chttp://dbpedia.org/ontology/battle\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "SFOR",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/SFOR",
        "seq": "55,59"
      }
    ],
    "id": "d8d26021d6d14746b178240e9a73b5c5",
    "predicate mapping": [
      {
        "label": "number",
        "uri": "http://dbpedia.org/property/battles",
        "mappedBy": "word2vec"
      },
      {
        "label": "participant in conflict",
        "uri": "http://dbpedia.org/ontology/battle",
        "seq": "28,51",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "From how many different places have people gone to the Harward Medical School?",
    "SerialNumber": "1168",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/institution\u003e \u003chttp://dbpedia.org/resource/Harvard_Medical_School\u003e . ?x \u003chttp://dbpedia.org/ontology/birthPlace\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Harward Medical School",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Harvard_Medical_School",
        "seq": "55,77"
      }
    ],
    "id": "2a7a43ae00334b49bc601589c3cad2a4",
    "predicate mapping": [
      {
        "label": "people",
        "uri": "http://dbpedia.org/ontology/institution",
        "mappedBy": "word2vec"
      },
      {
        "label": "places",
        "uri": "http://dbpedia.org/ontology/birthPlace",
        "seq": "24,30",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Which party has come in power at both Balangir and Amaravila in india?",
    "SerialNumber": "1172",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Balangir_district\u003e \u003chttp://dbpedia.org/ontology/leaderName\u003e ?uri. \u003chttp://dbpedia.org/resource/Amaravila\u003e \u003chttp://dbpedia.org/ontology/leaderName\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "balangir",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Balangir_district",
        "seq": "999,1000"
      },
      {
        "label": "Amaravila",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Amaravila",
        "seq": "51,60"
      }
    ],
    "id": "535f797b72ad4456b8a00fc9099707aa",
    "predicate mapping": [
      {
        "label": "india",
        "uri": "http://dbpedia.org/ontology/leaderName",
        "mappedBy": "word2vec"
      },
      {
        "label": "india",
        "uri": "http://dbpedia.org/ontology/leaderName",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "What are some common games played in PATTS college of aeronautics and Jamiatu muslim mindanao?",
    "SerialNumber": "1173",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/PATTS_College_of_Aeronautics\u003e \u003chttp://dbpedia.org/property/athletics\u003e ?uri. \u003chttp://dbpedia.org/resource/Jamiatu_Muslim_Mindanao\u003e \u003chttp://dbpedia.org/property/athletics\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "PATTS college of aeronautics",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/PATTS_College_of_Aeronautics",
        "seq": "37,65"
      },
      {
        "label": "Jamiatu muslim mindanao",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Jamiatu_Muslim_Mindanao",
        "seq": "70,93"
      }
    ],
    "id": "9145f59edef44c5a9a17a3fe513e7567",
    "predicate mapping": [
      {
        "label": "played",
        "uri": "http://dbpedia.org/property/athletics",
        "mappedBy": "word2vec"
      },
      {
        "label": "played",
        "uri": "http://dbpedia.org/property/athletics",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "8",
    "question": "Where is Semnani and Assyrian Neo-Aramaic spoken ?",
    "SerialNumber": "1177",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/languages\u003e \u003chttp://dbpedia.org/resource/Semnani_languages\u003e . ?uri \u003chttp://dbpedia.org/ontology/language\u003e \u003chttp://dbpedia.org/resource/Assyrian_Neo-Aramaic\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "semnani",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Semnani_languages",
        "seq": "999,1000"
      },
      {
        "label": "Assyrian Neo-Aramaic",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Assyrian_Neo-Aramaic",
        "seq": "21,41"
      }
    ],
    "id": "66a0125dafb4421d8a52c9f2008e8a18",
    "predicate mapping": [
      {
        "label": "spoken",
        "uri": "http://dbpedia.org/property/languages",
        "mappedBy": "word2vec"
      },
      {
        "label": "spoken",
        "uri": "http://dbpedia.org/ontology/language",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Does Massimo Liverani play for Abarth?",
    "SerialNumber": "1178",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Massimo_Liverani\u003e \u003chttp://dbpedia.org/property/currentTeam\u003e \u003chttp://dbpedia.org/resource/Abarth\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Massimo Liverani",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Massimo_Liverani",
        "seq": "5,21"
      },
      {
        "label": "Abarth",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Abarth",
        "seq": "31,37"
      }
    ],
    "id": "cf9b667b1efe4e6cb0e035746c6bba30",
    "predicate mapping": [
      {
        "label": "play",
        "uri": "http://dbpedia.org/property/currentTeam",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the appliance produced by Foxconn and its OS is provided by PlayStation 3 system software ?",
    "SerialNumber": "1180",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/manufacturer\u003e \u003chttp://dbpedia.org/resource/Foxconn\u003e . ?uri \u003chttp://dbpedia.org/property/os\u003e \u003chttp://dbpedia.org/resource/PlayStation_3_system_software\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/InformationAppliance\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Foxconn",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Foxconn",
        "seq": "31,38"
      },
      {
        "label": "PlayStation 3 system software",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/PlayStation_3_system_software",
        "seq": "65,94"
      }
    ],
    "id": "9e456d1b7d7a40c499f3f40a98c78f52",
    "predicate mapping": [
      {
        "label": "provided",
        "uri": "http://dbpedia.org/ontology/manufacturer",
        "mappedBy": "word2vec"
      },
      {
        "label": "OS",
        "uri": "http://dbpedia.org/property/os",
        "seq": "47,49",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "appliance",
        "uri": "http://dbpedia.org/ontology/InformationAppliance",
        "seq": "9,18",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the source Island of Bayou ?",
    "SerialNumber": "1181",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Island_Bayou_(Oklahoma)\u003e \u003chttp://dbpedia.org/ontology/source\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "island bayou",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Island_Bayou_(Oklahoma)",
        "seq": "999,1000"
      }
    ],
    "id": "3e9133d020ca44b7a475fec7231d4ad5",
    "predicate mapping": [
      {
        "label": "source",
        "uri": "http://dbpedia.org/ontology/source",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Did Alexander Magleby study at the Dartmouth College?",
    "SerialNumber": "1182",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Alexander_Magleby\u003e \u003chttp://dbpedia.org/ontology/university\u003e \u003chttp://dbpedia.org/resource/Dartmouth_College\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Alexander Magleby",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Alexander_Magleby",
        "seq": "4,21"
      },
      {
        "label": "Dartmouth College",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Dartmouth_College",
        "seq": "35,52"
      }
    ],
    "id": "3ae2345e8e8844b1bcdc731a3b106eb9",
    "predicate mapping": [
      {
        "label": "study",
        "uri": "http://dbpedia.org/ontology/university",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Where was Thomy Bourdelle born?",
    "SerialNumber": "1183",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Thomy_Bourdelle\u003e \u003chttp://dbpedia.org/property/placeOfBirth\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Thomy Bourdelle",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Thomy_Bourdelle",
        "seq": "10,25"
      }
    ],
    "id": "a7f07e0669f64b349876998f51a1f5c9",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/placeOfBirth",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who owns the schools which have a penguin as its mascot?",
    "SerialNumber": "1185",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/mascot\u003e \u003chttp://dbpedia.org/resource/Penguin\u003e . ?x \u003chttp://dbpedia.org/ontology/authority\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/School\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "penguin",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Penguin",
        "seq": "34,41"
      }
    ],
    "id": "5a9664b9e22545ef8fbc5d56f48ce5c1",
    "predicate mapping": [
      {
        "label": "mascot",
        "uri": "http://dbpedia.org/property/mascot",
        "seq": "49,55",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "owns",
        "uri": "http://dbpedia.org/ontology/authority",
        "mappedBy": "word2vec"
      },
      {
        "label": "school",
        "uri": "http://dbpedia.org/ontology/School",
        "seq": "13,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "What is the total number of relgions followed by people born in Bangkok?",
    "SerialNumber": "1187",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/birthPlace\u003e \u003chttp://dbpedia.org/resource/Bangkok\u003e . ?x \u003chttp://dbpedia.org/ontology/religion\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Bangkok",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Bangkok",
        "seq": "64,71"
      }
    ],
    "id": "042fb5267c974d90beae49ab51013b82",
    "predicate mapping": [
      {
        "label": "born in",
        "uri": "http://dbpedia.org/property/birthPlace",
        "seq": "56,63",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "people",
        "uri": "http://dbpedia.org/ontology/religion",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Twin cities 400 is operated by what city, which is the birthplace of Leona Baumgarter?",
    "SerialNumber": "1188",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Twin_Cities_400\u003e \u003chttp://dbpedia.org/ontology/operatedBy\u003e ?uri. \u003chttp://dbpedia.org/resource/Leona_Baumgartner\u003e \u003chttp://dbpedia.org/ontology/birthPlace\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Twin cities 400",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Twin_Cities_400",
        "seq": "0,15"
      },
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Leona_Baumgartner",
        "seq": "999,1000"
      }
    ],
    "id": "700b88a3eb40456a8ec23a305cc5e2e5",
    "predicate mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/ontology/operatedBy",
        "seq": "0,0",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "birthplace",
        "uri": "http://dbpedia.org/ontology/birthPlace",
        "seq": "55,65",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "What are the gadgets whose manufacturing company is founded by Terry Gou?",
    "SerialNumber": "1191",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/founder\u003e \u003chttp://dbpedia.org/resource/Terry_Gou\u003e . ?uri \u003chttp://dbpedia.org/ontology/manufacturer\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Device\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Terry Gou",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Terry_Gou",
        "seq": "63,72"
      }
    ],
    "id": "c09fbce16b2a4485808f9dbd9870a971",
    "predicate mapping": [
      {
        "label": "is founded by",
        "uri": "http://dbpedia.org/property/founder",
        "seq": "49,62",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "manufacturing",
        "uri": "http://dbpedia.org/ontology/manufacturer",
        "seq": "27,40",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Device",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "In which of the parties that have governed over Rishikesh, does Govinda belong too?",
    "SerialNumber": "1192",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Govinda_(actor)\u003e \u003chttp://dbpedia.org/ontology/party\u003e ?uri. \u003chttp://dbpedia.org/resource/Rishikesh\u003e \u003chttp://dbpedia.org/ontology/leaderName\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Govinda",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Govinda_(actor)",
        "seq": "64,71"
      },
      {
        "label": "Rishikesh",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Rishikesh",
        "seq": "48,57"
      }
    ],
    "id": "f129083b942f4b85aa56e2f5b04507ce",
    "predicate mapping": [
      {
        "label": "parties",
        "uri": "http://dbpedia.org/ontology/party",
        "seq": "16,23",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "belong",
        "uri": "http://dbpedia.org/ontology/leaderName",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "List softwares written in C++ and runs on Mac OS ?",
    "SerialNumber": "1193",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/operatingSystem\u003e \u003chttp://dbpedia.org/resource/Mac_OS\u003e . ?uri \u003chttp://dbpedia.org/ontology/programmingLanguage\u003e \u003chttp://dbpedia.org/resource/C++\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Software\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Mac OS",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Mac_OS",
        "seq": "42,48"
      },
      {
        "label": "C++",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/C++",
        "seq": "26,29"
      }
    ],
    "id": "47d43bd9adb04270b992a2f42fdd440d",
    "predicate mapping": [
      {
        "label": "runs",
        "uri": "http://dbpedia.org/ontology/operatingSystem",
        "mappedBy": "word2vec"
      },
      {
        "label": "runs",
        "uri": "http://dbpedia.org/ontology/programmingLanguage",
        "mappedBy": "word2vec"
      },
      {
        "label": "software",
        "uri": "http://dbpedia.org/ontology/Software",
        "seq": "5,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who owns Ivanpah Solar Power Facility?",
    "SerialNumber": "1198",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Ivanpah_Solar_Power_Facility\u003e \u003chttp://dbpedia.org/ontology/owner\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ivanpah Solar",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Ivanpah_Solar_Power_Facility",
        "seq": "9,22"
      }
    ],
    "id": "1455c7629a9f4b2cab3a809b4feac666",
    "predicate mapping": [
      {
        "label": "Facility",
        "uri": "http://dbpedia.org/ontology/owner",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "Where are ethnic group located which speak Nebraskan?",
    "SerialNumber": "1199",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Nebraska\u003e \u003chttp://dbpedia.org/ontology/language\u003e ?x . ?x \u003chttp://dbpedia.org/property/region\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/EthnicGroup\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Nebraska",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Nebraska",
        "seq": "43,51"
      }
    ],
    "id": "163faec9938d47df8df231307032c826",
    "predicate mapping": [
      {
        "label": "speak",
        "uri": "http://dbpedia.org/ontology/language",
        "mappedBy": "word2vec"
      },
      {
        "label": "speak",
        "uri": "http://dbpedia.org/property/region",
        "mappedBy": "word2vec"
      },
      {
        "label": "ethnic group",
        "uri": "http://dbpedia.org/ontology/EthnicGroup",
        "seq": "10,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the sharehoders of The National Herald ?",
    "SerialNumber": "1200",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/The_National_Herald_(India)\u003e \u003chttp://dbpedia.org/ontology/owner\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "The National Herald",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_National_Herald_(India)",
        "seq": "24,43"
      }
    ],
    "id": "b9bf97d01e9745d681eda36b557db3a8",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/owner",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "List some things that Swedish people have become famous for?",
    "SerialNumber": "1201",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/stateOfOrigin\u003e \u003chttp://dbpedia.org/resource/Sweden\u003e . ?x \u003chttp://dbpedia.org/ontology/knownFor\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Swedish",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Sweden",
        "seq": "22,29"
      }
    ],
    "id": "b4ab98c79b904735bf86e5221256116e",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/stateOfOrigin",
        "mappedBy": "word2vec"
      },
      {
        "label": "famous",
        "uri": "http://dbpedia.org/ontology/knownFor",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "106",
    "question": "How many things are made by companies who produce mass media articles?",
    "SerialNumber": "1203",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/products\u003e \u003chttp://dbpedia.org/resource/Mass_media\u003e . ?uri \u003chttp://dbpedia.org/ontology/manufacturer\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "mass media",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Mass_media",
        "seq": "50,60"
      }
    ],
    "id": "8265fe61d94940a4b5d099c217d00245",
    "predicate mapping": [
      {
        "label": "articles",
        "uri": "http://dbpedia.org/property/products",
        "mappedBy": "word2vec"
      },
      {
        "label": "made by",
        "uri": "http://dbpedia.org/ontology/manufacturer",
        "seq": "20,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Name the rivers who originate from Essex?",
    "SerialNumber": "1204",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/mouthPlace\u003e \u003chttp://dbpedia.org/resource/Essex\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/River\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Essex",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Essex",
        "seq": "35,40"
      }
    ],
    "id": "1d9fe6f6eb72444b935342fb4d81dad1",
    "predicate mapping": [
      {
        "label": "originate",
        "uri": "http://dbpedia.org/ontology/mouthPlace",
        "mappedBy": "word2vec"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Is lion an animal?",
    "SerialNumber": "1208",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Lion\u003e \u003chttp://dbpedia.org/ontology/kingdom\u003e \u003chttp://dbpedia.org/resource/Animal\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "lion",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Lion",
        "seq": "3,7"
      },
      {
        "label": "animal",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Animal",
        "seq": "11,17"
      }
    ],
    "id": "6f768f7b19424f46bd39e6238cd0662c",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/kingdom",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Which players have represented Los Angeles Angels of Anaheim?",
    "SerialNumber": "1209",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/team\u003e \u003chttp://dbpedia.org/resource/Los_Angeles_Angels_of_Anaheim\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/BaseballPlayer\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Los Angeles Angels of Anaheim",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Los_Angeles_Angels_of_Anaheim",
        "seq": "31,60"
      }
    ],
    "id": "6e7b5dec0d264850bf90a1ff6256427a",
    "predicate mapping": [
      {
        "label": "represented",
        "uri": "http://dbpedia.org/ontology/team",
        "mappedBy": "word2vec"
      },
      {
        "label": "players",
        "uri": "http://dbpedia.org/ontology/BaseballPlayer",
        "seq": "6,13",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "List the shows whose network is run by BBC.",
    "SerialNumber": "1211",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/owningCompany\u003e \u003chttp://dbpedia.org/resource/BBC\u003e . ?uri \u003chttp://dbpedia.org/ontology/network\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "BBC",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/BBC",
        "seq": "39,42"
      }
    ],
    "id": "e0472e2206c9496a9f05207287956509",
    "predicate mapping": [
      {
        "label": "run",
        "uri": "http://dbpedia.org/ontology/owningCompany",
        "mappedBy": "word2vec"
      },
      {
        "label": "network",
        "uri": "http://dbpedia.org/ontology/network",
        "seq": "21,28",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "9,14",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What are some games availible on nintendo\u0027s virtual console?",
    "SerialNumber": "1213",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/computingPlatform\u003e \u003chttp://dbpedia.org/resource/Virtual_Console\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/VideoGame\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "virtual console",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Virtual_Console",
        "seq": "44,59"
      }
    ],
    "id": "0cae9ed212d44d639d21c9747fe2c523",
    "predicate mapping": [
      {
        "label": "availible",
        "uri": "http://dbpedia.org/ontology/computingPlatform",
        "mappedBy": "word2vec"
      },
      {
        "label": "games",
        "uri": "http://dbpedia.org/ontology/VideoGame",
        "seq": "14,19",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "For which party\u0027s PM did Chidambaram Subramaniam serve?",
    "SerialNumber": "1214",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Chidambaram_Subramaniam\u003e \u003chttp://dbpedia.org/property/primeminister\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/party\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Chidambaram Subramaniam",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Chidambaram_Subramaniam",
        "seq": "25,48"
      }
    ],
    "id": "2f91368c9d5c424791d014f111214078",
    "predicate mapping": [
      {
        "label": "serve",
        "uri": "http://dbpedia.org/property/primeminister",
        "mappedBy": "word2vec"
      },
      {
        "label": "party",
        "uri": "http://dbpedia.org/ontology/party",
        "seq": "10,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "List the movies whose cast member were born in Scotland.",
    "SerialNumber": "1219",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/birthPlace\u003e \u003chttp://dbpedia.org/resource/Scotland\u003e . ?uri \u003chttp://dbpedia.org/ontology/starring\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Scotland",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Scotland",
        "seq": "47,55"
      }
    ],
    "id": "faa44f1aaa984ca3b8508b206a3d0434",
    "predicate mapping": [
      {
        "label": "born in",
        "uri": "http://dbpedia.org/ontology/birthPlace",
        "seq": "39,46",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "member",
        "uri": "http://dbpedia.org/ontology/starring",
        "mappedBy": "word2vec"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which recognized title of Frank Thorne is also the product of Playboy Enterprise ?",
    "SerialNumber": "1221",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Playboy_Enterprises\u003e \u003chttp://dbpedia.org/property/products\u003e ?uri. \u003chttp://dbpedia.org/resource/Frank_Thorne\u003e \u003chttp://dbpedia.org/ontology/award\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Playboy Enterprise ",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Playboy_Enterprises",
        "seq": "62,81"
      },
      {
        "label": "Frank Thorne",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Frank_Thorne",
        "seq": "26,38"
      }
    ],
    "id": "b3e73fe9523d4661876a510c322a6d66",
    "predicate mapping": [
      {
        "label": "product",
        "uri": "http://dbpedia.org/property/products",
        "seq": "51,58",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "title",
        "uri": "http://dbpedia.org/ontology/award",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "What are the shows whose creator has worked as a screenwriter?",
    "SerialNumber": "1228",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/occupation\u003e \u003chttp://dbpedia.org/resource/Screenwriting\u003e . ?uri \u003chttp://dbpedia.org/ontology/creator\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Screenwriting",
        "seq": "999,1000"
      }
    ],
    "id": "3d48aaabb0914e66b31f1f131e6694fa",
    "predicate mapping": [
      {
        "label": "work",
        "uri": "http://dbpedia.org/ontology/occupation",
        "seq": "37,41",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "creator",
        "uri": "http://dbpedia.org/ontology/creator",
        "seq": "25,32",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "13,18",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "Who is the person whose opponent\u0027s father is Newman Haynes Clanton?",
    "SerialNumber": "1229",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/parent\u003e \u003chttp://dbpedia.org/resource/Newman_Haynes_Clanton\u003e . ?uri \u003chttp://dbpedia.org/ontology/opponent\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Newman Haynes Clanton",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Newman_Haynes_Clanton",
        "seq": "45,66"
      }
    ],
    "id": "a9c3b3eccb964ced854274422bbdec73",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/parent",
        "mappedBy": "word2vec"
      },
      {
        "label": "opponent",
        "uri": "http://dbpedia.org/ontology/opponent",
        "seq": "24,32",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Which religions are practiced in India?",
    "SerialNumber": "1231",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/hometown\u003e \u003chttp://dbpedia.org/resource/India\u003e . ?x \u003chttp://dbpedia.org/property/religion\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "India",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/India",
        "seq": "33,38"
      }
    ],
    "id": "5f5159b391bc417294f896820d53baf8",
    "predicate mapping": [
      {
        "label": "practiced",
        "uri": "http://dbpedia.org/ontology/hometown",
        "mappedBy": "word2vec"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/property/religion",
        "seq": "6,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Is the Frank R Lillie House has the Chicago architecture?",
    "SerialNumber": "1236",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Frank_R._Lillie_House\u003e \u003chttp://dbpedia.org/ontology/architecturalStyle\u003e \u003chttp://dbpedia.org/resource/Chicago\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "lillie house frank",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Frank_R._Lillie_House",
        "seq": "999,1000"
      },
      {
        "label": "Chicago",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Chicago",
        "seq": "36,43"
      }
    ],
    "id": "9ca41a6f79a14b689dcfae0764808cd6",
    "predicate mapping": [
      {
        "label": "architecture",
        "uri": "http://dbpedia.org/ontology/architecturalStyle",
        "seq": "44,56",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Grey gppse and eristoff is produced by which company?",
    "SerialNumber": "1237",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Grey_Goose_(vodka)\u003e \u003chttp://dbpedia.org/property/manufacturer\u003e ?uri. \u003chttp://dbpedia.org/resource/Eristoff\u003e \u003chttp://dbpedia.org/property/manufacturer\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "grey",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Grey_Goose_(vodka)",
        "seq": "999,1000"
      },
      {
        "label": "eristoff",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Eristoff",
        "seq": "15,23"
      }
    ],
    "id": "b727f0394eae4116bc3af96be4da1c1d",
    "predicate mapping": [
      {
        "label": "company",
        "uri": "http://dbpedia.org/property/manufacturer",
        "mappedBy": "word2vec"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/property/manufacturer",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "Which politician\u0027s constituency is led by the SF Board of Supervisors?",
    "SerialNumber": "1238",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/leaderTitle\u003e \u003chttp://dbpedia.org/resource/San_Francisco_Board_of_Supervisors\u003e . ?uri \u003chttp://dbpedia.org/property/constituency\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/OfficeHolder\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "SF Board of Supervisors",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/San_Francisco_Board_of_Supervisors",
        "seq": "46,69"
      }
    ],
    "id": "6f9848de2af84f4fbcded6f13f857cf2",
    "predicate mapping": [
      {
        "label": "led",
        "uri": "http://dbpedia.org/property/leaderTitle",
        "seq": "35,38",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "constituency",
        "uri": "http://dbpedia.org/property/constituency",
        "seq": "19,31",
        "mappedBy": "byLabelMatch"
      },
      {
        "uri": "http://dbpedia.org/ontology/OfficeHolder",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "What are the county seats of the region which operates the Boeing Field?",
    "SerialNumber": "1240",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Boeing_Field\u003e \u003chttp://dbpedia.org/ontology/operator\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/countySeat\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Region\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Boeing Field",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Boeing_Field",
        "seq": "59,71"
      }
    ],
    "id": "19ab52b648234276ae7f2e54b88f4ea7",
    "predicate mapping": [
      {
        "label": "operates",
        "uri": "http://dbpedia.org/ontology/operator",
        "mappedBy": "word2vec"
      },
      {
        "label": "county seat",
        "uri": "http://dbpedia.org/ontology/countySeat",
        "seq": "13,24",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "region",
        "uri": "http://dbpedia.org/ontology/Region",
        "seq": "33,39",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Where did the 2015 MLS All-Star Game take place?",
    "SerialNumber": "1244",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/2015_MLS_All-Star_Game\u003e \u003chttp://dbpedia.org/property/city\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "2015 MLS All-Star Game",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/2015_MLS_All-Star_Game",
        "seq": "14,36"
      }
    ],
    "id": "4a03be4b69ea4b10ba1e3d95a5f86f62",
    "predicate mapping": [
      {
        "label": "place",
        "uri": "http://dbpedia.org/property/city",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "Name some people working at someplace owned by News Corp.",
    "SerialNumber": "1246",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/owners\u003e \u003chttp://dbpedia.org/resource/News_Corp\u003e . ?uri \u003chttp://dbpedia.org/ontology/employer\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "News Corp",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/News_Corp",
        "seq": "47,56"
      }
    ],
    "id": "447a43a67f144236a29b626f440ec2a0",
    "predicate mapping": [
      {
        "label": "owned",
        "uri": "http://dbpedia.org/property/owners",
        "seq": "38,43",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "someplace",
        "uri": "http://dbpedia.org/ontology/employer",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What is the mascot of military in Quezon city?",
    "SerialNumber": "1248",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/garrison\u003e \u003chttp://dbpedia.org/resource/Quezon_City\u003e . ?x \u003chttp://dbpedia.org/property/mascot\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MilitaryUnit\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Quezon city",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Quezon_City",
        "seq": "34,45"
      }
    ],
    "id": "262bc6894dcd4fda8c651eb310b44496",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/garrison",
        "mappedBy": "word2vec"
      },
      {
        "label": "mascot",
        "uri": "http://dbpedia.org/property/mascot",
        "seq": "12,18",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "military",
        "uri": "http://dbpedia.org/ontology/MilitaryUnit",
        "seq": "22,30",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Who was the president at the time when the opponent of Benjamin Spock held office?",
    "SerialNumber": "1250",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/opponent\u003e \u003chttp://dbpedia.org/resource/Benjamin_Spock\u003e . ?x \u003chttp://dbpedia.org/property/incumbent\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Benjamin Spock",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Benjamin_Spock",
        "seq": "55,69"
      }
    ],
    "id": "0213a459e69a402da238e1ea7bf48f91",
    "predicate mapping": [
      {
        "label": "opponent",
        "uri": "http://dbpedia.org/ontology/opponent",
        "seq": "43,51",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "office",
        "uri": "http://dbpedia.org/property/incumbent",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Janaka Thissakuttiarachchi follows what religion, which once employed Atisa Srijnana too?",
    "SerialNumber": "1253",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Janaka_Thissakuttiarachchi\u003e \u003chttp://dbpedia.org/property/religion\u003e ?uri. \u003chttp://dbpedia.org/resource/Atiśa\u003e \u003chttp://dbpedia.org/ontology/occupation\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Janaka Thissakuttiarachchi",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Janaka_Thissakuttiarachchi",
        "seq": "0,26"
      },
      {
        "label": "Atisa",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Atiśa",
        "seq": "70,75"
      }
    ],
    "id": "c24ec1614e724dd8aa615e6054a4f8f3",
    "predicate mapping": [
      {
        "label": "religion",
        "uri": "http://dbpedia.org/property/religion",
        "seq": "40,48",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "employed",
        "uri": "http://dbpedia.org/ontology/occupation",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "List the served region of the organisations of Trade association.",
    "SerialNumber": "1255",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/type\u003e \u003chttp://dbpedia.org/resource/Trade_association\u003e . ?x \u003chttp://dbpedia.org/ontology/regionServed\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Organisation\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Trade association",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Trade_association",
        "seq": "47,64"
      }
    ],
    "id": "6924f47eafe44da9954f729ada2342f5",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/type",
        "mappedBy": "word2vec"
      },
      {
        "label": "served region",
        "uri": "http://dbpedia.org/ontology/regionServed",
        "seq": "9,22",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "organisation",
        "uri": "http://dbpedia.org/ontology/Organisation",
        "seq": "30,42",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "List the books whose authors are in Alcal de Henares.",
    "SerialNumber": "1261",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/birthPlace\u003e \u003chttp://dbpedia.org/resource/Alcalá_de_Henares\u003e . ?uri \u003chttp://dbpedia.org/ontology/author\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Book\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Alcal de Henares",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Alcalá_de_Henares",
        "seq": "36,52"
      }
    ],
    "id": "1cf22c99abb546c680faf2a6b74be80c",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/birthPlace",
        "mappedBy": "word2vec"
      },
      {
        "label": "authors",
        "uri": "http://dbpedia.org/ontology/author",
        "seq": "21,28",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "book",
        "uri": "http://dbpedia.org/ontology/Book",
        "seq": "9,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Is Guatemala a unitary state?",
    "SerialNumber": "1262",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Guatemala\u003e \u003chttp://dbpedia.org/ontology/governmentType\u003e \u003chttp://dbpedia.org/resource/Unitary_state\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Guatemala",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Guatemala",
        "seq": "3,12"
      },
      {
        "label": "unitary state",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Unitary_state",
        "seq": "15,28"
      }
    ],
    "id": "bc844f916fc34914ad85428c10a7184c",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/governmentType",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "what are some journals of academic Philosophy",
    "SerialNumber": "1263",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/discipline\u003e \u003chttp://dbpedia.org/resource/Philosophy\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Philosophy",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Philosophy",
        "seq": "35,45"
      }
    ],
    "id": "498f586cd8424c38b3af6f802891e55a",
    "predicate mapping": [
      {
        "label": "academic",
        "uri": "http://dbpedia.org/property/discipline",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "By which member of parliament was Provisional Government of Saskatchewan led?",
    "SerialNumber": "1264",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/order\u003e \u003chttp://dbpedia.org/resource/Provisional_Government_of_Saskatchewan\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MemberOfParliament\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Provisional Government of Saskatchewan",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Provisional_Government_of_Saskatchewan",
        "seq": "34,72"
      }
    ],
    "id": "5894b0cd2f60427089e1eb2fc7c0607f",
    "predicate mapping": [
      {
        "label": "led",
        "uri": "http://dbpedia.org/property/order",
        "mappedBy": "word2vec"
      },
      {
        "label": "member of parliament",
        "uri": "http://dbpedia.org/ontology/MemberOfParliament",
        "seq": "9,29",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Which drinks have emerged from the US?",
    "SerialNumber": "1267",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/origin\u003e \u003chttp://dbpedia.org/resource/United_States\u003e . ?x \u003chttp://dbpedia.org/property/locationCity\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Beverage\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "US",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/United_States",
        "seq": "35,37"
      }
    ],
    "id": "953d596a5ee1434a969fadbb3a3741a1",
    "predicate mapping": [
      {
        "label": "emerged",
        "uri": "http://dbpedia.org/ontology/origin",
        "mappedBy": "word2vec"
      },
      {
        "label": "emerged",
        "uri": "http://dbpedia.org/property/locationCity",
        "mappedBy": "word2vec"
      },
      {
        "label": "emerged",
        "uri": "http://dbpedia.org/ontology/Beverage",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Where is Vietnam Airlines located ?",
    "SerialNumber": "1270",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Vietnam_Airlines\u003e \u003chttp://dbpedia.org/ontology/location\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Vietnam Airlines",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Vietnam_Airlines",
        "seq": "9,25"
      }
    ],
    "id": "3280fa6df4c244cfa8768b869e50218f",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/ontology/location",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who is the chancellor of the university which affiliates the Dartington College of Arts?",
    "SerialNumber": "1271",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/affiliations\u003e \u003chttp://dbpedia.org/resource/Dartington_College_of_Arts\u003e . ?x \u003chttp://dbpedia.org/property/chancellor\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/University\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Dartington College of Arts",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Dartington_College_of_Arts",
        "seq": "61,87"
      }
    ],
    "id": "685ddf1e1ed641888613c5f9c85267b7",
    "predicate mapping": [
      {
        "label": "affiliates",
        "uri": "http://dbpedia.org/property/affiliations",
        "mappedBy": "word2vec"
      },
      {
        "label": "chancellor",
        "uri": "http://dbpedia.org/property/chancellor",
        "seq": "11,21",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "university",
        "uri": "http://dbpedia.org/ontology/University",
        "seq": "29,39",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "406",
    "question": "How many sitcoms are there whose theme music is composed by a New Yorker?",
    "SerialNumber": "1272",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/hometown\u003e \u003chttp://dbpedia.org/resource/New_York\u003e . ?uri \u003chttp://dbpedia.org/property/themeMusicComposer\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "New York",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/New_York",
        "seq": "62,70"
      }
    ],
    "id": "e33e3f1a2e9d462cb891215cad82dc5b",
    "predicate mapping": [
      {
        "label": "er",
        "uri": "http://dbpedia.org/ontology/hometown",
        "mappedBy": "word2vec"
      },
      {
        "label": "composed",
        "uri": "http://dbpedia.org/property/themeMusicComposer",
        "seq": "48,56",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "er",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Comcast SportsNet is broadcasted in what area, which also has the Michigan Renaissance Festival?",
    "SerialNumber": "1273",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Michigan_Renaissance_Festival\u003e \u003chttp://dbpedia.org/property/location\u003e ?uri. \u003chttp://dbpedia.org/resource/Comcast_SportsNet_Chicago\u003e \u003chttp://dbpedia.org/ontology/broadcastArea\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Michigan Renaissance Festival",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Michigan_Renaissance_Festival",
        "seq": "66,95"
      },
      {
        "label": "sportsnet comcast",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Comcast_SportsNet_Chicago",
        "seq": "999,1000"
      }
    ],
    "id": "5a8d27913f2348a5a0a9641d53ef1704",
    "predicate mapping": [
      {
        "label": "SportsNet",
        "uri": "http://dbpedia.org/property/location",
        "mappedBy": "word2vec"
      },
      {
        "label": "broadcasted",
        "uri": "http://dbpedia.org/ontology/broadcastArea",
        "seq": "21,32",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "List all the tenants of the stadium where the WWF Summer Slam 2004 took place.",
    "SerialNumber": "1274",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/SummerSlam_(2004)\u003e \u003chttp://dbpedia.org/property/venue\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/tenant\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "summer slam 2004",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/SummerSlam_(2004)",
        "seq": "999,1000"
      }
    ],
    "id": "46394065a08e478b946f7994c131b013",
    "predicate mapping": [
      {
        "label": "Slam",
        "uri": "http://dbpedia.org/property/venue",
        "mappedBy": "word2vec"
      },
      {
        "label": "tenant",
        "uri": "http://dbpedia.org/ontology/tenant",
        "seq": "13,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which venue of indy PopCon is also the death palce of Louis Le Cocqq ?",
    "SerialNumber": "1276",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Indy_PopCon\u003e \u003chttp://dbpedia.org/property/venue\u003e ?uri. \u003chttp://dbpedia.org/resource/Louis_LeCocq\u003e \u003chttp://dbpedia.org/property/placeOfDeath\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "indy PopCon",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Indy_PopCon",
        "seq": "15,26"
      },
      {
        "label": "louis",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Louis_LeCocq",
        "seq": "999,1000"
      }
    ],
    "id": "6ad1a5e54b384e689efa82debf6b0c4f",
    "predicate mapping": [
      {
        "label": "venue",
        "uri": "http://dbpedia.org/property/venue",
        "seq": "6,11",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "death",
        "uri": "http://dbpedia.org/property/placeOfDeath",
        "seq": "39,44",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the TV show with theme music by Primus and broadcasted on Comedy Central ?",
    "SerialNumber": "1280",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/network\u003e \u003chttp://dbpedia.org/resource/Comedy_Central\u003e . ?uri \u003chttp://dbpedia.org/property/themeMusicComposer\u003e \u003chttp://dbpedia.org/resource/Primus_(band)\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Comedy Central",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Comedy_Central",
        "seq": "63,77"
      },
      {
        "label": "Primus",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Primus_(band)",
        "seq": "37,43"
      }
    ],
    "id": "e7cb1c037fd84b45a5a0b5e4de0f3ef2",
    "predicate mapping": [
      {
        "label": "broadcasted",
        "uri": "http://dbpedia.org/property/network",
        "mappedBy": "word2vec"
      },
      {
        "label": "theme music",
        "uri": "http://dbpedia.org/property/themeMusicComposer",
        "seq": "22,33",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "12,16",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "List down all the associcated musical artist of the artist of In a Word or 2 ?",
    "SerialNumber": "1282",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/In_a_Word_or_2\u003e \u003chttp://dbpedia.org/property/artist\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/associatedMusicalArtist\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "In a Word or 2",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/In_a_Word_or_2",
        "seq": "62,76"
      }
    ],
    "id": "5fa9fa2055eb4ddbb39a16de5cdc76ec",
    "predicate mapping": [
      {
        "label": "artist",
        "uri": "http://dbpedia.org/property/artist",
        "seq": "38,44",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "musical",
        "uri": "http://dbpedia.org/ontology/associatedMusicalArtist",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Is Lancy a city close to Geneva?",
    "SerialNumber": "1287",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Geneva\u003e \u003chttp://dbpedia.org/ontology/neighboringMunicipality\u003e \u003chttp://dbpedia.org/resource/Lancy\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Geneva",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Geneva",
        "seq": "25,31"
      },
      {
        "label": "Lancy",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Lancy",
        "seq": "3,8"
      }
    ],
    "id": "103349c9b1c646bca70a2c8d7a4458d3",
    "predicate mapping": [
      {
        "label": "close",
        "uri": "http://dbpedia.org/ontology/neighboringMunicipality",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Give me some organizations working for Environmentalism",
    "SerialNumber": "1290",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/purpose\u003e \u003chttp://dbpedia.org/resource/Environmentalism\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Organisation\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Environmentalism",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Environmentalism",
        "seq": "39,55"
      }
    ],
    "id": "f075032d8bb14876a93a95f98cda7330",
    "predicate mapping": [
      {
        "label": "working",
        "uri": "http://dbpedia.org/property/purpose",
        "mappedBy": "word2vec"
      },
      {
        "uri": "http://dbpedia.org/ontology/Organisation",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What territory of Sino French War was the battle of Raoul Magrin-Vernerey fought ?",
    "SerialNumber": "1292",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Sino-French_War\u003e \u003chttp://dbpedia.org/ontology/territory\u003e ?uri. \u003chttp://dbpedia.org/resource/Raoul_Magrin-Vernerey\u003e \u003chttp://dbpedia.org/property/battles\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "french sino war",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Sino-French_War",
        "seq": "999,1000"
      },
      {
        "label": "Raoul Magrin-Vernerey",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Raoul_Magrin-Vernerey",
        "seq": "52,73"
      }
    ],
    "id": "6205616c0ee048eab5e020480247818b",
    "predicate mapping": [
      {
        "label": "territory",
        "uri": "http://dbpedia.org/ontology/territory",
        "seq": "5,14",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "battle",
        "uri": "http://dbpedia.org/property/battles",
        "seq": "42,48",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What games can be played in schools founded by Fr. Orlando?",
    "SerialNumber": "1298",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/foundedBy\u003e \u003chttp://dbpedia.org/resource/Fr._Orlando\u003e . ?x \u003chttp://dbpedia.org/ontology/sport\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/School\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Fr. Orlando",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Fr._Orlando",
        "seq": "47,58"
      }
    ],
    "id": "1ffae1c9ef7d48869e193bade845992d",
    "predicate mapping": [
      {
        "label": "founded by",
        "uri": "http://dbpedia.org/ontology/foundedBy",
        "seq": "36,46",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "played",
        "uri": "http://dbpedia.org/ontology/sport",
        "mappedBy": "word2vec"
      },
      {
        "label": "school",
        "uri": "http://dbpedia.org/ontology/School",
        "seq": "28,34",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which TV show distributed by Warner Bros. has Christopher Franke as one of the artist ?",
    "SerialNumber": "1300",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/distributor\u003e \u003chttp://dbpedia.org/resource/Warner_Bros._Television\u003e . ?uri \u003chttp://dbpedia.org/property/artist\u003e \u003chttp://dbpedia.org/resource/Christopher_Franke\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "warner bros.",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Warner_Bros._Television",
        "seq": "999,1000"
      },
      {
        "label": "Christopher Franke",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Christopher_Franke",
        "seq": "46,64"
      }
    ],
    "id": "1f3e42c050df4103ab6f4ee7b80bc037",
    "predicate mapping": [
      {
        "label": "distributed by",
        "uri": "http://dbpedia.org/property/distributor",
        "seq": "14,28",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "artist",
        "uri": "http://dbpedia.org/property/artist",
        "seq": "79,85",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "9,13",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Where did the graduates of Memphis, Tenessee continue their education?",
    "SerialNumber": "1301",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/highschool\u003e \u003chttp://dbpedia.org/resource/Memphis,_Tennessee\u003e . ?x \u003chttp://dbpedia.org/ontology/school\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Memphis",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Memphis,_Tennessee",
        "seq": "27,34"
      }
    ],
    "id": "66629e2919e3457b92e9412d2765707f",
    "predicate mapping": [
      {
        "label": "education",
        "uri": "http://dbpedia.org/property/highschool",
        "mappedBy": "word2vec"
      },
      {
        "label": "education",
        "uri": "http://dbpedia.org/ontology/school",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who is the employer of Ralph flanders ?",
    "SerialNumber": "1303",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Ralph_Flanders\u003e \u003chttp://dbpedia.org/property/occupation\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ralph flanders",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Ralph_Flanders",
        "seq": "23,37"
      }
    ],
    "id": "321da0a6b5db42d28b6af0d8130999ad",
    "predicate mapping": [
      {
        "label": "employer",
        "uri": "http://dbpedia.org/property/occupation",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What is an airport inside ontario?",
    "SerialNumber": "1304",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/cityServed\u003e \u003chttp://dbpedia.org/resource/Ontario,_California\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Airport\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "ontario",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Ontario,_California",
        "seq": "999,1000"
      }
    ],
    "id": "95e2eff5a1b64e1b9ce1e7edf8adedcf",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/cityServed",
        "mappedBy": "word2vec"
      },
      {
        "label": "airport",
        "uri": "http://dbpedia.org/ontology/Airport",
        "seq": "11,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What is the city whose mayor is Anne Hidalgo?",
    "SerialNumber": "1310",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/mayor\u003e \u003chttp://dbpedia.org/resource/Anne_Hidalgo\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Settlement\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Anne Hidalgo",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Anne_Hidalgo",
        "seq": "32,44"
      }
    ],
    "id": "d645d34b10204b259900c68a10b1de61",
    "predicate mapping": [
      {
        "label": "mayor",
        "uri": "http://dbpedia.org/property/mayor",
        "seq": "23,28",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "city",
        "uri": "http://dbpedia.org/ontology/Settlement",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "Name some dishes made with flowering plants.",
    "SerialNumber": "1311",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/division\u003e \u003chttp://dbpedia.org/resource/Flowering_plant\u003e . ?uri \u003chttp://dbpedia.org/ontology/ingredient\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Food\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "flowering plant",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Flowering_plant",
        "seq": "27,42"
      }
    ],
    "id": "4c9dc9bbe2444c8890caed8026dde6df",
    "predicate mapping": [
      {
        "label": "s.",
        "uri": "http://dbpedia.org/ontology/division",
        "mappedBy": "word2vec"
      },
      {
        "label": "s.",
        "uri": "http://dbpedia.org/ontology/ingredient",
        "mappedBy": "word2vec"
      },
      {
        "label": "s.",
        "uri": "http://dbpedia.org/ontology/Food",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Which nation\u0027s engineers have graduated in Poland?",
    "SerialNumber": "1312",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/education\u003e \u003chttp://dbpedia.org/resource/Poland\u003e . ?x \u003chttp://dbpedia.org/property/nationality\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Engineer\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Poland",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Poland",
        "seq": "43,49"
      }
    ],
    "id": "0b8b29a0b2b745acbbed6037be44ec41",
    "predicate mapping": [
      {
        "label": "graduated",
        "uri": "http://dbpedia.org/ontology/education",
        "mappedBy": "word2vec"
      },
      {
        "label": "nation\u0027s",
        "uri": "http://dbpedia.org/property/nationality",
        "seq": "6,14",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "engineer",
        "uri": "http://dbpedia.org/ontology/Engineer",
        "seq": "15,23",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "What are some cities which have a Ferris wheel?",
    "SerialNumber": "1313",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/buildingType\u003e \u003chttp://dbpedia.org/resource/Ferris_wheel\u003e . ?x \u003chttp://dbpedia.org/property/locationTown\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ferris wheel",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ferris_wheel",
        "seq": "34,46"
      }
    ],
    "id": "a7ad80582ef84f54bb67cf7108003796",
    "predicate mapping": [
      {
        "label": "cities",
        "uri": "http://dbpedia.org/property/buildingType",
        "mappedBy": "word2vec"
      },
      {
        "label": "cities",
        "uri": "http://dbpedia.org/property/locationTown",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which author inspired Susanna Clarke, and wrote Northanger Abbey?",
    "SerialNumber": "1316",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Northanger_Abbey\u003e \u003chttp://dbpedia.org/property/author\u003e ?uri. \u003chttp://dbpedia.org/resource/Susanna_Clarke\u003e \u003chttp://dbpedia.org/property/influences\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Northanger Abbey",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Northanger_Abbey",
        "seq": "48,64"
      },
      {
        "label": "Susanna Clarke",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Susanna_Clarke",
        "seq": "22,36"
      }
    ],
    "id": "1a98e56e3b3844d28ca9cb861532a949",
    "predicate mapping": [
      {
        "label": "author",
        "uri": "http://dbpedia.org/property/author",
        "seq": "6,12",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "wrote",
        "uri": "http://dbpedia.org/property/influences",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "In all the places with a stagecoach, where is a Peetz Table Wind Energy Center located too?",
    "SerialNumber": "1319",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Stagecoach,_Colorado\u003e \u003chttp://dbpedia.org/property/location\u003e ?uri. \u003chttp://dbpedia.org/resource/Peetz_Table_Wind_Energy_Center\u003e \u003chttp://dbpedia.org/property/location\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "stagecoach,",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Stagecoach,_Colorado",
        "seq": "999,1000"
      },
      {
        "label": "Peetz Table Wind Energy Center",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Peetz_Table_Wind_Energy_Center",
        "seq": "48,78"
      }
    ],
    "id": "892b60fa57f743969c1fe9bf5708e9c0",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/property/location",
        "mappedBy": "word2vec"
      },
      {
        "label": "located",
        "uri": "http://dbpedia.org/property/location",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "List everything governed by the Democratic Party of US?",
    "SerialNumber": "1322",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/leaderName\u003e \u003chttp://dbpedia.org/resource/Democratic_Party_(United_States)\u003e . ?uri \u003chttp://dbpedia.org/ontology/location\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Democratic Party",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Democratic_Party_(United_States)",
        "seq": "32,48"
      }
    ],
    "id": "d90cfc130f684d5a9c0c03a85e6e6dc3",
    "predicate mapping": [
      {
        "label": "governed",
        "uri": "http://dbpedia.org/ontology/leaderName",
        "mappedBy": "word2vec"
      },
      {
        "label": "governed",
        "uri": "http://dbpedia.org/ontology/location",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Of all the teams that Andrew Economos played for, which one did Jerrel Jackson play his first game for?",
    "SerialNumber": "1324",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Jerrell_Jackson\u003e \u003chttp://dbpedia.org/ontology/debutTeam\u003e ?uri. \u003chttp://dbpedia.org/resource/Andrew_Economos\u003e \u003chttp://dbpedia.org/ontology/formerTeam\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "jackson jerrel",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Jerrell_Jackson",
        "seq": "999,1000"
      },
      {
        "label": "Andrew Economos",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Andrew_Economos",
        "seq": "22,37"
      }
    ],
    "id": "5f84770805fe4db48a22ddd19ae2daf5",
    "predicate mapping": [
      {
        "label": "teams",
        "uri": "http://dbpedia.org/ontology/debutTeam",
        "seq": "11,16",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "teams",
        "uri": "http://dbpedia.org/ontology/formerTeam",
        "seq": "11,16",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "What are some software which are written in languages that are run on Unix like OS?",
    "SerialNumber": "1325",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/operatingSystem\u003e \u003chttp://dbpedia.org/resource/Unix-like\u003e . ?uri \u003chttp://dbpedia.org/property/programmingLanguage\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Software\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "unix like",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Unix-like",
        "seq": "999,1000"
      }
    ],
    "id": "81237995d578482ea6accf7e9ffcd320",
    "predicate mapping": [
      {
        "label": "OS",
        "uri": "http://dbpedia.org/property/operatingSystem",
        "mappedBy": "word2vec"
      },
      {
        "label": "languages",
        "uri": "http://dbpedia.org/property/programmingLanguage",
        "seq": "44,53",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "software",
        "uri": "http://dbpedia.org/ontology/Software",
        "seq": "14,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Name the movies writtten by the group Monty Python ?",
    "SerialNumber": "1326",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/writer\u003e \u003chttp://dbpedia.org/resource/Monty_Python\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Monty Python",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Monty_Python",
        "seq": "38,50"
      }
    ],
    "id": "ce5ddceafe844a9bb7a76194c0af8c7f",
    "predicate mapping": [
      {
        "label": "group",
        "uri": "http://dbpedia.org/property/writer",
        "mappedBy": "word2vec"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Where did some of the matches take place where Columbus Crew SC played?",
    "SerialNumber": "1327",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/team\u003e \u003chttp://dbpedia.org/resource/Columbus_Crew_SC\u003e . ?x \u003chttp://dbpedia.org/ontology/location\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/FootballMatch\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Columbus Crew SC",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Columbus_Crew_SC",
        "seq": "47,63"
      }
    ],
    "id": "b39233c5a03a4b7087e4b5546806cc80",
    "predicate mapping": [
      {
        "label": "played",
        "uri": "http://dbpedia.org/property/team",
        "mappedBy": "word2vec"
      },
      {
        "label": "played",
        "uri": "http://dbpedia.org/ontology/location",
        "mappedBy": "word2vec"
      },
      {
        "label": "matches",
        "uri": "http://dbpedia.org/ontology/FootballMatch",
        "seq": "22,29",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "List the agencies located someplace lead by Alex Chalk.",
    "SerialNumber": "1330",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/leaderName\u003e \u003chttp://dbpedia.org/resource/Alex_Chalk\u003e . ?uri \u003chttp://dbpedia.org/ontology/location\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/GovernmentAgency\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Alex Chalk",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Alex_Chalk",
        "seq": "44,54"
      }
    ],
    "id": "f6ced5d820a1470b843b40391b01cf86",
    "predicate mapping": [
      {
        "label": "lead",
        "uri": "http://dbpedia.org/ontology/leaderName",
        "seq": "36,40",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "someplace",
        "uri": "http://dbpedia.org/ontology/location",
        "mappedBy": "word2vec"
      },
      {
        "label": "agencies",
        "uri": "http://dbpedia.org/ontology/GovernmentAgency",
        "seq": "9,17",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Through which cities do the rivers starting at the Montauk State Park flow?",
    "SerialNumber": "1333",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/sourcePlace\u003e \u003chttp://dbpedia.org/resource/Montauk_State_Park\u003e . ?x \u003chttp://dbpedia.org/ontology/city\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/River\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Montauk State Park",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Montauk_State_Park",
        "seq": "51,69"
      }
    ],
    "id": "78aeb7a8b2814ff1a4a9f813f7e41392",
    "predicate mapping": [
      {
        "label": "flow",
        "uri": "http://dbpedia.org/ontology/sourcePlace",
        "mappedBy": "word2vec"
      },
      {
        "label": "State",
        "uri": "http://dbpedia.org/ontology/city",
        "seq": "59,64",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River",
        "seq": "28,33",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "People from how many political parties exist in Maharashtra?",
    "SerialNumber": "1334",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/placeOfBirth\u003e \u003chttp://dbpedia.org/resource/Maharashtra\u003e . ?x \u003chttp://dbpedia.org/ontology/party\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Maharashtra",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Maharashtra",
        "seq": "48,59"
      }
    ],
    "id": "9c90326c60b94d57bf5ee570607ca6b5",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/placeOfBirth",
        "mappedBy": "word2vec"
      },
      {
        "label": "parties",
        "uri": "http://dbpedia.org/ontology/party",
        "seq": "31,38",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which moto of american Classical League is also the academic discipline of Probus ?",
    "SerialNumber": "1337",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/American_Classical_League\u003e \u003chttp://dbpedia.org/property/motto\u003e ?uri. \u003chttp://dbpedia.org/resource/Probus_(journal)\u003e \u003chttp://dbpedia.org/ontology/academicDiscipline\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "american Classical League",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/American_Classical_League",
        "seq": "14,39"
      },
      {
        "label": "Probus",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Probus_(journal)",
        "seq": "75,81"
      }
    ],
    "id": "7a65376ab49c4988a7e19d19ee8b0575",
    "predicate mapping": [
      {
        "label": "moto",
        "uri": "http://dbpedia.org/property/motto",
        "mappedBy": "word2vec"
      },
      {
        "label": "academic discipline",
        "uri": "http://dbpedia.org/ontology/academicDiscipline",
        "seq": "52,71",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "Who are the people whose alumna is a part of the National Collegiate Athletic Association?",
    "SerialNumber": "1338",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/athletics\u003e \u003chttp://dbpedia.org/resource/National_Collegiate_Athletic_Association\u003e . ?uri \u003chttp://dbpedia.org/property/education\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "National Collegiate Athletic Association",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/National_Collegiate_Athletic_Association",
        "seq": "49,89"
      }
    ],
    "id": "28f1b38fd1fa43dcafd2eee7e5778775",
    "predicate mapping": [
      {
        "label": "athletic",
        "uri": "http://dbpedia.org/ontology/athletics",
        "seq": "-1,7",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "part",
        "uri": "http://dbpedia.org/property/education",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "What did the people buried in Toronto die of?",
    "SerialNumber": "1345",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/restingPlace\u003e \u003chttp://dbpedia.org/resource/Toronto\u003e . ?x \u003chttp://dbpedia.org/ontology/deathCause\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Toronto",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Toronto",
        "seq": "30,37"
      }
    ],
    "id": "17a32c37985d4016a2887aaeae4c165c",
    "predicate mapping": [
      {
        "label": "buried in",
        "uri": "http://dbpedia.org/property/restingPlace",
        "seq": "20,29",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "die",
        "uri": "http://dbpedia.org/ontology/deathCause",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Was Yabanc Damat first aired in UAE?",
    "SerialNumber": "1348",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Yabancı_Damat\u003e \u003chttp://dbpedia.org/property/firstAired\u003e \u003chttp://dbpedia.org/resource/United_Arab_Emirates\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "yabanc damat",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Yabancı_Damat",
        "seq": "999,1000"
      },
      {
        "label": "UAE",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/United_Arab_Emirates",
        "seq": "32,35"
      }
    ],
    "id": "4382d08ff34c47ffbf3c17b6a9451ce1",
    "predicate mapping": [
      {
        "label": "first aired",
        "uri": "http://dbpedia.org/property/firstAired",
        "seq": "17,28",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Name some basketball players who  have played for chicago bulls?",
    "SerialNumber": "1349",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/team\u003e \u003chttp://dbpedia.org/resource/Chicago_Bulls\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/BasketballPlayer\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "chicago bulls",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Chicago_Bulls",
        "seq": "50,63"
      }
    ],
    "id": "6aff1d15601947138c861eb36f7aa7ac",
    "predicate mapping": [
      {
        "label": "played",
        "uri": "http://dbpedia.org/property/team",
        "mappedBy": "word2vec"
      },
      {
        "label": "basketball player",
        "uri": "http://dbpedia.org/ontology/BasketballPlayer",
        "seq": "10,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "307",
    "question": "list the organisation with motive for peace and environmentalism?",
    "SerialNumber": "1350",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/property/purpose\u003e \u003chttp://dbpedia.org/resource/Peace\u003e . ?uri \u003chttp://dbpedia.org/property/purpose\u003e \u003chttp://dbpedia.org/resource/Environmentalism\u003e . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Organisation\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "peace",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Peace",
        "seq": "38,43"
      },
      {
        "label": "environmentalism",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Environmentalism",
        "seq": "48,64"
      }
    ],
    "id": "6f3fc96104a94a63a66096801b34bf71",
    "predicate mapping": [
      {
        "label": "motive",
        "uri": "http://dbpedia.org/property/purpose",
        "mappedBy": "word2vec"
      },
      {
        "label": "motive",
        "uri": "http://dbpedia.org/property/purpose",
        "mappedBy": "word2vec"
      },
      {
        "label": "organisation",
        "uri": "http://dbpedia.org/ontology/Organisation",
        "seq": "9,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which former team of Franois Beauchemin does the Nathan Dempsey played for ?",
    "SerialNumber": "1356",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Nathan_Dempsey\u003e \u003chttp://dbpedia.org/property/playedFor\u003e ?uri. \u003chttp://dbpedia.org/resource/François_Beauchemin\u003e \u003chttp://dbpedia.org/ontology/formerTeam\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Nathan Dempsey",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Nathan_Dempsey",
        "seq": "49,63"
      },
      {
        "label": "beauchemin",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/François_Beauchemin",
        "seq": "999,1000"
      }
    ],
    "id": "90670bde322f4fdb820424305500a826",
    "predicate mapping": [
      {
        "label": "played for",
        "uri": "http://dbpedia.org/property/playedFor",
        "seq": "64,74",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "former team",
        "uri": "http://dbpedia.org/ontology/formerTeam",
        "seq": "6,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "406",
    "question": "How many sitcoms were produced by the company whose predecessor was the Desilu Productions",
    "SerialNumber": "1360",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/predecessor\u003e \u003chttp://dbpedia.org/resource/Desilu_Productions\u003e . ?uri \u003chttp://dbpedia.org/property/company\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Desilu Productions",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Desilu_Productions",
        "seq": "72,90"
      }
    ],
    "id": "0692b55140154ca68f9797dda50c0caa",
    "predicate mapping": [
      {
        "label": "predecessor",
        "uri": "http://dbpedia.org/property/predecessor",
        "seq": "52,63",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/property/company",
        "seq": "38,45",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "produced",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Under which president did the predecessor of Simon Ferro work?",
    "SerialNumber": "1364",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/successor\u003e \u003chttp://dbpedia.org/resource/Simon_Ferro\u003e . ?x \u003chttp://dbpedia.org/ontology/president\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Simon Ferro",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Simon_Ferro",
        "seq": "45,56"
      }
    ],
    "id": "ae8ea7fe77cc49459a8f5e49652308d4",
    "predicate mapping": [
      {
        "label": "work",
        "uri": "http://dbpedia.org/ontology/successor",
        "mappedBy": "word2vec"
      },
      {
        "label": "president",
        "uri": "http://dbpedia.org/ontology/president",
        "seq": "12,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "In which municipalities does the NYC housing authority own buildings?",
    "SerialNumber": "1365",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/owningOrganisation\u003e \u003chttp://dbpedia.org/resource/New_York_City_Housing_Authority\u003e . ?x \u003chttp://dbpedia.org/ontology/municipality\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Building\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "authority housing",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/New_York_City_Housing_Authority",
        "seq": "999,1000"
      }
    ],
    "id": "ffd7305acc7848ba94088cfcda3648c6",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/owningOrganisation",
        "mappedBy": "word2vec"
      },
      {
        "label": "municipalities",
        "uri": "http://dbpedia.org/ontology/municipality",
        "seq": "9,23",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "building",
        "uri": "http://dbpedia.org/ontology/Building",
        "seq": "59,67",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "What are some team members of the team based in Camp Nou?",
    "SerialNumber": "1366",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/homeStadium\u003e \u003chttp://dbpedia.org/resource/Camp_Nou\u003e . ?x \u003chttp://dbpedia.org/property/name\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Camp Nou",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Camp_Nou",
        "seq": "48,56"
      }
    ],
    "id": "6ed618f4088e4b24921cb9a0130ce68c",
    "predicate mapping": [
      {
        "label": "based",
        "uri": "http://dbpedia.org/ontology/homeStadium",
        "mappedBy": "word2vec"
      },
      {
        "label": "based",
        "uri": "http://dbpedia.org/property/name",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Was andy worhol the director of the san diego surf?",
    "SerialNumber": "1367",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/San_Diego_Surf_(film)\u003e \u003chttp://dbpedia.org/ontology/cinematography\u003e \u003chttp://dbpedia.org/resource/Andy_Warhol\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "san diego surf",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/San_Diego_Surf_(film)",
        "seq": "36,50"
      },
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Andy_Warhol",
        "seq": "999,1000"
      }
    ],
    "id": "2ca6b83130654efb9992783432c6e211",
    "predicate mapping": [
      {
        "label": "director",
        "uri": "http://dbpedia.org/ontology/cinematography",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "Count the number of places where alumini of Edinburgh university have died?",
    "SerialNumber": "1369",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/education\u003e \u003chttp://dbpedia.org/resource/University_of_Edinburgh\u003e . ?x \u003chttp://dbpedia.org/ontology/deathPlace\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Edinburgh university",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/University_of_Edinburgh",
        "seq": "44,64"
      }
    ],
    "id": "bc8d8dac1f054a9eaaf3a61ebce0decd",
    "predicate mapping": [
      {
        "label": "died",
        "uri": "http://dbpedia.org/property/education",
        "mappedBy": "word2vec"
      },
      {
        "label": "places",
        "uri": "http://dbpedia.org/ontology/deathPlace",
        "seq": "20,26",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Is Cologny a neighbouring city of Geneva?",
    "SerialNumber": "1370",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Geneva\u003e \u003chttp://dbpedia.org/property/neighboringMunicipalities\u003e \u003chttp://dbpedia.org/resource/Cologny\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Geneva",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Geneva",
        "seq": "34,40"
      },
      {
        "label": "Cologny",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Cologny",
        "seq": "3,10"
      }
    ],
    "id": "0f3f93023ae74d94bac356887ec1e15b",
    "predicate mapping": [
      {
        "label": "city",
        "uri": "http://dbpedia.org/property/neighboringMunicipalities",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "Whose tomb is in cities under Dane County of Wisconsin?",
    "SerialNumber": "1372",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/territory\u003e \u003chttp://dbpedia.org/resource/Dane_County,_Wisconsin\u003e . ?uri \u003chttp://dbpedia.org/ontology/restingPlace\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "wisconsin county dane",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Dane_County,_Wisconsin",
        "seq": "999,1000"
      }
    ],
    "id": "1efd0ef701644607af3ae7939ea319be",
    "predicate mapping": [
      {
        "label": "Wisconsin",
        "uri": "http://dbpedia.org/ontology/territory",
        "mappedBy": "word2vec"
      },
      {
        "label": "tomb",
        "uri": "http://dbpedia.org/ontology/restingPlace",
        "seq": "6,10",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which of the continents that Digitalb worked in, was christine rolfes born in?",
    "SerialNumber": "1376",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Digit-Alb\u003e \u003chttp://dbpedia.org/ontology/regionServed\u003e ?uri. \u003chttp://dbpedia.org/resource/Christine_Rolfes\u003e \u003chttp://dbpedia.org/ontology/birthPlace\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Digitalb",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Digit-Alb",
        "seq": "29,37"
      },
      {
        "label": "christine rolfes",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Christine_Rolfes",
        "seq": "53,69"
      }
    ],
    "id": "8fce468edfb5414283a20c5f243e0728",
    "predicate mapping": [
      {
        "label": "worked",
        "uri": "http://dbpedia.org/ontology/regionServed",
        "mappedBy": "word2vec"
      },
      {
        "label": "born in",
        "uri": "http://dbpedia.org/ontology/birthPlace",
        "seq": "70,77",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What famous musicians play the remo?",
    "SerialNumber": "1378",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/instrument\u003e \u003chttp://dbpedia.org/resource/Remo\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MusicalArtist\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "remo",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Remo",
        "seq": "31,35"
      }
    ],
    "id": "c39f9c9df5b147d49a09ee2a5ef485d3",
    "predicate mapping": [
      {
        "label": "play",
        "uri": "http://dbpedia.org/ontology/instrument",
        "mappedBy": "word2vec"
      },
      {
        "label": "musician",
        "uri": "http://dbpedia.org/ontology/MusicalArtist",
        "seq": "12,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "List the television shows whose network\u0027s executive officer is Steve Burke.",
    "SerialNumber": "1380",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/keyPerson\u003e \u003chttp://dbpedia.org/resource/Steve_Burke_(businessman)\u003e . ?uri \u003chttp://dbpedia.org/ontology/network\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Steve Burke",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Steve_Burke_(businessman)",
        "seq": "63,74"
      }
    ],
    "id": "6437c30f7c71486d9651bdf6c5109725",
    "predicate mapping": [
      {
        "label": "officer",
        "uri": "http://dbpedia.org/ontology/keyPerson",
        "mappedBy": "word2vec"
      },
      {
        "label": "network",
        "uri": "http://dbpedia.org/ontology/network",
        "seq": "32,39",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "9,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "405",
    "question": "How many pole drivers have been there in grand prixes where first driver was Damon Hill?",
    "SerialNumber": "1384",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/firstDriver\u003e \u003chttp://dbpedia.org/resource/Damon_Hill\u003e . ?x \u003chttp://dbpedia.org/ontology/poleDriver\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/FormulaOneRacer\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Damon Hill",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Damon_Hill",
        "seq": "77,87"
      }
    ],
    "id": "aaee7a24a90e47d3954f143bf64ca267",
    "predicate mapping": [
      {
        "label": "first driver",
        "uri": "http://dbpedia.org/ontology/firstDriver",
        "seq": "60,72",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "pole driver",
        "uri": "http://dbpedia.org/ontology/poleDriver",
        "seq": "9,20",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "grand",
        "uri": "http://dbpedia.org/ontology/FormulaOneRacer",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "In which city wasThe Triple Door (The Courage album)  performed live?",
    "SerialNumber": "1385",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Live_at_The_Triple_Door_(The_Courage_album)\u003e \u003chttp://dbpedia.org/property/recorded\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "courage triple album)",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Live_at_The_Triple_Door_(The_Courage_album)",
        "seq": "999,1000"
      }
    ],
    "id": "1a8cc713ccd443c9ba6a74d395b4b6b2",
    "predicate mapping": [
      {
        "label": "live",
        "uri": "http://dbpedia.org/property/recorded",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Was the Model K designed by Herny Ford?",
    "SerialNumber": "1386",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Ford_Model_K\u003e \u003chttp://dbpedia.org/ontology/designCompany\u003e \u003chttp://dbpedia.org/resource/Henry_Ford\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "model ford",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Ford_Model_K",
        "seq": "999,1000"
      },
      {
        "label": "ford",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Henry_Ford",
        "seq": "999,1000"
      }
    ],
    "id": "3af799b07d8d4b5c8a03857948db6c6f",
    "predicate mapping": [
      {
        "label": "designed",
        "uri": "http://dbpedia.org/ontology/designCompany",
        "seq": "16,24",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which local authority of Buckhurst Hill County High School is the palce of burial of Elizabeth Rhuddlan ?",
    "SerialNumber": "1387",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Elizabeth_of_Rhuddlan\u003e \u003chttp://dbpedia.org/property/placeOfBurial\u003e ?uri. \u003chttp://dbpedia.org/resource/Buckhurst_Hill_County_High_School\u003e \u003chttp://dbpedia.org/ontology/localAuthority\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "elizabeth rhuddlan",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Elizabeth_of_Rhuddlan",
        "seq": "999,1000"
      },
      {
        "label": "Buckhurst Hill County High School",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Buckhurst_Hill_County_High_School",
        "seq": "25,58"
      }
    ],
    "id": "9e0dd9094d6b42b2ade24c563d35c3db",
    "predicate mapping": [
      {
        "label": "burial",
        "uri": "http://dbpedia.org/property/placeOfBurial",
        "seq": "75,81",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "local authority",
        "uri": "http://dbpedia.org/ontology/localAuthority",
        "seq": "6,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "What is manufactured by a company headed by Kazuo Hirai?",
    "SerialNumber": "1389",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/keyPeople\u003e \u003chttp://dbpedia.org/resource/Kazuo_Hirai\u003e . ?uri \u003chttp://dbpedia.org/ontology/manufacturer\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Kazuo Hirai",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Kazuo_Hirai",
        "seq": "44,55"
      }
    ],
    "id": "cf2c22fcebba4a6f86eed6755e915b2f",
    "predicate mapping": [
      {
        "label": "headed",
        "uri": "http://dbpedia.org/property/keyPeople",
        "mappedBy": "word2vec"
      },
      {
        "label": "manufactured by",
        "uri": "http://dbpedia.org/ontology/manufacturer",
        "seq": "8,23",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "11",
    "question": "List the outflows of the lake whose one of the outflows is Benu river ?",
    "SerialNumber": "1390",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/outflow\u003e \u003chttp://dbpedia.org/resource/Benué_River\u003e . ?x \u003chttp://dbpedia.org/ontology/outflow\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "river benu",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Benué_River",
        "seq": "999,1000"
      }
    ],
    "id": "3c301cf561394deba7b635bc6a8f2877",
    "predicate mapping": [
      {
        "label": "outflow",
        "uri": "http://dbpedia.org/property/outflow",
        "seq": "9,16",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "outflow",
        "uri": "http://dbpedia.org/ontology/outflow",
        "seq": "9,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Who created the Women in the Garden and also the L\u0027Enfant a la tasse ?",
    "SerialNumber": "1395",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Women_in_the_Garden\u003e \u003chttp://dbpedia.org/property/artist\u003e ?uri. \u003chttp://dbpedia.org/resource/L\u0027Enfant_a_la_tasse\u003e \u003chttp://dbpedia.org/property/artist\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Women in the Garden",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Women_in_the_Garden",
        "seq": "16,35"
      },
      {
        "label": "L\u0027Enfant a la tasse",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/L\u0027Enfant_a_la_tasse",
        "seq": "49,68"
      }
    ],
    "id": "ee30b589024f41ba94eeeb43ca06b2cb",
    "predicate mapping": [
      {
        "label": "created",
        "uri": "http://dbpedia.org/property/artist",
        "mappedBy": "word2vec"
      },
      {
        "label": "created",
        "uri": "http://dbpedia.org/property/artist",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Which state\u0027s largest city is Omaha?",
    "SerialNumber": "1398",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/largestCity\u003e \u003chttp://dbpedia.org/resource/Omaha,_Nebraska\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/AdministrativeRegion\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Omaha",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Omaha,_Nebraska",
        "seq": "30,35"
      }
    ],
    "id": "f7dc75036c854765af67522f62223266",
    "predicate mapping": [
      {
        "label": "largest city",
        "uri": "http://dbpedia.org/ontology/largestCity",
        "seq": "14,26",
        "mappedBy": "byLabelMatch"
      },
      {
        "uri": "http://dbpedia.org/ontology/AdministrativeRegion",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "In which wars has Steven Palazzo fought?",
    "SerialNumber": "1399",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Steven_Palazzo\u003e \u003chttp://dbpedia.org/property/battles\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Steven Palazzo",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Steven_Palazzo",
        "seq": "18,32"
      }
    ],
    "id": "209493482df043e9ac2583b042622b16",
    "predicate mapping": [
      {
        "label": "fought",
        "uri": "http://dbpedia.org/property/battles",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which training center of William Anthony has also alumni named Philip W Pillsbury ?",
    "SerialNumber": "1401",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/William_Anthony_(artist)\u003e \u003chttp://dbpedia.org/property/training\u003e ?uri. \u003chttp://dbpedia.org/resource/Philip_W._Pillsbury\u003e \u003chttp://dbpedia.org/property/education\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "William Anthony",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/William_Anthony_(artist)",
        "seq": "25,40"
      },
      {
        "label": "pillsbury philip",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Philip_W._Pillsbury",
        "seq": "999,1000"
      }
    ],
    "id": "fcbd2eb259ad4797a4de074a9e6ca51b",
    "predicate mapping": [
      {
        "label": "training",
        "uri": "http://dbpedia.org/property/training",
        "seq": "6,14",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "Pillsbury",
        "uri": "http://dbpedia.org/property/education",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "11",
    "question": "List all the nicknames of the city which has Toru gingerbread as one of it ?",
    "SerialNumber": "1403",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/nickname\u003e \u003chttp://dbpedia.org/resource/Toruń_gingerbread\u003e . ?x \u003chttp://dbpedia.org/property/nickname\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "gingerbread toru",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Toruń_gingerbread",
        "seq": "999,1000"
      }
    ],
    "id": "9f6eaa108131427a9ac70decbdd4d153",
    "predicate mapping": [
      {
        "label": "nickname",
        "uri": "http://dbpedia.org/property/nickname",
        "seq": "13,21",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "nickname",
        "uri": "http://dbpedia.org/property/nickname",
        "seq": "13,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Who was the writer of the novel Maniac Magee?",
    "SerialNumber": "1407",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/notableworks\u003e \u003chttp://dbpedia.org/resource/Maniac_Magee\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Writer\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Maniac Magee",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Maniac_Magee",
        "seq": "32,44"
      }
    ],
    "id": "e52302c32d6440dba926e0d3ed0f97f9",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/notableworks",
        "mappedBy": "word2vec"
      },
      {
        "label": "writer",
        "uri": "http://dbpedia.org/ontology/Writer",
        "seq": "12,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "What are some movies whose distributer\u0027s CEO is Ted Hartley?",
    "SerialNumber": "1409",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/keyPeople\u003e \u003chttp://dbpedia.org/resource/Ted_Hartley\u003e . ?uri \u003chttp://dbpedia.org/property/distributor\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ted Hartley",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Ted_Hartley",
        "seq": "48,59"
      }
    ],
    "id": "990acb5fafe142619ee7ad93a614fcf9",
    "predicate mapping": [
      {
        "label": "CEO",
        "uri": "http://dbpedia.org/property/keyPeople",
        "mappedBy": "word2vec"
      },
      {
        "label": "CEO",
        "uri": "http://dbpedia.org/property/distributor",
        "mappedBy": "word2vec"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "14,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "405",
    "question": "How many artists\u0027 works are in Muse d\u0027Orsay?",
    "SerialNumber": "1413",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/museum\u003e \u003chttp://dbpedia.org/resource/Musée_d\u0027Orsay\u003e . ?x \u003chttp://dbpedia.org/property/artist\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Artist\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "d\u0027orsay",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Musée_d\u0027Orsay",
        "seq": "999,1000"
      }
    ],
    "id": "48eb16573ec141a5ab3f8b412564aea6",
    "predicate mapping": [
      {
        "label": "muse",
        "uri": "http://dbpedia.org/property/museum",
        "seq": "-1,3",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "artist",
        "uri": "http://dbpedia.org/property/artist",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "artist",
        "uri": "http://dbpedia.org/ontology/Artist",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "In how many different places does Canal and River Trust own its assets?",
    "SerialNumber": "1414",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/owner\u003e \u003chttp://dbpedia.org/resource/Canal_\u0026_River_Trust\u003e . ?x \u003chttp://dbpedia.org/ontology/location\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "River Trust",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Canal_\u0026_River_Trust",
        "seq": "44,55"
      }
    ],
    "id": "73c600f7e8e647769990e32d95c69f46",
    "predicate mapping": [
      {
        "label": "own",
        "uri": "http://dbpedia.org/ontology/owner",
        "seq": "56,59",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "assets",
        "uri": "http://dbpedia.org/ontology/location",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Where is the stadium of west Papus football team ?",
    "SerialNumber": "1416",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/West_Papua_football_team\u003e \u003chttp://dbpedia.org/ontology/stadium\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "football",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/West_Papua_football_team",
        "seq": "999,1000"
      }
    ],
    "id": "19cf7033523648298b64a3b26c61d63c",
    "predicate mapping": [
      {
        "label": "stadium",
        "uri": "http://dbpedia.org/ontology/stadium",
        "seq": "13,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who are some authoritative persons on the matter of Megabalanus concinnus?",
    "SerialNumber": "1417",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Megabalanus_concinnus\u003e \u003chttp://dbpedia.org/ontology/binomialAuthority\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Megabalanus concinnus",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Megabalanus_concinnus",
        "seq": "52,73"
      }
    ],
    "id": "b6ebb2f75c0a40edb2c5f55a8490d32f",
    "predicate mapping": [
      {
        "label": "matter",
        "uri": "http://dbpedia.org/ontology/binomialAuthority",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "Who is the father of Barbara Ann Crancer?",
    "SerialNumber": "1418",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/child\u003e \u003chttp://dbpedia.org/resource/Barbara_Ann_Crancer\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Barbara Ann Crancer",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Barbara_Ann_Crancer",
        "seq": "21,40"
      }
    ],
    "id": "8ff0158616ba4528a7ed38a4e45df6bf",
    "predicate mapping": [
      {
        "label": "father",
        "uri": "http://dbpedia.org/ontology/child",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "Whose music composer is signed up with Sony Music Entertainment?",
    "SerialNumber": "1419",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/label\u003e \u003chttp://dbpedia.org/resource/Sony_Music_Entertainment\u003e . ?uri \u003chttp://dbpedia.org/ontology/musicComposer\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Sony Music Entertainment",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Sony_Music_Entertainment",
        "seq": "39,63"
      }
    ],
    "id": "9977743655db452280ad8b646cb1901d",
    "predicate mapping": [
      {
        "label": "signed",
        "uri": "http://dbpedia.org/property/label",
        "mappedBy": "word2vec"
      },
      {
        "label": "music composer",
        "uri": "http://dbpedia.org/ontology/musicComposer",
        "seq": "6,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "What are some given names for males?",
    "SerialNumber": "1420",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/gender\u003e \u003chttp://dbpedia.org/resource/Male\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "male",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Male",
        "seq": "30,34"
      }
    ],
    "id": "10b3153964714ccd855e09939b3fea93",
    "predicate mapping": [
      {
        "label": "names",
        "uri": "http://dbpedia.org/ontology/gender",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "Which famous person is born in Marlboro Township, New Jersey?",
    "SerialNumber": "1421",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/homeTown\u003e \u003chttp://dbpedia.org/resource/Marlboro_Township,_New_Jersey\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Marlboro Township, New Jersey",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Marlboro_Township,_New_Jersey",
        "seq": "31,60"
      }
    ],
    "id": "96c26048a5cc488796e2747513584530",
    "predicate mapping": [
      {
        "label": "born",
        "uri": "http://dbpedia.org/property/homeTown",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Saores de costa built a bridge over which river?",
    "SerialNumber": "1423",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/builder\u003e \u003chttp://dbpedia.org/resource/Soares_da_Costa\u003e . ?x \u003chttp://dbpedia.org/ontology/crosses\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Bridge\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "costa",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Soares_da_Costa",
        "seq": "999,1000"
      }
    ],
    "id": "9bc21c53162242ed83aa510e3a346546",
    "predicate mapping": [
      {
        "label": "built",
        "uri": "http://dbpedia.org/property/builder",
        "seq": "16,21",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "bridge over",
        "uri": "http://dbpedia.org/ontology/crosses",
        "seq": "24,35",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "bridge",
        "uri": "http://dbpedia.org/ontology/Bridge",
        "seq": "24,30",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Chestnut colored horses have won which races?",
    "SerialNumber": "1426",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/colour\u003e \u003chttp://dbpedia.org/resource/Chestnut_(coat)\u003e . ?x \u003chttp://dbpedia.org/ontology/honours\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Horse\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Chestnut",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Chestnut_(coat)",
        "seq": "0,8"
      }
    ],
    "id": "5b5d82f71a4c4d54989be43bbf8d4ce4",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/colour",
        "mappedBy": "word2vec"
      },
      {
        "uri": "http://dbpedia.org/ontology/honours",
        "mappedBy": "word2vec"
      },
      {
        "label": "horse",
        "uri": "http://dbpedia.org/ontology/Horse",
        "seq": "17,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Of how many battles is Chickasaw Campaign of 1736 consisted?",
    "SerialNumber": "1428",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Chickasaw_Campaign_of_1736\u003e \u003chttp://dbpedia.org/property/combatant\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Chickasaw Campaign of 1736",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Chickasaw_Campaign_of_1736",
        "seq": "23,49"
      }
    ],
    "id": "bdbf00bc5747405fb0687f5da283e0d8",
    "predicate mapping": [
      {
        "label": "consisted",
        "uri": "http://dbpedia.org/property/combatant",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "307",
    "question": "In what group Joe Jonas and Kevin Jonas were previously involved?",
    "SerialNumber": "1430",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/property/pastMembers\u003e \u003chttp://dbpedia.org/resource/Joe_Jonas\u003e . ?uri \u003chttp://dbpedia.org/property/pastMembers\u003e \u003chttp://dbpedia.org/resource/Kevin_Jonas\u003e . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Group\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Joe Jonas",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Joe_Jonas",
        "seq": "14,23"
      },
      {
        "label": "Kevin Jonas",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Kevin_Jonas",
        "seq": "28,39"
      }
    ],
    "id": "08365c0b072f40a6bc18e0f181f3518d",
    "predicate mapping": [
      {
        "label": "involved",
        "uri": "http://dbpedia.org/property/pastMembers",
        "mappedBy": "word2vec"
      },
      {
        "label": "involved",
        "uri": "http://dbpedia.org/property/pastMembers",
        "mappedBy": "word2vec"
      },
      {
        "label": "group",
        "uri": "http://dbpedia.org/ontology/Group",
        "seq": "8,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Where were Micheal Santos and Wendy Jaquet born?",
    "SerialNumber": "1435",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Michael_G._Santos\u003e \u003chttp://dbpedia.org/ontology/birthPlace\u003e ?uri. \u003chttp://dbpedia.org/resource/Wendy_Jaquet\u003e \u003chttp://dbpedia.org/property/placeOfBirth\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "santos",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Michael_G._Santos",
        "seq": "999,1000"
      },
      {
        "label": "Wendy Jaquet",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Wendy_Jaquet",
        "seq": "30,42"
      }
    ],
    "id": "24248e8d88324f82a0d46eb1449b6e7f",
    "predicate mapping": [
      {
        "label": "born",
        "uri": "http://dbpedia.org/ontology/birthPlace",
        "mappedBy": "word2vec"
      },
      {
        "uri": "http://dbpedia.org/property/placeOfBirth",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "111",
    "question": "Count the number of fileds of the scientist whose one of the interest is Chinese poetry ?",
    "SerialNumber": "1436",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/fields\u003e \u003chttp://dbpedia.org/resource/Chinese_poetry\u003e . ?x \u003chttp://dbpedia.org/property/fields\u003e ?uri }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Chinese poetry",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Chinese_poetry",
        "seq": "73,87"
      }
    ],
    "id": "6edb218446b8457c9a2ea5168ff7fb50",
    "predicate mapping": [
      {
        "label": "interest",
        "uri": "http://dbpedia.org/property/fields",
        "mappedBy": "word2vec"
      },
      {
        "label": "interest",
        "uri": "http://dbpedia.org/property/fields",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What borders the valley which falls under Lake County, Oregon?",
    "SerialNumber": "1440",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/municipality\u003e \u003chttp://dbpedia.org/resource/Lake_County,_Oregon\u003e . ?x \u003chttp://dbpedia.org/ontology/border\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Valley\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Lake County, Oregon",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Lake_County,_Oregon",
        "seq": "42,61"
      }
    ],
    "id": "2d048077fe044885a1f11a831df39ba7",
    "predicate mapping": [
      {
        "label": "falls",
        "uri": "http://dbpedia.org/ontology/municipality",
        "mappedBy": "word2vec"
      },
      {
        "label": "border",
        "uri": "http://dbpedia.org/ontology/border",
        "seq": "5,11",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "valley",
        "uri": "http://dbpedia.org/ontology/Valley",
        "seq": "17,23",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the television show created by CE Webber and also has actor named Companion?",
    "SerialNumber": "1441",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/starring\u003e \u003chttp://dbpedia.org/resource/Companion_(Doctor_Who)\u003e . ?uri \u003chttp://dbpedia.org/ontology/creator\u003e \u003chttp://dbpedia.org/resource/C._E._Webber\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Companion",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Companion_(Doctor_Who)",
        "seq": "71,80"
      },
      {
        "label": "webber",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/C._E._Webber",
        "seq": "999,1000"
      }
    ],
    "id": "297480b7b3fd43e7819b9eb234501795",
    "predicate mapping": [
      {
        "label": "actor",
        "uri": "http://dbpedia.org/ontology/starring",
        "seq": "59,64",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "created by",
        "uri": "http://dbpedia.org/ontology/creator",
        "seq": "25,35",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "9,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which company founded in New Mexico manufactures Visual Studio ?",
    "SerialNumber": "1442",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/foundation\u003e \u003chttp://dbpedia.org/resource/New_Mexico\u003e . ?uri \u003chttp://dbpedia.org/property/products\u003e \u003chttp://dbpedia.org/resource/Microsoft_Visual_Studio\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Company\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "New Mexico",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/New_Mexico",
        "seq": "25,35"
      },
      {
        "label": "Visual Studio",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Microsoft_Visual_Studio",
        "seq": "49,62"
      }
    ],
    "id": "6411e0733ae5460499b210f08633ce12",
    "predicate mapping": [
      {
        "label": "founded",
        "uri": "http://dbpedia.org/property/foundation",
        "seq": "14,21",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "manufactures",
        "uri": "http://dbpedia.org/property/products",
        "mappedBy": "word2vec"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company",
        "seq": "6,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which developer of Go was also the predecssor of X compnay ?",
    "SerialNumber": "1444",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Go_(programming_language)\u003e \u003chttp://dbpedia.org/ontology/developer\u003e ?uri. \u003chttp://dbpedia.org/resource/X_(company)\u003e \u003chttp://dbpedia.org/property/predecessor\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Go",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Go_(programming_language)",
        "seq": "19,21"
      },
      {
        "label": "X",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/X_(company)",
        "seq": "49,50"
      }
    ],
    "id": "6125911b7ddd4d3cbca857215c9e59c4",
    "predicate mapping": [
      {
        "label": "developer",
        "uri": "http://dbpedia.org/ontology/developer",
        "seq": "6,15",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "compnay",
        "uri": "http://dbpedia.org/property/predecessor",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What sports are played at universities affiliated by States Colleges and Universities athletic association?",
    "SerialNumber": "1445",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/affiliation\u003e \u003chttp://dbpedia.org/resource/State_Colleges_and_Universities_Athletic_Association\u003e . ?x \u003chttp://dbpedia.org/ontology/sport\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/University\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "universities association colleges athletic",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/State_Colleges_and_Universities_Athletic_Association",
        "seq": "999,1000"
      }
    ],
    "id": "31fb215b84b44ec5bed3253fc1734d5f",
    "predicate mapping": [
      {
        "label": "association",
        "uri": "http://dbpedia.org/ontology/affiliation",
        "mappedBy": "word2vec"
      },
      {
        "label": "sport",
        "uri": "http://dbpedia.org/ontology/sport",
        "seq": "5,10",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "universities",
        "uri": "http://dbpedia.org/ontology/University",
        "seq": "26,38",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Which team has had both Martin prochzka and garry unger as its players ?",
    "SerialNumber": "1446",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Martin_Procházka\u003e \u003chttp://dbpedia.org/ontology/formerTeam\u003e ?uri. \u003chttp://dbpedia.org/resource/Garry_Unger\u003e \u003chttp://dbpedia.org/ontology/formerTeam\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Martin_Procházka",
        "seq": "999,1000"
      },
      {
        "label": "garry unger",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Garry_Unger",
        "seq": "44,55"
      }
    ],
    "id": "0f8e4549023f4e80849e86009ce04679",
    "predicate mapping": [
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/formerTeam",
        "seq": "6,10",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/formerTeam",
        "seq": "6,10",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "What is that river whose source gets water from the Shannon cave?",
    "SerialNumber": "1447",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/inflow\u003e \u003chttp://dbpedia.org/resource/Shannon_Cave\u003e . ?uri \u003chttp://dbpedia.org/ontology/source\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/River\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Shannon cave",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Shannon_Cave",
        "seq": "52,64"
      }
    ],
    "id": "80f27d6316b847f999d784e02ce6eaf2",
    "predicate mapping": [
      {
        "label": "water",
        "uri": "http://dbpedia.org/property/inflow",
        "mappedBy": "word2vec"
      },
      {
        "label": "source",
        "uri": "http://dbpedia.org/ontology/source",
        "seq": "25,31",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River",
        "seq": "13,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "From what countries have people participated in the Excelsior Stakes?",
    "SerialNumber": "1451",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/race\u003e \u003chttp://dbpedia.org/resource/Excelsior_Stakes\u003e . ?x \u003chttp://dbpedia.org/ontology/birthPlace\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Excelsior Stakes",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Excelsior_Stakes",
        "seq": "52,68"
      }
    ],
    "id": "f38ad466348b4ec3ae7a9bcef89d6c51",
    "predicate mapping": [
      {
        "label": "participated",
        "uri": "http://dbpedia.org/property/race",
        "mappedBy": "word2vec"
      },
      {
        "label": "participated",
        "uri": "http://dbpedia.org/ontology/birthPlace",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "List some people who were opponents of someone who was died by hanging? ",
    "SerialNumber": "1453",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/deathCause\u003e \u003chttp://dbpedia.org/resource/Hanging\u003e . ?x \u003chttp://dbpedia.org/ontology/opponent\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "hanging",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Hanging",
        "seq": "63,70"
      }
    ],
    "id": "7372eadd97374e8b88eb962559850324",
    "predicate mapping": [
      {
        "label": "died",
        "uri": "http://dbpedia.org/property/deathCause",
        "mappedBy": "word2vec"
      },
      {
        "label": "opponent",
        "uri": "http://dbpedia.org/ontology/opponent",
        "seq": "26,34",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "died",
        "uri": "http://dbpedia.org/ontology/Person",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the company which produces Marionette and has key person as Edwin catmull ?",
    "SerialNumber": "1455",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/products\u003e \u003chttp://dbpedia.org/resource/Marionette_(software)\u003e . ?uri \u003chttp://dbpedia.org/property/keyPeople\u003e \u003chttp://dbpedia.org/resource/Edwin_Catmull\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Company\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Marionette",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Marionette_(software)",
        "seq": "32,42"
      },
      {
        "label": "Edwin catmull",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Edwin_Catmull",
        "seq": "65,78"
      }
    ],
    "id": "0a6bea353ecd405497f5ceab8b5d3dc3",
    "predicate mapping": [
      {
        "label": "person",
        "uri": "http://dbpedia.org/property/products",
        "mappedBy": "word2vec"
      },
      {
        "label": "key",
        "uri": "http://dbpedia.org/property/keyPeople",
        "seq": "51,54",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company",
        "seq": "9,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "In which cities can i find drinks similar to the IBC root beer?",
    "SerialNumber": "1459",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/related\u003e \u003chttp://dbpedia.org/resource/IBC_Root_Beer\u003e . ?x \u003chttp://dbpedia.org/property/locationCity\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Beverage\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "IBC root beer",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/IBC_Root_Beer",
        "seq": "49,62"
      }
    ],
    "id": "07606daaf7b34904923872ec6df2df2d",
    "predicate mapping": [
      {
        "label": "similar",
        "uri": "http://dbpedia.org/ontology/related",
        "mappedBy": "word2vec"
      },
      {
        "label": "similar",
        "uri": "http://dbpedia.org/property/locationCity",
        "mappedBy": "word2vec"
      },
      {
        "label": "similar",
        "uri": "http://dbpedia.org/ontology/Beverage",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who all have developed softwares for Unix Like OSes?",
    "SerialNumber": "1461",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/operatingSystem\u003e \u003chttp://dbpedia.org/resource/Unix-like\u003e . ?x \u003chttp://dbpedia.org/ontology/developer\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Software\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "unix like",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Unix-like",
        "seq": "999,1000"
      }
    ],
    "id": "881b5cae435244b2b7caadf0a38478e0",
    "predicate mapping": [
      {
        "label": "OSes",
        "uri": "http://dbpedia.org/property/operatingSystem",
        "mappedBy": "word2vec"
      },
      {
        "label": "developed",
        "uri": "http://dbpedia.org/ontology/developer",
        "seq": "13,22",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "software",
        "uri": "http://dbpedia.org/ontology/Software",
        "seq": "23,31",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who acted in the movies whose music is composed by Walter Scharf?",
    "SerialNumber": "1468",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/musicComposer\u003e \u003chttp://dbpedia.org/resource/Walter_Scharf\u003e . ?x \u003chttp://dbpedia.org/property/artist\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Walter Scharf",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Walter_Scharf",
        "seq": "51,64"
      }
    ],
    "id": "ed3ea597f28a40cbbf89b727e336a636",
    "predicate mapping": [
      {
        "label": "composed",
        "uri": "http://dbpedia.org/ontology/musicComposer",
        "seq": "39,47",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "music",
        "uri": "http://dbpedia.org/property/artist",
        "mappedBy": "word2vec"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "17,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "What are some primates?",
    "SerialNumber": "1470",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/order\u003e \u003chttp://dbpedia.org/resource/Primate\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "primates",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Primate",
        "seq": "14,22"
      }
    ],
    "id": "2eddea00fa824cbcaff727302f22ba39",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/order",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "406",
    "question": "How many companies were founded in Denton, texas?",
    "SerialNumber": "1472",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/part\u003e \u003chttp://dbpedia.org/resource/Denton_County,_Texas\u003e . ?uri \u003chttp://dbpedia.org/ontology/foundationPlace\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Company\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Denton",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Denton_County,_Texas",
        "seq": "35,41"
      }
    ],
    "id": "89ff0d71b0d54f428fbebcc8d9f151ee",
    "predicate mapping": [
      {
        "label": "texas",
        "uri": "http://dbpedia.org/ontology/part",
        "mappedBy": "word2vec"
      },
      {
        "label": "founded",
        "uri": "http://dbpedia.org/ontology/foundationPlace",
        "seq": "24,31",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "companies",
        "uri": "http://dbpedia.org/ontology/Company",
        "seq": "9,18",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "Count the different causes of death of Christians.",
    "SerialNumber": "1473",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/religion\u003e \u003chttp://dbpedia.org/resource/Christianity\u003e . ?x \u003chttp://dbpedia.org/ontology/deathCause\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Christians",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Christianity",
        "seq": "39,49"
      }
    ],
    "id": "7fc3026611784ca68abe446d974bf7fb",
    "predicate mapping": [
      {
        "label": "Count",
        "uri": "http://dbpedia.org/ontology/religion",
        "mappedBy": "word2vec"
      },
      {
        "label": "death",
        "uri": "http://dbpedia.org/ontology/deathCause",
        "seq": "30,35",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "List all the teams which have someone who played their first game for the Yankees?",
    "SerialNumber": "1474",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/debutteam\u003e \u003chttp://dbpedia.org/resource/New_York_Yankees\u003e . ?x \u003chttp://dbpedia.org/ontology/team\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "yankees",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/New_York_Yankees",
        "seq": "999,1000"
      }
    ],
    "id": "a68039a3908e4104a6c881f0b0d1bac7",
    "predicate mapping": [
      {
        "label": "teams",
        "uri": "http://dbpedia.org/property/debutteam",
        "seq": "13,18",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/team",
        "seq": "13,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the TV show whose cast member is Companion (Doctor Who) and is related to The Sarah Jane Adventures?",
    "SerialNumber": "1477",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/starring\u003e \u003chttp://dbpedia.org/resource/Companion_(Doctor_Who)\u003e . ?uri \u003chttp://dbpedia.org/ontology/related\u003e \u003chttp://dbpedia.org/resource/The_Sarah_Jane_Adventures\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Companion (Doctor Who)",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Companion_(Doctor_Who)",
        "seq": "38,60"
      },
      {
        "label": "The Sarah Jane Adventures",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Sarah_Jane_Adventures",
        "seq": "79,104"
      }
    ],
    "id": "bf76f57f7884400e8f11ba71e1d0787b",
    "predicate mapping": [
      {
        "label": "Companion",
        "uri": "http://dbpedia.org/ontology/starring",
        "mappedBy": "word2vec"
      },
      {
        "label": "related",
        "uri": "http://dbpedia.org/ontology/related",
        "seq": "68,75",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "12,16",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "In which sects were the aristocrats included, who were buried in Westminister abbey?",
    "SerialNumber": "1480",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/majorShrine\u003e \u003chttp://dbpedia.org/resource/Westminster_Abbey\u003e . ?x \u003chttp://dbpedia.org/property/veneratedIn\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Royalty\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Westminster_Abbey",
        "seq": "999,1000"
      }
    ],
    "id": "4e06115370044892bc19f3433446d6c1",
    "predicate mapping": [
      {
        "label": "abbey",
        "uri": "http://dbpedia.org/property/majorShrine",
        "mappedBy": "word2vec"
      },
      {
        "label": "abbey",
        "uri": "http://dbpedia.org/property/veneratedIn",
        "mappedBy": "word2vec"
      },
      {
        "label": "abbey",
        "uri": "http://dbpedia.org/ontology/Royalty",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Name the  people whose residence is Beverly Hills, California?",
    "SerialNumber": "1483",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/residence\u003e \u003chttp://dbpedia.org/resource/Beverly_Hills,_California\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Beverly Hills, California",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Beverly_Hills,_California",
        "seq": "36,61"
      }
    ],
    "id": "a98e065d3ca64e319fdeba4de8cd09f7",
    "predicate mapping": [
      {
        "label": "residence",
        "uri": "http://dbpedia.org/ontology/residence",
        "seq": "23,32",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "people",
        "uri": "http://dbpedia.org/ontology/Person",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What are some important people in NGOs headed by Donna Shalala?",
    "SerialNumber": "1489",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/keyPerson\u003e \u003chttp://dbpedia.org/resource/Donna_Shalala\u003e . ?x \u003chttp://dbpedia.org/property/keyPeople\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Non-ProfitOrganisation\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Donna Shalala",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Donna_Shalala",
        "seq": "49,62"
      }
    ],
    "id": "0fd3b4501cd4447d9cf64dd71b596c3c",
    "predicate mapping": [
      {
        "label": "headed",
        "uri": "http://dbpedia.org/ontology/keyPerson",
        "mappedBy": "word2vec"
      },
      {
        "label": "people",
        "uri": "http://dbpedia.org/property/keyPeople",
        "seq": "24,30",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "uri": "http://dbpedia.org/ontology/Non-ProfitOrganisation",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "How many relatives are there of the people who died in Germany?",
    "SerialNumber": "1492",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/placeOfDeath\u003e \u003chttp://dbpedia.org/resource/Germany\u003e . ?x \u003chttp://dbpedia.org/ontology/relation\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Germany",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Germany",
        "seq": "55,62"
      }
    ],
    "id": "75aa8a417fa547bab0e8895242554497",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/placeOfDeath",
        "mappedBy": "word2vec"
      },
      {
        "label": "died",
        "uri": "http://dbpedia.org/ontology/relation",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What is the city nearest to the islands in the Northwestern Hawaiian Islands?",
    "SerialNumber": "1499",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/archipelago\u003e \u003chttp://dbpedia.org/resource/Northwestern_Hawaiian_Islands\u003e . ?x \u003chttp://dbpedia.org/property/nearestCity\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Island\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Northwestern Hawaiian Islands",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Northwestern_Hawaiian_Islands",
        "seq": "47,76"
      }
    ],
    "id": "78af55409ffc4e32b981e66132116fdd",
    "predicate mapping": [
      {
        "label": "nearest",
        "uri": "http://dbpedia.org/property/archipelago",
        "mappedBy": "word2vec"
      },
      {
        "label": "nearest city",
        "uri": "http://dbpedia.org/property/nearestCity",
        "seq": "-1,11",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "island",
        "uri": "http://dbpedia.org/ontology/Island",
        "seq": "32,38",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Employees of Ottawa Citizen have come from which towns?",
    "SerialNumber": "1500",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/employer\u003e \u003chttp://dbpedia.org/resource/Ottawa_Citizen\u003e . ?x \u003chttp://dbpedia.org/property/homeTown\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ottawa Citizen",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Ottawa_Citizen",
        "seq": "13,27"
      }
    ],
    "id": "9efa225a4f6841b5a6304ffb5111a1ed",
    "predicate mapping": [
      {
        "label": "Employees",
        "uri": "http://dbpedia.org/ontology/employer",
        "mappedBy": "word2vec"
      },
      {
        "label": "towns",
        "uri": "http://dbpedia.org/property/homeTown",
        "seq": "49,54",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Name the televesion show which has artist named Christopher Franke ?",
    "SerialNumber": "1503",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/artist\u003e \u003chttp://dbpedia.org/resource/Christopher_Franke\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Christopher Franke",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Christopher_Franke",
        "seq": "48,66"
      }
    ],
    "id": "5f620b019a9d4b988b56f5b4f3d4666a",
    "predicate mapping": [
      {
        "label": "artist",
        "uri": "http://dbpedia.org/property/artist",
        "seq": "35,41",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "named",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Where are the philosophers from, whose main work is on the matter of feminism in Canada?",
    "SerialNumber": "1504",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/mainInterest\u003e \u003chttp://dbpedia.org/resource/Feminism_in_Canada\u003e . ?x \u003chttp://dbpedia.org/property/region\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Philosopher\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "feminism in Canada",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Feminism_in_Canada",
        "seq": "69,87"
      }
    ],
    "id": "a9026609cc0e4324bbc568de1e9c8f61",
    "predicate mapping": [
      {
        "label": "matter",
        "uri": "http://dbpedia.org/ontology/mainInterest",
        "mappedBy": "word2vec"
      },
      {
        "label": "matter",
        "uri": "http://dbpedia.org/property/region",
        "mappedBy": "word2vec"
      },
      {
        "label": "philosopher",
        "uri": "http://dbpedia.org/ontology/Philosopher",
        "seq": "14,25",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "In how many different places can I fnd Modern Architectural buildings?",
    "SerialNumber": "1505",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/architecturalStyle\u003e \u003chttp://dbpedia.org/resource/Modern_architecture\u003e . ?x \u003chttp://dbpedia.org/property/address\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Modern Architectura",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Modern_architecture",
        "seq": "39,58"
      }
    ],
    "id": "f0157809a86545afa67e70029372d9ef",
    "predicate mapping": [
      {
        "label": "architectural",
        "uri": "http://dbpedia.org/property/architecturalStyle",
        "seq": "-1,12",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "buildings",
        "uri": "http://dbpedia.org/property/address",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What are some musicians who have worked with Dean Ambrose?",
    "SerialNumber": "1508",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/associatedMusicalArtist\u003e \u003chttp://dbpedia.org/resource/Dean_Ambrose\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MusicalArtist\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Dean Ambrose",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Dean_Ambrose",
        "seq": "45,57"
      }
    ],
    "id": "cefb9d24941c422d97cf5b0e1d6a517f",
    "predicate mapping": [
      {
        "label": "worked",
        "uri": "http://dbpedia.org/ontology/associatedMusicalArtist",
        "mappedBy": "word2vec"
      },
      {
        "label": "musician",
        "uri": "http://dbpedia.org/ontology/MusicalArtist",
        "seq": "14,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Where did the president study, whose VP was Emilio Nez?",
    "SerialNumber": "1513",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/vicePresident\u003e \u003chttp://dbpedia.org/resource/Emilio_Núñez\u003e . ?x \u003chttp://dbpedia.org/ontology/almaMater\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Emilio Nez",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Emilio_Núñez",
        "seq": "44,54"
      }
    ],
    "id": "12c919e6fa354555971464cbeb961149",
    "predicate mapping": [
      {
        "label": "president",
        "uri": "http://dbpedia.org/ontology/vicePresident",
        "seq": "14,23",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "VP",
        "uri": "http://dbpedia.org/ontology/almaMater",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "405",
    "question": "In how many different places were the people born who are members of National Museum of Racing and Hall of Fame?",
    "SerialNumber": "1515",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/honours\u003e \u003chttp://dbpedia.org/resource/National_Museum_of_Racing_and_Hall_of_Fame\u003e . ?x \u003chttp://dbpedia.org/property/birthPlace\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Place\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "National Museum of Racing and Hall of Fame",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/National_Museum_of_Racing_and_Hall_of_Fame",
        "seq": "69,111"
      }
    ],
    "id": "3f08ba5c7c254c4391b45ec5efe64b44",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/honours",
        "mappedBy": "word2vec"
      },
      {
        "label": "places",
        "uri": "http://dbpedia.org/property/birthPlace",
        "seq": "22,28",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "place",
        "uri": "http://dbpedia.org/ontology/Place",
        "seq": "22,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Which military commander fought his battle at Fort Gadsen?",
    "SerialNumber": "1516",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/battle\u003e \u003chttp://dbpedia.org/resource/Fort_Gadsden\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/OfficeHolder\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Fort Gadsen",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Fort_Gadsden",
        "seq": "46,57"
      }
    ],
    "id": "095c674f34ba4e68bbf07397d12a0aa9",
    "predicate mapping": [
      {
        "label": "battle",
        "uri": "http://dbpedia.org/ontology/battle",
        "seq": "36,42",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "fought",
        "uri": "http://dbpedia.org/ontology/OfficeHolder",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Did Phillippe Cabot go to Columbia for studying?",
    "SerialNumber": "1517",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Phillippe_Cabot\u003e \u003chttp://dbpedia.org/ontology/university\u003e \u003chttp://dbpedia.org/resource/Columbia_University\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Phillippe Cabot",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Phillippe_Cabot",
        "seq": "4,19"
      },
      {
        "label": "Columbia",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Columbia_University",
        "seq": "26,34"
      }
    ],
    "id": "988903c3f615471fbd0fe2adeafdd518",
    "predicate mapping": [
      {
        "label": "studying",
        "uri": "http://dbpedia.org/ontology/university",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "Which rivers start at the Brower\u0027s Spring?",
    "SerialNumber": "1518",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/sourceMountain\u003e \u003chttp://dbpedia.org/resource/Brower\u0027s_Spring\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Brower\u0027s Spring",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Brower\u0027s_Spring",
        "seq": "26,41"
      }
    ],
    "id": "de86bc6a4b574f6ea396c7793787cb13",
    "predicate mapping": [
      {
        "label": "start",
        "uri": "http://dbpedia.org/ontology/sourceMountain",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "For which reasons have the ones born in Edinburgh, died?",
    "SerialNumber": "1519",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/placeOfBirth\u003e \u003chttp://dbpedia.org/resource/Edinburgh\u003e . ?x \u003chttp://dbpedia.org/ontology/deathCause\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Edinburgh",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Edinburgh",
        "seq": "40,49"
      }
    ],
    "id": "29718ea92a0c4340b8220c80488cd310",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/placeOfBirth",
        "mappedBy": "word2vec"
      },
      {
        "label": "died",
        "uri": "http://dbpedia.org/ontology/deathCause",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What games are played in Protestant schools?",
    "SerialNumber": "1520",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/schooltype\u003e \u003chttp://dbpedia.org/resource/Protestantism\u003e . ?x \u003chttp://dbpedia.org/ontology/sport\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/School\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "protestant",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Protestantism",
        "seq": "999,1000"
      }
    ],
    "id": "86af262ded0c418592ba045d1b609aab",
    "predicate mapping": [
      {
        "label": "schools",
        "uri": "http://dbpedia.org/property/schooltype",
        "seq": "36,43",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "Protestant",
        "uri": "http://dbpedia.org/ontology/sport",
        "mappedBy": "word2vec"
      },
      {
        "label": "school",
        "uri": "http://dbpedia.org/ontology/School",
        "seq": "36,42",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Which religion is followed by people in the family of Meadow Sopranos?",
    "SerialNumber": "1521",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/family\u003e \u003chttp://dbpedia.org/resource/Meadow_Soprano\u003e . ?x \u003chttp://dbpedia.org/ontology/religion\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Meadow Soprano",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Meadow_Soprano",
        "seq": "54,68"
      }
    ],
    "id": "fd0df4cfc4fc439696f39dd5d17dc45a",
    "predicate mapping": [
      {
        "label": "family",
        "uri": "http://dbpedia.org/property/family",
        "seq": "44,50",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion",
        "seq": "6,14",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "people",
        "uri": "http://dbpedia.org/ontology/Person",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which software uses windows as it\u0027s operating system and is written in C++ ?",
    "SerialNumber": "1523",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/operatingSystem\u003e \u003chttp://dbpedia.org/resource/Microsoft_Windows\u003e . ?uri \u003chttp://dbpedia.org/ontology/programmingLanguage\u003e \u003chttp://dbpedia.org/resource/C++\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Software\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "windows",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Microsoft_Windows",
        "seq": "999,1000"
      },
      {
        "label": "C++",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/C++",
        "seq": "71,74"
      }
    ],
    "id": "5aebd57c3f2140568f2473946d068238",
    "predicate mapping": [
      {
        "label": "operating system",
        "uri": "http://dbpedia.org/ontology/operatingSystem",
        "seq": "36,52",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "written",
        "uri": "http://dbpedia.org/ontology/programmingLanguage",
        "mappedBy": "word2vec"
      },
      {
        "label": "software",
        "uri": "http://dbpedia.org/ontology/Software",
        "seq": "6,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which draft team od Dale Mitchell is also the tenant of Master Card center /",
    "SerialNumber": "1524",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Dale_Mitchell_(ice_hockey)\u003e \u003chttp://dbpedia.org/ontology/draftTeam\u003e ?uri. \u003chttp://dbpedia.org/resource/MasterCard_Centre\u003e \u003chttp://dbpedia.org/property/tenants\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Dale Mitchell",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Dale_Mitchell_(ice_hockey)",
        "seq": "20,33"
      },
      {
        "label": "master",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/MasterCard_Centre",
        "seq": "999,1000"
      }
    ],
    "id": "65e7f354b21d4f9eb1902ef3435b1f59",
    "predicate mapping": [
      {
        "label": "draft team",
        "uri": "http://dbpedia.org/ontology/draftTeam",
        "seq": "6,16",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "tenant",
        "uri": "http://dbpedia.org/property/tenants",
        "seq": "46,52",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Paris Sisters singles are of which language?",
    "SerialNumber": "1527",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/musicalBand\u003e \u003chttp://dbpedia.org/resource/The_Paris_Sisters\u003e . ?x \u003chttp://dbpedia.org/property/language\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Single\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Paris Sisters",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/The_Paris_Sisters",
        "seq": "0,13"
      }
    ],
    "id": "26de4237807b43509a696a7aa4460ae3",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/musicalBand",
        "mappedBy": "word2vec"
      },
      {
        "label": "language",
        "uri": "http://dbpedia.org/property/language",
        "seq": "35,43",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "single",
        "uri": "http://dbpedia.org/ontology/Single",
        "seq": "14,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Which models were featured in Playboy Playmates 1954?",
    "SerialNumber": "1529",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/succeeded\u003e \u003chttp://dbpedia.org/resource/List_of_Playboy_Playmates_of_1954\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/PlayboyPlaymate\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "1954",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/List_of_Playboy_Playmates_of_1954",
        "seq": "48,52"
      }
    ],
    "id": "47af7157273449c9855fdc6169f53bc3",
    "predicate mapping": [
      {
        "label": "featured",
        "uri": "http://dbpedia.org/property/succeeded",
        "mappedBy": "word2vec"
      },
      {
        "label": "Playboy Playmate",
        "uri": "http://dbpedia.org/ontology/PlayboyPlaymate",
        "seq": "30,46",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Where is the sister station of Al Arabiya 99 located?",
    "SerialNumber": "1530",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/sisterStations\u003e \u003chttp://dbpedia.org/resource/Al_Arabiya_99\u003e . ?x \u003chttp://dbpedia.org/property/location\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/RadioStation\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Al Arabiya 99",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Al_Arabiya_99",
        "seq": "31,44"
      }
    ],
    "id": "8a6b193951864f6599a5793d574b5f02",
    "predicate mapping": [
      {
        "label": "station sister",
        "uri": "http://dbpedia.org/property/sisterStations",
        "seq": "-1,13",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "located",
        "uri": "http://dbpedia.org/property/location",
        "mappedBy": "word2vec"
      },
      {
        "label": "station",
        "uri": "http://dbpedia.org/ontology/RadioStation",
        "seq": "20,27",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Which cities are located around the sea into which the ionian flows?",
    "SerialNumber": "1533",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Ionian_Sea\u003e \u003chttp://dbpedia.org/ontology/outflow\u003e ?x . ?x \u003chttp://dbpedia.org/property/cities\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "ionian sea",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Ionian_Sea",
        "seq": "999,1000"
      }
    ],
    "id": "32fab0cef56a47c1998aeed3476af6d2",
    "predicate mapping": [
      {
        "label": "flows",
        "uri": "http://dbpedia.org/ontology/outflow",
        "seq": "62,67",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "cities",
        "uri": "http://dbpedia.org/property/cities",
        "seq": "6,12",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What team were the people drafted to, which are in the National Hockey League?",
    "SerialNumber": "1535",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/league\u003e \u003chttp://dbpedia.org/resource/National_Hockey_League\u003e . ?x \u003chttp://dbpedia.org/property/draftTeam\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "National Hockey League",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/National_Hockey_League",
        "seq": "55,77"
      }
    ],
    "id": "8b85636931964fff9dbdd3890ae49b79",
    "predicate mapping": [
      {
        "label": "League",
        "uri": "http://dbpedia.org/property/league",
        "seq": "71,77",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "drafted",
        "uri": "http://dbpedia.org/property/draftTeam",
        "seq": "26,33",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "people",
        "uri": "http://dbpedia.org/ontology/Person",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "Who all are buried in Arlington national cementary?",
    "SerialNumber": "1537",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/placeofburial\u003e \u003chttp://dbpedia.org/resource/Arlington_National_Cemetery\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Arlington",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Arlington_National_Cemetery",
        "seq": "22,31"
      }
    ],
    "id": "1470a63eb37e4e13bd56e77aa0ebfe3d",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/placeofburial",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Where did Jerry Tagge do his elementary schooling?",
    "SerialNumber": "1538",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Jerry_Tagge\u003e \u003chttp://dbpedia.org/property/highSchool\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jerry Tagge",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Jerry_Tagge",
        "seq": "10,21"
      }
    ],
    "id": "321d971403c844f7b7233e28728d227e",
    "predicate mapping": [
      {
        "label": "schooling",
        "uri": "http://dbpedia.org/property/highSchool",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "who manufactures the SHO V8?",
    "SerialNumber": "1539",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Ford_SHO_V8_engine\u003e \u003chttp://dbpedia.org/ontology/manufacturer\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "sho v8",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Ford_SHO_V8_engine",
        "seq": "999,1000"
      }
    ],
    "id": "c425a861d015448ea91b7fbda3cc03cf",
    "predicate mapping": [
      {
        "label": "manufactures",
        "uri": "http://dbpedia.org/ontology/manufacturer",
        "seq": "4,16",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which source of Water resources management in El Salvador is also the nation of the Sierra del Merendn?",
    "SerialNumber": "1540",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Water_resources_management_in_El_Salvador\u003e \u003chttp://dbpedia.org/property/sourceCountry\u003e ?uri. \u003chttp://dbpedia.org/resource/Sierra_del_Merendón\u003e \u003chttp://dbpedia.org/ontology/country\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Water resources management in El Salvador",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Water_resources_management_in_El_Salvador",
        "seq": "16,57"
      },
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Sierra_del_Merendón",
        "seq": "999,1000"
      }
    ],
    "id": "aa6d6a9311c148d4ad8adcf7211e37d0",
    "predicate mapping": [
      {
        "label": "source",
        "uri": "http://dbpedia.org/property/sourceCountry",
        "seq": "6,12",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "nation",
        "uri": "http://dbpedia.org/ontology/country",
        "seq": "70,76",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What awards are won by the screenwriter of Lucky You?",
    "SerialNumber": "1543",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Lucky_You_(film)\u003e \u003chttp://dbpedia.org/property/screenplay\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/award\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Lucky You",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Lucky_You_(film)",
        "seq": "43,52"
      }
    ],
    "id": "625ae94833b045a0a4baa5ce95d97900",
    "predicate mapping": [
      {
        "label": "screenwriter",
        "uri": "http://dbpedia.org/property/screenplay",
        "mappedBy": "word2vec"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/award",
        "seq": "5,11",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "In which areas can we find the networks owned by the govt of Mauritius?",
    "SerialNumber": "1546",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/owningCompany\u003e \u003chttp://dbpedia.org/resource/Government_of_Mauritius\u003e . ?x \u003chttp://dbpedia.org/property/broadcastArea\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/BroadcastNetwork\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Mauritius",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Government_of_Mauritius",
        "seq": "61,70"
      }
    ],
    "id": "871775efcda94304826009853e33cb49",
    "predicate mapping": [
      {
        "label": "govt",
        "uri": "http://dbpedia.org/ontology/owningCompany",
        "mappedBy": "word2vec"
      },
      {
        "label": "areas",
        "uri": "http://dbpedia.org/property/broadcastArea",
        "seq": "9,14",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "networks",
        "uri": "http://dbpedia.org/ontology/BroadcastNetwork",
        "seq": "31,39",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Which current players once played for Toronto argonauts?",
    "SerialNumber": "1547",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/formerTeam\u003e \u003chttp://dbpedia.org/resource/Toronto_Argonauts\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/AmericanFootballPlayer\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Toronto argonauts",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Toronto_Argonauts",
        "seq": "38,55"
      }
    ],
    "id": "7d3a614fe3294084b04b3d873b41c665",
    "predicate mapping": [
      {
        "label": "played",
        "uri": "http://dbpedia.org/ontology/formerTeam",
        "mappedBy": "word2vec"
      },
      {
        "label": "players",
        "uri": "http://dbpedia.org/ontology/AmericanFootballPlayer",
        "seq": "14,21",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "307",
    "question": "Which company builds Microsoft Azure and Microsoft Surface?",
    "SerialNumber": "1548",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/ontology/product\u003e \u003chttp://dbpedia.org/resource/Microsoft_Azure\u003e . ?uri \u003chttp://dbpedia.org/ontology/product\u003e \u003chttp://dbpedia.org/resource/Microsoft_Surface\u003e . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Company\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Microsoft Azure",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Microsoft_Azure",
        "seq": "21,36"
      },
      {
        "label": "Microsoft Surface",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Microsoft_Surface",
        "seq": "41,58"
      }
    ],
    "id": "7abda6e6bf294ae7a68497a1c4579a94",
    "predicate mapping": [
      {
        "label": "builds",
        "uri": "http://dbpedia.org/ontology/product",
        "mappedBy": "word2vec"
      },
      {
        "label": "builds",
        "uri": "http://dbpedia.org/ontology/product",
        "mappedBy": "word2vec"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company",
        "seq": "6,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which contnet license provider of Microsoft Office Picture Manager is also the game platform of Google Clud Connect ?",
    "SerialNumber": "1549",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Microsoft_Office_Picture_Manager\u003e \u003chttp://dbpedia.org/ontology/license\u003e ?uri. \u003chttp://dbpedia.org/resource/Google_Cloud_Connect\u003e \u003chttp://dbpedia.org/ontology/computingPlatform\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Microsoft Office Picture Manager",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Microsoft_Office_Picture_Manager",
        "seq": "34,66"
      },
      {
        "label": "connect google",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Google_Cloud_Connect",
        "seq": "999,1000"
      }
    ],
    "id": "13fd5d955c674770a707d5548231b9e1",
    "predicate mapping": [
      {
        "label": "license",
        "uri": "http://dbpedia.org/ontology/license",
        "seq": "14,21",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "game platform",
        "uri": "http://dbpedia.org/ontology/computingPlatform",
        "seq": "79,92",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who has rented the stadiums owned by Toronto?",
    "SerialNumber": "1553",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/owner\u003e \u003chttp://dbpedia.org/resource/Toronto\u003e . ?x \u003chttp://dbpedia.org/property/tenants\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Stadium\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Toronto",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Toronto",
        "seq": "37,44"
      }
    ],
    "id": "c58dabff921c4dc18a7525f173f9b73d",
    "predicate mapping": [
      {
        "label": "owned",
        "uri": "http://dbpedia.org/property/owner",
        "seq": "28,33",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "rented",
        "uri": "http://dbpedia.org/property/tenants",
        "mappedBy": "word2vec"
      },
      {
        "label": "stadium",
        "uri": "http://dbpedia.org/ontology/Stadium",
        "seq": "19,26",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "Who won a Norbert Wiener Award for Social and Professional Responsibility?",
    "SerialNumber": "1554",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/prizes\u003e \u003chttp://dbpedia.org/resource/Norbert_Wiener_Award_for_Social_and_Professional_Responsibility\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Norbert Wiener Award for Social and Professional Responsibility",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Norbert_Wiener_Award_for_Social_and_Professional_Responsibility",
        "seq": "10,73"
      }
    ],
    "id": "1ce8eb889dc948598061a205d9ac8292",
    "predicate mapping": [
      {
        "label": "won",
        "uri": "http://dbpedia.org/property/prizes",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What currencies are circulated in the countries where people speak French?",
    "SerialNumber": "1557",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/officialLanguage\u003e \u003chttp://dbpedia.org/resource/French_language\u003e . ?x \u003chttp://dbpedia.org/ontology/currency\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Location\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "French",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/French_language",
        "seq": "67,73"
      }
    ],
    "id": "ebde94c05f654d6b8a9dc3a159f815e9",
    "predicate mapping": [
      {
        "label": "speak",
        "uri": "http://dbpedia.org/ontology/officialLanguage",
        "mappedBy": "word2vec"
      },
      {
        "label": "currencies",
        "uri": "http://dbpedia.org/ontology/currency",
        "seq": "5,15",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "",
        "uri": "http://dbpedia.org/ontology/Location",
        "seq": "0,0",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which division of Serbia national team is also the region of Dobinsk Ice Cave ?",
    "SerialNumber": "1558",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Serbia_national_American_football_team\u003e \u003chttp://dbpedia.org/ontology/division\u003e ?uri. \u003chttp://dbpedia.org/resource/Dobšinská_Ice_Cave\u003e \u003chttp://dbpedia.org/ontology/region\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "national serbia team",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Serbia_national_American_football_team",
        "seq": "999,1000"
      },
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Dobšinská_Ice_Cave",
        "seq": "999,1000"
      }
    ],
    "id": "8d1df3c7e7af4760a3bf0077cd9afb56",
    "predicate mapping": [
      {
        "label": "division",
        "uri": "http://dbpedia.org/ontology/division",
        "seq": "6,14",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "region",
        "uri": "http://dbpedia.org/ontology/region",
        "seq": "51,57",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Name the common current team of the Shaun Thong and Kaannder ?",
    "SerialNumber": "1559",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Shaun_Thong\u003e \u003chttp://dbpedia.org/property/currentTeam\u003e ?uri. \u003chttp://dbpedia.org/resource/Kaan_Önder\u003e \u003chttp://dbpedia.org/property/currentTeam\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Shaun Thong",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Shaun_Thong",
        "seq": "36,47"
      },
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Kaan_Önder",
        "seq": "999,1000"
      }
    ],
    "id": "35a87d039618479c830132847e30888b",
    "predicate mapping": [
      {
        "label": "current team",
        "uri": "http://dbpedia.org/property/currentTeam",
        "seq": "16,28",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "current team",
        "uri": "http://dbpedia.org/property/currentTeam",
        "seq": "16,28",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "What is the television show which has cast member as Jason Carter and network is TNT (TV channel)?",
    "SerialNumber": "1560",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/starring\u003e \u003chttp://dbpedia.org/resource/Jason_Carter_(actor)\u003e . ?uri \u003chttp://dbpedia.org/property/network\u003e \u003chttp://dbpedia.org/resource/TNT_(TV_channel)\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jason Carter",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Jason_Carter_(actor)",
        "seq": "53,65"
      },
      {
        "label": "TNT (TV channel)",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/TNT_(TV_channel)",
        "seq": "81,97"
      }
    ],
    "id": "7a4d4807f7e44d8298c4c03226d00b85",
    "predicate mapping": [
      {
        "label": "TNT",
        "uri": "http://dbpedia.org/ontology/starring",
        "mappedBy": "word2vec"
      },
      {
        "label": "network",
        "uri": "http://dbpedia.org/property/network",
        "seq": "70,77",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "12,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who hold stocks in the bank which is located at 731 Lexington Avenue?",
    "SerialNumber": "1561",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/locationCity\u003e \u003chttp://dbpedia.org/resource/731_Lexington_Avenue\u003e . ?x \u003chttp://dbpedia.org/property/owner\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Bank\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "731 Lexington Avenue",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/731_Lexington_Avenue",
        "seq": "48,68"
      }
    ],
    "id": "4fa56fcae915405bb3dc2d843d72a39b",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/ontology/locationCity",
        "mappedBy": "word2vec"
      },
      {
        "label": "located",
        "uri": "http://dbpedia.org/property/owner",
        "mappedBy": "word2vec"
      },
      {
        "label": "bank",
        "uri": "http://dbpedia.org/ontology/Bank",
        "seq": "23,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "Who rented the stadium where the UFC 152 take place?",
    "SerialNumber": "1562",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/UFC_152\u003e \u003chttp://dbpedia.org/property/venue\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/tenant\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Stadium\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "UFC 152",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/UFC_152",
        "seq": "33,40"
      }
    ],
    "id": "99a59ee47bac4242b9a447372ed7862e",
    "predicate mapping": [
      {
        "label": "place",
        "uri": "http://dbpedia.org/property/venue",
        "mappedBy": "word2vec"
      },
      {
        "label": "place",
        "uri": "http://dbpedia.org/ontology/tenant",
        "mappedBy": "word2vec"
      },
      {
        "label": "stadium",
        "uri": "http://dbpedia.org/ontology/Stadium",
        "seq": "15,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Which company\u0027s cars are assembled in Iran?",
    "SerialNumber": "1563",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/assembly\u003e \u003chttp://dbpedia.org/resource/Iran\u003e . ?x \u003chttp://dbpedia.org/property/parentCompany\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Automobile\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Iran",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Iran",
        "seq": "38,42"
      }
    ],
    "id": "d734bb40ec504463855c4d255151750f",
    "predicate mapping": [
      {
        "label": "assembled",
        "uri": "http://dbpedia.org/property/assembly",
        "mappedBy": "word2vec"
      },
      {
        "label": "company\u0027s",
        "uri": "http://dbpedia.org/property/parentCompany",
        "seq": "6,15",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "assembled",
        "uri": "http://dbpedia.org/ontology/Automobile",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Which first driver of  European Grand Prix 1993 is also finished first in 1985 Portuguese Grand Prix ?",
    "SerialNumber": "1565",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/1993_European_Grand_Prix\u003e \u003chttp://dbpedia.org/property/firstDriver\u003e ?uri. \u003chttp://dbpedia.org/resource/1985_Portuguese_Grand_Prix\u003e \u003chttp://dbpedia.org/property/firstDriver\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "european grand prix",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/1993_European_Grand_Prix",
        "seq": "999,1000"
      },
      {
        "label": "1985 Portuguese Grand Prix",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/1985_Portuguese_Grand_Prix",
        "seq": "74,100"
      }
    ],
    "id": "d229a447683c43bdab10a891ceb42456",
    "predicate mapping": [
      {
        "label": "first driver",
        "uri": "http://dbpedia.org/property/firstDriver",
        "seq": "6,18",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "first driver",
        "uri": "http://dbpedia.org/property/firstDriver",
        "seq": "6,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What place is the birthplace of Vijay Chavan where Eka Lagnachi Teesri Goshta is located as well?",
    "SerialNumber": "1566",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Eka_Lagnachi_Teesri_Goshta\u003e \u003chttp://dbpedia.org/property/location\u003e ?uri. \u003chttp://dbpedia.org/resource/Vijay_Chavan\u003e \u003chttp://dbpedia.org/property/placeOfBirth\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Eka Lagnachi Teesri Goshta",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Eka_Lagnachi_Teesri_Goshta",
        "seq": "51,77"
      },
      {
        "label": "Vijay Chavan",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Vijay_Chavan",
        "seq": "32,44"
      }
    ],
    "id": "1df641d8a68b4fc085b0cb54337deb82",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/property/location",
        "mappedBy": "word2vec"
      },
      {
        "label": "place",
        "uri": "http://dbpedia.org/property/placeOfBirth",
        "seq": "5,10",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "In which fields are both Paul Demiville and Sylvain levi experts?",
    "SerialNumber": "1567",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Paul_Demiéville\u003e \u003chttp://dbpedia.org/property/fields\u003e ?uri. \u003chttp://dbpedia.org/resource/Sylvain_Lévi\u003e \u003chttp://dbpedia.org/property/fields\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Paul_Demiéville",
        "seq": "999,1000"
      },
      {
        "label": "sylvain",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Sylvain_Lévi",
        "seq": "999,1000"
      }
    ],
    "id": "e9036a6c1a674f64a85a400eb987393b",
    "predicate mapping": [
      {
        "label": "fields",
        "uri": "http://dbpedia.org/property/fields",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "fields",
        "uri": "http://dbpedia.org/property/fields",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Where were some people associated with Steve Winwood employed at?",
    "SerialNumber": "1570",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/associatedMusicalArtist\u003e \u003chttp://dbpedia.org/resource/Steve_Winwood\u003e . ?x \u003chttp://dbpedia.org/ontology/occupation\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Steve Winwood",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Steve_Winwood",
        "seq": "39,52"
      }
    ],
    "id": "754a3bc265ae4fe1833884e86aceb12b",
    "predicate mapping": [
      {
        "label": "associated",
        "uri": "http://dbpedia.org/ontology/associatedMusicalArtist",
        "seq": "23,33",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "employed",
        "uri": "http://dbpedia.org/ontology/occupation",
        "mappedBy": "word2vec"
      },
      {
        "label": "employed",
        "uri": "http://dbpedia.org/ontology/Person",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Who were involved in the wars where Jonathan Haskell battled?",
    "SerialNumber": "1572",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Jonathan_Haskell\u003e \u003chttp://dbpedia.org/property/battles\u003e ?x . ?x \u003chttp://dbpedia.org/property/combatant\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jonathan Haskell",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Jonathan_Haskell",
        "seq": "36,52"
      }
    ],
    "id": "f58241b0c93f471fb1b44686630eccf1",
    "predicate mapping": [
      {
        "label": "battled",
        "uri": "http://dbpedia.org/property/battles",
        "seq": "53,60",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "wars",
        "uri": "http://dbpedia.org/property/combatant",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Does the river shannon originate from Dowra?",
    "SerialNumber": "1573",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/River_Shannon\u003e \u003chttp://dbpedia.org/ontology/sourceMountain\u003e \u003chttp://dbpedia.org/resource/Dowra\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "river shannon",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/River_Shannon",
        "seq": "9,22"
      },
      {
        "label": "Dowra",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Dowra",
        "seq": "38,43"
      }
    ],
    "id": "950b70d788fa482b9c3855e96aebe7ac",
    "predicate mapping": [
      {
        "label": "originate",
        "uri": "http://dbpedia.org/ontology/sourceMountain",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Does Jevan Snead play as Quarterback?",
    "SerialNumber": "1575",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Jevan_Snead\u003e \u003chttp://dbpedia.org/property/position\u003e \u003chttp://dbpedia.org/resource/Quarterback\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jevan Snead",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Jevan_Snead",
        "seq": "5,16"
      },
      {
        "label": "Quarterback",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Quarterback",
        "seq": "25,36"
      }
    ],
    "id": "22fdf1b988044e3992540ed303e59a54",
    "predicate mapping": [
      {
        "label": "play",
        "uri": "http://dbpedia.org/property/position",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "307",
    "question": "Name the show whose jury consist of Jennifer Lopez and Randy Jackson?",
    "SerialNumber": "1577",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/property/judges\u003e \u003chttp://dbpedia.org/resource/Jennifer_Lopez\u003e . ?uri \u003chttp://dbpedia.org/property/judges\u003e \u003chttp://dbpedia.org/resource/Randy_Jackson\u003e . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jennifer Lopez",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Jennifer_Lopez",
        "seq": "36,50"
      },
      {
        "label": "Randy Jackson",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Randy_Jackson",
        "seq": "55,68"
      }
    ],
    "id": "d23c4c43e4f1484b99c8054143bf2438",
    "predicate mapping": [
      {
        "label": "consist",
        "uri": "http://dbpedia.org/property/judges",
        "mappedBy": "word2vec"
      },
      {
        "label": "consist",
        "uri": "http://dbpedia.org/property/judges",
        "mappedBy": "word2vec"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "9,13",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Is tahiti in the Society Islands achipelago?",
    "SerialNumber": "1578",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Tahiti\u003e \u003chttp://dbpedia.org/property/archipelago\u003e \u003chttp://dbpedia.org/resource/Society_Islands\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "tahiti",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Tahiti",
        "seq": "3,9"
      },
      {
        "label": "Society Islands",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Society_Islands",
        "seq": "17,32"
      }
    ],
    "id": "50f9b25a3d0c408fb2383283fe04a6d3",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/archipelago",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Where did the fashion designer study who died at the Stony Brook University Hospital?",
    "SerialNumber": "1580",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/deathPlace\u003e \u003chttp://dbpedia.org/resource/Stony_Brook_University_Hospital\u003e . ?x \u003chttp://dbpedia.org/property/education\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/FashionDesigner\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Stony Brook University Hospital",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Stony_Brook_University_Hospital",
        "seq": "53,84"
      }
    ],
    "id": "73b6ab3abf6f45c4b9e8d5139432cbc2",
    "predicate mapping": [
      {
        "label": "died",
        "uri": "http://dbpedia.org/ontology/deathPlace",
        "mappedBy": "word2vec"
      },
      {
        "label": "died",
        "uri": "http://dbpedia.org/property/education",
        "mappedBy": "word2vec"
      },
      {
        "label": "fashion designer",
        "uri": "http://dbpedia.org/ontology/FashionDesigner",
        "seq": "14,30",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Name few television shows\u0027s anchored by Ryan Seacrest?",
    "SerialNumber": "1581",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/presenter\u003e \u003chttp://dbpedia.org/resource/Ryan_Seacrest\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ryan Seacrest",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ryan_Seacrest",
        "seq": "40,53"
      }
    ],
    "id": "e47dfae4d0b64adf925f7961a27179fe",
    "predicate mapping": [
      {
        "label": "anchored",
        "uri": "http://dbpedia.org/ontology/presenter",
        "mappedBy": "word2vec"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "9,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "Give me some shows related to the ones created by Russell Davies",
    "SerialNumber": "1583",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/creator\u003e \u003chttp://dbpedia.org/resource/Russell_T_Davies\u003e . ?uri \u003chttp://dbpedia.org/ontology/related\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Russell Davies",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Russell_T_Davies",
        "seq": "50,64"
      }
    ],
    "id": "c75bb3f9a6a54bc995eec394e964b45e",
    "predicate mapping": [
      {
        "label": "created",
        "uri": "http://dbpedia.org/property/creator",
        "mappedBy": "word2vec"
      },
      {
        "label": "related",
        "uri": "http://dbpedia.org/ontology/related",
        "seq": "19,26",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "13,18",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "Where is the headquarters of the company which runs the Metro Blue Line in minnesota?",
    "SerialNumber": "1585",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Metro_Blue_Line_(Minnesota)\u003e \u003chttp://dbpedia.org/property/operator\u003e ?x . ?x \u003chttp://dbpedia.org/property/headquarters\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Organisation\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Metro Blue Line",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Metro_Blue_Line_(Minnesota)",
        "seq": "56,71"
      }
    ],
    "id": "9bd93e910858410cb64bf86b0f1a17f5",
    "predicate mapping": [
      {
        "label": "minnesota",
        "uri": "http://dbpedia.org/property/operator",
        "mappedBy": "word2vec"
      },
      {
        "label": "headquarters",
        "uri": "http://dbpedia.org/property/headquarters",
        "seq": "13,25",
        "mappedBy": "byLabelMatch"
      },
      {
        "uri": "http://dbpedia.org/ontology/Organisation",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Which religion\u0027s people are member of BJP?",
    "SerialNumber": "1587",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/party\u003e \u003chttp://dbpedia.org/resource/Bharatiya_Janata_Party\u003e . ?x \u003chttp://dbpedia.org/ontology/religion\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "BJP",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Bharatiya_Janata_Party",
        "seq": "38,41"
      }
    ],
    "id": "a561ecf7220a4ede974139e2dd42ed14",
    "predicate mapping": [
      {
        "label": "are",
        "uri": "http://dbpedia.org/property/party",
        "seq": "24,27",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion",
        "seq": "6,14",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "member",
        "uri": "http://dbpedia.org/ontology/Person",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "406",
    "question": "How many dishes are made with an ingredient belonging to the flowering plant species?",
    "SerialNumber": "1589",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/division\u003e \u003chttp://dbpedia.org/resource/Flowering_plant\u003e . ?uri \u003chttp://dbpedia.org/ontology/ingredient\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Food\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "flowering plant",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Flowering_plant",
        "seq": "61,76"
      }
    ],
    "id": "9e2d283b09f4408392359dbb0df6b0a3",
    "predicate mapping": [
      {
        "label": "species",
        "uri": "http://dbpedia.org/ontology/division",
        "mappedBy": "word2vec"
      },
      {
        "label": "ingredient",
        "uri": "http://dbpedia.org/ontology/ingredient",
        "seq": "33,43",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "species",
        "uri": "http://dbpedia.org/ontology/Food",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "Whose band members are known to play a PRS guitar?",
    "SerialNumber": "1591",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/notableInstruments\u003e \u003chttp://dbpedia.org/resource/PRS_Guitars\u003e . ?uri \u003chttp://dbpedia.org/property/currentMembers\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "PRS",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/PRS_Guitars",
        "seq": "39,42"
      }
    ],
    "id": "6d530d8977fd4a4cbc5f2cb377470f1d",
    "predicate mapping": [
      {
        "label": "guitar",
        "uri": "http://dbpedia.org/property/notableInstruments",
        "mappedBy": "word2vec"
      },
      {
        "label": "members",
        "uri": "http://dbpedia.org/property/currentMembers",
        "seq": "11,18",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Which is the city closest to both the Lodaiska site and the home of David w brown?",
    "SerialNumber": "1595",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/LoDaisKa_Site\u003e \u003chttp://dbpedia.org/ontology/nearestCity\u003e ?uri. \u003chttp://dbpedia.org/resource/David_W._Brown_House\u003e \u003chttp://dbpedia.org/ontology/nearestCity\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Lodaiska site",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/LoDaisKa_Site",
        "seq": "38,51"
      },
      {
        "label": "david brown",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/David_W._Brown_House",
        "seq": "999,1000"
      }
    ],
    "id": "2dc904ef3c0548be8f0e6094c1d29e82",
    "predicate mapping": [
      {
        "label": "city",
        "uri": "http://dbpedia.org/ontology/nearestCity",
        "seq": "13,17",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "city",
        "uri": "http://dbpedia.org/ontology/nearestCity",
        "seq": "13,17",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "7",
    "question": "Whose leaders are Willem-Alexander and Fredis Refunjol?",
    "SerialNumber": "1598",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/ontology/leader\u003e \u003chttp://dbpedia.org/resource/Willem-Alexander_of_the_Netherlands\u003e . ?uri \u003chttp://dbpedia.org/ontology/leader\u003e \u003chttp://dbpedia.org/resource/Fredis_Refunjol\u003e . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "willem-alexander",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Willem-Alexander_of_the_Netherlands",
        "seq": "999,1000"
      },
      {
        "label": "Fredis Refunjol",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Fredis_Refunjol",
        "seq": "39,54"
      }
    ],
    "id": "24fb6dd7a0ba43e2868b53007f2509e5",
    "predicate mapping": [
      {
        "label": "leader",
        "uri": "http://dbpedia.org/ontology/leader",
        "seq": "6,12",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "leader",
        "uri": "http://dbpedia.org/ontology/leader",
        "seq": "6,12",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "What are the airlines whose hub airport is operated by the Los Angeles World Airports?",
    "SerialNumber": "1604",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/operator\u003e \u003chttp://dbpedia.org/resource/Los_Angeles_World_Airports\u003e . ?uri \u003chttp://dbpedia.org/ontology/hubAirport\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Airline\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Los Angeles World Airports",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Los_Angeles_World_Airports",
        "seq": "59,85"
      }
    ],
    "id": "de301d41a10c41a3a2d59f1551e5d9ac",
    "predicate mapping": [
      {
        "label": "operated",
        "uri": "http://dbpedia.org/ontology/operator",
        "mappedBy": "word2vec"
      },
      {
        "label": "hub airport",
        "uri": "http://dbpedia.org/ontology/hubAirport",
        "seq": "28,39",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "airline",
        "uri": "http://dbpedia.org/ontology/Airline",
        "seq": "13,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is used as money for French Southern and Antarctic Lands is also the  product of the Karafarin Bank ?",
    "SerialNumber": "1605",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/French_Southern_and_Antarctic_Lands\u003e \u003chttp://dbpedia.org/ontology/currency\u003e ?uri. \u003chttp://dbpedia.org/resource/Karafarin_Bank\u003e \u003chttp://dbpedia.org/ontology/product\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "French Southern and Antarctic Lands",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/French_Southern_and_Antarctic_Lands",
        "seq": "26,61"
      },
      {
        "label": "Karafarin Bank",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Karafarin_Bank",
        "seq": "90,104"
      }
    ],
    "id": "53c6290f51ab4906877de90618901cdd",
    "predicate mapping": [
      {
        "label": "money",
        "uri": "http://dbpedia.org/ontology/currency",
        "mappedBy": "word2vec"
      },
      {
        "label": "product",
        "uri": "http://dbpedia.org/ontology/product",
        "seq": "75,82",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which office holder\u0027s resting place is in  Palo Alto, California and was succeeded by Adrian A. Basora ?",
    "SerialNumber": "1606",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/restingPlace\u003e \u003chttp://dbpedia.org/resource/Palo_Alto,_California\u003e . ?uri \u003chttp://dbpedia.org/property/successor\u003e \u003chttp://dbpedia.org/resource/Adrian_A._Basora\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/OfficeHolder\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Palo Alto, California",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Palo_Alto,_California",
        "seq": "43,64"
      },
      {
        "label": "Adrian A. Basora",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Adrian_A._Basora",
        "seq": "86,102"
      }
    ],
    "id": "e57b71a78a4646b0a3ce6c506fffc8e6",
    "predicate mapping": [
      {
        "label": "resting place",
        "uri": "http://dbpedia.org/property/restingPlace",
        "seq": "22,35",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "succeeded",
        "uri": "http://dbpedia.org/property/successor",
        "mappedBy": "word2vec"
      },
      {
        "label": "office holder",
        "uri": "http://dbpedia.org/ontology/OfficeHolder",
        "seq": "6,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "Name the companies which are in cities under Denzil Minnan Wong?",
    "SerialNumber": "1607",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/leaderName\u003e \u003chttp://dbpedia.org/resource/Denzil_Minnan-Wong\u003e . ?uri \u003chttp://dbpedia.org/ontology/locationCity\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Company\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Denzil Minnan Wong",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Denzil_Minnan-Wong",
        "seq": "45,63"
      }
    ],
    "id": "fa5fce44a7e64b59826c7dba9a288670",
    "predicate mapping": [
      {
        "label": "name",
        "uri": "http://dbpedia.org/property/leaderName",
        "seq": "-1,3",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "cities",
        "uri": "http://dbpedia.org/ontology/locationCity",
        "mappedBy": "word2vec"
      },
      {
        "label": "companies",
        "uri": "http://dbpedia.org/ontology/Company",
        "seq": "9,18",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Where is the successor of john waldo from?",
    "SerialNumber": "1611",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/successor\u003e \u003chttp://dbpedia.org/resource/John_B._Waldo\u003e . ?x \u003chttp://dbpedia.org/property/state\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "waldo john",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/John_B._Waldo",
        "seq": "999,1000"
      }
    ],
    "id": "3bb7be1a180e47e49b6cc14c06051021",
    "predicate mapping": [
      {
        "label": "successor",
        "uri": "http://dbpedia.org/property/successor",
        "seq": "13,22",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "john",
        "uri": "http://dbpedia.org/property/state",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which home town of Cline Buckens is the place of Death of Richard heron ?",
    "SerialNumber": "1612",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Céline_Buckens\u003e \u003chttp://dbpedia.org/ontology/hometown\u003e ?uri. \u003chttp://dbpedia.org/resource/Richard_Heron\u003e \u003chttp://dbpedia.org/property/placeOfDeath\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "buckens",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Céline_Buckens",
        "seq": "999,1000"
      },
      {
        "label": "Richard heron",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Richard_Heron",
        "seq": "58,71"
      }
    ],
    "id": "22eeb146aa1f41a4b0db6df5844b3fed",
    "predicate mapping": [
      {
        "label": "home town",
        "uri": "http://dbpedia.org/ontology/hometown",
        "seq": "6,15",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "place of Death",
        "uri": "http://dbpedia.org/property/placeOfDeath",
        "seq": "40,54",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Name some cars similar to the ones which are assembled at the Jefferson North Assembly?",
    "SerialNumber": "1613",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/assembly\u003e \u003chttp://dbpedia.org/resource/Jefferson_North_Assembly\u003e . ?x \u003chttp://dbpedia.org/property/related\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Automobile\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jefferson North Assembly",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Jefferson_North_Assembly",
        "seq": "62,86"
      }
    ],
    "id": "a501085682e8485f815a18df2b94a9a0",
    "predicate mapping": [
      {
        "label": "Assembly",
        "uri": "http://dbpedia.org/property/assembly",
        "seq": "78,86",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "at",
        "uri": "http://dbpedia.org/property/related",
        "seq": "55,57",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "assembled",
        "uri": "http://dbpedia.org/ontology/Automobile",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "Which awards are presented by the committee located in Stockholm?",
    "SerialNumber": "1614",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/headquarters\u003e \u003chttp://dbpedia.org/resource/Stockholm\u003e . ?uri \u003chttp://dbpedia.org/ontology/presenter\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Stockholm",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Stockholm",
        "seq": "55,64"
      }
    ],
    "id": "d7c077b487cb42b5869f72a3cd8d28be",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/property/headquarters",
        "mappedBy": "word2vec"
      },
      {
        "label": "presented",
        "uri": "http://dbpedia.org/ontology/presenter",
        "seq": "17,26",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "List everything in which saxophone players have been casted.",
    "SerialNumber": "1617",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/instrument\u003e \u003chttp://dbpedia.org/resource/Saxophone\u003e . ?uri \u003chttp://dbpedia.org/property/starring\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "saxophone",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Saxophone",
        "seq": "25,34"
      }
    ],
    "id": "e3bdce2f724541fc987861adb5d4e715",
    "predicate mapping": [
      {
        "label": "players",
        "uri": "http://dbpedia.org/ontology/instrument",
        "mappedBy": "word2vec"
      },
      {
        "label": "players",
        "uri": "http://dbpedia.org/property/starring",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who wrote Catch My soul ?",
    "SerialNumber": "1618",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Catch_My_Soul_(UK_stage_version)\u003e \u003chttp://dbpedia.org/ontology/author\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Catch My soul",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Catch_My_Soul_(UK_stage_version)",
        "seq": "10,23"
      }
    ],
    "id": "b25f5f59b6e44ff28e90122b0cd42a0f",
    "predicate mapping": [
      {
        "label": "wrote",
        "uri": "http://dbpedia.org/ontology/author",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "405",
    "question": "How many bands collaborated with artists who signed up with EMI?",
    "SerialNumber": "1620",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/recordLabel\u003e \u003chttp://dbpedia.org/resource/EMI\u003e . ?x \u003chttp://dbpedia.org/ontology/associatedMusicalArtist\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Band\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "EMI",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/EMI",
        "seq": "60,63"
      }
    ],
    "id": "0db563660d024f5db42e2ff6ddb9f966",
    "predicate mapping": [
      {
        "label": "signed",
        "uri": "http://dbpedia.org/ontology/recordLabel",
        "mappedBy": "word2vec"
      },
      {
        "label": "artists",
        "uri": "http://dbpedia.org/ontology/associatedMusicalArtist",
        "seq": "33,40",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "band",
        "uri": "http://dbpedia.org/ontology/Band",
        "seq": "9,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Where did the president study, who\u0027s the president of Besiktas JK?",
    "SerialNumber": "1621",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Beşiktaş_JK_(wheelchair_basketball)\u003e \u003chttp://dbpedia.org/ontology/president\u003e ?x . ?x \u003chttp://dbpedia.org/property/almaMater\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Besiktas JK",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Beşiktaş_JK_(wheelchair_basketball)",
        "seq": "54,65"
      }
    ],
    "id": "83858d645fa74a698c361696ed79496f",
    "predicate mapping": [
      {
        "label": "president",
        "uri": "http://dbpedia.org/ontology/president",
        "seq": "14,23",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "who\u0027s",
        "uri": "http://dbpedia.org/property/almaMater",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "In which places can we find the people won the Project Runaway Canada?",
    "SerialNumber": "1623",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/award\u003e \u003chttp://dbpedia.org/resource/Project_Runway_Canada\u003e . ?x \u003chttp://dbpedia.org/ontology/residence\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Canada",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Project_Runway_Canada",
        "seq": "63,69"
      }
    ],
    "id": "d30be769b8ad4830a948b6b989b27b12",
    "predicate mapping": [
      {
        "label": "Runaway",
        "uri": "http://dbpedia.org/ontology/award",
        "mappedBy": "word2vec"
      },
      {
        "label": "Runaway",
        "uri": "http://dbpedia.org/ontology/residence",
        "mappedBy": "word2vec"
      },
      {
        "label": "Runaway",
        "uri": "http://dbpedia.org/ontology/Person",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "How many factions were fighting in the wars where Blue Jacket was a commander?",
    "SerialNumber": "1624",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/commander\u003e \u003chttp://dbpedia.org/resource/Blue_Jacket\u003e . ?x \u003chttp://dbpedia.org/property/combatant\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Blue Jacket",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Blue_Jacket",
        "seq": "50,61"
      }
    ],
    "id": "b8223f04582b4b20a1089758559d531f",
    "predicate mapping": [
      {
        "label": "commander",
        "uri": "http://dbpedia.org/property/commander",
        "seq": "68,77",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "wars",
        "uri": "http://dbpedia.org/property/combatant",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "How many record labels publish works of Jazz fusion?",
    "SerialNumber": "1626",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/genre\u003e \u003chttp://dbpedia.org/resource/Jazz_fusion\u003e . ?x \u003chttp://dbpedia.org/ontology/recordLabel\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jazz fusion",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Jazz_fusion",
        "seq": "40,51"
      }
    ],
    "id": "7355543eae974888a7f58b4d3f0b935f",
    "predicate mapping": [
      {
        "label": "works",
        "uri": "http://dbpedia.org/ontology/genre",
        "mappedBy": "word2vec"
      },
      {
        "label": "record label",
        "uri": "http://dbpedia.org/ontology/recordLabel",
        "seq": "9,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Where was the person born whose successor was Le Hong Phong?",
    "SerialNumber": "1627",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/successor\u003e \u003chttp://dbpedia.org/resource/Lê_Hồng_Phong\u003e . ?x \u003chttp://dbpedia.org/property/birthPlace\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Le Hong Phong",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Lê_Hồng_Phong",
        "seq": "46,59"
      }
    ],
    "id": "6593b0b0d9e445f68fe8d0c7cb6deb32",
    "predicate mapping": [
      {
        "label": "successor",
        "uri": "http://dbpedia.org/property/successor",
        "seq": "32,41",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "born",
        "uri": "http://dbpedia.org/property/birthPlace",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What is the former team of the Athens borned basketball players ?",
    "SerialNumber": "1633",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/birthPlace\u003e \u003chttp://dbpedia.org/resource/Athens\u003e . ?x \u003chttp://dbpedia.org/ontology/formerTeam\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/BasketballPlayer\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Athens",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Athens",
        "seq": "31,37"
      }
    ],
    "id": "9babaa2d96e64f1db42f3fb1df04a4bb",
    "predicate mapping": [
      {
        "label": "borned",
        "uri": "http://dbpedia.org/property/birthPlace",
        "mappedBy": "word2vec"
      },
      {
        "label": "former team",
        "uri": "http://dbpedia.org/ontology/formerTeam",
        "seq": "12,23",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "basketball player",
        "uri": "http://dbpedia.org/ontology/BasketballPlayer",
        "seq": "45,62",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the television show directed by Simon Fuller and judged by Jennifier Lopez ?",
    "SerialNumber": "1636",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/creator\u003e \u003chttp://dbpedia.org/resource/Simon_Fuller\u003e . ?uri \u003chttp://dbpedia.org/property/judges\u003e \u003chttp://dbpedia.org/resource/Jennifer_Lopez\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Simon Fuller",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Simon_Fuller",
        "seq": "37,49"
      },
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Jennifer_Lopez",
        "seq": "999,1000"
      }
    ],
    "id": "840cc802cdf04e8eac6a2f572777b0fa",
    "predicate mapping": [
      {
        "label": "Lopez",
        "uri": "http://dbpedia.org/property/creator",
        "mappedBy": "word2vec"
      },
      {
        "label": "judged",
        "uri": "http://dbpedia.org/property/judges",
        "seq": "54,60",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "9,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "307",
    "question": "Give me some shows owned by BBC one and BBC hd?",
    "SerialNumber": "1637",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/ontology/network\u003e \u003chttp://dbpedia.org/resource/BBC_One\u003e . ?uri \u003chttp://dbpedia.org/ontology/network\u003e \u003chttp://dbpedia.org/resource/BBC_HD\u003e . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "BBC one",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/BBC_One",
        "seq": "28,35"
      },
      {
        "label": "BBC hd",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/BBC_HD",
        "seq": "40,46"
      }
    ],
    "id": "0130934ed9434be69d31f035e062979a",
    "predicate mapping": [
      {
        "label": "owned",
        "uri": "http://dbpedia.org/ontology/network",
        "mappedBy": "word2vec"
      },
      {
        "label": "owned",
        "uri": "http://dbpedia.org/ontology/network",
        "mappedBy": "word2vec"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "13,18",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Where do the rivers from greater London flow into?",
    "SerialNumber": "1639",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/sourceRegion\u003e \u003chttp://dbpedia.org/resource/Greater_London\u003e . ?x \u003chttp://dbpedia.org/property/mouthLocation\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/River\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "greater London",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Greater_London",
        "seq": "25,39"
      }
    ],
    "id": "f81e7f1fee7f4af2a3dcb722750b7137",
    "predicate mapping": [
      {
        "label": "flow",
        "uri": "http://dbpedia.org/property/sourceRegion",
        "mappedBy": "word2vec"
      },
      {
        "label": "flow",
        "uri": "http://dbpedia.org/property/mouthLocation",
        "mappedBy": "word2vec"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River",
        "seq": "13,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "List out the people who are related to the relatives of Jared Kushner ?",
    "SerialNumber": "1640",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Jared_Kushner\u003e \u003chttp://dbpedia.org/ontology/relation\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/relation\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jared Kushner",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Jared_Kushner",
        "seq": "56,69"
      }
    ],
    "id": "2c1e5203a1b34f32b1e7d70c4086c339",
    "predicate mapping": [
      {
        "label": "relatives",
        "uri": "http://dbpedia.org/ontology/relation",
        "mappedBy": "word2vec"
      },
      {
        "label": "relatives",
        "uri": "http://dbpedia.org/ontology/relation",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Was Buzz Williams the headcoach of the Marquette Golden Eagles mens team?",
    "SerialNumber": "1641",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/2013–14_Marquette_Golden_Eagles_men\u0027s_basketball_team\u003e \u003chttp://dbpedia.org/property/headcoach\u003e \u003chttp://dbpedia.org/resource/Buzz_Williams\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "marquette golden eagles team",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/2013–14_Marquette_Golden_Eagles_men\u0027s_basketball_team",
        "seq": "999,1000"
      },
      {
        "label": "Buzz Williams",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Buzz_Williams",
        "seq": "4,17"
      }
    ],
    "id": "a3791b21aca7437b82671f3c7f08d07d",
    "predicate mapping": [
      {
        "label": "headcoach",
        "uri": "http://dbpedia.org/property/headcoach",
        "seq": "22,31",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Under which US president was a politician in opposition of John G Schmitz?",
    "SerialNumber": "1643",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/opponent\u003e \u003chttp://dbpedia.org/resource/John_G._Schmitz\u003e . ?x \u003chttp://dbpedia.org/ontology/incumbent\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Politician\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "schmitz john",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/John_G._Schmitz",
        "seq": "999,1000"
      }
    ],
    "id": "9833117a26d84052ac213535b41a7fd9",
    "predicate mapping": [
      {
        "label": "Schmitz",
        "uri": "http://dbpedia.org/property/opponent",
        "mappedBy": "word2vec"
      },
      {
        "label": "Schmitz",
        "uri": "http://dbpedia.org/ontology/incumbent",
        "mappedBy": "word2vec"
      },
      {
        "label": "politician",
        "uri": "http://dbpedia.org/ontology/Politician",
        "seq": "31,41",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Whcih creator of Theme Time Radio Hour also created subsequent work of Moondoc Matinee ?",
    "SerialNumber": "1644",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Moondog_Matinee\u003e \u003chttp://dbpedia.org/ontology/subsequentWork\u003e ?uri. \u003chttp://dbpedia.org/resource/Theme_Time_Radio_Hour\u003e \u003chttp://dbpedia.org/property/creator\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "matinee",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Moondog_Matinee",
        "seq": "999,1000"
      },
      {
        "label": "Theme Time Radio Hour",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Theme_Time_Radio_Hour",
        "seq": "17,38"
      }
    ],
    "id": "670aa15c90d24e1e973eaeb3581ebacd",
    "predicate mapping": [
      {
        "label": "subsequent work",
        "uri": "http://dbpedia.org/ontology/subsequentWork",
        "seq": "52,67",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "creator",
        "uri": "http://dbpedia.org/property/creator",
        "seq": "6,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "Who was the United States president who also served as a governor of Indiana Territory?",
    "SerialNumber": "1647",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/branch\u003e \u003chttp://dbpedia.org/resource/Indiana_Territory\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Indiana Territory",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Indiana_Territory",
        "seq": "69,86"
      }
    ],
    "id": "1b3cf7cd113c4026ae73b7cb071d05d8",
    "predicate mapping": [
      {
        "label": "governor",
        "uri": "http://dbpedia.org/property/branch",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who built the Ford Y-block engine ?",
    "SerialNumber": "1648",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Ford_Y-block_engine\u003e \u003chttp://dbpedia.org/ontology/manufacturer\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ford Y-block engine",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Ford_Y-block_engine",
        "seq": "14,33"
      }
    ],
    "id": "9682bc0632d6403e9e533df9f9bee572",
    "predicate mapping": [
      {
        "label": "built",
        "uri": "http://dbpedia.org/ontology/manufacturer",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "Who produced the Pixar Image Computer?",
    "SerialNumber": "1653",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/product\u003e \u003chttp://dbpedia.org/resource/Pixar_Image_Computer\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Pixar Image Computer",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Pixar_Image_Computer",
        "seq": "17,37"
      }
    ],
    "id": "00fb7cf892ed4de0a25b3d8c04526470",
    "predicate mapping": [
      {
        "label": "produced",
        "uri": "http://dbpedia.org/ontology/product",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the royalty whose daughter was Cleopatra V and was married to Ptolemy XIV of Egypt?",
    "SerialNumber": "1654",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/mother\u003e \u003chttp://dbpedia.org/resource/Cleopatra_V_of_Egypt\u003e . ?uri \u003chttp://dbpedia.org/ontology/spouse\u003e \u003chttp://dbpedia.org/resource/Ptolemy_XIV_of_Egypt\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Royalty\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "cleopatra egypt",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Cleopatra_V_of_Egypt",
        "seq": "999,1000"
      },
      {
        "label": "Ptolemy XIV of Egypt",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ptolemy_XIV_of_Egypt",
        "seq": "67,87"
      }
    ],
    "id": "7ffdaaa1870e4b449f08ef6591198dfb",
    "predicate mapping": [
      {
        "label": "Cleopatra",
        "uri": "http://dbpedia.org/property/mother",
        "mappedBy": "word2vec"
      },
      {
        "label": "married to",
        "uri": "http://dbpedia.org/ontology/spouse",
        "seq": "56,66",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "royalty",
        "uri": "http://dbpedia.org/ontology/Royalty",
        "seq": "9,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What are some islands in the bahamas?",
    "SerialNumber": "1655",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/archipelago\u003e \u003chttp://dbpedia.org/resource/The_Bahamas\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Island\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "bahamas",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/The_Bahamas",
        "seq": "29,36"
      }
    ],
    "id": "8ef554c7762349339b7cecc0fdf1bf1e",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/archipelago",
        "mappedBy": "word2vec"
      },
      {
        "label": "island",
        "uri": "http://dbpedia.org/ontology/Island",
        "seq": "14,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Was mother teresa beatified by John Paul the second?",
    "SerialNumber": "1656",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Mother_Teresa\u003e \u003chttp://dbpedia.org/property/beatifiedBy\u003e \u003chttp://dbpedia.org/resource/Pope_John_Paul_II\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "mother teresa",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Mother_Teresa",
        "seq": "4,17"
      },
      {
        "label": "paul john",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Pope_John_Paul_II",
        "seq": "999,1000"
      }
    ],
    "id": "dcf35e72e0e94e41bde4a681a72c6e01",
    "predicate mapping": [
      {
        "label": "beatified by",
        "uri": "http://dbpedia.org/property/beatifiedBy",
        "seq": "18,30",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "7",
    "question": "Which  municipality is neighbored by Cologny and Chne-Bougeries?",
    "SerialNumber": "1661",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/property/neighboringMunicipalities\u003e \u003chttp://dbpedia.org/resource/Cologny\u003e . ?uri \u003chttp://dbpedia.org/property/neighboringMunicipalities\u003e \u003chttp://dbpedia.org/resource/Chêne-Bougeries\u003e . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Cologny",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Cologny",
        "seq": "37,44"
      },
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Chêne-Bougeries",
        "seq": "999,1000"
      }
    ],
    "id": "a1b9bccd83024859887b1a4045cc1240",
    "predicate mapping": [
      {
        "label": "municipality",
        "uri": "http://dbpedia.org/property/neighboringMunicipalities",
        "seq": "7,19",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "municipality",
        "uri": "http://dbpedia.org/property/neighboringMunicipalities",
        "seq": "7,19",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Which common prime minister did Graham Richardson and Bon McMullan serve ?",
    "SerialNumber": "1664",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Graham_Richardson\u003e \u003chttp://dbpedia.org/ontology/primeMinister\u003e ?uri. \u003chttp://dbpedia.org/resource/Bob_McMullan\u003e \u003chttp://dbpedia.org/ontology/primeMinister\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Graham Richardson",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Graham_Richardson",
        "seq": "32,49"
      },
      {
        "label": "mcmullan",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Bob_McMullan",
        "seq": "999,1000"
      }
    ],
    "id": "787190bf105a421a9ce3d9c43676b4e9",
    "predicate mapping": [
      {
        "label": "prime minister",
        "uri": "http://dbpedia.org/ontology/primeMinister",
        "seq": "13,27",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "prime minister",
        "uri": "http://dbpedia.org/ontology/primeMinister",
        "seq": "13,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Where does the Giannis Alafouzos originate?",
    "SerialNumber": "1666",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Giannis_Alafouzos\u003e \u003chttp://dbpedia.org/ontology/stateOfOrigin\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Giannis Alafouzos",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Giannis_Alafouzos",
        "seq": "15,32"
      }
    ],
    "id": "7d551dbcd79d403490a5b99b491823dd",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/stateOfOrigin",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "What awards have been given to Screenwriters?",
    "SerialNumber": "1670",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/occupation\u003e \u003chttp://dbpedia.org/resource/Screenwriter\u003e . ?x \u003chttp://dbpedia.org/property/awards\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Screenwriter",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Screenwriter",
        "seq": "31,43"
      }
    ],
    "id": "1f0727912ac34c55b9900d1943f9a7af",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/occupation",
        "mappedBy": "word2vec"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards",
        "seq": "5,11",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What companies are located in toronto?",
    "SerialNumber": "1672",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/locationCity\u003e \u003chttp://dbpedia.org/resource/Toronto\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Company\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "toronto",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Toronto",
        "seq": "30,37"
      }
    ],
    "id": "861f142fbb834b069b0085c225e1a899",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/ontology/locationCity",
        "mappedBy": "word2vec"
      },
      {
        "label": "companies",
        "uri": "http://dbpedia.org/ontology/Company",
        "seq": "5,14",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the city of the Maine School of Science and Mathematics is also the resting place of Charles A. Boutelle ?",
    "SerialNumber": "1674",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Maine_School_of_Science_and_Mathematics\u003e \u003chttp://dbpedia.org/ontology/authority\u003e ?uri. \u003chttp://dbpedia.org/resource/Charles_A._Boutelle\u003e \u003chttp://dbpedia.org/property/restingplace\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Maine School of Science and Mathematics",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Maine_School_of_Science_and_Mathematics",
        "seq": "24,63"
      },
      {
        "label": "Charles A. Boutelle",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Charles_A._Boutelle",
        "seq": "93,112"
      }
    ],
    "id": "6d79d046defe4cb683dddbf548a4dbc1",
    "predicate mapping": [
      {
        "label": "city",
        "uri": "http://dbpedia.org/ontology/authority",
        "mappedBy": "word2vec"
      },
      {
        "label": "resting place",
        "uri": "http://dbpedia.org/property/restingplace",
        "seq": "76,89",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which Harris County based company is a subsidiary of Tandem Computers?",
    "SerialNumber": "1675",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/locationCity\u003e \u003chttp://dbpedia.org/resource/Harris_County,_Texas\u003e . ?uri \u003chttp://dbpedia.org/ontology/subsidiary\u003e \u003chttp://dbpedia.org/resource/Tandem_Computers\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Company\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "harris county",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Harris_County,_Texas",
        "seq": "999,1000"
      },
      {
        "label": "Tandem Computers",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Tandem_Computers",
        "seq": "53,69"
      }
    ],
    "id": "d1bcc9750c134471969808b985308178",
    "predicate mapping": [
      {
        "label": "based",
        "uri": "http://dbpedia.org/ontology/locationCity",
        "mappedBy": "word2vec"
      },
      {
        "label": "subsidiary",
        "uri": "http://dbpedia.org/ontology/subsidiary",
        "seq": "39,49",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company",
        "seq": "26,33",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "8",
    "question": "Which spouse of Ptolemy XIV had a mother named Ptolemy XII auletes ?",
    "SerialNumber": "1678",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/parent\u003e \u003chttp://dbpedia.org/resource/Ptolemy_XII_Auletes\u003e . ?uri \u003chttp://dbpedia.org/ontology/spouse\u003e \u003chttp://dbpedia.org/resource/Ptolemy_XIV_of_Egypt\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ptolemy XII auletes",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ptolemy_XII_Auletes",
        "seq": "47,66"
      },
      {
        "label": "ptolemy xiv",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Ptolemy_XIV_of_Egypt",
        "seq": "999,1000"
      }
    ],
    "id": "17f767e9a51b4a3d935fa194d0de2f8d",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/parent",
        "mappedBy": "word2vec"
      },
      {
        "label": "spouse",
        "uri": "http://dbpedia.org/ontology/spouse",
        "seq": "6,12",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "401",
    "question": "How many corporations were founded in Texas?",
    "SerialNumber": "1682",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/ontology/foundationPlace\u003e \u003chttp://dbpedia.org/resource/Texas\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Company\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Texas",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Texas",
        "seq": "38,43"
      }
    ],
    "id": "0adae92fcd52472bb68050b2bbb93c44",
    "predicate mapping": [
      {
        "label": "founded",
        "uri": "http://dbpedia.org/ontology/foundationPlace",
        "seq": "27,34",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "corporations",
        "uri": "http://dbpedia.org/ontology/Company",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "List some teams for which someone who has played as a defender, now plays?",
    "SerialNumber": "1687",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/position\u003e \u003chttp://dbpedia.org/resource/Defenceman\u003e . ?x \u003chttp://dbpedia.org/ontology/team\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "now",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Defenceman",
        "seq": "64,67"
      }
    ],
    "id": "b387a0ed9c02429981b6d661bfe7d779",
    "predicate mapping": [
      {
        "label": "plays",
        "uri": "http://dbpedia.org/property/position",
        "mappedBy": "word2vec"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/team",
        "seq": "10,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "In which place is the company which is known for Barbara bestor located ?",
    "SerialNumber": "1688",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Barbara_Bestor\u003e \u003chttp://dbpedia.org/property/knownFor\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/location\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Company\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Barbara bestor",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Barbara_Bestor",
        "seq": "49,63"
      }
    ],
    "id": "81a19f6c64e14ffeb7f3f28e34230331",
    "predicate mapping": [
      {
        "label": "known for",
        "uri": "http://dbpedia.org/property/knownFor",
        "seq": "39,48",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "located",
        "uri": "http://dbpedia.org/ontology/location",
        "mappedBy": "word2vec"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company",
        "seq": "22,29",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "Count all the places where companies located in Ontario operate.",
    "SerialNumber": "1689",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/locationCity\u003e \u003chttp://dbpedia.org/resource/Ontario\u003e . ?x \u003chttp://dbpedia.org/property/locations\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ontario",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ontario",
        "seq": "48,55"
      }
    ],
    "id": "b107d70a40bd4d58953a8a9b4aacc109",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/ontology/locationCity",
        "mappedBy": "word2vec"
      },
      {
        "label": "located",
        "uri": "http://dbpedia.org/property/locations",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who was the architect of the stadium currently run by Brandenton?",
    "SerialNumber": "1693",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/operator\u003e \u003chttp://dbpedia.org/resource/Bradenton,_Florida\u003e . ?x \u003chttp://dbpedia.org/property/architect\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Stadium\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Bradenton,_Florida",
        "seq": "999,1000"
      }
    ],
    "id": "75f2b0e695d0422494bcbf36743ad108",
    "predicate mapping": [
      {
        "label": "Brandenton",
        "uri": "http://dbpedia.org/ontology/operator",
        "mappedBy": "word2vec"
      },
      {
        "label": "architect",
        "uri": "http://dbpedia.org/property/architect",
        "seq": "12,21",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "stadium",
        "uri": "http://dbpedia.org/ontology/Stadium",
        "seq": "29,36",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Does Jean Louis Arcand work for Geneva?",
    "SerialNumber": "1696",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Jean-Louis_Arcand\u003e \u003chttp://dbpedia.org/property/institution\u003e \u003chttp://dbpedia.org/resource/Geneva\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "arcand louis jean",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Jean-Louis_Arcand",
        "seq": "999,1000"
      },
      {
        "label": "Geneva",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Geneva",
        "seq": "32,38"
      }
    ],
    "id": "8e29eff6b17f4319b9c659532af37bad",
    "predicate mapping": [
      {
        "label": "work",
        "uri": "http://dbpedia.org/property/institution",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "How many religions are followed amongst the people who\u0027ve worked in the Korean army?",
    "SerialNumber": "1697",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/militaryBranch\u003e \u003chttp://dbpedia.org/resource/Republic_of_Korea_Army\u003e . ?x \u003chttp://dbpedia.org/ontology/religion\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Korean",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Republic_of_Korea_Army",
        "seq": "72,78"
      }
    ],
    "id": "c7dc969d31554373b40ef9f089a6bbc3",
    "predicate mapping": [
      {
        "label": "army",
        "uri": "http://dbpedia.org/ontology/militaryBranch",
        "mappedBy": "word2vec"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion",
        "seq": "9,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What kind of buildings were designed by Pyusawhti?",
    "SerialNumber": "1699",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/architect\u003e \u003chttp://dbpedia.org/resource/Pyusawhti\u003e . ?x \u003chttp://dbpedia.org/ontology/type\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Building\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Pyusawhti",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Pyusawhti",
        "seq": "40,49"
      }
    ],
    "id": "4c467d0fc1fd40a199f7c5588d0aaee0",
    "predicate mapping": [
      {
        "label": "designed",
        "uri": "http://dbpedia.org/ontology/architect",
        "mappedBy": "word2vec"
      },
      {
        "label": "designed",
        "uri": "http://dbpedia.org/ontology/type",
        "mappedBy": "word2vec"
      },
      {
        "label": "building",
        "uri": "http://dbpedia.org/ontology/Building",
        "seq": "13,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Which ship builder built the USS Camp and Sturtevant ?",
    "SerialNumber": "1703",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/USS_Camp_(DE-251)\u003e \u003chttp://dbpedia.org/property/shipBuilder\u003e ?uri. \u003chttp://dbpedia.org/resource/USS_Sturtevant_(DE-239)\u003e \u003chttp://dbpedia.org/property/shipBuilder\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "USS Camp",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/USS_Camp_(DE-251)",
        "seq": "29,37"
      },
      {
        "label": "sturtevant uss",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/USS_Sturtevant_(DE-239)",
        "seq": "999,1000"
      }
    ],
    "id": "526573654e8e40fe9c04f756f3343bd8",
    "predicate mapping": [
      {
        "label": "ship builder",
        "uri": "http://dbpedia.org/property/shipBuilder",
        "seq": "6,18",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "ship builder",
        "uri": "http://dbpedia.org/property/shipBuilder",
        "seq": "6,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "What are some movies whose score is composed by relatives of Bodhi Elfman?",
    "SerialNumber": "1705",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/relatives\u003e \u003chttp://dbpedia.org/resource/Bodhi_Elfman\u003e . ?uri \u003chttp://dbpedia.org/property/music\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Bodhi Elfman",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Bodhi_Elfman",
        "seq": "61,73"
      }
    ],
    "id": "e0e0942378134df3b26ed071efe372b3",
    "predicate mapping": [
      {
        "label": "relatives",
        "uri": "http://dbpedia.org/property/relatives",
        "seq": "48,57",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "composed",
        "uri": "http://dbpedia.org/property/music",
        "mappedBy": "word2vec"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "14,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What sports can be played at universities in Metro Manila?",
    "SerialNumber": "1711",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/state\u003e \u003chttp://dbpedia.org/resource/Metro_Manila\u003e . ?x \u003chttp://dbpedia.org/property/athletics\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/University\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Metro Manila",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Metro_Manila",
        "seq": "45,57"
      }
    ],
    "id": "87ca63e3887e495ebe99cdef9dc9f3d7",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/property/state",
        "seq": "42,44",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "played",
        "uri": "http://dbpedia.org/property/athletics",
        "mappedBy": "word2vec"
      },
      {
        "label": "universities",
        "uri": "http://dbpedia.org/ontology/University",
        "seq": "29,41",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Where does Kafue and Shire river flow into?",
    "SerialNumber": "1712",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Kafue_River\u003e \u003chttp://dbpedia.org/ontology/riverMouth\u003e ?uri. \u003chttp://dbpedia.org/resource/Shire_River\u003e \u003chttp://dbpedia.org/ontology/riverMouth\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "river kafue",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Kafue_River",
        "seq": "999,1000"
      },
      {
        "label": "Shire river",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Shire_River",
        "seq": "21,32"
      }
    ],
    "id": "14aeee6f609641969e67d616c245ed48",
    "predicate mapping": [
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/riverMouth",
        "seq": "27,32",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/riverMouth",
        "seq": "27,32",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Which US state gave  us Brian Deegan and Harold Lyold?",
    "SerialNumber": "1713",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Brian_Deegan_(rider)\u003e \u003chttp://dbpedia.org/property/birthPlace\u003e ?uri. \u003chttp://dbpedia.org/resource/Harold_Lloyd\u003e \u003chttp://dbpedia.org/property/birthPlace\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Brian Deegan",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Brian_Deegan_(rider)",
        "seq": "24,36"
      },
      {
        "label": "harold",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Harold_Lloyd",
        "seq": "999,1000"
      }
    ],
    "id": "2ae49f2b089243fe8429fb7fc6f37020",
    "predicate mapping": [
      {
        "label": "Harold",
        "uri": "http://dbpedia.org/property/birthPlace",
        "mappedBy": "word2vec"
      },
      {
        "label": "Harold",
        "uri": "http://dbpedia.org/property/birthPlace",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "was Charlemagne canonized by antipope pachal 3?",
    "SerialNumber": "1715",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Charlemagne\u003e \u003chttp://dbpedia.org/property/canonizedBy\u003e \u003chttp://dbpedia.org/resource/Antipope_Paschal_III\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Charlemagne",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Charlemagne",
        "seq": "4,15"
      },
      {
        "label": "antipope",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Antipope_Paschal_III",
        "seq": "999,1000"
      }
    ],
    "id": "56180046035946cf88878e6666d488c1",
    "predicate mapping": [
      {
        "label": "canonized by",
        "uri": "http://dbpedia.org/property/canonizedBy",
        "seq": "16,28",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Is Akan spoken in Ghana?",
    "SerialNumber": "1717",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Ghana\u003e \u003chttp://dbpedia.org/property/languages\u003e \u003chttp://dbpedia.org/resource/Akan_language\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ghana",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Ghana",
        "seq": "18,23"
      },
      {
        "label": "akan",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Akan_language",
        "seq": "999,1000"
      }
    ],
    "id": "5eb2e5439fa141a895d7ce6ec1c0460b",
    "predicate mapping": [
      {
        "label": "spoken",
        "uri": "http://dbpedia.org/property/languages",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "311",
    "question": "List the work institute of the medicians who has also worked at University of Miami ?",
    "SerialNumber": "1722",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/workInstitutions\u003e \u003chttp://dbpedia.org/resource/University_of_Miami\u003e . ?x \u003chttp://dbpedia.org/property/workInstitutions\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Medician\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "University of Miami",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/University_of_Miami",
        "seq": "64,83"
      }
    ],
    "id": "2ea87bee77ff44d2a1bd856fc6106c1c",
    "predicate mapping": [
      {
        "label": "worked",
        "uri": "http://dbpedia.org/property/workInstitutions",
        "mappedBy": "word2vec"
      },
      {
        "label": "worked",
        "uri": "http://dbpedia.org/property/workInstitutions",
        "mappedBy": "word2vec"
      },
      {
        "label": "medician",
        "uri": "http://dbpedia.org/ontology/Medician",
        "seq": "31,39",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What ethinicity of Linda Hogan is also the state of origin of Holmes Colbert ?",
    "SerialNumber": "1723",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Linda_Hogan\u003e \u003chttp://dbpedia.org/ontology/ethnicity\u003e ?uri. \u003chttp://dbpedia.org/resource/Holmes_Colbert\u003e \u003chttp://dbpedia.org/ontology/stateOfOrigin\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Linda Hogan",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Linda_Hogan",
        "seq": "19,30"
      },
      {
        "label": "Holmes Colbert",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Holmes_Colbert",
        "seq": "62,76"
      }
    ],
    "id": "fbc52b963d5141a6b89216bae276bf21",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/ethnicity",
        "mappedBy": "word2vec"
      },
      {
        "label": "state of origin",
        "uri": "http://dbpedia.org/ontology/stateOfOrigin",
        "seq": "43,58",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Where are jockeys in Dubai World Cup from?",
    "SerialNumber": "1725",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/race\u003e \u003chttp://dbpedia.org/resource/Dubai_World_Cup\u003e . ?x \u003chttp://dbpedia.org/property/birthPlace\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Jockey\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Dubai World Cup",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Dubai_World_Cup",
        "seq": "21,36"
      }
    ],
    "id": "3932dc742d734d208470a844d5484ced",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/race",
        "mappedBy": "word2vec"
      },
      {
        "label": "are",
        "uri": "http://dbpedia.org/property/birthPlace",
        "seq": "6,9",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "jockeys",
        "uri": "http://dbpedia.org/ontology/Jockey",
        "seq": "10,17",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Which american football players currently plays for Michigan Wolverines?",
    "SerialNumber": "1727",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/currentteam\u003e \u003chttp://dbpedia.org/resource/Michigan_Wolverines\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/AmericanFootballPlayer\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Michigan Wolverines",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Michigan_Wolverines",
        "seq": "52,71"
      }
    ],
    "id": "fce78279c2e143a79652b8514207cd41",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/currentteam",
        "mappedBy": "word2vec"
      },
      {
        "label": "american football player",
        "uri": "http://dbpedia.org/ontology/AmericanFootballPlayer",
        "seq": "6,30",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the location of the Walter Evans Edge office which is also the place of birth of henry Miller ?",
    "SerialNumber": "1728",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Walter_Evans_Edge\u003e \u003chttp://dbpedia.org/property/office\u003e ?uri. \u003chttp://dbpedia.org/resource/Henry_Miller_Shreve\u003e \u003chttp://dbpedia.org/ontology/birthPlace\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Walter Evans Edge",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Walter_Evans_Edge",
        "seq": "28,45"
      },
      {
        "label": "miller henry",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Henry_Miller_Shreve",
        "seq": "999,1000"
      }
    ],
    "id": "d6d1fdb7f3604da48fee7fba7961f107",
    "predicate mapping": [
      {
        "label": "office",
        "uri": "http://dbpedia.org/property/office",
        "seq": "46,52",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "place birth",
        "uri": "http://dbpedia.org/ontology/birthPlace",
        "seq": "-1,10",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What other destinations do airlines go to, whose flights also come to Glasgow?",
    "SerialNumber": "1730",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/targetAirport\u003e \u003chttp://dbpedia.org/resource/Glasgow_Airport\u003e . ?x \u003chttp://dbpedia.org/property/destinations\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Airline\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Glasgow",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Glasgow_Airport",
        "seq": "70,77"
      }
    ],
    "id": "5ba35b11cd8b47b3bdb0467bb646621b",
    "predicate mapping": [
      {
        "label": "flights",
        "uri": "http://dbpedia.org/ontology/targetAirport",
        "mappedBy": "word2vec"
      },
      {
        "label": "destinations",
        "uri": "http://dbpedia.org/property/destinations",
        "seq": "11,23",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "airline",
        "uri": "http://dbpedia.org/ontology/Airline",
        "seq": "27,34",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "List down the common sports played by PATTS College of Aeronautics and lytechnic University of the Philippines Taguig ?",
    "SerialNumber": "1731",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/PATTS_College_of_Aeronautics\u003e \u003chttp://dbpedia.org/property/athletics\u003e ?uri. \u003chttp://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_Taguig\u003e \u003chttp://dbpedia.org/ontology/sport\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "PATTS College of Aeronautics",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/PATTS_College_of_Aeronautics",
        "seq": "38,66"
      },
      {
        "label": "philippines university lytechnic",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_Taguig",
        "seq": "999,1000"
      }
    ],
    "id": "cd069e1c88ed4e77ae308cbb998f57ca",
    "predicate mapping": [
      {
        "label": "Taguig",
        "uri": "http://dbpedia.org/property/athletics",
        "mappedBy": "word2vec"
      },
      {
        "label": "sport",
        "uri": "http://dbpedia.org/ontology/sport",
        "seq": "21,26",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Of the sports commonly played at Islamic Azad Uni, tehran, which one does Jon Speelman play?",
    "SerialNumber": "1733",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Jon_Speelman\u003e \u003chttp://dbpedia.org/ontology/field\u003e ?uri. \u003chttp://dbpedia.org/resource/Islamic_Azad_University_Central_Tehran_Branch\u003e \u003chttp://dbpedia.org/ontology/sport\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jon Speelman",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Jon_Speelman",
        "seq": "74,86"
      },
      {
        "label": "islamic",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Islamic_Azad_University_Central_Tehran_Branch",
        "seq": "999,1000"
      }
    ],
    "id": "6e794f3cb6e6412f993f19aa5cd71225",
    "predicate mapping": [
      {
        "label": "play",
        "uri": "http://dbpedia.org/ontology/field",
        "mappedBy": "word2vec"
      },
      {
        "label": "sport",
        "uri": "http://dbpedia.org/ontology/sport",
        "seq": "7,12",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "Who have become famous by movies produced by Laurence Mark?",
    "SerialNumber": "1737",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/producer\u003e \u003chttp://dbpedia.org/resource/Laurence_Mark\u003e . ?uri \u003chttp://dbpedia.org/ontology/knownFor\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Laurence Mark",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Laurence_Mark",
        "seq": "45,58"
      }
    ],
    "id": "69fee15c06f64c7eb69fdfc71e10c6d8",
    "predicate mapping": [
      {
        "label": "produced",
        "uri": "http://dbpedia.org/property/producer",
        "seq": "33,41",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "movies",
        "uri": "http://dbpedia.org/ontology/knownFor",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the common country of Ganz UV and Balaton wine region ?",
    "SerialNumber": "1738",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Ganz_UV\u003e \u003chttp://dbpedia.org/ontology/operator\u003e ?uri. \u003chttp://dbpedia.org/resource/Balaton_wine_region\u003e \u003chttp://dbpedia.org/ontology/location\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ganz UV",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ganz_UV",
        "seq": "30,37"
      },
      {
        "label": "Balaton wine region",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Balaton_wine_region",
        "seq": "42,61"
      }
    ],
    "id": "8553c4fee8b04dc18263ee3f07b81807",
    "predicate mapping": [
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/operator",
        "mappedBy": "word2vec"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/location",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What organization is the parent of Greenpeace Nordic?",
    "SerialNumber": "1739",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Greenpeace_Nordic\u003e \u003chttp://dbpedia.org/ontology/parentOrganisation\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Greenpeace Nordic",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Greenpeace_Nordic",
        "seq": "35,52"
      }
    ],
    "id": "6f1d569a147d482ca609cfdbec7c9ed8",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/parentOrganisation",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Give me some softwares which run on mac os",
    "SerialNumber": "1740",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/operatingSystem\u003e \u003chttp://dbpedia.org/resource/Mac_OS\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Software\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "mac os",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Mac_OS",
        "seq": "36,42"
      }
    ],
    "id": "aaf4a21d2ca04d3bb91aed5c6063223d",
    "predicate mapping": [
      {
        "label": "run",
        "uri": "http://dbpedia.org/ontology/operatingSystem",
        "mappedBy": "word2vec"
      },
      {
        "label": "software",
        "uri": "http://dbpedia.org/ontology/Software",
        "seq": "13,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Panthera leo fossils and Liger belong to which species?",
    "SerialNumber": "1744",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Panthera_leo_fossilis\u003e \u003chttp://dbpedia.org/ontology/species\u003e ?uri. \u003chttp://dbpedia.org/resource/Liger\u003e \u003chttp://dbpedia.org/ontology/species\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "panthera",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Panthera_leo_fossilis",
        "seq": "999,1000"
      },
      {
        "label": "Liger",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Liger",
        "seq": "25,30"
      }
    ],
    "id": "2006a24c1c3e478b98df523596714251",
    "predicate mapping": [
      {
        "label": "species",
        "uri": "http://dbpedia.org/ontology/species",
        "seq": "47,54",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "species",
        "uri": "http://dbpedia.org/ontology/species",
        "seq": "47,54",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "which awards have been given to people who fought in the Battle of France?",
    "SerialNumber": "1745",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/battle\u003e \u003chttp://dbpedia.org/resource/Battle_of_France\u003e . ?x \u003chttp://dbpedia.org/ontology/award\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Battle of France",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Battle_of_France",
        "seq": "57,73"
      }
    ],
    "id": "30d46acd81d9420f9bef5bbebec0d15f",
    "predicate mapping": [
      {
        "label": "Battle",
        "uri": "http://dbpedia.org/ontology/battle",
        "seq": "57,63",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/award",
        "seq": "6,12",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "fought",
        "uri": "http://dbpedia.org/ontology/Person",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "406",
    "question": "How many people have been trained in an institute located in California?",
    "SerialNumber": "1746",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/city\u003e \u003chttp://dbpedia.org/resource/California\u003e . ?uri \u003chttp://dbpedia.org/property/training\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "California",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/California",
        "seq": "61,71"
      }
    ],
    "id": "44378225c4c7414bbcfefcb69cfc2d92",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/property/city",
        "seq": "29,31",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "trained",
        "uri": "http://dbpedia.org/property/training",
        "seq": "26,33",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "located",
        "uri": "http://dbpedia.org/ontology/Person",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which composer subsequent work of Moondog Matinee and also composed The TImes They are A changin ?",
    "SerialNumber": "1747",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/The_Times_They_Are_a-Changin\u0027_(musical)\u003e \u003chttp://dbpedia.org/ontology/musicBy\u003e ?uri. \u003chttp://dbpedia.org/resource/Moondog_Matinee\u003e \u003chttp://dbpedia.org/ontology/subsequentWork\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "changin times they are",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/The_Times_They_Are_a-Changin\u0027_(musical)",
        "seq": "999,1000"
      },
      {
        "label": "Moondog Matinee",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Moondog_Matinee",
        "seq": "34,49"
      }
    ],
    "id": "a9fc9b062b16419dbf83984d9a7bcb0e",
    "predicate mapping": [
      {
        "label": "composer",
        "uri": "http://dbpedia.org/ontology/musicBy",
        "seq": "6,14",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "subsequent work",
        "uri": "http://dbpedia.org/ontology/subsequentWork",
        "seq": "15,30",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What magazine is Marritt Cabal known for which has Lucifer Hammer as publisher ?",
    "SerialNumber": "1753",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Merritt_Cabal\u003e \u003chttp://dbpedia.org/ontology/knownFor\u003e ?uri. \u003chttp://dbpedia.org/resource/Lucifer\u0027s_Hammer\u003e \u003chttp://dbpedia.org/ontology/publisher\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Merritt_Cabal",
        "seq": "999,1000"
      },
      {
        "label": "lucifer hammer",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Lucifer\u0027s_Hammer",
        "seq": "999,1000"
      }
    ],
    "id": "5cf1e1c8ee184ab0aa42a8628980116b",
    "predicate mapping": [
      {
        "label": "known for",
        "uri": "http://dbpedia.org/ontology/knownFor",
        "seq": "31,40",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "publisher",
        "uri": "http://dbpedia.org/ontology/publisher",
        "seq": "69,78",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "Which football teams is Shahid Khan proprietor to?",
    "SerialNumber": "1757",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/owner\u003e \u003chttp://dbpedia.org/resource/Shahid_Khan\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Shahid Khan",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Shahid_Khan",
        "seq": "24,35"
      }
    ],
    "id": "9e56e9f24bb64c5b894e7a47b2c9cd94",
    "predicate mapping": [
      {
        "label": "proprietor",
        "uri": "http://dbpedia.org/ontology/owner",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "Which football players currently have their contracts with Stoke City F.C.?",
    "SerialNumber": "1759",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/currentclub\u003e \u003chttp://dbpedia.org/resource/Stoke_City_F.C.\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Stoke City F.C.",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Stoke_City_F.C.",
        "seq": "59,74"
      }
    ],
    "id": "2d3b740bd54a4388a8be9f63fcaef04d",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/currentclub",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What are all the prizes won by the writer of A Grand Day Out?",
    "SerialNumber": "1761",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/A_Grand_Day_Out\u003e \u003chttp://dbpedia.org/ontology/writer\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/award\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "A Grand Day Out",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/A_Grand_Day_Out",
        "seq": "45,60"
      }
    ],
    "id": "9049b588d47b4566b827b69d457b3725",
    "predicate mapping": [
      {
        "label": "writer",
        "uri": "http://dbpedia.org/ontology/writer",
        "seq": "35,41",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "won",
        "uri": "http://dbpedia.org/ontology/award",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Where are Thomas Franois Burgers and Johannes Gerhardus Strijdom buried?",
    "SerialNumber": "1764",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Thomas_François_Burgers\u003e \u003chttp://dbpedia.org/property/restingplace\u003e ?uri. \u003chttp://dbpedia.org/resource/Johannes_Gerhardus_Strijdom\u003e \u003chttp://dbpedia.org/property/restingplace\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Thomas_François_Burgers",
        "seq": "999,1000"
      },
      {
        "label": "Johannes Gerhardus Strijdom",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Johannes_Gerhardus_Strijdom",
        "seq": "37,64"
      }
    ],
    "id": "b1d14746b41f47459edf2a268414687f",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/restingplace",
        "mappedBy": "word2vec"
      },
      {
        "uri": "http://dbpedia.org/property/restingplace",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "where are renaissance centers located?",
    "SerialNumber": "1765",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Renaissance_Center\u003e \u003chttp://dbpedia.org/property/address\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "renaissance center",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Renaissance_Center",
        "seq": "10,28"
      }
    ],
    "id": "14d666af4e7f4944b90397bb7836911e",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/property/address",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Give the name of the river with source place as Australian Alps and has mouth place as Goolwa , a place in Siyuth Australia ?",
    "SerialNumber": "1770",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/sourcePlace\u003e \u003chttp://dbpedia.org/resource/Australian_Alps\u003e . ?uri \u003chttp://dbpedia.org/ontology/mouthPlace\u003e \u003chttp://dbpedia.org/resource/Goolwa,_South_Australia\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/River\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Australian Alps",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Australian_Alps",
        "seq": "48,63"
      },
      {
        "label": "australia",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Goolwa,_South_Australia",
        "seq": "999,1000"
      }
    ],
    "id": "d3c5d6d98b654e44bbd5b942e911e74a",
    "predicate mapping": [
      {
        "label": "source place",
        "uri": "http://dbpedia.org/ontology/sourcePlace",
        "seq": "32,44",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "mouth place",
        "uri": "http://dbpedia.org/ontology/mouthPlace",
        "seq": "72,83",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River",
        "seq": "21,26",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Which artists have co-starred with Kris Kristofferson?",
    "SerialNumber": "1774",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/associatedActs\u003e \u003chttp://dbpedia.org/resource/Kris_Kristofferson\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Artist\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Kris Kristofferson",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Kris_Kristofferson",
        "seq": "35,53"
      }
    ],
    "id": "191277ee793a402ab582ed1fbba59680",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/associatedActs",
        "mappedBy": "word2vec"
      },
      {
        "label": "artist",
        "uri": "http://dbpedia.org/ontology/Artist",
        "seq": "6,12",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "Count the total religions followed by the ones living in England.",
    "SerialNumber": "1775",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/residence\u003e \u003chttp://dbpedia.org/resource/England\u003e . ?x \u003chttp://dbpedia.org/property/religion\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "England",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/England",
        "seq": "57,64"
      }
    ],
    "id": "1cedfca911824453b06451cbc8104541",
    "predicate mapping": [
      {
        "label": "living",
        "uri": "http://dbpedia.org/property/residence",
        "mappedBy": "word2vec"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/property/religion",
        "seq": "16,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which club of Michael Springer is also the parent organization of Syracuse University press ?",
    "SerialNumber": "1776",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Michael_Springer\u003e \u003chttp://dbpedia.org/property/team\u003e ?uri. \u003chttp://dbpedia.org/resource/Syracuse_University_Press\u003e \u003chttp://dbpedia.org/property/parent\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Michael Springer",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Michael_Springer",
        "seq": "14,30"
      },
      {
        "label": "Syracuse University press",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Syracuse_University_Press",
        "seq": "66,91"
      }
    ],
    "id": "569d57916252412ab7543cdd78e851a3",
    "predicate mapping": [
      {
        "label": "organization",
        "uri": "http://dbpedia.org/property/team",
        "mappedBy": "word2vec"
      },
      {
        "label": "parent",
        "uri": "http://dbpedia.org/property/parent",
        "seq": "43,49",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Which river flows through both eastern and western washington?",
    "SerialNumber": "1778",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Eastern_Washington\u003e \u003chttp://dbpedia.org/ontology/river\u003e ?uri. \u003chttp://dbpedia.org/resource/Central_Washington\u003e \u003chttp://dbpedia.org/ontology/river\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "washington eastern",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Eastern_Washington",
        "seq": "999,1000"
      },
      {
        "label": "washington",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Central_Washington",
        "seq": "999,1000"
      }
    ],
    "id": "0d9332702ee748b2a87f19d9c50726e4",
    "predicate mapping": [
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/river",
        "seq": "6,11",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/river",
        "seq": "6,11",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "Who was the president under which people won the United States House of Representatives elections in 1790 ?",
    "SerialNumber": "1780",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/United_States_House_of_Representatives_elections,_1790\u003e \u003chttp://dbpedia.org/property/leader\u003e ?x . ?x \u003chttp://dbpedia.org/property/president\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "representatives elections",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/United_States_House_of_Representatives_elections,_1790",
        "seq": "999,1000"
      }
    ],
    "id": "3fd0cb3a9d11496ca7d876547a5e6409",
    "predicate mapping": [
      {
        "label": "elections",
        "uri": "http://dbpedia.org/property/leader",
        "mappedBy": "word2vec"
      },
      {
        "label": "president",
        "uri": "http://dbpedia.org/property/president",
        "seq": "12,21",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "elections",
        "uri": "http://dbpedia.org/ontology/Person",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Terminal Station at Chattanooga is made by architects from which University?",
    "SerialNumber": "1782",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/knownFor\u003e \u003chttp://dbpedia.org/resource/Terminal_Station_(Chattanooga)\u003e . ?x \u003chttp://dbpedia.org/property/education\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Architect\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Terminal Station",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Terminal_Station_(Chattanooga)",
        "seq": "0,16"
      }
    ],
    "id": "b8180174343249208cb2beeebf8476a0",
    "predicate mapping": [
      {
        "label": "University",
        "uri": "http://dbpedia.org/property/knownFor",
        "mappedBy": "word2vec"
      },
      {
        "label": "University",
        "uri": "http://dbpedia.org/property/education",
        "mappedBy": "word2vec"
      },
      {
        "label": "architect",
        "uri": "http://dbpedia.org/ontology/Architect",
        "seq": "43,52",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which home stadium of 2011-12 FC Spartak Moscow season is also the location of birth of the Svetlana Gounkina ?",
    "SerialNumber": "1783",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/2011–12_FC_Spartak_Moscow_season\u003e \u003chttp://dbpedia.org/ontology/homeStadium\u003e ?uri. \u003chttp://dbpedia.org/resource/Svetlana_Gounkina\u003e \u003chttp://dbpedia.org/ontology/birthPlace\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "spartak season moscow",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/2011–12_FC_Spartak_Moscow_season",
        "seq": "999,1000"
      },
      {
        "label": "Svetlana Gounkina",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Svetlana_Gounkina",
        "seq": "92,109"
      }
    ],
    "id": "d2b7dba56c5f4859813272dda053e0a1",
    "predicate mapping": [
      {
        "label": "home stadium",
        "uri": "http://dbpedia.org/ontology/homeStadium",
        "seq": "6,18",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "location of birth",
        "uri": "http://dbpedia.org/ontology/birthPlace",
        "seq": "67,84",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "405",
    "question": "How many different pole drivers are there, of the GPs when Renault was the first team?",
    "SerialNumber": "1786",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/firstTeam\u003e \u003chttp://dbpedia.org/resource/Renault_in_Formula_One\u003e . ?x \u003chttp://dbpedia.org/ontology/poleDriver\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/FormulaOneRacer\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "renault",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Renault_in_Formula_One",
        "seq": "999,1000"
      }
    ],
    "id": "c015a34029f941aeb5c25cfc4bab4c52",
    "predicate mapping": [
      {
        "label": "first team",
        "uri": "http://dbpedia.org/property/firstTeam",
        "seq": "75,85",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "pole driver",
        "uri": "http://dbpedia.org/ontology/poleDriver",
        "seq": "19,30",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "Renault",
        "uri": "http://dbpedia.org/ontology/FormulaOneRacer",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "8",
    "question": "Amongst the winner of Lovelace medal, who has John Robert as doctoral supervisor ?",
    "SerialNumber": "1788",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/doctoralAdvisor\u003e \u003chttp://dbpedia.org/resource/John_Robert_Woodyard\u003e . ?uri \u003chttp://dbpedia.org/property/prizes\u003e \u003chttp://dbpedia.org/resource/Lovelace_Medal\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "robert john",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/John_Robert_Woodyard",
        "seq": "999,1000"
      },
      {
        "label": "Lovelace medal",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Lovelace_Medal",
        "seq": "22,36"
      }
    ],
    "id": "e179bec4f0ea4b508f69fac03d08356e",
    "predicate mapping": [
      {
        "label": "doctoral supervisor",
        "uri": "http://dbpedia.org/property/doctoralAdvisor",
        "seq": "61,80",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "Robert",
        "uri": "http://dbpedia.org/property/prizes",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "who was the australian flagbearer of 2008 Summer Olympics?",
    "SerialNumber": "1789",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Australia_at_the_2008_Summer_Olympics\u003e \u003chttp://dbpedia.org/property/flagbearer\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Australia_at_the_2008_Summer_Olympics",
        "seq": "999,1000"
      }
    ],
    "id": "b9b35134084c486ab2f02ecdc549e6bc",
    "predicate mapping": [
      {
        "label": "flagbearer",
        "uri": "http://dbpedia.org/property/flagbearer",
        "seq": "23,33",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "Whose mam is Bertrada of Laon?",
    "SerialNumber": "1790",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/mother\u003e \u003chttp://dbpedia.org/resource/Bertrada_of_Laon\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Bertrada of Laon",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Bertrada_of_Laon",
        "seq": "13,29"
      }
    ],
    "id": "3230de5fe63a44debe27de6c25e6aedf",
    "predicate mapping": [
      {
        "label": "mam",
        "uri": "http://dbpedia.org/property/mother",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "List the leaders of all the cities through which the Ganga river flows ?",
    "SerialNumber": "1791",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Ganges\u003e \u003chttp://dbpedia.org/property/city\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/leaderName\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/City\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ganga",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Ganges",
        "seq": "53,58"
      }
    ],
    "id": "7652df11d2a14922acffd1e9556bfb09",
    "predicate mapping": [
      {
        "label": "flows",
        "uri": "http://dbpedia.org/property/city",
        "mappedBy": "word2vec"
      },
      {
        "label": "leaders",
        "uri": "http://dbpedia.org/ontology/leaderName",
        "seq": "9,16",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "flows",
        "uri": "http://dbpedia.org/ontology/City",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the common citizenship between JSM Hopoer and Robert Valentine ?",
    "SerialNumber": "1792",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/J._S._M._Hooper\u003e \u003chttp://dbpedia.org/ontology/citizenship\u003e ?uri. \u003chttp://dbpedia.org/resource/Robert_Valentine_(composer)\u003e \u003chttp://dbpedia.org/ontology/country\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/J._S._M._Hooper",
        "seq": "999,1000"
      },
      {
        "label": "Robert Valentine",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Robert_Valentine_(composer)",
        "seq": "54,70"
      }
    ],
    "id": "4b41483f7e73472da3d5fafa4cc448d6",
    "predicate mapping": [
      {
        "label": "citizenship",
        "uri": "http://dbpedia.org/ontology/citizenship",
        "seq": "19,30",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/country",
        "seq": "67,69",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "405",
    "question": "How many people have worked in the band one of whose current member is Hynief?",
    "SerialNumber": "1797",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/currentMembers\u003e \u003chttp://dbpedia.org/resource/Hynief\u003e . ?x \u003chttp://dbpedia.org/ontology/bandMember\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Hynief",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Hynief",
        "seq": "71,77"
      }
    ],
    "id": "9287889114534eda9daed4e2d79a4680",
    "predicate mapping": [
      {
        "label": "current member",
        "uri": "http://dbpedia.org/property/currentMembers",
        "seq": "53,67",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "member band",
        "uri": "http://dbpedia.org/ontology/bandMember",
        "seq": "-1,10",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "band",
        "uri": "http://dbpedia.org/ontology/Person",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What is the residence of the bronze medalist of Alpine skiing at the women\u0027s downhill competition at the 1972 Winter Olympics?",
    "SerialNumber": "1798",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Alpine_skiing_at_the_1972_Winter_Olympics_–_Women\u0027s_downhill\u003e \u003chttp://dbpedia.org/ontology/bronzeMedalist\u003e ?x . ?x \u003chttp://dbpedia.org/property/birthPlace\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "olympics downhill women\u0027s winter skiing",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Alpine_skiing_at_the_1972_Winter_Olympics_–_Women\u0027s_downhill",
        "seq": "999,1000"
      }
    ],
    "id": "42c827cfc2294a5390f501f2f6447b1a",
    "predicate mapping": [
      {
        "label": "bronze medalist",
        "uri": "http://dbpedia.org/ontology/bronzeMedalist",
        "seq": "29,44",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "Olympics",
        "uri": "http://dbpedia.org/property/birthPlace",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Does Mt St. Peter Churt follow the architectural style of art deco?",
    "SerialNumber": "1799",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Mount_St._Peter_Church\u003e \u003chttp://dbpedia.org/property/architecture\u003e \u003chttp://dbpedia.org/resource/Art_Deco\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "peter",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Mount_St._Peter_Church",
        "seq": "999,1000"
      },
      {
        "label": "art deco",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Art_Deco",
        "seq": "58,66"
      }
    ],
    "id": "4a9b50b6f10f4e23bfacaee43d35e802",
    "predicate mapping": [
      {
        "label": "architectural style",
        "uri": "http://dbpedia.org/property/architecture",
        "seq": "35,54",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "King crimson has been recorded in which places?",
    "SerialNumber": "1801",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/artist\u003e \u003chttp://dbpedia.org/resource/King_Crimson\u003e . ?x \u003chttp://dbpedia.org/ontology/recordedIn\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "King crimson",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/King_Crimson",
        "seq": "0,12"
      }
    ],
    "id": "711db5b7af9245649c23c84820a2671c",
    "predicate mapping": [
      {
        "label": "places",
        "uri": "http://dbpedia.org/ontology/artist",
        "mappedBy": "word2vec"
      },
      {
        "label": "recorded in",
        "uri": "http://dbpedia.org/ontology/recordedIn",
        "seq": "22,33",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Does Ford own the Ford Kansas Assembly plant?",
    "SerialNumber": "1807",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Ford_Kansas_City_Assembly_Plant\u003e \u003chttp://dbpedia.org/ontology/owningOrganisation\u003e \u003chttp://dbpedia.org/resource/Ford_Motor_Company\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "assembly kansas plant ford",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Ford_Kansas_City_Assembly_Plant",
        "seq": "999,1000"
      },
      {
        "label": "Ford",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Ford_Motor_Company",
        "seq": "5,9"
      }
    ],
    "id": "7de6776232624ca297b978ded3f8f754",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/owningOrganisation",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What are the nicknames of the schools whose color is royal blue?",
    "SerialNumber": "1808",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/colour\u003e \u003chttp://dbpedia.org/resource/Royal_blue\u003e . ?x \u003chttp://dbpedia.org/property/nickname\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/School\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "royal blue",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Royal_blue",
        "seq": "53,63"
      }
    ],
    "id": "dcb85ef5573c48b38fec1148f6076eae",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/colour",
        "mappedBy": "word2vec"
      },
      {
        "label": "nickname",
        "uri": "http://dbpedia.org/property/nickname",
        "seq": "13,21",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "school",
        "uri": "http://dbpedia.org/ontology/School",
        "seq": "30,36",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the office holder who has a child named lori Black and Harvard Westlake school as one of the educational institute ?",
    "SerialNumber": "1810",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/children\u003e \u003chttp://dbpedia.org/resource/Lori_Black\u003e . ?uri \u003chttp://dbpedia.org/ontology/almaMater\u003e \u003chttp://dbpedia.org/resource/Harvard-Westlake_School\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/OfficeHolder\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "lori Black",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Lori_Black",
        "seq": "45,55"
      },
      {
        "label": "westlake harvard school",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Harvard-Westlake_School",
        "seq": "999,1000"
      }
    ],
    "id": "305a5e72abde4540a896cb6f4e731952",
    "predicate mapping": [
      {
        "label": "child",
        "uri": "http://dbpedia.org/property/children",
        "seq": "33,38",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "education",
        "uri": "http://dbpedia.org/ontology/almaMater",
        "seq": "98,107",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "office holder",
        "uri": "http://dbpedia.org/ontology/OfficeHolder",
        "seq": "9,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which ppolitical party of Yashpal Kapur is also the owner of National Herald ?",
    "SerialNumber": "1811",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/The_National_Herald_(India)\u003e \u003chttp://dbpedia.org/ontology/owner\u003e ?uri. \u003chttp://dbpedia.org/resource/Yashpal_Kapur\u003e \u003chttp://dbpedia.org/ontology/party\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "national herald",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/The_National_Herald_(India)",
        "seq": "999,1000"
      },
      {
        "label": "Yashpal Kapur",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Yashpal_Kapur",
        "seq": "26,39"
      }
    ],
    "id": "53399784d528412faa510052199348bf",
    "predicate mapping": [
      {
        "label": "owner",
        "uri": "http://dbpedia.org/ontology/owner",
        "seq": "52,57",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "political party",
        "uri": "http://dbpedia.org/ontology/party",
        "seq": "7,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Where is the tombstone of the congressman who died in the McLean hospital?",
    "SerialNumber": "1814",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/deathPlace\u003e \u003chttp://dbpedia.org/resource/McLean_Hospital\u003e . ?x \u003chttp://dbpedia.org/property/restingplace\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Congressman\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "McLean hospital",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/McLean_Hospital",
        "seq": "58,73"
      }
    ],
    "id": "208d4114c72d4eb8aa2dc244a8f1e842",
    "predicate mapping": [
      {
        "label": "died in",
        "uri": "http://dbpedia.org/ontology/deathPlace",
        "seq": "46,53",
        "mappedBy": "byLabelMatch"
      },
      {
        "uri": "http://dbpedia.org/property/restingplace",
        "mappedBy": "word2vec"
      },
      {
        "label": "congressman",
        "uri": "http://dbpedia.org/ontology/Congressman",
        "seq": "30,41",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Where did the athlete start his career, who did his highschool in Red Lion Area School District?",
    "SerialNumber": "1817",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/highschool\u003e \u003chttp://dbpedia.org/resource/Red_Lion_Area_School_District\u003e . ?x \u003chttp://dbpedia.org/property/debutteam\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Athlete\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Red Lion Area School District",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Red_Lion_Area_School_District",
        "seq": "66,95"
      }
    ],
    "id": "bdc8518615b54204b29359054a6ad859",
    "predicate mapping": [
      {
        "label": "highschool",
        "uri": "http://dbpedia.org/ontology/highschool",
        "seq": "52,62",
        "mappedBy": "byLabelMatch"
      },
      {
        "uri": "http://dbpedia.org/property/debutteam",
        "mappedBy": "word2vec"
      },
      {
        "label": "athlete",
        "uri": "http://dbpedia.org/ontology/Athlete",
        "seq": "14,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What faith of Buddhist Tai Hung College is also the acadmeic interest of Paul Demiville ?",
    "SerialNumber": "1821",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Paul_Demiéville\u003e \u003chttp://dbpedia.org/property/fields\u003e ?uri. \u003chttp://dbpedia.org/resource/Buddhist_Tai_Hung_College\u003e \u003chttp://dbpedia.org/property/religion\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Paul_Demiéville",
        "seq": "999,1000"
      },
      {
        "label": "Buddhist Tai Hung College",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Buddhist_Tai_Hung_College",
        "seq": "14,39"
      }
    ],
    "id": "efe69ad1cb94450398a0a0a408332d63",
    "predicate mapping": [
      {
        "label": "Paul",
        "uri": "http://dbpedia.org/property/fields",
        "mappedBy": "word2vec"
      },
      {
        "label": "faith",
        "uri": "http://dbpedia.org/property/religion",
        "seq": "5,10",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Is jim harbaugh currently in the Michigan Wolverines?",
    "SerialNumber": "1825",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Jim_Harbaugh\u003e \u003chttp://dbpedia.org/property/currentteam\u003e \u003chttp://dbpedia.org/resource/Michigan_Wolverines\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "jim harbaugh",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Jim_Harbaugh",
        "seq": "3,15"
      },
      {
        "label": "Michigan Wolverines",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Michigan_Wolverines",
        "seq": "33,52"
      }
    ],
    "id": "8ce6aa741f5047309e078d1c2a08e7a4",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/currentteam",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "How many awards have been received by graduates of University of Melbourne, Faculty of VCA \u0026 MCM?",
    "SerialNumber": "1826",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/training\u003e \u003chttp://dbpedia.org/resource/University_of_Melbourne_Faculty_of_VCA_and_MCM\u003e . ?x \u003chttp://dbpedia.org/ontology/award\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "university",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/University_of_Melbourne_Faculty_of_VCA_and_MCM",
        "seq": "999,1000"
      }
    ],
    "id": "82a6252eb38448dba20dc6489bc2b39c",
    "predicate mapping": [
      {
        "label": "MCM",
        "uri": "http://dbpedia.org/ontology/training",
        "mappedBy": "word2vec"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/award",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "To which books Thomas Egerton, an editor?",
    "SerialNumber": "1827",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/publisher\u003e \u003chttp://dbpedia.org/resource/Thomas_Egerton_(publisher)\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Book\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Thomas Egerton",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Thomas_Egerton_(publisher)",
        "seq": "15,29"
      }
    ],
    "id": "58cf5b8a4f4e47bcb79a98fac51edd37",
    "predicate mapping": [
      {
        "label": "editor",
        "uri": "http://dbpedia.org/ontology/publisher",
        "mappedBy": "word2vec"
      },
      {
        "label": "book",
        "uri": "http://dbpedia.org/ontology/Book",
        "seq": "9,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "List the people with final resting place as Plymouth, Vermont and has Samuel W. McCall as predecessor?",
    "SerialNumber": "1828",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/restingPlace\u003e \u003chttp://dbpedia.org/resource/Plymouth,_Vermont\u003e . ?uri \u003chttp://dbpedia.org/property/predecessor\u003e \u003chttp://dbpedia.org/resource/Samuel_W._McCall\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Plymouth, Vermont",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Plymouth,_Vermont",
        "seq": "44,61"
      },
      {
        "label": "Samuel W. McCall",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Samuel_W._McCall",
        "seq": "70,86"
      }
    ],
    "id": "bef8f6aac12d4d6283dceb45a5a45f15",
    "predicate mapping": [
      {
        "label": "resting place",
        "uri": "http://dbpedia.org/ontology/restingPlace",
        "seq": "27,40",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "predecessor",
        "uri": "http://dbpedia.org/property/predecessor",
        "seq": "90,101",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "final",
        "uri": "http://dbpedia.org/ontology/Person",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "In how many places has Garbage recorded their songs?",
    "SerialNumber": "1830",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/producer\u003e \u003chttp://dbpedia.org/resource/Garbage_(band)\u003e . ?x \u003chttp://dbpedia.org/ontology/recordedIn\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Garbage",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Garbage_(band)",
        "seq": "23,30"
      }
    ],
    "id": "595c138b55a942dd940bede3ff72b507",
    "predicate mapping": [
      {
        "label": "songs",
        "uri": "http://dbpedia.org/ontology/producer",
        "mappedBy": "word2vec"
      },
      {
        "label": "recorded in",
        "uri": "http://dbpedia.org/ontology/recordedIn",
        "seq": "-1,10",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Whose songs are Tickle Me and Viva Las Vegas?",
    "SerialNumber": "1833",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Tickle_Me\u003e \u003chttp://dbpedia.org/property/artist\u003e ?uri. \u003chttp://dbpedia.org/resource/Viva_Las_Vegas\u003e \u003chttp://dbpedia.org/property/artist\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Tickle Me",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Tickle_Me",
        "seq": "16,25"
      },
      {
        "label": "Viva Las Vegas",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Viva_Las_Vegas",
        "seq": "30,44"
      }
    ],
    "id": "264c4445e1374947ab6f8121e12c286c",
    "predicate mapping": [
      {
        "label": "songs",
        "uri": "http://dbpedia.org/property/artist",
        "mappedBy": "word2vec"
      },
      {
        "label": "songs",
        "uri": "http://dbpedia.org/property/artist",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Among the scientist known for Manhattan Project who had a doctoral student named Charles Ellis ?",
    "SerialNumber": "1834",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/doctoralStudents\u003e \u003chttp://dbpedia.org/resource/Charles_Drummond_Ellis\u003e . ?uri \u003chttp://dbpedia.org/property/knownFor\u003e \u003chttp://dbpedia.org/resource/Manhattan_Project\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Scientist\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "charles ellis",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Charles_Drummond_Ellis",
        "seq": "999,1000"
      },
      {
        "label": "Manhattan Project",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Manhattan_Project",
        "seq": "30,47"
      }
    ],
    "id": "0da441743df14fafb7bc6b4bcacc81bf",
    "predicate mapping": [
      {
        "label": "doctoral student",
        "uri": "http://dbpedia.org/property/doctoralStudents",
        "seq": "58,74",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "known for",
        "uri": "http://dbpedia.org/property/knownFor",
        "seq": "20,29",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "scientist",
        "uri": "http://dbpedia.org/ontology/Scientist",
        "seq": "10,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which education center Sidney Catlin Partrodge attended which was also the alma mater of Lisa Brummel ?",
    "SerialNumber": "1835",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Sidney_Catlin_Partridge\u003e \u003chttp://dbpedia.org/property/education\u003e ?uri. \u003chttp://dbpedia.org/resource/Lisa_Brummel\u003e \u003chttp://dbpedia.org/ontology/almaMater\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Sidney_Catlin_Partridge",
        "seq": "999,1000"
      },
      {
        "label": "Lisa Brummel",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Lisa_Brummel",
        "seq": "89,101"
      }
    ],
    "id": "9abe253ae8a348c8b5f3b85f4cf62072",
    "predicate mapping": [
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/property/education",
        "seq": "75,85",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/ontology/almaMater",
        "seq": "75,85",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which club of perianne Lones is also the home town of the Kady O\u0027Malley ?",
    "SerialNumber": "1836",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Kady_O\u0027Malley\u003e \u003chttp://dbpedia.org/property/homeTown\u003e ?uri. \u003chttp://dbpedia.org/resource/Perianne_Jones\u003e \u003chttp://dbpedia.org/property/club\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Kady O\u0027Malley",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Kady_O\u0027Malley",
        "seq": "58,71"
      },
      {
        "label": "perianne",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Perianne_Jones",
        "seq": "999,1000"
      }
    ],
    "id": "b225170899d7462d96eaf7899775423b",
    "predicate mapping": [
      {
        "label": "home town",
        "uri": "http://dbpedia.org/property/homeTown",
        "seq": "41,50",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "club",
        "uri": "http://dbpedia.org/property/club",
        "seq": "6,10",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Which countries share a similar sociocultural and ethnic heritage of that of Native Indonesians?",
    "SerialNumber": "1837",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Native_Indonesians\u003e \u003chttp://dbpedia.org/property/region\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Native Indonesians",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Native_Indonesians",
        "seq": "77,95"
      }
    ],
    "id": "176507c0f98f445c85cccae3d80a54b0",
    "predicate mapping": [
      {
        "label": "heritage",
        "uri": "http://dbpedia.org/property/region",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What are some organizations in Auckland created to do?",
    "SerialNumber": "1840",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/location\u003e \u003chttp://dbpedia.org/resource/Auckland\u003e . ?x \u003chttp://dbpedia.org/property/purpose\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Organisation\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Auckland",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Auckland",
        "seq": "31,39"
      }
    ],
    "id": "35d4c9e5bb0d403a8949fe9fb0639704",
    "predicate mapping": [
      {
        "label": "created",
        "uri": "http://dbpedia.org/property/location",
        "mappedBy": "word2vec"
      },
      {
        "label": "created",
        "uri": "http://dbpedia.org/property/purpose",
        "mappedBy": "word2vec"
      },
      {
        "uri": "http://dbpedia.org/ontology/Organisation",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Where are the agencies headquartered at, which are under the Colorado Dept of Natural Resources?",
    "SerialNumber": "1841",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/parentOrganisation\u003e \u003chttp://dbpedia.org/resource/Colorado_Department_of_Natural_Resources\u003e . ?x \u003chttp://dbpedia.org/property/headquarters\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/GovernmentAgency\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Colorado Dept of Natural Resources",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Colorado_Department_of_Natural_Resources",
        "seq": "61,95"
      }
    ],
    "id": "fe21b9172386466fb7fef8d29772878e",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/parentOrganisation",
        "mappedBy": "word2vec"
      },
      {
        "label": "headquarter",
        "uri": "http://dbpedia.org/property/headquarters",
        "seq": "23,34",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "agencies",
        "uri": "http://dbpedia.org/ontology/GovernmentAgency",
        "seq": "14,22",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "How many different religions have economists followed?",
    "SerialNumber": "1843",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/profession\u003e \u003chttp://dbpedia.org/resource/Economist\u003e . ?x \u003chttp://dbpedia.org/ontology/religion\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "economist",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Economist",
        "seq": "34,43"
      }
    ],
    "id": "4bae6679286944e0ab5bae123d3b66f8",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/profession",
        "mappedBy": "word2vec"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion",
        "seq": "19,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "In which city where there is a headquarters of Orient News and also Feras Saied died?",
    "SerialNumber": "1846",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Orient_News\u003e \u003chttp://dbpedia.org/property/headquarters\u003e ?uri. \u003chttp://dbpedia.org/resource/Feras_Saied\u003e \u003chttp://dbpedia.org/ontology/deathPlace\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Orient News",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Orient_News",
        "seq": "47,58"
      },
      {
        "label": "Feras Saied",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Feras_Saied",
        "seq": "68,79"
      }
    ],
    "id": "2c9ee30345e3457898f20d4bc672ae79",
    "predicate mapping": [
      {
        "label": "headquarters",
        "uri": "http://dbpedia.org/property/headquarters",
        "seq": "31,43",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "died",
        "uri": "http://dbpedia.org/ontology/deathPlace",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "In which department does Raymond Baldwin work?",
    "SerialNumber": "1848",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Raymond_E._Baldwin\u003e \u003chttp://dbpedia.org/property/branch\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Raymond Baldwin",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Raymond_E._Baldwin",
        "seq": "25,40"
      }
    ],
    "id": "026887c01dd8473f92d6ec1da23af18d",
    "predicate mapping": [
      {
        "label": "work",
        "uri": "http://dbpedia.org/property/branch",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "What teams did the ex teamplayers of lighthouse boy club start their career with?",
    "SerialNumber": "1849",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/youthclubs\u003e \u003chttp://dbpedia.org/resource/Lighthouse_Boys_Club\u003e . ?x \u003chttp://dbpedia.org/property/debutteam\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "lighthouse club",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Lighthouse_Boys_Club",
        "seq": "999,1000"
      }
    ],
    "id": "b7f41cde28da47ef84c2c318244b7edd",
    "predicate mapping": [
      {
        "label": "club",
        "uri": "http://dbpedia.org/property/youthclubs",
        "seq": "52,56",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "teams",
        "uri": "http://dbpedia.org/property/debutteam",
        "seq": "5,10",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which producer of Purvis Eureka engine is also the owner of Ford Theatre ?",
    "SerialNumber": "1853",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Purvis_Eureka\u003e \u003chttp://dbpedia.org/property/engine\u003e ?uri. \u003chttp://dbpedia.org/resource/Ford_Theatre\u003e \u003chttp://dbpedia.org/property/company\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Purvis Eureka",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Purvis_Eureka",
        "seq": "18,31"
      },
      {
        "label": "Ford Theatre",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Ford_Theatre",
        "seq": "60,72"
      }
    ],
    "id": "ce99d86c121449bda242a1944532331a",
    "predicate mapping": [
      {
        "label": "engine",
        "uri": "http://dbpedia.org/property/engine",
        "seq": "32,38",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "owner",
        "uri": "http://dbpedia.org/property/company",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Among the companies who has product named Chinook who has a key person as Dennis Muilenburg ?",
    "SerialNumber": "1855",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/keyPeople\u003e \u003chttp://dbpedia.org/resource/Dennis_Muilenburg\u003e . ?uri \u003chttp://dbpedia.org/property/products\u003e \u003chttp://dbpedia.org/resource/Boeing_CH-47_Chinook\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Company\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Dennis Muilenburg",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Dennis_Muilenburg",
        "seq": "74,91"
      },
      {
        "label": "chinook",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Boeing_CH-47_Chinook",
        "seq": "999,1000"
      }
    ],
    "id": "59a2342df2b04a22832b4b8d099295ea",
    "predicate mapping": [
      {
        "label": "key",
        "uri": "http://dbpedia.org/property/keyPeople",
        "seq": "60,63",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "product",
        "uri": "http://dbpedia.org/property/products",
        "seq": "28,35",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "companies",
        "uri": "http://dbpedia.org/ontology/Company",
        "seq": "10,19",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who gave guest appearances on the show which is the next episode after the Bombshell one?",
    "SerialNumber": "1857",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/previousWork\u003e \u003chttp://dbpedia.org/resource/Bombshell_(Smash)\u003e . ?x \u003chttp://dbpedia.org/property/guests\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionEpisode\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Bombshell",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Bombshell_(Smash)",
        "seq": "75,84"
      }
    ],
    "id": "6cd5cdc40f6e4af8a04465a6699c16ea",
    "predicate mapping": [
      {
        "label": "episode",
        "uri": "http://dbpedia.org/ontology/previousWork",
        "mappedBy": "word2vec"
      },
      {
        "label": "guest",
        "uri": "http://dbpedia.org/property/guests",
        "seq": "9,14",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "episode one",
        "uri": "http://dbpedia.org/ontology/TelevisionEpisode",
        "seq": "-1,10",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Miluk and Cayuse are still spoken in which part of the world?",
    "SerialNumber": "1858",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Miluk_language\u003e \u003chttp://dbpedia.org/property/region\u003e ?uri. \u003chttp://dbpedia.org/resource/Cayuse_language\u003e \u003chttp://dbpedia.org/property/region\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "miluk",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Miluk_language",
        "seq": "999,1000"
      },
      {
        "label": "cayuse",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Cayuse_language",
        "seq": "999,1000"
      }
    ],
    "id": "bbc69cd1992d42deba2ecb4e218a9349",
    "predicate mapping": [
      {
        "label": "world",
        "uri": "http://dbpedia.org/property/region",
        "mappedBy": "word2vec"
      },
      {
        "label": "world",
        "uri": "http://dbpedia.org/property/region",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "With whom is the institution of David Charles affiliated?",
    "SerialNumber": "1860",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/David_Charles_(physician)\u003e \u003chttp://dbpedia.org/property/workInstitutions\u003e ?x . ?x \u003chttp://dbpedia.org/property/affiliation\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "David Charles",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/David_Charles_(physician)",
        "seq": "32,45"
      }
    ],
    "id": "0394d1d9bb67406ebe89217042530952",
    "predicate mapping": [
      {
        "label": "institution",
        "uri": "http://dbpedia.org/property/workInstitutions",
        "seq": "17,28",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "affiliated",
        "uri": "http://dbpedia.org/property/affiliation",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Which battle did both Steven Palazao and tony hogg fight in?",
    "SerialNumber": "1861",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Steven_Palazzo\u003e \u003chttp://dbpedia.org/property/battles\u003e ?uri. \u003chttp://dbpedia.org/resource/Tony_Hogg\u003e \u003chttp://dbpedia.org/property/battles\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "steven",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Steven_Palazzo",
        "seq": "999,1000"
      },
      {
        "label": "tony hogg",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Tony_Hogg",
        "seq": "41,50"
      }
    ],
    "id": "ce165bf79de24f10844b39944b1c118c",
    "predicate mapping": [
      {
        "label": "battle",
        "uri": "http://dbpedia.org/property/battles",
        "seq": "6,12",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "battle",
        "uri": "http://dbpedia.org/property/battles",
        "seq": "6,12",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who was the coach of marquette Golden Eagles men\u0027s basketball team-2012,13 season ?",
    "SerialNumber": "1866",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/2012–13_Marquette_Golden_Eagles_men\u0027s_basketball_team\u003e \u003chttp://dbpedia.org/ontology/coach\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "basketball marquette golden eagles men\u0027s",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/2012–13_Marquette_Golden_Eagles_men\u0027s_basketball_team",
        "seq": "999,1000"
      }
    ],
    "id": "2462f71d97294217948911559d7808a7",
    "predicate mapping": [
      {
        "label": "coach",
        "uri": "http://dbpedia.org/ontology/coach",
        "seq": "12,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What made Jon Speelman and Eric Schiller famous?",
    "SerialNumber": "1868",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Jon_Speelman\u003e \u003chttp://dbpedia.org/ontology/field\u003e ?uri. \u003chttp://dbpedia.org/resource/Eric_Schiller\u003e \u003chttp://dbpedia.org/ontology/knownFor\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jon Speelman",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Jon_Speelman",
        "seq": "10,22"
      },
      {
        "label": "Eric Schiller",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Eric_Schiller",
        "seq": "27,40"
      }
    ],
    "id": "cad47dbadca34d12a26f9f492cee5f29",
    "predicate mapping": [
      {
        "label": "famous",
        "uri": "http://dbpedia.org/ontology/field",
        "mappedBy": "word2vec"
      },
      {
        "label": "famous",
        "uri": "http://dbpedia.org/ontology/knownFor",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "In which wars army men awarded with the Croix de Guerre, fought?",
    "SerialNumber": "1869",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/awards\u003e \u003chttp://dbpedia.org/resource/Croix_de_guerre_1939–1945_(France)\u003e . ?x \u003chttp://dbpedia.org/property/battles\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MilitaryPerson\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Croix de Guerre",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Croix_de_guerre_1939–1945_(France)",
        "seq": "40,55"
      }
    ],
    "id": "7b7764c0196d461999cc23dd0df6c84e",
    "predicate mapping": [
      {
        "label": "awarded",
        "uri": "http://dbpedia.org/property/awards",
        "seq": "23,30",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "fought",
        "uri": "http://dbpedia.org/property/battles",
        "mappedBy": "word2vec"
      },
      {
        "label": "fought",
        "uri": "http://dbpedia.org/ontology/MilitaryPerson",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which manufacturer of the Boeing B-17 Flying fortress is the manager of burro Flats Painted Caves ?",
    "SerialNumber": "1870",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Burro_Flats_Painted_Cave\u003e \u003chttp://dbpedia.org/ontology/governingBody\u003e ?uri. \u003chttp://dbpedia.org/resource/Boeing_B-17_Flying_Fortress\u003e \u003chttp://dbpedia.org/ontology/manufacturer\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "burro Flats Painted Cave",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Burro_Flats_Painted_Cave",
        "seq": "72,96"
      },
      {
        "label": "Boeing B-17 Flying fortress",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Boeing_B-17_Flying_Fortress",
        "seq": "26,53"
      }
    ],
    "id": "4d44f78d46374b24819e6cdf6753aad7",
    "predicate mapping": [
      {
        "label": "manager",
        "uri": "http://dbpedia.org/ontology/governingBody",
        "mappedBy": "word2vec"
      },
      {
        "label": "manufacturer",
        "uri": "http://dbpedia.org/ontology/manufacturer",
        "seq": "6,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "101",
    "question": "How many people currently play for Stoke City F.C.?",
    "SerialNumber": "1872",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/property/currentclub\u003e \u003chttp://dbpedia.org/resource/Stoke_City_F.C.\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Stoke City F.C.",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Stoke_City_F.C.",
        "seq": "35,50"
      }
    ],
    "id": "e6e655798ed9475796f9df8aa87c9a4e",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/currentclub",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "405",
    "question": "In how many different places can I find companies which were founded in toronto?",
    "SerialNumber": "1873",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/foundationPlace\u003e \u003chttp://dbpedia.org/resource/Toronto\u003e . ?x \u003chttp://dbpedia.org/property/locations\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Place\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "toronto",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Toronto",
        "seq": "72,79"
      }
    ],
    "id": "ec75426ef9034e49baa03c7c16d57f2a",
    "predicate mapping": [
      {
        "label": "founded",
        "uri": "http://dbpedia.org/ontology/foundationPlace",
        "seq": "61,68",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "companies",
        "uri": "http://dbpedia.org/property/locations",
        "mappedBy": "word2vec"
      },
      {
        "label": "place",
        "uri": "http://dbpedia.org/ontology/Place",
        "seq": "22,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "405",
    "question": "How many organizations own the website to which Jimmy Wales contributes?",
    "SerialNumber": "1874",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/author\u003e \u003chttp://dbpedia.org/resource/Jimmy_Wales\u003e . ?x \u003chttp://dbpedia.org/ontology/owner\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Organisation\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jimmy Wales",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Jimmy_Wales",
        "seq": "48,59"
      }
    ],
    "id": "55b86a8a22e4483d935168408545caa7",
    "predicate mapping": [
      {
        "label": "contributes",
        "uri": "http://dbpedia.org/ontology/author",
        "mappedBy": "word2vec"
      },
      {
        "label": "own",
        "uri": "http://dbpedia.org/ontology/owner",
        "seq": "23,26",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "uri": "http://dbpedia.org/ontology/Organisation",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "405",
    "question": "Through how many cities does the river flowing into Arkansas go?",
    "SerialNumber": "1876",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/mouthMountain\u003e \u003chttp://dbpedia.org/resource/Arkansas\u003e . ?x \u003chttp://dbpedia.org/ontology/city\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/City\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Arkansas",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Arkansas",
        "seq": "52,60"
      }
    ],
    "id": "5c2111f2815f4809b9548ab2c0c677d3",
    "predicate mapping": [
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/mouthMountain",
        "mappedBy": "word2vec"
      },
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/city",
        "seq": "43,45",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/City",
        "seq": "43,45",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "Which fictional character\u0027s relatives were made by Ted Osborne?",
    "SerialNumber": "1877",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/creator\u003e \u003chttp://dbpedia.org/resource/Ted_Osborne\u003e . ?uri \u003chttp://dbpedia.org/property/relatives\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/FictionalCharacter\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ted Osborne",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ted_Osborne",
        "seq": "51,62"
      }
    ],
    "id": "74671972de564fbe97ece8a85fd86fcd",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/creator",
        "mappedBy": "word2vec"
      },
      {
        "label": "relatives",
        "uri": "http://dbpedia.org/property/relatives",
        "seq": "28,37",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "fictional character",
        "uri": "http://dbpedia.org/ontology/FictionalCharacter",
        "seq": "6,25",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which designer of RENFE also owns Renaissance Center ?",
    "SerialNumber": "1880",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/RENFE_Class_333\u003e \u003chttp://dbpedia.org/ontology/designer\u003e ?uri. \u003chttp://dbpedia.org/resource/Renaissance_Center\u003e \u003chttp://dbpedia.org/property/owner\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "renfe",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/RENFE_Class_333",
        "seq": "999,1000"
      },
      {
        "label": "Renaissance Center",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Renaissance_Center",
        "seq": "34,52"
      }
    ],
    "id": "9b8b445ddfbb463187269990961ac846",
    "predicate mapping": [
      {
        "label": "designer",
        "uri": "http://dbpedia.org/ontology/designer",
        "seq": "6,14",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "owns",
        "uri": "http://dbpedia.org/property/owner",
        "seq": "29,33",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "What shows are on the networks which are from the United States?",
    "SerialNumber": "1882",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/locationCountry\u003e \u003chttp://dbpedia.org/resource/United_States\u003e . ?uri \u003chttp://dbpedia.org/property/network\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "United States",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/United_States",
        "seq": "50,63"
      }
    ],
    "id": "99a06bb6d4f3448da8d9b37aec6a17fe",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/locationCountry",
        "mappedBy": "word2vec"
      },
      {
        "label": "network",
        "uri": "http://dbpedia.org/property/network",
        "seq": "22,29",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "5,10",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who have rented the stadium operated by Maple Leaf S\u0026E?",
    "SerialNumber": "1883",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/operator\u003e \u003chttp://dbpedia.org/resource/Maple_Leaf_Sports_\u0026_Entertainment\u003e . ?x \u003chttp://dbpedia.org/ontology/tenant\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Stadium\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "maple",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Maple_Leaf_Sports_\u0026_Entertainment",
        "seq": "999,1000"
      }
    ],
    "id": "2bce3f2fcdbd463ebbcd84e5b65eb439",
    "predicate mapping": [
      {
        "label": "S\u0026E",
        "uri": "http://dbpedia.org/property/operator",
        "mappedBy": "word2vec"
      },
      {
        "label": "S\u0026E",
        "uri": "http://dbpedia.org/ontology/tenant",
        "mappedBy": "word2vec"
      },
      {
        "label": "stadium",
        "uri": "http://dbpedia.org/ontology/Stadium",
        "seq": "20,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Where is Snake Island located ?",
    "SerialNumber": "1885",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Snake_Island_(Black_Sea)\u003e \u003chttp://dbpedia.org/property/locationCountry\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Snake Island",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Snake_Island_(Black_Sea)",
        "seq": "9,21"
      }
    ],
    "id": "586e586025864050b16699cda92980a7",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/property/locationCountry",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What are the relatives of the parliament member whose successor is Peter Thorneycroft?",
    "SerialNumber": "1890",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/successor\u003e \u003chttp://dbpedia.org/resource/Peter_Thorneycroft\u003e . ?x \u003chttp://dbpedia.org/ontology/relation\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MemberOfParliament\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Peter Thorneycroft",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Peter_Thorneycroft",
        "seq": "67,85"
      }
    ],
    "id": "3ece33a3b26c44ba89d83c5af7910d5a",
    "predicate mapping": [
      {
        "label": "successor",
        "uri": "http://dbpedia.org/property/successor",
        "seq": "54,63",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "relatives",
        "uri": "http://dbpedia.org/ontology/relation",
        "mappedBy": "word2vec"
      },
      {
        "label": "parliament member",
        "uri": "http://dbpedia.org/ontology/MemberOfParliament",
        "seq": "30,47",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which american football player\u0027s current team is Michigan Wolverines and former team was  Baltimore Ravens ?",
    "SerialNumber": "1893",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/currentteam\u003e \u003chttp://dbpedia.org/resource/Michigan_Wolverines\u003e . ?uri \u003chttp://dbpedia.org/ontology/formerTeam\u003e \u003chttp://dbpedia.org/resource/1998_Baltimore_Ravens_season\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/AmericanFootballPlayer\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Michigan Wolverines",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Michigan_Wolverines",
        "seq": "49,68"
      },
      {
        "label": "baltimore ravens",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/1998_Baltimore_Ravens_season",
        "seq": "999,1000"
      }
    ],
    "id": "b82d8ce46e1a4a6ba75108b376994f10",
    "predicate mapping": [
      {
        "label": "current team",
        "uri": "http://dbpedia.org/property/currentteam",
        "seq": "33,45",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "former team",
        "uri": "http://dbpedia.org/ontology/formerTeam",
        "seq": "73,84",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "american football player",
        "uri": "http://dbpedia.org/ontology/AmericanFootballPlayer",
        "seq": "6,30",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "What famous work is derived from the one whose lyrics are written by Inma Gonzales?",
    "SerialNumber": "1894",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/lyrics\u003e \u003chttp://dbpedia.org/resource/Inma_González\u003e . ?x \u003chttp://dbpedia.org/ontology/basedOn\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Inma_González",
        "seq": "999,1000"
      }
    ],
    "id": "6afc2e0ce3f244ce93a5bed1fab03623",
    "predicate mapping": [
      {
        "label": "lyrics",
        "uri": "http://dbpedia.org/ontology/lyrics",
        "seq": "47,53",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "derived from",
        "uri": "http://dbpedia.org/ontology/basedOn",
        "seq": "20,32",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "What are the veneration of the one for which there\u0027s a major shrine in Hebron?",
    "SerialNumber": "1898",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/majorShrine\u003e \u003chttp://dbpedia.org/resource/Hebron\u003e . ?x \u003chttp://dbpedia.org/property/veneratedIn\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Hebron",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Hebron",
        "seq": "71,77"
      }
    ],
    "id": "18eeaa768fa343b285501be229538892",
    "predicate mapping": [
      {
        "label": "major shrine",
        "uri": "http://dbpedia.org/property/majorShrine",
        "seq": "55,67",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "there\u0027s",
        "uri": "http://dbpedia.org/property/veneratedIn",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "101",
    "question": "How many politicians are in the militia?",
    "SerialNumber": "1901",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/property/branch\u003e \u003chttp://dbpedia.org/resource/Militia\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "militia",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Militia",
        "seq": "32,39"
      }
    ],
    "id": "b3de1886f6a34847a46f036db7e7f0f2",
    "predicate mapping": [
      {
        "label": "politicians",
        "uri": "http://dbpedia.org/property/branch",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the source country of Water resources managemnt in EL Salvador is also the land of Jos MAra Orellana ?",
    "SerialNumber": "1903",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Water_resources_management_in_El_Salvador\u003e \u003chttp://dbpedia.org/property/sourceCountry\u003e ?uri. \u003chttp://dbpedia.org/resource/José_María_Orellana\u003e \u003chttp://dbpedia.org/ontology/country\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "resources",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Water_resources_management_in_El_Salvador",
        "seq": "999,1000"
      },
      {
        "label": "orellana",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/José_María_Orellana",
        "seq": "999,1000"
      }
    ],
    "id": "a38439a78e5c4e43954ba3096b10f6c6",
    "predicate mapping": [
      {
        "label": "source country",
        "uri": "http://dbpedia.org/property/sourceCountry",
        "seq": "12,26",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/country",
        "seq": "19,26",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "Some movies whose screenplay is done by american born people?",
    "SerialNumber": "1906",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/birthPlace\u003e \u003chttp://dbpedia.org/resource/United_States\u003e . ?uri \u003chttp://dbpedia.org/property/screenplay\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "american",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/United_States",
        "seq": "40,48"
      }
    ],
    "id": "b9b27ecb9a874649a57739e1ec0b5ab4",
    "predicate mapping": [
      {
        "label": "people",
        "uri": "http://dbpedia.org/ontology/birthPlace",
        "mappedBy": "word2vec"
      },
      {
        "label": "screenplay",
        "uri": "http://dbpedia.org/property/screenplay",
        "seq": "18,28",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "8",
    "question": "Which colonel consort is Dolley Madison?",
    "SerialNumber": "1908",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/rank\u003e \u003chttp://dbpedia.org/resource/Colonel_(United_States)\u003e . ?uri \u003chttp://dbpedia.org/property/spouse\u003e \u003chttp://dbpedia.org/resource/Dolley_Madison\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "colonel",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Colonel_(United_States)",
        "seq": "6,13"
      },
      {
        "label": "Dolley Madison",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Dolley_Madison",
        "seq": "25,39"
      }
    ],
    "id": "c45b083d0f4e4d43b3c84cbb54b3e598",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/rank",
        "mappedBy": "word2vec"
      },
      {
        "label": "consort",
        "uri": "http://dbpedia.org/property/spouse",
        "seq": "14,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Which company ownes stock in Dagenham turbines and Ford Motor credit?",
    "SerialNumber": "1910",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Ford_Motor_Credit_Company\u003e \u003chttp://dbpedia.org/property/owner\u003e ?uri. \u003chttp://dbpedia.org/resource/Dagenham_wind_turbines\u003e \u003chttp://dbpedia.org/property/owner\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ford Motor credit",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Ford_Motor_Credit_Company",
        "seq": "51,68"
      },
      {
        "label": "turbines dagenham",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Dagenham_wind_turbines",
        "seq": "999,1000"
      }
    ],
    "id": "1d50c91b6a7745c6818f2e8464d35108",
    "predicate mapping": [
      {
        "label": "ownes",
        "uri": "http://dbpedia.org/property/owner",
        "seq": "14,19",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "ownes",
        "uri": "http://dbpedia.org/property/owner",
        "seq": "14,19",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Was Michael Schumacher a pole driver in the 1999 GP?",
    "SerialNumber": "1915",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/1999_Japanese_Grand_Prix\u003e \u003chttp://dbpedia.org/property/poleDriver\u003e \u003chttp://dbpedia.org/resource/Michael_Schumacher\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "1999",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/1999_Japanese_Grand_Prix",
        "seq": "999,1000"
      },
      {
        "label": "Michael Schumacher",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Michael_Schumacher",
        "seq": "4,22"
      }
    ],
    "id": "9167d5c750d0472389d1ae6346e74154",
    "predicate mapping": [
      {
        "label": "pole driver",
        "uri": "http://dbpedia.org/property/poleDriver",
        "seq": "25,36",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "401",
    "question": "How many universities participate in the NCAA Division I Football Bowl Subdivision?",
    "SerialNumber": "1916",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/property/athletics\u003e \u003chttp://dbpedia.org/resource/NCAA_Division_I_Football_Bowl_Subdivision\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/University\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "NCAA Division I Football Bowl Subdivision",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/NCAA_Division_I_Football_Bowl_Subdivision",
        "seq": "41,82"
      }
    ],
    "id": "125b4ddfca3f45c987a4f7d3791fd239",
    "predicate mapping": [
      {
        "label": "participate",
        "uri": "http://dbpedia.org/property/athletics",
        "mappedBy": "word2vec"
      },
      {
        "label": "universities",
        "uri": "http://dbpedia.org/ontology/University",
        "seq": "9,21",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which writer of the Snaman is also the writer of Neverwher ?",
    "SerialNumber": "1920",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/The_Sandman_(Vertigo)\u003e \u003chttp://dbpedia.org/property/writers\u003e ?uri. \u003chttp://dbpedia.org/resource/Neverwhere_(radio_play)\u003e \u003chttp://dbpedia.org/ontology/writer\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/The_Sandman_(Vertigo)",
        "seq": "999,1000"
      },
      {
        "label": "neverwher",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Neverwhere_(radio_play)",
        "seq": "999,1000"
      }
    ],
    "id": "8eea4bb7e4f9442a8153aa8ae835ffeb",
    "predicate mapping": [
      {
        "label": "writer",
        "uri": "http://dbpedia.org/property/writers",
        "seq": "6,12",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "writer",
        "uri": "http://dbpedia.org/ontology/writer",
        "seq": "6,12",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "406",
    "question": "How many people have managed a club which owns the Riverside Stadium?",
    "SerialNumber": "1922",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/ground\u003e \u003chttp://dbpedia.org/resource/Riverside_Stadium\u003e . ?uri \u003chttp://dbpedia.org/ontology/managerClub\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Riverside Stadium",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Riverside_Stadium",
        "seq": "51,68"
      }
    ],
    "id": "bf8962801bda4524830a4a9e93f343ae",
    "predicate mapping": [
      {
        "label": "owns",
        "uri": "http://dbpedia.org/property/ground",
        "mappedBy": "word2vec"
      },
      {
        "label": "managed",
        "uri": "http://dbpedia.org/ontology/managerClub",
        "seq": "21,28",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "owns",
        "uri": "http://dbpedia.org/ontology/Person",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "What Orson Welles directed movie has  photography director as Gregg Toland ?",
    "SerialNumber": "1930",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/cinematography\u003e \u003chttp://dbpedia.org/resource/Gregg_Toland\u003e . ?uri \u003chttp://dbpedia.org/property/director\u003e \u003chttp://dbpedia.org/resource/Orson_Welles\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Gregg Toland",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Gregg_Toland",
        "seq": "62,74"
      },
      {
        "label": "Orson Welles",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Orson_Welles",
        "seq": "5,17"
      }
    ],
    "id": "bf9af6758f024671b29e7786a3bd5039",
    "predicate mapping": [
      {
        "label": "photography",
        "uri": "http://dbpedia.org/ontology/cinematography",
        "mappedBy": "word2vec"
      },
      {
        "label": "director",
        "uri": "http://dbpedia.org/property/director",
        "seq": "50,58",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "27,32",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "List the driver of SA MArino Grand Prix is also the Pole driver of Canadian Grand Proix ?",
    "SerialNumber": "1932",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/1999_San_Marino_Grand_Prix\u003e \u003chttp://dbpedia.org/property/firstDriver\u003e ?uri. \u003chttp://dbpedia.org/resource/1997_Canadian_Grand_Prix\u003e \u003chttp://dbpedia.org/property/poleDriver\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "marino",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/1999_San_Marino_Grand_Prix",
        "seq": "999,1000"
      },
      {
        "label": "canadian grand prix",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/1997_Canadian_Grand_Prix",
        "seq": "999,1000"
      }
    ],
    "id": "7eb44afae7a540749ea01a4484cc116c",
    "predicate mapping": [
      {
        "label": "driver",
        "uri": "http://dbpedia.org/property/firstDriver",
        "seq": "9,15",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "Pole driver",
        "uri": "http://dbpedia.org/property/poleDriver",
        "seq": "52,63",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "How many awards have screenwriters won?",
    "SerialNumber": "1933",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/occupation\u003e \u003chttp://dbpedia.org/resource/Screenwriter\u003e . ?x \u003chttp://dbpedia.org/ontology/award\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "screenwriter",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Screenwriter",
        "seq": "21,33"
      }
    ],
    "id": "ccfb1eb8fbba41d2931dfb71598a8784",
    "predicate mapping": [
      {
        "label": "won",
        "uri": "http://dbpedia.org/ontology/occupation",
        "mappedBy": "word2vec"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/award",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the local authority of the Buckhurst Hill County High School is also the birth palce of Sarah hampion ?",
    "SerialNumber": "1934",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Buckhurst_Hill_County_High_School\u003e \u003chttp://dbpedia.org/ontology/localAuthority\u003e ?uri. \u003chttp://dbpedia.org/resource/Sarah_Champion_(presenter)\u003e \u003chttp://dbpedia.org/property/birthPlace\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Buckhurst Hill County High School",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Buckhurst_Hill_County_High_School",
        "seq": "35,68"
      },
      {
        "label": "hampion sarah",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Sarah_Champion_(presenter)",
        "seq": "999,1000"
      }
    ],
    "id": "c7974233b0ce42da82267d5081901e7d",
    "predicate mapping": [
      {
        "label": "local authority",
        "uri": "http://dbpedia.org/ontology/localAuthority",
        "seq": "12,27",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "birth",
        "uri": "http://dbpedia.org/property/birthPlace",
        "seq": "81,86",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "List the countries through which European rout E39 and E8 passes ?",
    "SerialNumber": "1936",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/European_route_E39\u003e \u003chttp://dbpedia.org/ontology/county\u003e ?uri. \u003chttp://dbpedia.org/resource/European_route_E8\u003e \u003chttp://dbpedia.org/ontology/county\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "european rout",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/European_route_E39",
        "seq": "999,1000"
      },
      {
        "label": "european rout",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/European_route_E8",
        "seq": "999,1000"
      }
    ],
    "id": "82515aca204c44bb8a57aef8e97e9753",
    "predicate mapping": [
      {
        "label": "passes",
        "uri": "http://dbpedia.org/ontology/county",
        "mappedBy": "word2vec"
      },
      {
        "label": "passes",
        "uri": "http://dbpedia.org/ontology/county",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What are some orthonychidae birds?",
    "SerialNumber": "1945",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/family\u003e \u003chttp://dbpedia.org/resource/Orthonychidae\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Bird\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "orthonychidae",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Orthonychidae",
        "seq": "14,27"
      }
    ],
    "id": "f8980026033540a6b7278aa9d07efa35",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/family",
        "mappedBy": "word2vec"
      },
      {
        "label": "bird",
        "uri": "http://dbpedia.org/ontology/Bird",
        "seq": "28,32",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "List the music played in television episode which came after The Colonel (The Americans) ?",
    "SerialNumber": "1946",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/The_Colonel_(The_Americans)\u003e \u003chttp://dbpedia.org/ontology/subsequentWork\u003e ?x . ?x \u003chttp://dbpedia.org/property/music\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "The Colonel (The Americans)",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Colonel_(The_Americans)",
        "seq": "61,88"
      }
    ],
    "id": "13aa00a577f340fcbdb046e59b4c6be3",
    "predicate mapping": [
      {
        "label": "Colonel",
        "uri": "http://dbpedia.org/ontology/subsequentWork",
        "mappedBy": "word2vec"
      },
      {
        "label": "music",
        "uri": "http://dbpedia.org/property/music",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "where did Alfred Tarnowski die?",
    "SerialNumber": "1951",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Alfred_Tarnowski\u003e \u003chttp://dbpedia.org/property/placeOfDeath\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Alfred Tarnowski",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Alfred_Tarnowski",
        "seq": "10,26"
      }
    ],
    "id": "16e81494f124480cb7ff4c58f496996a",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/placeOfDeath",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Was the Incredibles released before Finding Nemo?",
    "SerialNumber": "1953",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/The_Incredibles_(film_score)\u003e \u003chttp://dbpedia.org/ontology/previousWork\u003e \u003chttp://dbpedia.org/resource/Finding_Nemo\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "the Incredibles",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Incredibles_(film_score)",
        "seq": "4,19"
      },
      {
        "label": "Finding Nemo",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Finding_Nemo",
        "seq": "36,48"
      }
    ],
    "id": "f6acd592b57c4dac95edb3c787a5980e",
    "predicate mapping": [
      {
        "label": "released",
        "uri": "http://dbpedia.org/ontology/previousWork",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "307",
    "question": "Which river originates from Cape Vincent and Kingston, Ontario?",
    "SerialNumber": "1955",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/property/sourceLocation\u003e \u003chttp://dbpedia.org/resource/Cape_Vincent,_New_York\u003e . ?uri \u003chttp://dbpedia.org/property/sourceLocation\u003e \u003chttp://dbpedia.org/resource/Kingston,_Ontario\u003e . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/River\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Cape Vincent",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Cape_Vincent,_New_York",
        "seq": "28,40"
      },
      {
        "label": "Kingston, Ontario",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Kingston,_Ontario",
        "seq": "45,62"
      }
    ],
    "id": "94b09d893f4549c8aa8340eebf9f2e4f",
    "predicate mapping": [
      {
        "label": "originates",
        "uri": "http://dbpedia.org/property/sourceLocation",
        "mappedBy": "word2vec"
      },
      {
        "label": "originates",
        "uri": "http://dbpedia.org/property/sourceLocation",
        "mappedBy": "word2vec"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River",
        "seq": "6,11",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "101",
    "question": "How many thesis were supervised by Ernest Rutherford?",
    "SerialNumber": "1958",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/ontology/doctoralAdvisor\u003e \u003chttp://dbpedia.org/resource/Ernest_Rutherford\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ernest Rutherford",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ernest_Rutherford",
        "seq": "35,52"
      }
    ],
    "id": "8de783323c0a490694c0e920f0ad07b8",
    "predicate mapping": [
      {
        "label": "supervised",
        "uri": "http://dbpedia.org/ontology/doctoralAdvisor",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "101",
    "question": "How many people currently play for the NYC FC?",
    "SerialNumber": "1962",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/property/currentclub\u003e \u003chttp://dbpedia.org/resource/New_York_City_FC\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/New_York_City_FC",
        "seq": "999,1000"
      }
    ],
    "id": "54e227ff2d2e417f99bcbc650ff5d8a7",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/currentclub",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Is Gutenberg neighbouring with Madiswil?",
    "SerialNumber": "1964",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Madiswil\u003e \u003chttp://dbpedia.org/property/neighboringMunicipalities\u003e \u003chttp://dbpedia.org/resource/Gutenburg,_Switzerland\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Madiswil",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Madiswil",
        "seq": "31,39"
      },
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Gutenburg,_Switzerland",
        "seq": "999,1000"
      }
    ],
    "id": "6182dae45a7a40889fd0d2797e4209ff",
    "predicate mapping": [
      {
        "label": "Gutenberg",
        "uri": "http://dbpedia.org/property/neighboringMunicipalities",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Over what do Concor holdings have a bridge?",
    "SerialNumber": "1967",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/builder\u003e \u003chttp://dbpedia.org/resource/Concor_Holdings\u003e . ?x \u003chttp://dbpedia.org/property/crosses\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Bridge\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Concor holdings",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Concor_Holdings",
        "seq": "13,28"
      }
    ],
    "id": "079e2720dce04b76bb7bc051f96ba21b",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/builder",
        "mappedBy": "word2vec"
      },
      {
        "label": "Over",
        "uri": "http://dbpedia.org/property/crosses",
        "seq": "0,4",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "bridge",
        "uri": "http://dbpedia.org/ontology/Bridge",
        "seq": "36,42",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Daniel L D Granger and Job Durfee have based their political career in which US state?",
    "SerialNumber": "1970",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Daniel_L._D._Granger\u003e \u003chttp://dbpedia.org/property/state\u003e ?uri. \u003chttp://dbpedia.org/resource/Job_Durfee\u003e \u003chttp://dbpedia.org/property/state\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "granger daniel",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Daniel_L._D._Granger",
        "seq": "999,1000"
      },
      {
        "label": "Job Durfee",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Job_Durfee",
        "seq": "23,33"
      }
    ],
    "id": "e35b89affcbc4e069a971dce50f9fd26",
    "predicate mapping": [
      {
        "label": "state",
        "uri": "http://dbpedia.org/property/state",
        "seq": "80,85",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "state",
        "uri": "http://dbpedia.org/property/state",
        "seq": "80,85",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "How many different mascots are there of the NCAA teams?",
    "SerialNumber": "1974",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/athletics\u003e \u003chttp://dbpedia.org/resource/National_Collegiate_Athletic_Association\u003e . ?x \u003chttp://dbpedia.org/property/mascot\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "NCAA",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/National_Collegiate_Athletic_Association",
        "seq": "44,48"
      }
    ],
    "id": "21aefb3be51e45ccb573c41d235eb2c4",
    "predicate mapping": [
      {
        "label": "teams",
        "uri": "http://dbpedia.org/property/athletics",
        "mappedBy": "word2vec"
      },
      {
        "label": "mascot",
        "uri": "http://dbpedia.org/property/mascot",
        "seq": "19,25",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Where do the stockholders of Pathaninaikos F.C. live?",
    "SerialNumber": "1975",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Panathinaikos_F.C.\u003e \u003chttp://dbpedia.org/ontology/owner\u003e ?x . ?x \u003chttp://dbpedia.org/property/residence\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Pathaninaikos F.C.",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Panathinaikos_F.C.",
        "seq": "29,47"
      }
    ],
    "id": "a325797e93f24edab0569ec125f0d080",
    "predicate mapping": [
      {
        "label": "stockholders",
        "uri": "http://dbpedia.org/ontology/owner",
        "seq": "13,25",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "live",
        "uri": "http://dbpedia.org/property/residence",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the common ideology followed by Katyayana and Palang Dharma Party ?",
    "SerialNumber": "1977",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Katyayana_(Buddhist)\u003e \u003chttp://dbpedia.org/property/religion\u003e ?uri. \u003chttp://dbpedia.org/resource/Palang_Dharma_Party\u003e \u003chttp://dbpedia.org/ontology/ideology\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Katyayana",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Katyayana_(Buddhist)",
        "seq": "40,49"
      },
      {
        "label": "Palang Dharma Party",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Palang_Dharma_Party",
        "seq": "54,73"
      }
    ],
    "id": "2ba1fd420a3144f68cb807b475c66dd5",
    "predicate mapping": [
      {
        "label": "common",
        "uri": "http://dbpedia.org/property/religion",
        "mappedBy": "word2vec"
      },
      {
        "label": "ideology",
        "uri": "http://dbpedia.org/ontology/ideology",
        "seq": "19,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Where can I find some buildings of modern architecture?",
    "SerialNumber": "1980",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/architecturalStyle\u003e \u003chttp://dbpedia.org/resource/Modern_architecture\u003e . ?x \u003chttp://dbpedia.org/property/address\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Building\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "modern architecture",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Modern_architecture",
        "seq": "35,54"
      }
    ],
    "id": "58c006275fb04301a88992b18018e5f8",
    "predicate mapping": [
      {
        "label": "architecture",
        "uri": "http://dbpedia.org/property/architecturalStyle",
        "seq": "42,54",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "find",
        "uri": "http://dbpedia.org/property/address",
        "mappedBy": "word2vec"
      },
      {
        "label": "building",
        "uri": "http://dbpedia.org/ontology/Building",
        "seq": "22,30",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Name the team Ramiro Pea played for, which was also the first team of Steve Ontiveros?",
    "SerialNumber": "1981",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Steve_Ontiveros_(infielder)\u003e \u003chttp://dbpedia.org/property/debutteam\u003e ?uri. \u003chttp://dbpedia.org/resource/Ramiro_Peña\u003e \u003chttp://dbpedia.org/ontology/team\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Steve Ontiveros",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Steve_Ontiveros_(infielder)",
        "seq": "70,85"
      },
      {
        "label": "ramiro",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Ramiro_Peña",
        "seq": "999,1000"
      }
    ],
    "id": "1b6199ceb90d4d089a7a2933476ec371",
    "predicate mapping": [
      {
        "label": "team",
        "uri": "http://dbpedia.org/property/debutteam",
        "seq": "9,13",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "played for",
        "uri": "http://dbpedia.org/ontology/team",
        "seq": "25,35",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "List the companies operating in Australia?",
    "SerialNumber": "1985",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/regionServed\u003e \u003chttp://dbpedia.org/resource/Australia\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Australia",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Australia",
        "seq": "32,41"
      }
    ],
    "id": "4973207551934a3bbfe9a31d282f7aa1",
    "predicate mapping": [
      {
        "label": "operating",
        "uri": "http://dbpedia.org/ontology/regionServed",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "What all are in the states whose anthem is Ja, vi esker dette landet?",
    "SerialNumber": "1986",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/anthem\u003e \u003chttp://dbpedia.org/resource/Ja,_vi_elsker_dette_landet\u003e . ?uri \u003chttp://dbpedia.org/ontology/country\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "landet",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Ja,_vi_elsker_dette_landet",
        "seq": "999,1000"
      }
    ],
    "id": "6e3344185dfb4c5dbeed1d2254ad79fb",
    "predicate mapping": [
      {
        "label": "anthem",
        "uri": "http://dbpedia.org/ontology/anthem",
        "seq": "33,39",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "state",
        "uri": "http://dbpedia.org/ontology/country",
        "seq": "20,25",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Which country are the players of the Atletico Petroleos de Luanda from?",
    "SerialNumber": "1988",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/club\u003e \u003chttp://dbpedia.org/resource/Atlético_Petróleos_de_Luanda_(handball)\u003e . ?x \u003chttp://dbpedia.org/ontology/nationality\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Athlete\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Atletico Petroleos de Luanda",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Atlético_Petróleos_de_Luanda_(handball)",
        "seq": "37,65"
      }
    ],
    "id": "4b373e478fb544ff89ce330c0d13a38d",
    "predicate mapping": [
      {
        "label": "players",
        "uri": "http://dbpedia.org/ontology/club",
        "mappedBy": "word2vec"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/nationality",
        "seq": "6,13",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "players",
        "uri": "http://dbpedia.org/ontology/Athlete",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who owns the ford kansas assembly plant?",
    "SerialNumber": "1989",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Ford_Kansas_City_Assembly_Plant\u003e \u003chttp://dbpedia.org/ontology/owningOrganisation\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "assembly kansas plant ford",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Ford_Kansas_City_Assembly_Plant",
        "seq": "999,1000"
      }
    ],
    "id": "7fe19c7b8b7e4a719c02a2308891d646",
    "predicate mapping": [
      {
        "label": "owns",
        "uri": "http://dbpedia.org/ontology/owningOrganisation",
        "seq": "4,8",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Which saints were the messengers of Islam?",
    "SerialNumber": "1990",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/veneratedIn\u003e \u003chttp://dbpedia.org/resource/Islam\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Saint\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Islam",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Islam",
        "seq": "36,41"
      }
    ],
    "id": "d225159e360c4ab99b91e8064247d40a",
    "predicate mapping": [
      {
        "label": "messengers",
        "uri": "http://dbpedia.org/ontology/veneratedIn",
        "mappedBy": "word2vec"
      },
      {
        "label": "saint",
        "uri": "http://dbpedia.org/ontology/Saint",
        "seq": "6,11",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "What do the relatives of James Hartness do?",
    "SerialNumber": "1992",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/relation\u003e \u003chttp://dbpedia.org/resource/James_Hartness\u003e . ?x \u003chttp://dbpedia.org/property/occupation\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "James Hartness",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/James_Hartness",
        "seq": "25,39"
      }
    ],
    "id": "02d9f9ed093c4c9bac55160e89a71635",
    "predicate mapping": [
      {
        "label": "relatives",
        "uri": "http://dbpedia.org/ontology/relation",
        "mappedBy": "word2vec"
      },
      {
        "label": "relatives",
        "uri": "http://dbpedia.org/property/occupation",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Where was the predecessor of Sevan Ross born?",
    "SerialNumber": "1995",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/successor\u003e \u003chttp://dbpedia.org/resource/Sevan_Ross\u003e . ?x \u003chttp://dbpedia.org/property/placeOfBirth\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Sevan Ross",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Sevan_Ross",
        "seq": "29,39"
      }
    ],
    "id": "113256a516bc4fd6b1b550678ccd7750",
    "predicate mapping": [
      {
        "label": "born",
        "uri": "http://dbpedia.org/ontology/successor",
        "mappedBy": "word2vec"
      },
      {
        "uri": "http://dbpedia.org/property/placeOfBirth",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Which company produced the car which was a new version of Daewoo\u0027s Tico?",
    "SerialNumber": "1996",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/predecessor\u003e \u003chttp://dbpedia.org/resource/Daewoo_Tico\u003e . ?x \u003chttp://dbpedia.org/property/parentCompany\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Automobile\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Daewoo_Tico",
        "seq": "999,1000"
      }
    ],
    "id": "359b7ca38c6d488cb3ebdbb52b991c87",
    "predicate mapping": [
      {
        "label": "Tico",
        "uri": "http://dbpedia.org/property/predecessor",
        "mappedBy": "word2vec"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/property/parentCompany",
        "seq": "6,13",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "Tico",
        "uri": "http://dbpedia.org/ontology/Automobile",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Who built the stadiums where 2014 FIFA under 17 woman\u0027s world cup took place?",
    "SerialNumber": "1997",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/tenant\u003e \u003chttp://dbpedia.org/resource/2014_FIFA_U-17_Women\u0027s_World_Cup\u003e . ?x \u003chttp://dbpedia.org/ontology/builder\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/2014_FIFA_U-17_Women\u0027s_World_Cup",
        "seq": "999,1000"
      }
    ],
    "id": "68cc4d86a23e4564a5b88efbd61a347b",
    "predicate mapping": [
      {
        "label": "place",
        "uri": "http://dbpedia.org/ontology/tenant",
        "mappedBy": "word2vec"
      },
      {
        "label": "place",
        "uri": "http://dbpedia.org/ontology/builder",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the source of Raa ?",
    "SerialNumber": "1998",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Raša_(river)\u003e \u003chttp://dbpedia.org/ontology/source\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Raša_(river)",
        "seq": "999,1000"
      }
    ],
    "id": "1230514af3324678b0f4930db7543258",
    "predicate mapping": [
      {
        "label": "source",
        "uri": "http://dbpedia.org/ontology/source",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "In which countries does the sea lie on whose shore is the city of Cumana?",
    "SerialNumber": "1999",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/cities\u003e \u003chttp://dbpedia.org/resource/Cumaná\u003e . ?x \u003chttp://dbpedia.org/ontology/country\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Sea\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Cumana",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Cumaná",
        "seq": "66,72"
      }
    ],
    "id": "4e66595b1889429ea3cc642a64440f99",
    "predicate mapping": [
      {
        "label": "shore",
        "uri": "http://dbpedia.org/property/cities",
        "mappedBy": "word2vec"
      },
      {
        "label": "city",
        "uri": "http://dbpedia.org/ontology/country",
        "seq": "58,62",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "sea",
        "uri": "http://dbpedia.org/ontology/Sea",
        "seq": "28,31",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "For which teams did the Hawai graduated players play their first game?",
    "SerialNumber": "2002",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/college\u003e \u003chttp://dbpedia.org/resource/Hawaii\u003e . ?x \u003chttp://dbpedia.org/ontology/debutTeam\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Athlete\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Hawai ",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Hawaii",
        "seq": "24,30"
      }
    ],
    "id": "e4f65c146f2447c0b3c8147f59a837e1",
    "predicate mapping": [
      {
        "label": "game",
        "uri": "http://dbpedia.org/property/college",
        "mappedBy": "word2vec"
      },
      {
        "label": "teams",
        "uri": "http://dbpedia.org/ontology/debutTeam",
        "seq": "10,15",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "game",
        "uri": "http://dbpedia.org/ontology/Athlete",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Movie\u0027s produced by Michael Deeley has Jordan Cronenweth as director of photography",
    "SerialNumber": "2004",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/producer\u003e \u003chttp://dbpedia.org/resource/Michael_Deeley\u003e . ?uri \u003chttp://dbpedia.org/ontology/cinematography\u003e \u003chttp://dbpedia.org/resource/Jordan_Cronenweth\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Michael Deeley",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Michael_Deeley",
        "seq": "20,34"
      },
      {
        "label": "Jordan Cronenweth",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Jordan_Cronenweth",
        "seq": "39,56"
      }
    ],
    "id": "4b43dbb1aa6943abab5354ce97147e72",
    "predicate mapping": [
      {
        "label": "produced",
        "uri": "http://dbpedia.org/ontology/producer",
        "seq": "8,16",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "photography",
        "uri": "http://dbpedia.org/ontology/cinematography",
        "mappedBy": "word2vec"
      },
      {
        "label": "Movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "0,5",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Who has written works found in the Gangan comics?",
    "SerialNumber": "2007",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/magazine\u003e \u003chttp://dbpedia.org/resource/Gangan_Comics\u003e . ?x \u003chttp://dbpedia.org/property/author\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Gangan comics",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Gangan_Comics",
        "seq": "35,48"
      }
    ],
    "id": "a45050c81a4d44f28d5f4050ae9db959",
    "predicate mapping": [
      {
        "label": "found",
        "uri": "http://dbpedia.org/property/magazine",
        "mappedBy": "word2vec"
      },
      {
        "label": "found",
        "uri": "http://dbpedia.org/property/author",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who has given guest appearances on the TV Episodes whose was music done by Mama Makes 3?",
    "SerialNumber": "2009",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/music\u003e \u003chttp://dbpedia.org/resource/Mama_Makes_Three\u003e . ?x \u003chttp://dbpedia.org/property/guests\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionEpisode\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "makes mama",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Mama_Makes_Three",
        "seq": "999,1000"
      }
    ],
    "id": "0c03e9d597b44f8bbef68457b98bb7c1",
    "predicate mapping": [
      {
        "label": "music",
        "uri": "http://dbpedia.org/property/music",
        "seq": "61,66",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "guest",
        "uri": "http://dbpedia.org/property/guests",
        "seq": "14,19",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "episodes",
        "uri": "http://dbpedia.org/ontology/TelevisionEpisode",
        "seq": "-1,7",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "In which countries have the Start + Flug aircrafts originated?",
    "SerialNumber": "2012",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/manufacturer\u003e \u003chttp://dbpedia.org/resource/Start_+_Flug\u003e . ?x \u003chttp://dbpedia.org/property/nationalOrigin\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Aircraft\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Start + Flug",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Start_+_Flug",
        "seq": "28,40"
      }
    ],
    "id": "9f314843488844988113ecbbe314006d",
    "predicate mapping": [
      {
        "label": "originated",
        "uri": "http://dbpedia.org/ontology/manufacturer",
        "mappedBy": "word2vec"
      },
      {
        "label": "originated",
        "uri": "http://dbpedia.org/property/nationalOrigin",
        "mappedBy": "word2vec"
      },
      {
        "label": "aircraft",
        "uri": "http://dbpedia.org/ontology/Aircraft",
        "seq": "41,49",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "return some  players who have played in the NBA?",
    "SerialNumber": "2013",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/league\u003e \u003chttp://dbpedia.org/resource/National_Basketball_Association\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "NBA",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/National_Basketball_Association",
        "seq": "44,47"
      }
    ],
    "id": "1979785c219b4798a0610b3ffc06873b",
    "predicate mapping": [
      {
        "label": "played",
        "uri": "http://dbpedia.org/property/league",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "What is the resting place of the politician who succeeded Samuel Hayes?",
    "SerialNumber": "2017",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Samuel_Hayes_(settler)\u003e \u003chttp://dbpedia.org/ontology/successor\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/restingPlace\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Politician\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Samuel Hayes",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Samuel_Hayes_(settler)",
        "seq": "58,70"
      }
    ],
    "id": "fa9fedea238d4402b21a174c49cb2e2b",
    "predicate mapping": [
      {
        "label": "succeeded",
        "uri": "http://dbpedia.org/ontology/successor",
        "mappedBy": "word2vec"
      },
      {
        "label": "resting place",
        "uri": "http://dbpedia.org/ontology/restingPlace",
        "seq": "12,25",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "politician",
        "uri": "http://dbpedia.org/ontology/Politician",
        "seq": "33,43",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Where did the wrestler trained by Ring of Honour get billed?",
    "SerialNumber": "2023",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/trainer\u003e \u003chttp://dbpedia.org/resource/Ring_of_Honor\u003e . ?x \u003chttp://dbpedia.org/property/billed\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Athlete\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ring of Honou",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ring_of_Honor",
        "seq": "34,47"
      }
    ],
    "id": "ac781ca0b046427fb17b9f7d786504b9",
    "predicate mapping": [
      {
        "label": "trained",
        "uri": "http://dbpedia.org/property/trainer",
        "seq": "23,30",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "billed",
        "uri": "http://dbpedia.org/property/billed",
        "seq": "53,59",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "wrestler",
        "uri": "http://dbpedia.org/ontology/Athlete",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "307",
    "question": "What is the television show whose cast members are Jeff Conaway and Jason Carter?",
    "SerialNumber": "2024",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/ontology/starring\u003e \u003chttp://dbpedia.org/resource/Jeff_Conaway\u003e . ?uri \u003chttp://dbpedia.org/ontology/starring\u003e \u003chttp://dbpedia.org/resource/Jason_Carter_(actor)\u003e . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jeff Conaway",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Jeff_Conaway",
        "seq": "51,63"
      },
      {
        "label": "Jason Carter",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Jason_Carter_(actor)",
        "seq": "68,80"
      }
    ],
    "id": "34f7503c1f79416eaf15faa883428f9d",
    "predicate mapping": [
      {
        "label": "members",
        "uri": "http://dbpedia.org/ontology/starring",
        "mappedBy": "word2vec"
      },
      {
        "label": "members",
        "uri": "http://dbpedia.org/ontology/starring",
        "mappedBy": "word2vec"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "12,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Who founded the city where Pat Vincent die?",
    "SerialNumber": "2025",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Pat_Vincent\u003e \u003chttp://dbpedia.org/ontology/deathPlace\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/founder\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Pat Vincent",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Pat_Vincent",
        "seq": "27,38"
      }
    ],
    "id": "7eab338cb255401796c57269d23ae776",
    "predicate mapping": [
      {
        "label": "die",
        "uri": "http://dbpedia.org/ontology/deathPlace",
        "mappedBy": "word2vec"
      },
      {
        "label": "founded",
        "uri": "http://dbpedia.org/ontology/founder",
        "seq": "4,11",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "The successor of Ellsworth Bunker belongs to which religion?",
    "SerialNumber": "2026",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Ellsworth_Bunker\u003e \u003chttp://dbpedia.org/ontology/successor\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/region\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ellsworth Bunker",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ellsworth_Bunker",
        "seq": "17,33"
      }
    ],
    "id": "beb30f1a6feb4cb2a855e669bf3f7555",
    "predicate mapping": [
      {
        "label": "successor",
        "uri": "http://dbpedia.org/ontology/successor",
        "seq": "4,13",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/region",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "In which wars were people from the Saudi Arabian ministry of defense involved?",
    "SerialNumber": "2029",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/office\u003e \u003chttp://dbpedia.org/resource/Minister_of_Defense_(Saudi_Arabia)\u003e . ?x \u003chttp://dbpedia.org/property/battles\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Saudi Arabian",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Minister_of_Defense_(Saudi_Arabia)",
        "seq": "35,48"
      }
    ],
    "id": "778e7cfd62804443a18d4c3eb9a42131",
    "predicate mapping": [
      {
        "label": "of",
        "uri": "http://dbpedia.org/property/office",
        "seq": "58,60",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "involved",
        "uri": "http://dbpedia.org/property/battles",
        "mappedBy": "word2vec"
      },
      {
        "label": "involved",
        "uri": "http://dbpedia.org/ontology/Person",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "103",
    "question": "How many factions were involved in the battles fought by Arthur St. Clair?",
    "SerialNumber": "2034",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { \u003chttp://dbpedia.org/resource/Arthur_St._Clair\u003e \u003chttp://dbpedia.org/property/battles\u003e ?x . ?x \u003chttp://dbpedia.org/property/combatant\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Arthur St. Clair",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Arthur_St._Clair",
        "seq": "57,73"
      }
    ],
    "id": "d73ddbee285644de8877440e530c8c3a",
    "predicate mapping": [
      {
        "label": "battles",
        "uri": "http://dbpedia.org/property/battles",
        "seq": "39,46",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "fought",
        "uri": "http://dbpedia.org/property/combatant",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What are the artists that have been in the band Framptons camel?",
    "SerialNumber": "2038",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/associatedActs\u003e \u003chttp://dbpedia.org/resource/Frampton\u0027s_Camel\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Artist\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Framptons",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Frampton\u0027s_Camel",
        "seq": "48,57"
      }
    ],
    "id": "ace6d15c16bc4a83b76485ccda9762e6",
    "predicate mapping": [
      {
        "label": "camel",
        "uri": "http://dbpedia.org/property/associatedActs",
        "mappedBy": "word2vec"
      },
      {
        "label": "artist",
        "uri": "http://dbpedia.org/ontology/Artist",
        "seq": "13,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who is the headcoach of 2013-14 Marquette Golden Eagles men\u0027s basketball team ?",
    "SerialNumber": "2041",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/2013–14_Marquette_Golden_Eagles_men\u0027s_basketball_team\u003e \u003chttp://dbpedia.org/property/headcoach\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "basketball marquette golden eagles",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/2013–14_Marquette_Golden_Eagles_men\u0027s_basketball_team",
        "seq": "999,1000"
      }
    ],
    "id": "f08fb8d368d348e482a1d9c778dd17d5",
    "predicate mapping": [
      {
        "label": "headcoach",
        "uri": "http://dbpedia.org/property/headcoach",
        "seq": "11,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "307",
    "question": "In which military conflict were Phm Vn ng and John McEwen commanders ?",
    "SerialNumber": "2043",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/ontology/commander\u003e \u003chttp://dbpedia.org/resource/Phạm_Văn_Đồng\u003e . ?uri \u003chttp://dbpedia.org/ontology/commander\u003e \u003chttp://dbpedia.org/resource/John_McEwen\u003e . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MilitaryConflict\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Phạm_Văn_Đồng",
        "seq": "999,1000"
      },
      {
        "label": "John McEwen",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/John_McEwen",
        "seq": "46,57"
      }
    ],
    "id": "86ca35205b364789addf51963601e201",
    "predicate mapping": [
      {
        "label": "commander",
        "uri": "http://dbpedia.org/ontology/commander",
        "seq": "58,67",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "commander",
        "uri": "http://dbpedia.org/ontology/commander",
        "seq": "58,67",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "military conflict",
        "uri": "http://dbpedia.org/ontology/MilitaryConflict",
        "seq": "9,26",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Does Air 2000 fly to the north american continent?",
    "SerialNumber": "2044",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Air_2000\u003e \u003chttp://dbpedia.org/ontology/destination\u003e \u003chttp://dbpedia.org/resource/North_America\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Air 2000",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Air_2000",
        "seq": "5,13"
      },
      {
        "label": "north american continent",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/North_America",
        "seq": "25,49"
      }
    ],
    "id": "7ab5eba0fa5e4d2db3867b842e966443",
    "predicate mapping": [
      {
        "label": "fly",
        "uri": "http://dbpedia.org/ontology/destination",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What is the predecessor of the car engine which was succeeded by  BMW M43 ?",
    "SerialNumber": "2046",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/successor\u003e \u003chttp://dbpedia.org/resource/BMW_M43\u003e . ?x \u003chttp://dbpedia.org/property/predecessor\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Engine\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "BMW M43",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/BMW_M43",
        "seq": "66,73"
      }
    ],
    "id": "298ec5bdf98b4eaead3626a3d1fd8456",
    "predicate mapping": [
      {
        "label": "succeeded",
        "uri": "http://dbpedia.org/ontology/successor",
        "mappedBy": "word2vec"
      },
      {
        "label": "predecessor",
        "uri": "http://dbpedia.org/property/predecessor",
        "seq": "12,23",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "engine",
        "uri": "http://dbpedia.org/ontology/Engine",
        "seq": "35,41",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "401",
    "question": "How many players debuted their careers from San Francisco 49ers?",
    "SerialNumber": "2047",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/ontology/debutTeam\u003e \u003chttp://dbpedia.org/resource/San_Francisco_49ers\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Athlete\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "San Francisco 49ers",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/San_Francisco_49ers",
        "seq": "44,63"
      }
    ],
    "id": "5809473753f34eeab40d9ef6574a79a6",
    "predicate mapping": [
      {
        "label": "debuted",
        "uri": "http://dbpedia.org/ontology/debutTeam",
        "seq": "17,24",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "careers",
        "uri": "http://dbpedia.org/ontology/Athlete",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Did Bob Dylan write the lyrics of the times they are a changin\u0027?",
    "SerialNumber": "2050",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/The_Times_They_Are_a-Changin\u0027_(musical)\u003e \u003chttp://dbpedia.org/property/lyrics\u003e \u003chttp://dbpedia.org/resource/Bob_Dylan\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "changin\u0027 times they",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/The_Times_They_Are_a-Changin\u0027_(musical)",
        "seq": "999,1000"
      },
      {
        "label": "Bob Dylan",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Bob_Dylan",
        "seq": "4,13"
      }
    ],
    "id": "e8cf794706634a76b62c2aaf12adf298",
    "predicate mapping": [
      {
        "label": "lyrics",
        "uri": "http://dbpedia.org/property/lyrics",
        "seq": "24,30",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "To which country do gabriel paris gordillo and gustavo rojas pinilla owe their allegiance?",
    "SerialNumber": "2051",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Gabriel_París_Gordillo\u003e \u003chttp://dbpedia.org/property/allegiance\u003e ?uri. \u003chttp://dbpedia.org/resource/Gustavo_Rojas_Pinilla\u003e \u003chttp://dbpedia.org/property/allegiance\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "gordillo gabriel",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Gabriel_París_Gordillo",
        "seq": "999,1000"
      },
      {
        "label": "gustavo rojas pinilla",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Gustavo_Rojas_Pinilla",
        "seq": "47,68"
      }
    ],
    "id": "3fa147b6f8f440749b08abb421bf2035",
    "predicate mapping": [
      {
        "label": "allegiance",
        "uri": "http://dbpedia.org/property/allegiance",
        "seq": "79,89",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "allegiance",
        "uri": "http://dbpedia.org/property/allegiance",
        "seq": "79,89",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "Who is the co-founder of the city where Owen Dougherty died?",
    "SerialNumber": "2055",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Owen_Dougherty\u003e \u003chttp://dbpedia.org/property/placeOfDeath\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/founder\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/City\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Owen Dougherty",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Owen_Dougherty",
        "seq": "40,54"
      }
    ],
    "id": "1e48900f6c1847c7832e07b1e02cb22c",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/placeOfDeath",
        "mappedBy": "word2vec"
      },
      {
        "label": "founder of",
        "uri": "http://dbpedia.org/ontology/founder",
        "seq": "14,24",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "city",
        "uri": "http://dbpedia.org/ontology/City",
        "seq": "29,33",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "What awards have the alumni of Academy of Fine Arts in Lodz achieved?",
    "SerialNumber": "2060",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/training\u003e \u003chttp://dbpedia.org/resource/Academy_of_Fine_Arts_In_Łódź\u003e . ?x \u003chttp://dbpedia.org/ontology/award\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "academy",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Academy_of_Fine_Arts_In_Łódź",
        "seq": "999,1000"
      }
    ],
    "id": "70c8d9f0e7c64d31b9e09f06e888d0ed",
    "predicate mapping": [
      {
        "label": "achieved",
        "uri": "http://dbpedia.org/ontology/training",
        "mappedBy": "word2vec"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/award",
        "seq": "5,11",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "406",
    "question": "How many TV shows are of the company which are of company which is a subsidiary of Big  Ticket Entertainment ?",
    "SerialNumber": "2061",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/subsidiary\u003e \u003chttp://dbpedia.org/resource/Big_Ticket_Entertainment\u003e . ?uri \u003chttp://dbpedia.org/property/company\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "entertainment ticket",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Big_Ticket_Entertainment",
        "seq": "999,1000"
      }
    ],
    "id": "0ca6c27bc7d045a09658ba31af63d7d0",
    "predicate mapping": [
      {
        "label": "subsidiary",
        "uri": "http://dbpedia.org/ontology/subsidiary",
        "seq": "69,79",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/property/company",
        "seq": "29,36",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "12,17",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name a person who works in Open Society Foundation and has wife named Susan Weber Soros ?",
    "SerialNumber": "2066",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/employer\u003e \u003chttp://dbpedia.org/resource/Open_Society_Foundations\u003e . ?uri \u003chttp://dbpedia.org/property/spouse\u003e \u003chttp://dbpedia.org/resource/Susan_Weber_Soros\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Open Society Foundation ",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Open_Society_Foundations",
        "seq": "27,51"
      },
      {
        "label": "Susan Weber Soros",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Susan_Weber_Soros",
        "seq": "70,87"
      }
    ],
    "id": "996ec9ddd3fb4c8ea7715aea366c4f9d",
    "predicate mapping": [
      {
        "label": "named",
        "uri": "http://dbpedia.org/property/employer",
        "mappedBy": "word2vec"
      },
      {
        "label": "wife",
        "uri": "http://dbpedia.org/property/spouse",
        "seq": "59,63",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/Person",
        "seq": "7,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which athletics of Jaimatu Muslim Mindano is same as the genre of the Fritz Chess ?",
    "SerialNumber": "2069",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Jamiatu_Muslim_Mindanao\u003e \u003chttp://dbpedia.org/ontology/athletics\u003e ?uri. \u003chttp://dbpedia.org/resource/Fritz_Chess\u003e \u003chttp://dbpedia.org/ontology/genre\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Jamiatu_Muslim_Mindanao",
        "seq": "999,1000"
      },
      {
        "label": "Fritz Chess",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Fritz_Chess",
        "seq": "70,81"
      }
    ],
    "id": "c44ba26fe4574a649b78f1dc00246dfd",
    "predicate mapping": [
      {
        "label": "athletics",
        "uri": "http://dbpedia.org/ontology/athletics",
        "seq": "6,15",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "genre",
        "uri": "http://dbpedia.org/ontology/genre",
        "seq": "57,62",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "In what battles did president Park Chung-hee participate?",
    "SerialNumber": "2072",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/commander\u003e \u003chttp://dbpedia.org/resource/Park_Chung-hee\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MilitaryConflict\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Park Chung-hee",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Park_Chung-hee",
        "seq": "30,44"
      }
    ],
    "id": "b381525459274ec79b5b9168839aa7b4",
    "predicate mapping": [
      {
        "label": "participate",
        "uri": "http://dbpedia.org/ontology/commander",
        "mappedBy": "word2vec"
      },
      {
        "label": "participate",
        "uri": "http://dbpedia.org/ontology/MilitaryConflict",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Is stephanie a female?",
    "SerialNumber": "2073",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Stephanie\u003e \u003chttp://dbpedia.org/property/gender\u003e \u003chttp://dbpedia.org/resource/Female\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "stephanie",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Stephanie",
        "seq": "3,12"
      },
      {
        "label": "female",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Female",
        "seq": "15,21"
      }
    ],
    "id": "2c54bb98872f4466b6a36426db7f553d",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/gender",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "Count the number of religions followed by BJP members.",
    "SerialNumber": "2076",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/party\u003e \u003chttp://dbpedia.org/resource/Bharatiya_Janata_Party\u003e . ?x \u003chttp://dbpedia.org/ontology/religion\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "BJP",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Bharatiya_Janata_Party",
        "seq": "42,45"
      }
    ],
    "id": "ac1933135e72469c8eb4faa146c394db",
    "predicate mapping": [
      {
        "label": "number",
        "uri": "http://dbpedia.org/property/party",
        "mappedBy": "word2vec"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion",
        "seq": "20,28",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "405",
    "question": "How many people have been the head coach for Middlesbrough FC?",
    "SerialNumber": "2077",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/club\u003e \u003chttp://dbpedia.org/resource/Middlesbrough_F.C.\u003e . ?x \u003chttp://dbpedia.org/ontology/manager\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Middlesbrough FC",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Middlesbrough_F.C.",
        "seq": "45,61"
      }
    ],
    "id": "0b31ffed88a540dc80c450e15236a114",
    "predicate mapping": [
      {
        "label": "head",
        "uri": "http://dbpedia.org/property/club",
        "mappedBy": "word2vec"
      },
      {
        "label": "coach",
        "uri": "http://dbpedia.org/ontology/manager",
        "seq": "35,40",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "head",
        "uri": "http://dbpedia.org/ontology/Person",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What games are played at universities in Lanao Del Sur?",
    "SerialNumber": "2079",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/state\u003e \u003chttp://dbpedia.org/resource/Lanao_del_Sur\u003e . ?x \u003chttp://dbpedia.org/ontology/athletics\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/University\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Lanao Del Sur",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Lanao_del_Sur",
        "seq": "41,54"
      }
    ],
    "id": "f8733a59b674426dac53692d6ac50bb0",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/state",
        "seq": "38,40",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "played",
        "uri": "http://dbpedia.org/ontology/athletics",
        "mappedBy": "word2vec"
      },
      {
        "label": "universities",
        "uri": "http://dbpedia.org/ontology/University",
        "seq": "25,37",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the movie in which Vangelis gave the music and Jordan was the cinematographer ?",
    "SerialNumber": "2086",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/music\u003e \u003chttp://dbpedia.org/resource/Vangelis\u003e . ?uri \u003chttp://dbpedia.org/ontology/cinematography\u003e \u003chttp://dbpedia.org/resource/Jordan_Cronenweth\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Vangelis",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Vangelis",
        "seq": "24,32"
      },
      {
        "label": "jordan",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Jordan_Cronenweth",
        "seq": "999,1000"
      }
    ],
    "id": "190465152dd44639aab83ac6b0e1d0fa",
    "predicate mapping": [
      {
        "label": "music",
        "uri": "http://dbpedia.org/property/music",
        "seq": "42,47",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "cinematographer",
        "uri": "http://dbpedia.org/ontology/cinematography",
        "seq": "67,82",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "101",
    "question": "How many people won the Gold Medal of the Royal Astronomical Society?",
    "SerialNumber": "2088",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/property/prizes\u003e \u003chttp://dbpedia.org/resource/Gold_Medal_of_the_Royal_Astronomical_Society\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Gold Medal of the Royal Astronomical Society",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Gold_Medal_of_the_Royal_Astronomical_Society",
        "seq": "24,68"
      }
    ],
    "id": "a6904e9b6e164493af1fde284d08f558",
    "predicate mapping": [
      {
        "label": "won",
        "uri": "http://dbpedia.org/property/prizes",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "With whom were the engagements of Alpine Brigade Taurinense?",
    "SerialNumber": "2090",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Alpine_Brigade_Taurinense\u003e \u003chttp://dbpedia.org/ontology/battle\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Alpine Brigade Taurinense",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Alpine_Brigade_Taurinense",
        "seq": "34,59"
      }
    ],
    "id": "6289a18178e44e02b341c0614bad4c81",
    "predicate mapping": [
      {
        "label": "engagements",
        "uri": "http://dbpedia.org/ontology/battle",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "405",
    "question": "In how many different places have US people died?",
    "SerialNumber": "2092",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/placeOfBirth\u003e \u003chttp://dbpedia.org/resource/United_States\u003e . ?x \u003chttp://dbpedia.org/ontology/deathPlace\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Location\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/United_States",
        "seq": "999,1000"
      }
    ],
    "id": "a4572121e3a84ab491141bad9959a94e",
    "predicate mapping": [
      {
        "label": "places",
        "uri": "http://dbpedia.org/property/placeOfBirth",
        "seq": "22,28",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "places",
        "uri": "http://dbpedia.org/ontology/deathPlace",
        "seq": "22,28",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "",
        "uri": "http://dbpedia.org/ontology/Location",
        "seq": "0,0",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "Terry Pratchett has written about how many topics?",
    "SerialNumber": "2096",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/author\u003e \u003chttp://dbpedia.org/resource/Terry_Pratchett\u003e . ?x \u003chttp://dbpedia.org/ontology/nonFictionSubject\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Terry Pratchett",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Terry_Pratchett",
        "seq": "0,15"
      }
    ],
    "id": "f38d40e812a24ed08486f86b89c75ca7",
    "predicate mapping": [
      {
        "label": "topics",
        "uri": "http://dbpedia.org/property/author",
        "mappedBy": "word2vec"
      },
      {
        "uri": "http://dbpedia.org/ontology/nonFictionSubject",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Martin Ferguson and Mike Kelly served under which aussie PM?",
    "SerialNumber": "2099",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Martin_Ferguson\u003e \u003chttp://dbpedia.org/property/primeminister\u003e ?uri. \u003chttp://dbpedia.org/resource/Mike_Kelly_(Australian_politician)\u003e \u003chttp://dbpedia.org/property/primeminister\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Martin Ferguson",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Martin_Ferguson",
        "seq": "0,15"
      },
      {
        "label": "Mike Kelly",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Mike_Kelly_(Australian_politician)",
        "seq": "20,30"
      }
    ],
    "id": "2453d5655cc8407182387fe5d0514477",
    "predicate mapping": [
      {
        "label": "PM",
        "uri": "http://dbpedia.org/property/primeminister",
        "mappedBy": "word2vec"
      },
      {
        "label": "PM",
        "uri": "http://dbpedia.org/property/primeminister",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who has fought in the conflicts around the Mississippi river?",
    "SerialNumber": "2101",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/place\u003e \u003chttp://dbpedia.org/resource/Mississippi_River\u003e . ?x \u003chttp://dbpedia.org/property/combatant\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MilitaryConflict\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Mississippi river",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Mississippi_River",
        "seq": "43,60"
      }
    ],
    "id": "e0ad5d9267d544bea41199ce7045fc36",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/place",
        "mappedBy": "word2vec"
      },
      {
        "label": "fought",
        "uri": "http://dbpedia.org/property/combatant",
        "mappedBy": "word2vec"
      },
      {
        "label": "conflicts",
        "uri": "http://dbpedia.org/ontology/MilitaryConflict",
        "seq": "22,31",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "List the relegion of tani University which is also the life stance of udit Raj ?",
    "SerialNumber": "2102",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Ōtani_University\u003e \u003chttp://dbpedia.org/property/affiliation\u003e ?uri. \u003chttp://dbpedia.org/resource/Udit_Raj\u003e \u003chttp://dbpedia.org/ontology/religion\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "university tani",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Ōtani_University",
        "seq": "999,1000"
      },
      {
        "label": "udit Raj",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Udit_Raj",
        "seq": "70,78"
      }
    ],
    "id": "95ad975ecd3f4f8a96cdc1d5ad089e0a",
    "predicate mapping": [
      {
        "label": "University",
        "uri": "http://dbpedia.org/property/affiliation",
        "mappedBy": "word2vec"
      },
      {
        "label": "life stance",
        "uri": "http://dbpedia.org/ontology/religion",
        "seq": "55,66",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Does the San Macros River start in Texas?",
    "SerialNumber": "2103",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/San_Marcos_River\u003e \u003chttp://dbpedia.org/ontology/sourceMountain\u003e \u003chttp://dbpedia.org/resource/Texas\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "river",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/San_Marcos_River",
        "seq": "999,1000"
      },
      {
        "label": "Texas",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Texas",
        "seq": "35,40"
      }
    ],
    "id": "33560cb70a394c659afde50ea4d2fa43",
    "predicate mapping": [
      {
        "label": "start",
        "uri": "http://dbpedia.org/ontology/sourceMountain",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Which university\u0027s graduates have worked in the Quartermaster corps?",
    "SerialNumber": "2104",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/militaryUnit\u003e \u003chttp://dbpedia.org/resource/Quartermaster_Corps_(United_States_Army)\u003e . ?x \u003chttp://dbpedia.org/ontology/almaMater\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Quartermaster corps",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Quartermaster_Corps_(United_States_Army)",
        "seq": "48,67"
      }
    ],
    "id": "a6a548a2d1ac484d8b94cd09ecf53768",
    "predicate mapping": [
      {
        "label": "worked",
        "uri": "http://dbpedia.org/ontology/militaryUnit",
        "mappedBy": "word2vec"
      },
      {
        "label": "graduates",
        "uri": "http://dbpedia.org/ontology/almaMater",
        "seq": "19,28",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What is the mascot of the military unit of David Prowse?",
    "SerialNumber": "2105",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/David_Prowse_(politician)\u003e \u003chttp://dbpedia.org/property/branch\u003e ?x . ?x \u003chttp://dbpedia.org/property/mascot\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "David Prowse",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/David_Prowse_(politician)",
        "seq": "43,55"
      }
    ],
    "id": "b19ab8c472b24e6b8dd6a089d1b46d61",
    "predicate mapping": [
      {
        "label": "unit",
        "uri": "http://dbpedia.org/property/branch",
        "mappedBy": "word2vec"
      },
      {
        "label": "mascot",
        "uri": "http://dbpedia.org/property/mascot",
        "seq": "12,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which music band made Take Me There, and to which Tedd Riley was associated?",
    "SerialNumber": "2106",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Teddy_Riley\u003e \u003chttp://dbpedia.org/ontology/associatedBand\u003e ?uri. \u003chttp://dbpedia.org/resource/Take_Me_There_(Blackstreet_\u0026_Mýa_song)\u003e \u003chttp://dbpedia.org/ontology/musicalBand\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "riley tedd",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Teddy_Riley",
        "seq": "999,1000"
      },
      {
        "label": "Take Me There",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Take_Me_There_(Blackstreet_\u0026_Mýa_song)",
        "seq": "22,35"
      }
    ],
    "id": "551b48df0734464987251916a5e96362",
    "predicate mapping": [
      {
        "label": "associated",
        "uri": "http://dbpedia.org/ontology/associatedBand",
        "seq": "65,75",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "music band",
        "uri": "http://dbpedia.org/ontology/musicalBand",
        "seq": "6,16",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Mouse Morris\u0027 horses have raced in which races?",
    "SerialNumber": "2107",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/trainer\u003e \u003chttp://dbpedia.org/resource/Mouse_Morris\u003e . ?x \u003chttp://dbpedia.org/property/race\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Horse\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Mouse Morris",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Mouse_Morris",
        "seq": "0,12"
      }
    ],
    "id": "2e6a230473e948a29d59e965ed724a74",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/trainer",
        "mappedBy": "word2vec"
      },
      {
        "label": "race",
        "uri": "http://dbpedia.org/property/race",
        "seq": "26,30",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "horse",
        "uri": "http://dbpedia.org/ontology/Horse",
        "seq": "14,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "What religion is Kabir Suman from?",
    "SerialNumber": "2110",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/birthName\u003e \u003chttp://dbpedia.org/resource/Kabir_Suman\u003e . ?x \u003chttp://dbpedia.org/property/religion\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Kabir Suman",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Kabir_Suman",
        "seq": "17,28"
      }
    ],
    "id": "a47123efd7d64ca9aa928cfb92693d4d",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/birthName",
        "mappedBy": "word2vec"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/property/religion",
        "seq": "5,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "316",
    "question": "What company made the front row and distributed big top ballet?",
    "SerialNumber": "2112",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Big_Top_Ballet\u003e \u003chttp://dbpedia.org/property/distributor\u003e ?uri. \u003chttp://dbpedia.org/resource/Front_Row_(software)\u003e \u003chttp://dbpedia.org/property/developer\u003e ?uri . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Company\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "big top ballet",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Big_Top_Ballet",
        "seq": "48,62"
      },
      {
        "label": "front row",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Front_Row_(software)",
        "seq": "22,31"
      }
    ],
    "id": "7e818c143d0646119c7a6274c4471970",
    "predicate mapping": [
      {
        "label": "distributed",
        "uri": "http://dbpedia.org/property/distributor",
        "seq": "36,47",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "made",
        "uri": "http://dbpedia.org/property/developer",
        "mappedBy": "word2vec"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company",
        "seq": "5,12",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Which company is located in Harris County, Texas?",
    "SerialNumber": "2114",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/locationCity\u003e \u003chttp://dbpedia.org/resource/Harris_County,_Texas\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Company\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Harris County, Texas",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Harris_County,_Texas",
        "seq": "28,48"
      }
    ],
    "id": "7ba27bb9e46648a595380f3277ca4f2f",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/ontology/locationCity",
        "mappedBy": "word2vec"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company",
        "seq": "6,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Name the alma mater of the scientist famous for Email filtering ?",
    "SerialNumber": "2115",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/knownFor\u003e \u003chttp://dbpedia.org/resource/Email_filtering\u003e . ?x \u003chttp://dbpedia.org/property/almaMater\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Scientist\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Email filtering",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Email_filtering",
        "seq": "48,63"
      }
    ],
    "id": "c588fe59d877476892d39589f6172632",
    "predicate mapping": [
      {
        "label": "famous",
        "uri": "http://dbpedia.org/property/knownFor",
        "mappedBy": "word2vec"
      },
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/property/almaMater",
        "seq": "9,19",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "scientist",
        "uri": "http://dbpedia.org/ontology/Scientist",
        "seq": "27,36",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Name the team which is owned by Dafenham wind turbines and stood first in 1967 mexican Grand Prix ?",
    "SerialNumber": "2117",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/1967_Mexican_Grand_Prix\u003e \u003chttp://dbpedia.org/property/firstTeam\u003e ?uri. \u003chttp://dbpedia.org/resource/Dagenham_wind_turbines\u003e \u003chttp://dbpedia.org/property/owner\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "1967 mexican Grand Prix",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/1967_Mexican_Grand_Prix",
        "seq": "74,97"
      },
      {
        "label": "turbines",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Dagenham_wind_turbines",
        "seq": "999,1000"
      }
    ],
    "id": "b01d261027ab4a75ad6a18e3a4808236",
    "predicate mapping": [
      {
        "label": "first team",
        "uri": "http://dbpedia.org/property/firstTeam",
        "seq": "-1,9",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "is owned by",
        "uri": "http://dbpedia.org/property/owner",
        "seq": "20,31",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "405",
    "question": "Tell me the number of writers whose works have been recorded in Criteria Studios?",
    "SerialNumber": "2118",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/recordedIn\u003e \u003chttp://dbpedia.org/resource/Criteria_Studios\u003e . ?x \u003chttp://dbpedia.org/property/writer\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Artist\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Criteria Studios",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Criteria_Studios",
        "seq": "64,80"
      }
    ],
    "id": "c885120c181e4448adfcbe1da45585fb",
    "predicate mapping": [
      {
        "label": "recorded in",
        "uri": "http://dbpedia.org/ontology/recordedIn",
        "seq": "52,63",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "writers",
        "uri": "http://dbpedia.org/property/writer",
        "seq": "22,29",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "works",
        "uri": "http://dbpedia.org/ontology/Artist",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "311",
    "question": "List all crafts of the people whose one of the profession is Kingdom of Naples ?",
    "SerialNumber": "2120",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/occupation\u003e \u003chttp://dbpedia.org/resource/Kingdom_of_Naples\u003e . ?x \u003chttp://dbpedia.org/ontology/occupation\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Kingdom of Naples",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Kingdom_of_Naples",
        "seq": "61,78"
      }
    ],
    "id": "f3576d71ce1f48a6b87e8fb5a3713b6e",
    "predicate mapping": [
      {
        "label": "profession",
        "uri": "http://dbpedia.org/ontology/occupation",
        "seq": "47,57",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "profession",
        "uri": "http://dbpedia.org/ontology/occupation",
        "seq": "47,57",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "people",
        "uri": "http://dbpedia.org/ontology/Person",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Was Apollo 11 a mission of Niel Armstrong?",
    "SerialNumber": "2122",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Neil_Armstrong\u003e \u003chttp://dbpedia.org/property/mission\u003e \u003chttp://dbpedia.org/resource/Apollo_11\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "armstrong",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Neil_Armstrong",
        "seq": "999,1000"
      },
      {
        "label": "Apollo 11",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Apollo_11",
        "seq": "4,13"
      }
    ],
    "id": "d3f64fbb4efc4bf583de0d8ffe4be68d",
    "predicate mapping": [
      {
        "label": "mission",
        "uri": "http://dbpedia.org/property/mission",
        "seq": "16,23",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "What are the movies whose music composer uses a Hammond organ?",
    "SerialNumber": "2123",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/instrument\u003e \u003chttp://dbpedia.org/resource/Hammond_organ\u003e . ?uri \u003chttp://dbpedia.org/ontology/musicComposer\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Hammond organ",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Hammond_organ",
        "seq": "48,61"
      }
    ],
    "id": "093e9fad547341e2a4784bd946f8d8cf",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/instrument",
        "mappedBy": "word2vec"
      },
      {
        "label": "music composer",
        "uri": "http://dbpedia.org/ontology/musicComposer",
        "seq": "26,40",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "13,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "What religion do the Wickramabahu Centeral College and Neungin High School both follow?",
    "SerialNumber": "2126",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Wickramabahu_Central_College_(National_School)\u003e \u003chttp://dbpedia.org/property/religiousAffiliation\u003e ?uri. \u003chttp://dbpedia.org/resource/Neungin_High_School\u003e \u003chttp://dbpedia.org/property/religiousAffiliation\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "wickramabahu college",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Wickramabahu_Central_College_(National_School)",
        "seq": "999,1000"
      },
      {
        "label": "Neungin High School",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Neungin_High_School",
        "seq": "55,74"
      }
    ],
    "id": "f2e6e08d863b45a0b2fde08ff71c4d93",
    "predicate mapping": [
      {
        "label": "religion",
        "uri": "http://dbpedia.org/property/religiousAffiliation",
        "seq": "5,13",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/property/religiousAffiliation",
        "seq": "5,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "401",
    "question": "How many television shows are broadcasted on Fox Broadcasting Company?",
    "SerialNumber": "2127",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/ontology/channel\u003e \u003chttp://dbpedia.org/resource/Fox_Broadcasting_Company\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Fox Broadcasting Company",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Fox_Broadcasting_Company",
        "seq": "45,69"
      }
    ],
    "id": "900f0ac67c2d4655b104b6664838d60c",
    "predicate mapping": [
      {
        "label": "broadcasted",
        "uri": "http://dbpedia.org/ontology/channel",
        "mappedBy": "word2vec"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "9,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "307",
    "question": "What is the fictional character which belongs to families of Darth Vader and Padm Amidala?",
    "SerialNumber": "2128",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/property/family\u003e \u003chttp://dbpedia.org/resource/Darth_Vader\u003e . ?uri \u003chttp://dbpedia.org/property/family\u003e \u003chttp://dbpedia.org/resource/Padmé_Amidala\u003e . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/FictionalCharacter\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Darth Vader",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Darth_Vader",
        "seq": "61,72"
      },
      {
        "label": "amidala padm",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Padmé_Amidala",
        "seq": "999,1000"
      }
    ],
    "id": "3fd0705b3a18418ca9748691d9ad8be4",
    "predicate mapping": [
      {
        "label": "families",
        "uri": "http://dbpedia.org/property/family",
        "seq": "49,57",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "families",
        "uri": "http://dbpedia.org/property/family",
        "seq": "49,57",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "fictional character",
        "uri": "http://dbpedia.org/ontology/FictionalCharacter",
        "seq": "12,31",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Where Everybody knows you is the theme album of which show ?",
    "SerialNumber": "2129",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Where_Everybody_Knows_Your_Name\u003e \u003chttp://dbpedia.org/ontology/album\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "everybody where knows",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Where_Everybody_Knows_Your_Name",
        "seq": "999,1000"
      }
    ],
    "id": "cff31d6e2dee48de9fc46d0ecb40ced5",
    "predicate mapping": [
      {
        "label": "album",
        "uri": "http://dbpedia.org/ontology/album",
        "seq": "39,44",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Does Ronaldinho play in the brazil\u0027s under 23 team?",
    "SerialNumber": "2130",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Ronaldinho\u003e \u003chttp://dbpedia.org/property/nationalteam\u003e \u003chttp://dbpedia.org/resource/Brazil_national_under-23_football_team\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ronaldinho",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Ronaldinho",
        "seq": "5,15"
      },
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Brazil_national_under-23_football_team",
        "seq": "999,1000"
      }
    ],
    "id": "2d605f84b9af4256b26d59a784cee86e",
    "predicate mapping": [
      {
        "label": "team",
        "uri": "http://dbpedia.org/property/nationalteam",
        "seq": "46,50",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What are some rivers in Zambia which have a dam on them?",
    "SerialNumber": "2131",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/country\u003e \u003chttp://dbpedia.org/resource/Zambia\u003e . ?x \u003chttp://dbpedia.org/ontology/river\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Dam\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Zambia",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Zambia",
        "seq": "24,30"
      }
    ],
    "id": "c37f438af3ac4daf95e2ddf9341f360d",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/country",
        "mappedBy": "word2vec"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/river",
        "seq": "14,19",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "dam",
        "uri": "http://dbpedia.org/ontology/Dam",
        "seq": "44,47",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Which office\u0027s people have died on the US Route 165?",
    "SerialNumber": "2132",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/deathPlace\u003e \u003chttp://dbpedia.org/resource/U.S._Route_165\u003e . ?x \u003chttp://dbpedia.org/property/office\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "route 165",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/U.S._Route_165",
        "seq": "999,1000"
      }
    ],
    "id": "4e26840031c64a15a7abe3e1330a50b7",
    "predicate mapping": [
      {
        "label": "Route",
        "uri": "http://dbpedia.org/property/deathPlace",
        "mappedBy": "word2vec"
      },
      {
        "label": "office",
        "uri": "http://dbpedia.org/property/office",
        "seq": "6,12",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "Route",
        "uri": "http://dbpedia.org/ontology/Person",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "Name some shows similar to the one whose theme song is made by Murray Gold.",
    "SerialNumber": "2133",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/themeMusicComposer\u003e \u003chttp://dbpedia.org/resource/Murray_Gold\u003e . ?uri \u003chttp://dbpedia.org/ontology/related\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Murray Gold",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Murray_Gold",
        "seq": "63,74"
      }
    ],
    "id": "eea52cce6ad445d8a6611b1b4d4538e7",
    "predicate mapping": [
      {
        "label": "theme",
        "uri": "http://dbpedia.org/property/themeMusicComposer",
        "seq": "41,46",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "made",
        "uri": "http://dbpedia.org/ontology/related",
        "mappedBy": "word2vec"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "10,15",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "What is on the border of the places which fall under crook county municipality, oregon?",
    "SerialNumber": "2137",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/municipality\u003e \u003chttp://dbpedia.org/resource/Crook_County,_Oregon\u003e . ?x \u003chttp://dbpedia.org/ontology/border\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "oregon county crook",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Crook_County,_Oregon",
        "seq": "999,1000"
      }
    ],
    "id": "a71853071a1b40a59c6ce4714b1ef5ee",
    "predicate mapping": [
      {
        "label": "municipality",
        "uri": "http://dbpedia.org/ontology/municipality",
        "seq": "66,78",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "border",
        "uri": "http://dbpedia.org/ontology/border",
        "seq": "15,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "Who are some people whose relation is hqed in Gold Base?",
    "SerialNumber": "2139",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/headquarters\u003e \u003chttp://dbpedia.org/resource/Gold_Base\u003e . ?uri \u003chttp://dbpedia.org/ontology/religion\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Gold Base",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Gold_Base",
        "seq": "46,55"
      }
    ],
    "id": "44960e14ef46436fbcc7c4d75318662a",
    "predicate mapping": [
      {
        "label": "hq",
        "uri": "http://dbpedia.org/property/headquarters",
        "seq": "38,40",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "ed",
        "uri": "http://dbpedia.org/ontology/religion",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which New Mexico company provides One Drive as a service ?",
    "SerialNumber": "2141",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/foundation\u003e \u003chttp://dbpedia.org/resource/New_Mexico\u003e . ?uri \u003chttp://dbpedia.org/property/services\u003e \u003chttp://dbpedia.org/resource/OneDrive\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Company\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "New Mexico",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/New_Mexico",
        "seq": "6,16"
      },
      {
        "label": "One Drive",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/OneDrive",
        "seq": "34,43"
      }
    ],
    "id": "f08ad0e14fc34ee599e3747215483fca",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/foundation",
        "mappedBy": "word2vec"
      },
      {
        "label": "service",
        "uri": "http://dbpedia.org/property/services",
        "seq": "49,56",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company",
        "seq": "17,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who operates the bridges designed by Malaysian PWD?",
    "SerialNumber": "2143",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/designer\u003e \u003chttp://dbpedia.org/resource/Malaysian_Public_Works_Department\u003e . ?x \u003chttp://dbpedia.org/ontology/maintainedBy\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Bridge\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Malaysian",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Malaysian_Public_Works_Department",
        "seq": "37,46"
      }
    ],
    "id": "8cc77d4272db4da5a60221753631cf13",
    "predicate mapping": [
      {
        "label": "designed",
        "uri": "http://dbpedia.org/property/designer",
        "seq": "25,33",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "PWD",
        "uri": "http://dbpedia.org/ontology/maintainedBy",
        "mappedBy": "word2vec"
      },
      {
        "label": "bridge",
        "uri": "http://dbpedia.org/ontology/Bridge",
        "seq": "17,23",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Among which city where Geography Club played also had the Kenticky Cycle ?",
    "SerialNumber": "2145",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Geography_Club_(play)\u003e \u003chttp://dbpedia.org/property/place\u003e ?uri. \u003chttp://dbpedia.org/resource/The_Kentucky_Cycle\u003e \u003chttp://dbpedia.org/property/place\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Geography Club",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Geography_Club_(play)",
        "seq": "23,37"
      },
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/The_Kentucky_Cycle",
        "seq": "999,1000"
      }
    ],
    "id": "8365e95b808d440cac8c8e713017ab1c",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/place",
        "mappedBy": "word2vec"
      },
      {
        "uri": "http://dbpedia.org/property/place",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Who was the animator of both Tommy Tucker\u0027s Tooth and Skeleton Dance?",
    "SerialNumber": "2146",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Tommy_Tucker\u0027s_Tooth\u003e \u003chttp://dbpedia.org/property/animator\u003e ?uri. \u003chttp://dbpedia.org/resource/The_Skeleton_Dance\u003e \u003chttp://dbpedia.org/ontology/animator\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Tommy Tucker\u0027s Tooth",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Tommy_Tucker\u0027s_Tooth",
        "seq": "29,49"
      },
      {
        "label": "skeleton dance the",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/The_Skeleton_Dance",
        "seq": "999,1000"
      }
    ],
    "id": "13b47c5d160c4d96ad28e6814def4b42",
    "predicate mapping": [
      {
        "label": "animator",
        "uri": "http://dbpedia.org/property/animator",
        "seq": "12,20",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "animator",
        "uri": "http://dbpedia.org/ontology/animator",
        "seq": "12,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "What is the nationality of the economist who is one of the important people in the Foundation for Economic Education?",
    "SerialNumber": "2148",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Foundation_for_Economic_Education\u003e \u003chttp://dbpedia.org/ontology/keyPerson\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/nationality\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Economist\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Foundation for Economic Education",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Foundation_for_Economic_Education",
        "seq": "83,116"
      }
    ],
    "id": "1f97981f73884227b98d2e193e4793c4",
    "predicate mapping": [
      {
        "label": "people",
        "uri": "http://dbpedia.org/ontology/keyPerson",
        "mappedBy": "word2vec"
      },
      {
        "label": "nationality",
        "uri": "http://dbpedia.org/ontology/nationality",
        "seq": "12,23",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "economist",
        "uri": "http://dbpedia.org/ontology/Economist",
        "seq": "31,40",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "Name the rivers which originate from within Pittsburg?",
    "SerialNumber": "2149",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/cities\u003e \u003chttp://dbpedia.org/resource/Pittsburg,_New_Hampshire\u003e . ?uri \u003chttp://dbpedia.org/ontology/source\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/River\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Pittsburg",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Pittsburg,_New_Hampshire",
        "seq": "44,53"
      }
    ],
    "id": "60918268c9dc4bc9a944056cf08df4b5",
    "predicate mapping": [
      {
        "label": "originate",
        "uri": "http://dbpedia.org/property/cities",
        "mappedBy": "word2vec"
      },
      {
        "label": "originate",
        "uri": "http://dbpedia.org/ontology/source",
        "mappedBy": "word2vec"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What is the place of death of the gymnast who was the silver medalist at the 1956 Summer Olympics Men\u0027s rings ?",
    "SerialNumber": "2150",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Gymnastics_at_the_1956_Summer_Olympics_–_Men\u0027s_rings\u003e \u003chttp://dbpedia.org/ontology/silverMedalist\u003e ?x . ?x \u003chttp://dbpedia.org/property/placeOfDeath\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "olympics gymnast summer rings men\u0027s",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Gymnastics_at_the_1956_Summer_Olympics_–_Men\u0027s_rings",
        "seq": "999,1000"
      }
    ],
    "id": "151f565ef0bc4267b5db57b098e82284",
    "predicate mapping": [
      {
        "label": "medalist silver",
        "uri": "http://dbpedia.org/ontology/silverMedalist",
        "seq": "-1,14",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "place of death",
        "uri": "http://dbpedia.org/property/placeOfDeath",
        "seq": "12,26",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What religion are the characters of Absolutely Fabulous from?",
    "SerialNumber": "2151",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/series\u003e \u003chttp://dbpedia.org/resource/Absolutely_Fabulous\u003e . ?x \u003chttp://dbpedia.org/ontology/religion\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/FictionalCharacter\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Absolutely Fabulous",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Absolutely_Fabulous",
        "seq": "36,55"
      }
    ],
    "id": "8b983e3a0771427fa876d31b4806a6a2",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/series",
        "mappedBy": "word2vec"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion",
        "seq": "5,13",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "characters",
        "uri": "http://dbpedia.org/ontology/FictionalCharacter",
        "seq": "22,32",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Where does the river begin whose left tributary is Krapanski Potok?",
    "SerialNumber": "2152",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/leftTributary\u003e \u003chttp://dbpedia.org/resource/Krapanski_Potok\u003e . ?x \u003chttp://dbpedia.org/ontology/source\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Krapanski Potok",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Krapanski_Potok",
        "seq": "51,66"
      }
    ],
    "id": "079c81f8aa684b9c90a281e08a9c84d5",
    "predicate mapping": [
      {
        "label": "left tributary",
        "uri": "http://dbpedia.org/ontology/leftTributary",
        "seq": "33,47",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "begin",
        "uri": "http://dbpedia.org/ontology/source",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "Name all the soccer players who played in a under 18 club for La Liga?",
    "SerialNumber": "2153",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/league\u003e \u003chttp://dbpedia.org/resource/La_Liga\u003e . ?uri \u003chttp://dbpedia.org/property/youthclubs\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/SoccerPlayer\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "La Liga",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/La_Liga",
        "seq": "62,69"
      }
    ],
    "id": "fe429424b0b34adda047a3ba868f0489",
    "predicate mapping": [
      {
        "label": "played",
        "uri": "http://dbpedia.org/property/league",
        "mappedBy": "word2vec"
      },
      {
        "label": "club",
        "uri": "http://dbpedia.org/property/youthclubs",
        "seq": "53,57",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "soccer player",
        "uri": "http://dbpedia.org/ontology/SoccerPlayer",
        "seq": "13,26",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "405",
    "question": "How many people have coached the players of Middlesbrough FC?",
    "SerialNumber": "2154",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/team\u003e \u003chttp://dbpedia.org/resource/Middlesbrough_F.C.\u003e . ?x \u003chttp://dbpedia.org/ontology/manager\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Middlesbrough FC",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Middlesbrough_F.C.",
        "seq": "44,60"
      }
    ],
    "id": "53e44c387e97481c93a92afe3bf4dd57",
    "predicate mapping": [
      {
        "label": "players",
        "uri": "http://dbpedia.org/ontology/team",
        "mappedBy": "word2vec"
      },
      {
        "label": "coach",
        "uri": "http://dbpedia.org/ontology/manager",
        "seq": "21,26",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "players",
        "uri": "http://dbpedia.org/ontology/Person",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "111",
    "question": "Give me a count of the services by the company which provides Data center as the services ?",
    "SerialNumber": "2158",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/services\u003e \u003chttp://dbpedia.org/resource/Data_center_services\u003e . ?x \u003chttp://dbpedia.org/property/services\u003e ?uri }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "services center",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Data_center_services",
        "seq": "999,1000"
      }
    ],
    "id": "1f6748d64d834a7f9f8a849a841bb8fb",
    "predicate mapping": [
      {
        "label": "services",
        "uri": "http://dbpedia.org/property/services",
        "seq": "23,31",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "services",
        "uri": "http://dbpedia.org/property/services",
        "seq": "23,31",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "List the people with Scientology as their religious belief?",
    "SerialNumber": "2161",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/religion\u003e \u003chttp://dbpedia.org/resource/Scientology\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Scientology",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Scientology",
        "seq": "21,32"
      }
    ],
    "id": "6d69d75249944430948e09c0741a01b2",
    "predicate mapping": [
      {
        "label": "religious",
        "uri": "http://dbpedia.org/ontology/religion",
        "seq": "42,51",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "belief",
        "uri": "http://dbpedia.org/ontology/Person",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which program was on NBC network with executive producer as Glen and Les Charles?",
    "SerialNumber": "2163",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/network\u003e \u003chttp://dbpedia.org/resource/NBC\u003e . ?uri \u003chttp://dbpedia.org/ontology/executiveProducer\u003e \u003chttp://dbpedia.org/resource/Glen_and_Les_Charles\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "NBC",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/NBC",
        "seq": "21,24"
      },
      {
        "label": "Glen and Les Charles",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Glen_and_Les_Charles",
        "seq": "60,80"
      }
    ],
    "id": "978a09e0cd01477cb3b794cae035132a",
    "predicate mapping": [
      {
        "label": "network",
        "uri": "http://dbpedia.org/ontology/network",
        "seq": "25,32",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "executive producer",
        "uri": "http://dbpedia.org/ontology/executiveProducer",
        "seq": "38,56",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "program",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Is the book The Buddha and his Dhamma a book about Buddhism?",
    "SerialNumber": "2166",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/The_Buddha_and_His_Dhamma\u003e \u003chttp://dbpedia.org/ontology/literaryGenre\u003e \u003chttp://dbpedia.org/resource/Buddhism\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "The Buddha and his Dhamma",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Buddha_and_His_Dhamma",
        "seq": "12,37"
      },
      {
        "label": "Buddhism",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Buddhism",
        "seq": "51,59"
      }
    ],
    "id": "f45f71305db04f20a4880e91502a2d7e",
    "predicate mapping": [
      {
        "label": "book",
        "uri": "http://dbpedia.org/ontology/literaryGenre",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "307",
    "question": "Who is the person opposed  by Tom McLaury and Ike Clanton?",
    "SerialNumber": "2168",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/ontology/opponent\u003e \u003chttp://dbpedia.org/resource/Tom_McLaury\u003e . ?uri \u003chttp://dbpedia.org/ontology/opponent\u003e \u003chttp://dbpedia.org/resource/Ike_Clanton\u003e . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Tom McLaury",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Tom_McLaury",
        "seq": "30,41"
      },
      {
        "label": "Ike Clanton",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ike_Clanton",
        "seq": "46,57"
      }
    ],
    "id": "3814808bac334e5f8d76f56a99bf5403",
    "predicate mapping": [
      {
        "label": "opposed",
        "uri": "http://dbpedia.org/ontology/opponent",
        "mappedBy": "word2vec"
      },
      {
        "label": "opposed",
        "uri": "http://dbpedia.org/ontology/opponent",
        "mappedBy": "word2vec"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/Person",
        "seq": "11,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who all have developed a cross platform software?",
    "SerialNumber": "2169",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/operatingSystem\u003e \u003chttp://dbpedia.org/resource/Cross-platform\u003e . ?x \u003chttp://dbpedia.org/ontology/developer\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Software\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "platform cross",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Cross-platform",
        "seq": "999,1000"
      }
    ],
    "id": "7fe6c4ee43cd4a048ae22cb336c1e62a",
    "predicate mapping": [
      {
        "label": "platform",
        "uri": "http://dbpedia.org/property/operatingSystem",
        "mappedBy": "word2vec"
      },
      {
        "label": "developed",
        "uri": "http://dbpedia.org/ontology/developer",
        "seq": "13,22",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "software",
        "uri": "http://dbpedia.org/ontology/Software",
        "seq": "40,48",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "Who attended Great Ayton university?",
    "SerialNumber": "2170",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/education\u003e \u003chttp://dbpedia.org/resource/Great_Ayton\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Great Ayton",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Great_Ayton",
        "seq": "13,24"
      }
    ],
    "id": "e60e13c61f15439ab1d8ee9a7d9e3956",
    "predicate mapping": [
      {
        "label": "university",
        "uri": "http://dbpedia.org/ontology/education",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "The pope whose shrine is in St Peter\u0027s Basilica was venerated in which sects?",
    "SerialNumber": "2179",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/majorShrine\u003e \u003chttp://dbpedia.org/resource/St._Peter\u0027s_Basilica\u003e . ?x \u003chttp://dbpedia.org/property/veneratedIn\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Pope\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "basilica peter\u0027s",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/St._Peter\u0027s_Basilica",
        "seq": "999,1000"
      }
    ],
    "id": "04c55a217eca42488ea5a3fadb654924",
    "predicate mapping": [
      {
        "label": "shrine",
        "uri": "http://dbpedia.org/property/majorShrine",
        "seq": "15,21",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "venerated in",
        "uri": "http://dbpedia.org/property/veneratedIn",
        "seq": "52,64",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "pope",
        "uri": "http://dbpedia.org/ontology/Pope",
        "seq": "4,8",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "315",
    "question": "For a position in which institution were both Jack Ryan and Robert sarvis both appointed?",
    "SerialNumber": "2181",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Jack_Ryan_(politician)\u003e \u003chttp://dbpedia.org/ontology/nominee\u003e ?uri. \u003chttp://dbpedia.org/resource/Robert_Sarvis\u003e \u003chttp://dbpedia.org/ontology/nominee\u003e ?uri . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Organisation\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jack Ryan",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Jack_Ryan_(politician)",
        "seq": "46,55"
      },
      {
        "label": "Robert sarvis",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Robert_Sarvis",
        "seq": "60,73"
      }
    ],
    "id": "7bfbc6d46c534d2bb0f4d755d9dc591b",
    "predicate mapping": [
      {
        "label": "appointed",
        "uri": "http://dbpedia.org/ontology/nominee",
        "mappedBy": "word2vec"
      },
      {
        "label": "appointed",
        "uri": "http://dbpedia.org/ontology/nominee",
        "mappedBy": "word2vec"
      },
      {
        "uri": "http://dbpedia.org/ontology/Organisation",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "111",
    "question": "Count the total number of conflicts people who were part of conflict in afghanisthan ?",
    "SerialNumber": "2183",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/battle\u003e \u003chttp://dbpedia.org/resource/Afghanistan\u003e . ?x \u003chttp://dbpedia.org/ontology/battle\u003e ?uri }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Afghanistan",
        "seq": "999,1000"
      }
    ],
    "id": "5de5a571a8944ee88bd9e7605b13f4da",
    "predicate mapping": [
      {
        "label": "conflict",
        "uri": "http://dbpedia.org/ontology/battle",
        "mappedBy": "word2vec"
      },
      {
        "label": "conflict",
        "uri": "http://dbpedia.org/ontology/battle",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Which tennis players live in Kenthurst, new south wales?",
    "SerialNumber": "2184",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/residence\u003e \u003chttp://dbpedia.org/resource/Kenthurst,_New_South_Wales\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TennisPlayer\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Kenthurst",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Kenthurst,_New_South_Wales",
        "seq": "29,38"
      }
    ],
    "id": "cc4ae85ad1744fa583816c7460e19d3b",
    "predicate mapping": [
      {
        "label": "wales",
        "uri": "http://dbpedia.org/ontology/residence",
        "mappedBy": "word2vec"
      },
      {
        "label": "tennis player",
        "uri": "http://dbpedia.org/ontology/TennisPlayer",
        "seq": "6,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Where is the head quarters of the parent company of Mall of America located?",
    "SerialNumber": "2188",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Mall_of_America\u003e \u003chttp://dbpedia.org/property/owned\u003e ?x . ?x \u003chttp://dbpedia.org/property/headquarters\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Mall of America",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Mall_of_America",
        "seq": "52,67"
      }
    ],
    "id": "13d8d20650a94f7cbef49822770fa47f",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/property/owned",
        "mappedBy": "word2vec"
      },
      {
        "label": "head quarters",
        "uri": "http://dbpedia.org/property/headquarters",
        "seq": "13,26",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Where was Sino-French War fought ?",
    "SerialNumber": "2189",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Sino-French_War\u003e \u003chttp://dbpedia.org/ontology/territory\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Sino-French War",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Sino-French_War",
        "seq": "10,25"
      }
    ],
    "id": "de5d715dbba14433bd2751418749b376",
    "predicate mapping": [
      {
        "label": "fought",
        "uri": "http://dbpedia.org/ontology/territory",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What genre isPyChess from, which employes Craig Van Tilbury?",
    "SerialNumber": "2195",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Craig_Van_Tilbury\u003e \u003chttp://dbpedia.org/ontology/occupation\u003e ?uri. \u003chttp://dbpedia.org/resource/PyChess\u003e \u003chttp://dbpedia.org/property/genre\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Craig Van Tilbury",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Craig_Van_Tilbury",
        "seq": "42,59"
      },
      {
        "label": "PyChess",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/PyChess",
        "seq": "13,20"
      }
    ],
    "id": "a99633a7312140699f6da5ec60b3545a",
    "predicate mapping": [
      {
        "label": "employes",
        "uri": "http://dbpedia.org/ontology/occupation",
        "mappedBy": "word2vec"
      },
      {
        "label": "genre",
        "uri": "http://dbpedia.org/property/genre",
        "seq": "5,10",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "In which cities are there stations of SCOLA?",
    "SerialNumber": "2197",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/broadcastNetwork\u003e \u003chttp://dbpedia.org/resource/SCOLA_(TV_service)\u003e . ?x \u003chttp://dbpedia.org/property/city\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionStation\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "SCOLA",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/SCOLA_(TV_service)",
        "seq": "38,43"
      }
    ],
    "id": "8a63017795e246a49a5be13cbb278cc2",
    "predicate mapping": [
      {
        "label": "cities",
        "uri": "http://dbpedia.org/ontology/broadcastNetwork",
        "mappedBy": "word2vec"
      },
      {
        "label": "In",
        "uri": "http://dbpedia.org/property/city",
        "seq": "0,2",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "stations",
        "uri": "http://dbpedia.org/ontology/TelevisionStation",
        "seq": "26,34",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What are some bands out to texarkana?",
    "SerialNumber": "2200",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/origin\u003e \u003chttp://dbpedia.org/resource/Texarkana,_Texas\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Band\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "texarkana",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Texarkana,_Texas",
        "seq": "999,1000"
      }
    ],
    "id": "2adb8b5dae3e4e8ea92922a707e6341e",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/origin",
        "mappedBy": "word2vec"
      },
      {
        "label": "band",
        "uri": "http://dbpedia.org/ontology/Band",
        "seq": "14,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What famous politician died in the Petersen House?",
    "SerialNumber": "2201",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/deathPlace\u003e \u003chttp://dbpedia.org/resource/Petersen_House\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Petersen House",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Petersen_House",
        "seq": "35,49"
      }
    ],
    "id": "61066d63cf6b4c3d9e4dfdec5c6a430c",
    "predicate mapping": [
      {
        "label": "died in",
        "uri": "http://dbpedia.org/property/deathPlace",
        "seq": "23,30",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "politician",
        "uri": "http://dbpedia.org/ontology/Person",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which cover artist of the The Adventures of Tom Sawyer also the source of inspiration of The Appple Tree ?",
    "SerialNumber": "2202",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer\u003e \u003chttp://dbpedia.org/ontology/coverArtist\u003e ?uri. \u003chttp://dbpedia.org/resource/The_Apple_Tree\u003e \u003chttp://dbpedia.org/ontology/basedOn\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "The Adventures of Tom Sawyer",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer",
        "seq": "26,54"
      },
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/The_Apple_Tree",
        "seq": "999,1000"
      }
    ],
    "id": "ac76f62cf58949f59c0a4e39a351a377",
    "predicate mapping": [
      {
        "label": "cover artist",
        "uri": "http://dbpedia.org/ontology/coverArtist",
        "seq": "6,18",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "Tree",
        "uri": "http://dbpedia.org/ontology/basedOn",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Where was the person born who died in Bryn Mawr Hospital?",
    "SerialNumber": "2204",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/placeOfDeath\u003e \u003chttp://dbpedia.org/resource/Bryn_Mawr_Hospital\u003e . ?x \u003chttp://dbpedia.org/property/placeOfBirth\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Bryn Mawr Hospital",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Bryn_Mawr_Hospital",
        "seq": "38,56"
      }
    ],
    "id": "2b12d0b229e446478c13760e9b57a5ea",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/placeOfDeath",
        "mappedBy": "word2vec"
      },
      {
        "uri": "http://dbpedia.org/property/placeOfBirth",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "In which common territory did Sino French war and the Tonkin campaign take place?",
    "SerialNumber": "2207",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Sino-French_War\u003e \u003chttp://dbpedia.org/ontology/territory\u003e ?uri. \u003chttp://dbpedia.org/resource/Tonkin_Campaign\u003e \u003chttp://dbpedia.org/ontology/territory\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "french sino war",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Sino-French_War",
        "seq": "999,1000"
      },
      {
        "label": "Tonkin campaign",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Tonkin_Campaign",
        "seq": "54,69"
      }
    ],
    "id": "0ef7dd290adb47cc9515959eaf8bd328",
    "predicate mapping": [
      {
        "label": "territory",
        "uri": "http://dbpedia.org/ontology/territory",
        "seq": "16,25",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "territory",
        "uri": "http://dbpedia.org/ontology/territory",
        "seq": "16,25",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which distributer of Glover is also the stockholde of Seattle Mariners ?",
    "SerialNumber": "2208",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Glover_(video_game)\u003e \u003chttp://dbpedia.org/ontology/distributor\u003e ?uri. \u003chttp://dbpedia.org/resource/Seattle_Mariners\u003e \u003chttp://dbpedia.org/ontology/owner\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Glover",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Glover_(video_game)",
        "seq": "21,27"
      },
      {
        "label": "Seattle Mariners",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Seattle_Mariners",
        "seq": "54,70"
      }
    ],
    "id": "098a7f4275924007b358ee48cefc7b23",
    "predicate mapping": [
      {
        "label": "distributer",
        "uri": "http://dbpedia.org/ontology/distributor",
        "mappedBy": "word2vec"
      },
      {
        "label": "distributer",
        "uri": "http://dbpedia.org/ontology/owner",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "What are some important works of US citizens?",
    "SerialNumber": "2210",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/nationality\u003e \u003chttp://dbpedia.org/resource/United_States\u003e . ?x \u003chttp://dbpedia.org/ontology/notableWork\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "US",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/United_States",
        "seq": "33,35"
      }
    ],
    "id": "c0f69ac1ab584bbaaca5272c9dd4aa74",
    "predicate mapping": [
      {
        "label": "citizens",
        "uri": "http://dbpedia.org/property/nationality",
        "mappedBy": "word2vec"
      },
      {
        "label": "works",
        "uri": "http://dbpedia.org/ontology/notableWork",
        "seq": "24,29",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "101",
    "question": "How many characters were made by Paul Dini?",
    "SerialNumber": "2211",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/property/creators\u003e \u003chttp://dbpedia.org/resource/Paul_Dini\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Paul Dini",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Paul_Dini",
        "seq": "33,42"
      }
    ],
    "id": "444b6f68ae4145c1a8e151fe606ade0a",
    "predicate mapping": [
      {
        "label": "made",
        "uri": "http://dbpedia.org/property/creators",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "What is the religion of the relatives of Ananda Weerasekara?",
    "SerialNumber": "2213",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/relation\u003e \u003chttp://dbpedia.org/resource/Ananda_Weerasekara\u003e . ?x \u003chttp://dbpedia.org/ontology/religion\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ananda Weerasekara",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ananda_Weerasekara",
        "seq": "41,59"
      }
    ],
    "id": "c1d9817b260a4d0ead5c03372c35d776",
    "predicate mapping": [
      {
        "label": "relatives",
        "uri": "http://dbpedia.org/ontology/relation",
        "mappedBy": "word2vec"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion",
        "seq": "12,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "In which country\u0027s cuisine, ham is an important part?",
    "SerialNumber": "2215",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/mainIngredient\u003e \u003chttp://dbpedia.org/resource/Ham\u003e . ?x \u003chttp://dbpedia.org/property/country\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "ham",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Ham",
        "seq": "28,31"
      }
    ],
    "id": "ec8b9535d59d4655b5ff3f5a185c99cc",
    "predicate mapping": [
      {
        "label": "part",
        "uri": "http://dbpedia.org/property/mainIngredient",
        "mappedBy": "word2vec"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/property/country",
        "seq": "9,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the purpose of the Maharashtra Chess Association which is genere of PyChess?",
    "SerialNumber": "2216",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Maharashtra_Chess_Association\u003e \u003chttp://dbpedia.org/property/purpose\u003e ?uri. \u003chttp://dbpedia.org/resource/PyChess\u003e \u003chttp://dbpedia.org/ontology/genre\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Maharashtra Chess Association",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Maharashtra_Chess_Association",
        "seq": "27,56"
      },
      {
        "label": "PyChess",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/PyChess",
        "seq": "76,83"
      }
    ],
    "id": "b34ea6d0eb0e4dc9878f34a21bde3842",
    "predicate mapping": [
      {
        "label": "purpose",
        "uri": "http://dbpedia.org/property/purpose",
        "seq": "12,19",
        "mappedBy": "byLabelMatch"
      },
      {
        "uri": "http://dbpedia.org/ontology/genre",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What medals have been given to people who died of lung cancer?",
    "SerialNumber": "2219",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/deathCause\u003e \u003chttp://dbpedia.org/resource/Lung_cancer\u003e . ?x \u003chttp://dbpedia.org/ontology/award\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "lung cancer",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Lung_cancer",
        "seq": "50,61"
      }
    ],
    "id": "2d27c6297df54cbd99d354a61045dba8",
    "predicate mapping": [
      {
        "label": "died",
        "uri": "http://dbpedia.org/ontology/deathCause",
        "mappedBy": "word2vec"
      },
      {
        "label": "medals",
        "uri": "http://dbpedia.org/ontology/award",
        "seq": "5,11",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "died",
        "uri": "http://dbpedia.org/ontology/Person",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Which country\u0027s engineered have studied at Aero Klub in Wroclaw?",
    "SerialNumber": "2222",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/institution\u003e \u003chttp://dbpedia.org/resource/AeroKlub_Wrocław\u003e . ?x \u003chttp://dbpedia.org/property/nationality\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/AeroKlub_Wrocław",
        "seq": "999,1000"
      }
    ],
    "id": "d2da7d56a898475493bd3e92b6d60c91",
    "predicate mapping": [
      {
        "label": "Wroclaw",
        "uri": "http://dbpedia.org/ontology/institution",
        "mappedBy": "word2vec"
      },
      {
        "label": "country\u0027s",
        "uri": "http://dbpedia.org/property/nationality",
        "seq": "6,15",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "401",
    "question": "Count the drinks originated in England.",
    "SerialNumber": "2224",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/ontology/origin\u003e \u003chttp://dbpedia.org/resource/England\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Beverage\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "England",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/England",
        "seq": "31,38"
      }
    ],
    "id": "665c48a565514b8d9451667f8ac5d5cb",
    "predicate mapping": [
      {
        "label": "origin",
        "uri": "http://dbpedia.org/ontology/origin",
        "seq": "17,23",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "ated",
        "uri": "http://dbpedia.org/ontology/Beverage",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What place did Edwin Adams die at, which gave birth to William A Purtell?",
    "SerialNumber": "2225",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Edwin_Adams_(politician)\u003e \u003chttp://dbpedia.org/property/placeOfDeath\u003e ?uri. \u003chttp://dbpedia.org/resource/William_A._Purtell\u003e \u003chttp://dbpedia.org/ontology/birthPlace\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Edwin Adams",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Edwin_Adams_(politician)",
        "seq": "15,26"
      },
      {
        "label": "william purtell",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/William_A._Purtell",
        "seq": "999,1000"
      }
    ],
    "id": "c44978af32a3433daf71471ea770529b",
    "predicate mapping": [
      {
        "label": "place",
        "uri": "http://dbpedia.org/property/placeOfDeath",
        "seq": "5,10",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "place birth",
        "uri": "http://dbpedia.org/ontology/birthPlace",
        "seq": "-1,10",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Trainees at the national film school of Lodz have received what awards?",
    "SerialNumber": "2228",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/training\u003e \u003chttp://dbpedia.org/resource/National_Film_School_in_Łódź\u003e . ?x \u003chttp://dbpedia.org/ontology/award\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "national film school",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/National_Film_School_in_Łódź",
        "seq": "16,36"
      }
    ],
    "id": "1074b9904318467e873e1d05472c6ace",
    "predicate mapping": [
      {
        "label": "received",
        "uri": "http://dbpedia.org/property/training",
        "mappedBy": "word2vec"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/award",
        "seq": "64,70",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Is the Providence Chapel, Charlwood made in New English style of architecture?",
    "SerialNumber": "2229",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Providence_Chapel,_Charlwood\u003e \u003chttp://dbpedia.org/property/style\u003e \u003chttp://dbpedia.org/resource/New_England\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Providence Chapel, Charlwood",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Providence_Chapel,_Charlwood",
        "seq": "7,35"
      },
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/New_England",
        "seq": "999,1000"
      }
    ],
    "id": "c53debb465374190985a381113d5e2e1",
    "predicate mapping": [
      {
        "label": "style",
        "uri": "http://dbpedia.org/property/style",
        "seq": "56,61",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which tema did Dough Acomb played for which is also the drafty team of Dale Mitchell ?",
    "SerialNumber": "2230",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Dale_Mitchell_(ice_hockey)\u003e \u003chttp://dbpedia.org/ontology/draftTeam\u003e ?uri. \u003chttp://dbpedia.org/resource/Doug_Acomb\u003e \u003chttp://dbpedia.org/property/playedFor\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Dale Mitchell",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Dale_Mitchell_(ice_hockey)",
        "seq": "71,84"
      },
      {
        "label": "acomb",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Doug_Acomb",
        "seq": "999,1000"
      }
    ],
    "id": "a0e3214b00d7484d9630cf4983167626",
    "predicate mapping": [
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/draftTeam",
        "mappedBy": "word2vec"
      },
      {
        "label": "played for",
        "uri": "http://dbpedia.org/property/playedFor",
        "seq": "27,37",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "What is the river whose origin is North-Western Province, Zambia?",
    "SerialNumber": "2231",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/sourceRegion\u003e \u003chttp://dbpedia.org/resource/North-Western_Province,_Zambia\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "North-Western Province, Zambia",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/North-Western_Province,_Zambia",
        "seq": "34,64"
      }
    ],
    "id": "0ecf1c79d31641a3b107442ce8b8399b",
    "predicate mapping": [
      {
        "label": "origin",
        "uri": "http://dbpedia.org/ontology/sourceRegion",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Is Tenzing Norgay  the first person to scale Mt. Everest?",
    "SerialNumber": "2232",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Mount_Everest\u003e \u003chttp://dbpedia.org/ontology/firstAscentPerson\u003e \u003chttp://dbpedia.org/resource/Tenzing_Norgay\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "everest",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Mount_Everest",
        "seq": "999,1000"
      },
      {
        "label": "Tenzing Norgay",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Tenzing_Norgay",
        "seq": "3,17"
      }
    ],
    "id": "3271ac84219e4f5995da87af671eaab7",
    "predicate mapping": [
      {
        "label": "person first",
        "uri": "http://dbpedia.org/ontology/firstAscentPerson",
        "seq": "-1,11",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the state of Umatilla language which is also the state of James K. Kelly ?",
    "SerialNumber": "2234",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/James_K._Kelly\u003e \u003chttp://dbpedia.org/property/state\u003e ?uri. \u003chttp://dbpedia.org/resource/Umatilla_language\u003e \u003chttp://dbpedia.org/property/region\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "James K. Kelly",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/James_K._Kelly",
        "seq": "66,80"
      },
      {
        "label": "Umatilla language",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Umatilla_language",
        "seq": "21,38"
      }
    ],
    "id": "5d6c7cfe9fca43d7bf22d03f9f9d205e",
    "predicate mapping": [
      {
        "label": "state",
        "uri": "http://dbpedia.org/property/state",
        "seq": "12,17",
        "mappedBy": "byLabelMatch"
      },
      {
        "uri": "http://dbpedia.org/property/region",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "315",
    "question": "In which country can I find the State Academic Opera and Ballet Theater and Baku Puppet Theatre?",
    "SerialNumber": "2235",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Azerbaijan_State_Academic_Opera_and_Ballet_Theater\u003e \u003chttp://dbpedia.org/ontology/locationCountry\u003e ?uri. \u003chttp://dbpedia.org/resource/Baku_Puppet_Theatre\u003e \u003chttp://dbpedia.org/ontology/locationCountry\u003e ?uri . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Country\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "academic theater ballet",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Azerbaijan_State_Academic_Opera_and_Ballet_Theater",
        "seq": "999,1000"
      },
      {
        "label": "Baku Puppet Theatre",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Baku_Puppet_Theatre",
        "seq": "76,95"
      }
    ],
    "id": "7cd083a1baa944fb93b2df81ca11207c",
    "predicate mapping": [
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/locationCountry",
        "seq": "9,16",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/locationCountry",
        "seq": "9,16",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/Country",
        "seq": "9,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What band was Afrika Baby Bam a part of, and often performed with Q Tip?",
    "SerialNumber": "2236",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Afrika_Baby_Bam\u003e \u003chttp://dbpedia.org/ontology/associatedBand\u003e ?uri. \u003chttp://dbpedia.org/resource/Q-Tip_(musician)\u003e \u003chttp://dbpedia.org/ontology/associatedMusicalArtist\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Afrika Baby Bam",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Afrika_Baby_Bam",
        "seq": "14,29"
      },
      {
        "label": "tip",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Q-Tip_(musician)",
        "seq": "999,1000"
      }
    ],
    "id": "e4204a1a2f2040a6aadcc27f9ff9c8a0",
    "predicate mapping": [
      {
        "label": "band",
        "uri": "http://dbpedia.org/ontology/associatedBand",
        "seq": "5,9",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "Tip",
        "uri": "http://dbpedia.org/ontology/associatedMusicalArtist",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "List the governers of Jimmie Lou Fisher?",
    "SerialNumber": "2237",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Jimmie_Lou_Fisher\u003e \u003chttp://dbpedia.org/property/governor\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jimmie Lou Fisher",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Jimmie_Lou_Fisher",
        "seq": "22,39"
      }
    ],
    "id": "842c6e8c6a8b49ba99364b98105af678",
    "predicate mapping": [
      {
        "label": "governers",
        "uri": "http://dbpedia.org/property/governor",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Where has GARAGE recorded its singles?",
    "SerialNumber": "2239",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/producer\u003e \u003chttp://dbpedia.org/resource/Garbage_(band)\u003e . ?x \u003chttp://dbpedia.org/ontology/recordedIn\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Single\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Garbage_(band)",
        "seq": "999,1000"
      }
    ],
    "id": "7dd6d733dada4602b5f9249a4418c0ce",
    "predicate mapping": [
      {
        "label": "GARAGE",
        "uri": "http://dbpedia.org/ontology/producer",
        "mappedBy": "word2vec"
      },
      {
        "label": "recorded",
        "uri": "http://dbpedia.org/ontology/recordedIn",
        "seq": "17,25",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "single",
        "uri": "http://dbpedia.org/ontology/Single",
        "seq": "30,36",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which employer of Manu Cornet has alsoe written Google.by ?",
    "SerialNumber": "2240",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Manu_Cornet\u003e \u003chttp://dbpedia.org/property/employer\u003e ?uri. \u003chttp://dbpedia.org/resource/Google.by\u003e \u003chttp://dbpedia.org/ontology/author\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Manu Cornet",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Manu_Cornet",
        "seq": "18,29"
      },
      {
        "label": "Google.by",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Google.by",
        "seq": "48,57"
      }
    ],
    "id": "0d8127d7d9f94ef6ad941ee30b14e54c",
    "predicate mapping": [
      {
        "label": "employer",
        "uri": "http://dbpedia.org/property/employer",
        "seq": "6,14",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "written",
        "uri": "http://dbpedia.org/ontology/author",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Which field\u0027s journals are edited by Paul Morphy?",
    "SerialNumber": "2242",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/editor\u003e \u003chttp://dbpedia.org/resource/Paul_Morphy\u003e . ?x \u003chttp://dbpedia.org/property/discipline\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/AcademicJournal\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Paul Morphy",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Paul_Morphy",
        "seq": "37,48"
      }
    ],
    "id": "a44e98fa4c1e4f79b3c341844a6db478",
    "predicate mapping": [
      {
        "label": "edited by",
        "uri": "http://dbpedia.org/ontology/editor",
        "seq": "27,36",
        "mappedBy": "byLabelMatch"
      },
      {
        "uri": "http://dbpedia.org/property/discipline",
        "mappedBy": "word2vec"
      },
      {
        "label": "journals",
        "uri": "http://dbpedia.org/ontology/AcademicJournal",
        "seq": "14,22",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "List the sports of PATTS College of Aeronautics which are of interest of Jon Speelman ?",
    "SerialNumber": "2244",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/PATTS_College_of_Aeronautics\u003e \u003chttp://dbpedia.org/property/athletics\u003e ?uri. \u003chttp://dbpedia.org/resource/Jon_Speelman\u003e \u003chttp://dbpedia.org/ontology/field\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "PATTS College of Aeronautics",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/PATTS_College_of_Aeronautics",
        "seq": "19,47"
      },
      {
        "label": "Jon Speelman",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Jon_Speelman",
        "seq": "73,85"
      }
    ],
    "id": "d945ca666231404ea5dbf05646dcc45d",
    "predicate mapping": [
      {
        "label": "interest",
        "uri": "http://dbpedia.org/property/athletics",
        "mappedBy": "word2vec"
      },
      {
        "label": "interest",
        "uri": "http://dbpedia.org/ontology/field",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "108",
    "question": "Give me the count of newspaper whose language is Sweedish and headquartered at stockholm ?",
    "SerialNumber": "2249",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/property/language\u003e \u003chttp://dbpedia.org/resource/Swedish_language\u003e . ?uri \u003chttp://dbpedia.org/property/headquarters\u003e \u003chttp://dbpedia.org/resource/Stockholm\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "language",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Swedish_language",
        "seq": "999,1000"
      },
      {
        "label": "stockholm",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Stockholm",
        "seq": "79,88"
      }
    ],
    "id": "01086492a07e4c6eb96f182023d92f9f",
    "predicate mapping": [
      {
        "label": "language",
        "uri": "http://dbpedia.org/property/language",
        "seq": "37,45",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "headquarter",
        "uri": "http://dbpedia.org/property/headquarters",
        "seq": "62,73",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "In how many places are the companies founded in Canada operating?",
    "SerialNumber": "2250",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/foundationPlace\u003e \u003chttp://dbpedia.org/resource/Canada\u003e . ?x \u003chttp://dbpedia.org/property/locations\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Canada",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Canada",
        "seq": "48,54"
      }
    ],
    "id": "b7d04c385e304556962dfa6f26906db4",
    "predicate mapping": [
      {
        "label": "founded",
        "uri": "http://dbpedia.org/ontology/foundationPlace",
        "seq": "37,44",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "operating",
        "uri": "http://dbpedia.org/property/locations",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name a person whose sucessor was Adrian A. basora and was educated at Harvard-Westlake School?",
    "SerialNumber": "2251",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/almaMater\u003e \u003chttp://dbpedia.org/resource/Harvard-Westlake_School\u003e . ?uri \u003chttp://dbpedia.org/property/successor\u003e \u003chttp://dbpedia.org/resource/Adrian_A._Basora\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Harvard-Westlake School",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Harvard-Westlake_School",
        "seq": "70,93"
      },
      {
        "label": "Adrian A. basora",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Adrian_A._Basora",
        "seq": "33,49"
      }
    ],
    "id": "b049e9b6c3d84f8db89c6dad58c1b742",
    "predicate mapping": [
      {
        "label": "edu",
        "uri": "http://dbpedia.org/ontology/almaMater",
        "seq": "58,61",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "cated",
        "uri": "http://dbpedia.org/property/successor",
        "mappedBy": "word2vec"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/Person",
        "seq": "7,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Which continents can be reached by flight companies available on Gatwick Airport?",
    "SerialNumber": "2257",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/targetAirport\u003e \u003chttp://dbpedia.org/resource/Gatwick_Airport\u003e . ?x \u003chttp://dbpedia.org/property/destinations\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Airline\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Gatwick Airport",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Gatwick_Airport",
        "seq": "65,80"
      }
    ],
    "id": "1330392af821465988520c7e62465234",
    "predicate mapping": [
      {
        "label": "airport",
        "uri": "http://dbpedia.org/ontology/targetAirport",
        "seq": "-1,6",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "companies",
        "uri": "http://dbpedia.org/property/destinations",
        "mappedBy": "word2vec"
      },
      {
        "label": "companies",
        "uri": "http://dbpedia.org/ontology/Airline",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who is the head coach of 2009-10 Middlesbrough F.C. season ?",
    "SerialNumber": "2260",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/2009–10_Middlesbrough_F.C._season\u003e \u003chttp://dbpedia.org/ontology/manager\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "middlesbrough season",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/2009–10_Middlesbrough_F.C._season",
        "seq": "999,1000"
      }
    ],
    "id": "71f8fa4b19a547668255c9310216a8f3",
    "predicate mapping": [
      {
        "label": "coach",
        "uri": "http://dbpedia.org/ontology/manager",
        "seq": "16,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Which builder has made concrete bridges?",
    "SerialNumber": "2261",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/material\u003e \u003chttp://dbpedia.org/resource/Concrete\u003e . ?x \u003chttp://dbpedia.org/ontology/builder\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Bridge\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "concrete",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Concrete",
        "seq": "23,31"
      }
    ],
    "id": "edc54c2ea5cb4ecca8de2091fad5fbf7",
    "predicate mapping": [
      {
        "label": "made",
        "uri": "http://dbpedia.org/property/material",
        "mappedBy": "word2vec"
      },
      {
        "label": "builder",
        "uri": "http://dbpedia.org/ontology/builder",
        "seq": "6,13",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "bridge",
        "uri": "http://dbpedia.org/ontology/Bridge",
        "seq": "32,38",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "401",
    "question": "How many venues are located in the US?",
    "SerialNumber": "2264",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/property/address\u003e \u003chttp://dbpedia.org/resource/United_States\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Venue\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "US",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/United_States",
        "seq": "35,37"
      }
    ],
    "id": "11bda0b4ba6e488ca7e8255d984a7792",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/property/address",
        "mappedBy": "word2vec"
      },
      {
        "label": "venue",
        "uri": "http://dbpedia.org/ontology/Venue",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which vice president of Warren G. Harsing is also the president of Evans Hughes ?",
    "SerialNumber": "2265",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Warren_G._Harding\u003e \u003chttp://dbpedia.org/ontology/vicePresident\u003e ?uri. \u003chttp://dbpedia.org/resource/Charles_Evans_Hughes\u003e \u003chttp://dbpedia.org/ontology/president\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "warren",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Warren_G._Harding",
        "seq": "999,1000"
      },
      {
        "label": "hughes",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Charles_Evans_Hughes",
        "seq": "999,1000"
      }
    ],
    "id": "d8dbbad92b504881bd9c0c8a1932d15e",
    "predicate mapping": [
      {
        "label": "vice president",
        "uri": "http://dbpedia.org/ontology/vicePresident",
        "seq": "6,20",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "president",
        "uri": "http://dbpedia.org/ontology/president",
        "seq": "11,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "in which movies have momoki kochi acted",
    "SerialNumber": "2266",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/starring\u003e \u003chttp://dbpedia.org/resource/Momoko_Kōchi\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Momoko_Kōchi",
        "seq": "999,1000"
      }
    ],
    "id": "0fd9b98ee3744db6b234eecdfcbe9e70",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/property/starring",
        "seq": "0,2",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "In which countries can i find broadcasted TV in southeast asia?",
    "SerialNumber": "2267",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/broadcastArea\u003e \u003chttp://dbpedia.org/resource/Southeast_Asia\u003e . ?x \u003chttp://dbpedia.org/property/country\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionStation\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "southeast asia",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Southeast_Asia",
        "seq": "48,62"
      }
    ],
    "id": "954385119c2440dc9e9ee5c3b6adab5b",
    "predicate mapping": [
      {
        "label": "broadcasted",
        "uri": "http://dbpedia.org/property/broadcastArea",
        "seq": "30,41",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "countries",
        "uri": "http://dbpedia.org/property/country",
        "seq": "9,18",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "TV",
        "uri": "http://dbpedia.org/ontology/TelevisionStation",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Where can i find teams whose coach has been Rodney Eade.",
    "SerialNumber": "2268",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/coach\u003e \u003chttp://dbpedia.org/resource/Rodney_Eade\u003e . ?x \u003chttp://dbpedia.org/property/location\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/SportsTeam\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Rodney Eade",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Rodney_Eade",
        "seq": "44,55"
      }
    ],
    "id": "f6837bbaf0614048ab98cba4cad9d380",
    "predicate mapping": [
      {
        "label": "coach",
        "uri": "http://dbpedia.org/property/coach",
        "seq": "29,34",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "find",
        "uri": "http://dbpedia.org/property/location",
        "mappedBy": "word2vec"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/SportsTeam",
        "seq": "17,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "406",
    "question": "Count all those whose youthclub performed at the 14-15 La Liga?",
    "SerialNumber": "2269",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/season\u003e \u003chttp://dbpedia.org/resource/2014–15_La_Liga\u003e . ?uri \u003chttp://dbpedia.org/property/youthclubs\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Athlete\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "liga",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/2014–15_La_Liga",
        "seq": "999,1000"
      }
    ],
    "id": "44babf14274042b6a9d97382855b1f6f",
    "predicate mapping": [
      {
        "label": "Liga",
        "uri": "http://dbpedia.org/ontology/season",
        "mappedBy": "word2vec"
      },
      {
        "label": "youthclub",
        "uri": "http://dbpedia.org/property/youthclubs",
        "seq": "22,31",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "Liga",
        "uri": "http://dbpedia.org/ontology/Athlete",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What city is it where Wayne Allard governs and Juli Ashton was born?",
    "SerialNumber": "2271",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Wayne_Allard\u003e \u003chttp://dbpedia.org/ontology/region\u003e ?uri. \u003chttp://dbpedia.org/resource/Juli_Ashton\u003e \u003chttp://dbpedia.org/ontology/birthPlace\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Wayne Allard",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Wayne_Allard",
        "seq": "22,34"
      },
      {
        "label": "Juli Ashton",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Juli_Ashton",
        "seq": "47,58"
      }
    ],
    "id": "766f8af12e0948349fb3a59be11f74e5",
    "predicate mapping": [
      {
        "label": "born",
        "uri": "http://dbpedia.org/ontology/region",
        "mappedBy": "word2vec"
      },
      {
        "label": "born",
        "uri": "http://dbpedia.org/ontology/birthPlace",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "8",
    "question": "Which neighboring municipalities of Cologny has a mayor named Ester Alder ?",
    "SerialNumber": "2272",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/neighboringMunicipalities\u003e \u003chttp://dbpedia.org/resource/Cologny\u003e . ?uri \u003chttp://dbpedia.org/ontology/mayor\u003e \u003chttp://dbpedia.org/resource/Esther_Alder\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Cologny",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Cologny",
        "seq": "36,43"
      },
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Esther_Alder",
        "seq": "999,1000"
      }
    ],
    "id": "9617ad4477da40298f1e0e562959fcc3",
    "predicate mapping": [
      {
        "label": "neighboring municipalities",
        "uri": "http://dbpedia.org/property/neighboringMunicipalities",
        "seq": "6,32",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "mayor",
        "uri": "http://dbpedia.org/ontology/mayor",
        "seq": "50,55",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Where did Doug Walgren and Lee Si Chen study?",
    "SerialNumber": "2277",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Lee_Si-Chen\u003e \u003chttp://dbpedia.org/property/almaMater\u003e ?uri. \u003chttp://dbpedia.org/resource/Doug_Walgren\u003e \u003chttp://dbpedia.org/ontology/almaMater\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "chen lee",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Lee_Si-Chen",
        "seq": "999,1000"
      },
      {
        "label": "Doug Walgren",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Doug_Walgren",
        "seq": "10,22"
      }
    ],
    "id": "7bc28b110ed544cc8e98bdcf752d9c47",
    "predicate mapping": [
      {
        "label": "study",
        "uri": "http://dbpedia.org/property/almaMater",
        "mappedBy": "word2vec"
      },
      {
        "label": "study",
        "uri": "http://dbpedia.org/ontology/almaMater",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "605",
    "question": "Where are the politicians buried who succeeded George Whitefield Davis?",
    "SerialNumber": "2278",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/predecessor\u003e \u003chttp://dbpedia.org/resource/George_Whitefield_Davis\u003e . ?x \u003chttp://dbpedia.org/property/restingplace\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/OfficeHolder\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "George Whitefield Davis",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/George_Whitefield_Davis",
        "seq": "47,70"
      }
    ],
    "id": "fc9e2cac170a44a2abdca158f66cd5af",
    "predicate mapping": [
      {
        "label": "succeeded",
        "uri": "http://dbpedia.org/property/predecessor",
        "mappedBy": "word2vec"
      },
      {
        "uri": "http://dbpedia.org/property/restingplace",
        "mappedBy": "word2vec"
      },
      {
        "label": "succeeded",
        "uri": "http://dbpedia.org/ontology/OfficeHolder",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Is the assembly of tofa ahin ethopia?",
    "SerialNumber": "2280",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Tofaş_Şahin\u003e \u003chttp://dbpedia.org/ontology/assembly\u003e \u003chttp://dbpedia.org/resource/Ethiopia\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "tofa ahin",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Tofaş_Şahin",
        "seq": "999,1000"
      },
      {
        "label": "ethopia",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Ethiopia",
        "seq": "29,36"
      }
    ],
    "id": "87876aa79cba44138cff493d5e2315c7",
    "predicate mapping": [
      {
        "label": "assembly",
        "uri": "http://dbpedia.org/ontology/assembly",
        "seq": "7,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "406",
    "question": "How many food items have an ingredient from the Sapindales family?",
    "SerialNumber": "2283",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/order\u003e \u003chttp://dbpedia.org/resource/Sapindales\u003e . ?uri \u003chttp://dbpedia.org/ontology/ingredient\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Food\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Sapindales",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Sapindales",
        "seq": "48,58"
      }
    ],
    "id": "ec821782125a4c71bd3630880a66897e",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/order",
        "mappedBy": "word2vec"
      },
      {
        "label": "ingredient",
        "uri": "http://dbpedia.org/ontology/ingredient",
        "seq": "28,38",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "food",
        "uri": "http://dbpedia.org/ontology/Food",
        "seq": "9,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Which type of  building is Qun Thnh Temple ?",
    "SerialNumber": "2285",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Quán_Thánh_Temple\u003e \u003chttp://dbpedia.org/property/buildingType\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "temple",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Quán_Thánh_Temple",
        "seq": "999,1000"
      }
    ],
    "id": "287db86b21b143a9a561c5ba6db3d528",
    "predicate mapping": [
      {
        "label": "building type",
        "uri": "http://dbpedia.org/property/buildingType",
        "seq": "-1,12",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Does Stanley Cavell study Shakespeare?",
    "SerialNumber": "2286",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Stanley_Cavell\u003e \u003chttp://dbpedia.org/property/mainInterests\u003e \u003chttp://dbpedia.org/resource/William_Shakespeare\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Stanley Cavell",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Stanley_Cavell",
        "seq": "5,19"
      },
      {
        "label": "Shakespeare",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/William_Shakespeare",
        "seq": "26,37"
      }
    ],
    "id": "bf777652c816485f8385ae21e670622b",
    "predicate mapping": [
      {
        "label": "study",
        "uri": "http://dbpedia.org/property/mainInterests",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Who is the common distributer of Bombay Sapphire and Rev ?",
    "SerialNumber": "2288",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Bombay_Sapphire\u003e \u003chttp://dbpedia.org/property/distributor\u003e ?uri. \u003chttp://dbpedia.org/resource/Rev_(drink)\u003e \u003chttp://dbpedia.org/ontology/distributor\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Bombay Sapphire",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Bombay_Sapphire",
        "seq": "33,48"
      },
      {
        "label": "Rev",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Rev_(drink)",
        "seq": "53,56"
      }
    ],
    "id": "d369a9c08c2447f2b26af647610308bc",
    "predicate mapping": [
      {
        "label": "distributer",
        "uri": "http://dbpedia.org/property/distributor",
        "mappedBy": "word2vec"
      },
      {
        "label": "distributer",
        "uri": "http://dbpedia.org/ontology/distributor",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who is the headcoach of 2008-09 Marquette Golden Eagles men\u0027s basketball team ?",
    "SerialNumber": "2294",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/2008–09_Marquette_Golden_Eagles_men\u0027s_basketball_team\u003e \u003chttp://dbpedia.org/property/headcoach\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "basketball marquette golden eagles",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/2008–09_Marquette_Golden_Eagles_men\u0027s_basketball_team",
        "seq": "999,1000"
      }
    ],
    "id": "0223d728dead415fa225cd560eb8ad33",
    "predicate mapping": [
      {
        "label": "headcoach",
        "uri": "http://dbpedia.org/property/headcoach",
        "seq": "11,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "315",
    "question": "In which continent do Air 2000 and Novair International airways operate?",
    "SerialNumber": "2300",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Air_2000\u003e \u003chttp://dbpedia.org/property/destinations\u003e ?uri. \u003chttp://dbpedia.org/resource/Novair_International_Airways\u003e \u003chttp://dbpedia.org/property/destinations\u003e ?uri . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Continent\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Air 2000",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Air_2000",
        "seq": "22,30"
      },
      {
        "label": "Novair International airways",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Novair_International_Airways",
        "seq": "35,63"
      }
    ],
    "id": "8eaed436923e4051b575c7c6b88b9797",
    "predicate mapping": [
      {
        "label": "operate",
        "uri": "http://dbpedia.org/property/destinations",
        "mappedBy": "word2vec"
      },
      {
        "label": "operate",
        "uri": "http://dbpedia.org/property/destinations",
        "mappedBy": "word2vec"
      },
      {
        "label": "continent",
        "uri": "http://dbpedia.org/ontology/Continent",
        "seq": "9,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Does Abdelhameed Amarri currently play for Khartoum?",
    "SerialNumber": "2303",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Abdelhameed_Amarri\u003e \u003chttp://dbpedia.org/property/currentclub\u003e \u003chttp://dbpedia.org/resource/Khartoum\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Abdelhameed Amarri",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Abdelhameed_Amarri",
        "seq": "5,23"
      },
      {
        "label": "Khartoum",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Khartoum",
        "seq": "43,51"
      }
    ],
    "id": "5fe5d9294f7a466290ef022f51f60336",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/currentclub",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What are the name of the casualties affected by shooting rampage of Eric Harris and Dylan Klebold?",
    "SerialNumber": "2305",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/deathCause\u003e \u003chttp://dbpedia.org/resource/Eric_Harris_and_Dylan_Klebold\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Eric Harris",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Eric_Harris_and_Dylan_Klebold",
        "seq": "68,79"
      }
    ],
    "id": "9b7b817753ae40aeae2859d4023cc052",
    "predicate mapping": [
      {
        "label": "Klebold",
        "uri": "http://dbpedia.org/ontology/deathCause",
        "mappedBy": "word2vec"
      },
      {
        "label": "Klebold",
        "uri": "http://dbpedia.org/ontology/Person",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Name the awards that have been given to the writer made famous for Creature Comforts?",
    "SerialNumber": "2307",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/notableWork\u003e \u003chttp://dbpedia.org/resource/Creature_Comforts\u003e . ?x \u003chttp://dbpedia.org/ontology/award\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Writer\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Creature Comforts",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Creature_Comforts",
        "seq": "67,84"
      }
    ],
    "id": "5ffd4aac7b004bd480d28d364aeb2aa4",
    "predicate mapping": [
      {
        "label": "famous",
        "uri": "http://dbpedia.org/ontology/notableWork",
        "mappedBy": "word2vec"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/award",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "writer",
        "uri": "http://dbpedia.org/ontology/Writer",
        "seq": "44,50",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Who produces the tv series which made Scott Haran famous?",
    "SerialNumber": "2308",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Scott_Haran\u003e \u003chttp://dbpedia.org/ontology/knownFor\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/producer\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Scott Haran",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Scott_Haran",
        "seq": "38,49"
      }
    ],
    "id": "6e94b499964c49839c36fe479f49b5ce",
    "predicate mapping": [
      {
        "label": "famous",
        "uri": "http://dbpedia.org/ontology/knownFor",
        "mappedBy": "word2vec"
      },
      {
        "label": "produces",
        "uri": "http://dbpedia.org/ontology/producer",
        "seq": "4,12",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "List all the faiths that British Columbian politicians follow?",
    "SerialNumber": "2309",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/residence\u003e \u003chttp://dbpedia.org/resource/British_Columbia\u003e . ?x \u003chttp://dbpedia.org/property/religion\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Politician\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "British Columbia",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/British_Columbia",
        "seq": "25,41"
      }
    ],
    "id": "c0c8c5735c8c4188978cb1911173a8df",
    "predicate mapping": [
      {
        "label": "follow",
        "uri": "http://dbpedia.org/property/residence",
        "mappedBy": "word2vec"
      },
      {
        "label": "faith",
        "uri": "http://dbpedia.org/property/religion",
        "seq": "13,18",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "politician",
        "uri": "http://dbpedia.org/ontology/Politician",
        "seq": "43,53",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "What are some devices made by Taiwanese companies?",
    "SerialNumber": "2314",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/locationCity\u003e \u003chttp://dbpedia.org/resource/Taiwan\u003e . ?uri \u003chttp://dbpedia.org/ontology/manufacturer\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Device\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Taiwan",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Taiwan",
        "seq": "30,36"
      }
    ],
    "id": "6ba75b7096eb497b85706c1872a9dbdd",
    "predicate mapping": [
      {
        "label": "companies",
        "uri": "http://dbpedia.org/property/locationCity",
        "mappedBy": "word2vec"
      },
      {
        "label": "made by",
        "uri": "http://dbpedia.org/ontology/manufacturer",
        "seq": "22,29",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "device",
        "uri": "http://dbpedia.org/ontology/Device",
        "seq": "14,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is a salthill?",
    "SerialNumber": "2315",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Salthill\u003e \u003chttp://dbpedia.org/ontology/type\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "salthill",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Salthill",
        "seq": "10,18"
      }
    ],
    "id": "fb24fef4bec1494480df389bd6d410c1",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/type",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Does the white river flow into the connecticut river{u\u0027_id\u0027: u\u002797e02dcf44aa43c1b7cc7a7c155b118f\u0027,",
    "SerialNumber": "2322",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Connecticut_River\u003e \u003chttp://dbpedia.org/ontology/rightTributary\u003e \u003chttp://dbpedia.org/resource/White_River_(Vermont)\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "connecticut river",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Connecticut_River",
        "seq": "35,52"
      },
      {
        "label": "white river",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/White_River_(Vermont)",
        "seq": "9,20"
      }
    ],
    "id": "9aa99d04670a49e185afbcd4d2a451f5",
    "predicate mapping": [
      {
        "label": "flow",
        "uri": "http://dbpedia.org/ontology/rightTributary",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What are some cars similar to luxury cars?",
    "SerialNumber": "2324",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/class\u003e \u003chttp://dbpedia.org/resource/Luxury_vehicle\u003e . ?x \u003chttp://dbpedia.org/property/related\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Automobile\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "luxury",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Luxury_vehicle",
        "seq": "999,1000"
      }
    ],
    "id": "cdd77de1c8c7471fa087116e8d6f3f19",
    "predicate mapping": [
      {
        "label": "cars",
        "uri": "http://dbpedia.org/property/class",
        "mappedBy": "word2vec"
      },
      {
        "label": "cars",
        "uri": "http://dbpedia.org/property/related",
        "mappedBy": "word2vec"
      },
      {
        "label": "cars",
        "uri": "http://dbpedia.org/ontology/Automobile",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the regional radio sports network associated with?",
    "SerialNumber": "2326",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Regional_Radio_Sports_Network\u003e \u003chttp://dbpedia.org/property/affiliations\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "regional radio sports network",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Regional_Radio_Sports_Network",
        "seq": "12,41"
      }
    ],
    "id": "d8830ee89d0547a7ba604e685fe17819",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/affiliations",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "In which state does the ambassador who is in related with J Bennett Johnston live?",
    "SerialNumber": "2329",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/J._Bennett_Johnston\u003e \u003chttp://dbpedia.org/ontology/relation\u003e ?x . ?x \u003chttp://dbpedia.org/property/state\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "J Bennett Johnston",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/J._Bennett_Johnston",
        "seq": "58,76"
      }
    ],
    "id": "c9d240e63ba642689eb8e646e435a6e5",
    "predicate mapping": [
      {
        "label": "live",
        "uri": "http://dbpedia.org/ontology/relation",
        "mappedBy": "word2vec"
      },
      {
        "label": "state",
        "uri": "http://dbpedia.org/property/state",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Does mumbai manage the railway line going to the daund railway junction?",
    "SerialNumber": "2331",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Daund_Junction_railway_station\u003e \u003chttp://dbpedia.org/ontology/servingRailwayLine\u003e \u003chttp://dbpedia.org/resource/Mumbai\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "junction railway daund",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Daund_Junction_railway_station",
        "seq": "999,1000"
      },
      {
        "label": "mumbai",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Mumbai",
        "seq": "5,11"
      }
    ],
    "id": "9f9eec1d2b8b4a918048a556e1a1bda5",
    "predicate mapping": [
      {
        "label": "railway",
        "uri": "http://dbpedia.org/ontology/servingRailwayLine",
        "seq": "23,30",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Whihc place of birth of the Union State is also the largest city of Union Staete ?",
    "SerialNumber": "2332",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Union_State\u003e \u003chttp://dbpedia.org/property/largestCity\u003e ?uri. \u003chttp://dbpedia.org/resource/Nina_Vislova\u003e \u003chttp://dbpedia.org/property/placeOfBirth\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Union State",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Union_State",
        "seq": "28,39"
      },
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Nina_Vislova",
        "seq": "999,1000"
      }
    ],
    "id": "7f5ac3d1ae004898ac4a4452eb9f8633",
    "predicate mapping": [
      {
        "label": "largest city",
        "uri": "http://dbpedia.org/property/largestCity",
        "seq": "52,64",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "place of birth",
        "uri": "http://dbpedia.org/property/placeOfBirth",
        "seq": "6,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who is the stockholder of the road tunnels operated by the Massachusetts Department of Transportation?",
    "SerialNumber": "2333",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/operator\u003e \u003chttp://dbpedia.org/resource/Massachusetts_Department_of_Transportation\u003e . ?x \u003chttp://dbpedia.org/property/owner\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/RoadTunnel\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Massachusetts Department of Transportation",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Massachusetts_Department_of_Transportation",
        "seq": "59,101"
      }
    ],
    "id": "fbd32172a29a4fa99c58fb5f6b536bff",
    "predicate mapping": [
      {
        "label": "operated",
        "uri": "http://dbpedia.org/property/operator",
        "mappedBy": "word2vec"
      },
      {
        "label": "stockholder",
        "uri": "http://dbpedia.org/property/owner",
        "seq": "11,22",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "road tunnel",
        "uri": "http://dbpedia.org/ontology/RoadTunnel",
        "seq": "30,41",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Through which counties does the road go which starts at the Port Klang?",
    "SerialNumber": "2334",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/routeStart\u003e \u003chttp://dbpedia.org/resource/Port_Klang\u003e . ?x \u003chttp://dbpedia.org/ontology/county\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Road\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Port Klang",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Port_Klang",
        "seq": "60,70"
      }
    ],
    "id": "921cd73c37684f80bc35975c857bc622",
    "predicate mapping": [
      {
        "label": "starts",
        "uri": "http://dbpedia.org/ontology/routeStart",
        "seq": "46,52",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "counties",
        "uri": "http://dbpedia.org/ontology/county",
        "mappedBy": "word2vec"
      },
      {
        "label": "road",
        "uri": "http://dbpedia.org/ontology/Road",
        "seq": "32,36",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Under which president did some politicians live in Kensington?",
    "SerialNumber": "2335",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/residence\u003e \u003chttp://dbpedia.org/resource/Kensington,_Maryland\u003e . ?x \u003chttp://dbpedia.org/ontology/president\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/OfficeHolder\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Kensington",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Kensington,_Maryland",
        "seq": "51,61"
      }
    ],
    "id": "f3545d9f2444478d8c70f13b4ead6094",
    "predicate mapping": [
      {
        "label": "live",
        "uri": "http://dbpedia.org/ontology/residence",
        "mappedBy": "word2vec"
      },
      {
        "label": "president",
        "uri": "http://dbpedia.org/ontology/president",
        "seq": "12,21",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "live",
        "uri": "http://dbpedia.org/ontology/OfficeHolder",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "To what companies is Dennis Muilenburg important?",
    "SerialNumber": "2338",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/keyPeople\u003e \u003chttp://dbpedia.org/resource/Dennis_Muilenburg\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Company\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Dennis Muilenburg",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Dennis_Muilenburg",
        "seq": "21,38"
      }
    ],
    "id": "1220a8e5611d4f3da78af05e41f06c15",
    "predicate mapping": [
      {
        "label": "important",
        "uri": "http://dbpedia.org/property/keyPeople",
        "mappedBy": "word2vec"
      },
      {
        "label": "companies",
        "uri": "http://dbpedia.org/ontology/Company",
        "seq": "8,17",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who operates the railway line which begins in Minneapolis?",
    "SerialNumber": "2343",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/routeStart\u003e \u003chttp://dbpedia.org/resource/Minneapolis\u003e . ?x \u003chttp://dbpedia.org/ontology/operatedBy\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/RailwayLine\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Minneapolis",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Minneapolis",
        "seq": "46,57"
      }
    ],
    "id": "35a6ca70f4ec420db9bc0726e28369a3",
    "predicate mapping": [
      {
        "label": "begins",
        "uri": "http://dbpedia.org/ontology/routeStart",
        "mappedBy": "word2vec"
      },
      {
        "label": "",
        "uri": "http://dbpedia.org/ontology/operatedBy",
        "seq": "0,0",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "railway line",
        "uri": "http://dbpedia.org/ontology/RailwayLine",
        "seq": "17,29",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Wo which countries have the members of Ukrainian ministry of internal affairs swore their oath?",
    "SerialNumber": "2347",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/branch\u003e \u003chttp://dbpedia.org/resource/Ministry_of_Internal_Affairs_(Ukraine)\u003e . ?x \u003chttp://dbpedia.org/property/allegiance\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "ministry of internal affairs",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ministry_of_Internal_Affairs_(Ukraine)",
        "seq": "49,77"
      }
    ],
    "id": "78406ab0c12f410ea4fe01eb52998c48",
    "predicate mapping": [
      {
        "label": "oath",
        "uri": "http://dbpedia.org/property/branch",
        "mappedBy": "word2vec"
      },
      {
        "label": "oath",
        "uri": "http://dbpedia.org/property/allegiance",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Where did the conflict take place in which Henri Putz fought?",
    "SerialNumber": "2348",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Henri_Putz\u003e \u003chttp://dbpedia.org/ontology/battle\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/territory\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Henri Putz",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Henri_Putz",
        "seq": "43,53"
      }
    ],
    "id": "95206ae40dfc4899ae52dc8c2629db84",
    "predicate mapping": [
      {
        "label": "fought",
        "uri": "http://dbpedia.org/ontology/battle",
        "mappedBy": "word2vec"
      },
      {
        "label": "fought",
        "uri": "http://dbpedia.org/ontology/territory",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which producer of  the Eristoff is also the  distributor of  Bombay Sapphire?",
    "SerialNumber": "2349",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Eristoff\u003e \u003chttp://dbpedia.org/property/manufacturer\u003e ?uri. \u003chttp://dbpedia.org/resource/Bombay_Sapphire\u003e \u003chttp://dbpedia.org/property/distributor\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Eristoff",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Eristoff",
        "seq": "23,31"
      },
      {
        "label": "Bombay Sapphire",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Bombay_Sapphire",
        "seq": "61,76"
      }
    ],
    "id": "dc8a5681c7d44c77b2ca46dfd4f97216",
    "predicate mapping": [
      {
        "label": "producer",
        "uri": "http://dbpedia.org/property/manufacturer",
        "mappedBy": "word2vec"
      },
      {
        "label": "distributor",
        "uri": "http://dbpedia.org/property/distributor",
        "seq": "45,56",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which company of Ford Theatre is the owning organization of F0ord Kansa City Assemply Plant ?",
    "SerialNumber": "2353",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Ford_Kansas_City_Assembly_Plant\u003e \u003chttp://dbpedia.org/ontology/owningOrganisation\u003e ?uri. \u003chttp://dbpedia.org/resource/Ford_Theatre\u003e \u003chttp://dbpedia.org/property/company\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Ford_Kansas_City_Assembly_Plant",
        "seq": "999,1000"
      },
      {
        "label": "Ford Theatre",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Ford_Theatre",
        "seq": "17,29"
      }
    ],
    "id": "fa0015d04c344e6cb138c160055c7bc6",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/owningOrganisation",
        "mappedBy": "word2vec"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/property/company",
        "seq": "6,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Is Lyndon bridge a kind of Truss bridge?",
    "SerialNumber": "2355",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Lyndon_Bridge\u003e \u003chttp://dbpedia.org/property/design\u003e \u003chttp://dbpedia.org/resource/Truss_bridge\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Lyndon bridge",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Lyndon_Bridge",
        "seq": "3,16"
      },
      {
        "label": "Truss bridge",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Truss_bridge",
        "seq": "27,39"
      }
    ],
    "id": "ff5b48cd5c5346e19a026ec964d8fc9d",
    "predicate mapping": [
      {
        "label": "kind",
        "uri": "http://dbpedia.org/property/design",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Which country gave birth to the Lemberger LD20b and Start+Flug H101 aircrafts?",
    "SerialNumber": "2356",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Lemberger_LD20b\u003e \u003chttp://dbpedia.org/property/nationalOrigin\u003e ?uri. \u003chttp://dbpedia.org/resource/Start_+_Flug_H-101\u003e \u003chttp://dbpedia.org/property/nationalOrigin\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Lemberger LD20b",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Lemberger_LD20b",
        "seq": "32,47"
      },
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Start_+_Flug_H-101",
        "seq": "999,1000"
      }
    ],
    "id": "df292d030ce14f19904cf9e50c046181",
    "predicate mapping": [
      {
        "label": "aircrafts",
        "uri": "http://dbpedia.org/property/nationalOrigin",
        "mappedBy": "word2vec"
      },
      {
        "label": "aircrafts",
        "uri": "http://dbpedia.org/property/nationalOrigin",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Where is Ethiopian Parliament Building located ?",
    "SerialNumber": "2358",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Ethiopian_Parliament_Building\u003e \u003chttp://dbpedia.org/property/locationCountry\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ethiopian Parliament Building",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ethiopian_Parliament_Building",
        "seq": "9,38"
      }
    ],
    "id": "07d85a1276ff4600947c0e31a1cfbdb8",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/property/locationCountry",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "Enumerate the cars related to the ones assembled in Toluca?",
    "SerialNumber": "2362",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/assembly\u003e \u003chttp://dbpedia.org/resource/Toluca\u003e . ?x \u003chttp://dbpedia.org/property/related\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Toluca",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Toluca",
        "seq": "52,58"
      }
    ],
    "id": "390932ca27634c5d95ed6cc8e1cc22e1",
    "predicate mapping": [
      {
        "label": "assembled",
        "uri": "http://dbpedia.org/property/assembly",
        "mappedBy": "word2vec"
      },
      {
        "label": "related",
        "uri": "http://dbpedia.org/property/related",
        "seq": "19,26",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who wrote the album coming right before Dead Man\u0027s Chest\u0027s OST?",
    "SerialNumber": "2364",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/nextAlbum\u003e \u003chttp://dbpedia.org/resource/Pirates_of_the_Caribbean:_Dead_Man\u0027s_Chest_(soundtrack)\u003e . ?x \u003chttp://dbpedia.org/property/writer\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Album\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Pirates_of_the_Caribbean:_Dead_Man\u0027s_Chest_(soundtrack)",
        "seq": "999,1000"
      }
    ],
    "id": "1151e6908881444aab1d23d7ba18118b",
    "predicate mapping": [
      {
        "label": "album",
        "uri": "http://dbpedia.org/property/nextAlbum",
        "seq": "14,19",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "wrote",
        "uri": "http://dbpedia.org/property/writer",
        "seq": "4,9",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "album",
        "uri": "http://dbpedia.org/ontology/Album",
        "seq": "14,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Where can I find companies which originated in Canada?",
    "SerialNumber": "2367",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/foundationPlace\u003e \u003chttp://dbpedia.org/resource/Canada\u003e . ?x \u003chttp://dbpedia.org/property/locations\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Company\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Canada",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Canada",
        "seq": "47,53"
      }
    ],
    "id": "133cd7d5f379447cba8204eebe933035",
    "predicate mapping": [
      {
        "label": "originated",
        "uri": "http://dbpedia.org/ontology/foundationPlace",
        "mappedBy": "word2vec"
      },
      {
        "label": "originated",
        "uri": "http://dbpedia.org/property/locations",
        "mappedBy": "word2vec"
      },
      {
        "label": "companies",
        "uri": "http://dbpedia.org/ontology/Company",
        "seq": "17,26",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which school of jack mcGregor attend which was also the training center of William Anthony ?",
    "SerialNumber": "2368",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Jack_McGregor\u003e \u003chttp://dbpedia.org/ontology/education\u003e ?uri. \u003chttp://dbpedia.org/resource/William_Anthony_(artist)\u003e \u003chttp://dbpedia.org/ontology/training\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "jack mcGregor",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Jack_McGregor",
        "seq": "16,29"
      },
      {
        "label": "William Anthony",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/William_Anthony_(artist)",
        "seq": "75,90"
      }
    ],
    "id": "bed42761fb204d2d921d29f6c2f208f9",
    "predicate mapping": [
      {
        "label": "center",
        "uri": "http://dbpedia.org/ontology/education",
        "mappedBy": "word2vec"
      },
      {
        "label": "training",
        "uri": "http://dbpedia.org/ontology/training",
        "seq": "56,64",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the university to which Erica Frank went, and where Ivan Toplak was a club manager?",
    "SerialNumber": "2369",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Erica_Frank\u003e \u003chttp://dbpedia.org/ontology/institution\u003e ?uri. \u003chttp://dbpedia.org/resource/Ivan_Toplak\u003e \u003chttp://dbpedia.org/ontology/managerClub\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Erica Frank",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Erica_Frank",
        "seq": "32,43"
      },
      {
        "label": "Ivan Toplak",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Ivan_Toplak",
        "seq": "60,71"
      }
    ],
    "id": "3d59ca37e4b14a8cb41c75edc17b64a4",
    "predicate mapping": [
      {
        "label": "manager",
        "uri": "http://dbpedia.org/ontology/institution",
        "mappedBy": "word2vec"
      },
      {
        "label": "manager club",
        "uri": "http://dbpedia.org/ontology/managerClub",
        "seq": "-1,11",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "To which party do the politicians who died in Delhi belong?",
    "SerialNumber": "2370",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/placeOfDeath\u003e \u003chttp://dbpedia.org/resource/Delhi\u003e . ?x \u003chttp://dbpedia.org/property/party\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/OfficeHolder\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Delhi",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Delhi",
        "seq": "46,51"
      }
    ],
    "id": "2777b95873e84c3fb7296d2c71c9a917",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/placeOfDeath",
        "mappedBy": "word2vec"
      },
      {
        "label": "party",
        "uri": "http://dbpedia.org/property/party",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "belong",
        "uri": "http://dbpedia.org/ontology/OfficeHolder",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which appointer of William Clark is the successor of Levi Lincoln Sr ?",
    "SerialNumber": "2371",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Levi_Lincoln,_Sr.\u003e \u003chttp://dbpedia.org/property/successor\u003e ?uri. \u003chttp://dbpedia.org/resource/William_Clark\u003e \u003chttp://dbpedia.org/property/appointer\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "lincoln levi",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Levi_Lincoln,_Sr.",
        "seq": "999,1000"
      },
      {
        "label": "William Clark",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/William_Clark",
        "seq": "19,32"
      }
    ],
    "id": "e3b7d06679344c72ad872f44eef2b7ec",
    "predicate mapping": [
      {
        "label": "successor",
        "uri": "http://dbpedia.org/property/successor",
        "seq": "40,49",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "appointer",
        "uri": "http://dbpedia.org/property/appointer",
        "seq": "6,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "What is the hometown of the residents of Martha\u0027s vineyards?",
    "SerialNumber": "2372",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/residence\u003e \u003chttp://dbpedia.org/resource/Martha\u0027s_Vineyard\u003e . ?x \u003chttp://dbpedia.org/ontology/hometown\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Martha\u0027s vineyard",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Martha\u0027s_Vineyard",
        "seq": "41,58"
      }
    ],
    "id": "a1e36ed22095495ebef02d6a2bcc945b",
    "predicate mapping": [
      {
        "label": "residents",
        "uri": "http://dbpedia.org/ontology/residence",
        "mappedBy": "word2vec"
      },
      {
        "label": "hometown",
        "uri": "http://dbpedia.org/ontology/hometown",
        "seq": "12,20",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Which companies have launched a rocket from Cape Canaveral Air Force station?",
    "SerialNumber": "2373",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/launchSite\u003e \u003chttp://dbpedia.org/resource/Cape_Canaveral_Air_Force_Station\u003e . ?x \u003chttp://dbpedia.org/ontology/manufacturer\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Rocket\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Cape Canaveral Air Force station",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Cape_Canaveral_Air_Force_Station",
        "seq": "44,76"
      }
    ],
    "id": "76748f8d6e754610ad1d151828b63d55",
    "predicate mapping": [
      {
        "label": "launched",
        "uri": "http://dbpedia.org/ontology/launchSite",
        "seq": "21,29",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "companies",
        "uri": "http://dbpedia.org/ontology/manufacturer",
        "mappedBy": "word2vec"
      },
      {
        "label": "rocket",
        "uri": "http://dbpedia.org/ontology/Rocket",
        "seq": "32,38",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Does the north carolina highway 280 end in Arden?",
    "SerialNumber": "2375",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/North_Carolina_Highway_280\u003e \u003chttp://dbpedia.org/ontology/routeEnd\u003e \u003chttp://dbpedia.org/resource/Arden,_North_Carolina\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "north carolina highway 280",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/North_Carolina_Highway_280",
        "seq": "9,35"
      },
      {
        "label": "carolina north arden",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Arden,_North_Carolina",
        "seq": "999,1000"
      }
    ],
    "id": "4672bed413aa4edca536b02a3e76dd48",
    "predicate mapping": [
      {
        "label": "end",
        "uri": "http://dbpedia.org/ontology/routeEnd",
        "seq": "36,39",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Scientists at the University of Queensland have won which awards?",
    "SerialNumber": "2385",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/almaMater\u003e \u003chttp://dbpedia.org/resource/University_of_Queensland\u003e . ?x \u003chttp://dbpedia.org/property/awards\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Scientist\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "University of Queensland",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/University_of_Queensland",
        "seq": "18,42"
      }
    ],
    "id": "e487c6936b554e3d8395e85c17492758",
    "predicate mapping": [
      {
        "label": "won",
        "uri": "http://dbpedia.org/ontology/almaMater",
        "mappedBy": "word2vec"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards",
        "seq": "58,64",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "Scientist",
        "uri": "http://dbpedia.org/ontology/Scientist",
        "seq": "0,9",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "name the Glover\u0027s distributer ?",
    "SerialNumber": "2391",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Glover_(video_game)\u003e \u003chttp://dbpedia.org/ontology/distributor\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Glover",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Glover_(video_game)",
        "seq": "9,15"
      }
    ],
    "id": "72cc5d9d290e4955a73f49b22c0110b3",
    "predicate mapping": [
      {
        "label": "distributer",
        "uri": "http://dbpedia.org/ontology/distributor",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What nation is Hornito located in, where Jamie Bateman Cayn died too?",
    "SerialNumber": "2392",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Jaime_Bateman_Cayón\u003e \u003chttp://dbpedia.org/ontology/deathPlace\u003e ?uri. \u003chttp://dbpedia.org/resource/Hornito,_Chiriquí\u003e \u003chttp://dbpedia.org/ontology/country\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "bateman",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Jaime_Bateman_Cayón",
        "seq": "999,1000"
      },
      {
        "label": "hornito",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Hornito,_Chiriquí",
        "seq": "999,1000"
      }
    ],
    "id": "83a8ac74414c41bdb0cbf6842d12b28f",
    "predicate mapping": [
      {
        "label": "died",
        "uri": "http://dbpedia.org/ontology/deathPlace",
        "mappedBy": "word2vec"
      },
      {
        "label": "nation",
        "uri": "http://dbpedia.org/ontology/country",
        "seq": "5,11",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "List the Sci-fi TV shows with theme music given by Ron Grainer?",
    "SerialNumber": "2394",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/genre\u003e \u003chttp://dbpedia.org/resource/Science_fiction\u003e . ?uri \u003chttp://dbpedia.org/property/themeMusicComposer\u003e \u003chttp://dbpedia.org/resource/Ron_Grainer\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Science_fiction",
        "seq": "999,1000"
      },
      {
        "label": "Ron Grainer",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ron_Grainer",
        "seq": "51,62"
      }
    ],
    "id": "cd9712900aa94048b9a54b08142c25f4",
    "predicate mapping": [
      {
        "label": "TV",
        "uri": "http://dbpedia.org/property/genre",
        "mappedBy": "word2vec"
      },
      {
        "label": "theme music",
        "uri": "http://dbpedia.org/property/themeMusicComposer",
        "seq": "30,41",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "19,24",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "who are all the people who have managed the England\u0027s under 20 soccer team?",
    "SerialNumber": "2396",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/managerClub\u003e \u003chttp://dbpedia.org/resource/England_national_under-20_football_team\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/England_national_under-20_football_team",
        "seq": "999,1000"
      }
    ],
    "id": "fa725591411f4ce1ae2beceed79c3adb",
    "predicate mapping": [
      {
        "label": "managed",
        "uri": "http://dbpedia.org/ontology/managerClub",
        "seq": "32,39",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Where are all the protected areas near Bend, Oregon?",
    "SerialNumber": "2398",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/nearestCity\u003e \u003chttp://dbpedia.org/resource/Bend,_Oregon\u003e . ?x \u003chttp://dbpedia.org/ontology/location\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/ProtectedArea\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Bend, Oregon",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Bend,_Oregon",
        "seq": "39,51"
      }
    ],
    "id": "2af11bb3bb23402891e39bffb10bc960",
    "predicate mapping": [
      {
        "label": "near",
        "uri": "http://dbpedia.org/ontology/nearestCity",
        "seq": "34,38",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "uri": "http://dbpedia.org/ontology/location",
        "mappedBy": "word2vec"
      },
      {
        "label": "protected area",
        "uri": "http://dbpedia.org/ontology/ProtectedArea",
        "seq": "18,32",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Does the hudson river flow into the lower manhatten?",
    "SerialNumber": "2399",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Hudson_River\u003e \u003chttp://dbpedia.org/ontology/mouthMountain\u003e \u003chttp://dbpedia.org/resource/Lower_Manhattan\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "hudson river",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Hudson_River",
        "seq": "9,21"
      },
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Lower_Manhattan",
        "seq": "999,1000"
      }
    ],
    "id": "ede4d3ef0e754051afede4dcc6babe40",
    "predicate mapping": [
      {
        "label": "lower",
        "uri": "http://dbpedia.org/ontology/mouthMountain",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "402",
    "question": "In how many places did Julian Leow Beng Kim study?",
    "SerialNumber": "2400",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { \u003chttp://dbpedia.org/resource/Julian_Leow_Beng_Kim\u003e \u003chttp://dbpedia.org/property/almaMater\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/University\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Julian Leow Beng Kim",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Julian_Leow_Beng_Kim",
        "seq": "23,43"
      }
    ],
    "id": "229e4197d78f417ca569f31cb727d19d",
    "predicate mapping": [
      {
        "label": "study",
        "uri": "http://dbpedia.org/property/almaMater",
        "mappedBy": "word2vec"
      },
      {
        "label": "study",
        "uri": "http://dbpedia.org/ontology/University",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "406",
    "question": "How many movies have been directed by almunies of Parsons School of Design?",
    "SerialNumber": "2403",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/education\u003e \u003chttp://dbpedia.org/resource/Parsons_School_of_Design\u003e . ?uri \u003chttp://dbpedia.org/ontology/director\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Parsons School of Design",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Parsons_School_of_Design",
        "seq": "50,74"
      }
    ],
    "id": "a9dbfce5738c47e2bb59273f4492c7b3",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/education",
        "mappedBy": "word2vec"
      },
      {
        "label": "directed by",
        "uri": "http://dbpedia.org/ontology/director",
        "seq": "26,37",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Was einstein a doctoral student of Alfred Kleiner?",
    "SerialNumber": "2405",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Alfred_Kleiner\u003e \u003chttp://dbpedia.org/ontology/doctoralStudent\u003e \u003chttp://dbpedia.org/resource/Albert_Einstein\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Alfred Kleiner",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Alfred_Kleiner",
        "seq": "35,49"
      },
      {
        "label": "einstein",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Albert_Einstein",
        "seq": "999,1000"
      }
    ],
    "id": "f107c093f6cd4143af7f686892a28d70",
    "predicate mapping": [
      {
        "label": "doctoral student",
        "uri": "http://dbpedia.org/ontology/doctoralStudent",
        "seq": "15,31",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Is the Mount St Peter Church made in the international architectural style?",
    "SerialNumber": "2406",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Mount_St._Peter_Church\u003e \u003chttp://dbpedia.org/property/architecture\u003e \u003chttp://dbpedia.org/resource/International_Style_(architecture)\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "church peter mount",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Mount_St._Peter_Church",
        "seq": "999,1000"
      },
      {
        "label": "international architectural style",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/International_Style_(architecture)",
        "seq": "41,74"
      }
    ],
    "id": "36f0f09f20ba45daacd083a3e57bd8b2",
    "predicate mapping": [
      {
        "label": "architectural style",
        "uri": "http://dbpedia.org/property/architecture",
        "seq": "55,74",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "Who owns the bank where Fabio Mercurio works?",
    "SerialNumber": "2411",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Fabio_Mercurio\u003e \u003chttp://dbpedia.org/property/institution\u003e ?x . ?x \u003chttp://dbpedia.org/property/owner\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Bank\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Fabio Mercurio",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Fabio_Mercurio",
        "seq": "24,38"
      }
    ],
    "id": "8da4d7ea35a54979b46ddfbfc64b1b5c",
    "predicate mapping": [
      {
        "label": "works",
        "uri": "http://dbpedia.org/property/institution",
        "mappedBy": "word2vec"
      },
      {
        "label": "owns",
        "uri": "http://dbpedia.org/property/owner",
        "seq": "4,8",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "bank",
        "uri": "http://dbpedia.org/ontology/Bank",
        "seq": "13,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "What shows are aired on sister channels of BBC Parliaments",
    "SerialNumber": "2412",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/sisterNames\u003e \u003chttp://dbpedia.org/resource/BBC_Parliament\u003e . ?uri \u003chttp://dbpedia.org/ontology/network\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "BBC Parliament",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/BBC_Parliament",
        "seq": "43,57"
      }
    ],
    "id": "2f903de0d05c4f3c9eb0fcf478f43406",
    "predicate mapping": [
      {
        "label": "sister",
        "uri": "http://dbpedia.org/property/sisterNames",
        "seq": "24,30",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "channels",
        "uri": "http://dbpedia.org/ontology/network",
        "mappedBy": "word2vec"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "5,10",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Starwood operates in which places?",
    "SerialNumber": "2414",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/operator\u003e \u003chttp://dbpedia.org/resource/Starwood_Hotels_and_Resorts_Worldwide\u003e . ?x \u003chttp://dbpedia.org/property/address\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Starwood",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Starwood_Hotels_and_Resorts_Worldwide",
        "seq": "0,8"
      }
    ],
    "id": "00922db47d90435cb5df5903a5025450",
    "predicate mapping": [
      {
        "label": "places",
        "uri": "http://dbpedia.org/property/operator",
        "mappedBy": "word2vec"
      },
      {
        "label": "places",
        "uri": "http://dbpedia.org/property/address",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which fictional character portrayed by Roger barton has Padm Amidala as family ?",
    "SerialNumber": "2417",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/portrayer\u003e \u003chttp://dbpedia.org/resource/Roger_Barton_(film_editor)\u003e . ?uri \u003chttp://dbpedia.org/property/family\u003e \u003chttp://dbpedia.org/resource/Padmé_Amidala\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/FictionalCharacter\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Roger barton",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Roger_Barton_(film_editor)",
        "seq": "39,51"
      },
      {
        "label": "amidala padm",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Padmé_Amidala",
        "seq": "999,1000"
      }
    ],
    "id": "f14f313e8dc0452884affe033d0a04fe",
    "predicate mapping": [
      {
        "label": "portrayed",
        "uri": "http://dbpedia.org/property/portrayer",
        "seq": "26,35",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "family",
        "uri": "http://dbpedia.org/property/family",
        "seq": "72,78",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "fictional character",
        "uri": "http://dbpedia.org/ontology/FictionalCharacter",
        "seq": "6,25",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "Which things have been located, where governance is Houston City Council?",
    "SerialNumber": "2420",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/governingBody\u003e \u003chttp://dbpedia.org/resource/Houston_City_Council\u003e . ?uri \u003chttp://dbpedia.org/ontology/location\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Houston City Council",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Houston_City_Council",
        "seq": "52,72"
      }
    ],
    "id": "82f48c9c0f194d4090c22604bf2864c5",
    "predicate mapping": [
      {
        "label": "governance",
        "uri": "http://dbpedia.org/property/governingBody",
        "mappedBy": "word2vec"
      },
      {
        "label": "governance",
        "uri": "http://dbpedia.org/ontology/location",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What awards have been given to people schooled in the Everton park state high?",
    "SerialNumber": "2421",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/education\u003e \u003chttp://dbpedia.org/resource/Everton_Park_State_High_School\u003e . ?x \u003chttp://dbpedia.org/property/awards\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Everton",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Everton_Park_State_High_School",
        "seq": "54,61"
      }
    ],
    "id": "832739b6967a4676b06c86e5b1426922",
    "predicate mapping": [
      {
        "label": "high",
        "uri": "http://dbpedia.org/property/education",
        "mappedBy": "word2vec"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards",
        "seq": "5,11",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "high",
        "uri": "http://dbpedia.org/ontology/Person",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Where is the south shore plaza located?",
    "SerialNumber": "2423",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/South_Shore_Plaza\u003e \u003chttp://dbpedia.org/property/address\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "south shore plaza",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/South_Shore_Plaza",
        "seq": "13,30"
      }
    ],
    "id": "31a8e6b4c59a4b4eac26800d28fb8078",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/property/address",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "What is written in a programming language developed by GNOME Project?",
    "SerialNumber": "2427",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/developer\u003e \u003chttp://dbpedia.org/resource/The_GNOME_Project\u003e . ?uri \u003chttp://dbpedia.org/property/programmingLanguage\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "project gnome",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/The_GNOME_Project",
        "seq": "999,1000"
      }
    ],
    "id": "8e7ec89e4ed941bf8ca2d3ac48db3969",
    "predicate mapping": [
      {
        "label": "developed by",
        "uri": "http://dbpedia.org/property/developer",
        "seq": "42,54",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "programming language",
        "uri": "http://dbpedia.org/property/programmingLanguage",
        "seq": "21,41",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "101",
    "question": "Count all the stateless people",
    "SerialNumber": "2428",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/ontology/citizenship\u003e \u003chttp://dbpedia.org/resource/Statelessness\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "stateless",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Statelessness",
        "seq": "999,1000"
      }
    ],
    "id": "35abbfdef65f48d399ea86f591412293",
    "predicate mapping": [
      {
        "label": "people",
        "uri": "http://dbpedia.org/ontology/citizenship",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "What is the television show with presentator as Ryan Seacrest and theme music composer as Julian Gingell?",
    "SerialNumber": "2433",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/presenter\u003e \u003chttp://dbpedia.org/resource/Ryan_Seacrest\u003e . ?uri \u003chttp://dbpedia.org/property/themeMusicComposer\u003e \u003chttp://dbpedia.org/resource/Julian_Gingell\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ryan Seacrest",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ryan_Seacrest",
        "seq": "48,61"
      },
      {
        "label": "Julian Gingell",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Julian_Gingell",
        "seq": "90,104"
      }
    ],
    "id": "d36cd4157a5647ac96cd3a1013473247",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/presenter",
        "mappedBy": "word2vec"
      },
      {
        "label": "theme music composer",
        "uri": "http://dbpedia.org/property/themeMusicComposer",
        "seq": "66,86",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "12,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "River which flows into the eugene mahoney state park pass through which states?",
    "SerialNumber": "2434",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/mouthLocation\u003e \u003chttp://dbpedia.org/resource/Eugene_T._Mahoney_State_Park\u003e . ?x \u003chttp://dbpedia.org/ontology/state\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "mahoney eugene state",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Eugene_T._Mahoney_State_Park",
        "seq": "999,1000"
      }
    ],
    "id": "8aefda4d445e431ba18e9893471a7d0e",
    "predicate mapping": [
      {
        "label": "pass",
        "uri": "http://dbpedia.org/property/mouthLocation",
        "mappedBy": "word2vec"
      },
      {
        "label": "state",
        "uri": "http://dbpedia.org/ontology/state",
        "seq": "42,47",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "403",
    "question": "For how many cities\u0027s teams did David Bowens play?",
    "SerialNumber": "2436",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { \u003chttp://dbpedia.org/resource/David_Bowens\u003e \u003chttp://dbpedia.org/ontology/formerTeam\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/locationCity\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/SportsTeam\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "David Bowens",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/David_Bowens",
        "seq": "32,44"
      }
    ],
    "id": "e3e4596a38cd41b5925a1131d75af14f",
    "predicate mapping": [
      {
        "label": "teams",
        "uri": "http://dbpedia.org/ontology/formerTeam",
        "seq": "22,27",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "play",
        "uri": "http://dbpedia.org/ontology/locationCity",
        "mappedBy": "word2vec"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/SportsTeam",
        "seq": "22,26",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "106",
    "question": "Give me a count of everything made by the company which offers electronical manufacturing too.",
    "SerialNumber": "2451",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/service\u003e \u003chttp://dbpedia.org/resource/Electronics_manufacturing_services\u003e . ?uri \u003chttp://dbpedia.org/ontology/manufacturer\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "manufacturing",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Electronics_manufacturing_services",
        "seq": "999,1000"
      }
    ],
    "id": "0c63debd713445eebabef107c1f94b34",
    "predicate mapping": [
      {
        "label": "manufacturing",
        "uri": "http://dbpedia.org/ontology/service",
        "mappedBy": "word2vec"
      },
      {
        "label": "made by",
        "uri": "http://dbpedia.org/ontology/manufacturer",
        "seq": "30,37",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What currencies are prevalent in the countries governed by the President of France?",
    "SerialNumber": "2454",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/leaderTitle\u003e \u003chttp://dbpedia.org/resource/President_of_France\u003e . ?x \u003chttp://dbpedia.org/ontology/currency\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Country\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "President of France",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/President_of_France",
        "seq": "63,82"
      }
    ],
    "id": "86c4146411a441b9b7ae67962a14c5a7",
    "predicate mapping": [
      {
        "label": "governed",
        "uri": "http://dbpedia.org/property/leaderTitle",
        "mappedBy": "word2vec"
      },
      {
        "label": "currencies",
        "uri": "http://dbpedia.org/ontology/currency",
        "seq": "5,15",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "countries",
        "uri": "http://dbpedia.org/ontology/Country",
        "seq": "37,46",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Which teams have used the stadium whose architect was Populous ?",
    "SerialNumber": "2455",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/architect\u003e \u003chttp://dbpedia.org/resource/Populous_(company)\u003e . ?x \u003chttp://dbpedia.org/ontology/tenant\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Stadium\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Populous",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Populous_(company)",
        "seq": "54,62"
      }
    ],
    "id": "804153ef4a04420d9160d3b4da5a2545",
    "predicate mapping": [
      {
        "label": "architect",
        "uri": "http://dbpedia.org/ontology/architect",
        "seq": "40,49",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "teams",
        "uri": "http://dbpedia.org/ontology/tenant",
        "mappedBy": "word2vec"
      },
      {
        "label": "stadium",
        "uri": "http://dbpedia.org/ontology/Stadium",
        "seq": "26,33",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "How many contries surround the seas on the banks of which is the city of Cancun?",
    "SerialNumber": "2459",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/cities\u003e \u003chttp://dbpedia.org/resource/Cancún\u003e . ?x \u003chttp://dbpedia.org/ontology/country\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Cancun",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Cancún",
        "seq": "73,79"
      }
    ],
    "id": "4b63d37cdc444e47bb79f766451d32ac",
    "predicate mapping": [
      {
        "label": "banks",
        "uri": "http://dbpedia.org/property/cities",
        "mappedBy": "word2vec"
      },
      {
        "label": "city",
        "uri": "http://dbpedia.org/ontology/country",
        "seq": "65,69",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which city was designed by saleen Pator which is also the birht location of Jimmy Diggs ?",
    "SerialNumber": "2462",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Saleen_S5S_Raptor\u003e \u003chttp://dbpedia.org/property/designer\u003e ?uri. \u003chttp://dbpedia.org/resource/Jimmy_Diggs\u003e \u003chttp://dbpedia.org/ontology/birthPlace\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "saleen",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Saleen_S5S_Raptor",
        "seq": "999,1000"
      },
      {
        "label": "Jimmy Diggs",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Jimmy_Diggs",
        "seq": "76,87"
      }
    ],
    "id": "888e5195b6724c50955a1020e553cbf6",
    "predicate mapping": [
      {
        "label": "designed",
        "uri": "http://dbpedia.org/property/designer",
        "seq": "15,23",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "location",
        "uri": "http://dbpedia.org/ontology/birthPlace",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the office holder whose theatre is Siege of Fort Recovery and belongs to Indian territory branch ?",
    "SerialNumber": "2464",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/battle\u003e \u003chttp://dbpedia.org/resource/Siege_of_Fort_Recovery\u003e . ?uri \u003chttp://dbpedia.org/property/branch\u003e \u003chttp://dbpedia.org/resource/Indiana_Territory\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/OfficeHolder\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Siege of Fort Recovery",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Siege_of_Fort_Recovery",
        "seq": "40,62"
      },
      {
        "label": "territory indian",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Indiana_Territory",
        "seq": "999,1000"
      }
    ],
    "id": "b7ffb05378d2452b978792c947b826e3",
    "predicate mapping": [
      {
        "label": "theatre",
        "uri": "http://dbpedia.org/ontology/battle",
        "seq": "29,36",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "branch",
        "uri": "http://dbpedia.org/property/branch",
        "seq": "95,101",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "office holder",
        "uri": "http://dbpedia.org/ontology/OfficeHolder",
        "seq": "9,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What was the university of the rugby player who coached the Stanford rugby teams during 1906-1917?",
    "SerialNumber": "2465",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/1906–17_Stanford_rugby_teams\u003e \u003chttp://dbpedia.org/property/headcoach\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/university\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "stanford",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/1906–17_Stanford_rugby_teams",
        "seq": "999,1000"
      }
    ],
    "id": "6aad2feaead44d8e87827dc6c1ff9a57",
    "predicate mapping": [
      {
        "label": "coached",
        "uri": "http://dbpedia.org/property/headcoach",
        "seq": "48,55",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "university",
        "uri": "http://dbpedia.org/ontology/university",
        "seq": "13,23",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Which sports are played at both the Polytech uni of Bataan and Taguig?",
    "SerialNumber": "2466",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_–_Bataan\u003e \u003chttp://dbpedia.org/ontology/sport\u003e ?uri. \u003chttp://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_Taguig\u003e \u003chttp://dbpedia.org/ontology/sport\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "polytech bataan",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_–_Bataan",
        "seq": "999,1000"
      },
      {
        "label": "polytech taguig",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_Taguig",
        "seq": "999,1000"
      }
    ],
    "id": "235bac8ebb9049149d10aec4b92b6881",
    "predicate mapping": [
      {
        "label": "sport",
        "uri": "http://dbpedia.org/ontology/sport",
        "seq": "6,11",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "sport",
        "uri": "http://dbpedia.org/ontology/sport",
        "seq": "6,11",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What layout can be found in cars similar to the Subaru Outback?",
    "SerialNumber": "2469",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/related\u003e \u003chttp://dbpedia.org/resource/Subaru_Outback\u003e . ?x \u003chttp://dbpedia.org/ontology/layout\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Automobile\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Subaru Outback",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Subaru_Outback",
        "seq": "48,62"
      }
    ],
    "id": "3de0eac5123f4e209570dffcc7b9e398",
    "predicate mapping": [
      {
        "label": "similar",
        "uri": "http://dbpedia.org/property/related",
        "mappedBy": "word2vec"
      },
      {
        "label": "layout",
        "uri": "http://dbpedia.org/ontology/layout",
        "seq": "5,11",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "similar",
        "uri": "http://dbpedia.org/ontology/Automobile",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "101",
    "question": "How many organizations work for Environmentalism?",
    "SerialNumber": "2471",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/property/purpose\u003e \u003chttp://dbpedia.org/resource/Environmentalism\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Environmentalism",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Environmentalism",
        "seq": "32,48"
      }
    ],
    "id": "a8dde84d23764e07b345f79862bd2561",
    "predicate mapping": [
      {
        "label": "work",
        "uri": "http://dbpedia.org/property/purpose",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "8",
    "question": "Which producer of Boeing F/A-18E/F Super Hornet has a key person Dennis Muilenburg ?",
    "SerialNumber": "2472",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/keyPeople\u003e \u003chttp://dbpedia.org/resource/Dennis_Muilenburg\u003e . ?uri \u003chttp://dbpedia.org/property/products\u003e \u003chttp://dbpedia.org/resource/Boeing_F/A-18E/F_Super_Hornet\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Dennis Muilenburg",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Dennis_Muilenburg",
        "seq": "65,82"
      }
    ],
    "id": "1876b2c28ef241b785166c94d876c850",
    "predicate mapping": [
      {
        "label": "key",
        "uri": "http://dbpedia.org/property/keyPeople",
        "seq": "54,57",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/property/products",
        "mappedBy": "word2vec"
      },
      {
        "label": "hornet super",
        "uri": "http://dbpedia.org/resource/Boeing_F/A-18E/F_Super_Hornet",
        "seq": "-1,11",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "To which uni. did  sidney c patridge and cyril hume both once went?",
    "SerialNumber": "2473",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Sidney_Catlin_Partridge\u003e \u003chttp://dbpedia.org/property/education\u003e ?uri. \u003chttp://dbpedia.org/resource/Cyril_Hume\u003e \u003chttp://dbpedia.org/property/education\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Sidney_Catlin_Partridge",
        "seq": "999,1000"
      },
      {
        "label": "cyril hume",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Cyril_Hume",
        "seq": "41,51"
      }
    ],
    "id": "f15503debeab476e92bec7104ca5599b",
    "predicate mapping": [
      {
        "label": "sidney",
        "uri": "http://dbpedia.org/property/education",
        "mappedBy": "word2vec"
      },
      {
        "label": "sidney",
        "uri": "http://dbpedia.org/property/education",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "To which party does the politician belong, who was born in Nandurbar?",
    "SerialNumber": "2477",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/placeOfBirth\u003e \u003chttp://dbpedia.org/resource/Nandurbar\u003e . ?x \u003chttp://dbpedia.org/ontology/party\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Politician\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Nandurbar",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Nandurbar",
        "seq": "59,68"
      }
    ],
    "id": "6ba161b8976648ed9d66e2ddb758f1f2",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/placeOfBirth",
        "mappedBy": "word2vec"
      },
      {
        "label": "party",
        "uri": "http://dbpedia.org/ontology/party",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "politician",
        "uri": "http://dbpedia.org/ontology/Politician",
        "seq": "24,34",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "People who debuted from Houston Astros have played in which clubs?",
    "SerialNumber": "2482",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/debutTeam\u003e \u003chttp://dbpedia.org/resource/Houston_Astros\u003e . ?x \u003chttp://dbpedia.org/ontology/team\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Houston Astros",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Houston_Astros",
        "seq": "24,38"
      }
    ],
    "id": "cfcc12ca99344c948bb29580893f960e",
    "predicate mapping": [
      {
        "label": "debuted",
        "uri": "http://dbpedia.org/ontology/debutTeam",
        "seq": "11,18",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "clubs",
        "uri": "http://dbpedia.org/ontology/team",
        "mappedBy": "word2vec"
      },
      {
        "label": "clubs",
        "uri": "http://dbpedia.org/ontology/Person",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What sport played at Islamic azad uni employes Craig Van Tilbury?",
    "SerialNumber": "2483",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Craig_Van_Tilbury\u003e \u003chttp://dbpedia.org/ontology/occupation\u003e ?uri. \u003chttp://dbpedia.org/resource/Islamic_Azad_University_Central_Tehran_Branch\u003e \u003chttp://dbpedia.org/ontology/sport\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Craig Van Tilbury",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Craig_Van_Tilbury",
        "seq": "47,64"
      },
      {
        "label": "islamic azad",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Islamic_Azad_University_Central_Tehran_Branch",
        "seq": "999,1000"
      }
    ],
    "id": "0cf0d3fc76114f5bb2970fc5db230b49",
    "predicate mapping": [
      {
        "label": "employes",
        "uri": "http://dbpedia.org/ontology/occupation",
        "mappedBy": "word2vec"
      },
      {
        "label": "sport",
        "uri": "http://dbpedia.org/ontology/sport",
        "seq": "5,10",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "7",
    "question": "Where are Solidus and Aureus used?",
    "SerialNumber": "2484",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/ontology/currency\u003e \u003chttp://dbpedia.org/resource/Solidus_(coin)\u003e . ?uri \u003chttp://dbpedia.org/ontology/currency\u003e \u003chttp://dbpedia.org/resource/Aureus\u003e . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Solidus",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Solidus_(coin)",
        "seq": "10,17"
      },
      {
        "label": "Aureus",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Aureus",
        "seq": "22,28"
      }
    ],
    "id": "1a1fe17b13dd4e109fdd6073577080a4",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/currency",
        "mappedBy": "word2vec"
      },
      {
        "uri": "http://dbpedia.org/ontology/currency",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Did Christian Barnard study in the University of Minnesota?",
    "SerialNumber": "2491",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Christiaan_Barnard\u003e \u003chttp://dbpedia.org/ontology/institution\u003e \u003chttp://dbpedia.org/resource/University_of_Minnesota\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Christian Barnard",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Christiaan_Barnard",
        "seq": "4,21"
      },
      {
        "label": "University of Minnesota",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/University_of_Minnesota",
        "seq": "35,58"
      }
    ],
    "id": "bd015efa79cc4cf6ace73ea181c96abd",
    "predicate mapping": [
      {
        "label": "study",
        "uri": "http://dbpedia.org/ontology/institution",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the home town of the Rolando Gomez is the DOD of the Clyde McNeal ?",
    "SerialNumber": "2495",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Rolando_Gomez\u003e \u003chttp://dbpedia.org/property/homeTown\u003e ?uri. \u003chttp://dbpedia.org/resource/Clyde_McNeal\u003e \u003chttp://dbpedia.org/property/deathDate\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Rolando Gomez",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Rolando_Gomez",
        "seq": "29,42"
      },
      {
        "label": "Clyde McNeal",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Clyde_McNeal",
        "seq": "61,73"
      }
    ],
    "id": "78242b591ed14293a5c985c9cdb0a3ab",
    "predicate mapping": [
      {
        "label": "home town",
        "uri": "http://dbpedia.org/property/homeTown",
        "seq": "12,21",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "DOD",
        "uri": "http://dbpedia.org/property/deathDate",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "311",
    "question": "List the home town of the people who have Ontario as one of it ?",
    "SerialNumber": "2499",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/homeTown\u003e \u003chttp://dbpedia.org/resource/Ontario\u003e . ?x \u003chttp://dbpedia.org/property/homeTown\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ontario",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ontario",
        "seq": "42,49"
      }
    ],
    "id": "87b748e0d7f448dfad6f4d9e657df140",
    "predicate mapping": [
      {
        "label": "home town",
        "uri": "http://dbpedia.org/property/homeTown",
        "seq": "9,18",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "home town",
        "uri": "http://dbpedia.org/property/homeTown",
        "seq": "9,18",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "people",
        "uri": "http://dbpedia.org/ontology/Person",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "401",
    "question": "Pennsylvania has how many american football teams?",
    "SerialNumber": "2501",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/property/city\u003e \u003chttp://dbpedia.org/resource/Pennsylvania\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/AmericanFootballTeam\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Pennsylvania",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Pennsylvania",
        "seq": "0,12"
      }
    ],
    "id": "1a867d312a124069949fc1d4e7e99000",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/city",
        "mappedBy": "word2vec"
      },
      {
        "label": "american football team",
        "uri": "http://dbpedia.org/ontology/AmericanFootballTeam",
        "seq": "26,48",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "name the region served by Jerusalem Institue of Justice which was also the conflict region in GazaIsrael ?",
    "SerialNumber": "2503",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Jerusalem_Institute_of_Justice\u003e \u003chttp://dbpedia.org/ontology/service\u003e ?uri. \u003chttp://dbpedia.org/resource/Gaza–Israel_conflict\u003e \u003chttp://dbpedia.org/property/result\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "jerusalem",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Jerusalem_Institute_of_Justice",
        "seq": "999,1000"
      },
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Gaza–Israel_conflict",
        "seq": "999,1000"
      }
    ],
    "id": "b2cd1f2860c74a409807a44fab5702ff",
    "predicate mapping": [
      {
        "label": "region",
        "uri": "http://dbpedia.org/ontology/service",
        "mappedBy": "word2vec"
      },
      {
        "label": "region",
        "uri": "http://dbpedia.org/property/result",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "Count the number of different religions that field marshals have followed?",
    "SerialNumber": "2504",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/militaryRank\u003e \u003chttp://dbpedia.org/resource/Field_marshal\u003e . ?x \u003chttp://dbpedia.org/ontology/religion\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "field marshals",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Field_marshal",
        "seq": "45,59"
      }
    ],
    "id": "880132cb380144518ffc1218cb9fb11e",
    "predicate mapping": [
      {
        "label": "number",
        "uri": "http://dbpedia.org/ontology/militaryRank",
        "mappedBy": "word2vec"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion",
        "seq": "30,38",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who wrote the singles on the Main Course?",
    "SerialNumber": "2508",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/album\u003e \u003chttp://dbpedia.org/resource/Main_Course\u003e . ?x \u003chttp://dbpedia.org/property/writer\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Single\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Main Course",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Main_Course",
        "seq": "29,40"
      }
    ],
    "id": "ff272b89f0e04ea683d6f633ea223754",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/album",
        "mappedBy": "word2vec"
      },
      {
        "label": "wrote",
        "uri": "http://dbpedia.org/property/writer",
        "seq": "4,9",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "single",
        "uri": "http://dbpedia.org/ontology/Single",
        "seq": "14,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "Name a few whose live in a place where Indian English is an official language",
    "SerialNumber": "2513",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/officialLanguage\u003e \u003chttp://dbpedia.org/resource/Indian_English\u003e . ?uri \u003chttp://dbpedia.org/ontology/residence\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Indian English",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Indian_English",
        "seq": "39,53"
      }
    ],
    "id": "000c7ab2bce24308b9e2d7886852c5ab",
    "predicate mapping": [
      {
        "label": "official language",
        "uri": "http://dbpedia.org/ontology/officialLanguage",
        "seq": "60,77",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "place",
        "uri": "http://dbpedia.org/ontology/residence",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What are some Louisiana based models known for?",
    "SerialNumber": "2516",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/placeOfBirth\u003e \u003chttp://dbpedia.org/resource/Louisiana\u003e . ?x \u003chttp://dbpedia.org/property/knownFor\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Model\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Louisiana",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Louisiana",
        "seq": "14,23"
      }
    ],
    "id": "b1e194a22c164d3a9200e8ed3425fd1b",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/placeOfBirth",
        "mappedBy": "word2vec"
      },
      {
        "label": "known for",
        "uri": "http://dbpedia.org/property/knownFor",
        "seq": "37,46",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "model",
        "uri": "http://dbpedia.org/ontology/Model",
        "seq": "30,35",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "List the awards given to the important people of Aardman Animations?",
    "SerialNumber": "2518",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Aardman_Animations\u003e \u003chttp://dbpedia.org/ontology/keyPerson\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/award\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Aardman Animations",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Aardman_Animations",
        "seq": "49,67"
      }
    ],
    "id": "ea43482e56b84335b891f1be6326132e",
    "predicate mapping": [
      {
        "label": "people",
        "uri": "http://dbpedia.org/ontology/keyPerson",
        "mappedBy": "word2vec"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/award",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Where does the publisher of Kathimerini live?",
    "SerialNumber": "2522",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Kathimerini\u003e \u003chttp://dbpedia.org/ontology/publisher\u003e ?x . ?x \u003chttp://dbpedia.org/property/residence\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Kathimerini",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Kathimerini",
        "seq": "28,39"
      }
    ],
    "id": "c830276732964533b201803bc7dbe949",
    "predicate mapping": [
      {
        "label": "publisher",
        "uri": "http://dbpedia.org/ontology/publisher",
        "seq": "15,24",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "live",
        "uri": "http://dbpedia.org/property/residence",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "To which places do the flights go by airlines headquartered in the UK?",
    "SerialNumber": "2524",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/headquarters\u003e \u003chttp://dbpedia.org/resource/United_Kingdom\u003e . ?x \u003chttp://dbpedia.org/property/destinations\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Airline\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "UK",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/United_Kingdom",
        "seq": "67,69"
      }
    ],
    "id": "efb84d67dd2347d9b6b254799a4661c3",
    "predicate mapping": [
      {
        "label": "headquarter",
        "uri": "http://dbpedia.org/property/headquarters",
        "seq": "46,57",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "ed",
        "uri": "http://dbpedia.org/property/destinations",
        "mappedBy": "word2vec"
      },
      {
        "label": "airline",
        "uri": "http://dbpedia.org/ontology/Airline",
        "seq": "37,44",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Relatives of Moses used to follow which religions?",
    "SerialNumber": "2525",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Moses\u003e \u003chttp://dbpedia.org/ontology/relative\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/veneratedIn\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Moses",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Moses",
        "seq": "13,18"
      }
    ],
    "id": "1b85b83eced84ed5bac6ce3b7641fe6b",
    "predicate mapping": [
      {
        "label": "Relative",
        "uri": "http://dbpedia.org/ontology/relative",
        "seq": "0,8",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "religions",
        "uri": "http://dbpedia.org/ontology/veneratedIn",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What sports are played at institutes affiliated by the Association of Southeast Asian Institutes of Higher Learning?",
    "SerialNumber": "2526",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/affiliation\u003e \u003chttp://dbpedia.org/resource/Association_of_Southeast_Asian_Institutions_of_Higher_Learning\u003e . ?x \u003chttp://dbpedia.org/ontology/sport\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/EducationalInstitution\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Association of Southeast Asian Institutes",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Association_of_Southeast_Asian_Institutions_of_Higher_Learning",
        "seq": "55,96"
      }
    ],
    "id": "e1bf04582dd24181bedaeba350fbf86e",
    "predicate mapping": [
      {
        "label": "Learning",
        "uri": "http://dbpedia.org/ontology/affiliation",
        "mappedBy": "word2vec"
      },
      {
        "label": "sport",
        "uri": "http://dbpedia.org/ontology/sport",
        "seq": "5,10",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "Learning",
        "uri": "http://dbpedia.org/ontology/EducationalInstitution",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What sport amongst the one Lagos Preparatory School practices, did Willian Garne play for?",
    "SerialNumber": "2528",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Lagos_Preparatory_School\u003e \u003chttp://dbpedia.org/ontology/sport\u003e ?uri. \u003chttp://dbpedia.org/resource/William_Garne\u003e \u003chttp://dbpedia.org/ontology/occupation\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Lagos Preparatory School",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Lagos_Preparatory_School",
        "seq": "27,51"
      },
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/William_Garne",
        "seq": "999,1000"
      }
    ],
    "id": "16c8192ee06a41f8b0849022a7a0a8d0",
    "predicate mapping": [
      {
        "label": "sport",
        "uri": "http://dbpedia.org/ontology/sport",
        "seq": "5,10",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "play",
        "uri": "http://dbpedia.org/ontology/occupation",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "With which artist did the musical artist of Groove Thang collaborated ?",
    "SerialNumber": "2530",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Groove_Thang\u003e \u003chttp://dbpedia.org/ontology/musicalArtist\u003e ?x . ?x \u003chttp://dbpedia.org/property/associatedActs\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Groove Thang",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Groove_Thang",
        "seq": "44,56"
      }
    ],
    "id": "bb2d7162c47e46b9a5ccd94bed534a92",
    "predicate mapping": [
      {
        "label": "musical artist",
        "uri": "http://dbpedia.org/ontology/musicalArtist",
        "seq": "26,40",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "collaborated",
        "uri": "http://dbpedia.org/property/associatedActs",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Where can i find salad based food?",
    "SerialNumber": "2531",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/mainIngredient\u003e \u003chttp://dbpedia.org/resource/Salad\u003e . ?x \u003chttp://dbpedia.org/property/country\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "salad",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Salad",
        "seq": "17,22"
      }
    ],
    "id": "e4e55365215047349dcabad761023fd4",
    "predicate mapping": [
      {
        "label": "food",
        "uri": "http://dbpedia.org/property/mainIngredient",
        "mappedBy": "word2vec"
      },
      {
        "label": "food",
        "uri": "http://dbpedia.org/property/country",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "In which state do darren brass and belvin perry live?",
    "SerialNumber": "2533",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Darren_Brass\u003e \u003chttp://dbpedia.org/ontology/residence\u003e ?uri. \u003chttp://dbpedia.org/resource/Belvin_Perry\u003e \u003chttp://dbpedia.org/ontology/residence\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "darren brass",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Darren_Brass",
        "seq": "18,30"
      },
      {
        "label": "belvin perry",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Belvin_Perry",
        "seq": "35,47"
      }
    ],
    "id": "f01521d56f7e45d38d7855d22371b453",
    "predicate mapping": [
      {
        "label": "live",
        "uri": "http://dbpedia.org/ontology/residence",
        "mappedBy": "word2vec"
      },
      {
        "label": "live",
        "uri": "http://dbpedia.org/ontology/residence",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which team did wolfred McDonald is also the prospect team of Milkhail Pashnin ?",
    "SerialNumber": "2535",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Mikhail_Pashnin\u003e \u003chttp://dbpedia.org/property/prospectTeam\u003e ?uri. \u003chttp://dbpedia.org/resource/Wilfred_McDonald\u003e \u003chttp://dbpedia.org/property/playedFor\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "pashnin",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Mikhail_Pashnin",
        "seq": "999,1000"
      },
      {
        "label": "mcdonald",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Wilfred_McDonald",
        "seq": "999,1000"
      }
    ],
    "id": "9c6b233ade344cbfa7f26302aa1584cc",
    "predicate mapping": [
      {
        "label": "prospect team",
        "uri": "http://dbpedia.org/property/prospectTeam",
        "seq": "44,57",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/property/playedFor",
        "seq": "6,10",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Where did Andy Wyant die and Robert Rodi was born in?",
    "SerialNumber": "2536",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Robert_Rodi\u003e \u003chttp://dbpedia.org/ontology/birthPlace\u003e ?uri. \u003chttp://dbpedia.org/resource/Andy_Wyant\u003e \u003chttp://dbpedia.org/property/placeOfDeath\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Robert Rodi",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Robert_Rodi",
        "seq": "29,40"
      },
      {
        "label": "Andy Wyant",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Andy_Wyant",
        "seq": "10,20"
      }
    ],
    "id": "7cedb64c402a4e7cacbcc2a3d3a3280a",
    "predicate mapping": [
      {
        "label": "born in",
        "uri": "http://dbpedia.org/ontology/birthPlace",
        "seq": "45,52",
        "mappedBy": "byLabelMatch"
      },
      {
        "uri": "http://dbpedia.org/property/placeOfDeath",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "8",
    "question": "Name a colonel whose resting place is Montpelier ?",
    "SerialNumber": "2537",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/rank\u003e \u003chttp://dbpedia.org/resource/Colonel_(United_States)\u003e . ?uri \u003chttp://dbpedia.org/property/restingplace\u003e \u003chttp://dbpedia.org/resource/Montpelier_(Orange,_Virginia)\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "colonel",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Colonel_(United_States)",
        "seq": "7,14"
      },
      {
        "label": "Montpelier",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Montpelier_(Orange,_Virginia)",
        "seq": "38,48"
      }
    ],
    "id": "95aa0849c5cc45f18b94c5427546188b",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/rank",
        "mappedBy": "word2vec"
      },
      {
        "label": "resting place",
        "uri": "http://dbpedia.org/property/restingplace",
        "seq": "21,34",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Where did the ultimate fighter: a champion will be crowned tonight and ultimate fighter: team rousey vs team tate take place?",
    "SerialNumber": "2539",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/The_Ultimate_Fighter:_A_Champion_Will_Be_Crowned\u003e \u003chttp://dbpedia.org/property/city\u003e ?uri. \u003chttp://dbpedia.org/resource/The_Ultimate_Fighter:_Team_Rousey_vs._Team_Tate\u003e \u003chttp://dbpedia.org/property/city\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "the ultimate fighter: a champion will be crowned",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Ultimate_Fighter:_A_Champion_Will_Be_Crowned",
        "seq": "10,58"
      },
      {
        "label": "ultimate fighter: rousey",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/The_Ultimate_Fighter:_Team_Rousey_vs._Team_Tate",
        "seq": "999,1000"
      }
    ],
    "id": "364043e289af4b249909ba7a1c28c8ac",
    "predicate mapping": [
      {
        "label": "place",
        "uri": "http://dbpedia.org/property/city",
        "mappedBy": "word2vec"
      },
      {
        "label": "place",
        "uri": "http://dbpedia.org/property/city",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Is The Universe in a Single Atom a book about buddhism?",
    "SerialNumber": "2542",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/The_Universe_in_a_Single_Atom\u003e \u003chttp://dbpedia.org/ontology/literaryGenre\u003e \u003chttp://dbpedia.org/resource/Buddhism\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "The Universe in a Single Atom",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Universe_in_a_Single_Atom",
        "seq": "3,32"
      },
      {
        "label": "buddhism",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Buddhism",
        "seq": "46,54"
      }
    ],
    "id": "459dcf9d415e401787e5bfb3af170b9b",
    "predicate mapping": [
      {
        "label": "book",
        "uri": "http://dbpedia.org/ontology/literaryGenre",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Which musician was born in Harriman, NY?",
    "SerialNumber": "2544",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/placeOfBirth\u003e \u003chttp://dbpedia.org/resource/Harriman,_New_York\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MusicalArtist\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "harriman,",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Harriman,_New_York",
        "seq": "999,1000"
      }
    ],
    "id": "992095c492cf4b5ab41703a61761cbab",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/placeOfBirth",
        "mappedBy": "word2vec"
      },
      {
        "label": "musician",
        "uri": "http://dbpedia.org/ontology/MusicalArtist",
        "seq": "6,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What are the famous Uni Toronto scientists known for?",
    "SerialNumber": "2545",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/almaMater\u003e \u003chttp://dbpedia.org/resource/University_of_Toronto\u003e . ?x \u003chttp://dbpedia.org/ontology/knownFor\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Scientist\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Uni Toronto",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/University_of_Toronto",
        "seq": "20,31"
      }
    ],
    "id": "01676793d39944c3aa2728c8e59460dd",
    "predicate mapping": [
      {
        "label": "famous",
        "uri": "http://dbpedia.org/ontology/almaMater",
        "mappedBy": "word2vec"
      },
      {
        "label": "known for",
        "uri": "http://dbpedia.org/ontology/knownFor",
        "seq": "43,52",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "scientist",
        "uri": "http://dbpedia.org/ontology/Scientist",
        "seq": "32,41",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "401",
    "question": "How many veterans are buried in the US?",
    "SerialNumber": "2546",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/ontology/restingPlace\u003e \u003chttp://dbpedia.org/resource/United_States\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MilitaryPerson\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "US",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/United_States",
        "seq": "36,38"
      }
    ],
    "id": "ccdd008db26a4b1bb06b083c9a25de17",
    "predicate mapping": [
      {
        "label": "buried in",
        "uri": "http://dbpedia.org/ontology/restingPlace",
        "seq": "22,31",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "veterans",
        "uri": "http://dbpedia.org/ontology/MilitaryPerson",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "Count the PhD students whose thesis are supervised by National Medal of Science winners?",
    "SerialNumber": "2547",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/prizes\u003e \u003chttp://dbpedia.org/resource/National_Medal_of_Science\u003e . ?x \u003chttp://dbpedia.org/property/doctoralStudents\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "National Medal of Science",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/National_Medal_of_Science",
        "seq": "54,79"
      }
    ],
    "id": "d8cbe0bde1c74580876d692bc41e1096",
    "predicate mapping": [
      {
        "label": "winners",
        "uri": "http://dbpedia.org/property/prizes",
        "mappedBy": "word2vec"
      },
      {
        "label": "students",
        "uri": "http://dbpedia.org/property/doctoralStudents",
        "seq": "14,22",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "406",
    "question": "Count number of people who follow a religion which has an important office in Gold Base ?",
    "SerialNumber": "2548",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/headquarters\u003e \u003chttp://dbpedia.org/resource/Gold_Base\u003e . ?uri \u003chttp://dbpedia.org/ontology/religion\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Gold Base",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Gold_Base",
        "seq": "78,87"
      }
    ],
    "id": "0b008d07b5aa42aeb3116f72525c05a2",
    "predicate mapping": [
      {
        "label": "office",
        "uri": "http://dbpedia.org/property/headquarters",
        "mappedBy": "word2vec"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion",
        "seq": "36,44",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "office",
        "uri": "http://dbpedia.org/ontology/Person",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the relegious affiliations of Katyayana ?",
    "SerialNumber": "2552",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Katyayana_(Buddhist)\u003e \u003chttp://dbpedia.org/property/religion\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Katyayana",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Katyayana_(Buddhist)",
        "seq": "38,47"
      }
    ],
    "id": "ac18c05943054b51a0b6a6c6483e24fa",
    "predicate mapping": [
      {
        "label": "affiliations",
        "uri": "http://dbpedia.org/property/religion",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "List the name of those who became famous for something garrisoned at Tennessee?",
    "SerialNumber": "2556",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/garrison\u003e \u003chttp://dbpedia.org/resource/Tennessee\u003e . ?uri \u003chttp://dbpedia.org/property/knownFor\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Tennessee",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Tennessee",
        "seq": "69,78"
      }
    ],
    "id": "ae1e012a0df44d74ab74f9890661c43e",
    "predicate mapping": [
      {
        "label": "garrison",
        "uri": "http://dbpedia.org/ontology/garrison",
        "seq": "55,63",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "ed",
        "uri": "http://dbpedia.org/property/knownFor",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "How many people have led agencies in German occupied Europe?",
    "SerialNumber": "2557",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/jurisdiction\u003e \u003chttp://dbpedia.org/resource/German-occupied_Europe\u003e . ?x \u003chttp://dbpedia.org/ontology/leader\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "German occupied Europe",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/German-occupied_Europe",
        "seq": "37,59"
      }
    ],
    "id": "7e7d19cbdc3d4fb7b2b4b7110f6aab4e",
    "predicate mapping": [
      {
        "label": "agencies",
        "uri": "http://dbpedia.org/property/jurisdiction",
        "mappedBy": "word2vec"
      },
      {
        "label": "led",
        "uri": "http://dbpedia.org/ontology/leader",
        "seq": "21,24",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Who was the cover artist of The Adventure of Tom Sawyer also wrote mark Twain Tonight ?",
    "SerialNumber": "2559",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer\u003e \u003chttp://dbpedia.org/ontology/coverArtist\u003e ?uri. \u003chttp://dbpedia.org/resource/Mark_Twain_Tonight\u003e \u003chttp://dbpedia.org/property/writer\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "adventure sawyer",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer",
        "seq": "999,1000"
      },
      {
        "label": "mark Twain Tonight",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Mark_Twain_Tonight",
        "seq": "67,85"
      }
    ],
    "id": "b73800c673354bf3b828496ea3a2c9d6",
    "predicate mapping": [
      {
        "label": "cover artist",
        "uri": "http://dbpedia.org/ontology/coverArtist",
        "seq": "12,24",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "wrote",
        "uri": "http://dbpedia.org/property/writer",
        "seq": "61,66",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What is the subject of the book which preceded Sagan\u0027s Cosmos?",
    "SerialNumber": "2562",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Cosmos_(Carl_Sagan_book)\u003e \u003chttp://dbpedia.org/ontology/previousWork\u003e ?x . ?x \u003chttp://dbpedia.org/property/subject\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Cosmos",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Cosmos_(Carl_Sagan_book)",
        "seq": "55,61"
      }
    ],
    "id": "4ef62e8a57af45229de3bc04ae17a70b",
    "predicate mapping": [
      {
        "label": "preceded",
        "uri": "http://dbpedia.org/ontology/previousWork",
        "mappedBy": "word2vec"
      },
      {
        "label": "subject",
        "uri": "http://dbpedia.org/property/subject",
        "seq": "12,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "What was developed by someone working in Cockroach Labs?",
    "SerialNumber": "2563",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/employer\u003e \u003chttp://dbpedia.org/resource/Cockroach_Labs\u003e . ?uri \u003chttp://dbpedia.org/property/author\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Cockroach Labs",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Cockroach_Labs",
        "seq": "41,55"
      }
    ],
    "id": "cb47161368654599a123ac5ecc45c968",
    "predicate mapping": [
      {
        "label": "working",
        "uri": "http://dbpedia.org/property/employer",
        "mappedBy": "word2vec"
      },
      {
        "label": "working",
        "uri": "http://dbpedia.org/property/author",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "How did Letitia MacTavish Hargrave died ?",
    "SerialNumber": "2565",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Letitia_MacTavish_Hargrave\u003e \u003chttp://dbpedia.org/ontology/deathCause\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Letitia MacTavish Hargrave",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Letitia_MacTavish_Hargrave",
        "seq": "8,34"
      }
    ],
    "id": "d47969ab783e4582a2e2fb7e0f0f5e8e",
    "predicate mapping": [
      {
        "label": "died",
        "uri": "http://dbpedia.org/ontology/deathCause",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "405",
    "question": "In how many different stadiums are the seasons of the 2015 NA Soccer league held?",
    "SerialNumber": "2572",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/league\u003e \u003chttp://dbpedia.org/resource/2015_North_American_Soccer_League_season\u003e . ?x \u003chttp://dbpedia.org/ontology/ground\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Stadium\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "soccer league",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/2015_North_American_Soccer_League_season",
        "seq": "999,1000"
      }
    ],
    "id": "f10350d3685640838feea5fdeaf7d694",
    "predicate mapping": [
      {
        "label": "league",
        "uri": "http://dbpedia.org/ontology/league",
        "seq": "69,75",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "held",
        "uri": "http://dbpedia.org/ontology/ground",
        "mappedBy": "word2vec"
      },
      {
        "label": "stadium",
        "uri": "http://dbpedia.org/ontology/Stadium",
        "seq": "22,29",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "In which countries were the Russian volleyball team players born?",
    "SerialNumber": "2573",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/nationalteam\u003e \u003chttp://dbpedia.org/resource/Russia_women\u0027s_national_volleyball_team\u003e . ?x \u003chttp://dbpedia.org/property/placeOfBirth\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Athlete\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Russian",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Russia_women\u0027s_national_volleyball_team",
        "seq": "28,35"
      }
    ],
    "id": "7713d7e1c178466791f85588f6e6bc0f",
    "predicate mapping": [
      {
        "label": "team",
        "uri": "http://dbpedia.org/property/nationalteam",
        "seq": "47,51",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "uri": "http://dbpedia.org/property/placeOfBirth",
        "mappedBy": "word2vec"
      },
      {
        "label": "born",
        "uri": "http://dbpedia.org/ontology/Athlete",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Which river originate from limerick?",
    "SerialNumber": "2575",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/mouthLocation\u003e \u003chttp://dbpedia.org/resource/Limerick\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/River\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "limerick",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Limerick",
        "seq": "27,35"
      }
    ],
    "id": "f01085ed6c1646a49adc3df33bf1df55",
    "predicate mapping": [
      {
        "label": "originate",
        "uri": "http://dbpedia.org/property/mouthLocation",
        "mappedBy": "word2vec"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River",
        "seq": "6,11",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "Name the veneration of the monarch who is the predecessor of Solomon?",
    "SerialNumber": "2577",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Solomon\u003e \u003chttp://dbpedia.org/property/predecessor\u003e ?x . ?x \u003chttp://dbpedia.org/property/veneratedIn\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Monarch\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Solomon",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Solomon",
        "seq": "61,68"
      }
    ],
    "id": "f53a548559d847459560227f6de16c73",
    "predicate mapping": [
      {
        "label": "predecessor",
        "uri": "http://dbpedia.org/property/predecessor",
        "seq": "46,57",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "veneration",
        "uri": "http://dbpedia.org/property/veneratedIn",
        "mappedBy": "word2vec"
      },
      {
        "label": "monarch",
        "uri": "http://dbpedia.org/ontology/Monarch",
        "seq": "27,34",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who operates the Ganz UV?",
    "SerialNumber": "2578",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Ganz_UV\u003e \u003chttp://dbpedia.org/ontology/operator\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ganz UV",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ganz_UV",
        "seq": "17,24"
      }
    ],
    "id": "7f98833cf8c94eed9fdf6fb194c481be",
    "predicate mapping": [
      {
        "label": "operates",
        "uri": "http://dbpedia.org/ontology/operator",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "In which country was GM was firt aired which is also the mouth country of Upper Neretva?",
    "SerialNumber": "2580",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Upper_Neretva\u003e \u003chttp://dbpedia.org/ontology/mouthCountry\u003e ?uri. \u003chttp://dbpedia.org/resource/Gümüş_(TV_series)\u003e \u003chttp://dbpedia.org/property/firstAired\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Upper Neretva",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Upper_Neretva",
        "seq": "74,87"
      },
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Gümüş_(TV_series)",
        "seq": "999,1000"
      }
    ],
    "id": "13acb5e7c9d2488ba706f3eabb8e78c0",
    "predicate mapping": [
      {
        "label": "mouth country",
        "uri": "http://dbpedia.org/ontology/mouthCountry",
        "seq": "57,70",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "aired",
        "uri": "http://dbpedia.org/property/firstAired",
        "seq": "33,38",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Which city\u0027s foundeer is John Forbes?",
    "SerialNumber": "2587",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/founder\u003e \u003chttp://dbpedia.org/resource/John_Forbes_(British_Army_officer)\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/City\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "John Forbes",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/John_Forbes_(British_Army_officer)",
        "seq": "25,36"
      }
    ],
    "id": "132b8410eb304e7a89c8c7717e9ed33f",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/founder",
        "mappedBy": "word2vec"
      },
      {
        "label": "city",
        "uri": "http://dbpedia.org/ontology/City",
        "seq": "6,10",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "101",
    "question": "How many times has Jeff Conaway been casted?",
    "SerialNumber": "2588",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/ontology/starring\u003e \u003chttp://dbpedia.org/resource/Jeff_Conaway\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jeff Conaway",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Jeff_Conaway",
        "seq": "19,31"
      }
    ],
    "id": "deb86e66bf6b4246b747867c3fd40564",
    "predicate mapping": [
      {
        "label": "casted",
        "uri": "http://dbpedia.org/ontology/starring",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "401",
    "question": "How many people were drafted in the LA Clippers?",
    "SerialNumber": "2590",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/property/draftTeam\u003e \u003chttp://dbpedia.org/resource/Los_Angeles_Clippers\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "LA Clippers",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Los_Angeles_Clippers",
        "seq": "36,47"
      }
    ],
    "id": "3cd3e5a6d4944cbe8c95808f0407e8d0",
    "predicate mapping": [
      {
        "label": "drafted",
        "uri": "http://dbpedia.org/property/draftTeam",
        "seq": "21,28",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "people",
        "uri": "http://dbpedia.org/ontology/Person",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Where did the beverages sold by Refriango originate?",
    "SerialNumber": "2591",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/manufacturer\u003e \u003chttp://dbpedia.org/resource/Refriango\u003e . ?x \u003chttp://dbpedia.org/property/origin\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Beverage\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Refriango",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Refriango",
        "seq": "32,41"
      }
    ],
    "id": "0564d9c87b7544ec8c5ee392b68afadc",
    "predicate mapping": [
      {
        "label": "ate",
        "uri": "http://dbpedia.org/ontology/manufacturer",
        "mappedBy": "word2vec"
      },
      {
        "label": "origin",
        "uri": "http://dbpedia.org/property/origin",
        "seq": "42,48",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "beverage",
        "uri": "http://dbpedia.org/ontology/Beverage",
        "seq": "14,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "In which wars did commanders born in Indochina fight?",
    "SerialNumber": "2592",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/birthPlace\u003e \u003chttp://dbpedia.org/resource/Indochina\u003e . ?uri \u003chttp://dbpedia.org/ontology/commander\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MilitaryConflict\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Indochina",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Indochina",
        "seq": "37,46"
      }
    ],
    "id": "3bb919a7b4894ae6afc9fc796ba76554",
    "predicate mapping": [
      {
        "label": "born in",
        "uri": "http://dbpedia.org/ontology/birthPlace",
        "seq": "29,36",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "commander",
        "uri": "http://dbpedia.org/ontology/commander",
        "seq": "18,27",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "fight",
        "uri": "http://dbpedia.org/ontology/MilitaryConflict",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "CN Atletic-Barceloneta has a stadium in Barcelona?",
    "SerialNumber": "2595",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/CN_Atlètic-Barceloneta\u003e \u003chttp://dbpedia.org/ontology/stadium\u003e \u003chttp://dbpedia.org/resource/Barcelona\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/CN_Atlètic-Barceloneta",
        "seq": "999,1000"
      },
      {
        "label": "Barcelona",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Barcelona",
        "seq": "40,49"
      }
    ],
    "id": "858f8152827d43efa3d30f8630da9251",
    "predicate mapping": [
      {
        "label": "stadium",
        "uri": "http://dbpedia.org/ontology/stadium",
        "seq": "29,36",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Is morrissey in the smiths?",
    "SerialNumber": "2596",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Morrissey\u003e \u003chttp://dbpedia.org/ontology/associatedBand\u003e \u003chttp://dbpedia.org/resource/The_Smiths\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "morrissey",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Morrissey",
        "seq": "3,12"
      },
      {
        "label": "the smiths",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Smiths",
        "seq": "16,26"
      }
    ],
    "id": "40311c537af740a8829bdfa1cfaef4b1",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/associatedBand",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "In how many different wars have people graduated from the Army Command and General staff college fought?",
    "SerialNumber": "2597",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/almaMater\u003e \u003chttp://dbpedia.org/resource/United_States_Army_Command_and_General_Staff_College\u003e . ?x \u003chttp://dbpedia.org/property/battles\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Army Command",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/United_States_Army_Command_and_General_Staff_College",
        "seq": "58,70"
      }
    ],
    "id": "59c88192a89f429c98c06556c15f3aad",
    "predicate mapping": [
      {
        "label": "graduated from",
        "uri": "http://dbpedia.org/ontology/almaMater",
        "seq": "39,53",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "fought",
        "uri": "http://dbpedia.org/property/battles",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Was the street dogs of south central narrated by Queen Latifah?",
    "SerialNumber": "2599",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Street_Dogs_of_South_Central\u003e \u003chttp://dbpedia.org/property/narrator\u003e \u003chttp://dbpedia.org/resource/Queen_Latifah\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "street dogs of south central",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Street_Dogs_of_South_Central",
        "seq": "8,36"
      },
      {
        "label": "Queen Latifah",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Queen_Latifah",
        "seq": "49,62"
      }
    ],
    "id": "4f51e2f2604c49609c5b28c6d129bf7d",
    "predicate mapping": [
      {
        "label": "narrated",
        "uri": "http://dbpedia.org/property/narrator",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Name the common sports played at Polytechnic University of Philippines San Juan and Islamic Azad University?",
    "SerialNumber": "2604",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_San_Juan\u003e \u003chttp://dbpedia.org/ontology/sport\u003e ?uri. \u003chttp://dbpedia.org/resource/Islamic_Azad_University_Central_Tehran_Branch\u003e \u003chttp://dbpedia.org/ontology/sport\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "polytechnic philippines university",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_San_Juan",
        "seq": "999,1000"
      },
      {
        "label": "university islamic",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Islamic_Azad_University_Central_Tehran_Branch",
        "seq": "999,1000"
      }
    ],
    "id": "da487a9e2aa64d0d900ccb99d5eb6fc5",
    "predicate mapping": [
      {
        "label": "sport",
        "uri": "http://dbpedia.org/ontology/sport",
        "seq": "16,21",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "sport",
        "uri": "http://dbpedia.org/ontology/sport",
        "seq": "16,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who acted in the work written by Colin Brake?",
    "SerialNumber": "2605",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/writer\u003e \u003chttp://dbpedia.org/resource/Colin_Brake\u003e . ?x \u003chttp://dbpedia.org/property/starring\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Work\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Colin Brake",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Colin_Brake",
        "seq": "33,44"
      }
    ],
    "id": "ffdb4d5b27464d26bc824dced4615e8c",
    "predicate mapping": [
      {
        "label": "written by",
        "uri": "http://dbpedia.org/property/writer",
        "seq": "22,32",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "acted",
        "uri": "http://dbpedia.org/property/starring",
        "mappedBy": "word2vec"
      },
      {
        "label": "work",
        "uri": "http://dbpedia.org/ontology/Work",
        "seq": "17,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "401",
    "question": "Give me a count of companies located in Texas ?",
    "SerialNumber": "2608",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/ontology/locationCity\u003e \u003chttp://dbpedia.org/resource/Texas\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Company\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Texas",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Texas",
        "seq": "40,45"
      }
    ],
    "id": "7ddbd538a02143ec8dc92396be31453e",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/ontology/locationCity",
        "mappedBy": "word2vec"
      },
      {
        "label": "companies",
        "uri": "http://dbpedia.org/ontology/Company",
        "seq": "19,28",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "What are the books written by authors who died in Madrid?",
    "SerialNumber": "2612",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/restingPlace\u003e \u003chttp://dbpedia.org/resource/Madrid\u003e . ?uri \u003chttp://dbpedia.org/property/author\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Book\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Madrid",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Madrid",
        "seq": "50,56"
      }
    ],
    "id": "14c91859f31f43e99bc47c8be8f02f16",
    "predicate mapping": [
      {
        "label": "died",
        "uri": "http://dbpedia.org/ontology/restingPlace",
        "mappedBy": "word2vec"
      },
      {
        "label": "written by",
        "uri": "http://dbpedia.org/property/author",
        "seq": "19,29",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "book",
        "uri": "http://dbpedia.org/ontology/Book",
        "seq": "13,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "Name  some ww1 veterans?",
    "SerialNumber": "2613",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/battles\u003e \u003chttp://dbpedia.org/resource/World_War_I\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/World_War_I",
        "seq": "999,1000"
      }
    ],
    "id": "d3cc7a7f2f7b40afb2398e62b690580e",
    "predicate mapping": [
      {
        "label": "veterans",
        "uri": "http://dbpedia.org/property/battles",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Where can one find some quick bread in the world?",
    "SerialNumber": "2614",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/type\u003e \u003chttp://dbpedia.org/resource/Quick_bread\u003e . ?x \u003chttp://dbpedia.org/ontology/region\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "quick bread",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Quick_bread",
        "seq": "24,35"
      }
    ],
    "id": "b8eb36910321468d898a9e2d1db1d016",
    "predicate mapping": [
      {
        "label": "world",
        "uri": "http://dbpedia.org/property/type",
        "mappedBy": "word2vec"
      },
      {
        "label": "world",
        "uri": "http://dbpedia.org/ontology/region",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Where is Tahual located which is also the country of Ren Romano ?",
    "SerialNumber": "2616",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/René_Romano\u003e \u003chttp://dbpedia.org/property/citizenship\u003e ?uri. \u003chttp://dbpedia.org/resource/Tahual\u003e \u003chttp://dbpedia.org/property/location\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "romano ren",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/René_Romano",
        "seq": "999,1000"
      },
      {
        "label": "Tahual",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Tahual",
        "seq": "9,15"
      }
    ],
    "id": "37d0eb12d3c94597911b7c985670d4c2",
    "predicate mapping": [
      {
        "label": "Romano",
        "uri": "http://dbpedia.org/property/citizenship",
        "mappedBy": "word2vec"
      },
      {
        "label": "Romano",
        "uri": "http://dbpedia.org/property/location",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "What is the river on which the Kariba Dam and Batoka Gorge Hydroelectirc power station exist?",
    "SerialNumber": "2621",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Kariba_Dam\u003e \u003chttp://dbpedia.org/ontology/river\u003e ?uri. \u003chttp://dbpedia.org/resource/Batoka_Gorge_Hydroelectric_Power_Station\u003e \u003chttp://dbpedia.org/ontology/river\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Kariba Dam",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Kariba_Dam",
        "seq": "31,41"
      },
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Batoka_Gorge_Hydroelectric_Power_Station",
        "seq": "999,1000"
      }
    ],
    "id": "f3c826d486634c9d83b4d891f9c0eb35",
    "predicate mapping": [
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/river",
        "seq": "12,17",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/river",
        "seq": "12,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "What is the name of the information appliance by sony whose predecessor is PlayStation 2?",
    "SerialNumber": "2623",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/manufacturer\u003e \u003chttp://dbpedia.org/resource/Sony\u003e . ?uri \u003chttp://dbpedia.org/property/predecessor\u003e \u003chttp://dbpedia.org/resource/PlayStation_2\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/InformationAppliance\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "sony",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Sony",
        "seq": "49,53"
      },
      {
        "label": "PlayStation 2",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/PlayStation_2",
        "seq": "75,88"
      }
    ],
    "id": "070e0e36e87b4eeda426afc352710eae",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/manufacturer",
        "mappedBy": "word2vec"
      },
      {
        "label": "predecessor",
        "uri": "http://dbpedia.org/property/predecessor",
        "seq": "60,71",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "information appliance",
        "uri": "http://dbpedia.org/ontology/InformationAppliance",
        "seq": "24,45",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Is the College Sainte Marie in Mauritius?",
    "SerialNumber": "2624",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/College_Sainte-Marie\u003e \u003chttp://dbpedia.org/property/county\u003e \u003chttp://dbpedia.org/resource/Mauritius\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "college sainte marie",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/College_Sainte-Marie",
        "seq": "999,1000"
      },
      {
        "label": "Mauritius",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Mauritius",
        "seq": "31,40"
      }
    ],
    "id": "e5ba33e4f5e84baba047469c0c00fa35",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/property/county",
        "seq": "17,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "311",
    "question": "Who were the narrators of the albums which had Ringo Starr as one of the narrator ?",
    "SerialNumber": "2625",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/narrated\u003e \u003chttp://dbpedia.org/resource/Ringo_Starr\u003e . ?x \u003chttp://dbpedia.org/property/narrated\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Album\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ringo Starr",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ringo_Starr",
        "seq": "47,58"
      }
    ],
    "id": "661df655b8234afdb7975e82bacf8c18",
    "predicate mapping": [
      {
        "label": "narrator",
        "uri": "http://dbpedia.org/property/narrated",
        "mappedBy": "word2vec"
      },
      {
        "label": "narrator",
        "uri": "http://dbpedia.org/property/narrated",
        "mappedBy": "word2vec"
      },
      {
        "label": "album",
        "uri": "http://dbpedia.org/ontology/Album",
        "seq": "30,35",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What awards have been given to race horses bred by Bert Michell?",
    "SerialNumber": "2627",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/trainer\u003e \u003chttp://dbpedia.org/resource/Bert_S._Michell\u003e . ?x \u003chttp://dbpedia.org/ontology/honours\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/RaceHorse\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Bert Michell",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Bert_S._Michell",
        "seq": "51,63"
      }
    ],
    "id": "c44d40b04a6344f0b925ae5a869a162e",
    "predicate mapping": [
      {
        "label": "bred",
        "uri": "http://dbpedia.org/property/trainer",
        "mappedBy": "word2vec"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/honours",
        "seq": "5,11",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "race horse",
        "uri": "http://dbpedia.org/ontology/RaceHorse",
        "seq": "31,41",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Danny Felice, the Gibraltarian guitarist is from which city?",
    "SerialNumber": "2628",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Danny_Felice\u003e \u003chttp://dbpedia.org/ontology/hometown\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Danny Felice",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Danny_Felice",
        "seq": "0,12"
      }
    ],
    "id": "1f283dc1bb87433d804608abb6d42fb9",
    "predicate mapping": [
      {
        "label": "city",
        "uri": "http://dbpedia.org/ontology/hometown",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Where is Bogobiri House located ?",
    "SerialNumber": "2633",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Bogobiri_House\u003e \u003chttp://dbpedia.org/property/locationCity\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Bogobiri House",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Bogobiri_House",
        "seq": "9,23"
      }
    ],
    "id": "c6a2f3f300014efbb98edeadddbbd5f5",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/property/locationCity",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "101",
    "question": "How many areas are led by Willem Alexander?",
    "SerialNumber": "2635",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/ontology/leader\u003e \u003chttp://dbpedia.org/resource/Willem-Alexander_of_the_Netherlands\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Willem Alexander",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Willem-Alexander_of_the_Netherlands",
        "seq": "26,42"
      }
    ],
    "id": "672bf19ac1154092909bd114c425c125",
    "predicate mapping": [
      {
        "label": "led",
        "uri": "http://dbpedia.org/ontology/leader",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "What sports are played in schools where Swahili is the official language?",
    "SerialNumber": "2636",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/language\u003e \u003chttp://dbpedia.org/resource/Swahili_language\u003e . ?x \u003chttp://dbpedia.org/ontology/sport\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "language swahili",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Swahili_language",
        "seq": "999,1000"
      }
    ],
    "id": "248fbcca0cc84ab7a183eeb56854398e",
    "predicate mapping": [
      {
        "label": "language",
        "uri": "http://dbpedia.org/ontology/language",
        "seq": "64,72",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "sport",
        "uri": "http://dbpedia.org/ontology/sport",
        "seq": "5,10",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "405",
    "question": "Count the awards received by Immunologists?",
    "SerialNumber": "2637",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/fields\u003e \u003chttp://dbpedia.org/resource/Immunology\u003e . ?x \u003chttp://dbpedia.org/ontology/award\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Award\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Immunologi",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Immunology",
        "seq": "29,39"
      }
    ],
    "id": "68b2123a04bb4f809d1d4e74e6c6d5a0",
    "predicate mapping": [
      {
        "label": "sts",
        "uri": "http://dbpedia.org/property/fields",
        "mappedBy": "word2vec"
      },
      {
        "label": "awards received",
        "uri": "http://dbpedia.org/ontology/award",
        "seq": "10,25",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "awards received",
        "uri": "http://dbpedia.org/ontology/Award",
        "seq": "10,25",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What is the occupation of the people who are born in Iowa?",
    "SerialNumber": "2640",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/birthPlace\u003e \u003chttp://dbpedia.org/resource/Iowa\u003e . ?x \u003chttp://dbpedia.org/ontology/occupation\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Iowa",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Iowa",
        "seq": "53,57"
      }
    ],
    "id": "1e325840e9a4488d9ab113c9cf46d4dd",
    "predicate mapping": [
      {
        "label": "born in",
        "uri": "http://dbpedia.org/ontology/birthPlace",
        "seq": "45,52",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "occupation",
        "uri": "http://dbpedia.org/ontology/occupation",
        "seq": "12,22",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "people",
        "uri": "http://dbpedia.org/ontology/Person",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "Who holds shares in something famous for the Seven Spring Mountain Resort?",
    "SerialNumber": "2641",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/knownFor\u003e \u003chttp://dbpedia.org/resource/Seven_Springs_Mountain_Resort\u003e . ?uri \u003chttp://dbpedia.org/property/owner\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "mountain spring resort seven",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Seven_Springs_Mountain_Resort",
        "seq": "999,1000"
      }
    ],
    "id": "5a343f2e17ff49d3abcce067bc9113ca",
    "predicate mapping": [
      {
        "label": "Resort",
        "uri": "http://dbpedia.org/ontology/knownFor",
        "mappedBy": "word2vec"
      },
      {
        "label": "Resort",
        "uri": "http://dbpedia.org/property/owner",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who all were involved in the wars fought by the commander Blue Jacket?",
    "SerialNumber": "2643",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/commander\u003e \u003chttp://dbpedia.org/resource/Blue_Jacket\u003e . ?x \u003chttp://dbpedia.org/property/combatant\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MilitaryConflict\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Blue Jacket",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Blue_Jacket",
        "seq": "58,69"
      }
    ],
    "id": "fa87970fbd454ac58ae0fd59fa7f59ea",
    "predicate mapping": [
      {
        "label": "commander",
        "uri": "http://dbpedia.org/property/commander",
        "seq": "48,57",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "fought",
        "uri": "http://dbpedia.org/property/combatant",
        "mappedBy": "word2vec"
      },
      {
        "label": "fought",
        "uri": "http://dbpedia.org/ontology/MilitaryConflict",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "What are some people who are on the board of companies founded in NY?",
    "SerialNumber": "2644",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/foundation\u003e \u003chttp://dbpedia.org/resource/New_York_City\u003e . ?uri \u003chttp://dbpedia.org/ontology/board\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "NY",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/New_York_City",
        "seq": "66,68"
      }
    ],
    "id": "1b7009c254174184a4496ada2462fa8e",
    "predicate mapping": [
      {
        "label": "founded",
        "uri": "http://dbpedia.org/property/foundation",
        "seq": "55,62",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "board",
        "uri": "http://dbpedia.org/ontology/board",
        "seq": "36,41",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "companies",
        "uri": "http://dbpedia.org/ontology/Person",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What are some cars similar to the ones assembled at Toluca?",
    "SerialNumber": "2645",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/assembly\u003e \u003chttp://dbpedia.org/resource/Toluca\u003e . ?x \u003chttp://dbpedia.org/property/related\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Automobile\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Toluca",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Toluca",
        "seq": "52,58"
      }
    ],
    "id": "37341d4902c249d1a926afdf3ec6895d",
    "predicate mapping": [
      {
        "label": "assembled",
        "uri": "http://dbpedia.org/property/assembly",
        "mappedBy": "word2vec"
      },
      {
        "label": "at",
        "uri": "http://dbpedia.org/property/related",
        "seq": "2,4",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "assembled",
        "uri": "http://dbpedia.org/ontology/Automobile",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which governer of Winston bryant is also the president of Carl Stokes ?",
    "SerialNumber": "2646",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Winston_Bryant\u003e \u003chttp://dbpedia.org/property/governor\u003e ?uri. \u003chttp://dbpedia.org/resource/Carl_Stokes\u003e \u003chttp://dbpedia.org/property/president\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Winston bryant",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Winston_Bryant",
        "seq": "18,32"
      },
      {
        "label": "Carl Stokes",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Carl_Stokes",
        "seq": "58,69"
      }
    ],
    "id": "edf2e6aeff7841b9bd3da7e23089514b",
    "predicate mapping": [
      {
        "label": "governer",
        "uri": "http://dbpedia.org/property/governor",
        "mappedBy": "word2vec"
      },
      {
        "label": "president",
        "uri": "http://dbpedia.org/property/president",
        "seq": "45,54",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What sport is Eric Schiller known for, and employes Craig Van Tibury?",
    "SerialNumber": "2650",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Eric_Schiller\u003e \u003chttp://dbpedia.org/ontology/knownFor\u003e ?uri. \u003chttp://dbpedia.org/resource/Craig_Van_Tilbury\u003e \u003chttp://dbpedia.org/ontology/occupation\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Eric Schiller",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Eric_Schiller",
        "seq": "14,27"
      },
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Craig_Van_Tilbury",
        "seq": "999,1000"
      }
    ],
    "id": "eca9dd9de8cf482bad043751461e8aac",
    "predicate mapping": [
      {
        "label": "known for",
        "uri": "http://dbpedia.org/ontology/knownFor",
        "seq": "28,37",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "Van",
        "uri": "http://dbpedia.org/ontology/occupation",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Which minister was responsible for Kriminalpolizie?",
    "SerialNumber": "2651",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Kriminalpolizei\u003e \u003chttp://dbpedia.org/ontology/leader\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Kriminalpolizie",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Kriminalpolizei",
        "seq": "35,50"
      }
    ],
    "id": "eb264bdc56224986bac08332b3941a2d",
    "predicate mapping": [
      {
        "label": "responsible",
        "uri": "http://dbpedia.org/ontology/leader",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What is the river whose mouth is in deadsea?",
    "SerialNumber": "2654",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/riverMouth\u003e \u003chttp://dbpedia.org/resource/Dead_Sea\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/River\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Dead_Sea",
        "seq": "999,1000"
      }
    ],
    "id": "d2c55064c2b1442aa5d1e53946aaec43",
    "predicate mapping": [
      {
        "label": "river mouth",
        "uri": "http://dbpedia.org/ontology/riverMouth",
        "seq": "-1,10",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River",
        "seq": "12,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which Stanley Kubrick\u0027s movie has music by Laurie Johnson?",
    "SerialNumber": "2657",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/director\u003e \u003chttp://dbpedia.org/resource/Stanley_Kubrick\u003e . ?uri \u003chttp://dbpedia.org/property/music\u003e \u003chttp://dbpedia.org/resource/Laurie_Johnson\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Stanley Kubrick",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Stanley_Kubrick",
        "seq": "6,21"
      },
      {
        "label": "Laurie Johnson",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Laurie_Johnson",
        "seq": "43,57"
      }
    ],
    "id": "e18646f7fb64400cbcaff2210d28e040",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/director",
        "mappedBy": "word2vec"
      },
      {
        "label": "music",
        "uri": "http://dbpedia.org/property/music",
        "seq": "34,39",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "24,29",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Where does the river flows into, which starts in Gredelj?",
    "SerialNumber": "2658",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/source\u003e \u003chttp://dbpedia.org/resource/Gredelj\u003e . ?x \u003chttp://dbpedia.org/ontology/riverMouth\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Gredelj",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Gredelj",
        "seq": "49,56"
      }
    ],
    "id": "6a93144b4a8a49b8b9ea07d4b5392496",
    "predicate mapping": [
      {
        "label": "starts",
        "uri": "http://dbpedia.org/ontology/source",
        "mappedBy": "word2vec"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/riverMouth",
        "seq": "15,20",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What artist was associated closely with the bare necessities and rock a doodle?",
    "SerialNumber": "2662",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/The_Bare_Necessities\u003e \u003chttp://dbpedia.org/ontology/artist\u003e ?uri. \u003chttp://dbpedia.org/resource/Rock-a-Doodle\u003e \u003chttp://dbpedia.org/ontology/starring\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "the bare necessities",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Bare_Necessities",
        "seq": "40,60"
      },
      {
        "label": "doodle rock",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Rock-a-Doodle",
        "seq": "999,1000"
      }
    ],
    "id": "691beaad90c049ee8b594572b8dbc124",
    "predicate mapping": [
      {
        "label": "artist",
        "uri": "http://dbpedia.org/ontology/artist",
        "seq": "5,11",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "doodle",
        "uri": "http://dbpedia.org/ontology/starring",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "In what tv shows did Jason Carter act?",
    "SerialNumber": "2666",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/starring\u003e \u003chttp://dbpedia.org/resource/Jason_Carter_(actor)\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jason Carter",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Jason_Carter_(actor)",
        "seq": "21,33"
      }
    ],
    "id": "cdc7afa4efc24c619aebfe90b366a6da",
    "predicate mapping": [
      {
        "label": "act",
        "uri": "http://dbpedia.org/ontology/starring",
        "mappedBy": "word2vec"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "11,16",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "Name some books by Spanish speaking authors.",
    "SerialNumber": "2667",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/language\u003e \u003chttp://dbpedia.org/resource/Spanish_language\u003e . ?uri \u003chttp://dbpedia.org/property/author\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Spanish",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Spanish_language",
        "seq": "19,26"
      }
    ],
    "id": "47bc9fd86bf54061b9df63ac5d6789c1",
    "predicate mapping": [
      {
        "label": "speaking",
        "uri": "http://dbpedia.org/property/language",
        "mappedBy": "word2vec"
      },
      {
        "label": "authors",
        "uri": "http://dbpedia.org/property/author",
        "seq": "36,43",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which  siler medalist of the Tennis at the 2012 Summer Olympics  Men\u0027s singles was also the  flagbearer of the Switzerland at the 2008 Summer Olympics",
    "SerialNumber": "2668",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Tennis_at_the_2012_Summer_Olympics_–_Men\u0027s_singles\u003e \u003chttp://dbpedia.org/ontology/silverMedalist\u003e ?uri. \u003chttp://dbpedia.org/resource/Switzerland_at_the_2008_Summer_Olympics\u003e \u003chttp://dbpedia.org/property/flagbearer\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "olympics singles tennis summer",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Tennis_at_the_2012_Summer_Olympics_–_Men\u0027s_singles",
        "seq": "999,1000"
      },
      {
        "label": "Switzerland at the 2008 Summer Olympics",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Switzerland_at_the_2008_Summer_Olympics",
        "seq": "111,150"
      }
    ],
    "id": "811b775c0148423ebd8f7f213fb6fafa",
    "predicate mapping": [
      {
        "label": "siler medalist",
        "uri": "http://dbpedia.org/ontology/silverMedalist",
        "seq": "7,21",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "flagbearer",
        "uri": "http://dbpedia.org/property/flagbearer",
        "seq": "93,103",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "In which states are there bridges over the Pequea Creek?",
    "SerialNumber": "2670",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/river\u003e \u003chttp://dbpedia.org/resource/Pequea_Creek\u003e . ?x \u003chttp://dbpedia.org/ontology/state\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Bridge\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Pequea Creek",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Pequea_Creek",
        "seq": "43,55"
      }
    ],
    "id": "e162c9820c6a4768bf7ffd8afc11a55b",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/river",
        "mappedBy": "word2vec"
      },
      {
        "label": "state",
        "uri": "http://dbpedia.org/ontology/state",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "bridge",
        "uri": "http://dbpedia.org/ontology/Bridge",
        "seq": "26,32",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "List the birthplace of the medicians who studied in Harvard.",
    "SerialNumber": "2672",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/institution\u003e \u003chttp://dbpedia.org/resource/Harvard_Medical_School\u003e . ?x \u003chttp://dbpedia.org/ontology/birthPlace\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Medician\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Harvard",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Harvard_Medical_School",
        "seq": "52,59"
      }
    ],
    "id": "5313a4dd9c5a451ebf0c06bd24ed2b0a",
    "predicate mapping": [
      {
        "label": "studied",
        "uri": "http://dbpedia.org/ontology/institution",
        "mappedBy": "word2vec"
      },
      {
        "label": "birthplace",
        "uri": "http://dbpedia.org/ontology/birthPlace",
        "seq": "9,19",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "medician",
        "uri": "http://dbpedia.org/ontology/Medician",
        "seq": "27,35",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Name some Texas based companies ?",
    "SerialNumber": "2673",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/locationCity\u003e \u003chttp://dbpedia.org/resource/Texas\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Company\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Texas",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Texas",
        "seq": "10,15"
      }
    ],
    "id": "07747709891b435d84ae5c14259e92f7",
    "predicate mapping": [
      {
        "label": "based",
        "uri": "http://dbpedia.org/ontology/locationCity",
        "mappedBy": "word2vec"
      },
      {
        "label": "companies",
        "uri": "http://dbpedia.org/ontology/Company",
        "seq": "22,31",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is common between genre of battle chess and purpose of New Zealand Chess ?",
    "SerialNumber": "2674",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Battle_Chess\u003e \u003chttp://dbpedia.org/property/genre\u003e ?uri. \u003chttp://dbpedia.org/resource/New_Zealand_Chess_Federation\u003e \u003chttp://dbpedia.org/property/purpose\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "battle chess",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Battle_Chess",
        "seq": "32,44"
      },
      {
        "label": "zealand chess",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/New_Zealand_Chess_Federation",
        "seq": "999,1000"
      }
    ],
    "id": "4ae6b12b53054ad29b07c61a48527249",
    "predicate mapping": [
      {
        "label": "genre",
        "uri": "http://dbpedia.org/property/genre",
        "seq": "23,28",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "purpose",
        "uri": "http://dbpedia.org/property/purpose",
        "seq": "49,56",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Was John Boehner the winner of the US House of Representatives elections in Ohio in 2010?",
    "SerialNumber": "2675",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/United_States_House_of_Representatives_elections_in_Ohio,_2010\u003e \u003chttp://dbpedia.org/property/incumbent\u003e \u003chttp://dbpedia.org/resource/John_Boehner\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "representatives elections house ohio 2010",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/United_States_House_of_Representatives_elections_in_Ohio,_2010",
        "seq": "999,1000"
      },
      {
        "label": "John Boehner",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/John_Boehner",
        "seq": "4,16"
      }
    ],
    "id": "a1e1a70a1c92405e903356d3f058bda5",
    "predicate mapping": [
      {
        "label": "Ohio",
        "uri": "http://dbpedia.org/property/incumbent",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "who is the governer of New Castile?",
    "SerialNumber": "2677",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/order\u003e \u003chttp://dbpedia.org/resource/Governorate_of_New_Castile\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "New Castile",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Governorate_of_New_Castile",
        "seq": "23,34"
      }
    ],
    "id": "cb24b43a6ea14f8691476c986fd94deb",
    "predicate mapping": [
      {
        "label": "governer",
        "uri": "http://dbpedia.org/property/order",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "In which country is the Baku puppet Theater located which is also the birth palce of Anar Salmanov ?",
    "SerialNumber": "2678",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Baku_Puppet_Theatre\u003e \u003chttp://dbpedia.org/ontology/locationCountry\u003e ?uri. \u003chttp://dbpedia.org/resource/Anar_Salmanov\u003e \u003chttp://dbpedia.org/property/placeOfBirth\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "puppet",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Baku_Puppet_Theatre",
        "seq": "999,1000"
      },
      {
        "label": "Anar Salmanov",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Anar_Salmanov",
        "seq": "85,98"
      }
    ],
    "id": "1a35a6119a4a482286916e22a00ff89f",
    "predicate mapping": [
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/locationCountry",
        "seq": "9,16",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "birth",
        "uri": "http://dbpedia.org/property/placeOfBirth",
        "seq": "70,75",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which military unit\u0027s  garrison is Pentagon and command structure is United States Department of Defense?",
    "SerialNumber": "2681",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/garrison\u003e \u003chttp://dbpedia.org/resource/The_Pentagon\u003e . ?uri \u003chttp://dbpedia.org/ontology/commandStructure\u003e \u003chttp://dbpedia.org/resource/United_States_Department_of_Defense\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MilitaryUnit\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "pentagon",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/The_Pentagon",
        "seq": "999,1000"
      },
      {
        "label": "United States Department of Defense",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/United_States_Department_of_Defense",
        "seq": "69,104"
      }
    ],
    "id": "45ef969f39544740a00aabf182833319",
    "predicate mapping": [
      {
        "label": "garrison",
        "uri": "http://dbpedia.org/property/garrison",
        "seq": "23,31",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "command structure",
        "uri": "http://dbpedia.org/ontology/commandStructure",
        "seq": "48,65",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "military unit",
        "uri": "http://dbpedia.org/ontology/MilitaryUnit",
        "seq": "6,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which university with athletics department in NCAA Division I Football Bowl Subdivision has nickname Tulane Green Wave ?",
    "SerialNumber": "2682",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/mouthMountain\u003e \u003chttp://dbpedia.org/resource/St._Louis\u003e . ?uri \u003chttp://dbpedia.org/ontology/rightTributary\u003e \u003chttp://dbpedia.org/resource/Madison_River\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/University\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/St._Louis",
        "seq": "999,1000"
      },
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Madison_River",
        "seq": "999,1000"
      }
    ],
    "id": "560edd5735a04aed942d6c71d7d47f1f",
    "predicate mapping": [
      {
        "label": "Wave",
        "uri": "http://dbpedia.org/ontology/mouthMountain",
        "mappedBy": "word2vec"
      },
      {
        "label": "Wave",
        "uri": "http://dbpedia.org/ontology/rightTributary",
        "mappedBy": "word2vec"
      },
      {
        "label": "university",
        "uri": "http://dbpedia.org/ontology/University",
        "seq": "6,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Which countries were the first to play Gumus and Ne daj se, Nina?",
    "SerialNumber": "2685",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Gümüş_(TV_series)\u003e \u003chttp://dbpedia.org/property/firstAired\u003e ?uri. \u003chttp://dbpedia.org/resource/Ne_daj_se,_Nina\u003e \u003chttp://dbpedia.org/property/firstAired\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Gümüş_(TV_series)",
        "seq": "999,1000"
      },
      {
        "label": "Ne daj se, Nina",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Ne_daj_se,_Nina",
        "seq": "49,64"
      }
    ],
    "id": "156a0839803f4a9d9e14200615736044",
    "predicate mapping": [
      {
        "label": "first",
        "uri": "http://dbpedia.org/property/firstAired",
        "seq": "25,30",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "first",
        "uri": "http://dbpedia.org/property/firstAired",
        "seq": "25,30",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Where did the people beatified by Pope Pius X die?",
    "SerialNumber": "2686",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/beatifiedBy\u003e \u003chttp://dbpedia.org/resource/Pope_Pius_X\u003e . ?x \u003chttp://dbpedia.org/property/deathPlace\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Pope Pius X",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Pope_Pius_X",
        "seq": "34,45"
      }
    ],
    "id": "d5315c64d719430e9602df94b8a89c09",
    "predicate mapping": [
      {
        "label": "beatified by",
        "uri": "http://dbpedia.org/property/beatifiedBy",
        "seq": "21,33",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "die",
        "uri": "http://dbpedia.org/property/deathPlace",
        "mappedBy": "word2vec"
      },
      {
        "label": "die",
        "uri": "http://dbpedia.org/ontology/Person",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who were the pole drivers in GP when Damon hill was a first driver?",
    "SerialNumber": "2689",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/firstDriver\u003e \u003chttp://dbpedia.org/resource/Damon_Hill\u003e . ?x \u003chttp://dbpedia.org/ontology/poleDriver\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/GrandPrix\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Damon hill",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Damon_Hill",
        "seq": "37,47"
      }
    ],
    "id": "0517011b2e174b5cb27a397265665cbd",
    "predicate mapping": [
      {
        "label": "first driver",
        "uri": "http://dbpedia.org/ontology/firstDriver",
        "seq": "54,66",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "pole driver",
        "uri": "http://dbpedia.org/ontology/poleDriver",
        "seq": "13,24",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "GP",
        "uri": "http://dbpedia.org/ontology/GrandPrix",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Where is the headquarters of the public transit system which owns Target Field, a Metro Transit Station  ?",
    "SerialNumber": "2691",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Target_Field_(Metro_Transit_station)\u003e \u003chttp://dbpedia.org/ontology/owningOrganisation\u003e ?x . ?x \u003chttp://dbpedia.org/property/headquarters\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Target Field",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Target_Field_(Metro_Transit_station)",
        "seq": "66,78"
      }
    ],
    "id": "4854b75bd8f94014ad4edb9315ad62a4",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/owningOrganisation",
        "mappedBy": "word2vec"
      },
      {
        "label": "headquarters",
        "uri": "http://dbpedia.org/property/headquarters",
        "seq": "13,25",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "List the relatives of the governor of Gabriel Slaughter?",
    "SerialNumber": "2692",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Gabriel_Slaughter\u003e \u003chttp://dbpedia.org/ontology/governor\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/relation\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Gabriel Slaughter",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Gabriel_Slaughter",
        "seq": "38,55"
      }
    ],
    "id": "7d303bc28df742ec80b74432bd497aff",
    "predicate mapping": [
      {
        "label": "governor",
        "uri": "http://dbpedia.org/ontology/governor",
        "seq": "26,34",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "relatives",
        "uri": "http://dbpedia.org/ontology/relation",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "316",
    "question": "What continent of the world has Baja California peninsula and also has WEPG in one of it\u0027s cities?",
    "SerialNumber": "2693",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Baja_California_Peninsula\u003e \u003chttp://dbpedia.org/ontology/location\u003e ?uri. \u003chttp://dbpedia.org/resource/WEPG\u003e \u003chttp://dbpedia.org/property/city\u003e ?uri . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Continent\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Baja California peninsula",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Baja_California_Peninsula",
        "seq": "32,57"
      },
      {
        "label": "WEPG",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/WEPG",
        "seq": "71,75"
      }
    ],
    "id": "1afef26545cf4f17bb7933a2939142af",
    "predicate mapping": [
      {
        "label": "cities",
        "uri": "http://dbpedia.org/ontology/location",
        "mappedBy": "word2vec"
      },
      {
        "label": "in",
        "uri": "http://dbpedia.org/property/city",
        "seq": "9,11",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "continent",
        "uri": "http://dbpedia.org/ontology/Continent",
        "seq": "5,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Which party won both the general electoin and the andhra pradesh election in 2004?",
    "SerialNumber": "2694",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Indian_general_election,_2004_(Delhi)\u003e \u003chttp://dbpedia.org/ontology/affiliation\u003e ?uri. \u003chttp://dbpedia.org/resource/Indian_general_election,_2004_(Andhra_Pradesh)\u003e \u003chttp://dbpedia.org/ontology/affiliation\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "election general",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Indian_general_election,_2004_(Delhi)",
        "seq": "999,1000"
      },
      {
        "label": "election pradesh general",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Indian_general_election,_2004_(Andhra_Pradesh)",
        "seq": "999,1000"
      }
    ],
    "id": "412afcb751c4440083508ff2aa23abe8",
    "predicate mapping": [
      {
        "label": "election",
        "uri": "http://dbpedia.org/ontology/affiliation",
        "mappedBy": "word2vec"
      },
      {
        "label": "election",
        "uri": "http://dbpedia.org/ontology/affiliation",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "401",
    "question": "How many games are released for virtual consoles?",
    "SerialNumber": "2695",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/ontology/computingPlatform\u003e \u003chttp://dbpedia.org/resource/Virtual_Console\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/VideoGame\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "virtual console",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Virtual_Console",
        "seq": "32,47"
      }
    ],
    "id": "876a44de32e64aaa9855928c078039df",
    "predicate mapping": [
      {
        "label": "released",
        "uri": "http://dbpedia.org/ontology/computingPlatform",
        "mappedBy": "word2vec"
      },
      {
        "label": "games",
        "uri": "http://dbpedia.org/ontology/VideoGame",
        "seq": "9,14",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "To what political party do the politicians graduated from Somerville college, Oxford belong to?",
    "SerialNumber": "2697",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/almaMater\u003e \u003chttp://dbpedia.org/resource/Somerville_College,_Oxford\u003e . ?x \u003chttp://dbpedia.org/ontology/party\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/OfficeHolder\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Somerville college, Oxford",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Somerville_College,_Oxford",
        "seq": "58,84"
      }
    ],
    "id": "e3a7059770184b25a4d9b0398742786f",
    "predicate mapping": [
      {
        "label": "graduated from",
        "uri": "http://dbpedia.org/ontology/almaMater",
        "seq": "43,57",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "political party",
        "uri": "http://dbpedia.org/ontology/party",
        "seq": "8,23",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "belong",
        "uri": "http://dbpedia.org/ontology/OfficeHolder",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Where did Wallace Dollase die?",
    "SerialNumber": "2698",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Wallace_Dollase\u003e \u003chttp://dbpedia.org/ontology/deathPlace\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Wallace Dollase",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Wallace_Dollase",
        "seq": "10,25"
      }
    ],
    "id": "8e08009e99dc455d922ce7a0ada9717a",
    "predicate mapping": [
      {
        "label": "die",
        "uri": "http://dbpedia.org/ontology/deathPlace",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Where did the people canonized by John Paul II die?",
    "SerialNumber": "2699",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/canonizedBy\u003e \u003chttp://dbpedia.org/resource/Pope_John_Paul_II\u003e . ?x \u003chttp://dbpedia.org/property/deathPlace\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "John Paul II",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Pope_John_Paul_II",
        "seq": "34,46"
      }
    ],
    "id": "b73c98e1a1cc4ebeb320c1268ec30b4e",
    "predicate mapping": [
      {
        "label": "canonized by",
        "uri": "http://dbpedia.org/property/canonizedBy",
        "seq": "21,33",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "die",
        "uri": "http://dbpedia.org/property/deathPlace",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Where did the editor of Charlie Mensuel die ?",
    "SerialNumber": "2700",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Charlie_Mensuel\u003e \u003chttp://dbpedia.org/property/editor\u003e ?x . ?x \u003chttp://dbpedia.org/property/placeOfDeath\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Charlie Mensuel",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Charlie_Mensuel",
        "seq": "24,39"
      }
    ],
    "id": "39963beccde446c8944047f4d4cb3b84",
    "predicate mapping": [
      {
        "label": "editor",
        "uri": "http://dbpedia.org/property/editor",
        "seq": "14,20",
        "mappedBy": "byLabelMatch"
      },
      {
        "uri": "http://dbpedia.org/property/placeOfDeath",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Where is Denver Broncos located ?",
    "SerialNumber": "2702",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Denver_Broncos\u003e \u003chttp://dbpedia.org/ontology/locationCity\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Denver Broncos",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Denver_Broncos",
        "seq": "9,23"
      }
    ],
    "id": "617982e40b1c40909cdb633c1b374e5f",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/ontology/locationCity",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the birthplace of Adugna Deyas and the place where Fiq is located?",
    "SerialNumber": "2704",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Fiq,_Ethiopia\u003e \u003chttp://dbpedia.org/ontology/country\u003e ?uri. \u003chttp://dbpedia.org/resource/Adugna_Deyas\u003e \u003chttp://dbpedia.org/property/birthPlace\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Fiq,_Ethiopia",
        "seq": "999,1000"
      },
      {
        "label": "Adugna Deyas",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Adugna_Deyas",
        "seq": "26,38"
      }
    ],
    "id": "3fab7450096d4585bd162a32f10f08f9",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/ontology/country",
        "mappedBy": "word2vec"
      },
      {
        "label": "birthplace",
        "uri": "http://dbpedia.org/property/birthPlace",
        "seq": "12,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Where is the team of Abdel Boucker located ?",
    "SerialNumber": "2708",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Abdel_Bouckar\u003e \u003chttp://dbpedia.org/property/team\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/location\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Abdel Boucker",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Abdel_Bouckar",
        "seq": "21,34"
      }
    ],
    "id": "dc81947e16094c54835cf356fa78365b",
    "predicate mapping": [
      {
        "label": "team",
        "uri": "http://dbpedia.org/property/team",
        "seq": "13,17",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "located",
        "uri": "http://dbpedia.org/ontology/location",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "Count the different religions practiced by people who are in the Malaysian and Chinese association.",
    "SerialNumber": "2711",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/party\u003e \u003chttp://dbpedia.org/resource/Malaysian_Chinese_Association\u003e . ?x \u003chttp://dbpedia.org/ontology/religion\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Malaysian_Chinese_Association",
        "seq": "999,1000"
      }
    ],
    "id": "cf59b2f2f22e46d1af44c855e60632fe",
    "predicate mapping": [
      {
        "label": "are",
        "uri": "http://dbpedia.org/ontology/party",
        "seq": "54,57",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion",
        "seq": "20,28",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Name few companies where don berlin and michael sears have worked together?",
    "SerialNumber": "2712",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Don_R._Berlin\u003e \u003chttp://dbpedia.org/ontology/employer\u003e ?uri. \u003chttp://dbpedia.org/resource/Michael_M._Sears\u003e \u003chttp://dbpedia.org/ontology/employer\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "berlin don",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Don_R._Berlin",
        "seq": "999,1000"
      },
      {
        "label": "michael sears",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Michael_M._Sears",
        "seq": "999,1000"
      }
    ],
    "id": "c9e971b03aac43bcba9df9779256b126",
    "predicate mapping": [
      {
        "label": "worked",
        "uri": "http://dbpedia.org/ontology/employer",
        "mappedBy": "word2vec"
      },
      {
        "label": "worked",
        "uri": "http://dbpedia.org/ontology/employer",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "To which country is Svetlana Navasardyan from?",
    "SerialNumber": "2713",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Svetlana_Navasardyan\u003e \u003chttp://dbpedia.org/property/origin\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Svetlana Navasardyan",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Svetlana_Navasardyan",
        "seq": "20,40"
      }
    ],
    "id": "e89c7b6d4201411dadea15fc7a9138db",
    "predicate mapping": [
      {
        "label": "country",
        "uri": "http://dbpedia.org/property/origin",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which distributer of Bombay Sapphire also makes Grewy goose ?",
    "SerialNumber": "2721",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Grey_Goose_(vodka)\u003e \u003chttp://dbpedia.org/property/manufacturer\u003e ?uri. \u003chttp://dbpedia.org/resource/Bombay_Sapphire\u003e \u003chttp://dbpedia.org/property/distributor\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "goose",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Grey_Goose_(vodka)",
        "seq": "999,1000"
      },
      {
        "label": "Bombay Sapphire",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Bombay_Sapphire",
        "seq": "21,36"
      }
    ],
    "id": "8e47a69cb3824a16a86d9f02afd2a593",
    "predicate mapping": [
      {
        "label": "makes",
        "uri": "http://dbpedia.org/property/manufacturer",
        "seq": "42,47",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "goose",
        "uri": "http://dbpedia.org/property/distributor",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the TV show broadcasted by Fox and presented by Ryan Seacrest ?",
    "SerialNumber": "2723",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/presenter\u003e \u003chttp://dbpedia.org/resource/Ryan_Seacrest\u003e . ?uri \u003chttp://dbpedia.org/ontology/channel\u003e \u003chttp://dbpedia.org/resource/Fox_Broadcasting_Company\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ryan Seacrest",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ryan_Seacrest",
        "seq": "53,66"
      },
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Fox_Broadcasting_Company",
        "seq": "999,1000"
      }
    ],
    "id": "679e1082fff84c878024ee1d62389f0b",
    "predicate mapping": [
      {
        "label": "presented",
        "uri": "http://dbpedia.org/ontology/presenter",
        "seq": "40,49",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "Fox",
        "uri": "http://dbpedia.org/ontology/channel",
        "mappedBy": "word2vec"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "12,16",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "307",
    "question": "Which university has affiliations to Graham Holdings and Kaplan, Inc.?",
    "SerialNumber": "2724",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/property/affiliations\u003e \u003chttp://dbpedia.org/resource/Graham_Holdings_Company\u003e . ?uri \u003chttp://dbpedia.org/property/affiliations\u003e \u003chttp://dbpedia.org/resource/Kaplan,_Inc.\u003e . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/University\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "holdings graham",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Graham_Holdings_Company",
        "seq": "999,1000"
      },
      {
        "label": "Kaplan, Inc.",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Kaplan,_Inc.",
        "seq": "57,69"
      }
    ],
    "id": "fe42aff9ce524c13950df850ed4d0737",
    "predicate mapping": [
      {
        "label": "affiliations",
        "uri": "http://dbpedia.org/property/affiliations",
        "seq": "21,33",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "affiliations",
        "uri": "http://dbpedia.org/property/affiliations",
        "seq": "21,33",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "university",
        "uri": "http://dbpedia.org/ontology/University",
        "seq": "6,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the person who was educated at Harvard-Westlake and won the Screen Actor Guild Life Achievement Award ?",
    "SerialNumber": "2726",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/almaMater\u003e \u003chttp://dbpedia.org/resource/Harvard-Westlake_School\u003e . ?uri \u003chttp://dbpedia.org/ontology/award\u003e \u003chttp://dbpedia.org/resource/Screen_Actors_Guild_Life_Achievement_Award\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "harvard-westlake",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Harvard-Westlake_School",
        "seq": "999,1000"
      },
      {
        "label": "achievement screen guild award actor",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Screen_Actors_Guild_Life_Achievement_Award",
        "seq": "999,1000"
      }
    ],
    "id": "ec4218ce66a54c50ad5b8d8fc802f0e7",
    "predicate mapping": [
      {
        "label": "edu",
        "uri": "http://dbpedia.org/ontology/almaMater",
        "seq": "24,27",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "Award",
        "uri": "http://dbpedia.org/ontology/award",
        "seq": "101,106",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/Person",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "What is the place of birth of the badminton player who is the bronze medalist of Badminton at the 2012 Summer Olympics  Women\u0027s doubles ?",
    "SerialNumber": "2727",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Badminton_at_the_2012_Summer_Olympics_–_Women\u0027s_doubles\u003e \u003chttp://dbpedia.org/ontology/bronzeMedalist\u003e ?x . ?x \u003chttp://dbpedia.org/property/placeOfBirth\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/BadmintonPlayer\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "badminton olympics women\u0027s doubles",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Badminton_at_the_2012_Summer_Olympics_–_Women\u0027s_doubles",
        "seq": "999,1000"
      }
    ],
    "id": "18f4530b96d3413c887a761ef3de1cf0",
    "predicate mapping": [
      {
        "label": "bronze medalist",
        "uri": "http://dbpedia.org/ontology/bronzeMedalist",
        "seq": "62,77",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "place of birth",
        "uri": "http://dbpedia.org/property/placeOfBirth",
        "seq": "12,26",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "badminton player",
        "uri": "http://dbpedia.org/ontology/BadmintonPlayer",
        "seq": "34,50",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Where do bachelor of arts live?",
    "SerialNumber": "2728",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/almaMater\u003e \u003chttp://dbpedia.org/resource/Bachelor_of_Arts\u003e . ?x \u003chttp://dbpedia.org/ontology/residence\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "bachelor of arts",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Bachelor_of_Arts",
        "seq": "9,25"
      }
    ],
    "id": "fc455f282c6549adaa1614637ae68991",
    "predicate mapping": [
      {
        "label": "live",
        "uri": "http://dbpedia.org/property/almaMater",
        "mappedBy": "word2vec"
      },
      {
        "label": "live",
        "uri": "http://dbpedia.org/ontology/residence",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "401",
    "question": "How many people live in the Beverly Hills, California?",
    "SerialNumber": "2729",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/ontology/residence\u003e \u003chttp://dbpedia.org/resource/Beverly_Hills,_California\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Beverly Hills, California",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Beverly_Hills,_California",
        "seq": "28,53"
      }
    ],
    "id": "1cf3ba4382444e65880adff73f7125e7",
    "predicate mapping": [
      {
        "label": "live",
        "uri": "http://dbpedia.org/ontology/residence",
        "mappedBy": "word2vec"
      },
      {
        "label": "live",
        "uri": "http://dbpedia.org/ontology/Person",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Which religion do the people follow, whose constituency is Jadavpur?",
    "SerialNumber": "2734",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/constituency\u003e \u003chttp://dbpedia.org/resource/Jadavpur_(Lok_Sabha_constituency)\u003e . ?x \u003chttp://dbpedia.org/property/religion\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jadavpur",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Jadavpur_(Lok_Sabha_constituency)",
        "seq": "59,67"
      }
    ],
    "id": "08165fd11c3f4e49bdd932736db1e9c3",
    "predicate mapping": [
      {
        "label": "constituency",
        "uri": "http://dbpedia.org/property/constituency",
        "seq": "43,55",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/property/religion",
        "seq": "6,14",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "people",
        "uri": "http://dbpedia.org/ontology/Person",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "What other things are provided by the producer of Office 365?",
    "SerialNumber": "2736",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/service\u003e \u003chttp://dbpedia.org/resource/Office_365\u003e . ?x \u003chttp://dbpedia.org/property/services\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Office 365",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Office_365",
        "seq": "50,60"
      }
    ],
    "id": "cc70615cda2f4cd19a95e83f87285f3d",
    "predicate mapping": [
      {
        "label": "producer",
        "uri": "http://dbpedia.org/ontology/service",
        "mappedBy": "word2vec"
      },
      {
        "label": "producer",
        "uri": "http://dbpedia.org/property/services",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "Who are the people who died in a place architected by Jens Jensen",
    "SerialNumber": "2738",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/architect\u003e \u003chttp://dbpedia.org/resource/Jens_Jensen_(landscape_architect)\u003e . ?uri \u003chttp://dbpedia.org/ontology/deathPlace\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jens Jensen",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Jens_Jensen_(landscape_architect)",
        "seq": "54,65"
      }
    ],
    "id": "50ba41d267374555bc6bf5c1cf570b75",
    "predicate mapping": [
      {
        "label": "architect",
        "uri": "http://dbpedia.org/ontology/architect",
        "seq": "39,48",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "died in",
        "uri": "http://dbpedia.org/ontology/deathPlace",
        "seq": "23,30",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "ed",
        "uri": "http://dbpedia.org/ontology/Person",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "What are the software whose programming language are Multilingual?",
    "SerialNumber": "2739",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/language\u003e \u003chttp://dbpedia.org/resource/Multilingualism\u003e . ?uri \u003chttp://dbpedia.org/property/programmingLanguage\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Software\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "multilingual",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Multilingualism",
        "seq": "999,1000"
      }
    ],
    "id": "452343f0f60b42b399b7d2cb29d6bb91",
    "predicate mapping": [
      {
        "label": "language",
        "uri": "http://dbpedia.org/ontology/language",
        "seq": "40,48",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "programming language",
        "uri": "http://dbpedia.org/property/programmingLanguage",
        "seq": "28,48",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "software",
        "uri": "http://dbpedia.org/ontology/Software",
        "seq": "13,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What is the political party of the person succeeded by A.K. Singh?",
    "SerialNumber": "2740",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/successor\u003e \u003chttp://dbpedia.org/resource/A._K._Singh\u003e . ?x \u003chttp://dbpedia.org/property/party\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "A.K. Singh",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/A._K._Singh",
        "seq": "55,65"
      }
    ],
    "id": "882d32179f904be8b3678aa0b25fb3c7",
    "predicate mapping": [
      {
        "label": "succeeded",
        "uri": "http://dbpedia.org/property/successor",
        "mappedBy": "word2vec"
      },
      {
        "label": "political party",
        "uri": "http://dbpedia.org/property/party",
        "seq": "12,27",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/Person",
        "seq": "35,41",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What tv show is created by Brian Graden?",
    "SerialNumber": "2742",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/developer\u003e \u003chttp://dbpedia.org/resource/Brian_Graden\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Brian Graden",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Brian_Graden",
        "seq": "27,39"
      }
    ],
    "id": "1b967dc18818484ba213913e39ac2215",
    "predicate mapping": [
      {
        "label": "created",
        "uri": "http://dbpedia.org/property/developer",
        "mappedBy": "word2vec"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "8,12",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which operator of ganz UV is also the nationality of the Gza Horvth ?",
    "SerialNumber": "2744",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Ganz_UV\u003e \u003chttp://dbpedia.org/ontology/operator\u003e ?uri. \u003chttp://dbpedia.org/resource/Géza_Horváth\u003e \u003chttp://dbpedia.org/ontology/nationality\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "ganz UV",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ganz_UV",
        "seq": "18,25"
      },
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Géza_Horváth",
        "seq": "999,1000"
      }
    ],
    "id": "2cbe6f6028204f2db497e7aa21514cae",
    "predicate mapping": [
      {
        "label": "operator",
        "uri": "http://dbpedia.org/ontology/operator",
        "seq": "6,14",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "nationality",
        "uri": "http://dbpedia.org/ontology/nationality",
        "seq": "38,49",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "What was the career of some people who have committed suicide?",
    "SerialNumber": "2745",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/deathCause\u003e \u003chttp://dbpedia.org/resource/Suicide\u003e . ?x \u003chttp://dbpedia.org/ontology/occupation\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "suicide",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Suicide",
        "seq": "54,61"
      }
    ],
    "id": "9e4c63f453514fb8b3ebf0531dfa0cd7",
    "predicate mapping": [
      {
        "label": "committed",
        "uri": "http://dbpedia.org/property/deathCause",
        "mappedBy": "word2vec"
      },
      {
        "label": "career",
        "uri": "http://dbpedia.org/ontology/occupation",
        "seq": "13,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the institute of Alton Ochsner ?",
    "SerialNumber": "2748",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Alton_Ochsner\u003e \u003chttp://dbpedia.org/ontology/institution\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Alton Ochsner",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Alton_Ochsner",
        "seq": "22,35"
      }
    ],
    "id": "4ff9b452822549048ab6fb060739559c",
    "predicate mapping": [
      {
        "label": "institute",
        "uri": "http://dbpedia.org/ontology/institution",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Who won the general elections in India in 2009, and had also won the AP elections in 2004 ?",
    "SerialNumber": "2750",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Indian_general_election,_2004_(Andhra_Pradesh)\u003e \u003chttp://dbpedia.org/ontology/affiliation\u003e ?uri. \u003chttp://dbpedia.org/resource/Indian_general_election,_2009\u003e \u003chttp://dbpedia.org/ontology/affiliation\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Indian_general_election,_2004_(Andhra_Pradesh)",
        "seq": "999,1000"
      },
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Indian_general_election,_2009",
        "seq": "999,1000"
      }
    ],
    "id": "19a01f4fb64d4746969d681e2913f645",
    "predicate mapping": [
      {
        "label": "elections",
        "uri": "http://dbpedia.org/ontology/affiliation",
        "mappedBy": "word2vec"
      },
      {
        "label": "elections",
        "uri": "http://dbpedia.org/ontology/affiliation",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the common palce of study for jack McGregor and Philip W. Pillsbury ?",
    "SerialNumber": "2751",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Jack_McGregor\u003e \u003chttp://dbpedia.org/ontology/education\u003e ?uri. \u003chttp://dbpedia.org/resource/Philip_W._Pillsbury\u003e \u003chttp://dbpedia.org/property/education\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "jack McGregor",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Jack_McGregor",
        "seq": "38,51"
      },
      {
        "label": "Philip W. Pillsbury",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Philip_W._Pillsbury",
        "seq": "56,75"
      }
    ],
    "id": "d0c96c44212d47e1b3ebd9752421d1f7",
    "predicate mapping": [
      {
        "label": "study",
        "uri": "http://dbpedia.org/ontology/education",
        "mappedBy": "word2vec"
      },
      {
        "label": "study",
        "uri": "http://dbpedia.org/property/education",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Is Ian Thorpe the bronze medalist of Swimming at the 2004 Summer Olympics  Men\u0027s 100 metre freestyle?",
    "SerialNumber": "2752",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Swimming_at_the_2004_Summer_Olympics_–_Men\u0027s_100_metre_freestyle\u003e \u003chttp://dbpedia.org/ontology/bronzeMedalist\u003e \u003chttp://dbpedia.org/resource/Ian_Thorpe\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "freestyle swimming olympics summer",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Swimming_at_the_2004_Summer_Olympics_–_Men\u0027s_100_metre_freestyle",
        "seq": "999,1000"
      },
      {
        "label": "Ian Thorpe",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ian_Thorpe",
        "seq": "3,13"
      }
    ],
    "id": "c124e98b0ceb4a70a62e4f8655c08c56",
    "predicate mapping": [
      {
        "label": "bronze medalist",
        "uri": "http://dbpedia.org/ontology/bronzeMedalist",
        "seq": "18,33",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Where can I find people whose hometown is Ann Arbour in Michigan?",
    "SerialNumber": "2754",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/homeTown\u003e \u003chttp://dbpedia.org/resource/Ann_Arbor,_Michigan\u003e . ?x \u003chttp://dbpedia.org/ontology/residence\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "michigan",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Ann_Arbor,_Michigan",
        "seq": "999,1000"
      }
    ],
    "id": "95b3fafcb14440d895c1336ced355494",
    "predicate mapping": [
      {
        "label": "hometown",
        "uri": "http://dbpedia.org/property/homeTown",
        "seq": "30,38",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "Michigan",
        "uri": "http://dbpedia.org/ontology/residence",
        "mappedBy": "word2vec"
      },
      {
        "label": "Michigan",
        "uri": "http://dbpedia.org/ontology/Person",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Where did the wrestler die who was billed in Norman, Oklahoma?",
    "SerialNumber": "2759",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/billed\u003e \u003chttp://dbpedia.org/resource/Norman,_Oklahoma\u003e . ?x \u003chttp://dbpedia.org/ontology/deathPlace\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Wrestler\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Norman, Oklahoma",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Norman,_Oklahoma",
        "seq": "45,61"
      }
    ],
    "id": "503e2359a25a4b54a614650a40b1ab55",
    "predicate mapping": [
      {
        "label": "billed",
        "uri": "http://dbpedia.org/property/billed",
        "seq": "35,41",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "die",
        "uri": "http://dbpedia.org/ontology/deathPlace",
        "mappedBy": "word2vec"
      },
      {
        "label": "wrestler",
        "uri": "http://dbpedia.org/ontology/Wrestler",
        "seq": "14,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "How many different genres of games can I find which are compatible with the Commodore 64?",
    "SerialNumber": "2760",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/computingPlatform\u003e \u003chttp://dbpedia.org/resource/Commodore_64\u003e . ?x \u003chttp://dbpedia.org/property/genre\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Commodore 64",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Commodore_64",
        "seq": "76,88"
      }
    ],
    "id": "f30e5b31cebd42fca8e78aee5f693598",
    "predicate mapping": [
      {
        "label": "compatible",
        "uri": "http://dbpedia.org/ontology/computingPlatform",
        "mappedBy": "word2vec"
      },
      {
        "label": "genre",
        "uri": "http://dbpedia.org/property/genre",
        "seq": "19,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Where did the relatives of David Hume study?",
    "SerialNumber": "2761",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/relative\u003e \u003chttp://dbpedia.org/resource/David_Hume\u003e . ?x \u003chttp://dbpedia.org/property/education\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "David Hume",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/David_Hume",
        "seq": "27,37"
      }
    ],
    "id": "6b5ad23d383444478ce3e8e1acbbc649",
    "predicate mapping": [
      {
        "label": "relative",
        "uri": "http://dbpedia.org/ontology/relative",
        "seq": "14,22",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "study",
        "uri": "http://dbpedia.org/property/education",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "8",
    "question": "Which producer of Boeing F/A has Dennis Muilenburg as an important person ?",
    "SerialNumber": "2762",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/product\u003e \u003chttp://dbpedia.org/resource/Boeing_F/A-18E/F_Super_Hornet\u003e . ?uri \u003chttp://dbpedia.org/property/keyPeople\u003e \u003chttp://dbpedia.org/resource/Dennis_Muilenburg\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Dennis Muilenburg",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Dennis_Muilenburg",
        "seq": "33,50"
      }
    ],
    "id": "1534fc10e4894ed2b6b0d699ae7dd80c",
    "predicate mapping": [
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/product",
        "mappedBy": "word2vec"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/resource/Boeing_F/A-18E/F_Super_Hornet",
        "mappedBy": "word2vec"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/property/keyPeople",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Name the constituency of Jonas Gahr where Sverre Krogh was born ?",
    "SerialNumber": "2763",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Jonas_Gahr_Støre\u003e \u003chttp://dbpedia.org/property/constituency\u003e ?uri. \u003chttp://dbpedia.org/resource/Sverre_Krogh_Sundbø\u003e \u003chttp://dbpedia.org/property/birthPlace\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "jonas gahr",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Jonas_Gahr_Støre",
        "seq": "999,1000"
      },
      {
        "label": "sverre krogh",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Sverre_Krogh_Sundbø",
        "seq": "999,1000"
      }
    ],
    "id": "f67fb0a1674440259432e6bf7019bf1a",
    "predicate mapping": [
      {
        "label": "constituency",
        "uri": "http://dbpedia.org/property/constituency",
        "seq": "9,21",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "born",
        "uri": "http://dbpedia.org/property/birthPlace",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Does the owyhee river flow into oregon?",
    "SerialNumber": "2765",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Owyhee_River\u003e \u003chttp://dbpedia.org/ontology/mouthMountain\u003e \u003chttp://dbpedia.org/resource/Oregon\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "owyhee river",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Owyhee_River",
        "seq": "9,21"
      },
      {
        "label": "oregon",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Oregon",
        "seq": "32,38"
      }
    ],
    "id": "fef9e0b2920a4196a4fb2a73724a9af3",
    "predicate mapping": [
      {
        "label": "flow",
        "uri": "http://dbpedia.org/ontology/mouthMountain",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "406",
    "question": "Count all the books written by an author buried in the Convent of Barefoot Trinitarians?",
    "SerialNumber": "2777",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/restingPlace\u003e \u003chttp://dbpedia.org/resource/Convent_of_the_Barefoot_Trinitarians\u003e . ?uri \u003chttp://dbpedia.org/ontology/author\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Book\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "trinitarians barefoot convent",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Convent_of_the_Barefoot_Trinitarians",
        "seq": "999,1000"
      }
    ],
    "id": "9615aa0561ce4e4a960d23ede56fc21a",
    "predicate mapping": [
      {
        "label": "buried in",
        "uri": "http://dbpedia.org/ontology/restingPlace",
        "seq": "41,50",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "written by",
        "uri": "http://dbpedia.org/ontology/author",
        "seq": "20,30",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "book",
        "uri": "http://dbpedia.org/ontology/Book",
        "seq": "14,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which director of On deadly Ground also released Mojo Priest ?",
    "SerialNumber": "2778",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Mojo_Priest\u003e \u003chttp://dbpedia.org/property/artist\u003e ?uri. \u003chttp://dbpedia.org/resource/On_Deadly_Ground\u003e \u003chttp://dbpedia.org/property/director\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Mojo Priest",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Mojo_Priest",
        "seq": "49,60"
      },
      {
        "label": "On deadly Ground",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/On_Deadly_Ground",
        "seq": "18,34"
      }
    ],
    "id": "2a96555f9e0048bbb838499c8484797b",
    "predicate mapping": [
      {
        "label": "released",
        "uri": "http://dbpedia.org/property/artist",
        "mappedBy": "word2vec"
      },
      {
        "label": "director",
        "uri": "http://dbpedia.org/property/director",
        "seq": "6,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Who were some governmental heads in Nazi Germany?",
    "SerialNumber": "2779",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/jurisdiction\u003e \u003chttp://dbpedia.org/resource/Nazi_Germany\u003e . ?x \u003chttp://dbpedia.org/ontology/leader\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Nazi Germany",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Nazi_Germany",
        "seq": "36,48"
      }
    ],
    "id": "615091ae47f447b2996f509c01cc4b6f",
    "predicate mapping": [
      {
        "label": "heads",
        "uri": "http://dbpedia.org/ontology/jurisdiction",
        "mappedBy": "word2vec"
      },
      {
        "label": "heads",
        "uri": "http://dbpedia.org/ontology/leader",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "What are some TV shows whose voice actors are from Truckee, California, US?",
    "SerialNumber": "2781",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/birthPlace\u003e \u003chttp://dbpedia.org/resource/Truckee,_California\u003e . ?uri \u003chttp://dbpedia.org/property/voices\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Truckee, California",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Truckee,_California",
        "seq": "51,70"
      }
    ],
    "id": "3722e91c57c84a39bac14bfe89532583",
    "predicate mapping": [
      {
        "label": "actors",
        "uri": "http://dbpedia.org/property/birthPlace",
        "mappedBy": "word2vec"
      },
      {
        "label": "voice",
        "uri": "http://dbpedia.org/property/voices",
        "seq": "29,34",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "17,22",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "406",
    "question": "What is the total number of office holders who preceded the people working under president bill clinton?",
    "SerialNumber": "2782",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/president\u003e \u003chttp://dbpedia.org/resource/Bill_Clinton\u003e . ?uri \u003chttp://dbpedia.org/property/successor\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/OfficeHolder\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "bill clinton",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Bill_Clinton",
        "seq": "91,103"
      }
    ],
    "id": "ebace02293c84cddabf5803a707d140d",
    "predicate mapping": [
      {
        "label": "president",
        "uri": "http://dbpedia.org/property/president",
        "seq": "81,90",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "working",
        "uri": "http://dbpedia.org/property/successor",
        "mappedBy": "word2vec"
      },
      {
        "label": "office holder",
        "uri": "http://dbpedia.org/ontology/OfficeHolder",
        "seq": "28,41",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Is wizard rock inspired from Harry potter?",
    "SerialNumber": "2788",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Wizard_rock\u003e \u003chttp://dbpedia.org/ontology/stylisticOrigin\u003e \u003chttp://dbpedia.org/resource/Harry_Potter\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "wizard rock",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Wizard_rock",
        "seq": "3,14"
      },
      {
        "label": "Harry",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Harry_Potter",
        "seq": "29,34"
      }
    ],
    "id": "4d16a08db93348988792d0efc91d6ae6",
    "predicate mapping": [
      {
        "label": "potter",
        "uri": "http://dbpedia.org/ontology/stylisticOrigin",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Who made the Y block engine and the SHO V8 engine?",
    "SerialNumber": "2790",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Ford_Y-block_engine\u003e \u003chttp://dbpedia.org/ontology/manufacturer\u003e ?uri. \u003chttp://dbpedia.org/resource/Ford_SHO_V8_engine\u003e \u003chttp://dbpedia.org/ontology/manufacturer\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "engine block",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Ford_Y-block_engine",
        "seq": "999,1000"
      },
      {
        "label": "engine sho v8",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Ford_SHO_V8_engine",
        "seq": "999,1000"
      }
    ],
    "id": "ae24568ec2e94bb3b2c5de7ef38478e5",
    "predicate mapping": [
      {
        "label": "made",
        "uri": "http://dbpedia.org/ontology/manufacturer",
        "seq": "4,8",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "made",
        "uri": "http://dbpedia.org/ontology/manufacturer",
        "seq": "4,8",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "How many subjects have been covered in fantasy novels?",
    "SerialNumber": "2793",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/literaryGenre\u003e \u003chttp://dbpedia.org/resource/Fantasy\u003e . ?x \u003chttp://dbpedia.org/ontology/nonFictionSubject\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "fantasy",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Fantasy",
        "seq": "39,46"
      }
    ],
    "id": "7b67e23763bd4b55a7a2c6e9ad44b195",
    "predicate mapping": [
      {
        "label": "novels",
        "uri": "http://dbpedia.org/ontology/literaryGenre",
        "mappedBy": "word2vec"
      },
      {
        "label": "subjects",
        "uri": "http://dbpedia.org/ontology/nonFictionSubject",
        "seq": "9,17",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Name the tenants of MAsterCard center wich is also the draft team of Antoine Bibeau?",
    "SerialNumber": "2798",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/MasterCard_Centre\u003e \u003chttp://dbpedia.org/property/tenants\u003e ?uri. \u003chttp://dbpedia.org/resource/Antoine_Bibeau\u003e \u003chttp://dbpedia.org/property/draftTeam\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "mastercard",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/MasterCard_Centre",
        "seq": "999,1000"
      },
      {
        "label": "Antoine Bibeau",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Antoine_Bibeau",
        "seq": "69,83"
      }
    ],
    "id": "3a34f7c15c0e48bba64cbc21b231ee6b",
    "predicate mapping": [
      {
        "label": "tenants",
        "uri": "http://dbpedia.org/property/tenants",
        "seq": "9,16",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "draft team",
        "uri": "http://dbpedia.org/property/draftTeam",
        "seq": "55,65",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Which teams participate in the football seasons headed by Patricia Amorim?",
    "SerialNumber": "2799",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/chairman\u003e \u003chttp://dbpedia.org/resource/Patrícia_Amorim\u003e . ?x \u003chttp://dbpedia.org/property/name\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/SportsSeason\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Patricia Amorim",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Patrícia_Amorim",
        "seq": "58,73"
      }
    ],
    "id": "d5c6186b35e84d629ac4471b606ac5ea",
    "predicate mapping": [
      {
        "label": "headed",
        "uri": "http://dbpedia.org/ontology/chairman",
        "mappedBy": "word2vec"
      },
      {
        "label": "headed",
        "uri": "http://dbpedia.org/property/name",
        "mappedBy": "word2vec"
      },
      {
        "label": "seasons",
        "uri": "http://dbpedia.org/ontology/SportsSeason",
        "seq": "40,47",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "In which wars did Percy Fitzwallace fight?",
    "SerialNumber": "2801",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Percy_Fitzwallace\u003e \u003chttp://dbpedia.org/property/battles\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Percy Fitzwallace",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Percy_Fitzwallace",
        "seq": "18,35"
      }
    ],
    "id": "826719619f624cc08c74945255b6df1d",
    "predicate mapping": [
      {
        "label": "fight",
        "uri": "http://dbpedia.org/property/battles",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "Who are some US colonels?",
    "SerialNumber": "2804",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/rank\u003e \u003chttp://dbpedia.org/resource/Colonel_(United_States)\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "colonel",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Colonel_(United_States)",
        "seq": "16,23"
      }
    ],
    "id": "c07f906674b1433bbb4e9555d8ff28a4",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/rank",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "401",
    "question": "How many places were ruled by Elizabeth II?",
    "SerialNumber": "2805",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/property/leaderName\u003e \u003chttp://dbpedia.org/resource/Elizabeth_II\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Place\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Elizabeth II",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Elizabeth_II",
        "seq": "30,42"
      }
    ],
    "id": "ccaaf32b5f0f46d699458212fd57221a",
    "predicate mapping": [
      {
        "label": "ruled",
        "uri": "http://dbpedia.org/property/leaderName",
        "mappedBy": "word2vec"
      },
      {
        "label": "place",
        "uri": "http://dbpedia.org/ontology/Place",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the rank of Julius C. Burrows politically?",
    "SerialNumber": "2808",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Julius_C._Burrows\u003e \u003chttp://dbpedia.org/property/order\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Julius C. Burrows",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Julius_C._Burrows",
        "seq": "20,37"
      }
    ],
    "id": "5a6ec3749e5e4c7ab7af6a94563ea793",
    "predicate mapping": [
      {
        "label": "politically",
        "uri": "http://dbpedia.org/property/order",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Artists trained at art students league NY are buried where?",
    "SerialNumber": "2811",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/training\u003e \u003chttp://dbpedia.org/resource/Art_Students_League_of_New_York\u003e . ?x \u003chttp://dbpedia.org/ontology/restingPlace\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Artist\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "NY",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Art_Students_League_of_New_York",
        "seq": "39,41"
      }
    ],
    "id": "5bc9919a43db4252ba6316057cf3b8e0",
    "predicate mapping": [
      {
        "label": "trained",
        "uri": "http://dbpedia.org/ontology/training",
        "seq": "8,15",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "buried",
        "uri": "http://dbpedia.org/ontology/restingPlace",
        "mappedBy": "word2vec"
      },
      {
        "label": "Artist",
        "uri": "http://dbpedia.org/ontology/Artist",
        "seq": "0,6",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which country of Montaas Mayas Chiquibul is the birth place of Jos Bernardo Escobar?",
    "SerialNumber": "2816",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Montañas_Mayas_Chiquibul\u003e \u003chttp://dbpedia.org/property/country\u003e ?uri. \u003chttp://dbpedia.org/resource/José_Bernardo_Escobar\u003e \u003chttp://dbpedia.org/property/birthPlace\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "chiquibul",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Montañas_Mayas_Chiquibul",
        "seq": "999,1000"
      },
      {
        "label": "bernardo escobar",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/José_Bernardo_Escobar",
        "seq": "999,1000"
      }
    ],
    "id": "3c710b7cf9c740f1ab2af4ee8e84d4db",
    "predicate mapping": [
      {
        "label": "country",
        "uri": "http://dbpedia.org/property/country",
        "seq": "6,13",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "birth place",
        "uri": "http://dbpedia.org/property/birthPlace",
        "seq": "48,59",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Was Francisco Pizarro of the monarch of Charles 5, of the roman empire?",
    "SerialNumber": "2817",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Francisco_Pizarro\u003e \u003chttp://dbpedia.org/ontology/monarch\u003e \u003chttp://dbpedia.org/resource/Charles_V,_Holy_Roman_Emperor\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Francisco Pizarro",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Francisco_Pizarro",
        "seq": "4,21"
      },
      {
        "label": "charles roman",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Charles_V,_Holy_Roman_Emperor",
        "seq": "999,1000"
      }
    ],
    "id": "8cd244d8962b4f808264a0ce811cf46a",
    "predicate mapping": [
      {
        "label": "monarch",
        "uri": "http://dbpedia.org/ontology/monarch",
        "seq": "29,36",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "In which part of the world will I find Kim Sawchuk and Vuelta Mexico Telmex?",
    "SerialNumber": "2828",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Kim_Sawchuk\u003e \u003chttp://dbpedia.org/property/region\u003e ?uri. \u003chttp://dbpedia.org/resource/Vuelta_Mexico_Telmex\u003e \u003chttp://dbpedia.org/property/region\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Kim Sawchuk",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Kim_Sawchuk",
        "seq": "39,50"
      },
      {
        "label": "Vuelta Mexico Telmex",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Vuelta_Mexico_Telmex",
        "seq": "55,75"
      }
    ],
    "id": "7a206da5629442c7a1853a9b62464368",
    "predicate mapping": [
      {
        "label": "find",
        "uri": "http://dbpedia.org/property/region",
        "mappedBy": "word2vec"
      },
      {
        "label": "find",
        "uri": "http://dbpedia.org/property/region",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "List everything written in languages developed by EXperimental Computing Facility?",
    "SerialNumber": "2829",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/author\u003e \u003chttp://dbpedia.org/resource/EXperimental_Computing_Facility\u003e . ?uri \u003chttp://dbpedia.org/property/programmingLanguage\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Work\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "EXperimental Computing Facility",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/EXperimental_Computing_Facility",
        "seq": "50,81"
      }
    ],
    "id": "9c31f5b82f7345a08d1845c0744d8eac",
    "predicate mapping": [
      {
        "label": "developed",
        "uri": "http://dbpedia.org/ontology/author",
        "mappedBy": "word2vec"
      },
      {
        "label": "languages",
        "uri": "http://dbpedia.org/property/programmingLanguage",
        "seq": "27,36",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "developed",
        "uri": "http://dbpedia.org/ontology/Work",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "Who is the singer of the album which has a song Me and My arrow ?",
    "SerialNumber": "2830",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Me_and_My_Arrow\u003e \u003chttp://dbpedia.org/ontology/album\u003e ?x . ?x \u003chttp://dbpedia.org/property/narrated\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Album\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Me and My arrow",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Me_and_My_Arrow",
        "seq": "48,63"
      }
    ],
    "id": "5e40045c1ab34eae8400e7bb2de5784d",
    "predicate mapping": [
      {
        "label": "album",
        "uri": "http://dbpedia.org/ontology/album",
        "seq": "25,30",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "song",
        "uri": "http://dbpedia.org/property/narrated",
        "mappedBy": "word2vec"
      },
      {
        "label": "album",
        "uri": "http://dbpedia.org/ontology/Album",
        "seq": "25,30",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "405",
    "question": "How many albums did the maker of The Band produce?",
    "SerialNumber": "2833",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/artist\u003e \u003chttp://dbpedia.org/resource/The_Band\u003e . ?x \u003chttp://dbpedia.org/ontology/subsequentWork\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Album\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "The Band",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Band",
        "seq": "33,41"
      }
    ],
    "id": "f08d139cd5f1417a98264657c0c71637",
    "predicate mapping": [
      {
        "label": "Band",
        "uri": "http://dbpedia.org/ontology/artist",
        "seq": "37,41",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "produce",
        "uri": "http://dbpedia.org/ontology/subsequentWork",
        "mappedBy": "word2vec"
      },
      {
        "label": "album",
        "uri": "http://dbpedia.org/ontology/Album",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What are some non fiction subjects dealt with in fantasy novels?",
    "SerialNumber": "2837",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/literaryGenre\u003e \u003chttp://dbpedia.org/resource/Fantasy\u003e . ?x \u003chttp://dbpedia.org/ontology/nonFictionSubject\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Book\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "fantasy",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Fantasy",
        "seq": "49,56"
      }
    ],
    "id": "42fdd268b8604dadbb164492ae3450eb",
    "predicate mapping": [
      {
        "label": "novels",
        "uri": "http://dbpedia.org/ontology/literaryGenre",
        "mappedBy": "word2vec"
      },
      {
        "label": "fiction",
        "uri": "http://dbpedia.org/ontology/nonFictionSubject",
        "seq": "18,25",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "novels",
        "uri": "http://dbpedia.org/ontology/Book",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Who has fought in wars under commander Arthur St Clair?",
    "SerialNumber": "2840",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/commander\u003e \u003chttp://dbpedia.org/resource/Arthur_St._Clair\u003e . ?x \u003chttp://dbpedia.org/property/combatant\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Arthur St Clair",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Arthur_St._Clair",
        "seq": "39,54"
      }
    ],
    "id": "14ded43faabe4a51af41cfafc21363c2",
    "predicate mapping": [
      {
        "label": "commander",
        "uri": "http://dbpedia.org/ontology/commander",
        "seq": "29,38",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "wars",
        "uri": "http://dbpedia.org/property/combatant",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Which awards have been given to immunologists?",
    "SerialNumber": "2841",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/fields\u003e \u003chttp://dbpedia.org/resource/Immunology\u003e . ?x \u003chttp://dbpedia.org/ontology/award\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "immunologi",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Immunology",
        "seq": "32,42"
      }
    ],
    "id": "61573482fe9745b38c65109394bdc050",
    "predicate mapping": [
      {
        "label": "sts",
        "uri": "http://dbpedia.org/property/fields",
        "mappedBy": "word2vec"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/award",
        "seq": "6,12",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "101",
    "question": "Foxconn makes how many things?",
    "SerialNumber": "2848",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/ontology/manufacturer\u003e \u003chttp://dbpedia.org/resource/Foxconn\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Foxconn",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Foxconn",
        "seq": "0,7"
      }
    ],
    "id": "785671e67373470d82a70c72bbe1184d",
    "predicate mapping": [
      {
        "label": "things",
        "uri": "http://dbpedia.org/ontology/manufacturer",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "What is telecasted on the network where Deborah Turness holds important position?",
    "SerialNumber": "2850",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/keyPerson\u003e \u003chttp://dbpedia.org/resource/Deborah_Turness\u003e . ?uri \u003chttp://dbpedia.org/ontology/network\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Deborah Turness",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Deborah_Turness",
        "seq": "40,55"
      }
    ],
    "id": "b46c1b706504419494f4cccf84754e62",
    "predicate mapping": [
      {
        "label": "position",
        "uri": "http://dbpedia.org/ontology/keyPerson",
        "mappedBy": "word2vec"
      },
      {
        "label": "network",
        "uri": "http://dbpedia.org/ontology/network",
        "seq": "26,33",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Which actors have performed in plays performed in New York?",
    "SerialNumber": "2851",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/place\u003e \u003chttp://dbpedia.org/resource/New_York_City\u003e . ?x \u003chttp://dbpedia.org/property/starring\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Play\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "New York",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/New_York_City",
        "seq": "50,58"
      }
    ],
    "id": "da4845645dbf4dd5b072c54980634196",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/place",
        "mappedBy": "word2vec"
      },
      {
        "label": "actor",
        "uri": "http://dbpedia.org/property/starring",
        "seq": "6,11",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "play",
        "uri": "http://dbpedia.org/ontology/Play",
        "seq": "31,35",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What currencies are used in the countries which have been governed by Francois Hollande?",
    "SerialNumber": "2852",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/leader\u003e \u003chttp://dbpedia.org/resource/François_Hollande\u003e . ?x \u003chttp://dbpedia.org/ontology/currency\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Country\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Francois Hollande",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/François_Hollande",
        "seq": "70,87"
      }
    ],
    "id": "dcae078ebdd74499a63310fa184928ff",
    "predicate mapping": [
      {
        "label": "governed",
        "uri": "http://dbpedia.org/ontology/leader",
        "mappedBy": "word2vec"
      },
      {
        "label": "currencies",
        "uri": "http://dbpedia.org/ontology/currency",
        "seq": "5,15",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "land",
        "uri": "http://dbpedia.org/ontology/Country",
        "seq": "82,86",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Where did the office holder died who also have faith in Episcopal Church ?",
    "SerialNumber": "2855",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/religion\u003e \u003chttp://dbpedia.org/resource/Episcopal_Church_(United_States)\u003e . ?x \u003chttp://dbpedia.org/ontology/deathPlace\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/OfficeHolder\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Episcopal Church",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Episcopal_Church_(United_States)",
        "seq": "56,72"
      }
    ],
    "id": "52e919158ffa4ce9bdb2817cebd96da5",
    "predicate mapping": [
      {
        "label": "faith",
        "uri": "http://dbpedia.org/ontology/religion",
        "seq": "47,52",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "died",
        "uri": "http://dbpedia.org/ontology/deathPlace",
        "mappedBy": "word2vec"
      },
      {
        "label": "office holder",
        "uri": "http://dbpedia.org/ontology/OfficeHolder",
        "seq": "14,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "What are the political parties whose leaders have lived in the Prime Minister\u0027s House?",
    "SerialNumber": "2861",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/residence\u003e \u003chttp://dbpedia.org/resource/Prime_Minister\u0027s_House_(Colombo)\u003e . ?uri \u003chttp://dbpedia.org/ontology/leader\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/PoliticalParty\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Prime Minister\u0027s House",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Prime_Minister\u0027s_House_(Colombo)",
        "seq": "63,85"
      }
    ],
    "id": "d7c709165e3246d1b9cbeb191dd2c877",
    "predicate mapping": [
      {
        "label": "lived",
        "uri": "http://dbpedia.org/ontology/residence",
        "mappedBy": "word2vec"
      },
      {
        "label": "leader",
        "uri": "http://dbpedia.org/ontology/leader",
        "seq": "37,43",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "political",
        "uri": "http://dbpedia.org/ontology/PoliticalParty",
        "seq": "13,22",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name a TV show judged by Jennifier Lopez and presented by Brian Dunkleman ?",
    "SerialNumber": "2863",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/judges\u003e \u003chttp://dbpedia.org/resource/Jennifer_Lopez\u003e . ?uri \u003chttp://dbpedia.org/property/presenter\u003e \u003chttp://dbpedia.org/resource/Brian_Dunkleman\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Jennifer_Lopez",
        "seq": "999,1000"
      },
      {
        "label": "Brian Dunkleman",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Brian_Dunkleman",
        "seq": "58,73"
      }
    ],
    "id": "be2a715e677a435cabaf67c8f17f8a02",
    "predicate mapping": [
      {
        "label": "judged",
        "uri": "http://dbpedia.org/property/judges",
        "seq": "15,21",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "presented",
        "uri": "http://dbpedia.org/property/presenter",
        "seq": "45,54",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "10,14",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Is the Chiva Bus by the Ford Motor Company?",
    "SerialNumber": "2864",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Chiva_bus\u003e \u003chttp://dbpedia.org/ontology/automobilePlatform\u003e \u003chttp://dbpedia.org/resource/Ford_Motor_Company\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Chiva Bus",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Chiva_bus",
        "seq": "7,16"
      },
      {
        "label": "Ford Motor Company",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Ford_Motor_Company",
        "seq": "24,42"
      }
    ],
    "id": "92cd517187c04052aa28c65e8e7ba93e",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/automobilePlatform",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "From how many different places have participants of Breeders\u0027s Cup Turf come?",
    "SerialNumber": "2865",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/race\u003e \u003chttp://dbpedia.org/resource/Breeders\u0027_Cup_Turf\u003e . ?x \u003chttp://dbpedia.org/property/birthPlace\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Cup Turf",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Breeders\u0027_Cup_Turf",
        "seq": "63,71"
      }
    ],
    "id": "13648ac67f4843b3ad93c7137fcb34bd",
    "predicate mapping": [
      {
        "label": "participants",
        "uri": "http://dbpedia.org/property/race",
        "mappedBy": "word2vec"
      },
      {
        "label": "places",
        "uri": "http://dbpedia.org/property/birthPlace",
        "seq": "24,30",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Was Lionel Messi a member  of the 2009 FIFA World Cup squads?",
    "SerialNumber": "2866",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/2009_FIFA_Club_World_Cup_squads\u003e \u003chttp://dbpedia.org/ontology/currentMember\u003e \u003chttp://dbpedia.org/resource/Lionel_Messi\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "squads world fifa 2009",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/2009_FIFA_Club_World_Cup_squads",
        "seq": "999,1000"
      },
      {
        "label": "Lionel Messi",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Lionel_Messi",
        "seq": "4,16"
      }
    ],
    "id": "3e2b19f37e1342c5a7856184624b9fd1",
    "predicate mapping": [
      {
        "label": "member",
        "uri": "http://dbpedia.org/ontology/currentMember",
        "seq": "19,25",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the company founded by Jim Harris located in Harris County, Texas ?",
    "SerialNumber": "2867",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/foundedBy\u003e \u003chttp://dbpedia.org/resource/Jim_Harris_(entrepreneur)\u003e . ?uri \u003chttp://dbpedia.org/ontology/locationCity\u003e \u003chttp://dbpedia.org/resource/Harris_County,_Texas\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Company\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jim Harris",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Jim_Harris_(entrepreneur)",
        "seq": "28,38"
      },
      {
        "label": "Harris County, Texas",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Harris_County,_Texas",
        "seq": "50,70"
      }
    ],
    "id": "30679d014e3749319a88ec1614bdb393",
    "predicate mapping": [
      {
        "label": "founded by",
        "uri": "http://dbpedia.org/ontology/foundedBy",
        "seq": "17,27",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "located",
        "uri": "http://dbpedia.org/ontology/locationCity",
        "mappedBy": "word2vec"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company",
        "seq": "9,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which video game composed by Hirokazu Tanaka can be played on virtual Console ?",
    "SerialNumber": "2868",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/computingPlatform\u003e \u003chttp://dbpedia.org/resource/Virtual_Console\u003e . ?uri \u003chttp://dbpedia.org/property/composer\u003e \u003chttp://dbpedia.org/resource/Hirokazu_Tanaka\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/VideoGame\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "virtual Console",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Virtual_Console",
        "seq": "62,77"
      },
      {
        "label": "Hirokazu Tanaka",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Hirokazu_Tanaka",
        "seq": "29,44"
      }
    ],
    "id": "b9faf98cfa3b43fb928d2b9eb258ae41",
    "predicate mapping": [
      {
        "label": "played",
        "uri": "http://dbpedia.org/ontology/computingPlatform",
        "mappedBy": "word2vec"
      },
      {
        "label": "composed",
        "uri": "http://dbpedia.org/property/composer",
        "seq": "17,25",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "video game",
        "uri": "http://dbpedia.org/ontology/VideoGame",
        "seq": "6,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "what kind of things play on WBIG FM?",
    "SerialNumber": "2870",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/WBIG-FM\u003e \u003chttp://dbpedia.org/ontology/programmeFormat\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "wbig fm",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/WBIG-FM",
        "seq": "999,1000"
      }
    ],
    "id": "84f0e1da1e174000b08ae2510b0bf079",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/programmeFormat",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Who was the prime minister under which the predecessor of Derick Heathcoat Amory served?",
    "SerialNumber": "2872",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/successor\u003e \u003chttp://dbpedia.org/resource/Derick_Heathcoat-Amory,_1st_Viscount_Amory\u003e . ?x \u003chttp://dbpedia.org/property/primeminister\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Derick Heathcoat Amory",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Derick_Heathcoat-Amory,_1st_Viscount_Amory",
        "seq": "58,80"
      }
    ],
    "id": "ae588c3050cf4a769d629c8c2ecc8893",
    "predicate mapping": [
      {
        "label": "served",
        "uri": "http://dbpedia.org/property/successor",
        "mappedBy": "word2vec"
      },
      {
        "label": "minister prime",
        "uri": "http://dbpedia.org/property/primeminister",
        "seq": "-1,13",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "What are the birth place of the people who are the star of Dhoondte Reh Jaaoge?",
    "SerialNumber": "2874",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Dhoondte_Reh_Jaaoge!_(1998_film)\u003e \u003chttp://dbpedia.org/ontology/starring\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/birthPlace\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Dhoondte Reh Jaaoge",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Dhoondte_Reh_Jaaoge!_(1998_film)",
        "seq": "59,78"
      }
    ],
    "id": "bac4ecaac8954b3d83266bf1363bd5c8",
    "predicate mapping": [
      {
        "label": "star",
        "uri": "http://dbpedia.org/ontology/starring",
        "seq": "51,55",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "birth place",
        "uri": "http://dbpedia.org/ontology/birthPlace",
        "seq": "13,24",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "people",
        "uri": "http://dbpedia.org/ontology/Person",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which relative of George Madison is the appointer of John Drayton ?",
    "SerialNumber": "2877",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/John_Drayton\u003e \u003chttp://dbpedia.org/property/appointer\u003e ?uri. \u003chttp://dbpedia.org/resource/George_Madison\u003e \u003chttp://dbpedia.org/ontology/relation\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "John Drayton",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/John_Drayton",
        "seq": "53,65"
      },
      {
        "label": "George Madison",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/George_Madison",
        "seq": "18,32"
      }
    ],
    "id": "7507c5dcd77b4a1f8662415059e43340",
    "predicate mapping": [
      {
        "label": "appointer",
        "uri": "http://dbpedia.org/property/appointer",
        "seq": "40,49",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "relative",
        "uri": "http://dbpedia.org/ontology/relation",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "List the movies edited by Julian Doyle in which music was composed by Geoffrey Brugon ?",
    "SerialNumber": "2879",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/music\u003e \u003chttp://dbpedia.org/resource/Geoffrey_Burgon\u003e . ?uri \u003chttp://dbpedia.org/property/editing\u003e \u003chttp://dbpedia.org/resource/Julian_Doyle_(filmmaker)\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "geoffrey",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Geoffrey_Burgon",
        "seq": "999,1000"
      },
      {
        "label": "Julian Doyle",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Julian_Doyle_(filmmaker)",
        "seq": "26,38"
      }
    ],
    "id": "0881b71d464e4be09d6650e2467d8008",
    "predicate mapping": [
      {
        "label": "music",
        "uri": "http://dbpedia.org/property/music",
        "seq": "48,53",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "edited by",
        "uri": "http://dbpedia.org/property/editing",
        "seq": "16,25",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What genres of games are available on the Commodore 64?",
    "SerialNumber": "2886",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/computingPlatform\u003e \u003chttp://dbpedia.org/resource/Commodore_64\u003e . ?x \u003chttp://dbpedia.org/property/genre\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/VideoGame\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Commodore 64",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Commodore_64",
        "seq": "42,54"
      }
    ],
    "id": "692a622dfa204b6faf27d4609436b8ae",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/computingPlatform",
        "mappedBy": "word2vec"
      },
      {
        "label": "genre",
        "uri": "http://dbpedia.org/property/genre",
        "seq": "5,10",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "games",
        "uri": "http://dbpedia.org/ontology/VideoGame",
        "seq": "15,20",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "405",
    "question": "How many companies have launched their rockets from the Vandenerg Air base?",
    "SerialNumber": "2888",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/launchSite\u003e \u003chttp://dbpedia.org/resource/Vandenberg_Air_Force_Base\u003e . ?x \u003chttp://dbpedia.org/ontology/manufacturer\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Company\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Vandenerg Air",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Vandenberg_Air_Force_Base",
        "seq": "56,69"
      }
    ],
    "id": "bdf990ee5daf4f10a200bcfd984e01f6",
    "predicate mapping": [
      {
        "label": "launched",
        "uri": "http://dbpedia.org/ontology/launchSite",
        "seq": "24,32",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "base",
        "uri": "http://dbpedia.org/ontology/manufacturer",
        "mappedBy": "word2vec"
      },
      {
        "label": "companies",
        "uri": "http://dbpedia.org/ontology/Company",
        "seq": "9,18",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "In which city of Pittsburg Steelers was the Congress of Inductrial Organization founded ?",
    "SerialNumber": "2892",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Congress_of_Industrial_Organizations\u003e \u003chttp://dbpedia.org/property/founded\u003e ?uri. \u003chttp://dbpedia.org/resource/Pittsburgh_Steelers\u003e \u003chttp://dbpedia.org/property/city\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "organization",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Congress_of_Industrial_Organizations",
        "seq": "999,1000"
      },
      {
        "label": "Pittsburg Steelers",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Pittsburgh_Steelers",
        "seq": "17,35"
      }
    ],
    "id": "2e984fcd973d4c79ae9ab371222218af",
    "predicate mapping": [
      {
        "label": "founded",
        "uri": "http://dbpedia.org/property/founded",
        "seq": "80,87",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "city",
        "uri": "http://dbpedia.org/property/city",
        "seq": "9,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Was Duanne Allman famous for playing the Gibson SG?",
    "SerialNumber": "2894",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Duane_Allman\u003e \u003chttp://dbpedia.org/property/notableInstruments\u003e \u003chttp://dbpedia.org/resource/Gibson_SG\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "allman",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Duane_Allman",
        "seq": "999,1000"
      },
      {
        "label": "Gibson SG",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Gibson_SG",
        "seq": "41,50"
      }
    ],
    "id": "fdb525be2aca4cfda57372b41b1b6b79",
    "predicate mapping": [
      {
        "label": "playing",
        "uri": "http://dbpedia.org/property/notableInstruments",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "316",
    "question": "List the people casted in Betsy\u0027s Wedding and 16 candles?",
    "SerialNumber": "2895",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Betsy\u0027s_Wedding\u003e \u003chttp://dbpedia.org/ontology/starring\u003e ?uri. \u003chttp://dbpedia.org/resource/Sixteen_Candles\u003e \u003chttp://dbpedia.org/property/starring\u003e ?uri . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Betsy\u0027s Wedding",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Betsy\u0027s_Wedding",
        "seq": "26,41"
      },
      {
        "label": "candles",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Sixteen_Candles",
        "seq": "999,1000"
      }
    ],
    "id": "7d51f1bf12ac4424b780213dac02bcb2",
    "predicate mapping": [
      {
        "label": "candles",
        "uri": "http://dbpedia.org/ontology/starring",
        "mappedBy": "word2vec"
      },
      {
        "label": "candles",
        "uri": "http://dbpedia.org/property/starring",
        "mappedBy": "word2vec"
      },
      {
        "label": "candles",
        "uri": "http://dbpedia.org/ontology/Person",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "For how many things are people famous, who were born in Nebraska?",
    "SerialNumber": "2898",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/birthPlace\u003e \u003chttp://dbpedia.org/resource/Nebraska\u003e . ?x \u003chttp://dbpedia.org/ontology/knownFor\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Nebraska",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Nebraska",
        "seq": "56,64"
      }
    ],
    "id": "77907c919f714ac4ac233e3c93545099",
    "predicate mapping": [
      {
        "label": "born in",
        "uri": "http://dbpedia.org/property/birthPlace",
        "seq": "48,55",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "people",
        "uri": "http://dbpedia.org/ontology/knownFor",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "Which rivers start from the Provinces of Zambia?",
    "SerialNumber": "2902",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/settlementType\u003e \u003chttp://dbpedia.org/resource/Provinces_of_Zambia\u003e . ?uri \u003chttp://dbpedia.org/ontology/sourceRegion\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/River\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Provinces of Zambia",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Provinces_of_Zambia",
        "seq": "28,47"
      }
    ],
    "id": "436413f766614075bd1ac508ff48ff64",
    "predicate mapping": [
      {
        "label": "start",
        "uri": "http://dbpedia.org/property/settlementType",
        "mappedBy": "word2vec"
      },
      {
        "label": "start",
        "uri": "http://dbpedia.org/ontology/sourceRegion",
        "mappedBy": "word2vec"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River",
        "seq": "6,11",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "What awards have been given to some screenwriters?",
    "SerialNumber": "2906",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/occupation\u003e \u003chttp://dbpedia.org/resource/Screenwriter\u003e . ?x \u003chttp://dbpedia.org/ontology/award\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "screenwriter",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Screenwriter",
        "seq": "36,48"
      }
    ],
    "id": "9d4bc4521629455eae2f5b6be2f76dc2",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/occupation",
        "mappedBy": "word2vec"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/award",
        "seq": "5,11",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Where is the spouse of Henry Bourchier of Essex buried?",
    "SerialNumber": "2909",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/spouse\u003e \u003chttp://dbpedia.org/resource/Henry_Bourchier,_1st_Earl_of_Essex\u003e . ?x \u003chttp://dbpedia.org/property/placeOfBurial\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "bourchier henry essex",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Henry_Bourchier,_1st_Earl_of_Essex",
        "seq": "999,1000"
      }
    ],
    "id": "b38a612b13ec49d4b8be8365b8a0d89b",
    "predicate mapping": [
      {
        "label": "spouse",
        "uri": "http://dbpedia.org/ontology/spouse",
        "seq": "13,19",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "buried",
        "uri": "http://dbpedia.org/property/placeOfBurial",
        "seq": "48,54",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "406",
    "question": "How many movies have a screenplay located in the States?",
    "SerialNumber": "2912",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/birthPlace\u003e \u003chttp://dbpedia.org/resource/United_States\u003e . ?uri \u003chttp://dbpedia.org/property/screenplay\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "States",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/United_States",
        "seq": "49,55"
      }
    ],
    "id": "20c51164ad5a4b42acd9a417f6770edc",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/ontology/birthPlace",
        "mappedBy": "word2vec"
      },
      {
        "label": "screenplay",
        "uri": "http://dbpedia.org/property/screenplay",
        "seq": "23,33",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Which companies were behind the renovation of McKechnie Field ?",
    "SerialNumber": "2913",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/McKechnie_Field\u003e \u003chttp://dbpedia.org/property/architect\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "McKechnie Field",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/McKechnie_Field",
        "seq": "46,61"
      }
    ],
    "id": "691ab450f3054f89b7b59afe0c27f96f",
    "predicate mapping": [
      {
        "label": "renovation",
        "uri": "http://dbpedia.org/property/architect",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "what cities are close by LoDaisKa ?",
    "SerialNumber": "2920",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/LoDaisKa_Site\u003e \u003chttp://dbpedia.org/ontology/nearestCity\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "lodaiska",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/LoDaisKa_Site",
        "seq": "999,1000"
      }
    ],
    "id": "c1aabd659ada47e2b412d630a3a3814b",
    "predicate mapping": [
      {
        "label": "are",
        "uri": "http://dbpedia.org/ontology/nearestCity",
        "seq": "12,15",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Why did Letita McTavish Hargrave and Sextus Barbour die?",
    "SerialNumber": "2921",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Letitia_MacTavish_Hargrave\u003e \u003chttp://dbpedia.org/ontology/deathCause\u003e ?uri. \u003chttp://dbpedia.org/resource/Sextus_Barbour\u003e \u003chttp://dbpedia.org/property/deathCause\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Letitia_MacTavish_Hargrave",
        "seq": "999,1000"
      },
      {
        "label": "Sextus Barbour",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Sextus_Barbour",
        "seq": "37,51"
      }
    ],
    "id": "7d39f4c231f744dfb4e0f7f5f4f15b7f",
    "predicate mapping": [
      {
        "label": "die",
        "uri": "http://dbpedia.org/ontology/deathCause",
        "mappedBy": "word2vec"
      },
      {
        "label": "die",
        "uri": "http://dbpedia.org/property/deathCause",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "List the softwares which runs on Microsoft Windows and has license as Software as a service?",
    "SerialNumber": "2924",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/operatingSystem\u003e \u003chttp://dbpedia.org/resource/Microsoft_Windows\u003e . ?uri \u003chttp://dbpedia.org/ontology/license\u003e \u003chttp://dbpedia.org/resource/Software_as_a_service\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Software\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Microsoft Windows",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Microsoft_Windows",
        "seq": "33,50"
      },
      {
        "label": "Software as a service",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Software_as_a_service",
        "seq": "70,91"
      }
    ],
    "id": "29584b2edbec44168d3adb4cd1d3f20f",
    "predicate mapping": [
      {
        "label": "runs",
        "uri": "http://dbpedia.org/ontology/operatingSystem",
        "mappedBy": "word2vec"
      },
      {
        "label": "license",
        "uri": "http://dbpedia.org/ontology/license",
        "seq": "59,66",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "software",
        "uri": "http://dbpedia.org/ontology/Software",
        "seq": "9,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "What are the TV shows whose network is also known as the CW?",
    "SerialNumber": "2926",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/sisterNames\u003e \u003chttp://dbpedia.org/resource/The_CW\u003e . ?uri \u003chttp://dbpedia.org/property/network\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "the CW",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_CW",
        "seq": "53,59"
      }
    ],
    "id": "a6de49d9743f440db28ce26337d15730",
    "predicate mapping": [
      {
        "label": "known",
        "uri": "http://dbpedia.org/property/sisterNames",
        "mappedBy": "word2vec"
      },
      {
        "label": "network",
        "uri": "http://dbpedia.org/property/network",
        "seq": "28,35",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "16,21",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What are some tv shows created by Simon Fuller?",
    "SerialNumber": "2927",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/creator\u003e \u003chttp://dbpedia.org/resource/Simon_Fuller\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Simon Fuller",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Simon_Fuller",
        "seq": "34,46"
      }
    ],
    "id": "ce328b878c624b718d5f92fe48d01626",
    "predicate mapping": [
      {
        "label": "created",
        "uri": "http://dbpedia.org/property/creator",
        "mappedBy": "word2vec"
      },
      {
        "label": "created",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "111",
    "question": "Count the number of sports played by the universities whose one of the sports is baketball ?",
    "SerialNumber": "2928",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/athletics\u003e \u003chttp://dbpedia.org/resource/Basketball\u003e . ?x \u003chttp://dbpedia.org/property/athletics\u003e ?uri }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "one",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Basketball",
        "seq": "60,63"
      }
    ],
    "id": "f250fdf5363442e1a68b1575a75f7649",
    "predicate mapping": [
      {
        "label": "baketball",
        "uri": "http://dbpedia.org/ontology/athletics",
        "mappedBy": "word2vec"
      },
      {
        "label": "baketball",
        "uri": "http://dbpedia.org/property/athletics",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Where was the engineer born who manufactured EP R.E.P. 1?",
    "SerialNumber": "2929",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Esnault-Pelterie_R.E.P._1\u003e \u003chttp://dbpedia.org/property/manufacturer\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/birthPlace\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "1",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Esnault-Pelterie_R.E.P._1",
        "seq": "55,56"
      }
    ],
    "id": "c5ad9696ccbc49d48f66061c12d9fce0",
    "predicate mapping": [
      {
        "label": "manufactured",
        "uri": "http://dbpedia.org/property/manufacturer",
        "seq": "32,44",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "EP",
        "uri": "http://dbpedia.org/ontology/birthPlace",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "11",
    "question": "Where has the employee of Columbia Records  worked ?",
    "SerialNumber": "2931",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/employer\u003e \u003chttp://dbpedia.org/resource/Columbia_Records\u003e . ?x \u003chttp://dbpedia.org/ontology/employer\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Columbia Records",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Columbia_Records",
        "seq": "26,42"
      }
    ],
    "id": "91fac607c06844458a5a93efbc30e6cb",
    "predicate mapping": [
      {
        "label": "worked",
        "uri": "http://dbpedia.org/ontology/employer",
        "mappedBy": "word2vec"
      },
      {
        "label": "worked",
        "uri": "http://dbpedia.org/ontology/employer",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "11",
    "question": "What are the sports played by the universities who also plays taekwondo ?",
    "SerialNumber": "2933",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/athletics\u003e \u003chttp://dbpedia.org/resource/Taekwondo\u003e . ?x \u003chttp://dbpedia.org/property/athletics\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "taekwondo",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Taekwondo",
        "seq": "62,71"
      }
    ],
    "id": "574c7a40663240129e6f74a6c30fa086",
    "predicate mapping": [
      {
        "label": "plays",
        "uri": "http://dbpedia.org/property/athletics",
        "mappedBy": "word2vec"
      },
      {
        "label": "plays",
        "uri": "http://dbpedia.org/property/athletics",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "307",
    "question": "Under which scientist did doctoral students erban ieica and Erich Bagge study?",
    "SerialNumber": "2937",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/property/doctoralStudents\u003e \u003chttp://dbpedia.org/resource/Șerban_Țițeica\u003e . ?uri \u003chttp://dbpedia.org/property/doctoralStudents\u003e \u003chttp://dbpedia.org/resource/Erich_Bagge\u003e . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Scientist\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Șerban_Țițeica",
        "seq": "999,1000"
      },
      {
        "label": "Erich Bagge",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Erich_Bagge",
        "seq": "60,71"
      }
    ],
    "id": "5f766cb18b93417495ec541e7749269c",
    "predicate mapping": [
      {
        "label": "doctoral students",
        "uri": "http://dbpedia.org/property/doctoralStudents",
        "seq": "26,43",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "doctoral students",
        "uri": "http://dbpedia.org/property/doctoralStudents",
        "seq": "26,43",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "scientist",
        "uri": "http://dbpedia.org/ontology/Scientist",
        "seq": "12,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "Who did the associated act which is a Peter Frampton production ?",
    "SerialNumber": "2938",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/producer\u003e \u003chttp://dbpedia.org/resource/Peter_Frampton\u003e . ?uri \u003chttp://dbpedia.org/property/associatedActs\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Peter Frampton",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Peter_Frampton",
        "seq": "38,52"
      }
    ],
    "id": "c34a5952b1a648adbac30cc484fc4092",
    "predicate mapping": [
      {
        "label": "production",
        "uri": "http://dbpedia.org/property/producer",
        "mappedBy": "word2vec"
      },
      {
        "label": "associated act",
        "uri": "http://dbpedia.org/property/associatedActs",
        "seq": "12,26",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Give me list of people who were the first to climb a peak in the Yosemite park?",
    "SerialNumber": "2939",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/locatedInArea\u003e \u003chttp://dbpedia.org/resource/Yosemite_National_Park\u003e . ?x \u003chttp://dbpedia.org/ontology/firstAscentPerson\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "yosemite park",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Yosemite_National_Park",
        "seq": "999,1000"
      }
    ],
    "id": "47d731bad7474102bd95407a15b6f410",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/locatedInArea",
        "seq": "58,60",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "first",
        "uri": "http://dbpedia.org/ontology/firstAscentPerson",
        "seq": "36,41",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Where does the river end which starts in Richmond Park?",
    "SerialNumber": "2943",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/sourcePlace\u003e \u003chttp://dbpedia.org/resource/Richmond_Park\u003e . ?x \u003chttp://dbpedia.org/property/mouthLocation\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Stream\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Richmond Park",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Richmond_Park",
        "seq": "41,54"
      }
    ],
    "id": "6611d96f0da74bd29467f037c7bc8e9c",
    "predicate mapping": [
      {
        "label": "starts",
        "uri": "http://dbpedia.org/ontology/sourcePlace",
        "mappedBy": "word2vec"
      },
      {
        "label": "starts",
        "uri": "http://dbpedia.org/property/mouthLocation",
        "mappedBy": "word2vec"
      },
      {
        "label": "starts",
        "uri": "http://dbpedia.org/ontology/Stream",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Is the Kia Sportage similar to the Hyundai Lavita?",
    "SerialNumber": "2945",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Hyundai_Lavita\u003e \u003chttp://dbpedia.org/ontology/relatedMeanOfTransportation\u003e \u003chttp://dbpedia.org/resource/Kia_Sportage\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Hyundai Lavita",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Hyundai_Lavita",
        "seq": "35,49"
      },
      {
        "label": "Kia Sportage",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Kia_Sportage",
        "seq": "7,19"
      }
    ],
    "id": "fc606b3fc3404643a264ed538a54c5c2",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/relatedMeanOfTransportation",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "405",
    "question": "How many nations\u0027 volleyball players have played for the Russian women volleyball team?",
    "SerialNumber": "2947",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/nationalteam\u003e \u003chttp://dbpedia.org/resource/Russia_women\u0027s_national_volleyball_team\u003e . ?x \u003chttp://dbpedia.org/property/placeOfBirth\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Country\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Russian",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Russia_women\u0027s_national_volleyball_team",
        "seq": "57,64"
      }
    ],
    "id": "3778cf6328e9432b8c36e0c47ae65f85",
    "predicate mapping": [
      {
        "label": "nations\u0027",
        "uri": "http://dbpedia.org/property/nationalteam",
        "seq": "9,17",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "uri": "http://dbpedia.org/property/placeOfBirth",
        "mappedBy": "word2vec"
      },
      {
        "label": "nation",
        "uri": "http://dbpedia.org/ontology/Country",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which garrison of East Indies Station is also the route end of Mumbai Vadodara Express ?",
    "SerialNumber": "2948",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Mumbai_Vadodara_Expressway\u003e \u003chttp://dbpedia.org/ontology/routeEnd\u003e ?uri. \u003chttp://dbpedia.org/resource/East_Indies_Station\u003e \u003chttp://dbpedia.org/ontology/garrison\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "vadodara express mumbai",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Mumbai_Vadodara_Expressway",
        "seq": "999,1000"
      },
      {
        "label": "East Indies Station",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/East_Indies_Station",
        "seq": "18,37"
      }
    ],
    "id": "1db09b3583d54788bc6313956b79499f",
    "predicate mapping": [
      {
        "label": "route end",
        "uri": "http://dbpedia.org/ontology/routeEnd",
        "seq": "50,59",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "garrison",
        "uri": "http://dbpedia.org/ontology/garrison",
        "seq": "6,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the tiemzone of Banlung ?",
    "SerialNumber": "2949",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Banlung\u003e \u003chttp://dbpedia.org/ontology/timeZone\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Banlung",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Banlung",
        "seq": "21,28"
      }
    ],
    "id": "ae2e45495c164835a9538dec49cb3cd3",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/timeZone",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who made the engine whose predecessor is the SHO V6?",
    "SerialNumber": "2950",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/predecessor\u003e \u003chttp://dbpedia.org/resource/Ford_SHO_V6_engine\u003e . ?x \u003chttp://dbpedia.org/ontology/manufacturer\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Engine\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "engine sho",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Ford_SHO_V6_engine",
        "seq": "999,1000"
      }
    ],
    "id": "fccee4f131814d4c999faf99f9c8a641",
    "predicate mapping": [
      {
        "label": "predecessor",
        "uri": "http://dbpedia.org/property/predecessor",
        "seq": "26,37",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "made",
        "uri": "http://dbpedia.org/ontology/manufacturer",
        "seq": "4,8",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "engine",
        "uri": "http://dbpedia.org/ontology/Engine",
        "seq": "13,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Does Mauritius follow a parliamentary republic?",
    "SerialNumber": "2951",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Mauritius\u003e \u003chttp://dbpedia.org/property/governmentType\u003e \u003chttp://dbpedia.org/resource/Parliamentary_republic\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Mauritius",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Mauritius",
        "seq": "5,14"
      },
      {
        "label": "parliamentary republic",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Parliamentary_republic",
        "seq": "24,46"
      }
    ],
    "id": "1d52560a0c664dd69770aed6f1cd971b",
    "predicate mapping": [
      {
        "label": "follow",
        "uri": "http://dbpedia.org/property/governmentType",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "In how many places was the album of King Crimson recorded?",
    "SerialNumber": "2952",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/artist\u003e \u003chttp://dbpedia.org/resource/King_Crimson\u003e . ?x \u003chttp://dbpedia.org/ontology/recordedIn\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "King Crimson",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/King_Crimson",
        "seq": "36,48"
      }
    ],
    "id": "a44318040305431cb237c6809f2a8e7c",
    "predicate mapping": [
      {
        "label": "album",
        "uri": "http://dbpedia.org/ontology/artist",
        "mappedBy": "word2vec"
      },
      {
        "label": "recorded",
        "uri": "http://dbpedia.org/ontology/recordedIn",
        "seq": "49,57",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "405",
    "question": "In how many teams have people previously played who play as defencemen?",
    "SerialNumber": "2954",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/position\u003e \u003chttp://dbpedia.org/resource/Defenceman\u003e . ?x \u003chttp://dbpedia.org/ontology/formerTeam\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/SportsTeam\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "previously",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Defenceman",
        "seq": "30,40"
      }
    ],
    "id": "907d667fb8614bfdbc8a5ce883fa99bd",
    "predicate mapping": [
      {
        "label": "play",
        "uri": "http://dbpedia.org/property/position",
        "mappedBy": "word2vec"
      },
      {
        "label": "teams",
        "uri": "http://dbpedia.org/ontology/formerTeam",
        "seq": "12,17",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/SportsTeam",
        "seq": "12,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "What is the name of Mary\u0027s divine child?",
    "SerialNumber": "2961",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/parent\u003e \u003chttp://dbpedia.org/resource/Mary_(mother_of_Jesus)\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Mary",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Mary_(mother_of_Jesus)",
        "seq": "20,24"
      }
    ],
    "id": "3609e1969825458f81798bea8a86a387",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/parent",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Among which sitcoms in which theme music is composed by Gary Portnoy is located in Massachusetts ?",
    "SerialNumber": "2964",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/location\u003e \u003chttp://dbpedia.org/resource/Massachusetts\u003e . ?uri \u003chttp://dbpedia.org/property/themeMusicComposer\u003e \u003chttp://dbpedia.org/resource/Gary_Portnoy\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Massachusetts",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Massachusetts",
        "seq": "83,96"
      },
      {
        "label": "Gary Portnoy",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Gary_Portnoy",
        "seq": "56,68"
      }
    ],
    "id": "44e437e237a94b7abe806fcc1f7ae2e4",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/ontology/location",
        "mappedBy": "word2vec"
      },
      {
        "label": "composed",
        "uri": "http://dbpedia.org/property/themeMusicComposer",
        "seq": "44,52",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "located",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Over which rivers, does a cable stayed bridge exists?",
    "SerialNumber": "2965",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/design\u003e \u003chttp://dbpedia.org/resource/Cable-stayed_bridge\u003e . ?x \u003chttp://dbpedia.org/property/crosses\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "cable stayed bridge",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Cable-stayed_bridge",
        "seq": "26,45"
      }
    ],
    "id": "3dd19cd66683497889c840e33ab0e00d",
    "predicate mapping": [
      {
        "label": "exists",
        "uri": "http://dbpedia.org/property/design",
        "mappedBy": "word2vec"
      },
      {
        "label": "Over",
        "uri": "http://dbpedia.org/property/crosses",
        "seq": "0,4",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "106",
    "question": "Give me everything owned by networks which is lead by Steve Burke?",
    "SerialNumber": "2966",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/keyPerson\u003e \u003chttp://dbpedia.org/resource/Steve_Burke_(businessman)\u003e . ?uri \u003chttp://dbpedia.org/ontology/network\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Steve Burke",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Steve_Burke_(businessman)",
        "seq": "54,65"
      }
    ],
    "id": "3dbc2bb2e2064e068bbd736158623ba3",
    "predicate mapping": [
      {
        "label": "lead",
        "uri": "http://dbpedia.org/ontology/keyPerson",
        "mappedBy": "word2vec"
      },
      {
        "label": "network",
        "uri": "http://dbpedia.org/ontology/network",
        "seq": "28,35",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Ontario\u0027s ice hockey players have been a part of which teams?",
    "SerialNumber": "2967",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/placeOfBirth\u003e \u003chttp://dbpedia.org/resource/Ontario\u003e . ?x \u003chttp://dbpedia.org/ontology/team\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/IceHockeyPlayer\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ontario",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Ontario",
        "seq": "0,7"
      }
    ],
    "id": "471a1edfae9f4e0b86d10cce7f064dd3",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/placeOfBirth",
        "mappedBy": "word2vec"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/team",
        "seq": "55,59",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "ice hockey player",
        "uri": "http://dbpedia.org/ontology/IceHockeyPlayer",
        "seq": "10,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "List the battles in which alumni of US Army Command and General Staff College fought?",
    "SerialNumber": "2969",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/almaMater\u003e \u003chttp://dbpedia.org/resource/United_States_Army_Command_and_General_Staff_College\u003e . ?x \u003chttp://dbpedia.org/property/battles\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "general command college staff",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/United_States_Army_Command_and_General_Staff_College",
        "seq": "999,1000"
      }
    ],
    "id": "39b773349eeb4776848bd72b621b281a",
    "predicate mapping": [
      {
        "label": "alumni of",
        "uri": "http://dbpedia.org/ontology/almaMater",
        "seq": "26,35",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "battles",
        "uri": "http://dbpedia.org/property/battles",
        "seq": "9,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the city with leader as Esther Alder and neighboring municipality as Pregny-Chambsy?",
    "SerialNumber": "2971",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/mayor\u003e \u003chttp://dbpedia.org/resource/Esther_Alder\u003e . ?uri \u003chttp://dbpedia.org/ontology/neighboringMunicipality\u003e \u003chttp://dbpedia.org/resource/Pregny-Chambésy\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Location\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Esther Alder",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Esther_Alder",
        "seq": "29,41"
      },
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Pregny-Chambésy",
        "seq": "999,1000"
      }
    ],
    "id": "928515f8deaa4a1b9982acd9bd90e877",
    "predicate mapping": [
      {
        "label": "leader",
        "uri": "http://dbpedia.org/ontology/mayor",
        "mappedBy": "word2vec"
      },
      {
        "label": "neighboring municipality",
        "uri": "http://dbpedia.org/ontology/neighboringMunicipality",
        "seq": "46,70",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "",
        "uri": "http://dbpedia.org/ontology/Location",
        "seq": "0,0",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "List all the mmebers of  Mekong River Commission?",
    "SerialNumber": "2973",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Mekong_River_Commission\u003e \u003chttp://dbpedia.org/property/membership\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Mekong River Commission",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Mekong_River_Commission",
        "seq": "25,48"
      }
    ],
    "id": "3720fc28f3f94a57bdf95083816cdf8a",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/membership",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What are the academic interests of the advisor of Paul Demiville ?",
    "SerialNumber": "2974",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Paul_Demiéville\u003e \u003chttp://dbpedia.org/ontology/academicAdvisor\u003e ?x . ?x \u003chttp://dbpedia.org/property/fields\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Paul Demiville",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Paul_Demiéville",
        "seq": "50,64"
      }
    ],
    "id": "588f69a6c10c4bfca7c6ecf3d36b73f0",
    "predicate mapping": [
      {
        "label": "academic advisor",
        "uri": "http://dbpedia.org/ontology/academicAdvisor",
        "seq": "-1,15",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "advisor",
        "uri": "http://dbpedia.org/property/fields",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "Who is the founder of the trade union which affiliates Amalgamated Association of Iron and Steel Workers?",
    "SerialNumber": "2976",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Amalgamated_Association_of_Iron_and_Steel_Workers\u003e \u003chttp://dbpedia.org/ontology/affiliation\u003e ?x . ?x \u003chttp://dbpedia.org/property/founded\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TradeUnion\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Amalgamated Association of Iron and Steel Workers",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Amalgamated_Association_of_Iron_and_Steel_Workers",
        "seq": "55,104"
      }
    ],
    "id": "2fe30687c5644f9096c50927e10ec2fe",
    "predicate mapping": [
      {
        "label": "affiliates",
        "uri": "http://dbpedia.org/ontology/affiliation",
        "mappedBy": "word2vec"
      },
      {
        "label": "founder of",
        "uri": "http://dbpedia.org/property/founded",
        "seq": "11,21",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "trade union",
        "uri": "http://dbpedia.org/ontology/TradeUnion",
        "seq": "26,37",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "What royalties\u0027s sepulchre is Mausoleum of Augustus?",
    "SerialNumber": "2977",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/placeOfBurial\u003e \u003chttp://dbpedia.org/resource/Mausoleum_of_Augustus\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Mausoleum of Augustus",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Mausoleum_of_Augustus",
        "seq": "30,51"
      }
    ],
    "id": "c8578e413e244216a605fd070fa1096b",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/placeOfBurial",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "How many cars are similar to the ones assembled in the Jefferson North Assembly?",
    "SerialNumber": "2983",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/assembly\u003e \u003chttp://dbpedia.org/resource/Jefferson_North_Assembly\u003e . ?x \u003chttp://dbpedia.org/property/related\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jefferson North Assembly",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Jefferson_North_Assembly",
        "seq": "55,79"
      }
    ],
    "id": "e2d4df3f532942f8947a0ead70798b87",
    "predicate mapping": [
      {
        "label": "Assembly",
        "uri": "http://dbpedia.org/property/assembly",
        "seq": "71,79",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "assembled",
        "uri": "http://dbpedia.org/property/related",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "What does the river flow into, whose left tributary is Bukovica?",
    "SerialNumber": "2984",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/leftTributary\u003e \u003chttp://dbpedia.org/resource/Bukovica_(river)\u003e . ?x \u003chttp://dbpedia.org/ontology/mouthCountry\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Bukovica",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Bukovica_(river)",
        "seq": "55,63"
      }
    ],
    "id": "583ab0d388bd4c158b0862155dc190de",
    "predicate mapping": [
      {
        "label": "left tributary",
        "uri": "http://dbpedia.org/ontology/leftTributary",
        "seq": "37,51",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "flow",
        "uri": "http://dbpedia.org/ontology/mouthCountry",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "which astronaut\u0027s mission was Apollo 11?",
    "SerialNumber": "2987",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/mission\u003e \u003chttp://dbpedia.org/resource/Apollo_11\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Apollo 11",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Apollo_11",
        "seq": "30,39"
      }
    ],
    "id": "a4aaefe71b4c47fb82c079c3ec2cf474",
    "predicate mapping": [
      {
        "label": "mission",
        "uri": "http://dbpedia.org/property/mission",
        "seq": "18,25",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "8",
    "question": "What came before  PlayStation 4 and uses PlayStation 3 system software as OS?",
    "SerialNumber": "2988",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/successor\u003e \u003chttp://dbpedia.org/resource/PlayStation_4\u003e . ?uri \u003chttp://dbpedia.org/property/os\u003e \u003chttp://dbpedia.org/resource/PlayStation_3_system_software\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "PlayStation 4",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/PlayStation_4",
        "seq": "18,31"
      },
      {
        "label": "PlayStation 3 system software",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/PlayStation_3_system_software",
        "seq": "41,70"
      }
    ],
    "id": "76af8656dedf4ec2bf0348b2eddf906b",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/successor",
        "mappedBy": "word2vec"
      },
      {
        "label": "OS",
        "uri": "http://dbpedia.org/property/os",
        "seq": "74,76",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "List the common sports played by Polytechnic University of the Philippines Bataan and Jamiatu Muslim Mindanao ?",
    "SerialNumber": "2995",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_–_Bataan\u003e \u003chttp://dbpedia.org/ontology/sport\u003e ?uri. \u003chttp://dbpedia.org/resource/Jamiatu_Muslim_Mindanao\u003e \u003chttp://dbpedia.org/ontology/athletics\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "polytechnic philippines university bataan",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_–_Bataan",
        "seq": "999,1000"
      },
      {
        "label": "Jamiatu Muslim Mindanao",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Jamiatu_Muslim_Mindanao",
        "seq": "86,109"
      }
    ],
    "id": "0f029e1473eb473db6af6662d3cb6fa4",
    "predicate mapping": [
      {
        "label": "sport",
        "uri": "http://dbpedia.org/ontology/sport",
        "seq": "16,21",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "Bataan",
        "uri": "http://dbpedia.org/ontology/athletics",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "List down all the cast members of Tony n\u0027 Tina\u0027s Wedding ?",
    "SerialNumber": "2996",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Tony_n\u0027_Tina\u0027s_Wedding\u003e \u003chttp://dbpedia.org/property/starring\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Tony n\u0027 Tina\u0027s Wedding",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Tony_n\u0027_Tina\u0027s_Wedding",
        "seq": "34,56"
      }
    ],
    "id": "6dabffad323d44009367b7eaaf220c21",
    "predicate mapping": [
      {
        "label": "members",
        "uri": "http://dbpedia.org/property/starring",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What are some seas inside europe ?",
    "SerialNumber": "3002",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/location\u003e \u003chttp://dbpedia.org/resource/Europe\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Sea\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "europe",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Europe",
        "seq": "26,32"
      }
    ],
    "id": "f8412d27be264040b18097376e40aa6f",
    "predicate mapping": [
      {
        "label": "inside",
        "uri": "http://dbpedia.org/ontology/location",
        "mappedBy": "word2vec"
      },
      {
        "label": "sea",
        "uri": "http://dbpedia.org/ontology/Sea",
        "seq": "14,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Where do the politicians, Blanche Bruce and John Franklin Miller work?",
    "SerialNumber": "3006",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Blanche_Bruce\u003e \u003chttp://dbpedia.org/property/office\u003e ?uri. \u003chttp://dbpedia.org/resource/John_Franklin_Miller_(senator)\u003e \u003chttp://dbpedia.org/property/office\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Blanche Bruce",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Blanche_Bruce",
        "seq": "26,39"
      },
      {
        "label": "John Franklin Miller",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/John_Franklin_Miller_(senator)",
        "seq": "44,64"
      }
    ],
    "id": "6c76c96b0fa54b84a967935d0fa16694",
    "predicate mapping": [
      {
        "label": "work",
        "uri": "http://dbpedia.org/property/office",
        "mappedBy": "word2vec"
      },
      {
        "label": "work",
        "uri": "http://dbpedia.org/property/office",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What region was Gloria Schaffer born in, which also contains Newington?",
    "SerialNumber": "3010",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Gloria_Schaffer\u003e \u003chttp://dbpedia.org/property/birthPlace\u003e ?uri. \u003chttp://dbpedia.org/resource/Newington,_Connecticut\u003e \u003chttp://dbpedia.org/ontology/isPartOf\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Gloria Schaffer",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Gloria_Schaffer",
        "seq": "16,31"
      },
      {
        "label": "newington",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Newington,_Connecticut",
        "seq": "999,1000"
      }
    ],
    "id": "f49d08f78f3a4c64a3963126cb43d7e9",
    "predicate mapping": [
      {
        "label": "born in",
        "uri": "http://dbpedia.org/property/birthPlace",
        "seq": "32,39",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/isPartOf",
        "seq": "37,39",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "which award has been won by Claudia Moro?",
    "SerialNumber": "3011",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Claudia_Moro\u003e \u003chttp://dbpedia.org/property/title\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Claudia Moro",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Claudia_Moro",
        "seq": "28,40"
      }
    ],
    "id": "169a1ce1f8ac4c5ba9a92103237113c6",
    "predicate mapping": [
      {
        "label": "won",
        "uri": "http://dbpedia.org/property/title",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Where was Henri, Duke of Rohan laid to rest?",
    "SerialNumber": "3013",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Henri,_Duke_of_Rohan\u003e \u003chttp://dbpedia.org/ontology/placeOfBurial\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Henri, Duke of Rohan",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Henri,_Duke_of_Rohan",
        "seq": "10,30"
      }
    ],
    "id": "311bb63ae12d4dd999e195d827cf60d2",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/placeOfBurial",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Does the lena river flow into the Laptev Sea?",
    "SerialNumber": "3016",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Lena_River\u003e \u003chttp://dbpedia.org/ontology/mouthMountain\u003e \u003chttp://dbpedia.org/resource/Laptev_Sea\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "lena river",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Lena_River",
        "seq": "9,19"
      },
      {
        "label": "Laptev Sea",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Laptev_Sea",
        "seq": "34,44"
      }
    ],
    "id": "363f13c9bc2242038c131f095d4c866d",
    "predicate mapping": [
      {
        "label": "flow",
        "uri": "http://dbpedia.org/ontology/mouthMountain",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "List the things for which people of New Orleans are famous for?",
    "SerialNumber": "3022",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/placeOfBirth\u003e \u003chttp://dbpedia.org/resource/New_Orleans\u003e . ?x \u003chttp://dbpedia.org/property/knownFor\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "New Orleans",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/New_Orleans",
        "seq": "36,47"
      }
    ],
    "id": "5aa02b6827bf4e9590a49a469b64904a",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/placeOfBirth",
        "mappedBy": "word2vec"
      },
      {
        "label": "famous",
        "uri": "http://dbpedia.org/property/knownFor",
        "mappedBy": "word2vec"
      },
      {
        "label": "famous",
        "uri": "http://dbpedia.org/ontology/Person",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Which artist was taught by Jos Ruiz y Blasco?",
    "SerialNumber": "3027",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/training\u003e \u003chttp://dbpedia.org/resource/José_Ruiz_y_Blasco\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Artist\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jos Ruiz y Blasco",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/José_Ruiz_y_Blasco",
        "seq": "27,44"
      }
    ],
    "id": "64641fa005c74f08b24a64c47b15f3be",
    "predicate mapping": [
      {
        "label": "taught",
        "uri": "http://dbpedia.org/property/training",
        "mappedBy": "word2vec"
      },
      {
        "label": "artist",
        "uri": "http://dbpedia.org/ontology/Artist",
        "seq": "6,12",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Was Zachary taylor a major general?",
    "SerialNumber": "3029",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Zachary_Taylor\u003e \u003chttp://dbpedia.org/property/rank\u003e \u003chttp://dbpedia.org/resource/Major_general_(United_States)\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Zachary taylor",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Zachary_Taylor",
        "seq": "4,18"
      },
      {
        "label": "major general",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Major_general_(United_States)",
        "seq": "21,34"
      }
    ],
    "id": "7e2d4902f5374b70b03c59179b9e2ac1",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/rank",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Which country\u0027s people have graduated from Ghana School of Law?",
    "SerialNumber": "3034",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/almaMater\u003e \u003chttp://dbpedia.org/resource/Ghana_School_of_Law\u003e . ?x \u003chttp://dbpedia.org/ontology/nationality\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ghana School of Law",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ghana_School_of_Law",
        "seq": "43,62"
      }
    ],
    "id": "8b827358accc43048f434244318b58c5",
    "predicate mapping": [
      {
        "label": "graduated from",
        "uri": "http://dbpedia.org/property/almaMater",
        "seq": "28,42",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "country\u0027s",
        "uri": "http://dbpedia.org/ontology/nationality",
        "seq": "6,15",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "people",
        "uri": "http://dbpedia.org/ontology/Person",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What awards have been given to the dude who made Shaun the Sheep?",
    "SerialNumber": "3035",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/notableworks\u003e \u003chttp://dbpedia.org/resource/Shaun_the_Sheep\u003e . ?x \u003chttp://dbpedia.org/ontology/award\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Shaun the Sheep",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Shaun_the_Sheep",
        "seq": "49,64"
      }
    ],
    "id": "37f1ac3a34a64c90ab93ffe69af727ca",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/notableworks",
        "mappedBy": "word2vec"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/award",
        "seq": "5,11",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "made",
        "uri": "http://dbpedia.org/ontology/Person",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Where is  Dofinivka Estuary  located ?",
    "SerialNumber": "3036",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Dofinivka_Estuary\u003e \u003chttp://dbpedia.org/property/location\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Dofinivka Estuary",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Dofinivka_Estuary",
        "seq": "10,27"
      }
    ],
    "id": "aab7be38505a4ecdb2689be99d9d9de4",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/property/location",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Does Shaun Thong a member of Audi?",
    "SerialNumber": "3042",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Shaun_Thong\u003e \u003chttp://dbpedia.org/property/currentTeam\u003e \u003chttp://dbpedia.org/resource/Audi\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Shaun Thong",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Shaun_Thong",
        "seq": "5,16"
      },
      {
        "label": "Audi",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Audi",
        "seq": "29,33"
      }
    ],
    "id": "ef36454fc013444f981fe8a7069ceee8",
    "predicate mapping": [
      {
        "label": "member",
        "uri": "http://dbpedia.org/property/currentTeam",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "Give me a list of computers whose CPU is in the US.",
    "SerialNumber": "3043",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/locationCity\u003e \u003chttp://dbpedia.org/resource/United_States\u003e . ?uri \u003chttp://dbpedia.org/ontology/cpu\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/InformationAppliance\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/United_States",
        "seq": "999,1000"
      }
    ],
    "id": "c6d4e596834546d09a59e92ba09dc966",
    "predicate mapping": [
      {
        "label": "US.",
        "uri": "http://dbpedia.org/property/locationCity",
        "mappedBy": "word2vec"
      },
      {
        "label": "CPU",
        "uri": "http://dbpedia.org/ontology/cpu",
        "seq": "34,37",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "me",
        "uri": "http://dbpedia.org/ontology/InformationAppliance",
        "seq": "5,7",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Where does the river end, into which the Rakitnica flows?",
    "SerialNumber": "3046",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/rightTributary\u003e \u003chttp://dbpedia.org/resource/Rakitnica\u003e . ?x \u003chttp://dbpedia.org/ontology/mouthCountry\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Rakitnica",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Rakitnica",
        "seq": "41,50"
      }
    ],
    "id": "e65463440f1f4b59b6d0163ad10c490e",
    "predicate mapping": [
      {
        "label": "flows",
        "uri": "http://dbpedia.org/ontology/rightTributary",
        "mappedBy": "word2vec"
      },
      {
        "label": "flows",
        "uri": "http://dbpedia.org/ontology/mouthCountry",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Do the west coast airlines fly to seattle?",
    "SerialNumber": "3048",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/West_Coast_Airlines\u003e \u003chttp://dbpedia.org/ontology/targetAirport\u003e \u003chttp://dbpedia.org/resource/Seattle\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "west coast airlines",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/West_Coast_Airlines",
        "seq": "7,26"
      },
      {
        "label": "seattle",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Seattle",
        "seq": "34,41"
      }
    ],
    "id": "b4b6b1d0dcab4cbb934923e070092d67",
    "predicate mapping": [
      {
        "label": "fly",
        "uri": "http://dbpedia.org/ontology/targetAirport",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who was the silver medalist of Gymnastics at the 2008 Summer Olympics  Women\u0027s artistic individual all-around ?",
    "SerialNumber": "3050",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Gymnastics_at_the_2008_Summer_Olympics_–_Women\u0027s_artistic_individual_all-around\u003e \u003chttp://dbpedia.org/ontology/silverMedalist\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "individual gymnastics all-around olympics artistic",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Gymnastics_at_the_2008_Summer_Olympics_–_Women\u0027s_artistic_individual_all-around",
        "seq": "999,1000"
      }
    ],
    "id": "ec0ca62208e240c396994de301d25f2b",
    "predicate mapping": [
      {
        "label": "medalist silver",
        "uri": "http://dbpedia.org/ontology/silverMedalist",
        "seq": "-1,14",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "7",
    "question": "Who  works  at the American Magazine and New York Post?",
    "SerialNumber": "3051",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/ontology/employer\u003e \u003chttp://dbpedia.org/resource/The_American_Magazine\u003e . ?uri \u003chttp://dbpedia.org/ontology/employer\u003e \u003chttp://dbpedia.org/resource/New_York_Post\u003e . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "the American Magazine",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_American_Magazine",
        "seq": "15,36"
      },
      {
        "label": "New York Post",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/New_York_Post",
        "seq": "41,54"
      }
    ],
    "id": "5c3207ee849d4e9cb44f0ee1d698b602",
    "predicate mapping": [
      {
        "label": "works",
        "uri": "http://dbpedia.org/ontology/employer",
        "mappedBy": "word2vec"
      },
      {
        "label": "works",
        "uri": "http://dbpedia.org/ontology/employer",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which past members of the The Conglomerate (American group) also sang Take Me There (Blackstreet \u0026 Ma song)?",
    "SerialNumber": "3052",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/The_Conglomerate_(American_group)\u003e \u003chttp://dbpedia.org/property/pastMembers\u003e ?uri. \u003chttp://dbpedia.org/resource/Take_Me_There_(Blackstreet_\u0026_Mýa_song)\u003e \u003chttp://dbpedia.org/ontology/musicalBand\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "The Conglomerate (American group)",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Conglomerate_(American_group)",
        "seq": "26,59"
      },
      {
        "label": "Take Me There",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Take_Me_There_(Blackstreet_\u0026_Mýa_song)",
        "seq": "70,83"
      }
    ],
    "id": "5f0af10a644a420ebcd9811b94687f7d",
    "predicate mapping": [
      {
        "label": "past members",
        "uri": "http://dbpedia.org/property/pastMembers",
        "seq": "6,18",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "Ma",
        "uri": "http://dbpedia.org/ontology/musicalBand",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "Collaborators of Demis Roussos have composed music for which movies?",
    "SerialNumber": "3054",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/associatedActs\u003e \u003chttp://dbpedia.org/resource/Demis_Roussos\u003e . ?uri \u003chttp://dbpedia.org/ontology/musicComposer\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Demis Roussos",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Demis_Roussos",
        "seq": "17,30"
      }
    ],
    "id": "7f55bf607c9e490aae4ff2f9f40a27e2",
    "predicate mapping": [
      {
        "label": "music",
        "uri": "http://dbpedia.org/property/associatedActs",
        "mappedBy": "word2vec"
      },
      {
        "label": "composed",
        "uri": "http://dbpedia.org/ontology/musicComposer",
        "seq": "36,44",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "61,66",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Where did these popular aeroplanes - Focke Wulf 260 and Start+Flug H 101 originate?",
    "SerialNumber": "3058",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Focke-Wulf_Fw_260\u003e \u003chttp://dbpedia.org/property/nationalOrigin\u003e ?uri. \u003chttp://dbpedia.org/resource/Start_+_Flug_H-101\u003e \u003chttp://dbpedia.org/property/nationalOrigin\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "focke wulf 260",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Focke-Wulf_Fw_260",
        "seq": "999,1000"
      },
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Start_+_Flug_H-101",
        "seq": "999,1000"
      }
    ],
    "id": "2130571cb0394b1b82ad2a8c6f4f159f",
    "predicate mapping": [
      {
        "label": "originate",
        "uri": "http://dbpedia.org/property/nationalOrigin",
        "mappedBy": "word2vec"
      },
      {
        "label": "originate",
        "uri": "http://dbpedia.org/property/nationalOrigin",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which source of river Raa is the sovereign state of Adriatic sea ?",
    "SerialNumber": "3059",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Raša_(river)\u003e \u003chttp://dbpedia.org/ontology/source\u003e ?uri. \u003chttp://dbpedia.org/resource/Adriatic_Sea\u003e \u003chttp://dbpedia.org/ontology/country\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "river",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Raša_(river)",
        "seq": "999,1000"
      },
      {
        "label": "Adriatic sea",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Adriatic_Sea",
        "seq": "52,64"
      }
    ],
    "id": "da0c3ca5edfb4bad9ef869c38119a10e",
    "predicate mapping": [
      {
        "label": "source",
        "uri": "http://dbpedia.org/ontology/source",
        "seq": "6,12",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "sovereign state",
        "uri": "http://dbpedia.org/ontology/country",
        "seq": "33,48",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Where did the film director of Kala Pani die?",
    "SerialNumber": "3067",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Kala_Pani_(1958_film)\u003e \u003chttp://dbpedia.org/ontology/director\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/deathPlace\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Kala Pani",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Kala_Pani_(1958_film)",
        "seq": "31,40"
      }
    ],
    "id": "0cd31fba24c240f588c0916b021f4d63",
    "predicate mapping": [
      {
        "label": "film director",
        "uri": "http://dbpedia.org/ontology/director",
        "seq": "14,27",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "die",
        "uri": "http://dbpedia.org/ontology/deathPlace",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Does Timothy Morton study Buddhism?",
    "SerialNumber": "3068",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Timothy_Morton\u003e \u003chttp://dbpedia.org/property/mainInterests\u003e \u003chttp://dbpedia.org/resource/Buddhism\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Timothy Morton",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Timothy_Morton",
        "seq": "5,19"
      },
      {
        "label": "Buddhism",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Buddhism",
        "seq": "26,34"
      }
    ],
    "id": "18e1b907a21644199bcf31fb9629f79c",
    "predicate mapping": [
      {
        "label": "study",
        "uri": "http://dbpedia.org/property/mainInterests",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name a queen whose parent is Ptolemy XII Auletes and consort is Ptolemy XIII Theos Philopator?",
    "SerialNumber": "3069",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/parent\u003e \u003chttp://dbpedia.org/resource/Ptolemy_XII_Auletes\u003e . ?uri \u003chttp://dbpedia.org/property/spouse\u003e \u003chttp://dbpedia.org/resource/Ptolemy_XIII_Theos_Philopator\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Royalty\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ptolemy XII Auletes",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Ptolemy_XII_Auletes",
        "seq": "29,48"
      },
      {
        "label": "Ptolemy XIII Theos Philopator",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Ptolemy_XIII_Theos_Philopator",
        "seq": "64,93"
      }
    ],
    "id": "81ced9f9e10b4380a691a73a17095c6e",
    "predicate mapping": [
      {
        "label": "parent",
        "uri": "http://dbpedia.org/ontology/parent",
        "seq": "19,25",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "consort",
        "uri": "http://dbpedia.org/property/spouse",
        "seq": "53,60",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "queen",
        "uri": "http://dbpedia.org/ontology/Royalty",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which universit\u0027s affiliation is with Kalpan, Inc. and has campus at Iowa ?",
    "SerialNumber": "3070",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/affiliations\u003e \u003chttp://dbpedia.org/resource/Kaplan,_Inc.\u003e . ?uri \u003chttp://dbpedia.org/ontology/campus\u003e \u003chttp://dbpedia.org/resource/Iowa\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/University\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Kaplan,_Inc.",
        "seq": "999,1000"
      },
      {
        "label": "Iowa",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Iowa",
        "seq": "69,73"
      }
    ],
    "id": "c3fb5965d89548719ebf83511d9e262a",
    "predicate mapping": [
      {
        "label": "affiliation",
        "uri": "http://dbpedia.org/property/affiliations",
        "seq": "18,29",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "campus",
        "uri": "http://dbpedia.org/ontology/campus",
        "seq": "59,65",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "universit\u0027s",
        "uri": "http://dbpedia.org/ontology/University",
        "seq": "6,17",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "Which movies have someone on their cast from Shelby County in Tennessee?",
    "SerialNumber": "3072",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/hometown\u003e \u003chttp://dbpedia.org/resource/Shelby_County,_Tennessee\u003e . ?uri \u003chttp://dbpedia.org/property/starring\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "tennessee shelby county",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Shelby_County,_Tennessee",
        "seq": "999,1000"
      }
    ],
    "id": "b4a89e8c9b55499eaa9963fe4b9d6152",
    "predicate mapping": [
      {
        "label": "Tennessee",
        "uri": "http://dbpedia.org/ontology/hometown",
        "mappedBy": "word2vec"
      },
      {
        "label": "in",
        "uri": "http://dbpedia.org/property/starring",
        "seq": "59,61",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "6,11",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "Which venues are located at places governed by John Roberts?",
    "SerialNumber": "3074",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/leader\u003e \u003chttp://dbpedia.org/resource/John_Roberts\u003e . ?uri \u003chttp://dbpedia.org/property/address\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Venue\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "John Roberts",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/John_Roberts",
        "seq": "47,59"
      }
    ],
    "id": "1a7b4ab5c3674875a82e577a3fcb3a55",
    "predicate mapping": [
      {
        "label": "governed",
        "uri": "http://dbpedia.org/ontology/leader",
        "mappedBy": "word2vec"
      },
      {
        "label": "governed",
        "uri": "http://dbpedia.org/property/address",
        "mappedBy": "word2vec"
      },
      {
        "label": "venue",
        "uri": "http://dbpedia.org/ontology/Venue",
        "seq": "6,11",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "101",
    "question": "How many people are in the continental army?",
    "SerialNumber": "3075",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/ontology/militaryBranch\u003e \u003chttp://dbpedia.org/resource/Continental_Army\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "continental army",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Continental_Army",
        "seq": "27,43"
      }
    ],
    "id": "7abaec31e6094f6eac72313b8dd8dc32",
    "predicate mapping": [
      {
        "label": "people",
        "uri": "http://dbpedia.org/ontology/militaryBranch",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What river originates in the Connecticut Lakes?",
    "SerialNumber": "3077",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/source\u003e \u003chttp://dbpedia.org/resource/Connecticut_Lakes\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/River\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Connecticut Lakes",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Connecticut_Lakes",
        "seq": "29,46"
      }
    ],
    "id": "98ad740059cf4598828aa46f80707524",
    "predicate mapping": [
      {
        "label": "originates",
        "uri": "http://dbpedia.org/ontology/source",
        "mappedBy": "word2vec"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River",
        "seq": "5,10",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "101",
    "question": "How many things are aired on BBC HD?",
    "SerialNumber": "3079",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/ontology/network\u003e \u003chttp://dbpedia.org/resource/BBC_HD\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "BBC HD",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/BBC_HD",
        "seq": "29,35"
      }
    ],
    "id": "602d5f8103c345b1bf3b59a8f4fbcb01",
    "predicate mapping": [
      {
        "label": "aired",
        "uri": "http://dbpedia.org/ontology/network",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "In which countries are there banks which came after the National Commercial Bank of Mauritius?",
    "SerialNumber": "3081",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/National_Commercial_Bank_Mauritius\u003e \u003chttp://dbpedia.org/ontology/successor\u003e ?x . ?x \u003chttp://dbpedia.org/property/locationCountry\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Bank\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "National Commercial Bank of Mauritius",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/National_Commercial_Bank_Mauritius",
        "seq": "56,93"
      }
    ],
    "id": "010e9f9ec10d4cf5bd9455353215d507",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/successor",
        "mappedBy": "word2vec"
      },
      {
        "label": "countries",
        "uri": "http://dbpedia.org/property/locationCountry",
        "seq": "9,18",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "bank",
        "uri": "http://dbpedia.org/ontology/Bank",
        "seq": "29,33",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which Paramount TV show was produced by Glen and Les Charles ?",
    "SerialNumber": "3088",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/executiveProducer\u003e \u003chttp://dbpedia.org/resource/Glen_and_Les_Charles\u003e . ?uri \u003chttp://dbpedia.org/property/company\u003e \u003chttp://dbpedia.org/resource/Paramount_Television\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Glen and Les Charles",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Glen_and_Les_Charles",
        "seq": "40,60"
      },
      {
        "label": "paramount",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Paramount_Television",
        "seq": "999,1000"
      }
    ],
    "id": "5a15996c69764d78950ee50018ff8de5",
    "predicate mapping": [
      {
        "label": "produced",
        "uri": "http://dbpedia.org/ontology/executiveProducer",
        "seq": "28,36",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "TV",
        "uri": "http://dbpedia.org/property/company",
        "mappedBy": "word2vec"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "19,23",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Who is the mayor of the city under which is the constituency of Zora Singh Maan?",
    "SerialNumber": "3096",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Zora_Singh_Maan\u003e \u003chttp://dbpedia.org/property/constituency\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/leaderName\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Zora Singh Maan",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Zora_Singh_Maan",
        "seq": "64,79"
      }
    ],
    "id": "9a5eae5ceec54a8e97a3c8d7ecdb1149",
    "predicate mapping": [
      {
        "label": "constituency",
        "uri": "http://dbpedia.org/property/constituency",
        "seq": "48,60",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "city",
        "uri": "http://dbpedia.org/ontology/leaderName",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who is the incumbent of Al Gore presidential campaign of 2000 ?",
    "SerialNumber": "3099",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Al_Gore_presidential_campaign,_2000\u003e \u003chttp://dbpedia.org/ontology/incumbent\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "presidential campaign gore 2000",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Al_Gore_presidential_campaign,_2000",
        "seq": "999,1000"
      }
    ],
    "id": "240ab1b4acb848ce816bdc5a4660b11b",
    "predicate mapping": [
      {
        "label": "incumbent",
        "uri": "http://dbpedia.org/ontology/incumbent",
        "seq": "11,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Is Albert P Clark buried in Colorado?",
    "SerialNumber": "3105",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Albert_P._Clark\u003e \u003chttp://dbpedia.org/property/placeofburial\u003e \u003chttp://dbpedia.org/resource/Colorado\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "albert clark",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Albert_P._Clark",
        "seq": "999,1000"
      },
      {
        "label": "Colorado",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Colorado",
        "seq": "28,36"
      }
    ],
    "id": "1604b4deca8f4b089da3546474871043",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/placeofburial",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "307",
    "question": "Who is  office holder of constituencies Duboce Triangle and Noe Valley ?",
    "SerialNumber": "3106",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/property/constituency\u003e \u003chttp://dbpedia.org/resource/Duboce_Triangle,_San_Francisco\u003e . ?uri \u003chttp://dbpedia.org/property/constituency\u003e \u003chttp://dbpedia.org/resource/Noe_Valley,_San_Francisco\u003e . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/OfficeHolder\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "triangle duboce",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Duboce_Triangle,_San_Francisco",
        "seq": "999,1000"
      },
      {
        "label": "valley",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Noe_Valley,_San_Francisco",
        "seq": "999,1000"
      }
    ],
    "id": "c373b33ce50b4f15976673862387f06d",
    "predicate mapping": [
      {
        "label": "constituencies",
        "uri": "http://dbpedia.org/property/constituency",
        "seq": "25,39",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "constituencies",
        "uri": "http://dbpedia.org/property/constituency",
        "seq": "25,39",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "office holder",
        "uri": "http://dbpedia.org/ontology/OfficeHolder",
        "seq": "8,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "For how many things are americans famous for?",
    "SerialNumber": "3107",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/placeOfBirth\u003e \u003chttp://dbpedia.org/resource/United_States\u003e . ?x \u003chttp://dbpedia.org/ontology/knownFor\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/United_States",
        "seq": "999,1000"
      }
    ],
    "id": "a473965ed74b45298f4f8082bca57f56",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/placeOfBirth",
        "mappedBy": "word2vec"
      },
      {
        "label": "famous",
        "uri": "http://dbpedia.org/ontology/knownFor",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "Which politician was succeeded by someone who graduated from the Instituts d\u0027tudes politiques?",
    "SerialNumber": "3108",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/almaMater\u003e \u003chttp://dbpedia.org/resource/Instituts_d\u0027études_politiques\u003e . ?uri \u003chttp://dbpedia.org/property/successor\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/OfficeHolder\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "politiques instituts",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Instituts_d\u0027études_politiques",
        "seq": "999,1000"
      }
    ],
    "id": "ac238bf4d1e14571a3b37e506efd4240",
    "predicate mapping": [
      {
        "label": "graduated from",
        "uri": "http://dbpedia.org/ontology/almaMater",
        "seq": "46,60",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "politiques",
        "uri": "http://dbpedia.org/property/successor",
        "mappedBy": "word2vec"
      },
      {
        "label": "politiques",
        "uri": "http://dbpedia.org/ontology/OfficeHolder",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who created the world series of Poker?",
    "SerialNumber": "3110",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/World_Series_of_Poker\u003e \u003chttp://dbpedia.org/property/founded\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "world series of Poker",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/World_Series_of_Poker",
        "seq": "16,37"
      }
    ],
    "id": "ebfe588dc9854e4db5a96b4bb467c612",
    "predicate mapping": [
      {
        "label": "created",
        "uri": "http://dbpedia.org/property/founded",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Is the Hyundai Lavita assembled in Ulsan?",
    "SerialNumber": "3111",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Hyundai_Lavita\u003e \u003chttp://dbpedia.org/property/assembly\u003e \u003chttp://dbpedia.org/resource/Ulsan\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Hyundai Lavita",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Hyundai_Lavita",
        "seq": "7,21"
      },
      {
        "label": "Ulsan",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Ulsan",
        "seq": "35,40"
      }
    ],
    "id": "ffc8b63b6f384ab18b8f65a4d3dd31d4",
    "predicate mapping": [
      {
        "label": "assembled",
        "uri": "http://dbpedia.org/property/assembly",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Which countries came together to serve a greater purpose and founded South Asia Subregional Economic Cooperation?",
    "SerialNumber": "3112",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/South_Asia_Subregional_Economic_Cooperation\u003e \u003chttp://dbpedia.org/property/membership\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "South Asia Subregional Economic Cooperation",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/South_Asia_Subregional_Economic_Cooperation",
        "seq": "69,112"
      }
    ],
    "id": "e15981cdcc5a4f23935cf46e161ee0c0",
    "predicate mapping": [
      {
        "label": "founded",
        "uri": "http://dbpedia.org/property/membership",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which owner of Drop.io made Sean Parker famous?",
    "SerialNumber": "3115",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Drop.io\u003e \u003chttp://dbpedia.org/property/owner\u003e ?uri. \u003chttp://dbpedia.org/resource/Sean_Parker\u003e \u003chttp://dbpedia.org/ontology/knownFor\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Drop.io",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Drop.io",
        "seq": "15,22"
      },
      {
        "label": "Sean Parker",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Sean_Parker",
        "seq": "28,39"
      }
    ],
    "id": "2a705d023eea446eb1e7b31a390a4146",
    "predicate mapping": [
      {
        "label": "owner",
        "uri": "http://dbpedia.org/property/owner",
        "seq": "6,11",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "famous",
        "uri": "http://dbpedia.org/ontology/knownFor",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which kmascot od seneca Academy is also the species of The Fox and the Cat ?",
    "SerialNumber": "3117",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/The_Fox_and_the_Cat\u003e \u003chttp://dbpedia.org/property/species\u003e ?uri. \u003chttp://dbpedia.org/resource/Seneca_Academy_and_Circle_School\u003e \u003chttp://dbpedia.org/property/mascot\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "The Fox and the Cat",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Fox_and_the_Cat",
        "seq": "55,74"
      },
      {
        "label": "academy seneca",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Seneca_Academy_and_Circle_School",
        "seq": "999,1000"
      }
    ],
    "id": "813f18d7591b4b3f89070f3f5831e627",
    "predicate mapping": [
      {
        "label": "species",
        "uri": "http://dbpedia.org/property/species",
        "seq": "44,51",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "mascot",
        "uri": "http://dbpedia.org/property/mascot",
        "seq": "7,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which tv show was preceded by The spirit of Christmas and voice to the character was given by Mona Marshall ?",
    "SerialNumber": "3119",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/previousWork\u003e \u003chttp://dbpedia.org/resource/The_Spirit_of_Christmas_(short_film)\u003e . ?uri \u003chttp://dbpedia.org/property/voices\u003e \u003chttp://dbpedia.org/resource/Mona_Marshall\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "The spirit of Christmas",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Spirit_of_Christmas_(short_film)",
        "seq": "30,53"
      },
      {
        "label": "Mona Marshall",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Mona_Marshall",
        "seq": "94,107"
      }
    ],
    "id": "dd1b888f16a14a13b8be3e662804a5d9",
    "predicate mapping": [
      {
        "label": "character",
        "uri": "http://dbpedia.org/ontology/previousWork",
        "mappedBy": "word2vec"
      },
      {
        "label": "voice",
        "uri": "http://dbpedia.org/property/voices",
        "seq": "58,63",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "9,13",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Jimmie Fisher and Winston Bryant were governors under which president?",
    "SerialNumber": "3126",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Jimmie_Lou_Fisher\u003e \u003chttp://dbpedia.org/property/governor\u003e ?uri. \u003chttp://dbpedia.org/resource/Winston_Bryant\u003e \u003chttp://dbpedia.org/property/governor\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "jimmie fisher",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Jimmie_Lou_Fisher",
        "seq": "999,1000"
      },
      {
        "label": "Winston Bryant",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Winston_Bryant",
        "seq": "18,32"
      }
    ],
    "id": "7320bf155b9b4a90b729bd36263698da",
    "predicate mapping": [
      {
        "label": "governor",
        "uri": "http://dbpedia.org/property/governor",
        "seq": "38,46",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "governor",
        "uri": "http://dbpedia.org/property/governor",
        "seq": "38,46",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "Which shows are similar to the ones produced by Phil Collinson?",
    "SerialNumber": "3127",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/executiveProducer\u003e \u003chttp://dbpedia.org/resource/Phil_Collinson\u003e . ?uri \u003chttp://dbpedia.org/ontology/related\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Phil Collinson",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Phil_Collinson",
        "seq": "48,62"
      }
    ],
    "id": "65de0b27d7cf414daa73bab1546dfaab",
    "predicate mapping": [
      {
        "label": "produced",
        "uri": "http://dbpedia.org/ontology/executiveProducer",
        "seq": "36,44",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "similar",
        "uri": "http://dbpedia.org/ontology/related",
        "mappedBy": "word2vec"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "6,11",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Who is the fictional character who starred in The Dognapper?",
    "SerialNumber": "3131",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/voice\u003e \u003chttp://dbpedia.org/resource/The_Dognapper\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/FictionalCharacter\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "The Dognapper",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Dognapper",
        "seq": "46,59"
      }
    ],
    "id": "65a7bbb407e44d46825ede7581db9462",
    "predicate mapping": [
      {
        "label": "starred",
        "uri": "http://dbpedia.org/ontology/voice",
        "mappedBy": "word2vec"
      },
      {
        "label": "fictional character",
        "uri": "http://dbpedia.org/ontology/FictionalCharacter",
        "seq": "11,30",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "Enumerate all the first teams of the GPs which were held in Watkins Glen, NY?",
    "SerialNumber": "3133",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/location\u003e \u003chttp://dbpedia.org/resource/Watkins_Glen,_New_York\u003e . ?x \u003chttp://dbpedia.org/property/firstTeam\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "watkins glen,",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Watkins_Glen,_New_York",
        "seq": "999,1000"
      }
    ],
    "id": "613c74a4ec09400a94fd8ede2e063e5c",
    "predicate mapping": [
      {
        "label": "NY",
        "uri": "http://dbpedia.org/property/location",
        "mappedBy": "word2vec"
      },
      {
        "label": "first team",
        "uri": "http://dbpedia.org/property/firstTeam",
        "seq": "18,28",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "108",
    "question": "Count the number of movies whose distributor is RKO Pictures and director of photography is Gregg Toland?",
    "SerialNumber": "3139",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/property/distributor\u003e \u003chttp://dbpedia.org/resource/RKO_Pictures\u003e . ?uri \u003chttp://dbpedia.org/ontology/cinematography\u003e \u003chttp://dbpedia.org/resource/Gregg_Toland\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "RKO Pictures",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/RKO_Pictures",
        "seq": "48,60"
      },
      {
        "label": "Gregg Toland",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Gregg_Toland",
        "seq": "92,104"
      }
    ],
    "id": "9993c21e0dba4189a4d49112ea149a76",
    "predicate mapping": [
      {
        "label": "distributor",
        "uri": "http://dbpedia.org/property/distributor",
        "seq": "33,44",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "photography",
        "uri": "http://dbpedia.org/ontology/cinematography",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "8",
    "question": "Who has allegiance is Colony of Virginia and buried in Montpelier?",
    "SerialNumber": "3141",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/allegiance\u003e \u003chttp://dbpedia.org/resource/Colony_of_Virginia\u003e . ?uri \u003chttp://dbpedia.org/property/restingplace\u003e \u003chttp://dbpedia.org/resource/Montpelier_(Orange,_Virginia)\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Colony of Virginia",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Colony_of_Virginia",
        "seq": "22,40"
      },
      {
        "label": "Montpelier",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Montpelier_(Orange,_Virginia)",
        "seq": "55,65"
      }
    ],
    "id": "5bf4a1c66058437cb656e5b1c6588eac",
    "predicate mapping": [
      {
        "label": "allegiance",
        "uri": "http://dbpedia.org/property/allegiance",
        "seq": "8,18",
        "mappedBy": "byLabelMatch"
      },
      {
        "uri": "http://dbpedia.org/property/restingplace",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Give me the list of cars which are the predecessor of Full Sized Cars?",
    "SerialNumber": "3142",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/class\u003e \u003chttp://dbpedia.org/resource/Full-size_car\u003e . ?x \u003chttp://dbpedia.org/ontology/predecessor\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Automobile\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "full",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Full-size_car",
        "seq": "999,1000"
      }
    ],
    "id": "6b40bf5e283244129850be2446ce0074",
    "predicate mapping": [
      {
        "label": "Cars",
        "uri": "http://dbpedia.org/property/class",
        "mappedBy": "word2vec"
      },
      {
        "label": "predecessor",
        "uri": "http://dbpedia.org/ontology/predecessor",
        "seq": "39,50",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "me",
        "uri": "http://dbpedia.org/ontology/Automobile",
        "seq": "5,7",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "Who served a vice president buried in United First Parish Church?",
    "SerialNumber": "3143",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/restingplace\u003e \u003chttp://dbpedia.org/resource/United_First_Parish_Church\u003e . ?uri \u003chttp://dbpedia.org/ontology/vicePresident\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "United First Parish Church",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/United_First_Parish_Church",
        "seq": "38,64"
      }
    ],
    "id": "22086cbb41ac4acc823ba66b6334f11d",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/restingplace",
        "mappedBy": "word2vec"
      },
      {
        "label": "vice president",
        "uri": "http://dbpedia.org/ontology/vicePresident",
        "seq": "13,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Does Cohoes a junction on the NY State Route 470?",
    "SerialNumber": "3144",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/New_York_State_Route_470\u003e \u003chttp://dbpedia.org/ontology/routeJunction\u003e \u003chttp://dbpedia.org/resource/Cohoes,_New_York\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "state route 470",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/New_York_State_Route_470",
        "seq": "999,1000"
      },
      {
        "label": "cohoes",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Cohoes,_New_York",
        "seq": "999,1000"
      }
    ],
    "id": "9d6b44c745cc4b13a87b0664f5ba8a0b",
    "predicate mapping": [
      {
        "label": "junction route",
        "uri": "http://dbpedia.org/ontology/routeJunction",
        "seq": "-1,13",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the river with source as Columbia Lake and river mouth is located in Clatsop Country ?",
    "SerialNumber": "3149",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/riverMouth\u003e \u003chttp://dbpedia.org/resource/Clatsop_County,_Oregon\u003e . ?uri \u003chttp://dbpedia.org/ontology/source\u003e \u003chttp://dbpedia.org/resource/Columbia_Lake\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/River\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "clatsop",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Clatsop_County,_Oregon",
        "seq": "999,1000"
      },
      {
        "label": "Columbia Lake",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Columbia_Lake",
        "seq": "30,43"
      }
    ],
    "id": "232324046fea420f9ef510ab09298d99",
    "predicate mapping": [
      {
        "label": "river mouth",
        "uri": "http://dbpedia.org/ontology/riverMouth",
        "seq": "48,59",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "source",
        "uri": "http://dbpedia.org/ontology/source",
        "seq": "20,26",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Is my truly truly fair the band of mitch miller?",
    "SerialNumber": "3151",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/My_Truly,_Truly_Fair\u003e \u003chttp://dbpedia.org/ontology/musicalBand\u003e \u003chttp://dbpedia.org/resource/Mitch_Miller\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "truly fair",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/My_Truly,_Truly_Fair",
        "seq": "999,1000"
      },
      {
        "label": "mitch miller",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Mitch_Miller",
        "seq": "35,47"
      }
    ],
    "id": "1dabbe38304b45038e9853ea185a6280",
    "predicate mapping": [
      {
        "label": "band",
        "uri": "http://dbpedia.org/ontology/musicalBand",
        "seq": "27,31",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "101",
    "question": "Count all the Colonels?",
    "SerialNumber": "3156",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/property/rank\u003e \u003chttp://dbpedia.org/resource/Colonel_(United_States)\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Colonel",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Colonel_(United_States)",
        "seq": "14,21"
      }
    ],
    "id": "44f1c8f9f2544b208b2f41cb608b27ab",
    "predicate mapping": [
      {
        "label": "Count",
        "uri": "http://dbpedia.org/property/rank",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who was on the first team in the GPs that were held at Watkins Glen, NY?",
    "SerialNumber": "3158",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/location\u003e \u003chttp://dbpedia.org/resource/Watkins_Glen,_New_York\u003e . ?x \u003chttp://dbpedia.org/property/firstTeam\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/GrandPrix\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "watkins glen,",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Watkins_Glen,_New_York",
        "seq": "999,1000"
      }
    ],
    "id": "95d1d72d4de845859f814f734b971bd0",
    "predicate mapping": [
      {
        "label": "NY",
        "uri": "http://dbpedia.org/property/location",
        "mappedBy": "word2vec"
      },
      {
        "label": "first team",
        "uri": "http://dbpedia.org/property/firstTeam",
        "seq": "15,25",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "NY",
        "uri": "http://dbpedia.org/ontology/GrandPrix",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who produces the trains operated by the MTR?",
    "SerialNumber": "3162",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/operator\u003e \u003chttp://dbpedia.org/resource/MTR\u003e . ?x \u003chttp://dbpedia.org/ontology/manufacturer\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Train\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "MTR",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/MTR",
        "seq": "40,43"
      }
    ],
    "id": "7ee73bf122af4474ab57198183ee3f32",
    "predicate mapping": [
      {
        "label": "operated",
        "uri": "http://dbpedia.org/ontology/operator",
        "mappedBy": "word2vec"
      },
      {
        "label": "operated",
        "uri": "http://dbpedia.org/ontology/manufacturer",
        "mappedBy": "word2vec"
      },
      {
        "label": "train",
        "uri": "http://dbpedia.org/ontology/Train",
        "seq": "17,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the agency of Election Commission of Thailand ?",
    "SerialNumber": "3164",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Election_Commission_of_Thailand\u003e \u003chttp://dbpedia.org/property/agencyName\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Election Commission of Thailand",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Election_Commission_of_Thailand",
        "seq": "19,50"
      }
    ],
    "id": "8a4ee894762240cbaa743c2639734575",
    "predicate mapping": [
      {
        "label": "agency name",
        "uri": "http://dbpedia.org/property/agencyName",
        "seq": "-1,10",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the second track list of Dschinghis Khan (song) ?",
    "SerialNumber": "3165",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Dschinghis_Khan_(song)\u003e \u003chttp://dbpedia.org/ontology/subsequentWork\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Dschinghis Khan (song)",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Dschinghis_Khan_(song)",
        "seq": "33,55"
      }
    ],
    "id": "f8fbc5bc7c8a4272bcfeae43342ee9b0",
    "predicate mapping": [
      {
        "label": "Khan",
        "uri": "http://dbpedia.org/ontology/subsequentWork",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which writer of Tales of Suspense is also the writer of karakuri Dji Ultimo ?",
    "SerialNumber": "3166",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Tales_of_Suspense\u003e \u003chttp://dbpedia.org/property/writers\u003e ?uri. \u003chttp://dbpedia.org/resource/Karakuri_Dôji_Ultimo\u003e \u003chttp://dbpedia.org/property/author\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Tales of Suspense",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Tales_of_Suspense",
        "seq": "16,33"
      },
      {
        "label": "karakuri ultimo",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Karakuri_Dôji_Ultimo",
        "seq": "999,1000"
      }
    ],
    "id": "afccda799b6b41138bb5203359ad1618",
    "predicate mapping": [
      {
        "label": "writer",
        "uri": "http://dbpedia.org/property/writers",
        "seq": "6,12",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "writer",
        "uri": "http://dbpedia.org/property/author",
        "seq": "6,12",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Who was the influencer of Dave Attel who also starred in Adios Amigo?",
    "SerialNumber": "3167",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Dave_Attell\u003e \u003chttp://dbpedia.org/ontology/influencedBy\u003e ?uri. \u003chttp://dbpedia.org/resource/Adiós_Amigo\u003e \u003chttp://dbpedia.org/ontology/starring\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Dave Attel",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Dave_Attell",
        "seq": "26,36"
      },
      {
        "label": "Adios Amigo",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Adiós_Amigo",
        "seq": "57,68"
      }
    ],
    "id": "a759221f4e9b4ea3a2b9d8654e1bc7cd",
    "predicate mapping": [
      {
        "label": "influencer",
        "uri": "http://dbpedia.org/ontology/influencedBy",
        "mappedBy": "word2vec"
      },
      {
        "label": "starred",
        "uri": "http://dbpedia.org/ontology/starring",
        "seq": "46,53",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Who is the producer of the album, after which A Nice pair was released ?",
    "SerialNumber": "3168",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/A_Nice_Pair\u003e \u003chttp://dbpedia.org/ontology/previousWork\u003e ?x . ?x \u003chttp://dbpedia.org/property/producer\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "A Nice pair",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/A_Nice_Pair",
        "seq": "46,57"
      }
    ],
    "id": "b270a1df7e304d6bbec623691016b511",
    "predicate mapping": [
      {
        "label": "released",
        "uri": "http://dbpedia.org/ontology/previousWork",
        "mappedBy": "word2vec"
      },
      {
        "label": "producer",
        "uri": "http://dbpedia.org/property/producer",
        "seq": "11,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "Which politicians live in a city led by T.S. Thakur?",
    "SerialNumber": "3170",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/leader\u003e \u003chttp://dbpedia.org/resource/T._S._Thakur\u003e . ?uri \u003chttp://dbpedia.org/ontology/residence\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Thakur",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/T._S._Thakur",
        "seq": "45,51"
      }
    ],
    "id": "6b036672b009486aba8ca22f384a054b",
    "predicate mapping": [
      {
        "label": "led",
        "uri": "http://dbpedia.org/ontology/leader",
        "seq": "33,36",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "city",
        "uri": "http://dbpedia.org/ontology/residence",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Who is the military general buried in St Mary\u0027s Church, Battersea?",
    "SerialNumber": "3171",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/placeofburial\u003e \u003chttp://dbpedia.org/resource/St_Mary\u0027s_Church,_Battersea\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MilitaryPerson\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "St Mary\u0027s Church, Battersea",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/St_Mary\u0027s_Church,_Battersea",
        "seq": "38,65"
      }
    ],
    "id": "c453adcc2e0940139832c62258fcdaa2",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/placeofburial",
        "mappedBy": "word2vec"
      },
      {
        "label": "military",
        "uri": "http://dbpedia.org/ontology/MilitaryPerson",
        "seq": "11,19",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "Which wars were fought when the commanders involved served under PM Choi Tu Son?",
    "SerialNumber": "3172",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/primeminister\u003e \u003chttp://dbpedia.org/resource/Choi_Tu-son\u003e . ?uri \u003chttp://dbpedia.org/ontology/commander\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MilitaryConflict\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Choi Tu Son",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Choi_Tu-son",
        "seq": "68,79"
      }
    ],
    "id": "4bd7ce92e5834b2b9f27c18942dd990c",
    "predicate mapping": [
      {
        "label": "PM",
        "uri": "http://dbpedia.org/property/primeminister",
        "mappedBy": "word2vec"
      },
      {
        "label": "commander",
        "uri": "http://dbpedia.org/ontology/commander",
        "seq": "32,41",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "PM",
        "uri": "http://dbpedia.org/ontology/MilitaryConflict",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Give me a list of everyone who manages the famous rock art sites?",
    "SerialNumber": "3175",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/architecture\u003e \u003chttp://dbpedia.org/resource/Rock_art\u003e . ?x \u003chttp://dbpedia.org/ontology/governingBody\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "rock art",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Rock_art",
        "seq": "50,58"
      }
    ],
    "id": "6aa8a3b5ed004373b608912919fe9db9",
    "predicate mapping": [
      {
        "label": "sites",
        "uri": "http://dbpedia.org/property/architecture",
        "mappedBy": "word2vec"
      },
      {
        "label": "sites",
        "uri": "http://dbpedia.org/ontology/governingBody",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Did Jerry Rice study in Oktoc Mississippi?",
    "SerialNumber": "3176",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Jerry_Rice\u003e \u003chttp://dbpedia.org/property/highSchool\u003e \u003chttp://dbpedia.org/resource/Oktoc,_Mississippi\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jerry Rice",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Jerry_Rice",
        "seq": "4,14"
      },
      {
        "label": "mississippi oktoc",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Oktoc,_Mississippi",
        "seq": "999,1000"
      }
    ],
    "id": "9c1ea109b00f4f5aba49d87f8fac3deb",
    "predicate mapping": [
      {
        "label": "Mississippi",
        "uri": "http://dbpedia.org/property/highSchool",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Food in which countries has shallot in it?",
    "SerialNumber": "3178",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/ingredient\u003e \u003chttp://dbpedia.org/resource/Shallot\u003e . ?x \u003chttp://dbpedia.org/ontology/country\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Food\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "shallot",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Shallot",
        "seq": "28,35"
      }
    ],
    "id": "77e5540b4af34b73b9c43dd62c69c556",
    "predicate mapping": [
      {
        "label": "countries",
        "uri": "http://dbpedia.org/ontology/ingredient",
        "mappedBy": "word2vec"
      },
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/country",
        "seq": "5,7",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "Food",
        "uri": "http://dbpedia.org/ontology/Food",
        "seq": "0,4",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the country which lies on the European route E8, and where Ragnhild Jolson was born?",
    "SerialNumber": "3181",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/European_route_E8\u003e \u003chttp://dbpedia.org/ontology/county\u003e ?uri. \u003chttp://dbpedia.org/resource/Ragnhild_Jølsen\u003e \u003chttp://dbpedia.org/property/birthplace\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "European route E8",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/European_route_E8",
        "seq": "38,55"
      },
      {
        "label": "ragnhild",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Ragnhild_Jølsen",
        "seq": "999,1000"
      }
    ],
    "id": "351b32db9d724cfd823b5948b2ced6dd",
    "predicate mapping": [
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/county",
        "seq": "12,19",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "born",
        "uri": "http://dbpedia.org/property/birthplace",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What are the television shows whose distributer is HBO?",
    "SerialNumber": "3182",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/distributor\u003e \u003chttp://dbpedia.org/resource/HBO\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "HBO",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/HBO",
        "seq": "51,54"
      }
    ],
    "id": "f5e9009261864d4a998a4815dabb3404",
    "predicate mapping": [
      {
        "label": "distributer",
        "uri": "http://dbpedia.org/property/distributor",
        "mappedBy": "word2vec"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "13,28",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Did Carolyn Heinrich study at the Vanderbilt?",
    "SerialNumber": "3183",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Carolyn_Heinrich\u003e \u003chttp://dbpedia.org/ontology/institution\u003e \u003chttp://dbpedia.org/resource/Vanderbilt_University\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Carolyn Heinrich",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Carolyn_Heinrich",
        "seq": "4,20"
      },
      {
        "label": "Vanderbilt",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Vanderbilt_University",
        "seq": "34,44"
      }
    ],
    "id": "b95b28576f18419c894ce4f86851e7c4",
    "predicate mapping": [
      {
        "label": "study",
        "uri": "http://dbpedia.org/ontology/institution",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "403",
    "question": "How many cars succeeded the cars which were similar to Cadillac Fleetwood?",
    "SerialNumber": "3186",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { \u003chttp://dbpedia.org/resource/Cadillac_Fleetwood\u003e \u003chttp://dbpedia.org/property/related\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/predecessor\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Automobile\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Cadillac Fleetwood",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Cadillac_Fleetwood",
        "seq": "55,73"
      }
    ],
    "id": "1dc65e5b1efd45e997dab9d523cfc041",
    "predicate mapping": [
      {
        "label": "similar",
        "uri": "http://dbpedia.org/property/related",
        "mappedBy": "word2vec"
      },
      {
        "label": "similar",
        "uri": "http://dbpedia.org/ontology/predecessor",
        "mappedBy": "word2vec"
      },
      {
        "label": "similar",
        "uri": "http://dbpedia.org/ontology/Automobile",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which person won Screen actors Guild Life Time Achievement award and has resting palce in Palo Alto, California ?",
    "SerialNumber": "3188",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/restingPlace\u003e \u003chttp://dbpedia.org/resource/Palo_Alto,_California\u003e . ?uri \u003chttp://dbpedia.org/ontology/award\u003e \u003chttp://dbpedia.org/resource/Screen_Actors_Guild_Life_Achievement_Award\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Palo Alto, California",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Palo_Alto,_California",
        "seq": "90,111"
      },
      {
        "label": "achievement screen actors",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Screen_Actors_Guild_Life_Achievement_Award",
        "seq": "999,1000"
      }
    ],
    "id": "f41a1ab1a8a64e70891750e378d66e93",
    "predicate mapping": [
      {
        "label": "resting",
        "uri": "http://dbpedia.org/property/restingPlace",
        "seq": "73,80",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "award",
        "uri": "http://dbpedia.org/ontology/award",
        "seq": "59,64",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/Person",
        "seq": "6,12",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Give me a list of all the people driving at pole positions in the Grand Prixes where Renault was a first team?",
    "SerialNumber": "3189",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/firstTeam\u003e \u003chttp://dbpedia.org/resource/Renault_in_Formula_One\u003e . ?x \u003chttp://dbpedia.org/ontology/poleDriver\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/GrandPrix\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "renault",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Renault_in_Formula_One",
        "seq": "999,1000"
      }
    ],
    "id": "900ed9da86ce4991a9cef44d4e61b24f",
    "predicate mapping": [
      {
        "label": "first team",
        "uri": "http://dbpedia.org/property/firstTeam",
        "seq": "99,109",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "pole",
        "uri": "http://dbpedia.org/ontology/poleDriver",
        "seq": "44,48",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "Grand Prix",
        "uri": "http://dbpedia.org/ontology/GrandPrix",
        "seq": "66,76",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which mainter of  Cheasty Boulevard South is also the county seat of the King County, Washingtonsu ?",
    "SerialNumber": "3190",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Cheasty_Boulevard_South\u003e \u003chttp://dbpedia.org/ontology/maintainedBy\u003e ?uri. \u003chttp://dbpedia.org/resource/King_County,_Washington\u003e \u003chttp://dbpedia.org/ontology/countySeat\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Cheasty Boulevard South",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Cheasty_Boulevard_South",
        "seq": "18,41"
      },
      {
        "label": "King County, Washington",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/King_County,_Washington",
        "seq": "73,96"
      }
    ],
    "id": "0518e52148a646b18bab0d50998ab176",
    "predicate mapping": [
      {
        "label": "su",
        "uri": "http://dbpedia.org/ontology/maintainedBy",
        "mappedBy": "word2vec"
      },
      {
        "label": "county seat",
        "uri": "http://dbpedia.org/ontology/countySeat",
        "seq": "54,65",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the sea located near Europe and has a nearby city as Rostock ?",
    "SerialNumber": "3193",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/cities\u003e \u003chttp://dbpedia.org/resource/Rostock\u003e . ?uri \u003chttp://dbpedia.org/ontology/location\u003e \u003chttp://dbpedia.org/resource/Europe\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Sea\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Rostock",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Rostock",
        "seq": "58,65"
      },
      {
        "label": "Europe",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Europe",
        "seq": "26,32"
      }
    ],
    "id": "fbd5f953b14447ef811cb0338ee88e8e",
    "predicate mapping": [
      {
        "label": "city",
        "uri": "http://dbpedia.org/property/cities",
        "seq": "50,54",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "nearby",
        "uri": "http://dbpedia.org/ontology/location",
        "mappedBy": "word2vec"
      },
      {
        "label": "sea",
        "uri": "http://dbpedia.org/ontology/Sea",
        "seq": "9,12",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Which team\u0027s players have played in the national hockey league?",
    "SerialNumber": "3196",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/league\u003e \u003chttp://dbpedia.org/resource/National_Hockey_League\u003e . ?x \u003chttp://dbpedia.org/ontology/team\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Athlete\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "national hockey league",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/National_Hockey_League",
        "seq": "40,62"
      }
    ],
    "id": "6310baf4b9d740f5a47f9ae2e0b34b5d",
    "predicate mapping": [
      {
        "label": "league",
        "uri": "http://dbpedia.org/property/league",
        "seq": "56,62",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/team",
        "seq": "6,10",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "played",
        "uri": "http://dbpedia.org/ontology/Athlete",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which founder of European School, karlsruhe is also the jursdiction of Eurpoean Border of Coast guard ?",
    "SerialNumber": "3197",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/European_Border_and_Coast_Guard\u003e \u003chttp://dbpedia.org/property/jurisdiction\u003e ?uri. \u003chttp://dbpedia.org/resource/European_School,_Karlsruhe\u003e \u003chttp://dbpedia.org/property/founder\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "european",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/European_Border_and_Coast_Guard",
        "seq": "999,1000"
      },
      {
        "label": "European School, karlsruhe",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/European_School,_Karlsruhe",
        "seq": "17,43"
      }
    ],
    "id": "814c2cbb08a04c3ebd6aff1b47275883",
    "predicate mapping": [
      {
        "label": "guard",
        "uri": "http://dbpedia.org/property/jurisdiction",
        "mappedBy": "word2vec"
      },
      {
        "label": "founder of",
        "uri": "http://dbpedia.org/property/founder",
        "seq": "6,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Trevor Peacock has narrated in which movie?",
    "SerialNumber": "3200",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/narrator\u003e \u003chttp://dbpedia.org/resource/Trevor_Peacock\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Trevor Peacock",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Trevor_Peacock",
        "seq": "0,14"
      }
    ],
    "id": "6e5cd8ecf19a490b8da0b62c0e2a9a30",
    "predicate mapping": [
      {
        "label": "narrated",
        "uri": "http://dbpedia.org/property/narrator",
        "mappedBy": "word2vec"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "37,42",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What team has Sam Keller and Jim McMilin played for?",
    "SerialNumber": "3202",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Sam_Keller\u003e \u003chttp://dbpedia.org/ontology/formerTeam\u003e ?uri. \u003chttp://dbpedia.org/resource/Jim_McMillin\u003e \u003chttp://dbpedia.org/ontology/team\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Sam Keller",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Sam_Keller",
        "seq": "14,24"
      },
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Jim_McMillin",
        "seq": "999,1000"
      }
    ],
    "id": "862ee1ccae36438fa2850a2dad3471f7",
    "predicate mapping": [
      {
        "label": "team for",
        "uri": "http://dbpedia.org/ontology/formerTeam",
        "seq": "-1,7",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "played for",
        "uri": "http://dbpedia.org/ontology/team",
        "seq": "41,51",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which work institutions of the Andrew Schally is the  alma mater of the Mara Eugenia Rojas Correa ?",
    "SerialNumber": "3205",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Andrew_Schally\u003e \u003chttp://dbpedia.org/property/workInstitutions\u003e ?uri. \u003chttp://dbpedia.org/resource/María_Eugenia_Rojas_Correa\u003e \u003chttp://dbpedia.org/property/almaMater\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Andrew Schally",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Andrew_Schally",
        "seq": "31,45"
      },
      {
        "label": "eugenia correa rojas",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/María_Eugenia_Rojas_Correa",
        "seq": "999,1000"
      }
    ],
    "id": "a24560d63e05412bb56c5fac0df13755",
    "predicate mapping": [
      {
        "label": "work institutions",
        "uri": "http://dbpedia.org/property/workInstitutions",
        "seq": "6,23",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/property/almaMater",
        "seq": "54,64",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "What religions do diplomats typically follow?",
    "SerialNumber": "3206",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/profession\u003e \u003chttp://dbpedia.org/resource/Diplomacy\u003e . ?x \u003chttp://dbpedia.org/property/religion\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Diplomacy",
        "seq": "999,1000"
      }
    ],
    "id": "ee3ee4db6ae94b3d9abdf399e280c592",
    "predicate mapping": [
      {
        "label": "follow",
        "uri": "http://dbpedia.org/ontology/profession",
        "mappedBy": "word2vec"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/property/religion",
        "seq": "5,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Who is the owner of Ford Motor Credit comapny which is also the builder of FORD SHO V8 engine ?",
    "SerialNumber": "3208",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Ford_Motor_Credit_Company\u003e \u003chttp://dbpedia.org/property/owner\u003e ?uri. \u003chttp://dbpedia.org/resource/Ford_SHO_V8_engine\u003e \u003chttp://dbpedia.org/ontology/manufacturer\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "credit",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Ford_Motor_Credit_Company",
        "seq": "999,1000"
      },
      {
        "label": "FORD SHO V8 engine",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ford_SHO_V8_engine",
        "seq": "75,93"
      }
    ],
    "id": "fe9e7f00884542aebb30f18c996e0f9b",
    "predicate mapping": [
      {
        "label": "owner",
        "uri": "http://dbpedia.org/property/owner",
        "seq": "11,16",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "builder",
        "uri": "http://dbpedia.org/ontology/manufacturer",
        "seq": "64,71",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "who are some miss michigan usa?",
    "SerialNumber": "3211",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/title\u003e \u003chttp://dbpedia.org/resource/Miss_Michigan_USA\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "miss michigan usa",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Miss_Michigan_USA",
        "seq": "13,30"
      }
    ],
    "id": "e72c8d6ef90a427baa7e385ccb063824",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/title",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "What are the films whose atleast one cast member died due to Colorectal cancer?",
    "SerialNumber": "3212",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/deathCause\u003e \u003chttp://dbpedia.org/resource/Colorectal_cancer\u003e . ?uri \u003chttp://dbpedia.org/property/starring\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Colorectal cancer",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Colorectal_cancer",
        "seq": "61,78"
      }
    ],
    "id": "14beb01d38c546a58565e06c61c1f773",
    "predicate mapping": [
      {
        "label": "due",
        "uri": "http://dbpedia.org/ontology/deathCause",
        "mappedBy": "word2vec"
      },
      {
        "label": "due",
        "uri": "http://dbpedia.org/property/starring",
        "mappedBy": "word2vec"
      },
      {
        "label": "films",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "13,18",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which cport of Vishwajyot High School is also the genere of Battle chess ",
    "SerialNumber": "3216",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Battle_Chess\u003e \u003chttp://dbpedia.org/property/genre\u003e ?uri. \u003chttp://dbpedia.org/resource/Vishwajyot_High_School\u003e \u003chttp://dbpedia.org/ontology/sport\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Battle chess",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Battle_Chess",
        "seq": "60,72"
      },
      {
        "label": "Vishwajyot High School",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Vishwajyot_High_School",
        "seq": "15,37"
      }
    ],
    "id": "6e739eefd2bb47bb96e6386e4f9cb125",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/genre",
        "mappedBy": "word2vec"
      },
      {
        "uri": "http://dbpedia.org/ontology/sport",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Was Henry Knox a major general?",
    "SerialNumber": "3221",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Henry_Knox\u003e \u003chttp://dbpedia.org/ontology/militaryRank\u003e \u003chttp://dbpedia.org/resource/Major_general_(United_States)\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Henry Knox",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Henry_Knox",
        "seq": "4,14"
      },
      {
        "label": "major general",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Major_general_(United_States)",
        "seq": "17,30"
      }
    ],
    "id": "3c01ec18928a47818e34bd8753ddd084",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/militaryRank",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "List the common relegion affiliation of khadra Haji Ismail and Yasmin khatun ?",
    "SerialNumber": "3224",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Khadra_Haji_Ismail_Geid\u003e \u003chttp://dbpedia.org/property/religion\u003e ?uri. \u003chttp://dbpedia.org/resource/Yasmin_Khatun\u003e \u003chttp://dbpedia.org/ontology/religion\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "khadra ismail haji",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Khadra_Haji_Ismail_Geid",
        "seq": "999,1000"
      },
      {
        "label": "Yasmin khatun",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Yasmin_Khatun",
        "seq": "63,76"
      }
    ],
    "id": "2b275605f1424ad1853d8f7367592875",
    "predicate mapping": [
      {
        "label": "Ismail",
        "uri": "http://dbpedia.org/property/religion",
        "mappedBy": "word2vec"
      },
      {
        "label": "Ismail",
        "uri": "http://dbpedia.org/ontology/religion",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "Cleopatra V of Egypt is father to which royalty?",
    "SerialNumber": "3227",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/mother\u003e \u003chttp://dbpedia.org/resource/Cleopatra_V_of_Egypt\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Cleopatra V",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Cleopatra_V_of_Egypt",
        "seq": "0,11"
      }
    ],
    "id": "7ad74ad36f964369a61126ec8c40b05c",
    "predicate mapping": [
      {
        "label": "royalty",
        "uri": "http://dbpedia.org/property/mother",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "406",
    "question": "How many TV show has distributor located in Burbank California ?",
    "SerialNumber": "3231",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/locationCity\u003e \u003chttp://dbpedia.org/resource/Burbank,_California\u003e . ?uri \u003chttp://dbpedia.org/property/distributor\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Burbank California",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Burbank,_California",
        "seq": "44,62"
      }
    ],
    "id": "700a76b55b6d42619332fe4a076f5180",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/ontology/locationCity",
        "mappedBy": "word2vec"
      },
      {
        "label": "distributor",
        "uri": "http://dbpedia.org/property/distributor",
        "seq": "21,32",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "12,16",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "NAme the emplyer for whihc Manu cornet has worked and also written in Google Web Toolkit ?",
    "SerialNumber": "3232",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Manu_Cornet\u003e \u003chttp://dbpedia.org/property/employer\u003e ?uri. \u003chttp://dbpedia.org/resource/Google_Web_Toolkit\u003e \u003chttp://dbpedia.org/ontology/author\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Manu cornet",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Manu_Cornet",
        "seq": "27,38"
      },
      {
        "label": "Google Web Toolkit",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Google_Web_Toolkit",
        "seq": "70,88"
      }
    ],
    "id": "b1ffee719580428fa70efc72d7f54ba5",
    "predicate mapping": [
      {
        "label": "written",
        "uri": "http://dbpedia.org/property/employer",
        "mappedBy": "word2vec"
      },
      {
        "label": "written",
        "uri": "http://dbpedia.org/ontology/author",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "Where was the movie after Khiladi 786 recorded?",
    "SerialNumber": "3236",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Khiladi_786\u003e \u003chttp://dbpedia.org/property/nextAlbum\u003e ?x . ?x \u003chttp://dbpedia.org/property/recorded\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Khiladi 786",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Khiladi_786",
        "seq": "26,37"
      }
    ],
    "id": "463580ab42f54356945d1ed8c2f9b38a",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/nextAlbum",
        "mappedBy": "word2vec"
      },
      {
        "label": "recorded",
        "uri": "http://dbpedia.org/property/recorded",
        "seq": "38,46",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "14,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the university which has Lieutenaunt general as superintendent and mascot as Gyrfalcon ?",
    "SerialNumber": "3239",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/superintendent\u003e \u003chttp://dbpedia.org/resource/Lieutenant_general_(United_States)\u003e . ?uri \u003chttp://dbpedia.org/property/mascot\u003e \u003chttp://dbpedia.org/resource/Gyrfalcon\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/University\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Lieutenant_general_(United_States)",
        "seq": "999,1000"
      },
      {
        "label": "Gyrfalcon",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Gyrfalcon",
        "seq": "82,91"
      }
    ],
    "id": "fa6f1a62c4da4b2cb2ed09d19e30faa9",
    "predicate mapping": [
      {
        "label": "superintendent",
        "uri": "http://dbpedia.org/ontology/superintendent",
        "seq": "53,67",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "mascot",
        "uri": "http://dbpedia.org/property/mascot",
        "seq": "72,78",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "university",
        "uri": "http://dbpedia.org/ontology/University",
        "seq": "9,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What are the prizes awarded to the main members of DisneyToon Studios?",
    "SerialNumber": "3240",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/DisneyToon_Studios\u003e \u003chttp://dbpedia.org/ontology/keyPerson\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/award\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "DisneyToon Studios",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/DisneyToon_Studios",
        "seq": "51,69"
      }
    ],
    "id": "799124b8d9d1448e8410fcc70d945f3a",
    "predicate mapping": [
      {
        "label": "members",
        "uri": "http://dbpedia.org/ontology/keyPerson",
        "mappedBy": "word2vec"
      },
      {
        "label": "awarded",
        "uri": "http://dbpedia.org/ontology/award",
        "seq": "20,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Is greasy pop recording the distributor of festival records?",
    "SerialNumber": "3243",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Greasy_Pop_Records\u003e \u003chttp://dbpedia.org/ontology/distributingLabel\u003e \u003chttp://dbpedia.org/resource/Festival_Records\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "greasy pop recordi",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Greasy_Pop_Records",
        "seq": "3,21"
      },
      {
        "label": "festival records",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Festival_Records",
        "seq": "43,59"
      }
    ],
    "id": "95af8dab7a8b41babdeee3232cb6c644",
    "predicate mapping": [
      {
        "label": "distributor",
        "uri": "http://dbpedia.org/ontology/distributingLabel",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which sitcom is broadcasted by FOX and presented by Brian Dunkleman?",
    "SerialNumber": "3245",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/channel\u003e \u003chttp://dbpedia.org/resource/Fox_Broadcasting_Company\u003e . ?uri \u003chttp://dbpedia.org/property/presenter\u003e \u003chttp://dbpedia.org/resource/Brian_Dunkleman\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Fox_Broadcasting_Company",
        "seq": "999,1000"
      },
      {
        "label": "Brian Dunkleman",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Brian_Dunkleman",
        "seq": "52,67"
      }
    ],
    "id": "723c2b0c71d445fd9d6cf4d87006383a",
    "predicate mapping": [
      {
        "label": "FOX",
        "uri": "http://dbpedia.org/ontology/channel",
        "mappedBy": "word2vec"
      },
      {
        "label": "presented",
        "uri": "http://dbpedia.org/property/presenter",
        "seq": "39,48",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "FOX",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "UEM group have made bridges crossing over what?",
    "SerialNumber": "3249",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/designer\u003e \u003chttp://dbpedia.org/resource/UEM_Group\u003e . ?x \u003chttp://dbpedia.org/property/crosses\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "UEM group",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/UEM_Group",
        "seq": "0,9"
      }
    ],
    "id": "024337cb227f4a1395be10e9cb63c5fa",
    "predicate mapping": [
      {
        "label": "crossing",
        "uri": "http://dbpedia.org/property/designer",
        "mappedBy": "word2vec"
      },
      {
        "label": "over",
        "uri": "http://dbpedia.org/property/crosses",
        "seq": "37,41",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which distributer of Glover (video game) is also the  publisher of the Super Mario Adventures ?",
    "SerialNumber": "3250",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Glover_(video_game)\u003e \u003chttp://dbpedia.org/ontology/distributor\u003e ?uri. \u003chttp://dbpedia.org/resource/Super_Mario_Adventures\u003e \u003chttp://dbpedia.org/property/publisher\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Glover (video game)",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Glover_(video_game)",
        "seq": "21,40"
      },
      {
        "label": "Super Mario Adventures",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Super_Mario_Adventures",
        "seq": "71,93"
      }
    ],
    "id": "b25e6105c24d44dc8ef492e2edf0b163",
    "predicate mapping": [
      {
        "label": "Glover",
        "uri": "http://dbpedia.org/ontology/distributor",
        "mappedBy": "word2vec"
      },
      {
        "label": "publisher",
        "uri": "http://dbpedia.org/property/publisher",
        "seq": "54,63",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "Which shows have voices from people signed up with ABC Records?",
    "SerialNumber": "3254",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/label\u003e \u003chttp://dbpedia.org/resource/ABC_Records\u003e . ?uri \u003chttp://dbpedia.org/property/voices\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "ABC Records",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/ABC_Records",
        "seq": "51,62"
      }
    ],
    "id": "6a18707a2ce342118ea82c357c85d158",
    "predicate mapping": [
      {
        "label": "signed",
        "uri": "http://dbpedia.org/property/label",
        "mappedBy": "word2vec"
      },
      {
        "label": "voices",
        "uri": "http://dbpedia.org/property/voices",
        "seq": "17,23",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "6,11",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "Who is the developer of the software which is produced by Claris ?",
    "SerialNumber": "3256",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Claris\u003e \u003chttp://dbpedia.org/property/products\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/developer\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Software\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Claris",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Claris",
        "seq": "58,64"
      }
    ],
    "id": "9bf4af0a69b54d8d8e335078f111f30e",
    "predicate mapping": [
      {
        "label": "produced",
        "uri": "http://dbpedia.org/property/products",
        "mappedBy": "word2vec"
      },
      {
        "label": "developer",
        "uri": "http://dbpedia.org/ontology/developer",
        "seq": "11,20",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "software",
        "uri": "http://dbpedia.org/ontology/Software",
        "seq": "28,36",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Give me some administrators of bridges over which cars can go?",
    "SerialNumber": "3258",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/carries\u003e \u003chttp://dbpedia.org/resource/Motor_vehicle\u003e . ?x \u003chttp://dbpedia.org/ontology/maintainedBy\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Bridge\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Motor_vehicle",
        "seq": "999,1000"
      }
    ],
    "id": "c58280258efb409faf6ecfb3f56cc513",
    "predicate mapping": [
      {
        "label": "cars",
        "uri": "http://dbpedia.org/property/carries",
        "seq": "50,54",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "administrator",
        "uri": "http://dbpedia.org/ontology/maintainedBy",
        "seq": "13,26",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "bridge",
        "uri": "http://dbpedia.org/ontology/Bridge",
        "seq": "31,37",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "After the death of which political figure, did the Coalition Provisional Authority came into power?",
    "SerialNumber": "3261",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/successor\u003e \u003chttp://dbpedia.org/resource/Coalition_Provisional_Authority\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Coalition Provisional Authority",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Coalition_Provisional_Authority",
        "seq": "51,82"
      }
    ],
    "id": "933bc214a7024ecaac142fef92c9edaf",
    "predicate mapping": [
      {
        "label": "power",
        "uri": "http://dbpedia.org/property/successor",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the scientist who is known for inventing Anthrax and was a member of Royal Society?",
    "SerialNumber": "3263",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/knownFor\u003e \u003chttp://dbpedia.org/resource/Anthrax\u003e . ?uri \u003chttp://dbpedia.org/property/prizes\u003e \u003chttp://dbpedia.org/resource/Royal_Society\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Scientist\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Anthrax",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Anthrax",
        "seq": "46,53"
      },
      {
        "label": "Royal Society",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Royal_Society",
        "seq": "74,87"
      }
    ],
    "id": "f4b7def86f6e444b8521908b40cef72c",
    "predicate mapping": [
      {
        "label": "known for",
        "uri": "http://dbpedia.org/ontology/knownFor",
        "seq": "26,35",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "member",
        "uri": "http://dbpedia.org/property/prizes",
        "mappedBy": "word2vec"
      },
      {
        "label": "scientist",
        "uri": "http://dbpedia.org/ontology/Scientist",
        "seq": "9,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who were the opponents of the people buried in the tower of London?",
    "SerialNumber": "3264",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/restingPlace\u003e \u003chttp://dbpedia.org/resource/Tower_of_London\u003e . ?x \u003chttp://dbpedia.org/ontology/opponent\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "tower of London",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Tower_of_London",
        "seq": "51,66"
      }
    ],
    "id": "e08cb98a10794ab59d7f5d076fadd9ac",
    "predicate mapping": [
      {
        "label": "buried in",
        "uri": "http://dbpedia.org/property/restingPlace",
        "seq": "37,46",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "opponent",
        "uri": "http://dbpedia.org/ontology/opponent",
        "seq": "13,21",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "people",
        "uri": "http://dbpedia.org/ontology/Person",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "How many factions have fought when Egushawa was a commander?",
    "SerialNumber": "3265",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/commander\u003e \u003chttp://dbpedia.org/resource/Egushawa\u003e . ?x \u003chttp://dbpedia.org/property/combatant\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Egushawa",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Egushawa",
        "seq": "35,43"
      }
    ],
    "id": "c2d46fb94f5b46d5a4324c9cf5941feb",
    "predicate mapping": [
      {
        "label": "commander",
        "uri": "http://dbpedia.org/ontology/commander",
        "seq": "50,59",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "fought",
        "uri": "http://dbpedia.org/property/combatant",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which terrotory of Tonkin campaign also the death bed of Thophane Vnard ?",
    "SerialNumber": "3266",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Tonkin_Campaign\u003e \u003chttp://dbpedia.org/ontology/territory\u003e ?uri. \u003chttp://dbpedia.org/resource/Théophane_Vénard\u003e \u003chttp://dbpedia.org/ontology/deathPlace\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Tonkin campaign",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Tonkin_Campaign",
        "seq": "19,34"
      },
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Théophane_Vénard",
        "seq": "999,1000"
      }
    ],
    "id": "922f99ad92c9458981c4e1027b28aa47",
    "predicate mapping": [
      {
        "label": "bed",
        "uri": "http://dbpedia.org/ontology/territory",
        "mappedBy": "word2vec"
      },
      {
        "label": "death",
        "uri": "http://dbpedia.org/ontology/deathPlace",
        "seq": "44,49",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "Name the scientist whose supervisor also supervised Mary Ainsworth?",
    "SerialNumber": "3267",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/doctoralStudents\u003e \u003chttp://dbpedia.org/resource/Mary_Ainsworth\u003e . ?uri \u003chttp://dbpedia.org/property/doctoralAdvisor\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Scientist\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Mary Ainsworth",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Mary_Ainsworth",
        "seq": "52,66"
      }
    ],
    "id": "7f9100dd95784db5aa76614d9d7d3c8b",
    "predicate mapping": [
      {
        "label": "supervised",
        "uri": "http://dbpedia.org/property/doctoralStudents",
        "mappedBy": "word2vec"
      },
      {
        "label": "supervisor",
        "uri": "http://dbpedia.org/property/doctoralAdvisor",
        "seq": "25,35",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "scientist",
        "uri": "http://dbpedia.org/ontology/Scientist",
        "seq": "9,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "How many titles were given to people who engaged in the Operation Dragoon?",
    "SerialNumber": "3269",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/battles\u003e \u003chttp://dbpedia.org/resource/Operation_Dragoon\u003e . ?x \u003chttp://dbpedia.org/ontology/award\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Operation Dragoon",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Operation_Dragoon",
        "seq": "56,73"
      }
    ],
    "id": "cb3a9f4a1e8d44a1adacbd1db7b0bab9",
    "predicate mapping": [
      {
        "label": "engaged",
        "uri": "http://dbpedia.org/property/battles",
        "mappedBy": "word2vec"
      },
      {
        "label": "engaged",
        "uri": "http://dbpedia.org/ontology/award",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "103",
    "question": "How many other important things has the painter of Sarah Jane Adventures done?",
    "SerialNumber": "3271",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { \u003chttp://dbpedia.org/resource/The_Sarah_Jane_Adventures\u003e \u003chttp://dbpedia.org/property/creator\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/notableWork\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Sarah Jane Adventures",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/The_Sarah_Jane_Adventures",
        "seq": "51,72"
      }
    ],
    "id": "0aef9a11ec194002b66c6ff62f383798",
    "predicate mapping": [
      {
        "label": "painter",
        "uri": "http://dbpedia.org/property/creator",
        "mappedBy": "word2vec"
      },
      {
        "label": "painter",
        "uri": "http://dbpedia.org/ontology/notableWork",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "406",
    "question": "Count all the universities who participated in the tournament won by Alabama Crimson Tides in 2015 ?",
    "SerialNumber": "3272",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/champion\u003e \u003chttp://dbpedia.org/resource/2015_Alabama_Crimson_Tide_football_team\u003e . ?uri \u003chttp://dbpedia.org/property/athletics\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/University\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "crimson alabama",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/2015_Alabama_Crimson_Tide_football_team",
        "seq": "999,1000"
      }
    ],
    "id": "5c55ff44c6ac449d923b0a43437ec726",
    "predicate mapping": [
      {
        "label": "Tides",
        "uri": "http://dbpedia.org/property/champion",
        "mappedBy": "word2vec"
      },
      {
        "label": "Tides",
        "uri": "http://dbpedia.org/property/athletics",
        "mappedBy": "word2vec"
      },
      {
        "label": "universities",
        "uri": "http://dbpedia.org/ontology/University",
        "seq": "14,26",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What is the currency of the country of Kerguelen Islands?",
    "SerialNumber": "3274",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Kerguelen_Islands\u003e \u003chttp://dbpedia.org/ontology/governmentType\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/currency\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Kerguelen Islands",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Kerguelen_Islands",
        "seq": "39,56"
      }
    ],
    "id": "951988a7d1c344dfbb421152061e3778",
    "predicate mapping": [
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/governmentType",
        "mappedBy": "word2vec"
      },
      {
        "label": "currency",
        "uri": "http://dbpedia.org/ontology/currency",
        "seq": "12,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "For which country did Alexander Lippisch design airplanes?",
    "SerialNumber": "3276",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/designer\u003e \u003chttp://dbpedia.org/resource/Alexander_Lippisch\u003e . ?x \u003chttp://dbpedia.org/property/nationalOrigin\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Aircraft\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Alexander Lippisch",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Alexander_Lippisch",
        "seq": "22,40"
      }
    ],
    "id": "d5bf2f11fdfd47958b21a0ad3a2fdb90",
    "predicate mapping": [
      {
        "label": "design",
        "uri": "http://dbpedia.org/property/designer",
        "seq": "41,47",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "airplanes",
        "uri": "http://dbpedia.org/property/nationalOrigin",
        "mappedBy": "word2vec"
      },
      {
        "label": "airplanes",
        "uri": "http://dbpedia.org/ontology/Aircraft",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Where did george f hoar and willian langer spend the most important time of their political career?",
    "SerialNumber": "3277",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/George_Frisbie_Hoar\u003e \u003chttp://dbpedia.org/property/order\u003e ?uri. \u003chttp://dbpedia.org/resource/William_Langer\u003e \u003chttp://dbpedia.org/property/order\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "george hoar",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/George_Frisbie_Hoar",
        "seq": "999,1000"
      },
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/William_Langer",
        "seq": "999,1000"
      }
    ],
    "id": "30d267130c65402ba2c0efdc2ea5691f",
    "predicate mapping": [
      {
        "label": "career",
        "uri": "http://dbpedia.org/property/order",
        "mappedBy": "word2vec"
      },
      {
        "label": "career",
        "uri": "http://dbpedia.org/property/order",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Whihc birthpalce of Svetlana Gounkina is also the largest city of Union State ?",
    "SerialNumber": "3279",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Union_State\u003e \u003chttp://dbpedia.org/property/largestCity\u003e ?uri. \u003chttp://dbpedia.org/resource/Svetlana_Gounkina\u003e \u003chttp://dbpedia.org/ontology/birthPlace\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Union State",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Union_State",
        "seq": "66,77"
      },
      {
        "label": "Svetlana Gounkina",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Svetlana_Gounkina",
        "seq": "20,37"
      }
    ],
    "id": "4afdea93d75746e79aa9c8da00070b4d",
    "predicate mapping": [
      {
        "label": "largest city",
        "uri": "http://dbpedia.org/property/largestCity",
        "seq": "50,62",
        "mappedBy": "byLabelMatch"
      },
      {
        "uri": "http://dbpedia.org/ontology/birthPlace",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What is the country whose speaker of the Dewan Rakyat is Pandikar Amin Mulia?",
    "SerialNumber": "3280",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/leaderName\u003e \u003chttp://dbpedia.org/resource/Pandikar_Amin_Mulia\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Country\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Pandikar Amin Mulia",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Pandikar_Amin_Mulia",
        "seq": "57,76"
      }
    ],
    "id": "d6837e9445dd4d89ba1491d92ec402cf",
    "predicate mapping": [
      {
        "label": "Rakyat",
        "uri": "http://dbpedia.org/property/leaderName",
        "mappedBy": "word2vec"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/Country",
        "seq": "12,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "To which series does the book belong which came after the Blade Runner 2?",
    "SerialNumber": "3282",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/previousWork\u003e \u003chttp://dbpedia.org/resource/Blade_Runner_2:_The_Edge_of_Human\u003e . ?x \u003chttp://dbpedia.org/ontology/series\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "2",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Blade_Runner_2:_The_Edge_of_Human",
        "seq": "71,72"
      }
    ],
    "id": "012275fbe2924170a2dc92fcdfb02849",
    "predicate mapping": [
      {
        "label": "Runner",
        "uri": "http://dbpedia.org/ontology/previousWork",
        "mappedBy": "word2vec"
      },
      {
        "label": "series",
        "uri": "http://dbpedia.org/ontology/series",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Which company\u0027s cars are assembled in Colombia?",
    "SerialNumber": "3284",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/assembly\u003e \u003chttp://dbpedia.org/resource/Colombia\u003e . ?x \u003chttp://dbpedia.org/property/parentCompany\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Automobile\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Colombia",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Colombia",
        "seq": "38,46"
      }
    ],
    "id": "afaccc78ee0944f59fe4462b00ec4324",
    "predicate mapping": [
      {
        "label": "assembled",
        "uri": "http://dbpedia.org/property/assembly",
        "mappedBy": "word2vec"
      },
      {
        "label": "company\u0027s",
        "uri": "http://dbpedia.org/property/parentCompany",
        "seq": "6,15",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "assembled",
        "uri": "http://dbpedia.org/ontology/Automobile",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "In which places do companies founded in Newcastle operate?",
    "SerialNumber": "3285",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/foundationPlace\u003e \u003chttp://dbpedia.org/resource/City_of_Newcastle\u003e . ?x \u003chttp://dbpedia.org/ontology/regionServed\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Company\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Newcastle",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/City_of_Newcastle",
        "seq": "40,49"
      }
    ],
    "id": "4af9ff3c965e4f76b2e60a5a204d15e2",
    "predicate mapping": [
      {
        "label": "founded",
        "uri": "http://dbpedia.org/ontology/foundationPlace",
        "seq": "29,36",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "operate",
        "uri": "http://dbpedia.org/ontology/regionServed",
        "mappedBy": "word2vec"
      },
      {
        "label": "companies",
        "uri": "http://dbpedia.org/ontology/Company",
        "seq": "19,28",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Musical artists who are associated with Ren \u0026 Angela were born where ?",
    "SerialNumber": "3288",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/associatedActs\u003e \u003chttp://dbpedia.org/resource/René_\u0026_Angela\u003e . ?x \u003chttp://dbpedia.org/property/birthPlace\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MusicalArtist\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "angela ren",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/René_\u0026_Angela",
        "seq": "999,1000"
      }
    ],
    "id": "89020ed4a12841c4abf8744b5f6f84d3",
    "predicate mapping": [
      {
        "label": "associated",
        "uri": "http://dbpedia.org/property/associatedActs",
        "seq": "24,34",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "born",
        "uri": "http://dbpedia.org/property/birthPlace",
        "mappedBy": "word2vec"
      },
      {
        "label": "Musical artist",
        "uri": "http://dbpedia.org/ontology/MusicalArtist",
        "seq": "0,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "What are the things whose director of photography died in United States?",
    "SerialNumber": "3290",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/deathPlace\u003e \u003chttp://dbpedia.org/resource/United_States\u003e . ?uri \u003chttp://dbpedia.org/property/cinematography\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "United States",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/United_States",
        "seq": "58,71"
      }
    ],
    "id": "f5133efadcbd4156acea7c0709acf981",
    "predicate mapping": [
      {
        "label": "died in",
        "uri": "http://dbpedia.org/property/deathPlace",
        "seq": "50,57",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "photography",
        "uri": "http://dbpedia.org/property/cinematography",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "Paul Leonard\u0027s work can be divided into how many series?",
    "SerialNumber": "3291",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/author\u003e \u003chttp://dbpedia.org/resource/Paul_Leonard_(writer)\u003e . ?x \u003chttp://dbpedia.org/ontology/series\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Paul Leonard",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Paul_Leonard_(writer)",
        "seq": "0,12"
      }
    ],
    "id": "3baa786d346248839da91be72db9ca83",
    "predicate mapping": [
      {
        "label": "divided",
        "uri": "http://dbpedia.org/property/author",
        "mappedBy": "word2vec"
      },
      {
        "label": "series",
        "uri": "http://dbpedia.org/ontology/series",
        "seq": "49,55",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Which sects people are part of local political parties which fall under the International Muslim Brotherhood?",
    "SerialNumber": "3294",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/international\u003e \u003chttp://dbpedia.org/resource/Muslim_Brotherhood\u003e . ?x \u003chttp://dbpedia.org/ontology/religion\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/PoliticalParty\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Muslim Brotherhood",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Muslim_Brotherhood",
        "seq": "90,108"
      }
    ],
    "id": "c721ef1e42924f8e9f9e185cbc00b5ce",
    "predicate mapping": [
      {
        "label": "International",
        "uri": "http://dbpedia.org/property/international",
        "seq": "76,89",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "fall",
        "uri": "http://dbpedia.org/ontology/religion",
        "mappedBy": "word2vec"
      },
      {
        "label": "political part",
        "uri": "http://dbpedia.org/ontology/PoliticalParty",
        "seq": "37,51",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who narrated the albums in which Harry Nilsson performed?",
    "SerialNumber": "3297",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/artist\u003e \u003chttp://dbpedia.org/resource/Harry_Nilsson\u003e . ?x \u003chttp://dbpedia.org/property/narrated\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Album\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Harry Nilsson",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Harry_Nilsson",
        "seq": "33,46"
      }
    ],
    "id": "a568918506ad48f08dc9ea2bcf4f9d47",
    "predicate mapping": [
      {
        "label": "performed",
        "uri": "http://dbpedia.org/ontology/artist",
        "mappedBy": "word2vec"
      },
      {
        "label": "narrated",
        "uri": "http://dbpedia.org/property/narrated",
        "seq": "4,12",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "album",
        "uri": "http://dbpedia.org/ontology/Album",
        "seq": "17,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "What do craig Van tilbury and karen Grigorian do for a living?",
    "SerialNumber": "3299",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Karen_Grigorian\u003e \u003chttp://dbpedia.org/ontology/occupation\u003e ?uri. \u003chttp://dbpedia.org/resource/Craig_Van_Tilbury\u003e \u003chttp://dbpedia.org/ontology/occupation\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "karen Grigorian",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Karen_Grigorian",
        "seq": "30,45"
      },
      {
        "label": "craig Van tilbury",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Craig_Van_Tilbury",
        "seq": "8,25"
      }
    ],
    "id": "86a47aa322204efb92fe728b58696cf5",
    "predicate mapping": [
      {
        "label": "living",
        "uri": "http://dbpedia.org/ontology/occupation",
        "mappedBy": "word2vec"
      },
      {
        "label": "living",
        "uri": "http://dbpedia.org/ontology/occupation",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "List the universities from a country where Norwegian language is officially accepted.",
    "SerialNumber": "3305",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/officialLanguage\u003e \u003chttp://dbpedia.org/resource/Norwegian_language\u003e . ?uri \u003chttp://dbpedia.org/ontology/country\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/University\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Norwegian language",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Norwegian_language",
        "seq": "43,61"
      }
    ],
    "id": "1d4631ca121d427a83c91e0ec29ad410",
    "predicate mapping": [
      {
        "label": "officially",
        "uri": "http://dbpedia.org/ontology/officialLanguage",
        "mappedBy": "word2vec"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/country",
        "seq": "29,36",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "universities",
        "uri": "http://dbpedia.org/ontology/University",
        "seq": "9,21",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Where is the tunnel, which is operated by BNSF railways?",
    "SerialNumber": "3307",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/operatedBy\u003e \u003chttp://dbpedia.org/resource/BNSF_Railway\u003e . ?x \u003chttp://dbpedia.org/property/location\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/RailwayTunnel\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "BNSF railway",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/BNSF_Railway",
        "seq": "42,54"
      }
    ],
    "id": "affd9d6f1cf44d159c675e5b8252c440",
    "predicate mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/ontology/operatedBy",
        "seq": "0,0",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "operated",
        "uri": "http://dbpedia.org/property/location",
        "mappedBy": "word2vec"
      },
      {
        "label": "railways",
        "uri": "http://dbpedia.org/ontology/RailwayTunnel",
        "seq": "47,55",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What is the mascot of the military unit in which Ronald Wilson served?",
    "SerialNumber": "3308",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Ronald_Wilson\u003e \u003chttp://dbpedia.org/property/branch\u003e ?x . ?x \u003chttp://dbpedia.org/property/mascot\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ronald Wilson",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ronald_Wilson",
        "seq": "49,62"
      }
    ],
    "id": "4a54d07f42fc46d0b4b5125be3c636b4",
    "predicate mapping": [
      {
        "label": "served",
        "uri": "http://dbpedia.org/property/branch",
        "mappedBy": "word2vec"
      },
      {
        "label": "mascot",
        "uri": "http://dbpedia.org/property/mascot",
        "seq": "12,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who battled under commander Egushawa in a conflict?",
    "SerialNumber": "3310",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/commander\u003e \u003chttp://dbpedia.org/resource/Egushawa\u003e . ?x \u003chttp://dbpedia.org/property/combatant\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MilitaryConflict\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Egushawa",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Egushawa",
        "seq": "28,36"
      }
    ],
    "id": "b6d318523b79426193d35e5a97ecda5f",
    "predicate mapping": [
      {
        "label": "commander",
        "uri": "http://dbpedia.org/ontology/commander",
        "seq": "18,27",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "battled",
        "uri": "http://dbpedia.org/property/combatant",
        "mappedBy": "word2vec"
      },
      {
        "label": "conflict",
        "uri": "http://dbpedia.org/ontology/MilitaryConflict",
        "seq": "42,50",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "In which country is Bocas del toro a capital of some region?",
    "SerialNumber": "3311",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/capital\u003e \u003chttp://dbpedia.org/resource/Bocas_Town,_Bocas_del_Toro\u003e . ?x \u003chttp://dbpedia.org/property/country\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "bocas",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Bocas_Town,_Bocas_del_Toro",
        "seq": "999,1000"
      }
    ],
    "id": "aabec43f1b95480f9b3904dddc7e81e9",
    "predicate mapping": [
      {
        "label": "capital",
        "uri": "http://dbpedia.org/property/capital",
        "seq": "37,44",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/property/country",
        "seq": "9,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What products are made by Tehran based companies?",
    "SerialNumber": "3313",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/location\u003e \u003chttp://dbpedia.org/resource/Tehran\u003e . ?x \u003chttp://dbpedia.org/ontology/product\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Company\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Tehran",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Tehran",
        "seq": "26,32"
      }
    ],
    "id": "0ad9954f309c496ab4dfbd8056a58187",
    "predicate mapping": [
      {
        "label": "based",
        "uri": "http://dbpedia.org/property/location",
        "mappedBy": "word2vec"
      },
      {
        "label": "product",
        "uri": "http://dbpedia.org/ontology/product",
        "seq": "5,12",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "companies",
        "uri": "http://dbpedia.org/ontology/Company",
        "seq": "39,48",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "What are some causes of death of European Americans?",
    "SerialNumber": "3314",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/ethnicity\u003e \u003chttp://dbpedia.org/resource/European_Americans\u003e . ?x \u003chttp://dbpedia.org/ontology/deathCause\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "European Americans",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/European_Americans",
        "seq": "33,51"
      }
    ],
    "id": "f78a415ef99f429ea50169b5a64d9fa0",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/ethnicity",
        "mappedBy": "word2vec"
      },
      {
        "label": "death",
        "uri": "http://dbpedia.org/ontology/deathCause",
        "seq": "24,29",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which settlement\u0027s neighboring municipalities are Cologny and Pregny-Chambsy?",
    "SerialNumber": "3317",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/neighboringMunicipalities\u003e \u003chttp://dbpedia.org/resource/Cologny\u003e . ?uri \u003chttp://dbpedia.org/ontology/neighboringMunicipality\u003e \u003chttp://dbpedia.org/resource/Pregny-Chambésy\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Settlement\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Cologny",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Cologny",
        "seq": "50,57"
      },
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Pregny-Chambésy",
        "seq": "999,1000"
      }
    ],
    "id": "bf7af8752a1748b9ab92c8690ddf65f9",
    "predicate mapping": [
      {
        "label": "neighboring municipalities",
        "uri": "http://dbpedia.org/property/neighboringMunicipalities",
        "seq": "19,45",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "neighboring",
        "uri": "http://dbpedia.org/ontology/neighboringMunicipality",
        "seq": "19,30",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "settlement",
        "uri": "http://dbpedia.org/ontology/Settlement",
        "seq": "6,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What kind of things are on the radio stations affiliated with the Baltimore Ravens?",
    "SerialNumber": "3320",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/affiliations\u003e \u003chttp://dbpedia.org/resource/Baltimore_Ravens\u003e . ?x \u003chttp://dbpedia.org/ontology/programmeFormat\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/RadioStation\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Baltimore Ravens",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Baltimore_Ravens",
        "seq": "66,82"
      }
    ],
    "id": "2a1303ce259f4ddd8c63cb28a9edf458",
    "predicate mapping": [
      {
        "label": "affiliated",
        "uri": "http://dbpedia.org/property/affiliations",
        "mappedBy": "word2vec"
      },
      {
        "uri": "http://dbpedia.org/ontology/programmeFormat",
        "mappedBy": "word2vec"
      },
      {
        "label": "radio station",
        "uri": "http://dbpedia.org/ontology/RadioStation",
        "seq": "31,44",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which current member of Insect vs Robots is also the music composer of Kenny Dies ?",
    "SerialNumber": "3322",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Insects_vs_Robots\u003e \u003chttp://dbpedia.org/property/currentMembers\u003e ?uri. \u003chttp://dbpedia.org/resource/Kenny_Dies\u003e \u003chttp://dbpedia.org/ontology/musicComposer\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "robots insect",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Insects_vs_Robots",
        "seq": "999,1000"
      },
      {
        "label": "Kenny Dies",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Kenny_Dies",
        "seq": "71,81"
      }
    ],
    "id": "339fba01bf374193aaa038e896284b65",
    "predicate mapping": [
      {
        "label": "current member",
        "uri": "http://dbpedia.org/property/currentMembers",
        "seq": "6,20",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "music composer",
        "uri": "http://dbpedia.org/ontology/musicComposer",
        "seq": "53,67",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Where did Georges Wolinski and Judson Huss die/",
    "SerialNumber": "3325",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Georges_Wolinski\u003e \u003chttp://dbpedia.org/property/placeOfDeath\u003e ?uri. \u003chttp://dbpedia.org/resource/Judson_Huss\u003e \u003chttp://dbpedia.org/property/deathPlace\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Georges Wolinski",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Georges_Wolinski",
        "seq": "10,26"
      },
      {
        "label": "Judson Huss",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Judson_Huss",
        "seq": "31,42"
      }
    ],
    "id": "5953c1ca741b4952bfa7231396751599",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/placeOfDeath",
        "mappedBy": "word2vec"
      },
      {
        "label": "die/",
        "uri": "http://dbpedia.org/property/deathPlace",
        "seq": "43,47",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Which city is known for the people working in the western penn hospital?",
    "SerialNumber": "3326",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/workInstitutions\u003e \u003chttp://dbpedia.org/resource/Western_Pennsylvania_Hospital\u003e . ?x \u003chttp://dbpedia.org/ontology/knownFor\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "hospital western",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Western_Pennsylvania_Hospital",
        "seq": "999,1000"
      }
    ],
    "id": "c1cdd524499641ec80f02549a8991821",
    "predicate mapping": [
      {
        "label": "working",
        "uri": "http://dbpedia.org/property/workInstitutions",
        "seq": "35,42",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "known for",
        "uri": "http://dbpedia.org/ontology/knownFor",
        "seq": "14,23",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "hospital",
        "uri": "http://dbpedia.org/ontology/Person",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Which team won the American Football League?",
    "SerialNumber": "3328",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/American_Football_League\u003e \u003chttp://dbpedia.org/property/champion\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "American Football League",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/American_Football_League",
        "seq": "19,43"
      }
    ],
    "id": "205217dd61614f7b9dff96c1b2f7202c",
    "predicate mapping": [
      {
        "label": "won",
        "uri": "http://dbpedia.org/property/champion",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Does the Jordan River start in the Golan Heights?",
    "SerialNumber": "3329",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Jordan_River\u003e \u003chttp://dbpedia.org/ontology/sourceRegion\u003e \u003chttp://dbpedia.org/resource/Golan_Heights\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jordan River",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Jordan_River",
        "seq": "9,21"
      },
      {
        "label": "Golan Heights",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Golan_Heights",
        "seq": "35,48"
      }
    ],
    "id": "216518a4ffe546ce91c5e430549b0037",
    "predicate mapping": [
      {
        "label": "start",
        "uri": "http://dbpedia.org/ontology/sourceRegion",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Give me all office holders who finally retired in Montpelier, Orange, Virgina?",
    "SerialNumber": "3330",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/restingplace\u003e \u003chttp://dbpedia.org/resource/Montpelier_(Orange,_Virginia)\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/OfficeHolder\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Montpelier",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Montpelier_(Orange,_Virginia)",
        "seq": "50,60"
      }
    ],
    "id": "8e346529106147e896a3f2e56bf87969",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/restingplace",
        "mappedBy": "word2vec"
      },
      {
        "label": "office holder",
        "uri": "http://dbpedia.org/ontology/OfficeHolder",
        "seq": "12,25",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "In which company is Raymond Conner at an important position?",
    "SerialNumber": "3333",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/keyPerson\u003e \u003chttp://dbpedia.org/resource/Raymond_Conner\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Raymond Conner",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Raymond_Conner",
        "seq": "20,34"
      }
    ],
    "id": "2f9e649669aa4782919424b5cf845cf3",
    "predicate mapping": [
      {
        "label": "position",
        "uri": "http://dbpedia.org/ontology/keyPerson",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "Name the actors of the TV show which has an episode named The Five ?",
    "SerialNumber": "3336",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/The_Five_(The_Vampire_Diaries)\u003e \u003chttp://dbpedia.org/property/series\u003e ?x . ?x \u003chttp://dbpedia.org/property/starring\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "The Five",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Five_(The_Vampire_Diaries)",
        "seq": "58,66"
      }
    ],
    "id": "aa025dbe97974996bdee7ea712d6fcd2",
    "predicate mapping": [
      {
        "label": "named",
        "uri": "http://dbpedia.org/property/series",
        "mappedBy": "word2vec"
      },
      {
        "label": "actor",
        "uri": "http://dbpedia.org/property/starring",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "26,30",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Where are the National Academy Museum and School awardwinners buried?",
    "SerialNumber": "3337",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/award\u003e \u003chttp://dbpedia.org/resource/National_Academy_Museum_and_School\u003e . ?x \u003chttp://dbpedia.org/ontology/restingPlace\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "National Academy Museum and School",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/National_Academy_Museum_and_School",
        "seq": "14,48"
      }
    ],
    "id": "9814a502d6344b8684c3ef7c53257f8e",
    "predicate mapping": [
      {
        "label": "award",
        "uri": "http://dbpedia.org/ontology/award",
        "seq": "49,54",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "buried",
        "uri": "http://dbpedia.org/ontology/restingPlace",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "What is the common location of  tomb of the Elizabeth of Rhuddlan and Isabel of Cambridge?",
    "SerialNumber": "3340",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Elizabeth_of_Rhuddlan\u003e \u003chttp://dbpedia.org/property/placeOfBurial\u003e ?uri. \u003chttp://dbpedia.org/resource/Isabel_of_Cambridge,_Countess_of_Essex\u003e \u003chttp://dbpedia.org/property/placeOfBurial\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Elizabeth of Rhuddlan",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Elizabeth_of_Rhuddlan",
        "seq": "44,65"
      },
      {
        "label": "cambridge isabel",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Isabel_of_Cambridge,_Countess_of_Essex",
        "seq": "999,1000"
      }
    ],
    "id": "7a39f5fc355c464eb024ab21d1b43e89",
    "predicate mapping": [
      {
        "label": "tomb",
        "uri": "http://dbpedia.org/property/placeOfBurial",
        "seq": "32,36",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "tomb",
        "uri": "http://dbpedia.org/property/placeOfBurial",
        "seq": "32,36",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Which company had built the rockets launched at the Cape Canaveral Air Force Station Space Launch Complex 17?",
    "SerialNumber": "3342",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/launchSite\u003e \u003chttp://dbpedia.org/resource/Cape_Canaveral_Air_Force_Station_Space_Launch_Complex_17\u003e . ?x \u003chttp://dbpedia.org/ontology/manufacturer\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Cape Canaveral Air Force Station Space Launch Complex 17",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Cape_Canaveral_Air_Force_Station_Space_Launch_Complex_17",
        "seq": "52,108"
      }
    ],
    "id": "2c061f3427d347acaf1d538fba4ea75e",
    "predicate mapping": [
      {
        "label": "launched",
        "uri": "http://dbpedia.org/ontology/launchSite",
        "seq": "36,44",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "rockets",
        "uri": "http://dbpedia.org/ontology/manufacturer",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What are the former team of the american football players who played at gridiron football position ?",
    "SerialNumber": "3345",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/position\u003e \u003chttp://dbpedia.org/resource/Tackle_(gridiron_football_position)\u003e . ?x \u003chttp://dbpedia.org/ontology/formerTeam\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/AmericanFootballPlayer\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "position gridiron football",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Tackle_(gridiron_football_position)",
        "seq": "999,1000"
      }
    ],
    "id": "04215c1446384126b9c2ac65d0431a1a",
    "predicate mapping": [
      {
        "label": "position",
        "uri": "http://dbpedia.org/property/position",
        "seq": "90,98",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "former team",
        "uri": "http://dbpedia.org/ontology/formerTeam",
        "seq": "13,24",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "american football player",
        "uri": "http://dbpedia.org/ontology/AmericanFootballPlayer",
        "seq": "32,56",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What  is the meaning of the Isa (name) which is also a relegion of Sacred Heart Convent School (Bangkok) ?",
    "SerialNumber": "3347",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Isa_(name)\u003e \u003chttp://dbpedia.org/property/meaning\u003e ?uri. \u003chttp://dbpedia.org/resource/Sacred_Heart_Convent_School_(Bangkok)\u003e \u003chttp://dbpedia.org/ontology/type\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Isa (name)",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Isa_(name)",
        "seq": "28,38"
      },
      {
        "label": "Sacred Heart Convent School (Bangkok)",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Sacred_Heart_Convent_School_(Bangkok)",
        "seq": "67,104"
      }
    ],
    "id": "225d5bcff9274ce3bbf7c2527939ee7b",
    "predicate mapping": [
      {
        "label": "meaning",
        "uri": "http://dbpedia.org/property/meaning",
        "seq": "13,20",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "School",
        "uri": "http://dbpedia.org/ontology/type",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "Who are the managers of clubs participating in the 2014-2015 Football League Championship?",
    "SerialNumber": "3348",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/season\u003e \u003chttp://dbpedia.org/resource/2014–15_Football_League_Championship\u003e . ?uri \u003chttp://dbpedia.org/ontology/managerClub\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "championship football league",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/2014–15_Football_League_Championship",
        "seq": "999,1000"
      }
    ],
    "id": "7717547eedc44d92a881117189824621",
    "predicate mapping": [
      {
        "label": "Championship",
        "uri": "http://dbpedia.org/ontology/season",
        "mappedBy": "word2vec"
      },
      {
        "label": "managers",
        "uri": "http://dbpedia.org/ontology/managerClub",
        "seq": "12,20",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which official residence of Nikos Pateras is also the stadium of anionios G.S.S. season 2014-15 ?",
    "SerialNumber": "3350",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/2014–15_Panionios_G.S.S._season\u003e \u003chttp://dbpedia.org/property/stadium\u003e ?uri. \u003chttp://dbpedia.org/resource/Nikos_Pateras\u003e \u003chttp://dbpedia.org/ontology/residence\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "anionios season g.s.s.",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/2014–15_Panionios_G.S.S._season",
        "seq": "999,1000"
      },
      {
        "label": "Nikos Pateras",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Nikos_Pateras",
        "seq": "28,41"
      }
    ],
    "id": "f4ff42e2419941e88bca179599c2ea22",
    "predicate mapping": [
      {
        "label": "stadium",
        "uri": "http://dbpedia.org/property/stadium",
        "seq": "54,61",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "residence",
        "uri": "http://dbpedia.org/ontology/residence",
        "seq": "15,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "What is the country of the Hirth Acrostar and the Cobra missile?",
    "SerialNumber": "3354",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Hirth_Acrostar\u003e \u003chttp://dbpedia.org/ontology/origin\u003e ?uri. \u003chttp://dbpedia.org/resource/Cobra_(missile)\u003e \u003chttp://dbpedia.org/ontology/origin\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Hirth Acrostar",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Hirth_Acrostar",
        "seq": "27,41"
      },
      {
        "label": "Cobra",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Cobra_(missile)",
        "seq": "50,55"
      }
    ],
    "id": "6772f2e11d834d0dabc10d05d6a4ab72",
    "predicate mapping": [
      {
        "label": "missile",
        "uri": "http://dbpedia.org/ontology/origin",
        "mappedBy": "word2vec"
      },
      {
        "label": "missile",
        "uri": "http://dbpedia.org/ontology/origin",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "Collect and return a list of things in the area where Spanish language is used?",
    "SerialNumber": "3356",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/language\u003e \u003chttp://dbpedia.org/resource/Spanish_language\u003e . ?uri \u003chttp://dbpedia.org/ontology/location\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Spanish language",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Spanish_language",
        "seq": "54,70"
      }
    ],
    "id": "0ebb619e771642908242969b42bbf642",
    "predicate mapping": [
      {
        "label": "language",
        "uri": "http://dbpedia.org/ontology/language",
        "seq": "62,70",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "area",
        "uri": "http://dbpedia.org/ontology/location",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "What made jo garcia and merritt cabal both famous?",
    "SerialNumber": "3357",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Jo_Garcia\u003e \u003chttp://dbpedia.org/ontology/knownFor\u003e ?uri. \u003chttp://dbpedia.org/resource/Merritt_Cabal\u003e \u003chttp://dbpedia.org/ontology/knownFor\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "jo garcia",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Jo_Garcia",
        "seq": "10,19"
      },
      {
        "label": "merritt cabal",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Merritt_Cabal",
        "seq": "24,37"
      }
    ],
    "id": "62e9fa82eea7498790e2d5ca5a664a60",
    "predicate mapping": [
      {
        "label": "famous",
        "uri": "http://dbpedia.org/ontology/knownFor",
        "mappedBy": "word2vec"
      },
      {
        "label": "famous",
        "uri": "http://dbpedia.org/ontology/knownFor",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Is GIMP written in C?",
    "SerialNumber": "3358",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/GIMP\u003e \u003chttp://dbpedia.org/ontology/programmingLanguage\u003e \u003chttp://dbpedia.org/resource/C_(programming_language)\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "GIMP",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/GIMP",
        "seq": "3,7"
      },
      {
        "label": "C",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/C_(programming_language)",
        "seq": "19,20"
      }
    ],
    "id": "6db524c4b72a43a788d1622f07782c39",
    "predicate mapping": [
      {
        "label": "written",
        "uri": "http://dbpedia.org/ontology/programmingLanguage",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "What are all the countires where food related to tuna salad is consumed ?",
    "SerialNumber": "3359",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/related\u003e \u003chttp://dbpedia.org/resource/Tuna_salad\u003e . ?x \u003chttp://dbpedia.org/property/country\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "tuna salad",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Tuna_salad",
        "seq": "49,59"
      }
    ],
    "id": "9465a9187c3f42a9b64cc0da135c6784",
    "predicate mapping": [
      {
        "label": "related",
        "uri": "http://dbpedia.org/ontology/related",
        "seq": "38,45",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "consumed",
        "uri": "http://dbpedia.org/property/country",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "405",
    "question": "How many different genres led to other genres where drums are important?",
    "SerialNumber": "3361",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/instruments\u003e \u003chttp://dbpedia.org/resource/Drum_kit\u003e . ?x \u003chttp://dbpedia.org/ontology/stylisticOrigin\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MusicGenre\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Drum_kit",
        "seq": "999,1000"
      }
    ],
    "id": "312c5bacb7c14ea1b41c0e219107c417",
    "predicate mapping": [
      {
        "label": "important",
        "uri": "http://dbpedia.org/property/instruments",
        "mappedBy": "word2vec"
      },
      {
        "label": "important",
        "uri": "http://dbpedia.org/ontology/stylisticOrigin",
        "mappedBy": "word2vec"
      },
      {
        "label": "genre",
        "uri": "http://dbpedia.org/ontology/MusicGenre",
        "seq": "19,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "101",
    "question": "How many people have played for the NBA?",
    "SerialNumber": "3362",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/property/league\u003e \u003chttp://dbpedia.org/resource/National_Basketball_Association\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "NBA",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/National_Basketball_Association",
        "seq": "36,39"
      }
    ],
    "id": "9b1fb4f02cfb4023bb3596310cad80bc",
    "predicate mapping": [
      {
        "label": "played",
        "uri": "http://dbpedia.org/property/league",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "Where is the headquarters of the public transit system which operators Go-to-card ?",
    "SerialNumber": "3364",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Go-To_card\u003e \u003chttp://dbpedia.org/property/operator\u003e ?x . ?x \u003chttp://dbpedia.org/property/headquarters\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/PublicTransitSystem\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Go-To_card",
        "seq": "999,1000"
      }
    ],
    "id": "4dc32ad3dae4429d963b5b4282c18767",
    "predicate mapping": [
      {
        "label": "operator",
        "uri": "http://dbpedia.org/property/operator",
        "seq": "61,69",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "headquarters",
        "uri": "http://dbpedia.org/property/headquarters",
        "seq": "13,25",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "public transit system",
        "uri": "http://dbpedia.org/ontology/PublicTransitSystem",
        "seq": "33,54",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "101",
    "question": "How many people played for Newell\u0027s Old Boys?",
    "SerialNumber": "3365",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/property/youthclubs\u003e \u003chttp://dbpedia.org/resource/Newell\u0027s_Old_Boys\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Newell\u0027s Old Boys",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Newell\u0027s_Old_Boys",
        "seq": "27,44"
      }
    ],
    "id": "0e0a2a498e574ec6925f6cb31cd3c729",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/youthclubs",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "To which american football teams does the Heinz Field serve as home stadium?",
    "SerialNumber": "3369",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Heinz_Field\u003e \u003chttp://dbpedia.org/property/tenants\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Heinz Field",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Heinz_Field",
        "seq": "42,53"
      }
    ],
    "id": "ada05be944104948987543e9a09aa581",
    "predicate mapping": [
      {
        "label": "stadium",
        "uri": "http://dbpedia.org/property/tenants",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "What is the occupation of the band members of The Shirelles?",
    "SerialNumber": "3372",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/associatedMusicalArtist\u003e \u003chttp://dbpedia.org/resource/The_Shirelles\u003e . ?x \u003chttp://dbpedia.org/ontology/occupation\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "The Shirelles",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Shirelles",
        "seq": "46,59"
      }
    ],
    "id": "6feb76adf49746a2a18f9d21a1d22306",
    "predicate mapping": [
      {
        "label": "members",
        "uri": "http://dbpedia.org/ontology/associatedMusicalArtist",
        "mappedBy": "word2vec"
      },
      {
        "label": "occupation",
        "uri": "http://dbpedia.org/ontology/occupation",
        "seq": "12,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Which tv series have a score composed by judy hard angelo?",
    "SerialNumber": "3373",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/composer\u003e \u003chttp://dbpedia.org/resource/Judy_Hart_Angelo\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "score",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Judy_Hart_Angelo",
        "seq": "23,28"
      }
    ],
    "id": "cd190de039534a6d91abee2ac3dd411c",
    "predicate mapping": [
      {
        "label": "composed by",
        "uri": "http://dbpedia.org/ontology/composer",
        "seq": "29,40",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "angelo",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the TV show with artist Christopher Franke and cast member Jason Carter ?",
    "SerialNumber": "3375",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/artist\u003e \u003chttp://dbpedia.org/resource/Christopher_Franke\u003e . ?uri \u003chttp://dbpedia.org/ontology/starring\u003e \u003chttp://dbpedia.org/resource/Jason_Carter_(actor)\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Christopher Franke",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Christopher_Franke",
        "seq": "29,47"
      },
      {
        "label": "Jason Carter",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Jason_Carter_(actor)",
        "seq": "64,76"
      }
    ],
    "id": "48ed9662c9d34e7bb7ff13ec8d02c81f",
    "predicate mapping": [
      {
        "label": "artist",
        "uri": "http://dbpedia.org/property/artist",
        "seq": "22,28",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "member",
        "uri": "http://dbpedia.org/ontology/starring",
        "mappedBy": "word2vec"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "12,16",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the office holder with successor as Adrian A Basora and child as Lori Black ?",
    "SerialNumber": "3377",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/child\u003e \u003chttp://dbpedia.org/resource/Lori_Black\u003e . ?uri \u003chttp://dbpedia.org/property/successor\u003e \u003chttp://dbpedia.org/resource/Adrian_A._Basora\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/OfficeHolder\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Lori Black",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Lori_Black",
        "seq": "70,80"
      },
      {
        "label": "basora adrian",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Adrian_A._Basora",
        "seq": "999,1000"
      }
    ],
    "id": "ca12347dfd3541a5a313ae988767ca9f",
    "predicate mapping": [
      {
        "label": "child",
        "uri": "http://dbpedia.org/ontology/child",
        "seq": "61,66",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "successor",
        "uri": "http://dbpedia.org/property/successor",
        "seq": "28,37",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "office holder",
        "uri": "http://dbpedia.org/ontology/OfficeHolder",
        "seq": "9,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "307",
    "question": "What band has Joe Hahn and Chester Bennington?",
    "SerialNumber": "3379",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/property/currentMembers\u003e \u003chttp://dbpedia.org/resource/Joe_Hahn\u003e . ?uri \u003chttp://dbpedia.org/property/currentMembers\u003e \u003chttp://dbpedia.org/resource/Chester_Bennington\u003e . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Band\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Joe Hahn",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Joe_Hahn",
        "seq": "14,22"
      },
      {
        "label": "Chester Bennington",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Chester_Bennington",
        "seq": "27,45"
      }
    ],
    "id": "fb88bbd86d0d4401951bf15cad3dc0ad",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/currentMembers",
        "mappedBy": "word2vec"
      },
      {
        "uri": "http://dbpedia.org/property/currentMembers",
        "mappedBy": "word2vec"
      },
      {
        "label": "band",
        "uri": "http://dbpedia.org/ontology/Band",
        "seq": "5,9",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "In which cities are there american football teams where Matt Snorton played?",
    "SerialNumber": "3380",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Matt_Snorton\u003e \u003chttp://dbpedia.org/property/pastteams\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/locationCity\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/AmericanFootballTeam\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Matt Snorton",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Matt_Snorton",
        "seq": "56,68"
      }
    ],
    "id": "a7f115fe1444401b808019eec0ae4008",
    "predicate mapping": [
      {
        "label": "teams",
        "uri": "http://dbpedia.org/property/pastteams",
        "seq": "44,49",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "played",
        "uri": "http://dbpedia.org/ontology/locationCity",
        "mappedBy": "word2vec"
      },
      {
        "label": "american football team",
        "uri": "http://dbpedia.org/ontology/AmericanFootballTeam",
        "seq": "26,48",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "How many awards have the french people received?",
    "SerialNumber": "3383",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/stateOfOrigin\u003e \u003chttp://dbpedia.org/resource/French_people\u003e . ?x \u003chttp://dbpedia.org/property/awards\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "french people",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/French_people",
        "seq": "25,38"
      }
    ],
    "id": "b96656337c6747a381cea7ab41528178",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/stateOfOrigin",
        "mappedBy": "word2vec"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Where is the VP buried, which was served by Frederick Cooke?",
    "SerialNumber": "3384",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Frederick_Cooke_(socialist)\u003e \u003chttp://dbpedia.org/ontology/vicePresident\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/restingPlace\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Frederick Cooke",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Frederick_Cooke_(socialist)",
        "seq": "44,59"
      }
    ],
    "id": "06dc963aaf6f4541912707a69c9c48e9",
    "predicate mapping": [
      {
        "label": "served",
        "uri": "http://dbpedia.org/ontology/vicePresident",
        "mappedBy": "word2vec"
      },
      {
        "label": "buried,",
        "uri": "http://dbpedia.org/ontology/restingPlace",
        "seq": "16,23",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "307",
    "question": "What is the sea connected to Oulu and Turku?",
    "SerialNumber": "3385",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/property/cities\u003e \u003chttp://dbpedia.org/resource/Oulu\u003e . ?uri \u003chttp://dbpedia.org/property/cities\u003e \u003chttp://dbpedia.org/resource/Turku\u003e . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Sea\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Oulu",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Oulu",
        "seq": "29,33"
      },
      {
        "label": "Turku",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Turku",
        "seq": "38,43"
      }
    ],
    "id": "501bbfe69c3a4fcd88d284639842d8dc",
    "predicate mapping": [
      {
        "label": "connected",
        "uri": "http://dbpedia.org/property/cities",
        "mappedBy": "word2vec"
      },
      {
        "label": "connected",
        "uri": "http://dbpedia.org/property/cities",
        "mappedBy": "word2vec"
      },
      {
        "label": "sea",
        "uri": "http://dbpedia.org/ontology/Sea",
        "seq": "12,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "does the US navy have the structure of command of us department of defence?",
    "SerialNumber": "3386",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/United_States_Navy\u003e \u003chttp://dbpedia.org/property/commandStructure\u003e \u003chttp://dbpedia.org/resource/United_States_Department_of_Defense\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "navy",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/United_States_Navy",
        "seq": "999,1000"
      },
      {
        "label": "department",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/United_States_Department_of_Defense",
        "seq": "999,1000"
      }
    ],
    "id": "9d4afc6a5c164d81bbeb24a1bc568c3f",
    "predicate mapping": [
      {
        "label": "structure command",
        "uri": "http://dbpedia.org/property/commandStructure",
        "seq": "-1,16",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "What country did the successor of William Ofori Atta swear his oath to?",
    "SerialNumber": "3387",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/predecessor\u003e \u003chttp://dbpedia.org/resource/William_Ofori_Atta\u003e . ?x \u003chttp://dbpedia.org/property/allegiance\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "William Ofori Atta",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/William_Ofori_Atta",
        "seq": "34,52"
      }
    ],
    "id": "f8dc5dd3cf8c4e4daf406be6479ac498",
    "predicate mapping": [
      {
        "label": "oath",
        "uri": "http://dbpedia.org/property/predecessor",
        "mappedBy": "word2vec"
      },
      {
        "label": "oath",
        "uri": "http://dbpedia.org/property/allegiance",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Through which label has Katy B released her singles?",
    "SerialNumber": "3388",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/writer\u003e \u003chttp://dbpedia.org/resource/Katy_B\u003e . ?x \u003chttp://dbpedia.org/ontology/recordLabel\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Single\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Katy B",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Katy_B",
        "seq": "24,30"
      }
    ],
    "id": "c9d5a274b50f454986740fdfafd327cc",
    "predicate mapping": [
      {
        "label": "released",
        "uri": "http://dbpedia.org/ontology/writer",
        "mappedBy": "word2vec"
      },
      {
        "label": "label",
        "uri": "http://dbpedia.org/ontology/recordLabel",
        "seq": "14,19",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "single",
        "uri": "http://dbpedia.org/ontology/Single",
        "seq": "44,50",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "What are some awards given to the french people?",
    "SerialNumber": "3389",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/stateOfOrigin\u003e \u003chttp://dbpedia.org/resource/French_people\u003e . ?x \u003chttp://dbpedia.org/property/awards\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "french people",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/French_people",
        "seq": "34,47"
      }
    ],
    "id": "ab1274d78df1402ca6ccf7ba5642f936",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/stateOfOrigin",
        "mappedBy": "word2vec"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards",
        "seq": "14,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Where is Lao Plaza Hotel located?",
    "SerialNumber": "3391",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Lao_Plaza_Hotel\u003e \u003chttp://dbpedia.org/property/developer\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Lao Plaza Hotel",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Lao_Plaza_Hotel",
        "seq": "9,24"
      }
    ],
    "id": "57e96d0a037f4c088d5a09944c314b58",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/property/developer",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "405",
    "question": "In how many nations does Rhaetian Railways own train stations?",
    "SerialNumber": "3393",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/owningOrganisation\u003e \u003chttp://dbpedia.org/resource/Rhaetian_Railway\u003e . ?x \u003chttp://dbpedia.org/ontology/country\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Country\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Rhaetian Railways",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Rhaetian_Railway",
        "seq": "25,42"
      }
    ],
    "id": "1a67a8c314f94af3bbb0cac98461b913",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/owningOrganisation",
        "mappedBy": "word2vec"
      },
      {
        "label": "nation",
        "uri": "http://dbpedia.org/ontology/country",
        "seq": "12,18",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "nation",
        "uri": "http://dbpedia.org/ontology/Country",
        "seq": "12,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Where are the burial grounds of Willem Cornelis Janse van Rensburg and Thomas Franois Burgers?",
    "SerialNumber": "3394",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Willem_Cornelis_Janse_van_Rensburg\u003e \u003chttp://dbpedia.org/property/restingplace\u003e ?uri. \u003chttp://dbpedia.org/resource/Thomas_François_Burgers\u003e \u003chttp://dbpedia.org/property/restingplace\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Willem Cornelis Janse van Rensburg",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Willem_Cornelis_Janse_van_Rensburg",
        "seq": "32,66"
      },
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Thomas_François_Burgers",
        "seq": "999,1000"
      }
    ],
    "id": "fe825b7ea80045f19a498f490eb78420",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/restingplace",
        "mappedBy": "word2vec"
      },
      {
        "uri": "http://dbpedia.org/property/restingplace",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which fictional character sculpted by Josh Friedmann was portrayed in Terminator 3 ?",
    "SerialNumber": "3395",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/creator\u003e \u003chttp://dbpedia.org/resource/Josh_Friedman\u003e . ?uri \u003chttp://dbpedia.org/ontology/portrayer\u003e \u003chttp://dbpedia.org/resource/Terminator_3:_Rise_of_the_Machines\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/FictionalCharacter\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Josh Friedman",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Josh_Friedman",
        "seq": "38,51"
      },
      {
        "label": "terminator",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Terminator_3:_Rise_of_the_Machines",
        "seq": "999,1000"
      }
    ],
    "id": "7c11228a01e24c0b81378d51b50efe43",
    "predicate mapping": [
      {
        "label": "Terminator",
        "uri": "http://dbpedia.org/property/creator",
        "mappedBy": "word2vec"
      },
      {
        "label": "portrayed",
        "uri": "http://dbpedia.org/ontology/portrayer",
        "seq": "57,66",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "fictional character",
        "uri": "http://dbpedia.org/ontology/FictionalCharacter",
        "seq": "6,25",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who had headed the governmental agencies whose admin HQ was in Niederkirchnerstrasse?",
    "SerialNumber": "3396",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/headquarter\u003e \u003chttp://dbpedia.org/resource/Niederkirchnerstraße\u003e . ?x \u003chttp://dbpedia.org/ontology/leader\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/GovernmentAgency\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Niederkirchnerstrasse",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Niederkirchnerstraße",
        "seq": "63,84"
      }
    ],
    "id": "6edbb617d6a3485c8a8a32e78e14cf0c",
    "predicate mapping": [
      {
        "label": "admin HQ",
        "uri": "http://dbpedia.org/ontology/headquarter",
        "seq": "47,55",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "agencies",
        "uri": "http://dbpedia.org/ontology/leader",
        "mappedBy": "word2vec"
      },
      {
        "label": "agencies",
        "uri": "http://dbpedia.org/ontology/GovernmentAgency",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "In which city was the company founded , which owns Grasim Bhiwani Textiles?",
    "SerialNumber": "3397",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Grasim_Bhiwani_Textiles\u003e \u003chttp://dbpedia.org/property/parent\u003e ?x . ?x \u003chttp://dbpedia.org/property/foundation\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Company\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Grasim Bhiwani Textiles",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Grasim_Bhiwani_Textiles",
        "seq": "51,74"
      }
    ],
    "id": "4ee990f7399a4511950f55ae69196980",
    "predicate mapping": [
      {
        "label": "owns",
        "uri": "http://dbpedia.org/property/parent",
        "mappedBy": "word2vec"
      },
      {
        "label": "founded",
        "uri": "http://dbpedia.org/property/foundation",
        "seq": "30,37",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company",
        "seq": "22,29",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which country has outflow of  Lake Uniamsi and  inflows of the Cahora Bassa?",
    "SerialNumber": "3403",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Lake_Uniamési\u003e \u003chttp://dbpedia.org/property/outflow\u003e ?uri. \u003chttp://dbpedia.org/resource/Cahora_Bassa\u003e \u003chttp://dbpedia.org/property/inflow\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Lake_Uniamési",
        "seq": "999,1000"
      },
      {
        "label": "Cahora Bassa",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Cahora_Bassa",
        "seq": "63,75"
      }
    ],
    "id": "40d15e549b0f4899acb00cf469105b8d",
    "predicate mapping": [
      {
        "label": "outflow",
        "uri": "http://dbpedia.org/property/outflow",
        "seq": "18,25",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "inflows",
        "uri": "http://dbpedia.org/property/inflow",
        "seq": "48,55",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which city\u0027s neighboring municipalities are Lancy and  Pregny-Chambsy?",
    "SerialNumber": "3405",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/neighboringMunicipalities\u003e \u003chttp://dbpedia.org/resource/Lancy\u003e . ?uri \u003chttp://dbpedia.org/ontology/neighboringMunicipality\u003e \u003chttp://dbpedia.org/resource/Pregny-Chambésy\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Location\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Lancy",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Lancy",
        "seq": "44,49"
      },
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Pregny-Chambésy",
        "seq": "999,1000"
      }
    ],
    "id": "9a80906c6ddb4ce1ae6405210f073325",
    "predicate mapping": [
      {
        "label": "neighboring municipalities",
        "uri": "http://dbpedia.org/property/neighboringMunicipalities",
        "seq": "13,39",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "neighboring",
        "uri": "http://dbpedia.org/ontology/neighboringMunicipality",
        "seq": "13,24",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "",
        "uri": "http://dbpedia.org/ontology/Location",
        "seq": "0,0",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Which military battles are associated with Israel?",
    "SerialNumber": "3415",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/place\u003e \u003chttp://dbpedia.org/resource/Israel\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MilitaryConflict\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Israel",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Israel",
        "seq": "43,49"
      }
    ],
    "id": "6f21a2501af44a8d9c2678f2e61a2207",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/place",
        "mappedBy": "word2vec"
      },
      {
        "label": "military",
        "uri": "http://dbpedia.org/ontology/MilitaryConflict",
        "seq": "6,14",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Which city has it\u0027s landmark as Cheasty Boulevard South?",
    "SerialNumber": "3416",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Cheasty_Boulevard_South\u003e \u003chttp://dbpedia.org/ontology/maintainedBy\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Cheasty Boulevard South",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Cheasty_Boulevard_South",
        "seq": "32,55"
      }
    ],
    "id": "724442cd9501404cbafe30105de16e01",
    "predicate mapping": [
      {
        "label": "landmark",
        "uri": "http://dbpedia.org/ontology/maintainedBy",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "What are some short story kind of Books?",
    "SerialNumber": "3419",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/literaryGenre\u003e \u003chttp://dbpedia.org/resource/Short_story\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "short story",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Short_story",
        "seq": "14,25"
      }
    ],
    "id": "c593b3d2dd42455e9a67d0aa2e905027",
    "predicate mapping": [
      {
        "label": "Books",
        "uri": "http://dbpedia.org/ontology/literaryGenre",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "307",
    "question": "Give me the sitcoms where Eliza Schneider and Isaac Hayes gave voice?",
    "SerialNumber": "3420",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/property/voices\u003e \u003chttp://dbpedia.org/resource/Eliza_Schneider\u003e . ?uri \u003chttp://dbpedia.org/property/voices\u003e \u003chttp://dbpedia.org/resource/Isaac_Hayes\u003e . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Eliza Schneider",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Eliza_Schneider",
        "seq": "26,41"
      },
      {
        "label": "Isaac Hayes",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Isaac_Hayes",
        "seq": "46,57"
      }
    ],
    "id": "da876b5724b64e209959a34efc201d5f",
    "predicate mapping": [
      {
        "label": "voice",
        "uri": "http://dbpedia.org/property/voices",
        "seq": "63,68",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "voice",
        "uri": "http://dbpedia.org/property/voices",
        "seq": "63,68",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "sitcoms",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who employed the person famous for the Boeing fa18ef Super Hornet?",
    "SerialNumber": "3423",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/knownFor\u003e \u003chttp://dbpedia.org/resource/Boeing_F/A-18E/F_Super_Hornet\u003e . ?x \u003chttp://dbpedia.org/property/employer\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [],
    "id": "d0db4cd9f5624de8a9bf3c8d4b104695",
    "predicate mapping": [
      {
        "label": "Hornet",
        "uri": "http://dbpedia.org/ontology/knownFor",
        "mappedBy": "word2vec"
      },
      {
        "label": "hornet super",
        "uri": "http://dbpedia.org/resource/Boeing_F/A-18E/F_Super_Hornet",
        "seq": "-1,11",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "employed",
        "uri": "http://dbpedia.org/property/employer",
        "seq": "4,12",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/Person",
        "seq": "17,23",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "List the resting place of the people who served in Norwalk Trainband.",
    "SerialNumber": "3425",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/militaryUnit\u003e \u003chttp://dbpedia.org/resource/Norwalk_Trainband\u003e . ?x \u003chttp://dbpedia.org/property/restingplace\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Norwalk Trainband",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Norwalk_Trainband",
        "seq": "51,68"
      }
    ],
    "id": "ad0c25ffff314adc8360b09d8bfeed66",
    "predicate mapping": [
      {
        "label": "served",
        "uri": "http://dbpedia.org/ontology/militaryUnit",
        "mappedBy": "word2vec"
      },
      {
        "label": "resting place",
        "uri": "http://dbpedia.org/property/restingplace",
        "seq": "9,22",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "served",
        "uri": "http://dbpedia.org/ontology/Person",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "311",
    "question": "List all the narrator of the albums which had Alan Barzman as one of the narrator ?",
    "SerialNumber": "3427",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/narrated\u003e \u003chttp://dbpedia.org/resource/Alan_Barzman\u003e . ?x \u003chttp://dbpedia.org/property/narrated\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Album\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Alan Barzman",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Alan_Barzman",
        "seq": "46,58"
      }
    ],
    "id": "cad124dc6dd849f8aa03d47598e6abbb",
    "predicate mapping": [
      {
        "label": "narrator",
        "uri": "http://dbpedia.org/property/narrated",
        "mappedBy": "word2vec"
      },
      {
        "label": "narrator",
        "uri": "http://dbpedia.org/property/narrated",
        "mappedBy": "word2vec"
      },
      {
        "label": "album",
        "uri": "http://dbpedia.org/ontology/Album",
        "seq": "29,34",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "307",
    "question": "Give me all tv shows which are based in boston and massachusetts?",
    "SerialNumber": "3430",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/ontology/location\u003e \u003chttp://dbpedia.org/resource/Boston\u003e . ?uri \u003chttp://dbpedia.org/ontology/location\u003e \u003chttp://dbpedia.org/resource/Massachusetts\u003e . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "boston",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Boston",
        "seq": "40,46"
      },
      {
        "label": "massachusetts",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Massachusetts",
        "seq": "51,64"
      }
    ],
    "id": "f5389602a5104bc0b3691a6dc0b6aed4",
    "predicate mapping": [
      {
        "label": "based",
        "uri": "http://dbpedia.org/ontology/location",
        "mappedBy": "word2vec"
      },
      {
        "label": "based",
        "uri": "http://dbpedia.org/ontology/location",
        "mappedBy": "word2vec"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "15,20",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "Who is married to a Miss Louisiana, USA?",
    "SerialNumber": "3431",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/title\u003e \u003chttp://dbpedia.org/resource/Miss_Louisiana_USA\u003e . ?uri \u003chttp://dbpedia.org/property/spouse\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Miss_Louisiana_USA",
        "seq": "999,1000"
      }
    ],
    "id": "1f8f6352c2c54ce3b53aba360323d3ed",
    "predicate mapping": [
      {
        "label": "USA",
        "uri": "http://dbpedia.org/property/title",
        "mappedBy": "word2vec"
      },
      {
        "label": "married to",
        "uri": "http://dbpedia.org/property/spouse",
        "seq": "7,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who has produced movies that have a James Horner score?",
    "SerialNumber": "3432",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/music\u003e \u003chttp://dbpedia.org/resource/James_Horner\u003e . ?x \u003chttp://dbpedia.org/property/producer\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "James Horner",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/James_Horner",
        "seq": "36,48"
      }
    ],
    "id": "26c1a1fbf2d44a43b2365a9bc2ac9c5c",
    "predicate mapping": [
      {
        "label": "score",
        "uri": "http://dbpedia.org/property/music",
        "mappedBy": "word2vec"
      },
      {
        "label": "produced",
        "uri": "http://dbpedia.org/property/producer",
        "seq": "8,16",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "17,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What is the birth place of the astronaut whose mission was the Vostok programmer?",
    "SerialNumber": "3433",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/mission\u003e \u003chttp://dbpedia.org/resource/Vostok_programme\u003e . ?x \u003chttp://dbpedia.org/ontology/birthPlace\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Astronaut\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Vostok programme",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Vostok_programme",
        "seq": "63,79"
      }
    ],
    "id": "26745f9ea116424bb5a1ed1ac3faa8cf",
    "predicate mapping": [
      {
        "label": "mission",
        "uri": "http://dbpedia.org/property/mission",
        "seq": "47,54",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "birth place",
        "uri": "http://dbpedia.org/ontology/birthPlace",
        "seq": "12,23",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "astronaut",
        "uri": "http://dbpedia.org/ontology/Astronaut",
        "seq": "31,40",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What team did the players start their careers with, who right now play for Fleisher Yarn?",
    "SerialNumber": "3434",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/team\u003e \u003chttp://dbpedia.org/resource/Fleisher_Yarn\u003e . ?x \u003chttp://dbpedia.org/property/debutteam\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Athlete\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Fleisher Yarn",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Fleisher_Yarn",
        "seq": "75,88"
      }
    ],
    "id": "cd54a705b06443df8c1be672abe15815",
    "predicate mapping": [
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/team",
        "seq": "5,9",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/property/debutteam",
        "seq": "5,9",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "play",
        "uri": "http://dbpedia.org/ontology/Athlete",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the company which produces both  Boeing F/A-18 E/F Hornet nad CH-46 Chinook ?",
    "SerialNumber": "3437",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/product\u003e \u003chttp://dbpedia.org/resource/Boeing_F/A-18E/F_Super_Hornet\u003e . ?uri \u003chttp://dbpedia.org/property/products\u003e \u003chttp://dbpedia.org/resource/Boeing_CH-47_Chinook\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Company\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "chinook boeing",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Boeing_CH-47_Chinook",
        "seq": "999,1000"
      }
    ],
    "id": "2d4e39d0c0784adfb281198a892d3894",
    "predicate mapping": [
      {
        "label": "Chinook",
        "uri": "http://dbpedia.org/ontology/product",
        "mappedBy": "word2vec"
      },
      {
        "label": "hornet",
        "uri": "http://dbpedia.org/resource/Boeing_F/A-18E/F_Super_Hornet",
        "seq": "-1,5",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "Chinook",
        "uri": "http://dbpedia.org/property/products",
        "mappedBy": "word2vec"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company",
        "seq": "9,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "406",
    "question": "Count all the awards which were presented by something located in California.",
    "SerialNumber": "3438",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/headquarter\u003e \u003chttp://dbpedia.org/resource/California\u003e . ?uri \u003chttp://dbpedia.org/ontology/presenter\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Award\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "California",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/California",
        "seq": "66,76"
      }
    ],
    "id": "83ca3f4edad24d93a575b23842e8e6e2",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/ontology/headquarter",
        "mappedBy": "word2vec"
      },
      {
        "label": "presented",
        "uri": "http://dbpedia.org/ontology/presenter",
        "seq": "32,41",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/Award",
        "seq": "14,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Where did the aristocrats die whose mother was Maria Ludwika Krasiska?",
    "SerialNumber": "3440",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/mother\u003e \u003chttp://dbpedia.org/resource/Maria_Ludwika_Krasińska\u003e . ?x \u003chttp://dbpedia.org/property/deathPlace\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Royalty\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Maria Ludwika Krasiska",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Maria_Ludwika_Krasińska",
        "seq": "47,69"
      }
    ],
    "id": "5af32623f2d747d88f0b3fe7df64b489",
    "predicate mapping": [
      {
        "label": "mother",
        "uri": "http://dbpedia.org/property/mother",
        "seq": "36,42",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "die",
        "uri": "http://dbpedia.org/property/deathPlace",
        "mappedBy": "word2vec"
      },
      {
        "label": "die",
        "uri": "http://dbpedia.org/ontology/Royalty",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "111",
    "question": "Find the total number of  ingredient of the recepies whose ingredient is common Mushroom ?",
    "SerialNumber": "3444",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/ingredient\u003e \u003chttp://dbpedia.org/resource/Agaricus_bisporus\u003e . ?x \u003chttp://dbpedia.org/ontology/ingredient\u003e ?uri }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Agaricus_bisporus",
        "seq": "999,1000"
      }
    ],
    "id": "a8d7c64d096f49249d1bbdba54ea0dab",
    "predicate mapping": [
      {
        "label": "ingredient",
        "uri": "http://dbpedia.org/ontology/ingredient",
        "seq": "26,36",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "ingredient",
        "uri": "http://dbpedia.org/ontology/ingredient",
        "seq": "26,36",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "How many teams have used the stadiums which have been rented by the Canadian Hockey team?",
    "SerialNumber": "3448",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/tenant\u003e \u003chttp://dbpedia.org/resource/Hockey_Canada\u003e . ?x \u003chttp://dbpedia.org/property/tenants\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Canadian",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Hockey_Canada",
        "seq": "68,76"
      }
    ],
    "id": "ea10d95104514ba8bca12c1165e2f397",
    "predicate mapping": [
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/tenant",
        "mappedBy": "word2vec"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/property/tenants",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "406",
    "question": "How many TV shows are similar to the ones belonging to fantasy genre?",
    "SerialNumber": "3450",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/genre\u003e \u003chttp://dbpedia.org/resource/Fantasy_television\u003e . ?uri \u003chttp://dbpedia.org/ontology/related\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "fantasy",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Fantasy_television",
        "seq": "999,1000"
      }
    ],
    "id": "55b536c2b837474d8aa722a73037bd49",
    "predicate mapping": [
      {
        "label": "genre",
        "uri": "http://dbpedia.org/ontology/genre",
        "seq": "63,68",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "fantasy",
        "uri": "http://dbpedia.org/ontology/related",
        "mappedBy": "word2vec"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "12,17",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "What religions are followed by economists?",
    "SerialNumber": "3452",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/profession\u003e \u003chttp://dbpedia.org/resource/Economist\u003e . ?x \u003chttp://dbpedia.org/ontology/religion\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "economist",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Economist",
        "seq": "31,40"
      }
    ],
    "id": "7410520bca4c45bbab391b31101a6df3",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/profession",
        "mappedBy": "word2vec"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion",
        "seq": "5,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Is Rajya Sabha a house of parliament in India?",
    "SerialNumber": "3453",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Parliament_of_India\u003e \u003chttp://dbpedia.org/property/houses\u003e \u003chttp://dbpedia.org/resource/Rajya_Sabha\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "parliament india",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Parliament_of_India",
        "seq": "999,1000"
      },
      {
        "label": "Rajya Sabha",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Rajya_Sabha",
        "seq": "3,14"
      }
    ],
    "id": "e60d4439142244d0b14d8650ba3ccbcd",
    "predicate mapping": [
      {
        "label": "house",
        "uri": "http://dbpedia.org/property/houses",
        "seq": "17,22",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "How many teams have rented stadiums in Canada?",
    "SerialNumber": "3458",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/location\u003e \u003chttp://dbpedia.org/resource/Canada\u003e . ?x \u003chttp://dbpedia.org/property/tenants\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Canada",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Canada",
        "seq": "39,45"
      }
    ],
    "id": "159f695fd9f34609bd09d41a97aacb40",
    "predicate mapping": [
      {
        "label": "stadiums",
        "uri": "http://dbpedia.org/property/location",
        "mappedBy": "word2vec"
      },
      {
        "label": "stadiums",
        "uri": "http://dbpedia.org/property/tenants",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Where was Babita born ?",
    "SerialNumber": "3459",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Babita\u003e \u003chttp://dbpedia.org/property/birthplace\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Babita",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Babita",
        "seq": "10,16"
      }
    ],
    "id": "aca36b0993ba45edb0f0fc957c97ce23",
    "predicate mapping": [
      {
        "label": "born",
        "uri": "http://dbpedia.org/property/birthplace",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "Name some politicians buried in a place near Orange Virginia?",
    "SerialNumber": "3461",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/nearestCity\u003e \u003chttp://dbpedia.org/resource/Orange,_Virginia\u003e . ?uri \u003chttp://dbpedia.org/property/restingplace\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/OfficeHolder\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Orange Virginia",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Orange,_Virginia",
        "seq": "45,60"
      }
    ],
    "id": "b0dd4c5ad51349f1946188f22d7fa899",
    "predicate mapping": [
      {
        "label": "near",
        "uri": "http://dbpedia.org/property/nearestCity",
        "seq": "40,44",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "place",
        "uri": "http://dbpedia.org/property/restingplace",
        "seq": "34,39",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "buried",
        "uri": "http://dbpedia.org/ontology/OfficeHolder",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "307",
    "question": "What is the sea whose cities are Gdask and Oulu?",
    "SerialNumber": "3462",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/property/cities\u003e \u003chttp://dbpedia.org/resource/Gdańsk\u003e . ?uri \u003chttp://dbpedia.org/property/cities\u003e \u003chttp://dbpedia.org/resource/Oulu\u003e . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Sea\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Gdańsk",
        "seq": "999,1000"
      },
      {
        "label": "Oulu",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Oulu",
        "seq": "43,47"
      }
    ],
    "id": "514539c7a7854fb8a29b7c24dc730dbf",
    "predicate mapping": [
      {
        "label": "cities",
        "uri": "http://dbpedia.org/property/cities",
        "seq": "22,28",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "cities",
        "uri": "http://dbpedia.org/property/cities",
        "seq": "22,28",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "sea",
        "uri": "http://dbpedia.org/ontology/Sea",
        "seq": "12,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "How many awards have been given to the participants of the Lawrence Realization Stakes?",
    "SerialNumber": "3465",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/race\u003e \u003chttp://dbpedia.org/resource/Lawrence_Realization_Stakes\u003e . ?x \u003chttp://dbpedia.org/ontology/honours\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Lawrence Realization Stakes",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Lawrence_Realization_Stakes",
        "seq": "59,86"
      }
    ],
    "id": "610e75c938944f818e964d8858da9836",
    "predicate mapping": [
      {
        "label": "participants",
        "uri": "http://dbpedia.org/property/race",
        "mappedBy": "word2vec"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/honours",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Who commanded the invasion of Buwat and made Fatima bint Sa\u0027d famous?",
    "SerialNumber": "3475",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Invasion_of_Buwat\u003e \u003chttp://dbpedia.org/property/commander\u003e ?uri. \u003chttp://dbpedia.org/resource/Fatimah_bint_Sa\u0027d\u003e \u003chttp://dbpedia.org/ontology/knownFor\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "invasion of Buwat",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Invasion_of_Buwat",
        "seq": "18,35"
      },
      {
        "label": "fatima sa\u0027d bint",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Fatimah_bint_Sa\u0027d",
        "seq": "999,1000"
      }
    ],
    "id": "0134077a418246169b05e5390e035b00",
    "predicate mapping": [
      {
        "label": "commanded",
        "uri": "http://dbpedia.org/property/commander",
        "seq": "4,13",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "famous",
        "uri": "http://dbpedia.org/ontology/knownFor",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the ethicity of Ted Falon?",
    "SerialNumber": "3476",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Ted_Failon\u003e \u003chttp://dbpedia.org/ontology/ethnicity\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ted Falon",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Ted_Failon",
        "seq": "24,33"
      }
    ],
    "id": "f742b26c254f48ada294bbb8649d15c3",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/ethnicity",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Who are the astronauts associated with NASA?",
    "SerialNumber": "3477",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/type\u003e \u003chttp://dbpedia.org/resource/NASA\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Astronaut\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "NASA",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/NASA",
        "seq": "39,43"
      }
    ],
    "id": "c73fef8ef82040cdb4ef06b267d8b45d",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/type",
        "mappedBy": "word2vec"
      },
      {
        "label": "astronaut",
        "uri": "http://dbpedia.org/ontology/Astronaut",
        "seq": "12,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the person whose mother name is Cedella Booker and has a son named Sharon Marley?",
    "SerialNumber": "3478",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/parent\u003e \u003chttp://dbpedia.org/resource/Cedella_Booker\u003e . ?uri \u003chttp://dbpedia.org/property/children\u003e \u003chttp://dbpedia.org/resource/Sharon_Marley\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Cedella Booker",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Cedella_Booker",
        "seq": "37,51"
      },
      {
        "label": "Sharon Marley",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Sharon_Marley",
        "seq": "72,85"
      }
    ],
    "id": "fa685bca2d1949fd9aa9c98cb2200dfe",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/parent",
        "mappedBy": "word2vec"
      },
      {
        "label": "son",
        "uri": "http://dbpedia.org/property/children",
        "seq": "12,15",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/Person",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Which kind of buildings are found in England?",
    "SerialNumber": "3479",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/locationCountry\u003e \u003chttp://dbpedia.org/resource/England\u003e . ?x \u003chttp://dbpedia.org/ontology/type\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Building\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "England",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/England",
        "seq": "37,44"
      }
    ],
    "id": "aa855f60d8464cb291efa723306a8f74",
    "predicate mapping": [
      {
        "label": "found",
        "uri": "http://dbpedia.org/property/locationCountry",
        "mappedBy": "word2vec"
      },
      {
        "label": "found",
        "uri": "http://dbpedia.org/ontology/type",
        "mappedBy": "word2vec"
      },
      {
        "label": "building",
        "uri": "http://dbpedia.org/ontology/Building",
        "seq": "14,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Cricket is played by which countries\u0027 citizens?",
    "SerialNumber": "3484",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/occupation\u003e \u003chttp://dbpedia.org/resource/Cricket\u003e . ?x \u003chttp://dbpedia.org/ontology/stateOfOrigin\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Cricket",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Cricket",
        "seq": "0,7"
      }
    ],
    "id": "1cb5a6736cd044c798948ca8e81ad7fb",
    "predicate mapping": [
      {
        "label": "citizens",
        "uri": "http://dbpedia.org/ontology/occupation",
        "mappedBy": "word2vec"
      },
      {
        "uri": "http://dbpedia.org/ontology/stateOfOrigin",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who all have been presenters on shows by the NBC?",
    "SerialNumber": "3487",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/channel\u003e \u003chttp://dbpedia.org/resource/NBC\u003e . ?x \u003chttp://dbpedia.org/property/presenter\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "NBC",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/NBC",
        "seq": "45,48"
      }
    ],
    "id": "2ac17e74901841a48f166336033061b1",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/channel",
        "mappedBy": "word2vec"
      },
      {
        "label": "presenter",
        "uri": "http://dbpedia.org/property/presenter",
        "seq": "18,27",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "32,37",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "307",
    "question": "What tv shows were born out of a collaboration of playtone and dreamworks?",
    "SerialNumber": "3488",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/ontology/company\u003e \u003chttp://dbpedia.org/resource/Playtone\u003e . ?uri \u003chttp://dbpedia.org/ontology/company\u003e \u003chttp://dbpedia.org/resource/DreamWorks_Television\u003e . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "playtone",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Playtone",
        "seq": "50,58"
      },
      {
        "label": "dreamworks",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/DreamWorks_Television",
        "seq": "999,1000"
      }
    ],
    "id": "768ceadf1cfc424f98c61ac9892e985a",
    "predicate mapping": [
      {
        "label": "collaboration",
        "uri": "http://dbpedia.org/ontology/company",
        "mappedBy": "word2vec"
      },
      {
        "label": "collaboration",
        "uri": "http://dbpedia.org/ontology/company",
        "mappedBy": "word2vec"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "8,13",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who all have written songs that were then recorded in the Criteria Studios?",
    "SerialNumber": "3489",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/recordedIn\u003e \u003chttp://dbpedia.org/resource/Criteria_Studios\u003e . ?x \u003chttp://dbpedia.org/property/writer\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MusicalWork\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Criteria Studios",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Criteria_Studios",
        "seq": "58,74"
      }
    ],
    "id": "ee96d704c0094e77b6002d5894aa2765",
    "predicate mapping": [
      {
        "label": "recorded in",
        "uri": "http://dbpedia.org/ontology/recordedIn",
        "seq": "42,53",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "written",
        "uri": "http://dbpedia.org/property/writer",
        "seq": "13,20",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "songs",
        "uri": "http://dbpedia.org/ontology/MusicalWork",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "What are all the religions that have been followed by the Sir Lankan attorneys?",
    "SerialNumber": "3490",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/profession\u003e \u003chttp://dbpedia.org/resource/Attorneys_in_Sri_Lanka\u003e . ?x \u003chttp://dbpedia.org/ontology/religion\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Sir Lankan",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Attorneys_in_Sri_Lanka",
        "seq": "58,68"
      }
    ],
    "id": "9636268ee7834242905069b017dfdce7",
    "predicate mapping": [
      {
        "label": "attorneys",
        "uri": "http://dbpedia.org/ontology/profession",
        "mappedBy": "word2vec"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion",
        "seq": "17,25",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "Through how many labels has Katy B released her singles?",
    "SerialNumber": "3493",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/writer\u003e \u003chttp://dbpedia.org/resource/Katy_B\u003e . ?x \u003chttp://dbpedia.org/ontology/recordLabel\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Katy B",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Katy_B",
        "seq": "28,34"
      }
    ],
    "id": "eebefa6c5abc4c53ac2067ca0bed237d",
    "predicate mapping": [
      {
        "label": "singles",
        "uri": "http://dbpedia.org/ontology/writer",
        "mappedBy": "word2vec"
      },
      {
        "label": "label",
        "uri": "http://dbpedia.org/ontology/recordLabel",
        "seq": "17,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "Which newspaper is owned by people living in Oslo?",
    "SerialNumber": "3494",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/location\u003e \u003chttp://dbpedia.org/resource/Oslo\u003e . ?uri \u003chttp://dbpedia.org/property/owners\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Oslo",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Oslo",
        "seq": "45,49"
      }
    ],
    "id": "1511c21130fd42db8503ef152de463ad",
    "predicate mapping": [
      {
        "label": "living",
        "uri": "http://dbpedia.org/ontology/location",
        "mappedBy": "word2vec"
      },
      {
        "label": "is owned by",
        "uri": "http://dbpedia.org/property/owners",
        "seq": "16,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "How many people have written for Gangan Comics?",
    "SerialNumber": "3495",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/magazine\u003e \u003chttp://dbpedia.org/resource/Gangan_Comics\u003e . ?x \u003chttp://dbpedia.org/property/author\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Gangan Comics",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Gangan_Comics",
        "seq": "33,46"
      }
    ],
    "id": "18c0cfe0eeb245e5be6ccbe05f916c12",
    "predicate mapping": [
      {
        "label": "written",
        "uri": "http://dbpedia.org/property/magazine",
        "mappedBy": "word2vec"
      },
      {
        "label": "written",
        "uri": "http://dbpedia.org/property/author",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Is William H Blanchard buried in Colorado?",
    "SerialNumber": "3496",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/William_H._Blanchard\u003e \u003chttp://dbpedia.org/property/placeofburial\u003e \u003chttp://dbpedia.org/resource/Colorado\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "blanchard william",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/William_H._Blanchard",
        "seq": "999,1000"
      },
      {
        "label": "Colorado",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Colorado",
        "seq": "33,41"
      }
    ],
    "id": "c279410514bf4a78804985526c37251c",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/placeofburial",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Name the common institute of Robert hall and Erica Frank ?",
    "SerialNumber": "3498",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Robert_Hall_(economist)\u003e \u003chttp://dbpedia.org/ontology/institution\u003e ?uri. \u003chttp://dbpedia.org/resource/Erica_Frank\u003e \u003chttp://dbpedia.org/ontology/institution\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Robert hall",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Robert_Hall_(economist)",
        "seq": "29,40"
      },
      {
        "label": "Erica Frank",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Erica_Frank",
        "seq": "45,56"
      }
    ],
    "id": "60deb84874954198b4c9b6cc5c85e747",
    "predicate mapping": [
      {
        "label": "institute",
        "uri": "http://dbpedia.org/ontology/institution",
        "mappedBy": "word2vec"
      },
      {
        "label": "institute",
        "uri": "http://dbpedia.org/ontology/institution",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "What award was won by the father of Angelina Jolie?",
    "SerialNumber": "3499",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/children\u003e \u003chttp://dbpedia.org/resource/Angelina_Jolie\u003e . ?x \u003chttp://dbpedia.org/ontology/award\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Angelina Jolie",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Angelina_Jolie",
        "seq": "36,50"
      }
    ],
    "id": "6b9c942fcd1c48aba22c20b5693b249f",
    "predicate mapping": [
      {
        "label": "father",
        "uri": "http://dbpedia.org/property/children",
        "mappedBy": "word2vec"
      },
      {
        "label": "award",
        "uri": "http://dbpedia.org/ontology/award",
        "seq": "5,10",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "What were robert sarvis and JAck Ryan nominated for ?",
    "SerialNumber": "3500",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Robert_Sarvis\u003e \u003chttp://dbpedia.org/ontology/nominee\u003e ?uri. \u003chttp://dbpedia.org/resource/Jack_Ryan_(politician)\u003e \u003chttp://dbpedia.org/ontology/nominee\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "robert sarvis",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Robert_Sarvis",
        "seq": "10,23"
      },
      {
        "label": "JAck Ryan",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Jack_Ryan_(politician)",
        "seq": "28,37"
      }
    ],
    "id": "42477bee3a644a5cbe1bbca800206582",
    "predicate mapping": [
      {
        "label": "nominated",
        "uri": "http://dbpedia.org/ontology/nominee",
        "mappedBy": "word2vec"
      },
      {
        "label": "nominated",
        "uri": "http://dbpedia.org/ontology/nominee",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Is GIMP written in GTK+?",
    "SerialNumber": "3504",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/GIMP\u003e \u003chttp://dbpedia.org/property/programmingLanguage\u003e \u003chttp://dbpedia.org/resource/GTK+\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "GIMP",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/GIMP",
        "seq": "3,7"
      },
      {
        "label": "GTK+",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/GTK+",
        "seq": "19,23"
      }
    ],
    "id": "b60be328eefd4fc994895d7e2c04b7e6",
    "predicate mapping": [
      {
        "label": "written",
        "uri": "http://dbpedia.org/property/programmingLanguage",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "401",
    "question": "How many shows are aired on Comedy Central?",
    "SerialNumber": "3509",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/property/network\u003e \u003chttp://dbpedia.org/resource/Comedy_Central\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Comedy Central",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Comedy_Central",
        "seq": "28,42"
      }
    ],
    "id": "e3fa455d918040598237f76a011b287b",
    "predicate mapping": [
      {
        "label": "aired",
        "uri": "http://dbpedia.org/property/network",
        "mappedBy": "word2vec"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "9,14",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Where does the river flow into which begins in Lebrsnik?",
    "SerialNumber": "3511",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/sourcePlace\u003e \u003chttp://dbpedia.org/resource/Lebršnik\u003e . ?x \u003chttp://dbpedia.org/ontology/riverMouth\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Lebrsnik",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Lebršnik",
        "seq": "47,55"
      }
    ],
    "id": "6fcdd77ecd8d48df85988971b5efa3ad",
    "predicate mapping": [
      {
        "label": "begins",
        "uri": "http://dbpedia.org/ontology/sourcePlace",
        "mappedBy": "word2vec"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/riverMouth",
        "seq": "15,20",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Where did the conflict take place where Liu Mingchuan fought?",
    "SerialNumber": "3512",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Liu_Mingchuan\u003e \u003chttp://dbpedia.org/property/battles\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/territory\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Liu Mingchuan",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Liu_Mingchuan",
        "seq": "40,53"
      }
    ],
    "id": "51ba46fe1c4e481f899d93f44dfae6d9",
    "predicate mapping": [
      {
        "label": "fought",
        "uri": "http://dbpedia.org/property/battles",
        "mappedBy": "word2vec"
      },
      {
        "label": "fought",
        "uri": "http://dbpedia.org/ontology/territory",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Name the loocation of Lekh Castle which is also the location of SamurAbsheron channel ?",
    "SerialNumber": "3515",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Lekh_Castle\u003e \u003chttp://dbpedia.org/ontology/location\u003e ?uri. \u003chttp://dbpedia.org/resource/Samur–Absheron_channel\u003e \u003chttp://dbpedia.org/ontology/sourceCountry\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Lekh Castle",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Lekh_Castle",
        "seq": "22,33"
      },
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Samur–Absheron_channel",
        "seq": "999,1000"
      }
    ],
    "id": "4f77489b44f4444fb99edd7e387255a6",
    "predicate mapping": [
      {
        "label": "location",
        "uri": "http://dbpedia.org/ontology/location",
        "seq": "52,60",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "channel",
        "uri": "http://dbpedia.org/ontology/sourceCountry",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Which religion is followed by the PM who was served by Chea Sim?",
    "SerialNumber": "3521",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Chea_Sim\u003e \u003chttp://dbpedia.org/property/primeminister\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/religion\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Chea Sim",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Chea_Sim",
        "seq": "55,63"
      }
    ],
    "id": "67978a98005d4f27897894daf8f8feeb",
    "predicate mapping": [
      {
        "label": "served",
        "uri": "http://dbpedia.org/property/primeminister",
        "mappedBy": "word2vec"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion",
        "seq": "6,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "311",
    "question": "Name the parts of the settlements which has New Braunfels as one of the parts ?",
    "SerialNumber": "3524",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/part\u003e \u003chttp://dbpedia.org/resource/New_Braunfels,_Texas\u003e . ?x \u003chttp://dbpedia.org/ontology/part\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Settlement\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "braunfels new",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/New_Braunfels,_Texas",
        "seq": "999,1000"
      }
    ],
    "id": "dbac6210102246678872e25416ced6dc",
    "predicate mapping": [
      {
        "label": "part",
        "uri": "http://dbpedia.org/ontology/part",
        "seq": "9,13",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "part",
        "uri": "http://dbpedia.org/ontology/part",
        "seq": "9,13",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "settlement",
        "uri": "http://dbpedia.org/ontology/Settlement",
        "seq": "22,32",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who is the headcoach of 2014-15 Virginia Tech Hokies men\u0027s basketball team ?",
    "SerialNumber": "3526",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/2014–15_Virginia_Tech_Hokies_men\u0027s_basketball_team\u003e \u003chttp://dbpedia.org/property/headcoach\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "basketball virginia hokies",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/2014–15_Virginia_Tech_Hokies_men\u0027s_basketball_team",
        "seq": "999,1000"
      }
    ],
    "id": "8324de1b412b4b4a827a1a102c028585",
    "predicate mapping": [
      {
        "label": "headcoach",
        "uri": "http://dbpedia.org/property/headcoach",
        "seq": "11,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "name the home stadium of FC Spartak Moscow season 2011-12",
    "SerialNumber": "3527",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/2011–12_FC_Spartak_Moscow_season\u003e \u003chttp://dbpedia.org/ontology/homeStadium\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "spartak season moscow",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/2011–12_FC_Spartak_Moscow_season",
        "seq": "999,1000"
      }
    ],
    "id": "32830f79373c474abbf24909919f630e",
    "predicate mapping": [
      {
        "label": "home stadium",
        "uri": "http://dbpedia.org/ontology/homeStadium",
        "seq": "9,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "Give me a list of everyone who married the musicians signed up with Pablo Records?",
    "SerialNumber": "3529",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/label\u003e \u003chttp://dbpedia.org/resource/Pablo_Records\u003e . ?uri \u003chttp://dbpedia.org/ontology/spouse\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Pablo Records",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Pablo_Records",
        "seq": "68,81"
      }
    ],
    "id": "8d0baff96ff24540ad867eca41eeb113",
    "predicate mapping": [
      {
        "label": "signed",
        "uri": "http://dbpedia.org/property/label",
        "mappedBy": "word2vec"
      },
      {
        "label": "married",
        "uri": "http://dbpedia.org/ontology/spouse",
        "seq": "31,38",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which interest of Philip Novak is the relegion of Vesak ?",
    "SerialNumber": "3531",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Philip_Novak\u003e \u003chttp://dbpedia.org/property/mainInterests\u003e ?uri. \u003chttp://dbpedia.org/resource/Vesak\u003e \u003chttp://dbpedia.org/ontology/type\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Philip Novak",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Philip_Novak",
        "seq": "18,30"
      },
      {
        "label": "Vesak",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Vesak",
        "seq": "50,55"
      }
    ],
    "id": "91be6e04144043e78dc8164ea13e0aac",
    "predicate mapping": [
      {
        "label": "interest",
        "uri": "http://dbpedia.org/property/mainInterests",
        "seq": "6,14",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "uri": "http://dbpedia.org/ontology/type",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who made the singles on the famous album Aida?",
    "SerialNumber": "3535",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/album\u003e \u003chttp://dbpedia.org/resource/Elton_John_and_Tim_Rice\u0027s_Aida\u003e . ?x \u003chttp://dbpedia.org/ontology/musicalArtist\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Single\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "aida",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Elton_John_and_Tim_Rice\u0027s_Aida",
        "seq": "999,1000"
      }
    ],
    "id": "e96e350f71e64985b52abd2ed25349a1",
    "predicate mapping": [
      {
        "label": "album",
        "uri": "http://dbpedia.org/ontology/album",
        "seq": "35,40",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "Aida",
        "uri": "http://dbpedia.org/ontology/musicalArtist",
        "mappedBy": "word2vec"
      },
      {
        "label": "single",
        "uri": "http://dbpedia.org/ontology/Single",
        "seq": "13,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What sport played in Polytechnic uni of San Juan has also made advocate nasiruddin famous?",
    "SerialNumber": "3537",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Advocate_Nasiruddin\u003e \u003chttp://dbpedia.org/ontology/knownFor\u003e ?uri. \u003chttp://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_San_Juan\u003e \u003chttp://dbpedia.org/ontology/sport\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "advocate nasiruddin",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Advocate_Nasiruddin",
        "seq": "63,82"
      },
      {
        "label": "polytechnic",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_San_Juan",
        "seq": "999,1000"
      }
    ],
    "id": "54adeba4e7da49f286068bdbf39d26d8",
    "predicate mapping": [
      {
        "label": "famous",
        "uri": "http://dbpedia.org/ontology/knownFor",
        "mappedBy": "word2vec"
      },
      {
        "label": "sport",
        "uri": "http://dbpedia.org/ontology/sport",
        "seq": "5,10",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Where is the fictional character from, whose last appearance was in the Avengers, 1998?",
    "SerialNumber": "3538",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/last\u003e \u003chttp://dbpedia.org/resource/The_Avengers_(1998_film)\u003e . ?x \u003chttp://dbpedia.org/property/nationality\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/FictionalCharacter\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "the Avengers",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Avengers_(1998_film)",
        "seq": "68,80"
      }
    ],
    "id": "7e43e5b0e86d44889fb270fb7665e52b",
    "predicate mapping": [
      {
        "label": "last",
        "uri": "http://dbpedia.org/property/last",
        "seq": "45,49",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "appearance",
        "uri": "http://dbpedia.org/property/nationality",
        "mappedBy": "word2vec"
      },
      {
        "label": "fictional character",
        "uri": "http://dbpedia.org/ontology/FictionalCharacter",
        "seq": "13,32",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What are the movies with Daniel Waters as screenwriter?",
    "SerialNumber": "3543",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/screenplay\u003e \u003chttp://dbpedia.org/resource/Daniel_Waters_(screenwriter)\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Daniel Waters",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Daniel_Waters_(screenwriter)",
        "seq": "25,38"
      }
    ],
    "id": "782f901d32c14d0bb32eb413e439eb02",
    "predicate mapping": [
      {
        "label": "screenwriter",
        "uri": "http://dbpedia.org/property/screenplay",
        "mappedBy": "word2vec"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "13,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Where are the tombs of alumni of ational academy museum and school?",
    "SerialNumber": "3545",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/training\u003e \u003chttp://dbpedia.org/resource/National_Academy_Museum_and_School\u003e . ?x \u003chttp://dbpedia.org/ontology/restingPlace\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "ational academy school museum",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/National_Academy_Museum_and_School",
        "seq": "999,1000"
      }
    ],
    "id": "c1d9d01c89334b408616693a39652284",
    "predicate mapping": [
      {
        "label": "school",
        "uri": "http://dbpedia.org/ontology/training",
        "mappedBy": "word2vec"
      },
      {
        "label": "tomb",
        "uri": "http://dbpedia.org/ontology/restingPlace",
        "seq": "14,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What beverage was launched by Ferrero SpA?",
    "SerialNumber": "3546",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/creator\u003e \u003chttp://dbpedia.org/resource/Ferrero_SpA\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Food\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ferrero SpA",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Ferrero_SpA",
        "seq": "30,41"
      }
    ],
    "id": "c462b0293c354f19b0a5dee22d388534",
    "predicate mapping": [
      {
        "label": "launched",
        "uri": "http://dbpedia.org/property/creator",
        "mappedBy": "word2vec"
      },
      {
        "label": "launched",
        "uri": "http://dbpedia.org/ontology/Food",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the TV show with Simon Fuller as artist and Fox as the channel ?",
    "SerialNumber": "3548",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/creator\u003e \u003chttp://dbpedia.org/resource/Simon_Fuller\u003e . ?uri \u003chttp://dbpedia.org/property/channel\u003e \u003chttp://dbpedia.org/resource/Fox_Broadcasting_Company\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Simon Fuller",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Simon_Fuller",
        "seq": "22,34"
      },
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Fox_Broadcasting_Company",
        "seq": "999,1000"
      }
    ],
    "id": "0f40e662368f43ac9aaa550638105eee",
    "predicate mapping": [
      {
        "label": "Fox",
        "uri": "http://dbpedia.org/property/creator",
        "mappedBy": "word2vec"
      },
      {
        "label": "channel",
        "uri": "http://dbpedia.org/property/channel",
        "seq": "60,67",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "12,16",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "How many athletic associations are there in all of the private universities?",
    "SerialNumber": "3550",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/type\u003e \u003chttp://dbpedia.org/resource/Private_university\u003e . ?x \u003chttp://dbpedia.org/property/athletics\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "private universiti",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Private_university",
        "seq": "55,73"
      }
    ],
    "id": "c4dc2cdbdbc34b52a791cf49139f4a8f",
    "predicate mapping": [
      {
        "label": "es",
        "uri": "http://dbpedia.org/property/type",
        "mappedBy": "word2vec"
      },
      {
        "label": "athletic",
        "uri": "http://dbpedia.org/property/athletics",
        "seq": "9,17",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Which set of researchers won the Gold Medal of the Royal Astronomical Society award?",
    "SerialNumber": "3554",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/prizes\u003e \u003chttp://dbpedia.org/resource/Gold_Medal_of_the_Royal_Astronomical_Society\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Scientist\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Gold Medal of the Royal Astronomical Society",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Gold_Medal_of_the_Royal_Astronomical_Society",
        "seq": "33,77"
      }
    ],
    "id": "598a034edc2b4ba7b7f9eacf0fad1fb2",
    "predicate mapping": [
      {
        "label": "award",
        "uri": "http://dbpedia.org/property/prizes",
        "mappedBy": "word2vec"
      },
      {
        "label": "award",
        "uri": "http://dbpedia.org/ontology/Scientist",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "405",
    "question": "In how many areas do the networks broadcast, which also broadcasts in North Carolina?",
    "SerialNumber": "3555",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/broadcastArea\u003e \u003chttp://dbpedia.org/resource/North_Carolina\u003e . ?x \u003chttp://dbpedia.org/property/area\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Place\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "North Carolina",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/North_Carolina",
        "seq": "70,84"
      }
    ],
    "id": "26d0b20b5e3f4b3bb897f363daa6261f",
    "predicate mapping": [
      {
        "label": "broadcasts",
        "uri": "http://dbpedia.org/ontology/broadcastArea",
        "seq": "56,66",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "area",
        "uri": "http://dbpedia.org/property/area",
        "seq": "12,16",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "networks",
        "uri": "http://dbpedia.org/ontology/Place",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the movie whose director of photography is Gregg Toland and Bernard Herrmann was the music composer?",
    "SerialNumber": "3556",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/cinematography\u003e \u003chttp://dbpedia.org/resource/Gregg_Toland\u003e . ?uri \u003chttp://dbpedia.org/ontology/musicComposer\u003e \u003chttp://dbpedia.org/resource/Bernard_Herrmann\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Gregg Toland",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Gregg_Toland",
        "seq": "48,60"
      },
      {
        "label": "Bernard Herrmann",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Bernard_Herrmann",
        "seq": "65,81"
      }
    ],
    "id": "8236caff2da947d6a6cf88099c134f23",
    "predicate mapping": [
      {
        "label": "photography",
        "uri": "http://dbpedia.org/ontology/cinematography",
        "mappedBy": "word2vec"
      },
      {
        "label": "music composer",
        "uri": "http://dbpedia.org/ontology/musicComposer",
        "seq": "90,104",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What city gave birth to Mishal Raheja and also houses New India Assurance?",
    "SerialNumber": "3557",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Mishal_Raheja\u003e \u003chttp://dbpedia.org/ontology/birthPlace\u003e ?uri. \u003chttp://dbpedia.org/resource/New_India_Assurance\u003e \u003chttp://dbpedia.org/property/location\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Mishal Raheja",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Mishal_Raheja",
        "seq": "24,37"
      },
      {
        "label": "New India Assurance",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/New_India_Assurance",
        "seq": "54,73"
      }
    ],
    "id": "38e4c90868ed468b94cb549c579f9b57",
    "predicate mapping": [
      {
        "label": "birth",
        "uri": "http://dbpedia.org/ontology/birthPlace",
        "seq": "15,20",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "houses",
        "uri": "http://dbpedia.org/property/location",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What are the awrds won by Laemmle Theatres ?",
    "SerialNumber": "3558",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Laemmle_Theatres\u003e \u003chttp://dbpedia.org/ontology/service\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Laemmle Theatres",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Laemmle_Theatres",
        "seq": "26,42"
      }
    ],
    "id": "f91b91df9ef746ababdcfebcf269d810",
    "predicate mapping": [
      {
        "label": "won",
        "uri": "http://dbpedia.org/ontology/service",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "People of which religion have been the members of parliament, and are from the Kalutara Electoral district?",
    "SerialNumber": "3559",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/region\u003e \u003chttp://dbpedia.org/resource/Kalutara_Electoral_District\u003e . ?x \u003chttp://dbpedia.org/ontology/religion\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MemberOfParliament\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Kalutara Electoral district",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Kalutara_Electoral_District",
        "seq": "79,106"
      }
    ],
    "id": "d857c581856d4696a3df4d5cff4b538c",
    "predicate mapping": [
      {
        "label": "members",
        "uri": "http://dbpedia.org/ontology/region",
        "mappedBy": "word2vec"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion",
        "seq": "16,24",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "parliament,",
        "uri": "http://dbpedia.org/ontology/MemberOfParliament",
        "seq": "50,61",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name a company with one of the key person as Edwin Catmull and produces RenderMan?",
    "SerialNumber": "3560",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/keyPerson\u003e \u003chttp://dbpedia.org/resource/Edwin_Catmull\u003e . ?uri \u003chttp://dbpedia.org/property/products\u003e \u003chttp://dbpedia.org/resource/RenderMan_(software)\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Company\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Edwin Catmull",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Edwin_Catmull",
        "seq": "45,58"
      },
      {
        "label": "RenderMan",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/RenderMan_(software)",
        "seq": "72,81"
      }
    ],
    "id": "20b709002c9a451f81ac30e30697d54e",
    "predicate mapping": [
      {
        "label": "key person",
        "uri": "http://dbpedia.org/ontology/keyPerson",
        "seq": "31,41",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "produces",
        "uri": "http://dbpedia.org/property/products",
        "mappedBy": "word2vec"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company",
        "seq": "7,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the Fox TV show judged by Rand Jackson ?",
    "SerialNumber": "3562",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/judges\u003e \u003chttp://dbpedia.org/resource/Randy_Jackson\u003e . ?uri \u003chttp://dbpedia.org/property/channel\u003e \u003chttp://dbpedia.org/resource/Fox_Broadcasting_Company\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "jackson rand",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Randy_Jackson",
        "seq": "999,1000"
      },
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Fox_Broadcasting_Company",
        "seq": "999,1000"
      }
    ],
    "id": "89559a4c09794d45b60a14f288fc5403",
    "predicate mapping": [
      {
        "label": "judged",
        "uri": "http://dbpedia.org/property/judges",
        "seq": "21,27",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "Jackson",
        "uri": "http://dbpedia.org/property/channel",
        "mappedBy": "word2vec"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "16,20",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "405",
    "question": "From how many different cities have people gone to the Illinois Fighting Illini men\u0027s basketball?",
    "SerialNumber": "3564",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/college\u003e \u003chttp://dbpedia.org/resource/Illinois_Fighting_Illini_men\u0027s_basketball\u003e . ?x \u003chttp://dbpedia.org/property/placeOfBirth\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Place\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Illinois",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Illinois_Fighting_Illini_men\u0027s_basketball",
        "seq": "55,63"
      }
    ],
    "id": "dead53b77d7b4ae3abf6f4198edb05e5",
    "predicate mapping": [
      {
        "label": "basketball",
        "uri": "http://dbpedia.org/ontology/college",
        "mappedBy": "word2vec"
      },
      {
        "uri": "http://dbpedia.org/property/placeOfBirth",
        "mappedBy": "word2vec"
      },
      {
        "label": "basketball",
        "uri": "http://dbpedia.org/ontology/Place",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "How many owners owned the clubs participating in the Premier leagues of \u002714?",
    "SerialNumber": "3569",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/season\u003e \u003chttp://dbpedia.org/resource/2014–15_Premier_League\u003e . ?x \u003chttp://dbpedia.org/property/owner\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "\u0027 14",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/2014–15_Premier_League",
        "seq": "-1,3"
      }
    ],
    "id": "046dd4f4ca7741639c230165ac321a53",
    "predicate mapping": [
      {
        "label": "leagues",
        "uri": "http://dbpedia.org/ontology/season",
        "mappedBy": "word2vec"
      },
      {
        "label": "owners",
        "uri": "http://dbpedia.org/property/owner",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which writer of A literary Nightmare also extended the work of The Apple tree ?",
    "SerialNumber": "3572",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/The_Apple_Tree\u003e \u003chttp://dbpedia.org/ontology/basedOn\u003e ?uri. \u003chttp://dbpedia.org/resource/A_Literary_Nightmare\u003e \u003chttp://dbpedia.org/ontology/author\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "The Apple tree",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/The_Apple_Tree",
        "seq": "63,77"
      },
      {
        "label": "A literary Nightmare",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/A_Literary_Nightmare",
        "seq": "16,36"
      }
    ],
    "id": "e1bec9b2a77e46689d40931d5c9ecd63",
    "predicate mapping": [
      {
        "label": "work",
        "uri": "http://dbpedia.org/ontology/basedOn",
        "mappedBy": "word2vec"
      },
      {
        "label": "writer",
        "uri": "http://dbpedia.org/ontology/author",
        "seq": "6,12",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "What are the movies whose cast members are signed up with Point Blank Records?",
    "SerialNumber": "3577",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/label\u003e \u003chttp://dbpedia.org/resource/Point_Blank_Records\u003e . ?uri \u003chttp://dbpedia.org/property/starring\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Point Blank Records",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Point_Blank_Records",
        "seq": "58,77"
      }
    ],
    "id": "8771e72d14ca4063839d6058b825dcde",
    "predicate mapping": [
      {
        "label": "are",
        "uri": "http://dbpedia.org/property/label",
        "seq": "5,8",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "signed",
        "uri": "http://dbpedia.org/property/starring",
        "mappedBy": "word2vec"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "13,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "405",
    "question": "How many people are in the band with Juelz Santana?",
    "SerialNumber": "3579",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/currentMembers\u003e \u003chttp://dbpedia.org/resource/Juelz_Santana\u003e . ?x \u003chttp://dbpedia.org/ontology/bandMember\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Juelz Santana",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Juelz_Santana",
        "seq": "37,50"
      }
    ],
    "id": "cd6d4ee1269f45e89677ac5f6cb06cf3",
    "predicate mapping": [
      {
        "label": "people",
        "uri": "http://dbpedia.org/property/currentMembers",
        "mappedBy": "word2vec"
      },
      {
        "label": "band",
        "uri": "http://dbpedia.org/ontology/bandMember",
        "seq": "27,31",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "people",
        "uri": "http://dbpedia.org/ontology/Person",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "To which series does Lost special belong to ?",
    "SerialNumber": "3580",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/The_Lost_Special\u003e \u003chttp://dbpedia.org/property/series\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "special lost",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/The_Lost_Special",
        "seq": "999,1000"
      }
    ],
    "id": "936e49d38fb344b8a243aafc31b75630",
    "predicate mapping": [
      {
        "label": "series",
        "uri": "http://dbpedia.org/property/series",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Was Elton John a chairman of a Watford FC Season?",
    "SerialNumber": "3583",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/1999–2000_Watford_F.C._season\u003e \u003chttp://dbpedia.org/ontology/chairman\u003e \u003chttp://dbpedia.org/resource/Elton_John\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "watford season",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/1999–2000_Watford_F.C._season",
        "seq": "999,1000"
      },
      {
        "label": "Elton John",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Elton_John",
        "seq": "4,14"
      }
    ],
    "id": "bb3db88e042a45719a508ffcb4e0cae4",
    "predicate mapping": [
      {
        "label": "chairman",
        "uri": "http://dbpedia.org/ontology/chairman",
        "seq": "17,25",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "From which genres of music did those genres emerge where drums are important?",
    "SerialNumber": "3589",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/instruments\u003e \u003chttp://dbpedia.org/resource/Drum_kit\u003e . ?x \u003chttp://dbpedia.org/ontology/stylisticOrigin\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MusicGenre\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Drum_kit",
        "seq": "999,1000"
      }
    ],
    "id": "52e9a4a2f69e419aa527cd4b5658c783",
    "predicate mapping": [
      {
        "label": "important",
        "uri": "http://dbpedia.org/property/instruments",
        "mappedBy": "word2vec"
      },
      {
        "label": "important",
        "uri": "http://dbpedia.org/ontology/stylisticOrigin",
        "mappedBy": "word2vec"
      },
      {
        "label": "genre",
        "uri": "http://dbpedia.org/ontology/MusicGenre",
        "seq": "11,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the service of the Laemmle Theatres and is also the award of the Jos Rivera (playwright)?",
    "SerialNumber": "3590",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Laemmle_Theatres\u003e \u003chttp://dbpedia.org/ontology/service\u003e ?uri. \u003chttp://dbpedia.org/resource/José_Rivera_(playwright)\u003e \u003chttp://dbpedia.org/property/awards\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Laemmle Theatres",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Laemmle_Theatres",
        "seq": "27,43"
      },
      {
        "label": "(playwright) rivera",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/José_Rivera_(playwright)",
        "seq": "999,1000"
      }
    ],
    "id": "afda8a6127814c5f8b979c0859dbd3ae",
    "predicate mapping": [
      {
        "label": "service",
        "uri": "http://dbpedia.org/ontology/service",
        "seq": "12,19",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "award",
        "uri": "http://dbpedia.org/property/awards",
        "seq": "60,65",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "In which other places are there companies which are in Ontario, too?",
    "SerialNumber": "3593",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/locationCity\u003e \u003chttp://dbpedia.org/resource/Ontario\u003e . ?x \u003chttp://dbpedia.org/property/locations\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ontario",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ontario",
        "seq": "55,62"
      }
    ],
    "id": "232e6c0e8d57443a9ef659cad042b6d9",
    "predicate mapping": [
      {
        "label": "companies",
        "uri": "http://dbpedia.org/ontology/locationCity",
        "mappedBy": "word2vec"
      },
      {
        "label": "companies",
        "uri": "http://dbpedia.org/property/locations",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Where did the music genre of Harry and the Potters originate?",
    "SerialNumber": "3595",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Harry_and_the_Potters_(album)\u003e \u003chttp://dbpedia.org/ontology/genre\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/stylisticOrigin\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Harry and the Potters",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Harry_and_the_Potters_(album)",
        "seq": "29,50"
      }
    ],
    "id": "0a1b829f8e814abdb18dac4b1b010740",
    "predicate mapping": [
      {
        "label": "music genre",
        "uri": "http://dbpedia.org/ontology/genre",
        "seq": "14,25",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "originate",
        "uri": "http://dbpedia.org/ontology/stylisticOrigin",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who used to skate with the pupils of Laureano Ibarra?",
    "SerialNumber": "3599",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/coach\u003e \u003chttp://dbpedia.org/resource/Laureano_Ibarra\u003e . ?x \u003chttp://dbpedia.org/ontology/formerPartner\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/FigureSkater\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Laureano Ibarra",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Laureano_Ibarra",
        "seq": "37,52"
      }
    ],
    "id": "ea4ea30b9c3940988dd74494c7903da2",
    "predicate mapping": [
      {
        "label": "pupils",
        "uri": "http://dbpedia.org/property/coach",
        "mappedBy": "word2vec"
      },
      {
        "label": "pupils",
        "uri": "http://dbpedia.org/ontology/formerPartner",
        "mappedBy": "word2vec"
      },
      {
        "label": "skate",
        "uri": "http://dbpedia.org/ontology/FigureSkater",
        "seq": "12,17",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What is the religion of the member of parliament who is a relative of Sarathchandra Rajakaruna?",
    "SerialNumber": "3600",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/relation\u003e \u003chttp://dbpedia.org/resource/Sarathchandra_Rajakaruna\u003e . ?x \u003chttp://dbpedia.org/ontology/religion\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MemberOfParliament\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Sarathchandra Rajakaruna",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Sarathchandra_Rajakaruna",
        "seq": "70,94"
      }
    ],
    "id": "286e3b7df05248f9bcaf081f3a5bfae7",
    "predicate mapping": [
      {
        "label": "relative",
        "uri": "http://dbpedia.org/ontology/relation",
        "mappedBy": "word2vec"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion",
        "seq": "12,20",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "member of parliament",
        "uri": "http://dbpedia.org/ontology/MemberOfParliament",
        "seq": "28,48",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What television show is magistrated by Harry Connick, Jr.?",
    "SerialNumber": "3602",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/judges\u003e \u003chttp://dbpedia.org/resource/Harry_Connick,_Jr.\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Harry Connick, Jr.",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Harry_Connick,_Jr.",
        "seq": "39,57"
      }
    ],
    "id": "bd5737093bad479e8cc07b908e5189da",
    "predicate mapping": [
      {
        "label": "magistrated",
        "uri": "http://dbpedia.org/property/judges",
        "mappedBy": "word2vec"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "5,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which Texas based company  was founded by Jim Harris ?",
    "SerialNumber": "3603",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/locationCity\u003e \u003chttp://dbpedia.org/resource/Texas\u003e . ?uri \u003chttp://dbpedia.org/property/founder\u003e \u003chttp://dbpedia.org/resource/Jim_Harris_(entrepreneur)\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Company\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Texas",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Texas",
        "seq": "6,11"
      },
      {
        "label": "Jim Harris",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Jim_Harris_(entrepreneur)",
        "seq": "42,52"
      }
    ],
    "id": "5145b69c134f441b869b6d2ae0252731",
    "predicate mapping": [
      {
        "label": "based",
        "uri": "http://dbpedia.org/ontology/locationCity",
        "mappedBy": "word2vec"
      },
      {
        "label": "was founded by",
        "uri": "http://dbpedia.org/property/founder",
        "seq": "27,41",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company",
        "seq": "18,25",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "From where does the river start, which flows into the Conowingo dam?",
    "SerialNumber": "3605",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/riverMouth\u003e \u003chttp://dbpedia.org/resource/Conowingo_Dam\u003e . ?x \u003chttp://dbpedia.org/ontology/source\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/River\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Conowingo dam",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Conowingo_Dam",
        "seq": "54,67"
      }
    ],
    "id": "f0acd22286c047eabc35b04de1c0c47b",
    "predicate mapping": [
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/riverMouth",
        "seq": "20,25",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "flows",
        "uri": "http://dbpedia.org/ontology/source",
        "mappedBy": "word2vec"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River",
        "seq": "20,25",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "List all the parents of writers coming from the Great Missenden ?",
    "SerialNumber": "3606",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/homeTown\u003e \u003chttp://dbpedia.org/resource/Great_Missenden\u003e . ?x \u003chttp://dbpedia.org/ontology/parent\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Writer\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Great Missenden",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Great_Missenden",
        "seq": "48,63"
      }
    ],
    "id": "df4a8bee85f04e6f8e60dd62c65e104b",
    "predicate mapping": [
      {
        "label": "coming",
        "uri": "http://dbpedia.org/property/homeTown",
        "mappedBy": "word2vec"
      },
      {
        "label": "parent",
        "uri": "http://dbpedia.org/ontology/parent",
        "seq": "13,19",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "writers",
        "uri": "http://dbpedia.org/ontology/Writer",
        "seq": "24,31",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What state has a Brideun School for Exception Children and is the birthplace  of B J Crombeen?",
    "SerialNumber": "3607",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Brideun_School_for_Exceptional_Children\u003e \u003chttp://dbpedia.org/property/state\u003e ?uri. \u003chttp://dbpedia.org/resource/B._J._Crombeen\u003e \u003chttp://dbpedia.org/ontology/birthPlace\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "exception children brideun school",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Brideun_School_for_Exceptional_Children",
        "seq": "999,1000"
      },
      {
        "label": "crombeen",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/B._J._Crombeen",
        "seq": "999,1000"
      }
    ],
    "id": "6c62c5bf4c4d43f69f7a5d6cdef2cfae",
    "predicate mapping": [
      {
        "label": "state",
        "uri": "http://dbpedia.org/property/state",
        "seq": "5,10",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "birthplace",
        "uri": "http://dbpedia.org/ontology/birthPlace",
        "seq": "66,76",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "406",
    "question": "What is the total number of politicians whose predecessor\u0027s deputy is Jenny Macklin?",
    "SerialNumber": "3608",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/deputy\u003e \u003chttp://dbpedia.org/resource/Jenny_Macklin\u003e . ?uri \u003chttp://dbpedia.org/property/predecessor\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/OfficeHolder\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jenny Macklin",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Jenny_Macklin",
        "seq": "70,83"
      }
    ],
    "id": "e28b8d50dec442e4afe8782558fdc00f",
    "predicate mapping": [
      {
        "label": "deputy",
        "uri": "http://dbpedia.org/property/deputy",
        "seq": "60,66",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "predecessor",
        "uri": "http://dbpedia.org/property/predecessor",
        "seq": "46,57",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "politicians",
        "uri": "http://dbpedia.org/ontology/OfficeHolder",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "307",
    "question": "What is the scientist whose PhD students are Erich Bagge and erban ieica?",
    "SerialNumber": "3612",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/property/doctoralStudents\u003e \u003chttp://dbpedia.org/resource/Erich_Bagge\u003e . ?uri \u003chttp://dbpedia.org/property/doctoralStudents\u003e \u003chttp://dbpedia.org/resource/Șerban_Țițeica\u003e . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Scientist\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Erich Bagge",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Erich_Bagge",
        "seq": "45,56"
      },
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Șerban_Țițeica",
        "seq": "999,1000"
      }
    ],
    "id": "9f558fd14dc54992bc18d9ff843c24df",
    "predicate mapping": [
      {
        "label": "students",
        "uri": "http://dbpedia.org/property/doctoralStudents",
        "seq": "32,40",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "students",
        "uri": "http://dbpedia.org/property/doctoralStudents",
        "seq": "32,40",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "scientist",
        "uri": "http://dbpedia.org/ontology/Scientist",
        "seq": "12,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "406",
    "question": "How many bands have members currently playing the Fender Stratocaster?",
    "SerialNumber": "3613",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/notableInstruments\u003e \u003chttp://dbpedia.org/resource/Fender_Stratocaster\u003e . ?uri \u003chttp://dbpedia.org/property/currentMembers\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Band\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Fender Stratocaster",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Fender_Stratocaster",
        "seq": "50,69"
      }
    ],
    "id": "ea618d18100f4888910364d1044fe633",
    "predicate mapping": [
      {
        "label": "playing",
        "uri": "http://dbpedia.org/property/notableInstruments",
        "mappedBy": "word2vec"
      },
      {
        "label": "members",
        "uri": "http://dbpedia.org/property/currentMembers",
        "seq": "20,27",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "band",
        "uri": "http://dbpedia.org/ontology/Band",
        "seq": "9,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What is the deathplace of people who have worked in Ethics?",
    "SerialNumber": "3616",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/mainInterests\u003e \u003chttp://dbpedia.org/resource/Ethics\u003e . ?x \u003chttp://dbpedia.org/property/placeOfDeath\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ethics",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ethics",
        "seq": "52,58"
      }
    ],
    "id": "2c1770e2d3984893a620a66a628bed5b",
    "predicate mapping": [
      {
        "label": "worked",
        "uri": "http://dbpedia.org/property/mainInterests",
        "mappedBy": "word2vec"
      },
      {
        "uri": "http://dbpedia.org/property/placeOfDeath",
        "mappedBy": "word2vec"
      },
      {
        "label": "worked",
        "uri": "http://dbpedia.org/ontology/Person",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "103",
    "question": "How many religions have the relatives of waxiangs followed?",
    "SerialNumber": "3617",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { \u003chttp://dbpedia.org/resource/Waxiang_people\u003e \u003chttp://dbpedia.org/property/related\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/religion\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Waxiang_people",
        "seq": "999,1000"
      }
    ],
    "id": "cdc182cb1086444ba6609878786447ff",
    "predicate mapping": [
      {
        "label": "relatives",
        "uri": "http://dbpedia.org/property/related",
        "mappedBy": "word2vec"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion",
        "seq": "9,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What kind of games does Blizzard games develop?",
    "SerialNumber": "3620",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/developer\u003e \u003chttp://dbpedia.org/resource/Blizzard_Entertainment\u003e . ?x \u003chttp://dbpedia.org/ontology/genre\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/VideoGame\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "blizzard",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Blizzard_Entertainment",
        "seq": "999,1000"
      }
    ],
    "id": "7e638a07671f4e0dbd9a400eac8f5de4",
    "predicate mapping": [
      {
        "label": "develop",
        "uri": "http://dbpedia.org/ontology/developer",
        "seq": "39,46",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "Blizzard",
        "uri": "http://dbpedia.org/ontology/genre",
        "mappedBy": "word2vec"
      },
      {
        "label": "games",
        "uri": "http://dbpedia.org/ontology/VideoGame",
        "seq": "13,18",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "Who is the parent of FD Roosevelt JR?",
    "SerialNumber": "3621",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/children\u003e \u003chttp://dbpedia.org/resource/Franklin_Delano_Roosevelt,_Jr.\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "roosevelt",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Franklin_Delano_Roosevelt,_Jr.",
        "seq": "999,1000"
      }
    ],
    "id": "7f7c3328eb5b44fd9119c85b39285fbf",
    "predicate mapping": [
      {
        "label": "JR",
        "uri": "http://dbpedia.org/property/children",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which expertise of the Menetries\u0027s warbler is the  nationality of the Jeyhun Abiyev ?",
    "SerialNumber": "3622",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Menetries\u0027s_warbler\u003e \u003chttp://dbpedia.org/ontology/binomialAuthority\u003e ?uri. \u003chttp://dbpedia.org/resource/Jeyhun_Abiyev\u003e \u003chttp://dbpedia.org/ontology/nationality\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Menetries\u0027s warbler",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Menetries\u0027s_warbler",
        "seq": "23,42"
      },
      {
        "label": "Jeyhun Abiyev",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Jeyhun_Abiyev",
        "seq": "70,83"
      }
    ],
    "id": "c46c233ae0c14807825928b38649d37e",
    "predicate mapping": [
      {
        "label": "expertise",
        "uri": "http://dbpedia.org/ontology/binomialAuthority",
        "mappedBy": "word2vec"
      },
      {
        "label": "nationality",
        "uri": "http://dbpedia.org/ontology/nationality",
        "seq": "51,62",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "In how many places can I find wine made of Vitis vinifera grapes?",
    "SerialNumber": "3623",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/species\u003e \u003chttp://dbpedia.org/resource/Vitis_vinifera\u003e . ?x \u003chttp://dbpedia.org/ontology/wineRegion\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Vitis vinifera",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Vitis_vinifera",
        "seq": "43,57"
      }
    ],
    "id": "7c24a58761f249839782415660523ba4",
    "predicate mapping": [
      {
        "label": "grapes",
        "uri": "http://dbpedia.org/ontology/species",
        "mappedBy": "word2vec"
      },
      {
        "label": "wine",
        "uri": "http://dbpedia.org/ontology/wineRegion",
        "seq": "30,34",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "What have been made in the state whose capital is Boston?",
    "SerialNumber": "3624",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/capital\u003e \u003chttp://dbpedia.org/resource/Boston\u003e . ?uri \u003chttp://dbpedia.org/ontology/location\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Boston",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Boston",
        "seq": "50,56"
      }
    ],
    "id": "e19a8a1f620d417887fabd403a34298e",
    "predicate mapping": [
      {
        "label": "capital",
        "uri": "http://dbpedia.org/property/capital",
        "seq": "39,46",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "state",
        "uri": "http://dbpedia.org/ontology/location",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the royalty whose spouse was Cleopatra V of Egypt and one of his parent was Ptolemy XII Auletes?",
    "SerialNumber": "3625",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/mother\u003e \u003chttp://dbpedia.org/resource/Cleopatra_V_of_Egypt\u003e . ?uri \u003chttp://dbpedia.org/ontology/parent\u003e \u003chttp://dbpedia.org/resource/Ptolemy_XII_Auletes\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Royalty\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Cleopatra V of Egypt",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Cleopatra_V_of_Egypt",
        "seq": "34,54"
      },
      {
        "label": "Ptolemy XII Auletes",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ptolemy_XII_Auletes",
        "seq": "81,100"
      }
    ],
    "id": "ae7bd0ded6804ceead902c06ec9b71e1",
    "predicate mapping": [
      {
        "label": "spouse",
        "uri": "http://dbpedia.org/property/mother",
        "mappedBy": "word2vec"
      },
      {
        "label": "parent",
        "uri": "http://dbpedia.org/ontology/parent",
        "seq": "70,76",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "royalty",
        "uri": "http://dbpedia.org/ontology/Royalty",
        "seq": "9,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the officeholder who hasa child named Augustus and has an associate named Marcus Bibulus ?",
    "SerialNumber": "3628",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/associate\u003e \u003chttp://dbpedia.org/resource/Marcus_Calpurnius_Bibulus\u003e . ?uri \u003chttp://dbpedia.org/property/children\u003e \u003chttp://dbpedia.org/resource/Augustus\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/OfficeHolder\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "bibulus marcus",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Marcus_Calpurnius_Bibulus",
        "seq": "999,1000"
      },
      {
        "label": "Augustus",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Augustus",
        "seq": "43,51"
      }
    ],
    "id": "6aae7a52e81c4a26b80f5c17943b7857",
    "predicate mapping": [
      {
        "label": "associate",
        "uri": "http://dbpedia.org/ontology/associate",
        "seq": "63,72",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "child",
        "uri": "http://dbpedia.org/property/children",
        "seq": "31,36",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "officeholder",
        "uri": "http://dbpedia.org/ontology/OfficeHolder",
        "seq": "9,21",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "List down the schools whose mascot is an animal from the order of Even toed Ungulates?",
    "SerialNumber": "3632",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/designer\u003e \u003chttp://dbpedia.org/resource/Bjarne_Stroustrup\u003e . ?uri \u003chttp://dbpedia.org/property/programmingLanguage\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/School\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Bjarne_Stroustrup",
        "seq": "999,1000"
      }
    ],
    "id": "0954b94157bc4c35a1bcb0ec0107cb74",
    "predicate mapping": [
      {
        "label": "toed",
        "uri": "http://dbpedia.org/property/designer",
        "mappedBy": "word2vec"
      },
      {
        "label": "toed",
        "uri": "http://dbpedia.org/property/programmingLanguage",
        "mappedBy": "word2vec"
      },
      {
        "label": "school",
        "uri": "http://dbpedia.org/ontology/School",
        "seq": "14,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Was the skeleton dance animated by Walt Disney?",
    "SerialNumber": "3634",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/The_Skeleton_Dance\u003e \u003chttp://dbpedia.org/ontology/animator\u003e \u003chttp://dbpedia.org/resource/Walt_Disney\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "the skeleton dance",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Skeleton_Dance",
        "seq": "4,22"
      },
      {
        "label": "Walt Disney",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Walt_Disney",
        "seq": "35,46"
      }
    ],
    "id": "a407d3e2f82d4a51b9e93485af1f0f4f",
    "predicate mapping": [
      {
        "label": "animated",
        "uri": "http://dbpedia.org/ontology/animator",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "The president who was in office when Lee Hyun Jae was the PM followed which religion?",
    "SerialNumber": "3638",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/primeminister\u003e \u003chttp://dbpedia.org/resource/Lee_Hyun-jae\u003e . ?x \u003chttp://dbpedia.org/ontology/religion\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/President\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Lee Hyun Jae",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Lee_Hyun-jae",
        "seq": "37,49"
      }
    ],
    "id": "a4c071295df54e628add12c26e1551d7",
    "predicate mapping": [
      {
        "label": "PM",
        "uri": "http://dbpedia.org/property/primeminister",
        "mappedBy": "word2vec"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion",
        "seq": "76,84",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "president",
        "uri": "http://dbpedia.org/ontology/President",
        "seq": "4,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "How many developers make softwares for Unix like operating systems?",
    "SerialNumber": "3639",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/operatingSystem\u003e \u003chttp://dbpedia.org/resource/Unix-like\u003e . ?x \u003chttp://dbpedia.org/ontology/developer\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "unix like",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Unix-like",
        "seq": "999,1000"
      }
    ],
    "id": "24bea3e02aac4576a8340dc9d4e933dd",
    "predicate mapping": [
      {
        "label": "operating system",
        "uri": "http://dbpedia.org/property/operatingSystem",
        "seq": "49,65",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "developer",
        "uri": "http://dbpedia.org/ontology/developer",
        "seq": "9,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the scientist who become the part of Royal Society and had academic advisor as Karl Ewald Hasse?",
    "SerialNumber": "3642",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/prizes\u003e \u003chttp://dbpedia.org/resource/Royal_Society\u003e . ?uri \u003chttp://dbpedia.org/ontology/academicAdvisor\u003e \u003chttp://dbpedia.org/resource/Karl_Ewald_Hasse\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Scientist\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Royal Society",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Royal_Society",
        "seq": "42,55"
      },
      {
        "label": "Karl Ewald Hasse",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Karl_Ewald_Hasse",
        "seq": "84,100"
      }
    ],
    "id": "20ece59a1aa9487bbe525dcba5247d38",
    "predicate mapping": [
      {
        "label": "part",
        "uri": "http://dbpedia.org/property/prizes",
        "mappedBy": "word2vec"
      },
      {
        "label": "academic advisor",
        "uri": "http://dbpedia.org/ontology/academicAdvisor",
        "seq": "64,80",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "scientist",
        "uri": "http://dbpedia.org/ontology/Scientist",
        "seq": "9,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "What is the religion of the ones in the Kampuchean Union of Salvation?",
    "SerialNumber": "3644",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/militaryBranch\u003e \u003chttp://dbpedia.org/resource/Kampuchean_United_Front_for_National_Salvation\u003e . ?x \u003chttp://dbpedia.org/ontology/religion\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Kampuchean Union of Salvation",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Kampuchean_United_Front_for_National_Salvation",
        "seq": "40,69"
      }
    ],
    "id": "b71a96db56e8414aba5648ec5935ecf9",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/militaryBranch",
        "mappedBy": "word2vec"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion",
        "seq": "12,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which parent organization of GetTV is also the label of next thing ?",
    "SerialNumber": "3646",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Next_Thing\u003e \u003chttp://dbpedia.org/ontology/recordLabel\u003e ?uri. \u003chttp://dbpedia.org/resource/GetTV\u003e \u003chttp://dbpedia.org/ontology/parentOrganisation\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "next thing",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Next_Thing",
        "seq": "56,66"
      },
      {
        "label": "GetTV",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/GetTV",
        "seq": "29,34"
      }
    ],
    "id": "b17be3d3611b49f3aca5fa4337a2315b",
    "predicate mapping": [
      {
        "label": "label",
        "uri": "http://dbpedia.org/ontology/recordLabel",
        "seq": "47,52",
        "mappedBy": "byLabelMatch"
      },
      {
        "uri": "http://dbpedia.org/ontology/parentOrganisation",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "402",
    "question": "How many states are in the Mediterranean Basketball Association?",
    "SerialNumber": "3648",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { \u003chttp://dbpedia.org/resource/Mediterranean_Basketball_Association\u003e \u003chttp://dbpedia.org/ontology/country\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Place\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Mediterranean Basketball Association",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Mediterranean_Basketball_Association",
        "seq": "27,63"
      }
    ],
    "id": "90be0811add84e5aa9984db40fcee9db",
    "predicate mapping": [
      {
        "label": "state",
        "uri": "http://dbpedia.org/ontology/country",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      },
      {
        "uri": "http://dbpedia.org/ontology/Place",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What is the ethnicity of the people working for the Philippines house of representatives?",
    "SerialNumber": "3649",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/occupation\u003e \u003chttp://dbpedia.org/resource/House_of_Representatives_of_the_Philippines\u003e . ?x \u003chttp://dbpedia.org/ontology/ethnicity\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Philippines",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/House_of_Representatives_of_the_Philippines",
        "seq": "52,63"
      }
    ],
    "id": "d6802f1090fc42088479f3a1897fa6f0",
    "predicate mapping": [
      {
        "label": "work",
        "uri": "http://dbpedia.org/ontology/occupation",
        "seq": "36,40",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "ethnicity",
        "uri": "http://dbpedia.org/ontology/ethnicity",
        "seq": "12,21",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "representatives",
        "uri": "http://dbpedia.org/ontology/Person",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "Name some people who are buried in a place governed by the US Department of the Interior?",
    "SerialNumber": "3650",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/governingBody\u003e \u003chttp://dbpedia.org/resource/United_States_Department_of_the_Interior\u003e . ?uri \u003chttp://dbpedia.org/property/restingplace\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "US Department of the Interior",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/United_States_Department_of_the_Interior",
        "seq": "59,88"
      }
    ],
    "id": "b18bcd6d7ea84ac59cb76d3a3683c33e",
    "predicate mapping": [
      {
        "label": "governed",
        "uri": "http://dbpedia.org/property/governingBody",
        "seq": "43,51",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "place",
        "uri": "http://dbpedia.org/property/restingplace",
        "seq": "37,42",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "buried",
        "uri": "http://dbpedia.org/ontology/Person",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Where is the football team located in which Josh Bell did his debut?",
    "SerialNumber": "3653",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Josh_Bell_(gridiron_football)\u003e \u003chttp://dbpedia.org/ontology/debutTeam\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/locationCity\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Josh Bell",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Josh_Bell_(gridiron_football)",
        "seq": "44,53"
      }
    ],
    "id": "aef9c51a69964e5596910348107d8ba5",
    "predicate mapping": [
      {
        "label": "debut team",
        "uri": "http://dbpedia.org/ontology/debutTeam",
        "seq": "-1,9",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "debut",
        "uri": "http://dbpedia.org/ontology/locationCity",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "The president served by Haqqi al-Azm died where?",
    "SerialNumber": "3656",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Haqqi_al-Azm\u003e \u003chttp://dbpedia.org/property/president\u003e ?x . ?x \u003chttp://dbpedia.org/property/placeOfDeath\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Haqqi al-Azm",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Haqqi_al-Azm",
        "seq": "24,36"
      }
    ],
    "id": "13eb5beca6db42d2a2351fbc774d97f7",
    "predicate mapping": [
      {
        "label": "president",
        "uri": "http://dbpedia.org/property/president",
        "seq": "4,13",
        "mappedBy": "byLabelMatch"
      },
      {
        "uri": "http://dbpedia.org/property/placeOfDeath",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What are some awards given to people who were born in sweden?",
    "SerialNumber": "3657",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/birthPlace\u003e \u003chttp://dbpedia.org/resource/Sweden\u003e . ?x \u003chttp://dbpedia.org/property/awards\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "sweden",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Sweden",
        "seq": "54,60"
      }
    ],
    "id": "e87064d2456145b1b5a0bfc1703d439c",
    "predicate mapping": [
      {
        "label": "born in",
        "uri": "http://dbpedia.org/ontology/birthPlace",
        "seq": "46,53",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards",
        "seq": "14,20",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "people",
        "uri": "http://dbpedia.org/ontology/Person",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Is WP 8.1 the OS on Lumia 830?",
    "SerialNumber": "3661",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Nokia_Lumia_830\u003e \u003chttp://dbpedia.org/property/os\u003e \u003chttp://dbpedia.org/resource/Windows_Phone_8.1\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "lumia 830",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Nokia_Lumia_830",
        "seq": "999,1000"
      },
      {
        "label": "8.1",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Windows_Phone_8.1",
        "seq": "999,1000"
      }
    ],
    "id": "cdc804731f0b4931b6ee149e92fc807f",
    "predicate mapping": [
      {
        "label": "OS",
        "uri": "http://dbpedia.org/property/os",
        "seq": "14,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Which companies make cars with a front engine, rear wheel drive layout?",
    "SerialNumber": "3663",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/automobilePlatform\u003e \u003chttp://dbpedia.org/resource/Front-engine,_rear-wheel-drive_layout\u003e . ?x \u003chttp://dbpedia.org/ontology/parentCompany\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Automobile\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "engine, layout wheel front drive",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Front-engine,_rear-wheel-drive_layout",
        "seq": "999,1000"
      }
    ],
    "id": "4930ac422c3a46878641b26e4911c9fd",
    "predicate mapping": [
      {
        "label": "layout",
        "uri": "http://dbpedia.org/ontology/automobilePlatform",
        "mappedBy": "word2vec"
      },
      {
        "label": "companies",
        "uri": "http://dbpedia.org/ontology/parentCompany",
        "seq": "6,15",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "layout",
        "uri": "http://dbpedia.org/ontology/Automobile",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Do the polet airlines fly to moscow?",
    "SerialNumber": "3665",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Polet_Airlines\u003e \u003chttp://dbpedia.org/ontology/targetAirport\u003e \u003chttp://dbpedia.org/resource/Moscow\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "polet airlines",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Polet_Airlines",
        "seq": "7,21"
      },
      {
        "label": "moscow",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Moscow",
        "seq": "29,35"
      }
    ],
    "id": "3f46fda15bf14f0fab5297341e258dce",
    "predicate mapping": [
      {
        "label": "fly",
        "uri": "http://dbpedia.org/ontology/targetAirport",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "In which state is the alma matter of Jan Paulsen located ?",
    "SerialNumber": "3667",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Jan_Paulsen\u003e \u003chttp://dbpedia.org/ontology/almaMater\u003e ?x . ?x \u003chttp://dbpedia.org/property/state\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jan Paulsen",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Jan_Paulsen",
        "seq": "37,48"
      }
    ],
    "id": "7043c42bf9fc41418bf7fce82a3ed8f2",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/ontology/almaMater",
        "mappedBy": "word2vec"
      },
      {
        "label": "state",
        "uri": "http://dbpedia.org/property/state",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "Name some islands in a pacific archipelago?",
    "SerialNumber": "3668",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/location\u003e \u003chttp://dbpedia.org/resource/Pacific_Ocean\u003e . ?uri \u003chttp://dbpedia.org/property/archipelago\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Island\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "pacific",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Pacific_Ocean",
        "seq": "999,1000"
      }
    ],
    "id": "498b80ad7a3e404aa8127f73d757f44d",
    "predicate mapping": [
      {
        "label": "pacific",
        "uri": "http://dbpedia.org/property/location",
        "mappedBy": "word2vec"
      },
      {
        "label": "archipelago",
        "uri": "http://dbpedia.org/property/archipelago",
        "seq": "31,42",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "island",
        "uri": "http://dbpedia.org/ontology/Island",
        "seq": "10,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "List the names of the soccer club seasons whose division is 2012 Campeonato Brasileiro Srie A.",
    "SerialNumber": "3676",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/league\u003e \u003chttp://dbpedia.org/resource/2012_Campeonato_Brasileiro_Série_A\u003e . ?x \u003chttp://dbpedia.org/property/name\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/SoccerClubSeason\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "campeonato brasileiro",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/2012_Campeonato_Brasileiro_Série_A",
        "seq": "999,1000"
      }
    ],
    "id": "4ae8d48e900b4769ada16d476c81dd95",
    "predicate mapping": [
      {
        "label": "division",
        "uri": "http://dbpedia.org/property/league",
        "seq": "48,56",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "name",
        "uri": "http://dbpedia.org/property/name",
        "seq": "9,13",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "soccer club season",
        "uri": "http://dbpedia.org/ontology/SoccerClubSeason",
        "seq": "22,40",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "103",
    "question": "Where did the genres originate, which were in the Harry and the Potters album?",
    "SerialNumber": "3680",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { \u003chttp://dbpedia.org/resource/Harry_and_the_Potters_(album)\u003e \u003chttp://dbpedia.org/ontology/genre\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/stylisticOrigin\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Harry and the Potters",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Harry_and_the_Potters_(album)",
        "seq": "50,71"
      }
    ],
    "id": "3f3d04c8667041c0a30da802ecd4cd40",
    "predicate mapping": [
      {
        "label": "genre",
        "uri": "http://dbpedia.org/ontology/genre",
        "seq": "14,19",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "album",
        "uri": "http://dbpedia.org/ontology/stylisticOrigin",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who was the narrator of the show who\u0027s music is composed by John Douglas?",
    "SerialNumber": "3685",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/composer\u003e \u003chttp://dbpedia.org/resource/John_Douglas_(conductor)\u003e . ?x \u003chttp://dbpedia.org/property/narrated\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "John Douglas",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/John_Douglas_(conductor)",
        "seq": "60,72"
      }
    ],
    "id": "47a9d2054379462e850aecdccb4a114c",
    "predicate mapping": [
      {
        "label": "composed by",
        "uri": "http://dbpedia.org/ontology/composer",
        "seq": "48,59",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "music",
        "uri": "http://dbpedia.org/property/narrated",
        "mappedBy": "word2vec"
      },
      {
        "label": "show is",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "-1,6",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Where was the current champion of Egyptian Open born ?",
    "SerialNumber": "3686",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Egyptian_Open\u003e \u003chttp://dbpedia.org/ontology/champion\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/birthPlace\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Egyptian Open",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Egyptian_Open",
        "seq": "34,47"
      }
    ],
    "id": "53d26ee8082c40af9e43661837f30042",
    "predicate mapping": [
      {
        "label": "champion",
        "uri": "http://dbpedia.org/ontology/champion",
        "seq": "22,30",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "born",
        "uri": "http://dbpedia.org/ontology/birthPlace",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Was Castillo discovered by Galileo?",
    "SerialNumber": "3687",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Callisto_(moon)\u003e \u003chttp://dbpedia.org/property/discoverer\u003e \u003chttp://dbpedia.org/resource/Galileo_Galilei\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Callisto_(moon)",
        "seq": "999,1000"
      },
      {
        "label": "Galileo",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Galileo_Galilei",
        "seq": "27,34"
      }
    ],
    "id": "390bec142f5a4354a4a0d47a64474646",
    "predicate mapping": [
      {
        "label": "discovered by",
        "uri": "http://dbpedia.org/property/discoverer",
        "seq": "13,26",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who are the chancellors of universities which is affiliated with Plymouth University?",
    "SerialNumber": "3689",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/affiliations\u003e \u003chttp://dbpedia.org/resource/Plymouth_University\u003e . ?x \u003chttp://dbpedia.org/property/chancellor\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/University\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Plymouth University",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Plymouth_University",
        "seq": "65,84"
      }
    ],
    "id": "7877e775ed9e4c52a16d8b95104db714",
    "predicate mapping": [
      {
        "label": "affiliated",
        "uri": "http://dbpedia.org/property/affiliations",
        "mappedBy": "word2vec"
      },
      {
        "label": "chancellor",
        "uri": "http://dbpedia.org/property/chancellor",
        "seq": "12,22",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "University",
        "uri": "http://dbpedia.org/ontology/University",
        "seq": "74,84",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What common relegion affiliation exists for udit Raj and Wickramabahu Central College ?",
    "SerialNumber": "3690",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Udit_Raj\u003e \u003chttp://dbpedia.org/ontology/religion\u003e ?uri. \u003chttp://dbpedia.org/resource/Wickramabahu_Central_College_(National_School)\u003e \u003chttp://dbpedia.org/property/religiousAffiliation\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "udit Raj",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Udit_Raj",
        "seq": "44,52"
      },
      {
        "label": "Wickramabahu Central College",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Wickramabahu_Central_College_(National_School)",
        "seq": "57,85"
      }
    ],
    "id": "99518f87aadb4ffdbc84a7b46b300383",
    "predicate mapping": [
      {
        "label": "exists",
        "uri": "http://dbpedia.org/ontology/religion",
        "mappedBy": "word2vec"
      },
      {
        "label": "affiliation",
        "uri": "http://dbpedia.org/property/religiousAffiliation",
        "seq": "21,32",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the console whose successor is PlayStation 4 and predecessor is PlayStation 2?",
    "SerialNumber": "3691",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/successor\u003e \u003chttp://dbpedia.org/resource/PlayStation_4\u003e . ?uri \u003chttp://dbpedia.org/property/predecessor\u003e \u003chttp://dbpedia.org/resource/PlayStation_2\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/InformationAppliance\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "PlayStation 4",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/PlayStation_4",
        "seq": "36,49"
      },
      {
        "label": "PlayStation 2",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/PlayStation_2",
        "seq": "69,82"
      }
    ],
    "id": "ac50f52a09154c0483346c70133cd0e4",
    "predicate mapping": [
      {
        "label": "successor",
        "uri": "http://dbpedia.org/ontology/successor",
        "seq": "23,32",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "predecessor",
        "uri": "http://dbpedia.org/property/predecessor",
        "seq": "54,65",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "console",
        "uri": "http://dbpedia.org/ontology/InformationAppliance",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What are the common sports played by jamiatu Muslim mindanao and Polytechnic University of Philippines Taguig ?",
    "SerialNumber": "3692",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Jamiatu_Muslim_Mindanao\u003e \u003chttp://dbpedia.org/ontology/athletics\u003e ?uri. \u003chttp://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_Taguig\u003e \u003chttp://dbpedia.org/ontology/sport\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "jamiatu Muslim mindanao",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Jamiatu_Muslim_Mindanao",
        "seq": "37,60"
      },
      {
        "label": "polytechnic philippines university taguig",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_Taguig",
        "seq": "999,1000"
      }
    ],
    "id": "a8c90d3cb9594f2f9b76123cc4272062",
    "predicate mapping": [
      {
        "label": "Taguig",
        "uri": "http://dbpedia.org/ontology/athletics",
        "mappedBy": "word2vec"
      },
      {
        "label": "sport",
        "uri": "http://dbpedia.org/ontology/sport",
        "seq": "20,25",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Among the countries using Aureus as currency which had Nicomedia as an important place ?",
    "SerialNumber": "3693",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/capital\u003e \u003chttp://dbpedia.org/resource/Nicomedia\u003e . ?uri \u003chttp://dbpedia.org/ontology/currency\u003e \u003chttp://dbpedia.org/resource/Aureus\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Country\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Nicomedia",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Nicomedia",
        "seq": "55,64"
      },
      {
        "label": "Aureus",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Aureus",
        "seq": "26,32"
      }
    ],
    "id": "7521f2b548c742bc847175d5bb599556",
    "predicate mapping": [
      {
        "label": "place",
        "uri": "http://dbpedia.org/ontology/capital",
        "mappedBy": "word2vec"
      },
      {
        "label": "currency",
        "uri": "http://dbpedia.org/ontology/currency",
        "seq": "36,44",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "countries",
        "uri": "http://dbpedia.org/ontology/Country",
        "seq": "10,19",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "British people have edited which movies?",
    "SerialNumber": "3694",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/birthPlace\u003e \u003chttp://dbpedia.org/resource/United_Kingdom\u003e . ?uri \u003chttp://dbpedia.org/property/editing\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "British",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/United_Kingdom",
        "seq": "0,7"
      }
    ],
    "id": "d19c3af9ab8340149565596d32439a0c",
    "predicate mapping": [
      {
        "label": "people",
        "uri": "http://dbpedia.org/ontology/birthPlace",
        "mappedBy": "word2vec"
      },
      {
        "label": "edited",
        "uri": "http://dbpedia.org/property/editing",
        "seq": "20,26",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "33,38",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Where did chancellor served by Rudolf Kirchschlger die?",
    "SerialNumber": "3695",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Rudolf_Kirchschläger\u003e \u003chttp://dbpedia.org/property/chancellor\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/deathPlace\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Rudolf Kirchschlger",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Rudolf_Kirchschläger",
        "seq": "31,50"
      }
    ],
    "id": "fa1d8082a8614af189cc4ca0b03b8375",
    "predicate mapping": [
      {
        "label": "chancellor",
        "uri": "http://dbpedia.org/property/chancellor",
        "seq": "10,20",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "die",
        "uri": "http://dbpedia.org/ontology/deathPlace",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Which colored race horses have won the Grand National?",
    "SerialNumber": "3704",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/honours\u003e \u003chttp://dbpedia.org/resource/Grand_National\u003e . ?x \u003chttp://dbpedia.org/ontology/colour\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/RaceHorse\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Grand National",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Grand_National",
        "seq": "39,53"
      }
    ],
    "id": "ba5a1a29c5a042d39b6d9df1fd0da2b2",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/honours",
        "mappedBy": "word2vec"
      },
      {
        "uri": "http://dbpedia.org/ontology/colour",
        "mappedBy": "word2vec"
      },
      {
        "label": "race horse",
        "uri": "http://dbpedia.org/ontology/RaceHorse",
        "seq": "14,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which president of William Eustus also married to Dolley Madison ?",
    "SerialNumber": "3709",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Dolley_Madison\u003e \u003chttp://dbpedia.org/ontology/spouse\u003e ?uri. \u003chttp://dbpedia.org/resource/William_Eustis\u003e \u003chttp://dbpedia.org/property/president\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Dolley Madison",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Dolley_Madison",
        "seq": "50,64"
      },
      {
        "label": "william",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/William_Eustis",
        "seq": "999,1000"
      }
    ],
    "id": "67893530f30a49dd87e36373d1642717",
    "predicate mapping": [
      {
        "label": "married to",
        "uri": "http://dbpedia.org/ontology/spouse",
        "seq": "39,49",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "president",
        "uri": "http://dbpedia.org/property/president",
        "seq": "6,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name a movie with actor as Momoko Kchi and music by Akira Ifukube?",
    "SerialNumber": "3712",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/starring\u003e \u003chttp://dbpedia.org/resource/Momoko_Kōchi\u003e . ?uri \u003chttp://dbpedia.org/property/music\u003e \u003chttp://dbpedia.org/resource/Akira_Ifukube\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "momoko",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Momoko_Kōchi",
        "seq": "999,1000"
      },
      {
        "label": "Akira Ifukube",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Akira_Ifukube",
        "seq": "52,65"
      }
    ],
    "id": "253d1d8095684756951584ec0a0a37f1",
    "predicate mapping": [
      {
        "label": "actor",
        "uri": "http://dbpedia.org/property/starring",
        "seq": "18,23",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "music",
        "uri": "http://dbpedia.org/property/music",
        "seq": "43,48",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "7,12",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Who manages the operator of Norman Park Branch, CTA?",
    "SerialNumber": "3715",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Normal_Park_branch_(CTA)\u003e \u003chttp://dbpedia.org/property/operator\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/operatedBy\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Normal_Park_branch_(CTA)",
        "seq": "999,1000"
      }
    ],
    "id": "182f0bed84d84af2a38a3d2bf40a2c8f",
    "predicate mapping": [
      {
        "label": "operator",
        "uri": "http://dbpedia.org/property/operator",
        "seq": "16,24",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "",
        "uri": "http://dbpedia.org/ontology/operatedBy",
        "seq": "0,0",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the HBO TV show written by Erik jendresen  ?",
    "SerialNumber": "3716",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/company\u003e \u003chttp://dbpedia.org/resource/HBO\u003e . ?uri \u003chttp://dbpedia.org/property/writer\u003e \u003chttp://dbpedia.org/resource/Erik_Jendresen\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "HBO",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/HBO",
        "seq": "9,12"
      },
      {
        "label": "Erik jendresen",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Erik_Jendresen",
        "seq": "32,46"
      }
    ],
    "id": "1e202ff4ce8c40f18dcb98e39e8c43ad",
    "predicate mapping": [
      {
        "label": "TV",
        "uri": "http://dbpedia.org/ontology/company",
        "mappedBy": "word2vec"
      },
      {
        "label": "written by",
        "uri": "http://dbpedia.org/property/writer",
        "seq": "21,31",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "16,20",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Whay common comic is written by Karakuri Dji Ultimo and narrated by The Incredible Hulk ?",
    "SerialNumber": "3718",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Karakuri_Dôji_Ultimo\u003e \u003chttp://dbpedia.org/property/author\u003e ?uri. \u003chttp://dbpedia.org/resource/The_Incredible_Hulk_(1982_TV_series)\u003e \u003chttp://dbpedia.org/property/narrated\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "karakuri ultimo",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Karakuri_Dôji_Ultimo",
        "seq": "999,1000"
      },
      {
        "label": "The Incredible Hulk",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Incredible_Hulk_(1982_TV_series)",
        "seq": "68,87"
      }
    ],
    "id": "b08465bc7133422a9c0a2a1e3ee38e99",
    "predicate mapping": [
      {
        "label": "written by",
        "uri": "http://dbpedia.org/property/author",
        "seq": "21,31",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "narrated",
        "uri": "http://dbpedia.org/property/narrated",
        "seq": "56,64",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What are the movies whose director of photography is Jordan Cronenweth?",
    "SerialNumber": "3719",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/cinematography\u003e \u003chttp://dbpedia.org/resource/Jordan_Cronenweth\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jordan Cronenweth",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Jordan_Cronenweth",
        "seq": "53,70"
      }
    ],
    "id": "eb7991936f3c4df097078005049ad9ba",
    "predicate mapping": [
      {
        "label": "photography",
        "uri": "http://dbpedia.org/property/cinematography",
        "mappedBy": "word2vec"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "13,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Under which presidents have politicians from the Continental army served?",
    "SerialNumber": "3720",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/branch\u003e \u003chttp://dbpedia.org/resource/Continental_Army\u003e . ?x \u003chttp://dbpedia.org/property/president\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Continental army",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Continental_Army",
        "seq": "49,65"
      }
    ],
    "id": "6d387f343a844da58776ae70a4a4f621",
    "predicate mapping": [
      {
        "label": "served",
        "uri": "http://dbpedia.org/property/branch",
        "mappedBy": "word2vec"
      },
      {
        "label": "president",
        "uri": "http://dbpedia.org/property/president",
        "seq": "12,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Which city has radio stations which are Religious ?",
    "SerialNumber": "3721",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/format\u003e \u003chttp://dbpedia.org/resource/Religion\u003e . ?x \u003chttp://dbpedia.org/property/city\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/RadioStation\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Religiou",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Religion",
        "seq": "40,48"
      }
    ],
    "id": "309643fac5534e289bcc36c1b3e52d85",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/format",
        "mappedBy": "word2vec"
      },
      {
        "label": "city",
        "uri": "http://dbpedia.org/property/city",
        "seq": "6,10",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "radio station",
        "uri": "http://dbpedia.org/ontology/RadioStation",
        "seq": "15,28",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Those seasons which have been played in Fort Lauderdale Florida now host their games where?",
    "SerialNumber": "3723",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/stadium\u003e \u003chttp://dbpedia.org/resource/Fort_Lauderdale,_Florida\u003e . ?x \u003chttp://dbpedia.org/ontology/ground\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/SoccerClubSeason\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "lauderdale florida fort",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Fort_Lauderdale,_Florida",
        "seq": "999,1000"
      }
    ],
    "id": "8f8b8d845595448aad675853ecea23b5",
    "predicate mapping": [
      {
        "label": "games",
        "uri": "http://dbpedia.org/property/stadium",
        "mappedBy": "word2vec"
      },
      {
        "label": "games",
        "uri": "http://dbpedia.org/ontology/ground",
        "mappedBy": "word2vec"
      },
      {
        "label": "seasons",
        "uri": "http://dbpedia.org/ontology/SoccerClubSeason",
        "seq": "6,13",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Was 2658 Gingerich invented in Harvard?",
    "SerialNumber": "3727",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/2658_Gingerich\u003e \u003chttp://dbpedia.org/ontology/discoverer\u003e \u003chttp://dbpedia.org/resource/Harvard_College\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "2658 Gingerich",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/2658_Gingerich",
        "seq": "4,18"
      },
      {
        "label": "harvard",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Harvard_College",
        "seq": "999,1000"
      }
    ],
    "id": "2c39c59a5b3d4c15844b34930828326b",
    "predicate mapping": [
      {
        "label": "invented",
        "uri": "http://dbpedia.org/ontology/discoverer",
        "seq": "19,27",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "405",
    "question": "How many other people are in a band with Robert de Niro?",
    "SerialNumber": "3728",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/currentMembers\u003e \u003chttp://dbpedia.org/resource/Robert_De_Niro\u003e . ?x \u003chttp://dbpedia.org/ontology/bandMember\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Robert de Niro",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Robert_De_Niro",
        "seq": "41,55"
      }
    ],
    "id": "778761d04bb14ee8b90d1cbf954322e7",
    "predicate mapping": [
      {
        "label": "people",
        "uri": "http://dbpedia.org/property/currentMembers",
        "mappedBy": "word2vec"
      },
      {
        "label": "band",
        "uri": "http://dbpedia.org/ontology/bandMember",
        "seq": "31,35",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "people",
        "uri": "http://dbpedia.org/ontology/Person",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who created the stadiums who have been rented by the Boston Red Sox?",
    "SerialNumber": "3729",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/tenant\u003e \u003chttp://dbpedia.org/resource/Boston_Red_Sox\u003e . ?x \u003chttp://dbpedia.org/property/architect\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Stadium\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Boston Red Sox",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Boston_Red_Sox",
        "seq": "53,67"
      }
    ],
    "id": "44c72a38f8a2482989ab8b73f5f9977c",
    "predicate mapping": [
      {
        "label": "rented",
        "uri": "http://dbpedia.org/ontology/tenant",
        "mappedBy": "word2vec"
      },
      {
        "label": "rented",
        "uri": "http://dbpedia.org/property/architect",
        "mappedBy": "word2vec"
      },
      {
        "label": "stadium",
        "uri": "http://dbpedia.org/ontology/Stadium",
        "seq": "16,23",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Which clubs play in the La Liga?",
    "SerialNumber": "3734",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/league\u003e \u003chttp://dbpedia.org/resource/La_Liga\u003e . ?x \u003chttp://dbpedia.org/property/name\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/SoccerClub\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "La Liga",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/La_Liga",
        "seq": "24,31"
      }
    ],
    "id": "a28559e7c5e648058bc88bb93a29336b",
    "predicate mapping": [
      {
        "label": "play",
        "uri": "http://dbpedia.org/ontology/league",
        "mappedBy": "word2vec"
      },
      {
        "label": "play",
        "uri": "http://dbpedia.org/property/name",
        "mappedBy": "word2vec"
      },
      {
        "label": "clubs",
        "uri": "http://dbpedia.org/ontology/SoccerClub",
        "seq": "6,11",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who are the parents of writers born and bred in Buckinghamshire?",
    "SerialNumber": "3735",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/homeTown\u003e \u003chttp://dbpedia.org/resource/Buckinghamshire\u003e . ?x \u003chttp://dbpedia.org/ontology/parent\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Writer\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Buckinghamshire",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Buckinghamshire",
        "seq": "48,63"
      }
    ],
    "id": "ea111f49ee134bee8e906c9bab84430f",
    "predicate mapping": [
      {
        "label": "bred",
        "uri": "http://dbpedia.org/property/homeTown",
        "mappedBy": "word2vec"
      },
      {
        "label": "parent",
        "uri": "http://dbpedia.org/ontology/parent",
        "seq": "12,18",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "writers",
        "uri": "http://dbpedia.org/ontology/Writer",
        "seq": "23,30",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What is the radio show created by Timoteo Jeffries, about?",
    "SerialNumber": "3736",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/creator\u003e \u003chttp://dbpedia.org/resource/Timoteo_Jeffries\u003e . ?x \u003chttp://dbpedia.org/property/format\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/RadioProgram\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Timoteo Jeffries",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Timoteo_Jeffries",
        "seq": "34,50"
      }
    ],
    "id": "a656fb53970e4e36b7c254c35ee31be6",
    "predicate mapping": [
      {
        "label": "created",
        "uri": "http://dbpedia.org/property/creator",
        "mappedBy": "word2vec"
      },
      {
        "label": "created",
        "uri": "http://dbpedia.org/property/format",
        "mappedBy": "word2vec"
      },
      {
        "label": "radio",
        "uri": "http://dbpedia.org/ontology/RadioProgram",
        "seq": "12,17",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "Which shows\u0027 opening themes was used to make If We Were a Movie?",
    "SerialNumber": "3741",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/subsequentWork\u003e \u003chttp://dbpedia.org/resource/If_We_Were_a_Movie\u003e . ?uri \u003chttp://dbpedia.org/ontology/openingTheme\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "If We Were a Movie",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/If_We_Were_a_Movie",
        "seq": "45,63"
      }
    ],
    "id": "db7bce6fd45745b7833bc9aa702dc2f7",
    "predicate mapping": [
      {
        "label": "make",
        "uri": "http://dbpedia.org/ontology/subsequentWork",
        "mappedBy": "word2vec"
      },
      {
        "label": "opening theme",
        "uri": "http://dbpedia.org/ontology/openingTheme",
        "seq": "13,26",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "shows\u0027",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "6,12",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Where is the venue of the History of Penny Arcade Expo located?",
    "SerialNumber": "3742",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/History_of_Penny_Arcade_Expo\u003e \u003chttp://dbpedia.org/property/venue\u003e ?x . ?x \u003chttp://dbpedia.org/property/address\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "History of Penny Arcade Expo",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/History_of_Penny_Arcade_Expo",
        "seq": "26,54"
      }
    ],
    "id": "8f2e16d375b7408da4f7f573d9c76b79",
    "predicate mapping": [
      {
        "label": "venue",
        "uri": "http://dbpedia.org/property/venue",
        "seq": "13,18",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "located",
        "uri": "http://dbpedia.org/property/address",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which European Broadcasting Union\u0027s TV show has opening theme as Te Deum ?",
    "SerialNumber": "3743",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/company\u003e \u003chttp://dbpedia.org/resource/European_Broadcasting_Union\u003e . ?uri \u003chttp://dbpedia.org/ontology/openingTheme\u003e \u003chttp://dbpedia.org/resource/Te_Deum_(Charpentier)\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "European Broadcasting Union",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/European_Broadcasting_Union",
        "seq": "6,33"
      },
      {
        "label": "Te Deum",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Te_Deum_(Charpentier)",
        "seq": "65,72"
      }
    ],
    "id": "fa67ea0509064e84a85b05bc03108e02",
    "predicate mapping": [
      {
        "label": "TV",
        "uri": "http://dbpedia.org/property/company",
        "mappedBy": "word2vec"
      },
      {
        "label": "opening theme",
        "uri": "http://dbpedia.org/ontology/openingTheme",
        "seq": "48,61",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "39,43",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Which companies makes cars assembled in Karachi, Pakistan?",
    "SerialNumber": "3744",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/assembly\u003e \u003chttp://dbpedia.org/resource/Karachi\u003e . ?x \u003chttp://dbpedia.org/property/parentCompany\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Automobile\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Karachi",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Karachi",
        "seq": "40,47"
      }
    ],
    "id": "4790db09b5954a87831e282bd16265df",
    "predicate mapping": [
      {
        "label": "Pakistan",
        "uri": "http://dbpedia.org/property/assembly",
        "mappedBy": "word2vec"
      },
      {
        "label": "companies",
        "uri": "http://dbpedia.org/property/parentCompany",
        "seq": "6,15",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "Pakistan",
        "uri": "http://dbpedia.org/ontology/Automobile",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Josef Bhler belongs to which political party?",
    "SerialNumber": "3747",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Josef_Bühler\u003e \u003chttp://dbpedia.org/ontology/occupation\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Josef Bhler",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Josef_Bühler",
        "seq": "0,11"
      }
    ],
    "id": "e91a205c78b6436ca52191e1516ec883",
    "predicate mapping": [
      {
        "label": "party",
        "uri": "http://dbpedia.org/ontology/occupation",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "Name the famous employee of open society foundations ?",
    "SerialNumber": "3748",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/employer\u003e \u003chttp://dbpedia.org/resource/Open_Society_Foundations\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "open society foundations",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Open_Society_Foundations",
        "seq": "28,52"
      }
    ],
    "id": "dc5442f9638d4d3a877e6926914c08db",
    "predicate mapping": [
      {
        "label": "employee",
        "uri": "http://dbpedia.org/property/employer",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What are the death place of the models whose hair color was Red?",
    "SerialNumber": "3751",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/hairColor\u003e \u003chttp://dbpedia.org/resource/Red_hair\u003e . ?x \u003chttp://dbpedia.org/property/deathPlace\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Model\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "hair red",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Red_hair",
        "seq": "999,1000"
      }
    ],
    "id": "ca0e18eaf79141309cd329cbfcbe0c99",
    "predicate mapping": [
      {
        "label": "hair color",
        "uri": "http://dbpedia.org/property/hairColor",
        "seq": "45,55",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "death place",
        "uri": "http://dbpedia.org/property/deathPlace",
        "seq": "13,24",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "model",
        "uri": "http://dbpedia.org/ontology/Model",
        "seq": "32,37",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Which company owns GetTV and Hypnotize minds ?",
    "SerialNumber": "3756",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/GetTV\u003e \u003chttp://dbpedia.org/property/parent\u003e ?uri. \u003chttp://dbpedia.org/resource/Hypnotize_Minds\u003e \u003chttp://dbpedia.org/property/parent\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "GetTV",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/GetTV",
        "seq": "19,24"
      },
      {
        "label": "Hypnotize minds",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Hypnotize_Minds",
        "seq": "29,44"
      }
    ],
    "id": "3d239bb3a5c14dd59a0f32a7623929e8",
    "predicate mapping": [
      {
        "label": "owns",
        "uri": "http://dbpedia.org/property/parent",
        "mappedBy": "word2vec"
      },
      {
        "label": "owns",
        "uri": "http://dbpedia.org/property/parent",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "How many subjects are covered in the publications of Doubleday?",
    "SerialNumber": "3757",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/publisher\u003e \u003chttp://dbpedia.org/resource/Doubleday_(publisher)\u003e . ?x \u003chttp://dbpedia.org/ontology/nonFictionSubject\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Doubleday",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Doubleday_(publisher)",
        "seq": "53,62"
      }
    ],
    "id": "557e9d5fa7a8436e80e24ed1e0e80825",
    "predicate mapping": [
      {
        "label": "publications",
        "uri": "http://dbpedia.org/ontology/publisher",
        "mappedBy": "word2vec"
      },
      {
        "label": "subjects",
        "uri": "http://dbpedia.org/ontology/nonFictionSubject",
        "seq": "9,17",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Miguel de Cervantes wrote the musical extended from which book?",
    "SerialNumber": "3758",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/author\u003e \u003chttp://dbpedia.org/resource/Miguel_de_Cervantes\u003e . ?x \u003chttp://dbpedia.org/ontology/basedOn\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Musical\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Miguel de Cervantes",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Miguel_de_Cervantes",
        "seq": "0,19"
      }
    ],
    "id": "39eeccfe288b4fc78a5dcd44386e7255",
    "predicate mapping": [
      {
        "label": "book",
        "uri": "http://dbpedia.org/ontology/author",
        "mappedBy": "word2vec"
      },
      {
        "label": "extended from",
        "uri": "http://dbpedia.org/ontology/basedOn",
        "seq": "38,51",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "musical",
        "uri": "http://dbpedia.org/ontology/Musical",
        "seq": "30,37",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "What is the company whose one of the key person is Dennis Muilenburg and produces Boeing CH-47 Chinook ?",
    "SerialNumber": "3765",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/keyPeople\u003e \u003chttp://dbpedia.org/resource/Dennis_Muilenburg\u003e . ?uri \u003chttp://dbpedia.org/ontology/product\u003e \u003chttp://dbpedia.org/resource/Boeing_CH-47_Chinook\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Company\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Dennis Muilenburg",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Dennis_Muilenburg",
        "seq": "51,68"
      },
      {
        "label": "Boeing CH-47 Chinook",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Boeing_CH-47_Chinook",
        "seq": "82,102"
      }
    ],
    "id": "6ab4e15a8b7248ebb8cb2c41358e0f2a",
    "predicate mapping": [
      {
        "label": "key",
        "uri": "http://dbpedia.org/property/keyPeople",
        "seq": "37,40",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "produces",
        "uri": "http://dbpedia.org/ontology/product",
        "mappedBy": "word2vec"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company",
        "seq": "12,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What is the stylistic origin of the music genres where the Bass guitar is important?",
    "SerialNumber": "3767",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/instruments\u003e \u003chttp://dbpedia.org/resource/Bass_guitar\u003e . ?x \u003chttp://dbpedia.org/ontology/stylisticOrigin\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MusicGenre\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Bass guitar",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Bass_guitar",
        "seq": "59,70"
      }
    ],
    "id": "d107d84c4eaf43c4bb51b0825ae31b0c",
    "predicate mapping": [
      {
        "label": "important",
        "uri": "http://dbpedia.org/property/instruments",
        "mappedBy": "word2vec"
      },
      {
        "label": "stylistic origin",
        "uri": "http://dbpedia.org/ontology/stylisticOrigin",
        "seq": "12,28",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "music genre",
        "uri": "http://dbpedia.org/ontology/MusicGenre",
        "seq": "36,47",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Where did the office holder  who is predecessor to Marco Aurelio Robles died ?",
    "SerialNumber": "3770",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/predecessor\u003e \u003chttp://dbpedia.org/resource/Marco_Aurelio_Robles\u003e . ?x \u003chttp://dbpedia.org/property/placeOfDeath\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/OfficeHolder\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Marco Aurelio Robles",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Marco_Aurelio_Robles",
        "seq": "51,71"
      }
    ],
    "id": "bfbf00221cf04ca7b6a2b27c0f0b66d7",
    "predicate mapping": [
      {
        "label": "predecessor",
        "uri": "http://dbpedia.org/property/predecessor",
        "seq": "36,47",
        "mappedBy": "byLabelMatch"
      },
      {
        "uri": "http://dbpedia.org/property/placeOfDeath",
        "mappedBy": "word2vec"
      },
      {
        "label": "office holder",
        "uri": "http://dbpedia.org/ontology/OfficeHolder",
        "seq": "14,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "What are some cartoons distributed by a subsidiary of Time Warner?",
    "SerialNumber": "3775",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/parentCompany\u003e \u003chttp://dbpedia.org/resource/Time_Warner\u003e . ?uri \u003chttp://dbpedia.org/property/distributor\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Cartoon\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Time Warner",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Time_Warner",
        "seq": "54,65"
      }
    ],
    "id": "841b87f5ad0d4f0397e61ab5f19dfd26",
    "predicate mapping": [
      {
        "label": "subsidiary",
        "uri": "http://dbpedia.org/ontology/parentCompany",
        "mappedBy": "word2vec"
      },
      {
        "label": "distributed by",
        "uri": "http://dbpedia.org/property/distributor",
        "seq": "23,37",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "cartoon",
        "uri": "http://dbpedia.org/ontology/Cartoon",
        "seq": "14,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Where is the tombstone of Johannes Gerhardus Strijdom?",
    "SerialNumber": "3781",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Johannes_Gerhardus_Strijdom\u003e \u003chttp://dbpedia.org/property/restingplace\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Johannes Gerhardus Strijdom",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Johannes_Gerhardus_Strijdom",
        "seq": "26,53"
      }
    ],
    "id": "7c5f3af257f34d6fa8ea63202db67648",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/restingplace",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "311",
    "question": "List all important people of the non profit organization which has Hilary Clinton as a key person ?",
    "SerialNumber": "3787",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/keyPeople\u003e \u003chttp://dbpedia.org/resource/Hillary_Clinton\u003e . ?x \u003chttp://dbpedia.org/property/keyPeople\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Non-ProfitOrganisation\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Hilary Clinton",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Hillary_Clinton",
        "seq": "67,81"
      }
    ],
    "id": "8bcda51415224909b0c127abbc00da92",
    "predicate mapping": [
      {
        "label": "people key",
        "uri": "http://dbpedia.org/property/keyPeople",
        "seq": "-1,9",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "people key",
        "uri": "http://dbpedia.org/property/keyPeople",
        "seq": "-1,9",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "uri": "http://dbpedia.org/ontology/Non-ProfitOrganisation",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Where did Allama Matthews study?",
    "SerialNumber": "3788",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Allama_Matthews\u003e \u003chttp://dbpedia.org/ontology/college\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Allama Matthews",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Allama_Matthews",
        "seq": "10,25"
      }
    ],
    "id": "ab3b3833bcba4004a128604125a5d633",
    "predicate mapping": [
      {
        "label": "study",
        "uri": "http://dbpedia.org/ontology/college",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Politicians born in Bangalore are now in which parties?",
    "SerialNumber": "3789",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/homeTown\u003e \u003chttp://dbpedia.org/resource/Bangalore\u003e . ?x \u003chttp://dbpedia.org/ontology/party\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Bangalore",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Bangalore",
        "seq": "20,29"
      }
    ],
    "id": "54b17242bd0b451ea66624da5aee1f7e",
    "predicate mapping": [
      {
        "label": "born",
        "uri": "http://dbpedia.org/property/homeTown",
        "mappedBy": "word2vec"
      },
      {
        "label": "parties",
        "uri": "http://dbpedia.org/ontology/party",
        "seq": "47,54",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "What is the nationality of the chancellor who was served by Michael Mayr?",
    "SerialNumber": "3790",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Michael_Mayr\u003e \u003chttp://dbpedia.org/ontology/deputy\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/nationality\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Chancellor\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Michael Mayr",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Michael_Mayr",
        "seq": "60,72"
      }
    ],
    "id": "002025caf73746c88b16cc4f2bf21525",
    "predicate mapping": [
      {
        "label": "served",
        "uri": "http://dbpedia.org/ontology/deputy",
        "mappedBy": "word2vec"
      },
      {
        "label": "nationality",
        "uri": "http://dbpedia.org/ontology/nationality",
        "seq": "12,23",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "chancellor",
        "uri": "http://dbpedia.org/ontology/Chancellor",
        "seq": "31,41",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Quebec born ice hockey players have stopped playing for which teams?",
    "SerialNumber": "3792",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/birthPlace\u003e \u003chttp://dbpedia.org/resource/Quebec\u003e . ?x \u003chttp://dbpedia.org/ontology/formerTeam\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/IceHockeyPlayer\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Quebec",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Quebec",
        "seq": "0,6"
      }
    ],
    "id": "0cc6db94bbc44a198411909a855a2d2a",
    "predicate mapping": [
      {
        "label": "playing",
        "uri": "http://dbpedia.org/ontology/birthPlace",
        "mappedBy": "word2vec"
      },
      {
        "label": "teams",
        "uri": "http://dbpedia.org/ontology/formerTeam",
        "seq": "62,67",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "ice hockey player",
        "uri": "http://dbpedia.org/ontology/IceHockeyPlayer",
        "seq": "12,29",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "405",
    "question": "How many genres gave birth to other genres which emphasize Bass Guitars?",
    "SerialNumber": "3793",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/instruments\u003e \u003chttp://dbpedia.org/resource/Bass_guitar\u003e . ?x \u003chttp://dbpedia.org/ontology/stylisticOrigin\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MusicGenre\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Bass Guitar",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Bass_guitar",
        "seq": "59,70"
      }
    ],
    "id": "17ff67b500a04c5193fed5a413a9a9ec",
    "predicate mapping": [
      {
        "label": "emphasize",
        "uri": "http://dbpedia.org/property/instruments",
        "mappedBy": "word2vec"
      },
      {
        "label": "emphasize",
        "uri": "http://dbpedia.org/ontology/stylisticOrigin",
        "mappedBy": "word2vec"
      },
      {
        "label": "genre",
        "uri": "http://dbpedia.org/ontology/MusicGenre",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which info. appliance is manufactured by Asus and is the predecessor of PS 2?",
    "SerialNumber": "3794",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/predecessor\u003e \u003chttp://dbpedia.org/resource/PlayStation_2\u003e . ?uri \u003chttp://dbpedia.org/ontology/manufacturer\u003e \u003chttp://dbpedia.org/resource/Asus\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/InformationAppliance\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/PlayStation_2",
        "seq": "999,1000"
      },
      {
        "label": "Asus",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Asus",
        "seq": "41,45"
      }
    ],
    "id": "e5147d9405b647ccba833c959572483d",
    "predicate mapping": [
      {
        "label": "predecessor",
        "uri": "http://dbpedia.org/property/predecessor",
        "seq": "57,68",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "manufactured by",
        "uri": "http://dbpedia.org/ontology/manufacturer",
        "seq": "25,40",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "appliance",
        "uri": "http://dbpedia.org/ontology/InformationAppliance",
        "seq": "12,21",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Where do employees of Deroit Red Wings live?",
    "SerialNumber": "3795",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/employer\u003e \u003chttp://dbpedia.org/resource/Detroit_Red_Wings\u003e . ?x \u003chttp://dbpedia.org/ontology/residence\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Deroit Red Wings",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Detroit_Red_Wings",
        "seq": "22,38"
      }
    ],
    "id": "d1d052fa4410465f98e14f968dcd449c",
    "predicate mapping": [
      {
        "label": "live",
        "uri": "http://dbpedia.org/property/employer",
        "mappedBy": "word2vec"
      },
      {
        "label": "live",
        "uri": "http://dbpedia.org/ontology/residence",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "103",
    "question": "How many politicians are there from the city of Ganges?",
    "SerialNumber": "3798",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { \u003chttp://dbpedia.org/resource/Ganges\u003e \u003chttp://dbpedia.org/property/city\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/leaderName\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ganges",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ganges",
        "seq": "48,54"
      }
    ],
    "id": "3ea9b079d22b43dcb2ff7969eb24f3cd",
    "predicate mapping": [
      {
        "label": "city",
        "uri": "http://dbpedia.org/property/city",
        "seq": "40,44",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "politicians",
        "uri": "http://dbpedia.org/ontology/leaderName",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "What genre\u0027s softwares are released with a GNU GPL license?",
    "SerialNumber": "3799",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/license\u003e \u003chttp://dbpedia.org/resource/GNU_General_Public_License\u003e . ?x \u003chttp://dbpedia.org/property/genre\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "license",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/GNU_General_Public_License",
        "seq": "999,1000"
      }
    ],
    "id": "eb2d086a990849edbedf1e67a5489fc7",
    "predicate mapping": [
      {
        "label": "license",
        "uri": "http://dbpedia.org/property/license",
        "seq": "51,58",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "genre",
        "uri": "http://dbpedia.org/property/genre",
        "seq": "5,10",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "401",
    "question": "How many shows are made by Playtone?",
    "SerialNumber": "3800",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/property/company\u003e \u003chttp://dbpedia.org/resource/Playtone\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Playtone",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Playtone",
        "seq": "27,35"
      }
    ],
    "id": "742fc3c32535483d84f660a50956fc0c",
    "predicate mapping": [
      {
        "label": "made",
        "uri": "http://dbpedia.org/property/company",
        "mappedBy": "word2vec"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "9,14",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the monarch of L Buwei ?",
    "SerialNumber": "3801",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Lü_Buwei\u003e \u003chttp://dbpedia.org/ontology/monarch\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "buwei l",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Lü_Buwei",
        "seq": "999,1000"
      }
    ],
    "id": "c3f02e6afc5c4437933fc26320fd4915",
    "predicate mapping": [
      {
        "label": "monarch",
        "uri": "http://dbpedia.org/ontology/monarch",
        "seq": "9,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Which soccer clubs are in the Liga Divisi Utama?",
    "SerialNumber": "3802",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/season\u003e \u003chttp://dbpedia.org/resource/Liga_Divisi_Utama\u003e . ?x \u003chttp://dbpedia.org/property/name\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/SoccerClub\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Liga Divisi Utama",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Liga_Divisi_Utama",
        "seq": "30,47"
      }
    ],
    "id": "e3178cfe799a4542bc1c07f4d8fa0891",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/season",
        "mappedBy": "word2vec"
      },
      {
        "uri": "http://dbpedia.org/property/name",
        "mappedBy": "word2vec"
      },
      {
        "label": "soccer club",
        "uri": "http://dbpedia.org/ontology/SoccerClub",
        "seq": "6,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who is the distributer of Rev ?",
    "SerialNumber": "3806",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Rev_(drink)\u003e \u003chttp://dbpedia.org/property/distributor\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Rev",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Rev_(drink)",
        "seq": "26,29"
      }
    ],
    "id": "83a20f11faf04a29a327446573eef42a",
    "predicate mapping": [
      {
        "label": "distributer",
        "uri": "http://dbpedia.org/property/distributor",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "103",
    "question": "In how many places can I find people who were the architects of the Dundas Castle?",
    "SerialNumber": "3807",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { \u003chttp://dbpedia.org/resource/Dundas_Castle_(Roscoe,_New_York)\u003e \u003chttp://dbpedia.org/property/architecture\u003e ?x . ?x \u003chttp://dbpedia.org/property/region\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Dundas Castle",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Dundas_Castle_(Roscoe,_New_York)",
        "seq": "68,81"
      }
    ],
    "id": "7380ef507d0a4475822c823d403e5033",
    "predicate mapping": [
      {
        "label": "architects",
        "uri": "http://dbpedia.org/property/architecture",
        "seq": "50,60",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "people",
        "uri": "http://dbpedia.org/property/region",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which TNT show has Christopher Franke as artist?",
    "SerialNumber": "3808",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/artist\u003e \u003chttp://dbpedia.org/resource/Christopher_Franke\u003e . ?uri \u003chttp://dbpedia.org/property/network\u003e \u003chttp://dbpedia.org/resource/TNT_(TV_channel)\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Christopher Franke",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Christopher_Franke",
        "seq": "19,37"
      },
      {
        "label": "TNT",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/TNT_(TV_channel)",
        "seq": "6,9"
      }
    ],
    "id": "0a39dc60f7d4418592e0d1d5426c7c5a",
    "predicate mapping": [
      {
        "label": "artist",
        "uri": "http://dbpedia.org/property/artist",
        "seq": "41,47",
        "mappedBy": "byLabelMatch"
      },
      {
        "uri": "http://dbpedia.org/property/network",
        "mappedBy": "word2vec"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "10,14",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Where did the genres originate which can found in The Mudbloods?",
    "SerialNumber": "3811",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/The_Mudbloods\u003e \u003chttp://dbpedia.org/property/genre\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/stylisticOrigin\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "The Mudbloods",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Mudbloods",
        "seq": "50,63"
      }
    ],
    "id": "7bd1752d4a3843d1b75a99a3c4131114",
    "predicate mapping": [
      {
        "label": "genre",
        "uri": "http://dbpedia.org/property/genre",
        "seq": "14,19",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "found",
        "uri": "http://dbpedia.org/ontology/stylisticOrigin",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "From how many works is the musical derived, whose lyrics are written by Sheldon Harnick?",
    "SerialNumber": "3815",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/lyrics\u003e \u003chttp://dbpedia.org/resource/Sheldon_Harnick\u003e . ?x \u003chttp://dbpedia.org/ontology/basedOn\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Sheldon Harnick",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Sheldon_Harnick",
        "seq": "72,87"
      }
    ],
    "id": "0d4bdac144b6458296c5c93ebacb1789",
    "predicate mapping": [
      {
        "label": "lyrics",
        "uri": "http://dbpedia.org/property/lyrics",
        "seq": "50,56",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "written",
        "uri": "http://dbpedia.org/ontology/basedOn",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "In which fields are pupils of Edouard Chavannes working?",
    "SerialNumber": "3816",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/academicAdvisor\u003e \u003chttp://dbpedia.org/resource/Édouard_Chavannes\u003e . ?x \u003chttp://dbpedia.org/property/fields\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Edouard Chavannes",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Édouard_Chavannes",
        "seq": "30,47"
      }
    ],
    "id": "0b977445d3f142d3a514eb59c55000fd",
    "predicate mapping": [
      {
        "label": "working",
        "uri": "http://dbpedia.org/ontology/academicAdvisor",
        "mappedBy": "word2vec"
      },
      {
        "label": "fields",
        "uri": "http://dbpedia.org/property/fields",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "401",
    "question": "How many politicians live in India?",
    "SerialNumber": "3819",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/ontology/residence\u003e \u003chttp://dbpedia.org/resource/India\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/OfficeHolder\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "India",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/India",
        "seq": "29,34"
      }
    ],
    "id": "be045d0165ce481b9924bae470be2f0f",
    "predicate mapping": [
      {
        "label": "live",
        "uri": "http://dbpedia.org/ontology/residence",
        "mappedBy": "word2vec"
      },
      {
        "label": "live",
        "uri": "http://dbpedia.org/ontology/OfficeHolder",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "405",
    "question": "In how many places can I find people whose alma mater was in bachelor of arts?",
    "SerialNumber": "3821",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/almaMater\u003e \u003chttp://dbpedia.org/resource/Bachelor_of_Arts\u003e . ?x \u003chttp://dbpedia.org/ontology/residence\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Place\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "bachelor of arts",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Bachelor_of_Arts",
        "seq": "61,77"
      }
    ],
    "id": "24ee24bf221e4289bf99c0ed742a27fe",
    "predicate mapping": [
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/property/almaMater",
        "seq": "43,53",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "people",
        "uri": "http://dbpedia.org/ontology/residence",
        "mappedBy": "word2vec"
      },
      {
        "label": "place",
        "uri": "http://dbpedia.org/ontology/Place",
        "seq": "12,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which maintainer of Cheasty Boulevard South is also the city of Soccer Bowl\u0027 76 ?",
    "SerialNumber": "3822",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Soccer_Bowl_\u002776\u003e \u003chttp://dbpedia.org/ontology/city\u003e ?uri. \u003chttp://dbpedia.org/resource/Cheasty_Boulevard_South\u003e \u003chttp://dbpedia.org/ontology/maintainedBy\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "soccer",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Soccer_Bowl_\u002776",
        "seq": "999,1000"
      },
      {
        "label": "Cheasty Boulevard South",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Cheasty_Boulevard_South",
        "seq": "20,43"
      }
    ],
    "id": "6ef5a08456594a85bc7216c671ad1076",
    "predicate mapping": [
      {
        "label": "city",
        "uri": "http://dbpedia.org/ontology/city",
        "seq": "56,60",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "maintainer",
        "uri": "http://dbpedia.org/ontology/maintainedBy",
        "seq": "6,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What was the stadium of Panionios G.S.S. in 2014-15 season ?",
    "SerialNumber": "3825",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/2014–15_Panionios_G.S.S._season\u003e \u003chttp://dbpedia.org/property/stadium\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "panionios season g.s.s.",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/2014–15_Panionios_G.S.S._season",
        "seq": "999,1000"
      }
    ],
    "id": "e36eb17b3221405197c89bc804df06cb",
    "predicate mapping": [
      {
        "label": "stadium",
        "uri": "http://dbpedia.org/property/stadium",
        "seq": "13,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Where is the debut team of Shaquil Barrett located?",
    "SerialNumber": "3826",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Shaquil_Barrett\u003e \u003chttp://dbpedia.org/property/debutteam\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/locationCity\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Shaquil Barrett",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Shaquil_Barrett",
        "seq": "27,42"
      }
    ],
    "id": "12126746eda842aa8fcca0253a6905bb",
    "predicate mapping": [
      {
        "label": "debut team",
        "uri": "http://dbpedia.org/property/debutteam",
        "seq": "13,23",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "located",
        "uri": "http://dbpedia.org/ontology/locationCity",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What are the musicals based on, whose lyricist was Shelon Harnick?",
    "SerialNumber": "3827",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/lyrics\u003e \u003chttp://dbpedia.org/resource/Sheldon_Harnick\u003e . ?x \u003chttp://dbpedia.org/ontology/basedOn\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Musical\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Shelon Harnick",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Sheldon_Harnick",
        "seq": "51,65"
      }
    ],
    "id": "55e5eb722be04ed0818176f887603e97",
    "predicate mapping": [
      {
        "label": "lyricist",
        "uri": "http://dbpedia.org/property/lyrics",
        "mappedBy": "word2vec"
      },
      {
        "label": "based on",
        "uri": "http://dbpedia.org/ontology/basedOn",
        "seq": "22,30",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "musical",
        "uri": "http://dbpedia.org/ontology/Musical",
        "seq": "13,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Who wrote a rose for emily?",
    "SerialNumber": "3828",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/notableWork\u003e \u003chttp://dbpedia.org/resource/A_Rose_for_Emily\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Writer\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "a rose for emily",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/A_Rose_for_Emily",
        "seq": "10,26"
      }
    ],
    "id": "6aa2c0fad7224aab875e00964e242d8b",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/notableWork",
        "mappedBy": "word2vec"
      },
      {
        "label": "wrote",
        "uri": "http://dbpedia.org/ontology/Writer",
        "seq": "4,9",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which animator of Tommy Ticker\u0027s Tooth is also the director of The Haunted house ?",
    "SerialNumber": "3830",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Tommy_Tucker\u0027s_Tooth\u003e \u003chttp://dbpedia.org/property/animator\u003e ?uri. \u003chttp://dbpedia.org/resource/The_Haunted_House_(1929_film)\u003e \u003chttp://dbpedia.org/ontology/director\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Tommy_Tucker\u0027s_Tooth",
        "seq": "999,1000"
      },
      {
        "label": "The Haunted house",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Haunted_House_(1929_film)",
        "seq": "63,80"
      }
    ],
    "id": "a7fe79af1995496f9ee76331f0d5ebb5",
    "predicate mapping": [
      {
        "label": "animator",
        "uri": "http://dbpedia.org/property/animator",
        "seq": "6,14",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "director",
        "uri": "http://dbpedia.org/ontology/director",
        "seq": "51,59",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "How many games are played at universities affiliated with the Association of Southeast Asian Institutions of Higher Learning?",
    "SerialNumber": "3832",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/affiliation\u003e \u003chttp://dbpedia.org/resource/Association_of_Southeast_Asian_Institutions_of_Higher_Learning\u003e . ?x \u003chttp://dbpedia.org/ontology/sport\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Association of Southeast Asian Institutions of Higher Learning",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Association_of_Southeast_Asian_Institutions_of_Higher_Learning",
        "seq": "62,124"
      }
    ],
    "id": "de9f7d4ab7234f029fe2a69b1fb26c8e",
    "predicate mapping": [
      {
        "label": "affiliated",
        "uri": "http://dbpedia.org/ontology/affiliation",
        "mappedBy": "word2vec"
      },
      {
        "label": "affiliated",
        "uri": "http://dbpedia.org/ontology/sport",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "From which country did the Mauritius bank and the national commerce bank emerge?",
    "SerialNumber": "3833",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/National_Commercial_Bank_Mauritius\u003e \u003chttp://dbpedia.org/property/locationCountry\u003e ?uri. \u003chttp://dbpedia.org/resource/Mauritius_Bank\u003e \u003chttp://dbpedia.org/property/locationCountry\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "mauritius national",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/National_Commercial_Bank_Mauritius",
        "seq": "999,1000"
      },
      {
        "label": "Mauritius bank",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Mauritius_Bank",
        "seq": "27,41"
      }
    ],
    "id": "1386583d5c3243a7a2eef959681226b1",
    "predicate mapping": [
      {
        "label": "country",
        "uri": "http://dbpedia.org/property/locationCountry",
        "seq": "11,18",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/property/locationCountry",
        "seq": "11,18",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "Count the tenants of the stadiums designed by Populous?",
    "SerialNumber": "3836",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/architect\u003e \u003chttp://dbpedia.org/resource/Populous_(company)\u003e . ?x \u003chttp://dbpedia.org/ontology/tenant\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Populous",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Populous_(company)",
        "seq": "46,54"
      }
    ],
    "id": "95cbbbabb49c4cf6a010c6ea3c230633",
    "predicate mapping": [
      {
        "label": "designed",
        "uri": "http://dbpedia.org/ontology/architect",
        "mappedBy": "word2vec"
      },
      {
        "label": "tenant",
        "uri": "http://dbpedia.org/ontology/tenant",
        "seq": "10,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Where does the network cofounded by Seewoosagur Ramgoolam air its shows?",
    "SerialNumber": "3837",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/founder\u003e \u003chttp://dbpedia.org/resource/Seewoosagur_Ramgoolam\u003e . ?x \u003chttp://dbpedia.org/property/broadcastArea\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/BroadcastNetwork\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Seewoosagur Ramgoolam",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Seewoosagur_Ramgoolam",
        "seq": "36,57"
      }
    ],
    "id": "5e96bbf76e3e40b2a62b009a2c1e48ea",
    "predicate mapping": [
      {
        "label": "founded by",
        "uri": "http://dbpedia.org/property/founder",
        "seq": "25,35",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/property/broadcastArea",
        "mappedBy": "word2vec"
      },
      {
        "label": "network",
        "uri": "http://dbpedia.org/ontology/BroadcastNetwork",
        "seq": "15,22",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "Count the different number of academic areas covered by publications of SAGE?",
    "SerialNumber": "3839",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/publisher\u003e \u003chttp://dbpedia.org/resource/SAGE_Publications\u003e . ?x \u003chttp://dbpedia.org/ontology/academicDiscipline\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "publications sage",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/SAGE_Publications",
        "seq": "999,1000"
      }
    ],
    "id": "9ddba4eb7a16400f906e88d1c0390a79",
    "predicate mapping": [
      {
        "label": "SAGE",
        "uri": "http://dbpedia.org/property/publisher",
        "mappedBy": "word2vec"
      },
      {
        "label": "academic area",
        "uri": "http://dbpedia.org/ontology/academicDiscipline",
        "seq": "30,43",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which memeber of South Asia SubRegional Economic cooperation is also the nationality of Aishath saffa ?",
    "SerialNumber": "3840",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/South_Asia_Subregional_Economic_Cooperation\u003e \u003chttp://dbpedia.org/property/membership\u003e ?uri. \u003chttp://dbpedia.org/resource/Aishath_Saffa\u003e \u003chttp://dbpedia.org/property/nationality\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "South Asia SubRegional Economic cooperation",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/South_Asia_Subregional_Economic_Cooperation",
        "seq": "17,60"
      },
      {
        "label": "Aishath saffa",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Aishath_Saffa",
        "seq": "88,101"
      }
    ],
    "id": "abcce0946b3a4c748fd0c8a9f5cf1030",
    "predicate mapping": [
      {
        "label": "memeber",
        "uri": "http://dbpedia.org/property/membership",
        "mappedBy": "word2vec"
      },
      {
        "label": "nationality",
        "uri": "http://dbpedia.org/property/nationality",
        "seq": "73,84",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Where did the scientist study whose doctoral thesis was supervised by Leonard Lerman?",
    "SerialNumber": "3844",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/doctoralAdvisor\u003e \u003chttp://dbpedia.org/resource/Leonard_Lerman\u003e . ?x \u003chttp://dbpedia.org/property/almaMater\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Scientist\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Leonard Lerman",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Leonard_Lerman",
        "seq": "70,84"
      }
    ],
    "id": "85bb3f36d96d48e4aa43e98a78de40a0",
    "predicate mapping": [
      {
        "label": "doctoral",
        "uri": "http://dbpedia.org/property/doctoralAdvisor",
        "seq": "36,44",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "supervised",
        "uri": "http://dbpedia.org/property/almaMater",
        "mappedBy": "word2vec"
      },
      {
        "label": "scientist",
        "uri": "http://dbpedia.org/ontology/Scientist",
        "seq": "14,23",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What is the country of origin of the president of Skai group?",
    "SerialNumber": "3853",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Skai_Group\u003e \u003chttp://dbpedia.org/ontology/keyPerson\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/stateOfOrigin\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Skai group",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Skai_Group",
        "seq": "50,60"
      }
    ],
    "id": "d36b821cc4c947d19cf3ec17ad87e9c2",
    "predicate mapping": [
      {
        "label": "president",
        "uri": "http://dbpedia.org/ontology/keyPerson",
        "mappedBy": "word2vec"
      },
      {
        "label": "origin",
        "uri": "http://dbpedia.org/ontology/stateOfOrigin",
        "seq": "23,29",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the movies distributed by Cinema International Corporation and edited by Hulian Doyle ?",
    "SerialNumber": "3856",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/distributor\u003e \u003chttp://dbpedia.org/resource/Cinema_International_Corporation\u003e . ?uri \u003chttp://dbpedia.org/property/editing\u003e \u003chttp://dbpedia.org/resource/Julian_Doyle_(filmmaker)\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Cinema International Corporation",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Cinema_International_Corporation",
        "seq": "31,63"
      },
      {
        "label": "doyle",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Julian_Doyle_(filmmaker)",
        "seq": "999,1000"
      }
    ],
    "id": "9a8d8cab24774d4eb9fe49d063f80906",
    "predicate mapping": [
      {
        "label": "distributed by",
        "uri": "http://dbpedia.org/property/distributor",
        "seq": "16,30",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "edited by",
        "uri": "http://dbpedia.org/property/editing",
        "seq": "68,77",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the common relegion of Miao people  and the country where Guru Purnima is celebrated ?",
    "SerialNumber": "3860",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Miao_people\u003e \u003chttp://dbpedia.org/ontology/religion\u003e ?uri. \u003chttp://dbpedia.org/resource/Guru_Purnima\u003e \u003chttp://dbpedia.org/ontology/country\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Miao people",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Miao_people",
        "seq": "31,42"
      },
      {
        "label": "Guru Purnima",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Guru_Purnima",
        "seq": "66,78"
      }
    ],
    "id": "629e52550fd146e191ec02ae20114735",
    "predicate mapping": [
      {
        "label": "celebrated",
        "uri": "http://dbpedia.org/ontology/religion",
        "mappedBy": "word2vec"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/country",
        "seq": "52,59",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Where did the relatives of Gustavo Rojas Pinilla study?",
    "SerialNumber": "3861",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/relation\u003e \u003chttp://dbpedia.org/resource/Gustavo_Rojas_Pinilla\u003e . ?x \u003chttp://dbpedia.org/property/almaMater\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Gustavo Rojas Pinilla",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Gustavo_Rojas_Pinilla",
        "seq": "27,48"
      }
    ],
    "id": "bd4cb94b69084d79b0d1feb1fc8b014d",
    "predicate mapping": [
      {
        "label": "study",
        "uri": "http://dbpedia.org/ontology/relation",
        "mappedBy": "word2vec"
      },
      {
        "label": "study",
        "uri": "http://dbpedia.org/property/almaMater",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Is the song Killing is Out, School is in belong in the The Next Step?",
    "SerialNumber": "3863",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Killing_Is_Out,_School_Is_In\u003e \u003chttp://dbpedia.org/property/album\u003e \u003chttp://dbpedia.org/resource/The_Next_Step_(James_Brown_album)\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Killing is Out, School is in",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Killing_Is_Out,_School_Is_In",
        "seq": "12,40"
      },
      {
        "label": "The Next Step",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Next_Step_(James_Brown_album)",
        "seq": "55,68"
      }
    ],
    "id": "c19fedddfc0041919699b9a01eb5cbd1",
    "predicate mapping": [
      {
        "label": "belong",
        "uri": "http://dbpedia.org/property/album",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "What are some dishes from the family of dishes which primarily use flour?",
    "SerialNumber": "3864",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/mainIngredient\u003e \u003chttp://dbpedia.org/resource/Flour\u003e . ?uri \u003chttp://dbpedia.org/ontology/type\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Food\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "flour",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Flour",
        "seq": "67,72"
      }
    ],
    "id": "5916bbcd6e894955885d10526c5bd306",
    "predicate mapping": [
      {
        "label": "primarily",
        "uri": "http://dbpedia.org/property/mainIngredient",
        "mappedBy": "word2vec"
      },
      {
        "label": "primarily",
        "uri": "http://dbpedia.org/ontology/type",
        "mappedBy": "word2vec"
      },
      {
        "label": "primarily",
        "uri": "http://dbpedia.org/ontology/Food",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Who is the author of Heroman is also the author of Karakuri Dji Ultimo ?",
    "SerialNumber": "3865",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Heroman\u003e \u003chttp://dbpedia.org/property/author\u003e ?uri. \u003chttp://dbpedia.org/resource/Karakuri_Dôji_Ultimo\u003e \u003chttp://dbpedia.org/ontology/author\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Heroman",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Heroman",
        "seq": "21,28"
      },
      {
        "label": "karakuri ultimo",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Karakuri_Dôji_Ultimo",
        "seq": "999,1000"
      }
    ],
    "id": "7788c912b6fb4457b27be58ee6f63052",
    "predicate mapping": [
      {
        "label": "author",
        "uri": "http://dbpedia.org/property/author",
        "seq": "11,17",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "author",
        "uri": "http://dbpedia.org/ontology/author",
        "seq": "11,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Was Blade Runner cinematographed by JordanCronenweth?",
    "SerialNumber": "3868",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Blade_Runner\u003e \u003chttp://dbpedia.org/ontology/cinematography\u003e \u003chttp://dbpedia.org/resource/Jordan_Cronenweth\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Blade Runner",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Blade_Runner",
        "seq": "4,16"
      },
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Jordan_Cronenweth",
        "seq": "999,1000"
      }
    ],
    "id": "4b3b5256bbe842d685027d2c18454d38",
    "predicate mapping": [
      {
        "label": "cinematographed",
        "uri": "http://dbpedia.org/ontology/cinematography",
        "seq": "17,32",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "107",
    "question": "Count the number of software which runs on Microsoft Windows and mac OS ?",
    "SerialNumber": "3870",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?uri \u003chttp://dbpedia.org/ontology/operatingSystem\u003e \u003chttp://dbpedia.org/resource/Microsoft_Windows\u003e . ?uri \u003chttp://dbpedia.org/ontology/operatingSystem\u003e \u003chttp://dbpedia.org/resource/Mac_OS\u003e} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Microsoft Windows",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Microsoft_Windows",
        "seq": "43,60"
      },
      {
        "label": "mac OS",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Mac_OS",
        "seq": "65,71"
      }
    ],
    "id": "ff4d3c67a6884976a4f27a81882a97cd",
    "predicate mapping": [
      {
        "label": "runs",
        "uri": "http://dbpedia.org/ontology/operatingSystem",
        "mappedBy": "word2vec"
      },
      {
        "label": "runs",
        "uri": "http://dbpedia.org/ontology/operatingSystem",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What has Carl Sagan written his books about?",
    "SerialNumber": "3871",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/author\u003e \u003chttp://dbpedia.org/resource/Carl_Sagan\u003e . ?x \u003chttp://dbpedia.org/property/subject\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Book\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Carl Sagan",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Carl_Sagan",
        "seq": "9,19"
      }
    ],
    "id": "68843601f12e4f76a157d8e77cdd18b0",
    "predicate mapping": [
      {
        "label": "written",
        "uri": "http://dbpedia.org/ontology/author",
        "mappedBy": "word2vec"
      },
      {
        "label": "written",
        "uri": "http://dbpedia.org/property/subject",
        "mappedBy": "word2vec"
      },
      {
        "label": "book",
        "uri": "http://dbpedia.org/ontology/Book",
        "seq": "32,36",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "401",
    "question": "How many characters are there in The Office?",
    "SerialNumber": "3872",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/ontology/series\u003e \u003chttp://dbpedia.org/resource/The_Office_(U.S._TV_series)\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/FictionalCharacter\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "The Office",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Office_(U.S._TV_series)",
        "seq": "33,43"
      }
    ],
    "id": "af581de0b01f4908a95d361a6416a13c",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/series",
        "mappedBy": "word2vec"
      },
      {
        "label": "characters",
        "uri": "http://dbpedia.org/ontology/FictionalCharacter",
        "seq": "9,19",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "What are some TV shows similar to the one produced by Susie Liggat?",
    "SerialNumber": "3876",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/producer\u003e \u003chttp://dbpedia.org/resource/Susie_Liggat\u003e . ?uri \u003chttp://dbpedia.org/ontology/related\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Susie Liggat",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Susie_Liggat",
        "seq": "54,66"
      }
    ],
    "id": "8b2570a474e64d91bdf32a893692ac55",
    "predicate mapping": [
      {
        "label": "produced",
        "uri": "http://dbpedia.org/property/producer",
        "seq": "42,50",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "similar",
        "uri": "http://dbpedia.org/ontology/related",
        "mappedBy": "word2vec"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "17,22",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "How did the child of Stevens T. Mason die?",
    "SerialNumber": "3877",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Stevens_Thomson_Mason_(Virginia)\u003e \u003chttp://dbpedia.org/ontology/child\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/deathCause\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Stevens T. Mason",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Stevens_Thomson_Mason_(Virginia)",
        "seq": "21,37"
      }
    ],
    "id": "f18825b526744c29b18f7b0a6dc10b80",
    "predicate mapping": [
      {
        "label": "child",
        "uri": "http://dbpedia.org/ontology/child",
        "seq": "12,17",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "die",
        "uri": "http://dbpedia.org/ontology/deathCause",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Which soccer players are currently playing for NYC FC?",
    "SerialNumber": "3879",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/currentclub\u003e \u003chttp://dbpedia.org/resource/New_York_City_FC\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/SoccerPlayer\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/New_York_City_FC",
        "seq": "999,1000"
      }
    ],
    "id": "3624137271954fb984aa700614ac0115",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/currentclub",
        "mappedBy": "word2vec"
      },
      {
        "label": "soccer player",
        "uri": "http://dbpedia.org/ontology/SoccerPlayer",
        "seq": "6,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "101",
    "question": "How many things are located in Ridgewood, New Jersey?",
    "SerialNumber": "3881",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/property/birthPlace\u003e \u003chttp://dbpedia.org/resource/Ridgewood,_New_Jersey\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ridgewood, New Jersey",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Ridgewood,_New_Jersey",
        "seq": "31,52"
      }
    ],
    "id": "ff0272acb02c43028e695cdae056b647",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/property/birthPlace",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which television show\u0027s company is Paramount Television and is located in Boston?",
    "SerialNumber": "3886",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/company\u003e \u003chttp://dbpedia.org/resource/Paramount_Television\u003e . ?uri \u003chttp://dbpedia.org/ontology/location\u003e \u003chttp://dbpedia.org/resource/Boston\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Paramount Television",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Paramount_Television",
        "seq": "35,55"
      },
      {
        "label": "Boston",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Boston",
        "seq": "74,80"
      }
    ],
    "id": "a9bd73968852449abc9875ea0e72a3f9",
    "predicate mapping": [
      {
        "label": "company",
        "uri": "http://dbpedia.org/property/company",
        "seq": "24,31",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "located",
        "uri": "http://dbpedia.org/ontology/location",
        "mappedBy": "word2vec"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "6,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Where was the trainer of Java Gold born?",
    "SerialNumber": "3890",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Java_Gold\u003e \u003chttp://dbpedia.org/property/trainer\u003e ?x . ?x \u003chttp://dbpedia.org/property/birthPlace\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Java Gold",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Java_Gold",
        "seq": "25,34"
      }
    ],
    "id": "f67831f30b7c4fcdb7f825ca4a09c5cf",
    "predicate mapping": [
      {
        "label": "trainer",
        "uri": "http://dbpedia.org/property/trainer",
        "seq": "14,21",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "born",
        "uri": "http://dbpedia.org/property/birthPlace",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Is the Vadodara railway junction onwed by Indian Railway Ministry?",
    "SerialNumber": "3891",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Vadodara_Junction_railway_station\u003e \u003chttp://dbpedia.org/ontology/owningOrganisation\u003e \u003chttp://dbpedia.org/resource/Ministry_of_Railways_(India)\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "vadodara junction railway",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Vadodara_Junction_railway_station",
        "seq": "999,1000"
      },
      {
        "label": "ministry railway",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Ministry_of_Railways_(India)",
        "seq": "999,1000"
      }
    ],
    "id": "5545373a672f44b68c675c0fa2a9b8ac",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/owningOrganisation",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Race horses whose grandsire is Wild  Risk have taken part in which races?",
    "SerialNumber": "3895",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/grandsire\u003e \u003chttp://dbpedia.org/resource/Wild_Risk\u003e . ?x \u003chttp://dbpedia.org/property/race\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/RaceHorse\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "wild risk",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Wild_Risk",
        "seq": "999,1000"
      }
    ],
    "id": "06363edf0f81486685ac0173e6b02850",
    "predicate mapping": [
      {
        "label": "grandsire",
        "uri": "http://dbpedia.org/ontology/grandsire",
        "seq": "18,27",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "Race",
        "uri": "http://dbpedia.org/property/race",
        "seq": "0,4",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "Race horse",
        "uri": "http://dbpedia.org/ontology/RaceHorse",
        "seq": "0,10",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Where is the T.I. Ahmadiyya Girls Senior High School?",
    "SerialNumber": "3897",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/T.I._Ahmadiyya_Girls_Senior_High_School,_Asokore\u003e \u003chttp://dbpedia.org/ontology/denomination\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "T.I. Ahmadiyya Girls Senior High School",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/T.I._Ahmadiyya_Girls_Senior_High_School,_Asokore",
        "seq": "13,52"
      }
    ],
    "id": "4b468d8b196546ddaa7555d1afa4c1c3",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/denomination",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "406",
    "question": "How many information appliance are manufactured by companies located in Taiwan?",
    "SerialNumber": "3898",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/locationCity\u003e \u003chttp://dbpedia.org/resource/Taiwan\u003e . ?uri \u003chttp://dbpedia.org/ontology/manufacturer\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/InformationAppliance\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Taiwan",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Taiwan",
        "seq": "72,78"
      }
    ],
    "id": "1fe3b3d58f8e432d9b1f3b09d5f74c6f",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/property/locationCity",
        "mappedBy": "word2vec"
      },
      {
        "label": "manufactured by",
        "uri": "http://dbpedia.org/ontology/manufacturer",
        "seq": "35,50",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "information appliance",
        "uri": "http://dbpedia.org/ontology/InformationAppliance",
        "seq": "9,30",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "Into what military organizations is the United States Department of Defense divided?",
    "SerialNumber": "3903",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/commandStructure\u003e \u003chttp://dbpedia.org/resource/United_States_Department_of_Defense\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "United States Department of Defense",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/United_States_Department_of_Defense",
        "seq": "40,75"
      }
    ],
    "id": "7bf4c6d437c849c79fbda07a1c39272a",
    "predicate mapping": [
      {
        "label": "divided",
        "uri": "http://dbpedia.org/ontology/commandStructure",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "Name all sitcoms whose theme music is made by Miley Cyrus?",
    "SerialNumber": "3906",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/musicalBand\u003e \u003chttp://dbpedia.org/resource/Miley_Cyrus\u003e . ?uri \u003chttp://dbpedia.org/ontology/openingTheme\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Miley Cyrus",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Miley_Cyrus",
        "seq": "46,57"
      }
    ],
    "id": "6f6810ed49a548939905cf6abbe9bccf",
    "predicate mapping": [
      {
        "label": "music",
        "uri": "http://dbpedia.org/ontology/musicalBand",
        "seq": "29,34",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "theme",
        "uri": "http://dbpedia.org/ontology/openingTheme",
        "seq": "23,28",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "made",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Does the Toyota Verossa have the front engine design platform?",
    "SerialNumber": "3907",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Toyota_Verossa\u003e \u003chttp://dbpedia.org/ontology/automobilePlatform\u003e \u003chttp://dbpedia.org/resource/Front-engine_design\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Toyota Verossa",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Toyota_Verossa",
        "seq": "9,23"
      },
      {
        "label": "engine design front",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Front-engine_design",
        "seq": "999,1000"
      }
    ],
    "id": "af1ad3ef33784711bf9ecd13301e524d",
    "predicate mapping": [
      {
        "label": "platform",
        "uri": "http://dbpedia.org/ontology/automobilePlatform",
        "seq": "53,61",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Was Neil Armstrong on the Gemini 8 mission?",
    "SerialNumber": "3911",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Neil_Armstrong\u003e \u003chttp://dbpedia.org/property/mission\u003e \u003chttp://dbpedia.org/resource/Gemini_8\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Neil Armstrong",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Neil_Armstrong",
        "seq": "4,18"
      },
      {
        "label": "Gemini 8",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Gemini_8",
        "seq": "26,34"
      }
    ],
    "id": "6ac8c31d60b54b13b8e5241fd7e4b741",
    "predicate mapping": [
      {
        "label": "mission",
        "uri": "http://dbpedia.org/property/mission",
        "seq": "35,42",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the sitcom with theme music composer as Julian Gingell and channel as Fox Broadcasting Company?",
    "SerialNumber": "3913",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/themeMusicComposer\u003e \u003chttp://dbpedia.org/resource/Julian_Gingell\u003e . ?uri \u003chttp://dbpedia.org/ontology/channel\u003e \u003chttp://dbpedia.org/resource/Fox_Broadcasting_Company\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Julian Gingell",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Julian_Gingell",
        "seq": "45,59"
      },
      {
        "label": "Fox Broadcasting Company",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Fox_Broadcasting_Company",
        "seq": "75,99"
      }
    ],
    "id": "710a55e3696846ab95695ee383a1fa25",
    "predicate mapping": [
      {
        "label": "theme music composer",
        "uri": "http://dbpedia.org/property/themeMusicComposer",
        "seq": "21,41",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "channel",
        "uri": "http://dbpedia.org/ontology/channel",
        "seq": "64,71",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "sitcom",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Which nationalist group was responsible for foundation of Young Lords?",
    "SerialNumber": "3914",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Young_Lords\u003e \u003chttp://dbpedia.org/property/international\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Young Lords",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Young_Lords",
        "seq": "58,69"
      }
    ],
    "id": "2c6bf82629164b92ae31c438f24e169e",
    "predicate mapping": [
      {
        "label": "foundation",
        "uri": "http://dbpedia.org/property/international",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Give me all the alma mater of the relatives of Samuek Moreno Rojas ?",
    "SerialNumber": "3918",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Samuel_Moreno_Rojas\u003e \u003chttp://dbpedia.org/ontology/relation\u003e ?x . ?x \u003chttp://dbpedia.org/property/almaMater\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Samuek Moreno Rojas",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Samuel_Moreno_Rojas",
        "seq": "47,66"
      }
    ],
    "id": "261be9eb5d11448d9fc941edd2cf2524",
    "predicate mapping": [
      {
        "label": "relatives",
        "uri": "http://dbpedia.org/ontology/relation",
        "mappedBy": "word2vec"
      },
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/property/almaMater",
        "seq": "16,26",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Where does Truman McGill Hobbs, United States District Judge live?",
    "SerialNumber": "3920",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Truman_McGill_Hobbs\u003e \u003chttp://dbpedia.org/property/residence\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Truman McGill Hobbs",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Truman_McGill_Hobbs",
        "seq": "11,30"
      }
    ],
    "id": "e7c2c4d667f343a58a587ef74bcc6bff",
    "predicate mapping": [
      {
        "label": "live",
        "uri": "http://dbpedia.org/property/residence",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the television program voiced by Isaac Hayes and aired on Comedy Central?",
    "SerialNumber": "3922",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/voices\u003e \u003chttp://dbpedia.org/resource/Isaac_Hayes\u003e . ?uri \u003chttp://dbpedia.org/property/network\u003e \u003chttp://dbpedia.org/resource/Comedy_Central\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Isaac Hayes",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Isaac_Hayes",
        "seq": "38,49"
      },
      {
        "label": "Comedy Central",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Comedy_Central",
        "seq": "63,77"
      }
    ],
    "id": "6c1c0ca2a98141f3a9687634493adc68",
    "predicate mapping": [
      {
        "label": "voiced",
        "uri": "http://dbpedia.org/property/voices",
        "seq": "28,34",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "aired",
        "uri": "http://dbpedia.org/property/network",
        "mappedBy": "word2vec"
      },
      {
        "label": "television",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "9,19",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Which company manufactures cars like the Opel Karl ?",
    "SerialNumber": "3923",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/related\u003e \u003chttp://dbpedia.org/resource/Opel_Karl\u003e . ?x \u003chttp://dbpedia.org/property/parentCompany\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Automobile\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Opel Karl",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Opel_Karl",
        "seq": "41,50"
      }
    ],
    "id": "9147a259a1bf43e0bdad21cf341abc26",
    "predicate mapping": [
      {
        "label": "cars",
        "uri": "http://dbpedia.org/property/related",
        "mappedBy": "word2vec"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/property/parentCompany",
        "seq": "6,13",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "cars",
        "uri": "http://dbpedia.org/ontology/Automobile",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "How many people have fought wars where Arthur St. Clair was a commander?",
    "SerialNumber": "3924",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/commander\u003e \u003chttp://dbpedia.org/resource/Arthur_St._Clair\u003e . ?x \u003chttp://dbpedia.org/property/combatant\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Arthur St. Clair",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Arthur_St._Clair",
        "seq": "39,55"
      }
    ],
    "id": "2aaac4193bd2408399d5d3c8640c90ec",
    "predicate mapping": [
      {
        "label": "commander",
        "uri": "http://dbpedia.org/ontology/commander",
        "seq": "62,71",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "wars",
        "uri": "http://dbpedia.org/property/combatant",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the mammals which are primate and belongs to family of ape ?",
    "SerialNumber": "3925",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/order\u003e \u003chttp://dbpedia.org/resource/Primate\u003e . ?uri \u003chttp://dbpedia.org/ontology/family\u003e \u003chttp://dbpedia.org/resource/Ape\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Mammal\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "primate",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Primate",
        "seq": "27,34"
      },
      {
        "label": "ape",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ape",
        "seq": "60,63"
      }
    ],
    "id": "8a5c47c1f5544bed9201bf2e6d45ba64",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/order",
        "mappedBy": "word2vec"
      },
      {
        "label": "family",
        "uri": "http://dbpedia.org/ontology/family",
        "seq": "50,56",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "mammal",
        "uri": "http://dbpedia.org/ontology/Mammal",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "What are some parties which have people from Mangalore as a member?",
    "SerialNumber": "3926",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/placeOfBirth\u003e \u003chttp://dbpedia.org/resource/Mangalore\u003e . ?x \u003chttp://dbpedia.org/property/party\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Mangalore",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Mangalore",
        "seq": "45,54"
      }
    ],
    "id": "adabfc9d8bab4686b6e3fc7b97893c7b",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/placeOfBirth",
        "mappedBy": "word2vec"
      },
      {
        "label": "parties",
        "uri": "http://dbpedia.org/property/party",
        "seq": "14,21",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "In which areas can I find wine made of Vitis vinifera grapes?",
    "SerialNumber": "3930",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/species\u003e \u003chttp://dbpedia.org/resource/Vitis_vinifera\u003e . ?x \u003chttp://dbpedia.org/ontology/wineRegion\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Grape\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Vitis vinifera",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Vitis_vinifera",
        "seq": "39,53"
      }
    ],
    "id": "3230a08d90af4614ae2510d4feb9382f",
    "predicate mapping": [
      {
        "label": "made",
        "uri": "http://dbpedia.org/ontology/species",
        "mappedBy": "word2vec"
      },
      {
        "label": "wine",
        "uri": "http://dbpedia.org/ontology/wineRegion",
        "seq": "26,30",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "grape",
        "uri": "http://dbpedia.org/ontology/Grape",
        "seq": "54,59",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "405",
    "question": "In how many different teams have all those who have played as a defenceman been?",
    "SerialNumber": "3931",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/position\u003e \u003chttp://dbpedia.org/resource/Defenceman\u003e . ?x \u003chttp://dbpedia.org/property/playedFor\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/SportsTeam\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "defenceman",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Defenceman",
        "seq": "64,74"
      }
    ],
    "id": "0d511229c1004f4b8405d2c90496fd03",
    "predicate mapping": [
      {
        "label": "played",
        "uri": "http://dbpedia.org/property/position",
        "mappedBy": "word2vec"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/property/playedFor",
        "seq": "22,26",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/SportsTeam",
        "seq": "22,26",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "8",
    "question": "Who was buried at St. Mary\u0027s Church and fought the battle of  Benedict Arnold\u0027s expedition to Quebec ?",
    "SerialNumber": "3936",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/battle\u003e \u003chttp://dbpedia.org/resource/Benedict_Arnold\u0027s_expedition_to_Quebec\u003e . ?uri \u003chttp://dbpedia.org/property/placeofburial\u003e \u003chttp://dbpedia.org/resource/St_Mary\u0027s_Church,_Battersea\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Benedict Arnold\u0027s expedition to Quebec",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Benedict_Arnold\u0027s_expedition_to_Quebec",
        "seq": "62,100"
      },
      {
        "label": "mary\u0027s church",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/St_Mary\u0027s_Church,_Battersea",
        "seq": "999,1000"
      }
    ],
    "id": "84e3b4c63caa4cc6a76221a3f87025f4",
    "predicate mapping": [
      {
        "label": "battle",
        "uri": "http://dbpedia.org/ontology/battle",
        "seq": "51,57",
        "mappedBy": "byLabelMatch"
      },
      {
        "uri": "http://dbpedia.org/property/placeofburial",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "How many companies have developed cross platformed softwares?",
    "SerialNumber": "3937",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/operatingSystem\u003e \u003chttp://dbpedia.org/resource/Cross-platform\u003e . ?x \u003chttp://dbpedia.org/ontology/developer\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Cross-platform",
        "seq": "999,1000"
      }
    ],
    "id": "3115a0dfde724a49a564f755192dd1ab",
    "predicate mapping": [
      {
        "label": "softwares",
        "uri": "http://dbpedia.org/property/operatingSystem",
        "mappedBy": "word2vec"
      },
      {
        "label": "developed",
        "uri": "http://dbpedia.org/ontology/developer",
        "seq": "24,33",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "403",
    "question": "How many cars are the predecessor of cars similar to the Pontiac G8?",
    "SerialNumber": "3938",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { \u003chttp://dbpedia.org/resource/Pontiac_G8\u003e \u003chttp://dbpedia.org/ontology/relatedMeanOfTransportation\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/predecessor\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Automobile\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Pontiac G8",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Pontiac_G8",
        "seq": "57,67"
      }
    ],
    "id": "36c9a6650fdd4fadb4be1d77eabc6198",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/relatedMeanOfTransportation",
        "mappedBy": "word2vec"
      },
      {
        "label": "predecessor",
        "uri": "http://dbpedia.org/ontology/predecessor",
        "seq": "22,33",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "similar",
        "uri": "http://dbpedia.org/ontology/Automobile",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What are some famous artists who rocked a Les Paul?",
    "SerialNumber": "3940",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/notableInstruments\u003e \u003chttp://dbpedia.org/resource/Gibson_Les_Paul\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MusicalArtist\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Les Paul",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Gibson_Les_Paul",
        "seq": "42,50"
      }
    ],
    "id": "ede3db931b55452880393aec59f27131",
    "predicate mapping": [
      {
        "label": "rocked",
        "uri": "http://dbpedia.org/property/notableInstruments",
        "mappedBy": "word2vec"
      },
      {
        "label": "artists",
        "uri": "http://dbpedia.org/ontology/MusicalArtist",
        "seq": "21,28",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Whichi office of Walter Evnas Edge is also the part of Atlantic seaboard fall lines ?",
    "SerialNumber": "3941",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Atlantic_Seaboard_fall_line\u003e \u003chttp://dbpedia.org/ontology/part\u003e ?uri. \u003chttp://dbpedia.org/resource/Walter_Evans_Edge\u003e \u003chttp://dbpedia.org/property/office\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Atlantic seaboard fall line",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Atlantic_Seaboard_fall_line",
        "seq": "55,82"
      },
      {
        "label": "walter edge",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Walter_Evans_Edge",
        "seq": "999,1000"
      }
    ],
    "id": "2f376df9dd00440698f42178c7677b57",
    "predicate mapping": [
      {
        "label": "part",
        "uri": "http://dbpedia.org/ontology/part",
        "seq": "47,51",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "office",
        "uri": "http://dbpedia.org/property/office",
        "seq": "7,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which new Mexico based company produces Surface ?",
    "SerialNumber": "3942",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/foundation\u003e \u003chttp://dbpedia.org/resource/New_Mexico\u003e . ?uri \u003chttp://dbpedia.org/ontology/product\u003e \u003chttp://dbpedia.org/resource/Microsoft_Surface\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Company\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "new Mexico",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/New_Mexico",
        "seq": "6,16"
      },
      {
        "label": "surface",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Microsoft_Surface",
        "seq": "999,1000"
      }
    ],
    "id": "77345fdf42cd4d2f8474d7eccb309bd9",
    "predicate mapping": [
      {
        "label": "Surface",
        "uri": "http://dbpedia.org/property/foundation",
        "mappedBy": "word2vec"
      },
      {
        "label": "Surface",
        "uri": "http://dbpedia.org/ontology/product",
        "mappedBy": "word2vec"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company",
        "seq": "23,30",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What is the casting of the movie directed by Justin Zackham ?",
    "SerialNumber": "3943",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/director\u003e \u003chttp://dbpedia.org/resource/Justin_Zackham\u003e . ?x \u003chttp://dbpedia.org/property/starring\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Justin Zackham",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Justin_Zackham",
        "seq": "45,59"
      }
    ],
    "id": "af5b6ee8ccc1462dabeac10e39245823",
    "predicate mapping": [
      {
        "label": "directed by",
        "uri": "http://dbpedia.org/ontology/director",
        "seq": "33,44",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "casting",
        "uri": "http://dbpedia.org/property/starring",
        "mappedBy": "word2vec"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "27,32",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "405",
    "question": "How many different organizations own the railway lines which are a part of Norfolk Southern Railway?",
    "SerialNumber": "3946",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/system\u003e \u003chttp://dbpedia.org/resource/Norfolk_Southern_Railway\u003e . ?x \u003chttp://dbpedia.org/property/owner\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Organisation\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Norfolk Southern Railway",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Norfolk_Southern_Railway",
        "seq": "75,99"
      }
    ],
    "id": "09ea36c583254aaab5a74fa304945343",
    "predicate mapping": [
      {
        "label": "part",
        "uri": "http://dbpedia.org/property/system",
        "mappedBy": "word2vec"
      },
      {
        "label": "own",
        "uri": "http://dbpedia.org/property/owner",
        "seq": "33,36",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "uri": "http://dbpedia.org/ontology/Organisation",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What are the party of the politicians whose deputy was Chaudhary Devi Lal?",
    "SerialNumber": "3948",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/deputy\u003e \u003chttp://dbpedia.org/resource/Chaudhary_Devi_Lal\u003e . ?x \u003chttp://dbpedia.org/ontology/otherParty\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/OfficeHolder\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Chaudhary Devi Lal",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Chaudhary_Devi_Lal",
        "seq": "55,73"
      }
    ],
    "id": "564815b5f32d4020a3d65768cc5404c5",
    "predicate mapping": [
      {
        "label": "deputy",
        "uri": "http://dbpedia.org/property/deputy",
        "seq": "44,50",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "party",
        "uri": "http://dbpedia.org/ontology/otherParty",
        "seq": "13,18",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "politicians",
        "uri": "http://dbpedia.org/ontology/OfficeHolder",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who composed the episode after which came Butter\u0027s Very own Episode?",
    "SerialNumber": "3953",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/subsequentWork\u003e \u003chttp://dbpedia.org/resource/Butters\u0027_Very_Own_Episode\u003e . ?x \u003chttp://dbpedia.org/ontology/musicComposer\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionEpisode\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Butters\u0027_Very_Own_Episode",
        "seq": "999,1000"
      }
    ],
    "id": "d9e490fde9154a129b189fd66c1a8223",
    "predicate mapping": [
      {
        "label": "Episode",
        "uri": "http://dbpedia.org/ontology/subsequentWork",
        "mappedBy": "word2vec"
      },
      {
        "label": "composed",
        "uri": "http://dbpedia.org/ontology/musicComposer",
        "seq": "4,12",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "episode",
        "uri": "http://dbpedia.org/ontology/TelevisionEpisode",
        "seq": "17,24",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "What are some wars fought when Chung Il Kwon as the country\u0027s prime minister?",
    "SerialNumber": "3954",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/primeminister\u003e \u003chttp://dbpedia.org/resource/Chung_Il-kwon\u003e . ?uri \u003chttp://dbpedia.org/ontology/commander\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MilitaryConflict\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Chung Il Kwon",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Chung_Il-kwon",
        "seq": "31,44"
      }
    ],
    "id": "ee5255e0079449ae9103f3cf1c059fbd",
    "predicate mapping": [
      {
        "label": "minister prime",
        "uri": "http://dbpedia.org/property/primeminister",
        "seq": "-1,13",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "minister",
        "uri": "http://dbpedia.org/ontology/commander",
        "mappedBy": "word2vec"
      },
      {
        "label": "minister",
        "uri": "http://dbpedia.org/ontology/MilitaryConflict",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "List down all the baseball teams whose team manager was a Catcher?",
    "SerialNumber": "3955",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/position\u003e \u003chttp://dbpedia.org/resource/Catcher\u003e . ?uri \u003chttp://dbpedia.org/ontology/manager\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/BaseballTeam\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Catcher",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Catcher",
        "seq": "58,65"
      }
    ],
    "id": "0be0815b6d7946da97888b0cc3bf85c0",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/position",
        "mappedBy": "word2vec"
      },
      {
        "label": "team manager",
        "uri": "http://dbpedia.org/ontology/manager",
        "seq": "39,51",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "baseball team",
        "uri": "http://dbpedia.org/ontology/BaseballTeam",
        "seq": "18,31",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which founding cities of Young Americans Bank is also the location of Denver Broncos ?",
    "SerialNumber": "3960",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Young_Americans_Bank\u003e \u003chttp://dbpedia.org/property/foundation\u003e ?uri. \u003chttp://dbpedia.org/resource/Denver_Broncos\u003e \u003chttp://dbpedia.org/ontology/locationCity\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Young Americans Bank",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Young_Americans_Bank",
        "seq": "25,45"
      },
      {
        "label": "Denver Broncos",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Denver_Broncos",
        "seq": "70,84"
      }
    ],
    "id": "ea51be89c95a4b4d91b32d48835ded65",
    "predicate mapping": [
      {
        "label": "cities",
        "uri": "http://dbpedia.org/property/foundation",
        "mappedBy": "word2vec"
      },
      {
        "label": "location",
        "uri": "http://dbpedia.org/ontology/locationCity",
        "seq": "58,66",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the college of Malik Ausean which is also the college of Kyle Fuller ?",
    "SerialNumber": "3961",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Malik_Ausean_Evans\u003e \u003chttp://dbpedia.org/ontology/college\u003e ?uri. \u003chttp://dbpedia.org/resource/Kyle_Fuller_(basketball)\u003e \u003chttp://dbpedia.org/property/college\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "ausean malik",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Malik_Ausean_Evans",
        "seq": "999,1000"
      },
      {
        "label": "Kyle Fuller",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Kyle_Fuller_(basketball)",
        "seq": "65,76"
      }
    ],
    "id": "edd475c6742c46fab9cff4f03715fdc2",
    "predicate mapping": [
      {
        "label": "college",
        "uri": "http://dbpedia.org/ontology/college",
        "seq": "12,19",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "college",
        "uri": "http://dbpedia.org/property/college",
        "seq": "12,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "405",
    "question": "How many people have worked for teams chaired by Patricia Amorim?",
    "SerialNumber": "3963",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/chairman\u003e \u003chttp://dbpedia.org/resource/Patrícia_Amorim\u003e . ?x \u003chttp://dbpedia.org/property/name\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Patricia Amorim",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Patrícia_Amorim",
        "seq": "49,64"
      }
    ],
    "id": "2ca97f86a97a48c6884ef73475245fd2",
    "predicate mapping": [
      {
        "label": "chaired",
        "uri": "http://dbpedia.org/ontology/chairman",
        "seq": "38,45",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "teams",
        "uri": "http://dbpedia.org/property/name",
        "mappedBy": "word2vec"
      },
      {
        "label": "teams",
        "uri": "http://dbpedia.org/ontology/Person",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who designed the stadiums which have been rented by Oakland athletics?",
    "SerialNumber": "3965",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/tenant\u003e \u003chttp://dbpedia.org/resource/Oakland_Athletics\u003e . ?x \u003chttp://dbpedia.org/property/architect\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Stadium\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Oakland athletics",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Oakland_Athletics",
        "seq": "52,69"
      }
    ],
    "id": "4fdfe129a9b94ef396a19e5882da3915",
    "predicate mapping": [
      {
        "label": "rented",
        "uri": "http://dbpedia.org/ontology/tenant",
        "mappedBy": "word2vec"
      },
      {
        "label": "rented",
        "uri": "http://dbpedia.org/property/architect",
        "mappedBy": "word2vec"
      },
      {
        "label": "stadium",
        "uri": "http://dbpedia.org/ontology/Stadium",
        "seq": "17,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Which team did Michael and Ryan Powell play for?",
    "SerialNumber": "3966",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Michael_Powell_(lacrosse)\u003e \u003chttp://dbpedia.org/ontology/team\u003e ?uri. \u003chttp://dbpedia.org/resource/Ryan_Powell_(lacrosse)\u003e \u003chttp://dbpedia.org/ontology/team\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "michael powell",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Michael_Powell_(lacrosse)",
        "seq": "999,1000"
      },
      {
        "label": "Ryan Powell",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ryan_Powell_(lacrosse)",
        "seq": "27,38"
      }
    ],
    "id": "92f13c33f9394efe8c790385a7e907f6",
    "predicate mapping": [
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/team",
        "seq": "6,10",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/team",
        "seq": "6,10",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "How many different people have been in any political seat in places which are under the Indian Standard timezone?",
    "SerialNumber": "3967",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/timeZone\u003e \u003chttp://dbpedia.org/resource/Indian_Standard_Time\u003e . ?x \u003chttp://dbpedia.org/ontology/leaderName\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Indian Standard time",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Indian_Standard_Time",
        "seq": "88,108"
      }
    ],
    "id": "b890d5585137439888d5cb80a9160f6c",
    "predicate mapping": [
      {
        "label": "timezone",
        "uri": "http://dbpedia.org/ontology/timeZone",
        "seq": "104,112",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "zone",
        "uri": "http://dbpedia.org/ontology/leaderName",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which broadcast area of CFRX is also the palce of birth of Anthony Raymond ?",
    "SerialNumber": "3970",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/CFRX\u003e \u003chttp://dbpedia.org/ontology/broadcastArea\u003e ?uri. \u003chttp://dbpedia.org/resource/Anthony_Raymond_Ceresko\u003e \u003chttp://dbpedia.org/property/placeOfBirth\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "CFRX",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/CFRX",
        "seq": "24,28"
      },
      {
        "label": "raymond anthony",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Anthony_Raymond_Ceresko",
        "seq": "999,1000"
      }
    ],
    "id": "7b6793a8d8a24f5da233b3f76475f5f9",
    "predicate mapping": [
      {
        "label": "broadcast area",
        "uri": "http://dbpedia.org/ontology/broadcastArea",
        "seq": "6,20",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "birth",
        "uri": "http://dbpedia.org/property/placeOfBirth",
        "seq": "50,55",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Bridges over which rivers are made of Wrought Iron?",
    "SerialNumber": "3971",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/material\u003e \u003chttp://dbpedia.org/resource/Wrought_iron\u003e . ?x \u003chttp://dbpedia.org/ontology/river\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Bridge\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Wrought Iron",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Wrought_iron",
        "seq": "38,50"
      }
    ],
    "id": "a3c5a2eed28d4fce829b32d43b36eedc",
    "predicate mapping": [
      {
        "label": "made",
        "uri": "http://dbpedia.org/property/material",
        "mappedBy": "word2vec"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/river",
        "seq": "19,24",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "Bridge",
        "uri": "http://dbpedia.org/ontology/Bridge",
        "seq": "0,6",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "405",
    "question": "Count the different genres of music made by Argentinian bands?",
    "SerialNumber": "3974",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/hometown\u003e \u003chttp://dbpedia.org/resource/Argentina\u003e . ?x \u003chttp://dbpedia.org/ontology/genre\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MusicGenre\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Argentini",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Argentina",
        "seq": "44,53"
      }
    ],
    "id": "b60070566739496cbb32be93d3aa6d21",
    "predicate mapping": [
      {
        "label": "bands",
        "uri": "http://dbpedia.org/ontology/hometown",
        "mappedBy": "word2vec"
      },
      {
        "label": "genre",
        "uri": "http://dbpedia.org/ontology/genre",
        "seq": "20,25",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "genre",
        "uri": "http://dbpedia.org/ontology/MusicGenre",
        "seq": "20,25",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "403",
    "question": "For how many PMs did the politician work, whose successor was Kingsley Wood?",
    "SerialNumber": "3975",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { \u003chttp://dbpedia.org/resource/Kingsley_Wood\u003e \u003chttp://dbpedia.org/ontology/successor\u003e ?x . ?x \u003chttp://dbpedia.org/property/primeminister\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/OfficeHolder\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Kingsley Wood",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Kingsley_Wood",
        "seq": "62,75"
      }
    ],
    "id": "295ec11bef8e4bf380b41c35e2142bfa",
    "predicate mapping": [
      {
        "label": "successor",
        "uri": "http://dbpedia.org/ontology/successor",
        "seq": "48,57",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "politician",
        "uri": "http://dbpedia.org/property/primeminister",
        "mappedBy": "word2vec"
      },
      {
        "label": "politician",
        "uri": "http://dbpedia.org/ontology/OfficeHolder",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "How many head of agencies were there in Nazi Germany?",
    "SerialNumber": "3977",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/jurisdiction\u003e \u003chttp://dbpedia.org/resource/Nazi_Germany\u003e . ?x \u003chttp://dbpedia.org/ontology/leader\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Nazi Germany",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Nazi_Germany",
        "seq": "40,52"
      }
    ],
    "id": "76611f72d25b4984b1511e6309e78e68",
    "predicate mapping": [
      {
        "label": "agencies",
        "uri": "http://dbpedia.org/ontology/jurisdiction",
        "mappedBy": "word2vec"
      },
      {
        "label": "agencies",
        "uri": "http://dbpedia.org/ontology/leader",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which nickname of Lyons Township JHigh school is also the mascot of Galatasaray Handball Team ?",
    "SerialNumber": "3978",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Galatasaray_Handball_Team\u003e \u003chttp://dbpedia.org/property/mascot\u003e ?uri. \u003chttp://dbpedia.org/resource/Lyons_Township_High_School\u003e \u003chttp://dbpedia.org/property/nickname\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Galatasaray Handball Team",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Galatasaray_Handball_Team",
        "seq": "68,93"
      },
      {
        "label": "township school",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Lyons_Township_High_School",
        "seq": "999,1000"
      }
    ],
    "id": "4a5f5dcc47134e9d84939b7e3118a114",
    "predicate mapping": [
      {
        "label": "mascot",
        "uri": "http://dbpedia.org/property/mascot",
        "seq": "58,64",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "nickname",
        "uri": "http://dbpedia.org/property/nickname",
        "seq": "6,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Was Love Hurts in Short Cut Draw Blood?",
    "SerialNumber": "3982",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Love_Hurts\u003e \u003chttp://dbpedia.org/property/album\u003e \u003chttp://dbpedia.org/resource/Short_Cut_Draw_Blood\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Love Hurts",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Love_Hurts",
        "seq": "4,14"
      },
      {
        "label": "Short Cut Draw Blood",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Short_Cut_Draw_Blood",
        "seq": "18,38"
      }
    ],
    "id": "4d4161d0fcd14e16adcc00f8793191bc",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/album",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What islands are there on the Greater Antilles archipelago?",
    "SerialNumber": "3983",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/archipelago\u003e \u003chttp://dbpedia.org/resource/Greater_Antilles\u003e . ?x \u003chttp://dbpedia.org/property/name\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Island\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Greater Antilles",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Greater_Antilles",
        "seq": "30,46"
      }
    ],
    "id": "b2c4a68e8a9948a0b430733a99af03b7",
    "predicate mapping": [
      {
        "label": "archipelago",
        "uri": "http://dbpedia.org/property/archipelago",
        "seq": "47,58",
        "mappedBy": "byLabelMatch"
      },
      {
        "uri": "http://dbpedia.org/property/name",
        "mappedBy": "word2vec"
      },
      {
        "label": "island",
        "uri": "http://dbpedia.org/ontology/Island",
        "seq": "5,11",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Which Tv series led to Frasier?",
    "SerialNumber": "3986",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/subsequentWork\u003e \u003chttp://dbpedia.org/resource/Frasier\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Frasier",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Frasier",
        "seq": "23,30"
      }
    ],
    "id": "24323c55c5084725bbdb07997dfec006",
    "predicate mapping": [
      {
        "label": "led",
        "uri": "http://dbpedia.org/ontology/subsequentWork",
        "mappedBy": "word2vec"
      },
      {
        "label": "led",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "106",
    "question": "Count the number of people became famous for when Andrew Jackson was a commander ?",
    "SerialNumber": "3987",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/commander\u003e \u003chttp://dbpedia.org/resource/Andrew_Jackson\u003e . ?uri \u003chttp://dbpedia.org/ontology/knownFor\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Andrew Jackson",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Andrew_Jackson",
        "seq": "50,64"
      }
    ],
    "id": "3d6bf4caec37493199f249d4af63860c",
    "predicate mapping": [
      {
        "label": "commander",
        "uri": "http://dbpedia.org/ontology/commander",
        "seq": "71,80",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "famous",
        "uri": "http://dbpedia.org/ontology/knownFor",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "Count the writers whose work has been played in NY?",
    "SerialNumber": "3988",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/place\u003e \u003chttp://dbpedia.org/resource/New_York\u003e . ?x \u003chttp://dbpedia.org/property/writer\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "NY",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/New_York",
        "seq": "48,50"
      }
    ],
    "id": "2e7ea1d1a22640afb763ba50120b3917",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/place",
        "mappedBy": "word2vec"
      },
      {
        "label": "writers",
        "uri": "http://dbpedia.org/property/writer",
        "seq": "10,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "Which rivers flow into the lower manhatten?",
    "SerialNumber": "3990",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/mouthMountain\u003e \u003chttp://dbpedia.org/resource/Lower_Manhattan\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Lower_Manhattan",
        "seq": "999,1000"
      }
    ],
    "id": "6da0886adf5c4684b48c56ce0fd54b69",
    "predicate mapping": [
      {
        "label": "lower",
        "uri": "http://dbpedia.org/ontology/mouthMountain",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Does Walson Augustin play as a midfielder?",
    "SerialNumber": "3993",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Walson_Augustin\u003e \u003chttp://dbpedia.org/ontology/position\u003e \u003chttp://dbpedia.org/resource/Midfielder\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Walson Augustin",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Walson_Augustin",
        "seq": "5,20"
      },
      {
        "label": "midfielder",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Midfielder",
        "seq": "31,41"
      }
    ],
    "id": "3c09aa3e2b3849638009db8e6cb205ea",
    "predicate mapping": [
      {
        "label": "play",
        "uri": "http://dbpedia.org/ontology/position",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What are the airline hubs of Cascade Airways?",
    "SerialNumber": "3994",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Union_of_Cambodian_Democrats\u003e \u003chttp://dbpedia.org/ontology/ideology\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Cascade Airways",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Union_of_Cambodian_Democrats",
        "seq": "29,44"
      }
    ],
    "id": "e6fda0418bd341adb1e7444c4d8d5d19",
    "predicate mapping": [
      {
        "label": "hubs",
        "uri": "http://dbpedia.org/ontology/ideology",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "406",
    "question": "How many movies have their music signed up with Sony Music Entertainment.",
    "SerialNumber": "3999",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/recordLabel\u003e \u003chttp://dbpedia.org/resource/Sony_Music_Entertainment\u003e . ?uri \u003chttp://dbpedia.org/ontology/musicComposer\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Sony Music Entertainment",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Sony_Music_Entertainment",
        "seq": "48,72"
      }
    ],
    "id": "80de2acb61b74b10b7a95a24dc32f5dc",
    "predicate mapping": [
      {
        "label": "signed",
        "uri": "http://dbpedia.org/ontology/recordLabel",
        "mappedBy": "word2vec"
      },
      {
        "label": "music",
        "uri": "http://dbpedia.org/ontology/musicComposer",
        "seq": "27,32",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "What are some devices whose manufacturers are in taiwan?",
    "SerialNumber": "4007",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/locationCountry\u003e \u003chttp://dbpedia.org/resource/Taiwan\u003e . ?uri \u003chttp://dbpedia.org/ontology/manufacturer\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Device\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "taiwan",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Taiwan",
        "seq": "49,55"
      }
    ],
    "id": "5f43897b70a74a828e834f53ae65fb95",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/locationCountry",
        "mappedBy": "word2vec"
      },
      {
        "label": "manufacturer",
        "uri": "http://dbpedia.org/ontology/manufacturer",
        "seq": "28,40",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "device",
        "uri": "http://dbpedia.org/ontology/Device",
        "seq": "14,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "People in the royal Thai army follow which religion?",
    "SerialNumber": "4008",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/branch\u003e \u003chttp://dbpedia.org/resource/Royal_Thai_Army\u003e . ?x \u003chttp://dbpedia.org/ontology/religion\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "royal Thai army",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Royal_Thai_Army",
        "seq": "14,29"
      }
    ],
    "id": "018ff49cdfa0414f8e55961b5a7022b1",
    "predicate mapping": [
      {
        "label": "follow",
        "uri": "http://dbpedia.org/property/branch",
        "mappedBy": "word2vec"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion",
        "seq": "43,51",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "follow",
        "uri": "http://dbpedia.org/ontology/Person",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "was james watt a mechanical engineer?",
    "SerialNumber": "4009",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/James_Watt\u003e \u003chttp://dbpedia.org/ontology/field\u003e \u003chttp://dbpedia.org/resource/Mechanical_engineering\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "james watt",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/James_Watt",
        "seq": "4,14"
      },
      {
        "label": "mechanical engineer",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Mechanical_engineering",
        "seq": "17,36"
      }
    ],
    "id": "d94cdcd8ddea4f6ca38ef78a76aeb4f2",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/field",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "which person created the women in the garden?",
    "SerialNumber": "4013",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Women_in_the_Garden\u003e \u003chttp://dbpedia.org/property/artist\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "women in the garden",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Women_in_the_Garden",
        "seq": "25,44"
      }
    ],
    "id": "eb7076ae122e4f3bbb01b33be971ffc2",
    "predicate mapping": [
      {
        "label": "created",
        "uri": "http://dbpedia.org/property/artist",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who is the artist of Time Radio hour ?",
    "SerialNumber": "4017",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Theme_Time_Radio_Hour\u003e \u003chttp://dbpedia.org/property/creator\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "radio time hour the",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Theme_Time_Radio_Hour",
        "seq": "999,1000"
      }
    ],
    "id": "626266625dc54af58709a5c0381b7aa6",
    "predicate mapping": [
      {
        "label": "hour",
        "uri": "http://dbpedia.org/property/creator",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "103",
    "question": "How many prime ministers did the predecessor of Duncan Sandys  serve?",
    "SerialNumber": "4018",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { \u003chttp://dbpedia.org/resource/Duncan_Sandys\u003e \u003chttp://dbpedia.org/property/successor\u003e ?x . ?x \u003chttp://dbpedia.org/property/primeminister\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Duncan Sandys",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Duncan_Sandys",
        "seq": "48,61"
      }
    ],
    "id": "d0c72dbed0ac4f5ea394427d5a60df4a",
    "predicate mapping": [
      {
        "label": "serve",
        "uri": "http://dbpedia.org/property/successor",
        "mappedBy": "word2vec"
      },
      {
        "label": "ministers",
        "uri": "http://dbpedia.org/property/primeminister",
        "seq": "15,24",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Which party won the elections when Y.S. Rajasekhara Reddy was in power?",
    "SerialNumber": "4019",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/leader\u003e \u003chttp://dbpedia.org/resource/Y._S._Rajasekhara_Reddy\u003e . ?x \u003chttp://dbpedia.org/ontology/affiliation\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Election\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Y.S. Rajasekhara Reddy",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Y._S._Rajasekhara_Reddy",
        "seq": "35,57"
      }
    ],
    "id": "caedfc75bd384fe7bcb3aa45a68f9dc5",
    "predicate mapping": [
      {
        "label": "power",
        "uri": "http://dbpedia.org/property/leader",
        "mappedBy": "word2vec"
      },
      {
        "label": "power",
        "uri": "http://dbpedia.org/ontology/affiliation",
        "mappedBy": "word2vec"
      },
      {
        "label": "election",
        "uri": "http://dbpedia.org/ontology/Election",
        "seq": "20,28",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Is Henry David Thoreau interested in Politics?",
    "SerialNumber": "4022",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Henry_David_Thoreau\u003e \u003chttp://dbpedia.org/property/mainInterests\u003e \u003chttp://dbpedia.org/resource/Politics\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Henry David Thoreau",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Henry_David_Thoreau",
        "seq": "3,22"
      },
      {
        "label": "Politics",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Politics",
        "seq": "37,45"
      }
    ],
    "id": "2c9741b69a754c32a0977065261b1b01",
    "predicate mapping": [
      {
        "label": "interested",
        "uri": "http://dbpedia.org/property/mainInterests",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "315",
    "question": "Which settelment area is the home town of the Danny Felice and Cline Buckens?",
    "SerialNumber": "4024",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Danny_Felice\u003e \u003chttp://dbpedia.org/ontology/hometown\u003e ?uri. \u003chttp://dbpedia.org/resource/Céline_Buckens\u003e \u003chttp://dbpedia.org/ontology/hometown\u003e ?uri . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Settlement\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Danny Felice",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Danny_Felice",
        "seq": "46,58"
      },
      {
        "label": "buckens",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Céline_Buckens",
        "seq": "999,1000"
      }
    ],
    "id": "6563a461daf1415ab915fc5dfc0eb0be",
    "predicate mapping": [
      {
        "label": "home town",
        "uri": "http://dbpedia.org/ontology/hometown",
        "seq": "29,38",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "home town",
        "uri": "http://dbpedia.org/ontology/hometown",
        "seq": "29,38",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "Cline",
        "uri": "http://dbpedia.org/ontology/Settlement",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "101",
    "question": "How many people are buried in Arlington National Cemetery?",
    "SerialNumber": "4033",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/property/placeofburial\u003e \u003chttp://dbpedia.org/resource/Arlington_National_Cemetery\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Arlington National Cemetery",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Arlington_National_Cemetery",
        "seq": "30,57"
      }
    ],
    "id": "87c465fa859b45d78b3a51868b1d1375",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/placeofburial",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Does Fa\u0027a\u0027 International Airport serve tahiti too?",
    "SerialNumber": "4034",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Fa\u0027a\u0027ā_International_Airport\u003e \u003chttp://dbpedia.org/property/cityServed\u003e \u003chttp://dbpedia.org/resource/Tahiti\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "international airport fa\u0027a\u0027",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Fa\u0027a\u0027ā_International_Airport",
        "seq": "999,1000"
      },
      {
        "label": "tahiti",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Tahiti",
        "seq": "39,45"
      }
    ],
    "id": "17b2beca1aea4de591ccbcb84821c1a2",
    "predicate mapping": [
      {
        "label": "serve",
        "uri": "http://dbpedia.org/property/cityServed",
        "seq": "33,38",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Is the Caterpullar 797F assembled in North America?",
    "SerialNumber": "4040",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Caterpillar_797F\u003e \u003chttp://dbpedia.org/property/assembly\u003e \u003chttp://dbpedia.org/resource/North_America\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "797F",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Caterpillar_797F",
        "seq": "19,23"
      },
      {
        "label": "North America",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/North_America",
        "seq": "37,50"
      }
    ],
    "id": "d8f88e1d32024fa5bfff232c9286e30a",
    "predicate mapping": [
      {
        "label": "assembled",
        "uri": "http://dbpedia.org/property/assembly",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Does Dan River flow into the Jordan Valley?",
    "SerialNumber": "4043",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Jordan_River\u003e \u003chttp://dbpedia.org/ontology/leftTributary\u003e \u003chttp://dbpedia.org/resource/Dan_River_(Middle_East)\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "jordan river",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Jordan_River",
        "seq": "999,1000"
      },
      {
        "label": "Dan River",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Dan_River_(Middle_East)",
        "seq": "5,14"
      }
    ],
    "id": "1233074e435847cb89d45254f080d56f",
    "predicate mapping": [
      {
        "label": "Valley",
        "uri": "http://dbpedia.org/ontology/leftTributary",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Does Beth Tweddle play for the City of Liverpool gymnast club?",
    "SerialNumber": "4044",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Beth_Tweddle\u003e \u003chttp://dbpedia.org/property/club\u003e \u003chttp://dbpedia.org/resource/City_of_Liverpool_Gymnastics_Club\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Beth Tweddle",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Beth_Tweddle",
        "seq": "5,17"
      },
      {
        "label": "liverpool gymnast club city",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/City_of_Liverpool_Gymnastics_Club",
        "seq": "999,1000"
      }
    ],
    "id": "bc66c5524237472895f7631eb4e962e0",
    "predicate mapping": [
      {
        "label": "club",
        "uri": "http://dbpedia.org/property/club",
        "seq": "57,61",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Was Krzystof Wielicki the first person that ascended the mt everest?",
    "SerialNumber": "4048",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Mount_Everest\u003e \u003chttp://dbpedia.org/ontology/firstAscentPerson\u003e \u003chttp://dbpedia.org/resource/Krzysztof_Wielicki\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "mt everest",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Mount_Everest",
        "seq": "57,67"
      },
      {
        "label": "wielicki",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Krzysztof_Wielicki",
        "seq": "999,1000"
      }
    ],
    "id": "7e064438df204412a9e513d66ee3cc5e",
    "predicate mapping": [
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/firstAscentPerson",
        "seq": "32,38",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "List the sports played in private universities.",
    "SerialNumber": "4049",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/type\u003e \u003chttp://dbpedia.org/resource/Private_university\u003e . ?x \u003chttp://dbpedia.org/ontology/sport\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "private universiti",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Private_university",
        "seq": "26,44"
      }
    ],
    "id": "220dbedddb3a4970b6b74f1fa2282d6b",
    "predicate mapping": [
      {
        "label": "played",
        "uri": "http://dbpedia.org/ontology/type",
        "mappedBy": "word2vec"
      },
      {
        "label": "sport",
        "uri": "http://dbpedia.org/ontology/sport",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the president whose had relatives in Clinton family and lieutenant named Joe Purcell?",
    "SerialNumber": "4053",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/relation\u003e \u003chttp://dbpedia.org/resource/Clinton_family\u003e . ?uri \u003chttp://dbpedia.org/ontology/lieutenant\u003e \u003chttp://dbpedia.org/resource/Joe_Purcell\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/President\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Clinton family",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Clinton_family",
        "seq": "42,56"
      },
      {
        "label": "Joe Purcell",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Joe_Purcell",
        "seq": "78,89"
      }
    ],
    "id": "287e9d5624e64fa3a256084cbc7a853c",
    "predicate mapping": [
      {
        "label": "named",
        "uri": "http://dbpedia.org/ontology/relation",
        "mappedBy": "word2vec"
      },
      {
        "label": "lieutenant",
        "uri": "http://dbpedia.org/ontology/lieutenant",
        "seq": "61,71",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "president",
        "uri": "http://dbpedia.org/ontology/President",
        "seq": "9,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Who oarent organization of Get TV is also the label provider of I Pray on CHristmas ?",
    "SerialNumber": "4056",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/I_Pray_on_Christmas\u003e \u003chttp://dbpedia.org/property/label\u003e ?uri. \u003chttp://dbpedia.org/resource/GetTV\u003e \u003chttp://dbpedia.org/ontology/parentOrganisation\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "I Pray on CHristmas",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/I_Pray_on_Christmas",
        "seq": "64,83"
      },
      {
        "label": "get tv",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/GetTV",
        "seq": "999,1000"
      }
    ],
    "id": "6dd6deaa7cd2434fb62beb47d4ae9ff9",
    "predicate mapping": [
      {
        "label": "label",
        "uri": "http://dbpedia.org/property/label",
        "seq": "46,51",
        "mappedBy": "byLabelMatch"
      },
      {
        "uri": "http://dbpedia.org/ontology/parentOrganisation",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "405",
    "question": "In how many states can one find Burr Tuss kind of bridges?",
    "SerialNumber": "4062",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/style\u003e \u003chttp://dbpedia.org/resource/Burr_Truss\u003e . ?x \u003chttp://dbpedia.org/ontology/state\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Region\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Burr_Truss",
        "seq": "999,1000"
      }
    ],
    "id": "63cb9ee6aac848bfab4e1474f02fa6cc",
    "predicate mapping": [
      {
        "label": "bridges",
        "uri": "http://dbpedia.org/property/style",
        "mappedBy": "word2vec"
      },
      {
        "label": "state",
        "uri": "http://dbpedia.org/ontology/state",
        "seq": "12,17",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "bridges",
        "uri": "http://dbpedia.org/ontology/Region",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the television show whose theme music is composed by Julian Gingell and broadcasted on FOX ?",
    "SerialNumber": "4063",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/themeMusicComposer\u003e \u003chttp://dbpedia.org/resource/Julian_Gingell\u003e . ?uri \u003chttp://dbpedia.org/property/channel\u003e \u003chttp://dbpedia.org/resource/Fox_Broadcasting_Company\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Julian Gingell",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Julian_Gingell",
        "seq": "58,72"
      },
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Fox_Broadcasting_Company",
        "seq": "999,1000"
      }
    ],
    "id": "c547ee5efa2249c4a8e652d7c3822fed",
    "predicate mapping": [
      {
        "label": "composed",
        "uri": "http://dbpedia.org/property/themeMusicComposer",
        "seq": "46,54",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "FOX",
        "uri": "http://dbpedia.org/property/channel",
        "mappedBy": "word2vec"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "9,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Through which important cities the does the river originating from the Duwamish, flow?",
    "SerialNumber": "4066",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/source\u003e \u003chttp://dbpedia.org/resource/Green_River_(Duwamish_River)\u003e . ?x \u003chttp://dbpedia.org/ontology/city\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/River\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Duwamish",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Green_River_(Duwamish_River)",
        "seq": "71,79"
      }
    ],
    "id": "03c8435f984a413f9bdbfe9927c33086",
    "predicate mapping": [
      {
        "label": "flow",
        "uri": "http://dbpedia.org/ontology/source",
        "mappedBy": "word2vec"
      },
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/city",
        "seq": "54,56",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River",
        "seq": "44,49",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "Which politicians son is buried in Metairie Cementery?",
    "SerialNumber": "4069",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/placeofburial\u003e \u003chttp://dbpedia.org/resource/Metairie_Cemetery\u003e . ?uri \u003chttp://dbpedia.org/ontology/child\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/OfficeHolder\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "metairie",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Metairie_Cemetery",
        "seq": "999,1000"
      }
    ],
    "id": "4dc617be22b34ffdb330e545e12a8ad9",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/placeofburial",
        "mappedBy": "word2vec"
      },
      {
        "label": "son",
        "uri": "http://dbpedia.org/ontology/child",
        "seq": "18,21",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "Metairie",
        "uri": "http://dbpedia.org/ontology/OfficeHolder",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "To which students did Ernest Rutherford advised to?",
    "SerialNumber": "4073",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/doctoralAdvisor\u003e \u003chttp://dbpedia.org/resource/Ernest_Rutherford\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ernest Rutherford",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Ernest_Rutherford",
        "seq": "22,39"
      }
    ],
    "id": "d039c214abca4acb95ebefed1ec4aee3",
    "predicate mapping": [
      {
        "label": "advised",
        "uri": "http://dbpedia.org/property/doctoralAdvisor",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the Home Stadium of the Kenya national under-20 football team where Matin Suji was also born ?",
    "SerialNumber": "4075",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Kenya_national_under-20_football_team\u003e \u003chttp://dbpedia.org/property/homeStadium\u003e ?uri. \u003chttp://dbpedia.org/resource/Martin_Suji\u003e \u003chttp://dbpedia.org/ontology/birthPlace\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Kenya national under-20 football team",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Kenya_national_under-20_football_team",
        "seq": "32,69"
      },
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Martin_Suji",
        "seq": "999,1000"
      }
    ],
    "id": "f2f9462195254f19ac762ee377426f3f",
    "predicate mapping": [
      {
        "label": "Home Stadium",
        "uri": "http://dbpedia.org/property/homeStadium",
        "seq": "12,24",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "born",
        "uri": "http://dbpedia.org/ontology/birthPlace",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What foundation palce of Temenos Group is the death palce of jerzy Jzef Poocki ?",
    "SerialNumber": "4076",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Temenos_Group\u003e \u003chttp://dbpedia.org/property/foundation\u003e ?uri. \u003chttp://dbpedia.org/resource/Jerzy_Józef_Potocki\u003e \u003chttp://dbpedia.org/property/placeOfDeath\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Temenos Group",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Temenos_Group",
        "seq": "25,38"
      },
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Jerzy_Józef_Potocki",
        "seq": "999,1000"
      }
    ],
    "id": "f3e69f0433d44011900bd5304b4d5c31",
    "predicate mapping": [
      {
        "label": "foundation",
        "uri": "http://dbpedia.org/property/foundation",
        "seq": "5,15",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "death",
        "uri": "http://dbpedia.org/property/placeOfDeath",
        "seq": "46,51",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Which company owns the airlines whose hub is in Dubai?",
    "SerialNumber": "4077",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/hubs\u003e \u003chttp://dbpedia.org/resource/Detroit\u003e . ?x \u003chttp://dbpedia.org/property/parent\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Airline\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Dubai",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Detroit",
        "seq": "48,53"
      }
    ],
    "id": "09419b9d207043bc80903f773b894b62",
    "predicate mapping": [
      {
        "label": "hub",
        "uri": "http://dbpedia.org/property/hubs",
        "seq": "38,41",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "owns",
        "uri": "http://dbpedia.org/property/parent",
        "mappedBy": "word2vec"
      },
      {
        "label": "airline",
        "uri": "http://dbpedia.org/ontology/Airline",
        "seq": "23,30",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "405",
    "question": "How many people have parterned with the person choroegraphed by Catarina Lindgren in the past?",
    "SerialNumber": "4078",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/formerChoreographer\u003e \u003chttp://dbpedia.org/resource/Catarina_Lindgren\u003e . ?x \u003chttp://dbpedia.org/ontology/formerPartner\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Catarina Lindgren",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Catarina_Lindgren",
        "seq": "64,81"
      }
    ],
    "id": "f6f3a47cf61449bdac6126a01ad39c30",
    "predicate mapping": [
      {
        "label": "past",
        "uri": "http://dbpedia.org/ontology/formerChoreographer",
        "mappedBy": "word2vec"
      },
      {
        "label": "past",
        "uri": "http://dbpedia.org/ontology/formerPartner",
        "mappedBy": "word2vec"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/Person",
        "seq": "40,46",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "In which city was the film star of Singhasan Battisi born ?",
    "SerialNumber": "4080",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Singhasan_Battisi_(TV_series)\u003e \u003chttp://dbpedia.org/ontology/starring\u003e ?x . ?x \u003chttp://dbpedia.org/property/birthPlace\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Singhasan Battisi",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Singhasan_Battisi_(TV_series)",
        "seq": "35,52"
      }
    ],
    "id": "9a26ec1acb5a49ebb1c6f3430eaf3aec",
    "predicate mapping": [
      {
        "label": "star",
        "uri": "http://dbpedia.org/ontology/starring",
        "seq": "27,31",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "born",
        "uri": "http://dbpedia.org/property/birthPlace",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who all are starring in the  movies where director of photography is John Derek ?",
    "SerialNumber": "4081",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/cinematography\u003e \u003chttp://dbpedia.org/resource/John_Derek\u003e . ?x \u003chttp://dbpedia.org/property/starring\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "John Derek",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/John_Derek",
        "seq": "69,79"
      }
    ],
    "id": "e9e11aac69384f7ea4b8193f5237bb97",
    "predicate mapping": [
      {
        "label": "photography",
        "uri": "http://dbpedia.org/ontology/cinematography",
        "mappedBy": "word2vec"
      },
      {
        "label": "starring",
        "uri": "http://dbpedia.org/property/starring",
        "seq": "12,20",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "29,34",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Name some software as a service?",
    "SerialNumber": "4090",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/license\u003e \u003chttp://dbpedia.org/resource/Software_as_a_service\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Software\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "software as a service",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Software_as_a_service",
        "seq": "10,31"
      }
    ],
    "id": "644aaef215cc484f9b712c5bc532d4b8",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/license",
        "mappedBy": "word2vec"
      },
      {
        "label": "software",
        "uri": "http://dbpedia.org/ontology/Software",
        "seq": "10,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What are some other things developed by the company who made the remote desktop protocol?",
    "SerialNumber": "4091",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/products\u003e \u003chttp://dbpedia.org/resource/Remote_Desktop_Protocol\u003e . ?x \u003chttp://dbpedia.org/ontology/product\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Company\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "remote desktop protocol",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Remote_Desktop_Protocol",
        "seq": "65,88"
      }
    ],
    "id": "179d3cc2b7f440ed93b9efb89aa4ff9a",
    "predicate mapping": [
      {
        "label": "made",
        "uri": "http://dbpedia.org/property/products",
        "mappedBy": "word2vec"
      },
      {
        "label": "made",
        "uri": "http://dbpedia.org/ontology/product",
        "mappedBy": "word2vec"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company",
        "seq": "44,51",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which office holder\u0027s predecessor is  Lucius Cornelius and his associate is Marcus Calpurnius Bibulus?",
    "SerialNumber": "4093",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/predecessor\u003e \u003chttp://dbpedia.org/resource/Lucius_Cornelius_Lentulus_Crus\u003e . ?uri \u003chttp://dbpedia.org/ontology/associate\u003e \u003chttp://dbpedia.org/resource/Marcus_Calpurnius_Bibulus\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/OfficeHolder\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "cornelius lucius",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Lucius_Cornelius_Lentulus_Crus",
        "seq": "999,1000"
      },
      {
        "label": "Marcus Calpurnius Bibulus",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Marcus_Calpurnius_Bibulus",
        "seq": "76,101"
      }
    ],
    "id": "a21a8d3f8da84d2aa14502672faa0091",
    "predicate mapping": [
      {
        "label": "predecessor",
        "uri": "http://dbpedia.org/ontology/predecessor",
        "seq": "22,33",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "associate",
        "uri": "http://dbpedia.org/ontology/associate",
        "seq": "63,72",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "office holder",
        "uri": "http://dbpedia.org/ontology/OfficeHolder",
        "seq": "6,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "List the people educated at Harvard-Westlake School and has resting place as Palo Alto, California?",
    "SerialNumber": "4097",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/almaMater\u003e \u003chttp://dbpedia.org/resource/Harvard-Westlake_School\u003e . ?uri \u003chttp://dbpedia.org/property/restingPlace\u003e \u003chttp://dbpedia.org/resource/Palo_Alto,_California\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Harvard-Westlake School",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Harvard-Westlake_School",
        "seq": "28,51"
      },
      {
        "label": "Palo Alto, California",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Palo_Alto,_California",
        "seq": "77,98"
      }
    ],
    "id": "7f370a0e523a45c1a3b23489c96c5c88",
    "predicate mapping": [
      {
        "label": "edu",
        "uri": "http://dbpedia.org/ontology/almaMater",
        "seq": "16,19",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "resting place",
        "uri": "http://dbpedia.org/property/restingPlace",
        "seq": "60,73",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "cated",
        "uri": "http://dbpedia.org/ontology/Person",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What did other artists associated with the Shirelles make?",
    "SerialNumber": "4100",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/associatedBand\u003e \u003chttp://dbpedia.org/resource/The_Shirelles\u003e . ?x \u003chttp://dbpedia.org/ontology/occupation\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Artist\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "the Shirelles",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Shirelles",
        "seq": "39,52"
      }
    ],
    "id": "ebe0a1b44e2c4bb081fc827147037d26",
    "predicate mapping": [
      {
        "label": "associated",
        "uri": "http://dbpedia.org/ontology/associatedBand",
        "seq": "23,33",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "make",
        "uri": "http://dbpedia.org/ontology/occupation",
        "mappedBy": "word2vec"
      },
      {
        "label": "artist",
        "uri": "http://dbpedia.org/ontology/Artist",
        "seq": "15,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which parent company of the Cornell University Press is also the alma mater of the Mario Garca Menocal?",
    "SerialNumber": "4101",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Cornell_University_Press\u003e \u003chttp://dbpedia.org/ontology/parentCompany\u003e ?uri. \u003chttp://dbpedia.org/resource/Mario_García_Menocal\u003e \u003chttp://dbpedia.org/ontology/almaMater\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Cornell University Press",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Cornell_University_Press",
        "seq": "28,52"
      },
      {
        "label": "menocal mario",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Mario_García_Menocal",
        "seq": "999,1000"
      }
    ],
    "id": "0a735fe654c440d3aa2c9dcdb4aaf390",
    "predicate mapping": [
      {
        "label": "parent company",
        "uri": "http://dbpedia.org/ontology/parentCompany",
        "seq": "6,20",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/ontology/almaMater",
        "seq": "65,75",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "402",
    "question": "Count the band members of Skull Gang?",
    "SerialNumber": "4102",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { \u003chttp://dbpedia.org/resource/Skull_Gang\u003e \u003chttp://dbpedia.org/ontology/bandMember\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Skull Gang",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Skull_Gang",
        "seq": "26,36"
      }
    ],
    "id": "faf06a2c20664530a15b7b7d5b272fdc",
    "predicate mapping": [
      {
        "label": "band member",
        "uri": "http://dbpedia.org/ontology/bandMember",
        "seq": "10,21",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "Count",
        "uri": "http://dbpedia.org/ontology/Person",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the political party to which Purnima Banerjee is a member of?",
    "SerialNumber": "4104",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Robert_Nutting\u003e \u003chttp://dbpedia.org/ontology/knownFor\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Purnima Banerjee",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Robert_Nutting",
        "seq": "37,53"
      }
    ],
    "id": "f01315d63b924a25a46e91aae29457bc",
    "predicate mapping": [
      {
        "label": "member",
        "uri": "http://dbpedia.org/ontology/knownFor",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Who was the president during the time the opponent of John Hospers was in the office?",
    "SerialNumber": "4105",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/opponent\u003e \u003chttp://dbpedia.org/resource/John_Hospers\u003e . ?x \u003chttp://dbpedia.org/ontology/incumbent\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "John Hospers",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/John_Hospers",
        "seq": "54,66"
      }
    ],
    "id": "7c3c9d3e96c54807847b7a2b14049933",
    "predicate mapping": [
      {
        "label": "opponent",
        "uri": "http://dbpedia.org/ontology/opponent",
        "seq": "42,50",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "office",
        "uri": "http://dbpedia.org/ontology/incumbent",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Whcih land of Citi Trends is also the constituency of Malik Al-Hassan Yakubu ?",
    "SerialNumber": "4106",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Malik_Al-Hassan_Yakubu\u003e \u003chttp://dbpedia.org/property/constituency\u003e ?uri. \u003chttp://dbpedia.org/resource/CitiTrends_(radio_show)\u003e \u003chttp://dbpedia.org/ontology/country\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Malik Al-Hassan Yakubu",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Malik_Al-Hassan_Yakubu",
        "seq": "54,76"
      },
      {
        "label": "trends",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/CitiTrends_(radio_show)",
        "seq": "999,1000"
      }
    ],
    "id": "7adccf6358744d82b563e59f30b482fa",
    "predicate mapping": [
      {
        "label": "constituency",
        "uri": "http://dbpedia.org/property/constituency",
        "seq": "38,50",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "land",
        "uri": "http://dbpedia.org/ontology/country",
        "seq": "6,10",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "In which country does the publishing house exist which was cofounded by Panos Loannides?",
    "SerialNumber": "4107",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/founder\u003e \u003chttp://dbpedia.org/resource/Panos_Ioannides\u003e . ?x \u003chttp://dbpedia.org/property/country\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Publisher\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Panos Loannides",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Panos_Ioannides",
        "seq": "72,87"
      }
    ],
    "id": "4bd70a53db094071a29c3e999f05bee9",
    "predicate mapping": [
      {
        "label": "founded by",
        "uri": "http://dbpedia.org/ontology/founder",
        "seq": "61,71",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/property/country",
        "seq": "9,16",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "exist",
        "uri": "http://dbpedia.org/ontology/Publisher",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "To which settlement does Elliot Bay belong to?",
    "SerialNumber": "4110",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Elliott_Bay\u003e \u003chttp://dbpedia.org/property/cities\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Elliot Bay",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Elliott_Bay",
        "seq": "25,35"
      }
    ],
    "id": "48faaecba3194be8a5d4216c2e5bbe29",
    "predicate mapping": [
      {
        "label": "belong",
        "uri": "http://dbpedia.org/property/cities",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Which band produced the album Aida?",
    "SerialNumber": "4115",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/album\u003e \u003chttp://dbpedia.org/resource/Aida_(musical)\u003e . ?x \u003chttp://dbpedia.org/ontology/musicalArtist\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MusicalWork\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Aida",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Aida_(musical)",
        "seq": "30,34"
      }
    ],
    "id": "ccc04aa37c9b42178de44ab219cf6834",
    "predicate mapping": [
      {
        "label": "album",
        "uri": "http://dbpedia.org/property/album",
        "seq": "24,29",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "band",
        "uri": "http://dbpedia.org/ontology/musicalArtist",
        "seq": "6,10",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "produced",
        "uri": "http://dbpedia.org/ontology/MusicalWork",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What do the banks owned by Norwegian ministry of finance produce?",
    "SerialNumber": "4117",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/parentCompany\u003e \u003chttp://dbpedia.org/resource/Ministry_of_Finance_(Norway)\u003e . ?x \u003chttp://dbpedia.org/property/products\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Bank\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "ministry of finance",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ministry_of_Finance_(Norway)",
        "seq": "37,56"
      }
    ],
    "id": "5a074df3521141adb1aefaec144c1510",
    "predicate mapping": [
      {
        "label": "produce",
        "uri": "http://dbpedia.org/ontology/parentCompany",
        "mappedBy": "word2vec"
      },
      {
        "label": "produce",
        "uri": "http://dbpedia.org/property/products",
        "mappedBy": "word2vec"
      },
      {
        "label": "bank",
        "uri": "http://dbpedia.org/ontology/Bank",
        "seq": "12,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What organisation regulates and controls the New Sanno Hotel?",
    "SerialNumber": "4122",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/New_Sanno_Hotel\u003e \u003chttp://dbpedia.org/ontology/tenant\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "New Sanno Hotel",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/New_Sanno_Hotel",
        "seq": "45,60"
      }
    ],
    "id": "97da8d0de1584a23a8560ea19c285153",
    "predicate mapping": [
      {
        "label": "controls",
        "uri": "http://dbpedia.org/ontology/tenant",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Where do networks affiliated with ETC broadcast?",
    "SerialNumber": "4131",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/affiliation\u003e \u003chttp://dbpedia.org/resource/ETC_(TV_channel)\u003e . ?x \u003chttp://dbpedia.org/property/area\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/BroadcastNetwork\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "ETC",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/ETC_(TV_channel)",
        "seq": "34,37"
      }
    ],
    "id": "ff08a87358c14e6a98db33b34547c5b5",
    "predicate mapping": [
      {
        "label": "affiliated",
        "uri": "http://dbpedia.org/property/affiliation",
        "mappedBy": "word2vec"
      },
      {
        "label": "affiliated",
        "uri": "http://dbpedia.org/property/area",
        "mappedBy": "word2vec"
      },
      {
        "label": "broadcast",
        "uri": "http://dbpedia.org/ontology/BroadcastNetwork",
        "seq": "38,47",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Which borough is common for Duddeston and Bordesley railway station ?",
    "SerialNumber": "4132",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Duddeston_railway_station\u003e \u003chttp://dbpedia.org/property/borough\u003e ?uri. \u003chttp://dbpedia.org/resource/Bordesley_railway_station\u003e \u003chttp://dbpedia.org/property/borough\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "duddeston station railway",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Duddeston_railway_station",
        "seq": "999,1000"
      },
      {
        "label": "Bordesley railway station",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Bordesley_railway_station",
        "seq": "42,67"
      }
    ],
    "id": "62e1ac6a48374811b387c936277abf3f",
    "predicate mapping": [
      {
        "label": "borough",
        "uri": "http://dbpedia.org/property/borough",
        "seq": "6,13",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "borough",
        "uri": "http://dbpedia.org/property/borough",
        "seq": "6,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the office holder whose final resting place is North Bend and was part of Siege of fort recovery conflict ?",
    "SerialNumber": "4133",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/battle\u003e \u003chttp://dbpedia.org/resource/Siege_of_Fort_Recovery\u003e . ?uri \u003chttp://dbpedia.org/property/restingplace\u003e \u003chttp://dbpedia.org/resource/North_Bend,_Ohio\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/OfficeHolder\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Siege of fort recovery",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Siege_of_Fort_Recovery",
        "seq": "79,101"
      },
      {
        "label": "north bend",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/North_Bend,_Ohio",
        "seq": "999,1000"
      }
    ],
    "id": "ae35cc3329ac40a08ebe49385e806d35",
    "predicate mapping": [
      {
        "label": "conflict",
        "uri": "http://dbpedia.org/ontology/battle",
        "mappedBy": "word2vec"
      },
      {
        "label": "resting place",
        "uri": "http://dbpedia.org/property/restingplace",
        "seq": "35,48",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "office holder",
        "uri": "http://dbpedia.org/ontology/OfficeHolder",
        "seq": "9,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "In which state is Goose Lake Valle, which is also part of Lava River Cave ?",
    "SerialNumber": "4134",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Goose_Lake_Valley\u003e \u003chttp://dbpedia.org/ontology/state\u003e ?uri. \u003chttp://dbpedia.org/resource/Lava_River_Cave\u003e \u003chttp://dbpedia.org/ontology/location\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Goose Lake Valle,",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Goose_Lake_Valley",
        "seq": "18,35"
      },
      {
        "label": "Lava River Cave",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Lava_River_Cave",
        "seq": "58,73"
      }
    ],
    "id": "19aa6a8901924e0998a44283eaa9aef4",
    "predicate mapping": [
      {
        "label": "state",
        "uri": "http://dbpedia.org/ontology/state",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "part",
        "uri": "http://dbpedia.org/ontology/location",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "In which fields have people born in Lausanne worked?",
    "SerialNumber": "4135",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/placeOfBirth\u003e \u003chttp://dbpedia.org/resource/Lausanne\u003e . ?x \u003chttp://dbpedia.org/property/fields\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Lausanne",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Lausanne",
        "seq": "36,44"
      }
    ],
    "id": "75b80b3f8a524509a21451d9a7acc46e",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/placeOfBirth",
        "mappedBy": "word2vec"
      },
      {
        "label": "fields",
        "uri": "http://dbpedia.org/property/fields",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "For whom did Michael Springer palyed for which is also had a former student named Donald Brooks ?",
    "SerialNumber": "4137",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Michael_Springer\u003e \u003chttp://dbpedia.org/property/team\u003e ?uri. \u003chttp://dbpedia.org/resource/Donald_Brooks\u003e \u003chttp://dbpedia.org/property/education\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Michael Springer",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Michael_Springer",
        "seq": "13,29"
      },
      {
        "label": "Donald Brooks",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Donald_Brooks",
        "seq": "82,95"
      }
    ],
    "id": "86888920922147cfbbe21f09a0e2c077",
    "predicate mapping": [
      {
        "label": "named",
        "uri": "http://dbpedia.org/property/team",
        "mappedBy": "word2vec"
      },
      {
        "label": "named",
        "uri": "http://dbpedia.org/property/education",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "405",
    "question": "How many artists have collaborated with famous guitar players?",
    "SerialNumber": "4139",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/notableInstruments\u003e \u003chttp://dbpedia.org/resource/Guitar\u003e . ?x \u003chttp://dbpedia.org/ontology/associatedMusicalArtist\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Artist\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "guitar",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Guitar",
        "seq": "47,53"
      }
    ],
    "id": "8fb26b1d97b449afb64a79c4c66ada90",
    "predicate mapping": [
      {
        "label": "players",
        "uri": "http://dbpedia.org/property/notableInstruments",
        "mappedBy": "word2vec"
      },
      {
        "label": "artists",
        "uri": "http://dbpedia.org/ontology/associatedMusicalArtist",
        "seq": "9,16",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "artist",
        "uri": "http://dbpedia.org/ontology/Artist",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "311",
    "question": "List the profession of senate whose one of the profession is United States Coast Guard ?",
    "SerialNumber": "4141",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/profession\u003e \u003chttp://dbpedia.org/resource/United_States_Coast_Guard\u003e . ?x \u003chttp://dbpedia.org/ontology/profession\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Politician\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "United States Coast Guard",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/United_States_Coast_Guard",
        "seq": "61,86"
      }
    ],
    "id": "30605f74aa054fabbb707ab5e85247fe",
    "predicate mapping": [
      {
        "label": "profession",
        "uri": "http://dbpedia.org/ontology/profession",
        "seq": "9,19",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "profession",
        "uri": "http://dbpedia.org/ontology/profession",
        "seq": "9,19",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "senate",
        "uri": "http://dbpedia.org/ontology/Politician",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "What have some US citizens died of?",
    "SerialNumber": "4143",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/citizenship\u003e \u003chttp://dbpedia.org/resource/United_States\u003e . ?x \u003chttp://dbpedia.org/ontology/deathCause\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "US",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/United_States",
        "seq": "15,17"
      }
    ],
    "id": "3d8f7450e4e84935b8f482bf336f0843",
    "predicate mapping": [
      {
        "label": "citizens",
        "uri": "http://dbpedia.org/property/citizenship",
        "seq": "18,26",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "died",
        "uri": "http://dbpedia.org/ontology/deathCause",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "What are some famous veterinary physicians known for?",
    "SerialNumber": "4144",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/field\u003e \u003chttp://dbpedia.org/resource/Veterinary_physician\u003e . ?x \u003chttp://dbpedia.org/property/knownFor\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "veterinary physicians",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Veterinary_physician",
        "seq": "21,42"
      }
    ],
    "id": "60f9b1b1c6234d06881d6c6c2211192a",
    "predicate mapping": [
      {
        "label": "famous",
        "uri": "http://dbpedia.org/property/field",
        "mappedBy": "word2vec"
      },
      {
        "label": "known for",
        "uri": "http://dbpedia.org/property/knownFor",
        "seq": "43,52",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Does the platte river originate in Colorado?",
    "SerialNumber": "4145",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Platte_River\u003e \u003chttp://dbpedia.org/ontology/sourceRegion\u003e \u003chttp://dbpedia.org/resource/Colorado\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "platte river",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Platte_River",
        "seq": "9,21"
      },
      {
        "label": "Colorado",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Colorado",
        "seq": "35,43"
      }
    ],
    "id": "da022345367d441484d1fdcb8582c86b",
    "predicate mapping": [
      {
        "label": "originate",
        "uri": "http://dbpedia.org/ontology/sourceRegion",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Is the Hyundai Lavita assembled in Kulim?",
    "SerialNumber": "4147",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Hyundai_Lavita\u003e \u003chttp://dbpedia.org/ontology/assembly\u003e \u003chttp://dbpedia.org/resource/Kulim\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Hyundai Lavita",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Hyundai_Lavita",
        "seq": "7,21"
      },
      {
        "label": "Kulim",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Kulim",
        "seq": "35,40"
      }
    ],
    "id": "1045a9b2aa9742818b6c4fc9ba72c399",
    "predicate mapping": [
      {
        "label": "assembled",
        "uri": "http://dbpedia.org/ontology/assembly",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Is the national endowment of arts under the jurisdiction of federal government of US?",
    "SerialNumber": "4156",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/National_Endowment_for_the_Arts\u003e \u003chttp://dbpedia.org/property/jurisdiction\u003e \u003chttp://dbpedia.org/resource/Federal_government_of_the_United_States\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "endowment national",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/National_Endowment_for_the_Arts",
        "seq": "999,1000"
      },
      {
        "label": "federal",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Federal_government_of_the_United_States",
        "seq": "60,67"
      }
    ],
    "id": "ae5b96d1769c443288f79abd58151136",
    "predicate mapping": [
      {
        "label": "jurisdiction",
        "uri": "http://dbpedia.org/property/jurisdiction",
        "seq": "44,56",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Was Kevin Rudd the PM of Julia Gillard?",
    "SerialNumber": "4157",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Julia_Gillard\u003e \u003chttp://dbpedia.org/ontology/primeMinister\u003e \u003chttp://dbpedia.org/resource/Kevin_Rudd\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Julia Gillard",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Julia_Gillard",
        "seq": "25,38"
      },
      {
        "label": "Kevin Rudd",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Kevin_Rudd",
        "seq": "4,14"
      }
    ],
    "id": "e01fcd131f144d599b2e638f003d7552",
    "predicate mapping": [
      {
        "label": "PM",
        "uri": "http://dbpedia.org/ontology/primeMinister",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Which country were the people from who became famous for the Ramon Mangsaysay Award?",
    "SerialNumber": "4158",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/knownFor\u003e \u003chttp://dbpedia.org/resource/Ramon_Magsaysay_Award\u003e . ?x \u003chttp://dbpedia.org/ontology/stateOfOrigin\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Ramon_Magsaysay_Award",
        "seq": "999,1000"
      }
    ],
    "id": "8b01cd75cf8c483682925fdc176c2317",
    "predicate mapping": [
      {
        "label": "Award",
        "uri": "http://dbpedia.org/ontology/knownFor",
        "mappedBy": "word2vec"
      },
      {
        "uri": "http://dbpedia.org/ontology/stateOfOrigin",
        "mappedBy": "word2vec"
      },
      {
        "label": "Award",
        "uri": "http://dbpedia.org/ontology/Person",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which employer of Michael M. Sears is also the producer of Delta III ?",
    "SerialNumber": "4159",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Michael_M._Sears\u003e \u003chttp://dbpedia.org/ontology/employer\u003e ?uri. \u003chttp://dbpedia.org/resource/Delta_III\u003e \u003chttp://dbpedia.org/ontology/manufacturer\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Michael M. Sears",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Michael_M._Sears",
        "seq": "18,34"
      },
      {
        "label": "Delta III",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Delta_III",
        "seq": "59,68"
      }
    ],
    "id": "976416dab3a74a80855d6d582a488ff4",
    "predicate mapping": [
      {
        "label": "employer",
        "uri": "http://dbpedia.org/ontology/employer",
        "seq": "6,14",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "producer",
        "uri": "http://dbpedia.org/ontology/manufacturer",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "Guggenheim family is the cofounder of a company that invested stocks in which baseball teams?",
    "SerialNumber": "4161",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/founder\u003e \u003chttp://dbpedia.org/resource/Guggenheim_family\u003e . ?uri \u003chttp://dbpedia.org/property/owner\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/BaseballTeam\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Guggenheim family",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Guggenheim_family",
        "seq": "0,17"
      }
    ],
    "id": "83152a2adbe949ab904fda1101384ee7",
    "predicate mapping": [
      {
        "label": "founder of",
        "uri": "http://dbpedia.org/property/founder",
        "seq": "27,37",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "stocks",
        "uri": "http://dbpedia.org/property/owner",
        "mappedBy": "word2vec"
      },
      {
        "label": "baseball team",
        "uri": "http://dbpedia.org/ontology/BaseballTeam",
        "seq": "78,91",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who won the ohio house of representatives, 2010?",
    "SerialNumber": "4162",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/United_States_House_of_Representatives_elections_in_Ohio,_2010\u003e \u003chttp://dbpedia.org/property/incumbent\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "2010",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/United_States_House_of_Representatives_elections_in_Ohio,_2010",
        "seq": "43,47"
      }
    ],
    "id": "2779011abe114ab58fb5e700589ea345",
    "predicate mapping": [
      {
        "label": "house",
        "uri": "http://dbpedia.org/property/incumbent",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "Where is the headquarters of the public transit system which owns the American Boulevard (Metro Transit station) located ?",
    "SerialNumber": "4163",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/American_Boulevard_(Metro_Transit_station)\u003e \u003chttp://dbpedia.org/ontology/owningOrganisation\u003e ?x . ?x \u003chttp://dbpedia.org/property/headquarters\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/PublicTransitSystem\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "American Boulevard (Metro Transit station)",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/American_Boulevard_(Metro_Transit_station)",
        "seq": "70,112"
      }
    ],
    "id": "8a38e3ab78b24fbbb14d1cc919014e96",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/owningOrganisation",
        "mappedBy": "word2vec"
      },
      {
        "label": "headquarters",
        "uri": "http://dbpedia.org/property/headquarters",
        "seq": "13,25",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "public transit system",
        "uri": "http://dbpedia.org/ontology/PublicTransitSystem",
        "seq": "33,54",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "311",
    "question": "List all the members of the organization whose one of the members is Bangladesh ?",
    "SerialNumber": "4166",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/membership\u003e \u003chttp://dbpedia.org/resource/Bangladesh\u003e . ?x \u003chttp://dbpedia.org/property/membership\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Organisation\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Bangladesh",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Bangladesh",
        "seq": "69,79"
      }
    ],
    "id": "ffe42b8531f540398540cdb1b6cb13ca",
    "predicate mapping": [
      {
        "label": "members",
        "uri": "http://dbpedia.org/property/membership",
        "seq": "13,20",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "members",
        "uri": "http://dbpedia.org/property/membership",
        "seq": "13,20",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "uri": "http://dbpedia.org/ontology/Organisation",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "311",
    "question": "List all the school of the rugby player whose one of the school is Michael House ?",
    "SerialNumber": "4170",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/school\u003e \u003chttp://dbpedia.org/resource/Michaelhouse\u003e . ?x \u003chttp://dbpedia.org/property/school\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/RugbyPlayer\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "michael house",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Michaelhouse",
        "seq": "999,1000"
      }
    ],
    "id": "d85c374fb7e047cda434efae8462b69b",
    "predicate mapping": [
      {
        "label": "school",
        "uri": "http://dbpedia.org/ontology/school",
        "seq": "13,19",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "school",
        "uri": "http://dbpedia.org/property/school",
        "seq": "13,19",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "rugby player",
        "uri": "http://dbpedia.org/ontology/RugbyPlayer",
        "seq": "27,39",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "What is the total number of professions in which someone who has suicided worked?",
    "SerialNumber": "4172",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/deathCause\u003e \u003chttp://dbpedia.org/resource/Suicide\u003e . ?x \u003chttp://dbpedia.org/ontology/occupation\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "suicide",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Suicide",
        "seq": "65,72"
      }
    ],
    "id": "fda94b922adc4c96852e7800f60f797a",
    "predicate mapping": [
      {
        "label": "worked",
        "uri": "http://dbpedia.org/property/deathCause",
        "mappedBy": "word2vec"
      },
      {
        "label": "profession",
        "uri": "http://dbpedia.org/ontology/occupation",
        "seq": "28,38",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "To which country do the players of Waitakere United belong?",
    "SerialNumber": "4173",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/team\u003e \u003chttp://dbpedia.org/resource/Waitakere_United\u003e . ?x \u003chttp://dbpedia.org/ontology/country\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Athlete\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Waitakere United",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Waitakere_United",
        "seq": "35,51"
      }
    ],
    "id": "59100a9ec0e24b988611ea5a66675140",
    "predicate mapping": [
      {
        "label": "belong",
        "uri": "http://dbpedia.org/ontology/team",
        "mappedBy": "word2vec"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/country",
        "seq": "9,16",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "belong",
        "uri": "http://dbpedia.org/ontology/Athlete",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "How many relatives are there of veterans of operation Barbarossa?",
    "SerialNumber": "4174",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/battle\u003e \u003chttp://dbpedia.org/resource/Operation_Barbarossa\u003e . ?x \u003chttp://dbpedia.org/ontology/relation\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "operation Barbarossa",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Operation_Barbarossa",
        "seq": "44,64"
      }
    ],
    "id": "75a241fa2e024a7a95e0108a8b6b66ff",
    "predicate mapping": [
      {
        "label": "veterans",
        "uri": "http://dbpedia.org/ontology/battle",
        "mappedBy": "word2vec"
      },
      {
        "label": "veterans",
        "uri": "http://dbpedia.org/ontology/relation",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "102",
    "question": "How many leagues have used the O.co Coliseum?",
    "SerialNumber": "4175",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { \u003chttp://dbpedia.org/resource/O.co_Coliseum\u003e \u003chttp://dbpedia.org/ontology/tenant\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "O.co Coliseum",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/O.co_Coliseum",
        "seq": "31,44"
      }
    ],
    "id": "5f69f094954f4553a0bd03d14da852d6",
    "predicate mapping": [
      {
        "label": "leagues",
        "uri": "http://dbpedia.org/ontology/tenant",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What kind of games are made by Interplay Entertainment?",
    "SerialNumber": "4176",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/publisher\u003e \u003chttp://dbpedia.org/resource/Interplay_Entertainment\u003e . ?x \u003chttp://dbpedia.org/property/genre\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/VideoGame\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Interplay Entertainment",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Interplay_Entertainment",
        "seq": "31,54"
      }
    ],
    "id": "23a0e9e271d44ba286716b46fd3eb912",
    "predicate mapping": [
      {
        "label": "made",
        "uri": "http://dbpedia.org/ontology/publisher",
        "mappedBy": "word2vec"
      },
      {
        "label": "made",
        "uri": "http://dbpedia.org/property/genre",
        "mappedBy": "word2vec"
      },
      {
        "label": "games",
        "uri": "http://dbpedia.org/ontology/VideoGame",
        "seq": "13,18",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Where did the spouse of pmare ii die?",
    "SerialNumber": "4178",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/spouse\u003e \u003chttp://dbpedia.org/resource/Pōmare_II\u003e . ?x \u003chttp://dbpedia.org/ontology/deathPlace\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Pōmare_II",
        "seq": "999,1000"
      }
    ],
    "id": "46880d365fbe4d54b1b965e5b5e1bb77",
    "predicate mapping": [
      {
        "label": "spouse",
        "uri": "http://dbpedia.org/property/spouse",
        "seq": "14,20",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "die",
        "uri": "http://dbpedia.org/ontology/deathPlace",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Where do cherry chevapravatdumrong and daisi pollard both live?",
    "SerialNumber": "4180",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Cherry_Chevapravatdumrong\u003e \u003chttp://dbpedia.org/ontology/residence\u003e ?uri. \u003chttp://dbpedia.org/resource/Daisi_Pollard\u003e \u003chttp://dbpedia.org/ontology/residence\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "cherry chevapravatdumrong",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Cherry_Chevapravatdumrong",
        "seq": "9,34"
      },
      {
        "label": "daisi pollard",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Daisi_Pollard",
        "seq": "39,52"
      }
    ],
    "id": "eb285e418d9641bcb6ba0c86c444d355",
    "predicate mapping": [
      {
        "label": "live",
        "uri": "http://dbpedia.org/ontology/residence",
        "mappedBy": "word2vec"
      },
      {
        "label": "live",
        "uri": "http://dbpedia.org/ontology/residence",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "401",
    "question": "How many bands are based in London?",
    "SerialNumber": "4185",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/ontology/hometown\u003e \u003chttp://dbpedia.org/resource/London\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Band\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "London",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/London",
        "seq": "28,34"
      }
    ],
    "id": "431e3662c6994776a8f35a3d3eb26027",
    "predicate mapping": [
      {
        "label": "based",
        "uri": "http://dbpedia.org/ontology/hometown",
        "mappedBy": "word2vec"
      },
      {
        "label": "band",
        "uri": "http://dbpedia.org/ontology/Band",
        "seq": "9,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "To which educational institute does Cornell University Press belong to?",
    "SerialNumber": "4187",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Cornell_University_Press\u003e \u003chttp://dbpedia.org/ontology/parentCompany\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Cornell University Press",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Cornell_University_Press",
        "seq": "36,60"
      }
    ],
    "id": "910a28df8fc54d3cbd74bc9e7923cc70",
    "predicate mapping": [
      {
        "label": "belong",
        "uri": "http://dbpedia.org/ontology/parentCompany",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Is Robert Boyle a chemist?",
    "SerialNumber": "4188",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Robert_Boyle\u003e \u003chttp://dbpedia.org/ontology/field\u003e \u003chttp://dbpedia.org/resource/Chemistry\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Robert Boyle",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Robert_Boyle",
        "seq": "3,15"
      },
      {
        "label": "chemist",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Chemistry",
        "seq": "999,1000"
      }
    ],
    "id": "f1bd78d345634e9d9d237a044ba8599b",
    "predicate mapping": [
      {
        "label": "chemist",
        "uri": "http://dbpedia.org/ontology/field",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What city was recorded in Live in detroit which is also the official residence of ken Holland ?",
    "SerialNumber": "4189",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Live_in_Detroit,_MI\u003e \u003chttp://dbpedia.org/ontology/recordedIn\u003e ?uri. \u003chttp://dbpedia.org/resource/Ken_Holland\u003e \u003chttp://dbpedia.org/ontology/residence\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "detroit live",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Live_in_Detroit,_MI",
        "seq": "999,1000"
      },
      {
        "label": "ken Holland",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Ken_Holland",
        "seq": "82,93"
      }
    ],
    "id": "f6df767b04b1431ab3fbfb73d45d7c56",
    "predicate mapping": [
      {
        "label": "recorded in",
        "uri": "http://dbpedia.org/ontology/recordedIn",
        "seq": "14,25",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "residence",
        "uri": "http://dbpedia.org/ontology/residence",
        "seq": "69,78",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Which famous physicist was academically advised by Benjamin Pulleyn?",
    "SerialNumber": "4190",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/academicAdvisor\u003e \u003chttp://dbpedia.org/resource/Benjamin_Pulleyn\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Scientist\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Benjamin Pulleyn",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Benjamin_Pulleyn",
        "seq": "51,67"
      }
    ],
    "id": "9f90dd10b77a48d1a9a361b34af9145d",
    "predicate mapping": [
      {
        "label": "advised",
        "uri": "http://dbpedia.org/ontology/academicAdvisor",
        "mappedBy": "word2vec"
      },
      {
        "label": "advised",
        "uri": "http://dbpedia.org/ontology/Scientist",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "What is the county seat of the district through which the Beckler River flows?",
    "SerialNumber": "4191",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Beckler_River\u003e \u003chttp://dbpedia.org/ontology/district\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/countySeat\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/AdministrativeRegion\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Beckler River",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Beckler_River",
        "seq": "58,71"
      }
    ],
    "id": "3e34613e0d93409d81b5a5ed8d0736e8",
    "predicate mapping": [
      {
        "label": "district",
        "uri": "http://dbpedia.org/ontology/district",
        "seq": "31,39",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "county seat",
        "uri": "http://dbpedia.org/ontology/countySeat",
        "seq": "12,23",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "flows",
        "uri": "http://dbpedia.org/ontology/AdministrativeRegion",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Name some local authorities of schools which have a mixed gender education system?",
    "SerialNumber": "4193",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/gender\u003e \u003chttp://dbpedia.org/resource/Mixed-sex_education\u003e . ?x \u003chttp://dbpedia.org/ontology/localAuthority\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/School\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "education mixed",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Mixed-sex_education",
        "seq": "999,1000"
      }
    ],
    "id": "a64b3098de204f9fa741346a1da0d672",
    "predicate mapping": [
      {
        "label": "gender",
        "uri": "http://dbpedia.org/ontology/gender",
        "seq": "58,64",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "authorities",
        "uri": "http://dbpedia.org/ontology/localAuthority",
        "seq": "16,27",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "school",
        "uri": "http://dbpedia.org/ontology/School",
        "seq": "31,37",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the TV shows related to Babylon 5: The Lost Tales and is aired on Prime TIme Entertainment Networks ?",
    "SerialNumber": "4195",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/related\u003e \u003chttp://dbpedia.org/resource/Babylon_5:_The_Lost_Tales\u003e . ?uri \u003chttp://dbpedia.org/ontology/network\u003e \u003chttp://dbpedia.org/resource/Prime_Time_Entertainment_Network\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Babylon 5: The Lost Tales",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Babylon_5:_The_Lost_Tales",
        "seq": "29,54"
      },
      {
        "label": "Prime TIme Entertainment Network",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Prime_Time_Entertainment_Network",
        "seq": "71,103"
      }
    ],
    "id": "eee8cd2ce7864cc18d521259b6385d55",
    "predicate mapping": [
      {
        "label": "related",
        "uri": "http://dbpedia.org/ontology/related",
        "seq": "18,25",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "Network",
        "uri": "http://dbpedia.org/ontology/network",
        "seq": "96,103",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "aired",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "What have some famous Christians died of?",
    "SerialNumber": "4201",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/religion\u003e \u003chttp://dbpedia.org/resource/Christianity\u003e . ?x \u003chttp://dbpedia.org/ontology/deathCause\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Christians",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Christianity",
        "seq": "22,32"
      }
    ],
    "id": "97750e1c2bda4a70a98f6a3d3fde3cc5",
    "predicate mapping": [
      {
        "label": "died",
        "uri": "http://dbpedia.org/ontology/religion",
        "mappedBy": "word2vec"
      },
      {
        "label": "died",
        "uri": "http://dbpedia.org/ontology/deathCause",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Does KOMC play Gospel Music?",
    "SerialNumber": "4202",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/KOMC_(AM)\u003e \u003chttp://dbpedia.org/ontology/programmeFormat\u003e \u003chttp://dbpedia.org/resource/Gospel_music\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "KOMC",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/KOMC_(AM)",
        "seq": "5,9"
      },
      {
        "label": "Gospel Music",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Gospel_music",
        "seq": "15,27"
      }
    ],
    "id": "efac36cec91343a9b9f1ede98613d8b2",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/programmeFormat",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "What are some developers which use Emacs Lisp in their projects?",
    "SerialNumber": "4204",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/programmingLanguage\u003e \u003chttp://dbpedia.org/resource/Emacs_Lisp\u003e . ?x \u003chttp://dbpedia.org/ontology/developer\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Emacs Lisp",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Emacs_Lisp",
        "seq": "35,45"
      }
    ],
    "id": "9d830815b20d441b91c44bc90f8e9dc0",
    "predicate mapping": [
      {
        "label": "projects",
        "uri": "http://dbpedia.org/property/programmingLanguage",
        "mappedBy": "word2vec"
      },
      {
        "label": "developer",
        "uri": "http://dbpedia.org/ontology/developer",
        "seq": "14,23",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "8",
    "question": "Which creation of Josh Friedman was portrayed in Terminator 2 ?",
    "SerialNumber": "4208",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/portrayer\u003e \u003chttp://dbpedia.org/resource/Terminator_2:_Judgment_Day\u003e . ?uri \u003chttp://dbpedia.org/property/creator\u003e \u003chttp://dbpedia.org/resource/Josh_Friedman\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "terminator",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Terminator_2:_Judgment_Day",
        "seq": "999,1000"
      },
      {
        "label": "Josh Friedman",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Josh_Friedman",
        "seq": "18,31"
      }
    ],
    "id": "fe5a0610c6e741c2a1b2f059c072dfbf",
    "predicate mapping": [
      {
        "label": "portrayed",
        "uri": "http://dbpedia.org/ontology/portrayer",
        "seq": "36,45",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "Terminator",
        "uri": "http://dbpedia.org/property/creator",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "Whose shrines are in a place governed by Justin Trudeau?",
    "SerialNumber": "4209",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/leaderName\u003e \u003chttp://dbpedia.org/resource/Justin_Trudeau\u003e . ?uri \u003chttp://dbpedia.org/ontology/majorShrine\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Justin Trudeau",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Justin_Trudeau",
        "seq": "41,55"
      }
    ],
    "id": "f897b6b86feb462eab03a36bc0502824",
    "predicate mapping": [
      {
        "label": "governed",
        "uri": "http://dbpedia.org/property/leaderName",
        "mappedBy": "word2vec"
      },
      {
        "label": "shrines",
        "uri": "http://dbpedia.org/ontology/majorShrine",
        "seq": "6,13",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "List the uni. having affiliation with Graham Holding Company and have a campus in Iowa ?",
    "SerialNumber": "4213",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/affiliations\u003e \u003chttp://dbpedia.org/resource/Graham_Holdings_Company\u003e . ?uri \u003chttp://dbpedia.org/ontology/campus\u003e \u003chttp://dbpedia.org/resource/Iowa\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/University\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "holding company graham",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Graham_Holdings_Company",
        "seq": "999,1000"
      },
      {
        "label": "Iowa",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Iowa",
        "seq": "82,86"
      }
    ],
    "id": "efb6271731a0486c9038f72e14ad2143",
    "predicate mapping": [
      {
        "label": "affiliation",
        "uri": "http://dbpedia.org/property/affiliations",
        "seq": "21,32",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "campus",
        "uri": "http://dbpedia.org/ontology/campus",
        "seq": "72,78",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "Company",
        "uri": "http://dbpedia.org/ontology/University",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Where did the employees of American College of Surgeons study?",
    "SerialNumber": "4216",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/workInstitutions\u003e \u003chttp://dbpedia.org/resource/American_College_of_Surgeons\u003e . ?x \u003chttp://dbpedia.org/ontology/education\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "American College of Surgeons",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/American_College_of_Surgeons",
        "seq": "27,55"
      }
    ],
    "id": "4ef28f32c3dc4c17a10aaed5ef42c084",
    "predicate mapping": [
      {
        "label": "study",
        "uri": "http://dbpedia.org/property/workInstitutions",
        "mappedBy": "word2vec"
      },
      {
        "label": "study",
        "uri": "http://dbpedia.org/ontology/education",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "In how many different places do Starwood hotels and resorts worldwide operate?",
    "SerialNumber": "4217",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/operator\u003e \u003chttp://dbpedia.org/resource/Starwood_Hotels_and_Resorts_Worldwide\u003e . ?x \u003chttp://dbpedia.org/property/address\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Starwood hotels and resorts worldwide",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Starwood_Hotels_and_Resorts_Worldwide",
        "seq": "32,69"
      }
    ],
    "id": "e96091eb6e334719adfadbe72dea01c8",
    "predicate mapping": [
      {
        "label": "operate",
        "uri": "http://dbpedia.org/property/operator",
        "mappedBy": "word2vec"
      },
      {
        "label": "operate",
        "uri": "http://dbpedia.org/property/address",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Who was the head coach of Middlesbrough F.C. season 2006-7 also the coach of England national under 21 footbal team ?",
    "SerialNumber": "4220",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/2006–07_Middlesbrough_F.C._season\u003e \u003chttp://dbpedia.org/ontology/manager\u003e ?uri. \u003chttp://dbpedia.org/resource/England_national_under-21_football_team\u003e \u003chttp://dbpedia.org/property/coach\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "middlesbrough season",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/2006–07_Middlesbrough_F.C._season",
        "seq": "999,1000"
      },
      {
        "label": "national footbal england under team",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/England_national_under-21_football_team",
        "seq": "999,1000"
      }
    ],
    "id": "cedb96883e1c403a8e3e85521917b919",
    "predicate mapping": [
      {
        "label": "coach",
        "uri": "http://dbpedia.org/ontology/manager",
        "seq": "17,22",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "coach",
        "uri": "http://dbpedia.org/property/coach",
        "seq": "17,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "401",
    "question": "How many players are in the San Francisco Giants?",
    "SerialNumber": "4222",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/ontology/team\u003e \u003chttp://dbpedia.org/resource/San_Francisco_Giants\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Athlete\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "San Francisco Giants",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/San_Francisco_Giants",
        "seq": "28,48"
      }
    ],
    "id": "6c08066f4c4a468eabda070b76f407e2",
    "predicate mapping": [
      {
        "label": "players",
        "uri": "http://dbpedia.org/ontology/team",
        "mappedBy": "word2vec"
      },
      {
        "label": "players",
        "uri": "http://dbpedia.org/ontology/Athlete",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Where did Aghasalim Childagh die?",
    "SerialNumber": "4226",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Aghasalim_Childagh\u003e \u003chttp://dbpedia.org/property/deathDate\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Aghasalim Childagh",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Aghasalim_Childagh",
        "seq": "10,28"
      }
    ],
    "id": "51d0d9be06c244229efab43ae8e9d45d",
    "predicate mapping": [
      {
        "label": "die",
        "uri": "http://dbpedia.org/property/deathDate",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "307",
    "question": "Name the office holder whose constituency are Duboce Triangle and Haight-Ashbury ?",
    "SerialNumber": "4228",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/property/constituency\u003e \u003chttp://dbpedia.org/resource/Duboce_Triangle,_San_Francisco\u003e . ?uri \u003chttp://dbpedia.org/property/constituency\u003e \u003chttp://dbpedia.org/resource/Haight-Ashbury\u003e . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/OfficeHolder\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "triangle duboce",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Duboce_Triangle,_San_Francisco",
        "seq": "999,1000"
      },
      {
        "label": "Haight-Ashbury",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Haight-Ashbury",
        "seq": "66,80"
      }
    ],
    "id": "8b82edef302d47feaa60aaf940fbf225",
    "predicate mapping": [
      {
        "label": "constituency",
        "uri": "http://dbpedia.org/property/constituency",
        "seq": "29,41",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "constituency",
        "uri": "http://dbpedia.org/property/constituency",
        "seq": "29,41",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "office holder",
        "uri": "http://dbpedia.org/ontology/OfficeHolder",
        "seq": "9,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "8",
    "question": "Which Tim Birton\u0027s movie has a screenplay by Daniel Waters ?",
    "SerialNumber": "4232",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/screenplay\u003e \u003chttp://dbpedia.org/resource/Daniel_Waters_(screenwriter)\u003e . ?uri \u003chttp://dbpedia.org/property/director\u003e \u003chttp://dbpedia.org/resource/Tim_Burton\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Daniel Waters",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Daniel_Waters_(screenwriter)",
        "seq": "45,58"
      },
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Tim_Burton",
        "seq": "999,1000"
      }
    ],
    "id": "16be3ab972a8420cb9d1ab24a7d7ee5b",
    "predicate mapping": [
      {
        "label": "screenplay",
        "uri": "http://dbpedia.org/property/screenplay",
        "seq": "31,41",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/property/director",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "Who is the stock holder of the bank where  Peter Grauer works  ?",
    "SerialNumber": "4233",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Peter_Grauer\u003e \u003chttp://dbpedia.org/property/occupation\u003e ?x . ?x \u003chttp://dbpedia.org/property/owner\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Bank\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Peter Grauer",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Peter_Grauer",
        "seq": "43,55"
      }
    ],
    "id": "25d2a7baa3b14844812b55facf7b52e1",
    "predicate mapping": [
      {
        "label": "work",
        "uri": "http://dbpedia.org/property/occupation",
        "seq": "56,60",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "holder",
        "uri": "http://dbpedia.org/property/owner",
        "mappedBy": "word2vec"
      },
      {
        "label": "bank",
        "uri": "http://dbpedia.org/ontology/Bank",
        "seq": "31,35",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "In which areas did the pupils of Sylvain Levi work?",
    "SerialNumber": "4234",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/academicAdvisor\u003e \u003chttp://dbpedia.org/resource/Sylvain_Lévi\u003e . ?x \u003chttp://dbpedia.org/property/fields\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Sylvain Levi",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Sylvain_Lévi",
        "seq": "33,45"
      }
    ],
    "id": "d353e53adbc14a819a6b8cb914e9288f",
    "predicate mapping": [
      {
        "label": "work",
        "uri": "http://dbpedia.org/ontology/academicAdvisor",
        "mappedBy": "word2vec"
      },
      {
        "label": "area",
        "uri": "http://dbpedia.org/property/fields",
        "seq": "9,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Which awards have Puerto Ricons won?",
    "SerialNumber": "4235",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/ethnicity\u003e \u003chttp://dbpedia.org/resource/Puerto_Rico\u003e . ?x \u003chttp://dbpedia.org/property/awards\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Puerto Rico",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Puerto_Rico",
        "seq": "18,29"
      }
    ],
    "id": "c3d6509c0674423e8ae5a2a25f581062",
    "predicate mapping": [
      {
        "label": "won",
        "uri": "http://dbpedia.org/ontology/ethnicity",
        "mappedBy": "word2vec"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards",
        "seq": "6,12",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "311",
    "question": "Name all the hubs of the airlines whose one of the hubs is Selangir ?",
    "SerialNumber": "4236",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/hubs\u003e \u003chttp://dbpedia.org/resource/Selangor\u003e . ?x \u003chttp://dbpedia.org/property/hubs\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Airline\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Selangor",
        "seq": "999,1000"
      }
    ],
    "id": "60dc7ef22ac346bc876c2956344ebbbc",
    "predicate mapping": [
      {
        "label": "hubs",
        "uri": "http://dbpedia.org/property/hubs",
        "seq": "13,17",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "hubs",
        "uri": "http://dbpedia.org/property/hubs",
        "seq": "13,17",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "airline",
        "uri": "http://dbpedia.org/ontology/Airline",
        "seq": "25,32",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "How many parties have come in power in elections where Y. S. Rajasekhara Reddy won?",
    "SerialNumber": "4238",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/leader\u003e \u003chttp://dbpedia.org/resource/Y._S._Rajasekhara_Reddy\u003e . ?x \u003chttp://dbpedia.org/ontology/affiliation\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Rajasekhara Reddy",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Y._S._Rajasekhara_Reddy",
        "seq": "61,78"
      }
    ],
    "id": "e6f50ea5f26b41a2bbee70ecae25690d",
    "predicate mapping": [
      {
        "label": "won",
        "uri": "http://dbpedia.org/property/leader",
        "mappedBy": "word2vec"
      },
      {
        "label": "won",
        "uri": "http://dbpedia.org/ontology/affiliation",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "What do typically NGOs work for?",
    "SerialNumber": "4242",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/type\u003e \u003chttp://dbpedia.org/resource/Non-governmental_organization\u003e . ?x \u003chttp://dbpedia.org/property/purpose\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "NGOs",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Non-governmental_organization",
        "seq": "18,22"
      }
    ],
    "id": "285b636ff13c48e1bcd7306d6a9b680a",
    "predicate mapping": [
      {
        "label": "work",
        "uri": "http://dbpedia.org/property/type",
        "mappedBy": "word2vec"
      },
      {
        "label": "work",
        "uri": "http://dbpedia.org/property/purpose",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "405",
    "question": "How many awards have been given to the ones who died of lung cancer?",
    "SerialNumber": "4245",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/deathCause\u003e \u003chttp://dbpedia.org/resource/Lung_cancer\u003e . ?x \u003chttp://dbpedia.org/ontology/award\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Award\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "lung cancer",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Lung_cancer",
        "seq": "56,67"
      }
    ],
    "id": "7fbcbc8dbf064a76a60ec0159eeb54f0",
    "predicate mapping": [
      {
        "label": "died",
        "uri": "http://dbpedia.org/ontology/deathCause",
        "mappedBy": "word2vec"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/award",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/Award",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which show\u0027s network is Prime time Entertainment and has Douglas Netter as executive producer ?",
    "SerialNumber": "4246",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/network\u003e \u003chttp://dbpedia.org/resource/Prime_Time_Entertainment_Network\u003e . ?uri \u003chttp://dbpedia.org/ontology/executiveProducer\u003e \u003chttp://dbpedia.org/resource/Douglas_Netter\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "entertainment network prime time",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Prime_Time_Entertainment_Network",
        "seq": "999,1000"
      },
      {
        "label": "Douglas Netter",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Douglas_Netter",
        "seq": "57,71"
      }
    ],
    "id": "d12e9dcf5e3944eb88c56c3e6cdab8ad",
    "predicate mapping": [
      {
        "label": "network",
        "uri": "http://dbpedia.org/property/network",
        "seq": "13,20",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "executive producer",
        "uri": "http://dbpedia.org/ontology/executiveProducer",
        "seq": "75,93",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "show\u0027s",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "6,12",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "403",
    "question": "How many countries surround the sea into which the Upper Neratva flow?",
    "SerialNumber": "4247",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { \u003chttp://dbpedia.org/resource/Upper_Neretva\u003e \u003chttp://dbpedia.org/ontology/riverMouth\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/country\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Sea\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Upper Neratva",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Upper_Neretva",
        "seq": "51,64"
      }
    ],
    "id": "7b3af4a72c904d328c38aa676e5e556d",
    "predicate mapping": [
      {
        "label": "flow",
        "uri": "http://dbpedia.org/ontology/riverMouth",
        "mappedBy": "word2vec"
      },
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/country",
        "seq": "36,38",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "sea",
        "uri": "http://dbpedia.org/ontology/Sea",
        "seq": "32,35",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "7",
    "question": "Who collaborated with Johnny Cash and Kris Kristofferson ?",
    "SerialNumber": "4248",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/property/associatedActs\u003e \u003chttp://dbpedia.org/resource/Johnny_Cash\u003e . ?uri \u003chttp://dbpedia.org/property/associatedActs\u003e \u003chttp://dbpedia.org/resource/Kris_Kristofferson\u003e . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Johnny Cash",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Johnny_Cash",
        "seq": "22,33"
      },
      {
        "label": "Kris Kristofferson",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Kris_Kristofferson",
        "seq": "38,56"
      }
    ],
    "id": "0ba454c0de9a4184b651f6e7a8d17307",
    "predicate mapping": [
      {
        "label": "collaborated",
        "uri": "http://dbpedia.org/property/associatedActs",
        "mappedBy": "word2vec"
      },
      {
        "label": "collaborated",
        "uri": "http://dbpedia.org/property/associatedActs",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Is the Journal of Cerebral Blood Flow and Metabolism about Brains?",
    "SerialNumber": "4249",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Journal_of_Cerebral_Blood_Flow_\u0026_Metabolism\u003e \u003chttp://dbpedia.org/ontology/academicDiscipline\u003e \u003chttp://dbpedia.org/resource/Brain\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "metabolism cerebral journal blood",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Journal_of_Cerebral_Blood_Flow_\u0026_Metabolism",
        "seq": "999,1000"
      },
      {
        "label": "Brain",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Brain",
        "seq": "59,64"
      }
    ],
    "id": "d8c7892603d64401909742551945fd10",
    "predicate mapping": [
      {
        "label": "Metabolism",
        "uri": "http://dbpedia.org/ontology/academicDiscipline",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "list some shawnee people?",
    "SerialNumber": "4252",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/nationality\u003e \u003chttp://dbpedia.org/resource/Shawnee\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "shawnee people",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Shawnee",
        "seq": "10,24"
      }
    ],
    "id": "8c154ef0c2574f25bdfcee184bd120a9",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/nationality",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "405",
    "question": "Count the birthplaces of recepients of the National Museum of Racing and Hall of Fame.",
    "SerialNumber": "4253",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/honours\u003e \u003chttp://dbpedia.org/resource/National_Museum_of_Racing_and_Hall_of_Fame\u003e . ?x \u003chttp://dbpedia.org/ontology/birthPlace\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Place\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "National Museum of Racing and Hall of Fame",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/National_Museum_of_Racing_and_Hall_of_Fame",
        "seq": "43,85"
      }
    ],
    "id": "705316a27c694cf5ac53ee6bfd9bbed7",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/honours",
        "mappedBy": "word2vec"
      },
      {
        "label": "birthplace",
        "uri": "http://dbpedia.org/ontology/birthPlace",
        "seq": "10,20",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "place",
        "uri": "http://dbpedia.org/ontology/Place",
        "seq": "15,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "List down all the bands to which the writers of 03 Bonnie \u0026 Clyde are associated?",
    "SerialNumber": "4259",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/\u002703_Bonnie_\u0026_Clyde\u003e \u003chttp://dbpedia.org/ontology/writer\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/associatedBand\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "bonnie clyde",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/\u002703_Bonnie_\u0026_Clyde",
        "seq": "999,1000"
      }
    ],
    "id": "ec5f6894f5484d34a2f951ca88436084",
    "predicate mapping": [
      {
        "label": "writers",
        "uri": "http://dbpedia.org/ontology/writer",
        "seq": "37,44",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "associated",
        "uri": "http://dbpedia.org/ontology/associatedBand",
        "seq": "70,80",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which mainter of Pandaruan Bridge is also the land of Malaysia junior Hockey league ?",
    "SerialNumber": "4261",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Pandaruan_Bridge\u003e \u003chttp://dbpedia.org/ontology/maintainedBy\u003e ?uri. \u003chttp://dbpedia.org/resource/Malaysia_Junior_Hockey_League\u003e \u003chttp://dbpedia.org/ontology/country\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Pandaruan Bridge",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Pandaruan_Bridge",
        "seq": "17,33"
      },
      {
        "label": "Malaysia junior Hockey league",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Malaysia_Junior_Hockey_League",
        "seq": "54,83"
      }
    ],
    "id": "b03b5f24df79423eaa4cf91798ceaa81",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/maintainedBy",
        "mappedBy": "word2vec"
      },
      {
        "label": "land",
        "uri": "http://dbpedia.org/ontology/country",
        "seq": "46,50",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Organization holding stocks of  Galician and German wikipedias?",
    "SerialNumber": "4262",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Galician_Wikipedia\u003e \u003chttp://dbpedia.org/property/owner\u003e ?uri. \u003chttp://dbpedia.org/resource/German_Wikipedia\u003e \u003chttp://dbpedia.org/ontology/owner\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Galician_Wikipedia",
        "seq": "999,1000"
      },
      {
        "label": "German wikipedia",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/German_Wikipedia",
        "seq": "45,61"
      }
    ],
    "id": "5b4bb78a68b94d218437f69956f6fba9",
    "predicate mapping": [
      {
        "label": "Galician",
        "uri": "http://dbpedia.org/property/owner",
        "mappedBy": "word2vec"
      },
      {
        "label": "Galician",
        "uri": "http://dbpedia.org/ontology/owner",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "In which companies boards do the writers of Wikitionary belong?",
    "SerialNumber": "4264",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Wiktionary\u003e \u003chttp://dbpedia.org/ontology/author\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/board\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Wiktionary",
        "seq": "999,1000"
      }
    ],
    "id": "dc3368caf7294bbea8b07fd01859706d",
    "predicate mapping": [
      {
        "label": "writers",
        "uri": "http://dbpedia.org/ontology/author",
        "seq": "33,40",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "board",
        "uri": "http://dbpedia.org/ontology/board",
        "seq": "19,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which Monty Python\u0027s movie is distributed by Cinema International Corporation ?",
    "SerialNumber": "4268",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/writer\u003e \u003chttp://dbpedia.org/resource/Monty_Python\u003e . ?uri \u003chttp://dbpedia.org/property/distributor\u003e \u003chttp://dbpedia.org/resource/Cinema_International_Corporation\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Monty Python",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Monty_Python",
        "seq": "6,18"
      },
      {
        "label": "Cinema International Corporation",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Cinema_International_Corporation",
        "seq": "45,77"
      }
    ],
    "id": "f1363bc48be643bd99b68fa31d8b0d19",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/writer",
        "mappedBy": "word2vec"
      },
      {
        "label": "distributed by",
        "uri": "http://dbpedia.org/property/distributor",
        "seq": "30,44",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "21,26",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "402",
    "question": "Count the number of cities around the American Mediterranean Sea?",
    "SerialNumber": "4272",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { \u003chttp://dbpedia.org/resource/American_Mediterranean_Sea\u003e \u003chttp://dbpedia.org/property/cities\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/City\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "American Mediterranean Sea",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/American_Mediterranean_Sea",
        "seq": "38,64"
      }
    ],
    "id": "82ce66b7bf8f4a0dae15269c66cc2753",
    "predicate mapping": [
      {
        "label": "cities",
        "uri": "http://dbpedia.org/property/cities",
        "seq": "20,26",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "number",
        "uri": "http://dbpedia.org/ontology/City",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "What are some employees of Uni of California, santa cruz?",
    "SerialNumber": "4273",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/employer\u003e \u003chttp://dbpedia.org/resource/University_of_California,_Santa_Cruz\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "California",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/University_of_California,_Santa_Cruz",
        "seq": "34,44"
      }
    ],
    "id": "3412c129527f4e78a14421f84b364adf",
    "predicate mapping": [
      {
        "label": "cruz",
        "uri": "http://dbpedia.org/property/employer",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "What is the parent company of PrivateCore?",
    "SerialNumber": "4274",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/subsidiary\u003e \u003chttp://dbpedia.org/resource/PrivateCore\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "PrivateCore",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/PrivateCore",
        "seq": "30,41"
      }
    ],
    "id": "68d3363523454c20b8b113b8ca87eaed",
    "predicate mapping": [
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/subsidiary",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "102",
    "question": "Over how many cities did the Bellaton MMA, Season 11 take place?",
    "SerialNumber": "4275",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { \u003chttp://dbpedia.org/resource/Bellator_MMA:_Season_Eleven\u003e \u003chttp://dbpedia.org/property/city\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Bellator_MMA:_Season_Eleven",
        "seq": "999,1000"
      }
    ],
    "id": "3e719418e0ae4a06bc1819295c66394e",
    "predicate mapping": [
      {
        "label": "place",
        "uri": "http://dbpedia.org/property/city",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the hockey team which has head coach as Mike babcock and is based in Toronto ?",
    "SerialNumber": "4279",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/locationCity\u003e \u003chttp://dbpedia.org/resource/Toronto\u003e . ?uri \u003chttp://dbpedia.org/property/headCoach\u003e \u003chttp://dbpedia.org/resource/Mike_Babcock\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/HockeyTeam\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Toronto",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Toronto",
        "seq": "74,81"
      },
      {
        "label": "Mike babcock",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Mike_Babcock",
        "seq": "45,57"
      }
    ],
    "id": "7657e13a3b7e4ab58937e184cef0f93d",
    "predicate mapping": [
      {
        "label": "based",
        "uri": "http://dbpedia.org/ontology/locationCity",
        "mappedBy": "word2vec"
      },
      {
        "label": "head coach",
        "uri": "http://dbpedia.org/property/headCoach",
        "seq": "31,41",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "hockey team",
        "uri": "http://dbpedia.org/ontology/HockeyTeam",
        "seq": "9,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which incumbent of Al Gore presidential campaign wass also the president of Mike McCurry ?",
    "SerialNumber": "4280",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Mike_McCurry_(press_secretary)\u003e \u003chttp://dbpedia.org/ontology/president\u003e ?uri. \u003chttp://dbpedia.org/resource/Al_Gore_presidential_campaign,_2000\u003e \u003chttp://dbpedia.org/ontology/incumbent\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Mike McCurry",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Mike_McCurry_(press_secretary)",
        "seq": "76,88"
      },
      {
        "label": "presidential campaign gore",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Al_Gore_presidential_campaign,_2000",
        "seq": "999,1000"
      }
    ],
    "id": "b630eb72fd3f4ca194622759e3fdeb79",
    "predicate mapping": [
      {
        "label": "president",
        "uri": "http://dbpedia.org/ontology/president",
        "seq": "27,36",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "incumbent",
        "uri": "http://dbpedia.org/ontology/incumbent",
        "seq": "6,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Where in the us military did pierre r graham and edwin f hunter work?",
    "SerialNumber": "4283",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Pierre_R._Graham\u003e \u003chttp://dbpedia.org/property/branch\u003e ?uri. \u003chttp://dbpedia.org/resource/Edwin_F._Hunter\u003e \u003chttp://dbpedia.org/property/branch\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "pierre graham",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Pierre_R._Graham",
        "seq": "999,1000"
      },
      {
        "label": "hunter edwin",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Edwin_F._Hunter",
        "seq": "999,1000"
      }
    ],
    "id": "e5477236f4194919a7df41836fd59a7b",
    "predicate mapping": [
      {
        "label": "work",
        "uri": "http://dbpedia.org/property/branch",
        "mappedBy": "word2vec"
      },
      {
        "label": "work",
        "uri": "http://dbpedia.org/property/branch",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "405",
    "question": "In how many different highschools have people schooled in Penn State Nittany Lions football studied?",
    "SerialNumber": "4285",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/school\u003e \u003chttp://dbpedia.org/resource/Penn_State_Nittany_Lions_football\u003e . ?x \u003chttp://dbpedia.org/property/highschool\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/EducationalInstitution\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Penn State Nittany Lions football",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Penn_State_Nittany_Lions_football",
        "seq": "58,91"
      }
    ],
    "id": "f012a543e72c4aea922b35c177311d35",
    "predicate mapping": [
      {
        "label": "school",
        "uri": "http://dbpedia.org/ontology/school",
        "seq": "26,32",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "highschool",
        "uri": "http://dbpedia.org/property/highschool",
        "seq": "22,32",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "studied",
        "uri": "http://dbpedia.org/ontology/EducationalInstitution",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "What are some products of the the company whose subsidiary is Sony Corp shareholders and subsidies?",
    "SerialNumber": "4286",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/subsidiary\u003e \u003chttp://dbpedia.org/resource/Sony_Corporation_shareholders_and_subsidiaries\u003e . ?uri \u003chttp://dbpedia.org/ontology/manufacturer\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Sony Corp",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Sony_Corporation_shareholders_and_subsidiaries",
        "seq": "62,71"
      }
    ],
    "id": "28d65bdcbc9a48288e72664ab13c4ddc",
    "predicate mapping": [
      {
        "label": "subsidiary",
        "uri": "http://dbpedia.org/ontology/subsidiary",
        "seq": "48,58",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "subsidies",
        "uri": "http://dbpedia.org/ontology/manufacturer",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "In which races did the horses of Mon Capitaine take part?",
    "SerialNumber": "4292",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/sire\u003e \u003chttp://dbpedia.org/resource/Mon_Capitaine\u003e . ?x \u003chttp://dbpedia.org/property/race\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Horse\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Mon Capitaine",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Mon_Capitaine",
        "seq": "33,46"
      }
    ],
    "id": "12e72b1d62c843d09c2b6f02cab2cd04",
    "predicate mapping": [
      {
        "label": "part",
        "uri": "http://dbpedia.org/ontology/sire",
        "mappedBy": "word2vec"
      },
      {
        "label": "race",
        "uri": "http://dbpedia.org/property/race",
        "seq": "9,13",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "horse",
        "uri": "http://dbpedia.org/ontology/Horse",
        "seq": "23,28",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which fictional character portrayed in Terminator 2: Judgment Day is painted by Josh Friedman?",
    "SerialNumber": "4298",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/portrayer\u003e \u003chttp://dbpedia.org/resource/Terminator_2:_Judgment_Day\u003e . ?uri \u003chttp://dbpedia.org/ontology/creator\u003e \u003chttp://dbpedia.org/resource/Josh_Friedman\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/FictionalCharacter\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Terminator 2: Judgment Day",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Terminator_2:_Judgment_Day",
        "seq": "39,65"
      },
      {
        "label": "Josh Friedman",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Josh_Friedman",
        "seq": "80,93"
      }
    ],
    "id": "380331c1f63e4822be0531e79d89d530",
    "predicate mapping": [
      {
        "label": "portrayed",
        "uri": "http://dbpedia.org/ontology/portrayer",
        "seq": "26,35",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "uri": "http://dbpedia.org/ontology/creator",
        "mappedBy": "word2vec"
      },
      {
        "label": "fictional character",
        "uri": "http://dbpedia.org/ontology/FictionalCharacter",
        "seq": "6,25",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What is the base currency of the country which operates the Marion Dufresne?",
    "SerialNumber": "4301",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Marion_Dufresne_(1995)\u003e \u003chttp://dbpedia.org/ontology/operator\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/currency\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Marion Dufresne",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Marion_Dufresne_(1995)",
        "seq": "60,75"
      }
    ],
    "id": "e887507cbcda4bd8956a82825a4a84ac",
    "predicate mapping": [
      {
        "label": "operates",
        "uri": "http://dbpedia.org/ontology/operator",
        "mappedBy": "word2vec"
      },
      {
        "label": "base currency",
        "uri": "http://dbpedia.org/ontology/currency",
        "seq": "12,25",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "Journals of how many fields can be found in US?",
    "SerialNumber": "4302",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/country\u003e \u003chttp://dbpedia.org/resource/United_States\u003e . ?x \u003chttp://dbpedia.org/property/discipline\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "US",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/United_States",
        "seq": "44,46"
      }
    ],
    "id": "6f8cdbe8fb024dcbb7da14e008bca23c",
    "predicate mapping": [
      {
        "label": "found",
        "uri": "http://dbpedia.org/property/country",
        "mappedBy": "word2vec"
      },
      {
        "label": "fields",
        "uri": "http://dbpedia.org/property/discipline",
        "seq": "21,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "People born in Saint-Amand-en-Puisaye are famous for what things ?",
    "SerialNumber": "4307",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/birthPlace\u003e \u003chttp://dbpedia.org/resource/Saint-Amand-en-Puisaye\u003e . ?x \u003chttp://dbpedia.org/property/knownFor\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Saint-Amand-en-Puisaye",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Saint-Amand-en-Puisaye",
        "seq": "16,38"
      }
    ],
    "id": "88fe848accd14ee5a63e3264234651e8",
    "predicate mapping": [
      {
        "label": "born in",
        "uri": "http://dbpedia.org/ontology/birthPlace",
        "seq": "7,14",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "things",
        "uri": "http://dbpedia.org/property/knownFor",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Radios on what topics can be tuned in to in Washington DC?",
    "SerialNumber": "4308",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/broadcastArea\u003e \u003chttp://dbpedia.org/resource/Washington,_D.C.\u003e . ?x \u003chttp://dbpedia.org/ontology/programmeFormat\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/RadioStation\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Washington",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Washington,_D.C.",
        "seq": "44,54"
      }
    ],
    "id": "4dbb409284b34e848777db3a91349022",
    "predicate mapping": [
      {
        "label": "DC",
        "uri": "http://dbpedia.org/ontology/broadcastArea",
        "mappedBy": "word2vec"
      },
      {
        "uri": "http://dbpedia.org/ontology/programmeFormat",
        "mappedBy": "word2vec"
      },
      {
        "label": "radios",
        "uri": "http://dbpedia.org/ontology/RadioStation",
        "seq": "-1,5",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "List the goverener of Winston Bryant?",
    "SerialNumber": "4309",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Winston_Bryant\u003e \u003chttp://dbpedia.org/property/governor\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Winston Bryant",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Winston_Bryant",
        "seq": "22,36"
      }
    ],
    "id": "5088b38a69ba4f1f9f7c17c493dbb67e",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/governor",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the musician who was given label by Celluloid Records and has been associated with Africa\u002770 ?",
    "SerialNumber": "4311",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/label\u003e \u003chttp://dbpedia.org/resource/Celluloid_Records\u003e . ?uri \u003chttp://dbpedia.org/ontology/associatedMusicalArtist\u003e \u003chttp://dbpedia.org/resource/Africa_\u002770_(band)\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MusicalArtist\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Celluloid Records",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Celluloid_Records",
        "seq": "41,58"
      },
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Africa_\u002770_(band)",
        "seq": "999,1000"
      }
    ],
    "id": "aa54fbc2c1df4f47af6e7a074f77535f",
    "predicate mapping": [
      {
        "label": "label",
        "uri": "http://dbpedia.org/property/label",
        "seq": "32,37",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "associated",
        "uri": "http://dbpedia.org/ontology/associatedMusicalArtist",
        "seq": "72,82",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "musician",
        "uri": "http://dbpedia.org/ontology/MusicalArtist",
        "seq": "9,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the country where Sergei Ovchinnikov the volleyball player die, and Gumus was first aired ?",
    "SerialNumber": "4312",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Gümüş_(TV_series)\u003e \u003chttp://dbpedia.org/property/firstAired\u003e ?uri. \u003chttp://dbpedia.org/resource/Sergei_Ovchinnikov_(volleyball)\u003e \u003chttp://dbpedia.org/property/placeOfDeath\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Gümüş_(TV_series)",
        "seq": "999,1000"
      },
      {
        "label": "Sergei Ovchinnikov",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Sergei_Ovchinnikov_(volleyball)",
        "seq": "26,44"
      }
    ],
    "id": "a74c7e7aafe049f6b82e092e907da465",
    "predicate mapping": [
      {
        "label": "first aired",
        "uri": "http://dbpedia.org/property/firstAired",
        "seq": "86,97",
        "mappedBy": "byLabelMatch"
      },
      {
        "uri": "http://dbpedia.org/property/placeOfDeath",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Does Walson Augustin play for the Brothers Union?",
    "SerialNumber": "4315",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Walson_Augustin\u003e \u003chttp://dbpedia.org/property/currentclub\u003e \u003chttp://dbpedia.org/resource/Brothers_Union\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Walson Augustin",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Walson_Augustin",
        "seq": "5,20"
      },
      {
        "label": "Brothers Union",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Brothers_Union",
        "seq": "34,48"
      }
    ],
    "id": "f08511a93db54c32a2dcbc4a4f4d74d4",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/currentclub",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What are the prizes won by the animator of The Skeleton Dance ?",
    "SerialNumber": "4316",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/The_Skeleton_Dance\u003e \u003chttp://dbpedia.org/ontology/animator\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/award\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "The Skeleton Dance",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/The_Skeleton_Dance",
        "seq": "43,61"
      }
    ],
    "id": "216cc8eb3adc4058b3dae6dc542bc2cc",
    "predicate mapping": [
      {
        "label": "animator",
        "uri": "http://dbpedia.org/ontology/animator",
        "seq": "31,39",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "won",
        "uri": "http://dbpedia.org/ontology/award",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "List the Swedish newspaper headquarted in Stockholm ? ",
    "SerialNumber": "4317",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/language\u003e \u003chttp://dbpedia.org/resource/Swedish_language\u003e . ?uri \u003chttp://dbpedia.org/property/headquarters\u003e \u003chttp://dbpedia.org/resource/Stockholm\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Newspaper\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "swedish",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Swedish_language",
        "seq": "999,1000"
      },
      {
        "label": "Stockholm",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Stockholm",
        "seq": "42,51"
      }
    ],
    "id": "12811fd9d1ea480ca482f1b7a6f61ea8",
    "predicate mapping": [
      {
        "label": "Swedish",
        "uri": "http://dbpedia.org/property/language",
        "mappedBy": "word2vec"
      },
      {
        "label": "headquarted",
        "uri": "http://dbpedia.org/property/headquarters",
        "seq": "27,38",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "newspaper",
        "uri": "http://dbpedia.org/ontology/Newspaper",
        "seq": "17,26",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "How many different writers have written for Jump Square?",
    "SerialNumber": "4323",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/magazine\u003e \u003chttp://dbpedia.org/resource/Jump_Square\u003e . ?x \u003chttp://dbpedia.org/property/author\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jump Square",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Jump_Square",
        "seq": "44,55"
      }
    ],
    "id": "5d24a8016b944ebd949de53d198f4823",
    "predicate mapping": [
      {
        "label": "written",
        "uri": "http://dbpedia.org/property/magazine",
        "mappedBy": "word2vec"
      },
      {
        "label": "writers",
        "uri": "http://dbpedia.org/property/author",
        "seq": "19,26",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "401",
    "question": "How many politicians reside in Cape Town?",
    "SerialNumber": "4326",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/property/residence\u003e \u003chttp://dbpedia.org/resource/Cape_Town\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/OfficeHolder\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Cape Town",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Cape_Town",
        "seq": "31,40"
      }
    ],
    "id": "2067b624202249069e8e6fa28ea3b460",
    "predicate mapping": [
      {
        "label": "reside",
        "uri": "http://dbpedia.org/property/residence",
        "seq": "21,27",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "politicians",
        "uri": "http://dbpedia.org/ontology/OfficeHolder",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who wrote the mangas produced by Masahike Minami?",
    "SerialNumber": "4327",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/producer\u003e \u003chttp://dbpedia.org/resource/Masahiko_Minami\u003e . ?x \u003chttp://dbpedia.org/ontology/author\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Manga\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Masahike Minami",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Masahiko_Minami",
        "seq": "33,48"
      }
    ],
    "id": "08222072602a432fb36950cb1d93428a",
    "predicate mapping": [
      {
        "label": "produced",
        "uri": "http://dbpedia.org/property/producer",
        "seq": "21,29",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "wrote",
        "uri": "http://dbpedia.org/ontology/author",
        "mappedBy": "word2vec"
      },
      {
        "label": "manga",
        "uri": "http://dbpedia.org/ontology/Manga",
        "seq": "14,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "How many architects are there who have made something used by Oakland athletics?",
    "SerialNumber": "4329",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/tenant\u003e \u003chttp://dbpedia.org/resource/Oakland_Athletics\u003e . ?x \u003chttp://dbpedia.org/property/architect\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Oakland athletics",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Oakland_Athletics",
        "seq": "62,79"
      }
    ],
    "id": "acbfdfd774604545abda627572f18dca",
    "predicate mapping": [
      {
        "label": "made",
        "uri": "http://dbpedia.org/ontology/tenant",
        "mappedBy": "word2vec"
      },
      {
        "label": "architect",
        "uri": "http://dbpedia.org/property/architect",
        "seq": "9,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Who has canonized someone who\u0027s a doctor of the church?",
    "SerialNumber": "4330",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/titles\u003e \u003chttp://dbpedia.org/resource/Doctor_of_the_Church\u003e . ?x \u003chttp://dbpedia.org/ontology/canonizedBy\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "doctor of the church",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Doctor_of_the_Church",
        "seq": "34,54"
      }
    ],
    "id": "9cf295983ac2497eaa90acc50a0e9839",
    "predicate mapping": [
      {
        "label": "who\u0027s",
        "uri": "http://dbpedia.org/property/titles",
        "mappedBy": "word2vec"
      },
      {
        "label": "canonized",
        "uri": "http://dbpedia.org/ontology/canonizedBy",
        "seq": "8,17",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "What municipalities are adjacent to Chne-Bougeries?",
    "SerialNumber": "4335",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/neighboringMunicipalities\u003e \u003chttp://dbpedia.org/resource/Chêne-Bougeries\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Chêne-Bougeries",
        "seq": "999,1000"
      }
    ],
    "id": "3bf63415902341c8804e4053a565b1cc",
    "predicate mapping": [
      {
        "label": "municipalities",
        "uri": "http://dbpedia.org/property/neighboringMunicipalities",
        "seq": "5,19",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which river\u0027s source mountain is Baikal Mountains and is located in Laptev Sea ?",
    "SerialNumber": "4338",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/sourceMountain\u003e \u003chttp://dbpedia.org/resource/Baikal_Mountains\u003e . ?uri \u003chttp://dbpedia.org/property/mouthLocation\u003e \u003chttp://dbpedia.org/resource/Laptev_Sea\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/River\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Baikal Mountains",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Baikal_Mountains",
        "seq": "33,49"
      },
      {
        "label": "Laptev Sea",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Laptev_Sea",
        "seq": "68,78"
      }
    ],
    "id": "6597dba043f3446ab99c8ec65686e304",
    "predicate mapping": [
      {
        "label": "source mountain",
        "uri": "http://dbpedia.org/ontology/sourceMountain",
        "seq": "14,29",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "located",
        "uri": "http://dbpedia.org/property/mouthLocation",
        "mappedBy": "word2vec"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River",
        "seq": "6,11",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What are some musical artists associated with the ones signed up with EMI?",
    "SerialNumber": "4339",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/recordLabel\u003e \u003chttp://dbpedia.org/resource/EMI\u003e . ?x \u003chttp://dbpedia.org/ontology/associatedMusicalArtist\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MusicalArtist\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "EMI",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/EMI",
        "seq": "70,73"
      }
    ],
    "id": "c1be660170c343e1a9cfe8079b722267",
    "predicate mapping": [
      {
        "label": "signed",
        "uri": "http://dbpedia.org/ontology/recordLabel",
        "mappedBy": "word2vec"
      },
      {
        "label": "associated musical",
        "uri": "http://dbpedia.org/ontology/associatedMusicalArtist",
        "seq": "-1,17",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "musical artist",
        "uri": "http://dbpedia.org/ontology/MusicalArtist",
        "seq": "14,28",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Give me the list of people who scaled mountains in Sierra Nevada?",
    "SerialNumber": "4343",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/mountainRange\u003e \u003chttp://dbpedia.org/resource/Sierra_Nevada_(U.S.)\u003e . ?x \u003chttp://dbpedia.org/ontology/firstAscentPerson\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Sierra Nevada",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Sierra_Nevada_(U.S.)",
        "seq": "51,64"
      }
    ],
    "id": "b9af1aab1cdb4df3b8aad53370c82fd7",
    "predicate mapping": [
      {
        "label": "mountains",
        "uri": "http://dbpedia.org/ontology/mountainRange",
        "seq": "38,47",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "uri": "http://dbpedia.org/ontology/firstAscentPerson",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "Who studied in universities located in suburbs?",
    "SerialNumber": "4344",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/campus\u003e \u003chttp://dbpedia.org/resource/Suburb\u003e . ?uri \u003chttp://dbpedia.org/property/education\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "suburb",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Suburb",
        "seq": "39,45"
      }
    ],
    "id": "de004bcd703247ab981d0d8784c0b7e0",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/ontology/campus",
        "mappedBy": "word2vec"
      },
      {
        "label": "located",
        "uri": "http://dbpedia.org/property/education",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the river with Readin, Brekshire in its path and mouth place is Sothend-on-sea ?",
    "SerialNumber": "4345",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/city\u003e \u003chttp://dbpedia.org/resource/Reading,_Berkshire\u003e . ?uri \u003chttp://dbpedia.org/ontology/mouthPlace\u003e \u003chttp://dbpedia.org/resource/Southend-on-Sea\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/River\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Reading,_Berkshire",
        "seq": "999,1000"
      },
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Southend-on-Sea",
        "seq": "999,1000"
      }
    ],
    "id": "ce0a65de462c4482be2bcc4c57c67e39",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/property/city",
        "seq": "24,26",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "mouth place",
        "uri": "http://dbpedia.org/ontology/mouthPlace",
        "seq": "54,65",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "7",
    "question": "Who  won the Lovelace Medal and the Norbert Wiener Award for Social and Professional Responsibility?",
    "SerialNumber": "4355",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/property/prizes\u003e \u003chttp://dbpedia.org/resource/Lovelace_Medal\u003e . ?uri \u003chttp://dbpedia.org/property/prizes\u003e \u003chttp://dbpedia.org/resource/Norbert_Wiener_Award_for_Social_and_Professional_Responsibility\u003e . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Lovelace Medal",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Lovelace_Medal",
        "seq": "13,27"
      },
      {
        "label": "Norbert Wiener Award for Social and Professional Responsibility",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Norbert_Wiener_Award_for_Social_and_Professional_Responsibility",
        "seq": "36,99"
      }
    ],
    "id": "7d3aa7abddce4885924e51a17c2b5e0d",
    "predicate mapping": [
      {
        "label": "won",
        "uri": "http://dbpedia.org/property/prizes",
        "mappedBy": "word2vec"
      },
      {
        "label": "won",
        "uri": "http://dbpedia.org/property/prizes",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which TV show\u0027s setting is in Massachusetts and is the subsequent work of Fraiser ?",
    "SerialNumber": "4357",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/subsequentWork\u003e \u003chttp://dbpedia.org/resource/Frasier\u003e . ?uri \u003chttp://dbpedia.org/ontology/location\u003e \u003chttp://dbpedia.org/resource/Massachusetts\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Frasier",
        "seq": "999,1000"
      },
      {
        "label": "Massachusetts",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Massachusetts",
        "seq": "30,43"
      }
    ],
    "id": "179e610843e145489491954c3a91b179",
    "predicate mapping": [
      {
        "label": "subsequent work",
        "uri": "http://dbpedia.org/ontology/subsequentWork",
        "seq": "55,70",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "Fraiser",
        "uri": "http://dbpedia.org/ontology/location",
        "mappedBy": "word2vec"
      },
      {
        "label": "show\u0027s",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "9,15",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the company whose key person is Raymond Conner and produces Boeing CH-47 Chinook?",
    "SerialNumber": "4361",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/keyPeople\u003e \u003chttp://dbpedia.org/resource/Raymond_Conner\u003e . ?uri \u003chttp://dbpedia.org/property/products\u003e \u003chttp://dbpedia.org/resource/Boeing_CH-47_Chinook\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Company\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Raymond Conner",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Raymond_Conner",
        "seq": "37,51"
      },
      {
        "label": "Boeing CH-47 Chinook",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Boeing_CH-47_Chinook",
        "seq": "65,85"
      }
    ],
    "id": "59b915743bb142afb10240174db2a7d0",
    "predicate mapping": [
      {
        "label": "key",
        "uri": "http://dbpedia.org/property/keyPeople",
        "seq": "23,26",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "produces",
        "uri": "http://dbpedia.org/property/products",
        "mappedBy": "word2vec"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company",
        "seq": "9,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "101",
    "question": "How many famous people are from the Filipinos?",
    "SerialNumber": "4362",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/ontology/stateOfOrigin\u003e \u003chttp://dbpedia.org/resource/Filipinos\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Filipinos",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Filipinos",
        "seq": "36,45"
      }
    ],
    "id": "1f6af3eda6964bc7a5230797aaa04e0f",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/stateOfOrigin",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who is considered to be the deciding person when it comes to crustaceans from the Balanidae family?",
    "SerialNumber": "4365",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/family\u003e \u003chttp://dbpedia.org/resource/Balanidae\u003e . ?x \u003chttp://dbpedia.org/ontology/binomialAuthority\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Crustacean\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Balanidae",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Balanidae",
        "seq": "82,91"
      }
    ],
    "id": "4803820b51af42549d4d664118ac2d00",
    "predicate mapping": [
      {
        "label": "family",
        "uri": "http://dbpedia.org/ontology/family",
        "seq": "92,98",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/binomialAuthority",
        "mappedBy": "word2vec"
      },
      {
        "label": "crustacean",
        "uri": "http://dbpedia.org/ontology/Crustacean",
        "seq": "61,71",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the subsidary of Tandem Computers which was founded by Jim Harris ?",
    "SerialNumber": "4369",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/subsidiary\u003e \u003chttp://dbpedia.org/resource/Tandem_Computers\u003e . ?uri \u003chttp://dbpedia.org/ontology/foundedBy\u003e \u003chttp://dbpedia.org/resource/Jim_Harris_(entrepreneur)\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Company\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Tandem Computers",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Tandem_Computers",
        "seq": "22,38"
      },
      {
        "label": "Jim Harris",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Jim_Harris_(entrepreneur)",
        "seq": "60,70"
      }
    ],
    "id": "0e868d8761e84ba0981c4780e8fd572f",
    "predicate mapping": [
      {
        "label": "subsidary",
        "uri": "http://dbpedia.org/ontology/subsidiary",
        "mappedBy": "word2vec"
      },
      {
        "label": "was founded by",
        "uri": "http://dbpedia.org/ontology/foundedBy",
        "seq": "45,59",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "subsidary",
        "uri": "http://dbpedia.org/ontology/Company",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "7",
    "question": "Who is  related to Kelly Osbourne \u0026 Ozzy Osbourne?",
    "SerialNumber": "4371",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/property/relatives\u003e \u003chttp://dbpedia.org/resource/Kelly_Osbourne\u003e . ?uri \u003chttp://dbpedia.org/property/relatives\u003e \u003chttp://dbpedia.org/resource/Ozzy_Osbourne\u003e . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Kelly Osbourne",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Kelly_Osbourne",
        "seq": "19,33"
      },
      {
        "label": "Ozzy Osbourne",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ozzy_Osbourne",
        "seq": "36,49"
      }
    ],
    "id": "53694c0e5c2548419756478331137c13",
    "predicate mapping": [
      {
        "label": "related",
        "uri": "http://dbpedia.org/property/relatives",
        "mappedBy": "word2vec"
      },
      {
        "label": "related",
        "uri": "http://dbpedia.org/property/relatives",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "What are some things people born in Louisiana are famous for?",
    "SerialNumber": "4376",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/placeOfBirth\u003e \u003chttp://dbpedia.org/resource/Louisiana\u003e . ?x \u003chttp://dbpedia.org/property/knownFor\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Louisiana",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Louisiana",
        "seq": "36,45"
      }
    ],
    "id": "7b6a1325fab14f1c91fb9c24f98be16c",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/placeOfBirth",
        "mappedBy": "word2vec"
      },
      {
        "label": "famous",
        "uri": "http://dbpedia.org/property/knownFor",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Is Neungin High school a buddhist school?",
    "SerialNumber": "4377",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Neungin_High_School\u003e \u003chttp://dbpedia.org/property/religiousAffiliation\u003e \u003chttp://dbpedia.org/resource/Buddhism\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Neungin High school",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Neungin_High_School",
        "seq": "3,22"
      },
      {
        "label": "buddhist",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Buddhism",
        "seq": "25,33"
      }
    ],
    "id": "c51d1f39ce0e4040be9f32af0eefad06",
    "predicate mapping": [
      {
        "label": "school",
        "uri": "http://dbpedia.org/property/religiousAffiliation",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "106",
    "question": "How many people have played for the ones who own the stadium of Bankers Life Fieldhouse?",
    "SerialNumber": "4379",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/arena\u003e \u003chttp://dbpedia.org/resource/Bankers_Life_Fieldhouse\u003e . ?uri \u003chttp://dbpedia.org/property/team\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Bankers Life Fieldhouse",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Bankers_Life_Fieldhouse",
        "seq": "64,87"
      }
    ],
    "id": "c0ee1e99d29e4deb86fc700898d5bed5",
    "predicate mapping": [
      {
        "label": "stadium",
        "uri": "http://dbpedia.org/property/arena",
        "mappedBy": "word2vec"
      },
      {
        "label": "stadium",
        "uri": "http://dbpedia.org/property/team",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "402",
    "question": "Count the battles fought by Raoul Magrin-Vernerey?",
    "SerialNumber": "4381",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { \u003chttp://dbpedia.org/resource/Raoul_Magrin-Vernerey\u003e \u003chttp://dbpedia.org/property/battles\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MilitaryConflict\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Raoul Magrin-Vernerey",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Raoul_Magrin-Vernerey",
        "seq": "28,49"
      }
    ],
    "id": "074f740dbbf64210b7a84f51d6f9e6bd",
    "predicate mapping": [
      {
        "label": "battles",
        "uri": "http://dbpedia.org/property/battles",
        "seq": "10,17",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "fought",
        "uri": "http://dbpedia.org/ontology/MilitaryConflict",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Who are the people whose phD advisor was Harry Harlow?",
    "SerialNumber": "4383",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/doctoralAdvisor\u003e \u003chttp://dbpedia.org/resource/Harry_Harlow\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Harry Harlow",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Harry_Harlow",
        "seq": "41,53"
      }
    ],
    "id": "a0360818041d40528ccba0161760b180",
    "predicate mapping": [
      {
        "label": "phD advisor",
        "uri": "http://dbpedia.org/property/doctoralAdvisor",
        "seq": "25,36",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "people",
        "uri": "http://dbpedia.org/ontology/Person",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "Which sitcoms are made by a company headquartered in NYC?",
    "SerialNumber": "4386",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/headquarter\u003e \u003chttp://dbpedia.org/resource/New_York_City\u003e . ?uri \u003chttp://dbpedia.org/ontology/company\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/New_York_City",
        "seq": "999,1000"
      }
    ],
    "id": "21af0cba33be4e3a978696b579445972",
    "predicate mapping": [
      {
        "label": "headquarter",
        "uri": "http://dbpedia.org/ontology/headquarter",
        "seq": "36,47",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/company",
        "seq": "28,35",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "NYC",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "Which river starts from the county seat of Heathsville, Virginia?",
    "SerialNumber": "4389",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/countySeat\u003e \u003chttp://dbpedia.org/resource/Heathsville,_Virginia\u003e . ?uri \u003chttp://dbpedia.org/property/mouthLocation\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/River\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Heathsville, Virginia",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Heathsville,_Virginia",
        "seq": "43,64"
      }
    ],
    "id": "1c466c5bdf984fa28bf9ba070374e8a8",
    "predicate mapping": [
      {
        "label": "county seat",
        "uri": "http://dbpedia.org/ontology/countySeat",
        "seq": "28,39",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "starts",
        "uri": "http://dbpedia.org/property/mouthLocation",
        "mappedBy": "word2vec"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River",
        "seq": "6,11",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Where were sverre krogh sundbo and havard vad petersson born?",
    "SerialNumber": "4390",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Sverre_Krogh_Sundbø\u003e \u003chttp://dbpedia.org/property/birthPlace\u003e ?uri. \u003chttp://dbpedia.org/resource/Håvard_Vad_Petersson\u003e \u003chttp://dbpedia.org/property/placeOfBirth\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "sverre krogh sundbo",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Sverre_Krogh_Sundbø",
        "seq": "11,30"
      },
      {
        "label": "petersson",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Håvard_Vad_Petersson",
        "seq": "999,1000"
      }
    ],
    "id": "be80acb7f7b34c65b0e6ea8452711a51",
    "predicate mapping": [
      {
        "label": "born",
        "uri": "http://dbpedia.org/property/birthPlace",
        "seq": "56,60",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "uri": "http://dbpedia.org/property/placeOfBirth",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "where is the thorington train station located?",
    "SerialNumber": "4391",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Thorington_railway_station\u003e \u003chttp://dbpedia.org/ontology/district\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "thorington station",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Thorington_railway_station",
        "seq": "999,1000"
      }
    ],
    "id": "a0f82706207747b0b7e49ff34a2321ab",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/district",
        "seq": "17,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the company founded in US and created Visual Studio ?",
    "SerialNumber": "4394",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/foundation\u003e \u003chttp://dbpedia.org/resource/United_States\u003e . ?uri \u003chttp://dbpedia.org/property/products\u003e \u003chttp://dbpedia.org/resource/Microsoft_Visual_Studio\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Company\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/United_States",
        "seq": "999,1000"
      },
      {
        "label": "Visual Studio",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Microsoft_Visual_Studio",
        "seq": "43,56"
      }
    ],
    "id": "534aa17cdbb94593be95eb3051ede21e",
    "predicate mapping": [
      {
        "label": "founded",
        "uri": "http://dbpedia.org/property/foundation",
        "seq": "17,24",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "created",
        "uri": "http://dbpedia.org/property/products",
        "mappedBy": "word2vec"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company",
        "seq": "9,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "What are the albums whose artists have performed with the Tangerine Dream?",
    "SerialNumber": "4397",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/associatedBand\u003e \u003chttp://dbpedia.org/resource/Tangerine_Dream\u003e . ?uri \u003chttp://dbpedia.org/property/artist\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Album\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Tangerine Dream",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Tangerine_Dream",
        "seq": "58,73"
      }
    ],
    "id": "5e45892fa3ce4473ba70cdeecaff4d39",
    "predicate mapping": [
      {
        "label": "performed",
        "uri": "http://dbpedia.org/ontology/associatedBand",
        "mappedBy": "word2vec"
      },
      {
        "label": "artist",
        "uri": "http://dbpedia.org/property/artist",
        "seq": "26,32",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "album",
        "uri": "http://dbpedia.org/ontology/Album",
        "seq": "13,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Which house has published books about Jazz?",
    "SerialNumber": "4398",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/nonFictionSubject\u003e \u003chttp://dbpedia.org/resource/Jazz\u003e . ?x \u003chttp://dbpedia.org/ontology/publisher\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Book\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jazz",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Jazz",
        "seq": "38,42"
      }
    ],
    "id": "aa8ca34e4003474990f876a54b184d6b",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/nonFictionSubject",
        "mappedBy": "word2vec"
      },
      {
        "label": "published",
        "uri": "http://dbpedia.org/ontology/publisher",
        "seq": "16,25",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "book",
        "uri": "http://dbpedia.org/ontology/Book",
        "seq": "26,30",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which sucessor of George Madison is the sucessor of levi Lincoln, Sr. ?",
    "SerialNumber": "4406",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/George_Madison\u003e \u003chttp://dbpedia.org/ontology/relation\u003e ?uri. \u003chttp://dbpedia.org/resource/Levi_Lincoln,_Sr.\u003e \u003chttp://dbpedia.org/property/successor\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "George Madison",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/George_Madison",
        "seq": "18,32"
      },
      {
        "label": "levi Lincoln, Sr.",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Levi_Lincoln,_Sr.",
        "seq": "52,69"
      }
    ],
    "id": "2fb718468f46401ea78bc4721495af49",
    "predicate mapping": [
      {
        "label": "sucessor",
        "uri": "http://dbpedia.org/ontology/relation",
        "mappedBy": "word2vec"
      },
      {
        "label": "sucessor",
        "uri": "http://dbpedia.org/property/successor",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "316",
    "question": "What team is famous for Robert Nederlander and also the debuting team of Gary Sanchez?",
    "SerialNumber": "4408",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Robert_Nederlander\u003e \u003chttp://dbpedia.org/ontology/knownFor\u003e ?uri. \u003chttp://dbpedia.org/resource/Gary_Sánchez\u003e \u003chttp://dbpedia.org/ontology/debutTeam\u003e ?uri . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/SportsTeam\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Robert Nederlander",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Robert_Nederlander",
        "seq": "24,42"
      },
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Gary_Sánchez",
        "seq": "999,1000"
      }
    ],
    "id": "a0ea895157fe4bc6ac0e2ac8f852f6b0",
    "predicate mapping": [
      {
        "label": "Sanchez",
        "uri": "http://dbpedia.org/ontology/knownFor",
        "mappedBy": "word2vec"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/debutTeam",
        "seq": "5,9",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/SportsTeam",
        "seq": "5,9",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "Which politicians died in cities built by the Roman emperor Charles 5?",
    "SerialNumber": "4411",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/builder\u003e \u003chttp://dbpedia.org/resource/Charles_V,_Holy_Roman_Emperor\u003e . ?uri \u003chttp://dbpedia.org/ontology/deathPlace\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/OfficeHolder\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "emperor charles roman",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Charles_V,_Holy_Roman_Emperor",
        "seq": "999,1000"
      }
    ],
    "id": "0863ef35f0474efda395d6bdafbcde40",
    "predicate mapping": [
      {
        "label": "built by",
        "uri": "http://dbpedia.org/ontology/builder",
        "seq": "33,41",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "died in",
        "uri": "http://dbpedia.org/ontology/deathPlace",
        "seq": "18,25",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "Charles",
        "uri": "http://dbpedia.org/ontology/OfficeHolder",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which broad cast area od CFRX is the country of North America Poker Tour ?",
    "SerialNumber": "4413",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/CFRX\u003e \u003chttp://dbpedia.org/ontology/broadcastArea\u003e ?uri. \u003chttp://dbpedia.org/resource/North_American_Poker_Tour\u003e \u003chttp://dbpedia.org/ontology/country\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "CFRX",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/CFRX",
        "seq": "25,29"
      },
      {
        "label": "america poker north tour",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/North_American_Poker_Tour",
        "seq": "999,1000"
      }
    ],
    "id": "da861f99dfe244209207a2f1ddbd8a39",
    "predicate mapping": [
      {
        "label": "broad cast area",
        "uri": "http://dbpedia.org/ontology/broadcastArea",
        "seq": "6,21",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/country",
        "seq": "37,44",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Which scientist was advised by John Robert Woodyard?",
    "SerialNumber": "4414",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/doctoralAdvisor\u003e \u003chttp://dbpedia.org/resource/John_Robert_Woodyard\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Scientist\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "John Robert Woodyard",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/John_Robert_Woodyard",
        "seq": "31,51"
      }
    ],
    "id": "eadddca2aa7a4d2daa245624e12ba871",
    "predicate mapping": [
      {
        "label": "advised",
        "uri": "http://dbpedia.org/property/doctoralAdvisor",
        "mappedBy": "word2vec"
      },
      {
        "label": "scientist",
        "uri": "http://dbpedia.org/ontology/Scientist",
        "seq": "6,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "108",
    "question": "How many bacterias have taxonomy as Bacillales and domain as Bacteria? ",
    "SerialNumber": "4416",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/ontology/order\u003e \u003chttp://dbpedia.org/resource/Bacillales\u003e . ?uri \u003chttp://dbpedia.org/property/domain\u003e \u003chttp://dbpedia.org/resource/Bacteria\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Bacillales",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Bacillales",
        "seq": "36,46"
      },
      {
        "label": "Bacteria",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Bacteria",
        "seq": "61,69"
      }
    ],
    "id": "deee0126b45443878ab649c3acfb2756",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/order",
        "mappedBy": "word2vec"
      },
      {
        "label": "domain",
        "uri": "http://dbpedia.org/property/domain",
        "seq": "51,57",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "405",
    "question": "In how many places are Marjas found?",
    "SerialNumber": "4418",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/title\u003e \u003chttp://dbpedia.org/resource/Marja\u0027\u003e . ?x \u003chttp://dbpedia.org/ontology/location\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Location\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Marjas",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Marja\u0027",
        "seq": "23,29"
      }
    ],
    "id": "dd10bc648d304c6e87f26f46a808f82d",
    "predicate mapping": [
      {
        "label": "found",
        "uri": "http://dbpedia.org/property/title",
        "mappedBy": "word2vec"
      },
      {
        "label": "found",
        "uri": "http://dbpedia.org/ontology/location",
        "mappedBy": "word2vec"
      },
      {
        "label": "",
        "uri": "http://dbpedia.org/ontology/Location",
        "seq": "0,0",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What products do US companies make?",
    "SerialNumber": "4419",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/location\u003e \u003chttp://dbpedia.org/resource/United_States\u003e . ?x \u003chttp://dbpedia.org/ontology/product\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Company\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "US",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/United_States",
        "seq": "17,19"
      }
    ],
    "id": "dcf94c6a97794f5eaa21c501a7046906",
    "predicate mapping": [
      {
        "label": "make",
        "uri": "http://dbpedia.org/ontology/location",
        "mappedBy": "word2vec"
      },
      {
        "label": "product",
        "uri": "http://dbpedia.org/ontology/product",
        "seq": "5,12",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "companies",
        "uri": "http://dbpedia.org/ontology/Company",
        "seq": "20,29",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the common religious affiliation of the Wickramabahu Central College (National School) and that of  Vesak?",
    "SerialNumber": "4421",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Wickramabahu_Central_College_(National_School)\u003e \u003chttp://dbpedia.org/property/religiousAffiliation\u003e ?uri. \u003chttp://dbpedia.org/resource/Vesak\u003e \u003chttp://dbpedia.org/ontology/type\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Wickramabahu Central College (National School)",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Wickramabahu_Central_College_(National_School)",
        "seq": "48,94"
      },
      {
        "label": "Vesak",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Vesak",
        "seq": "108,113"
      }
    ],
    "id": "df803beedd644f2685bc04e7975727c4",
    "predicate mapping": [
      {
        "label": "religious affiliation",
        "uri": "http://dbpedia.org/property/religiousAffiliation",
        "seq": "19,40",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "College",
        "uri": "http://dbpedia.org/ontology/type",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "What are some shows whose voice actors play the piano?",
    "SerialNumber": "4428",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/instrument\u003e \u003chttp://dbpedia.org/resource/Piano\u003e . ?uri \u003chttp://dbpedia.org/property/voices\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "piano",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Piano",
        "seq": "48,53"
      }
    ],
    "id": "829939d409714b7b9fb93dfd57ceccc9",
    "predicate mapping": [
      {
        "label": "play",
        "uri": "http://dbpedia.org/ontology/instrument",
        "mappedBy": "word2vec"
      },
      {
        "label": "voice",
        "uri": "http://dbpedia.org/property/voices",
        "seq": "26,31",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "14,19",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Where is the building located whose architect was Francis Palmer Smith?",
    "SerialNumber": "4429",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/architect\u003e \u003chttp://dbpedia.org/resource/Francis_Palmer_Smith\u003e . ?x \u003chttp://dbpedia.org/property/address\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Building\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Francis Palmer Smith",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Francis_Palmer_Smith",
        "seq": "50,70"
      }
    ],
    "id": "77bba5ef70ba44d79cf600cc5ea05d22",
    "predicate mapping": [
      {
        "label": "architect",
        "uri": "http://dbpedia.org/ontology/architect",
        "seq": "36,45",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "located",
        "uri": "http://dbpedia.org/property/address",
        "mappedBy": "word2vec"
      },
      {
        "label": "building",
        "uri": "http://dbpedia.org/ontology/Building",
        "seq": "13,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "315",
    "question": "Naval station mobile and naval support activity, naples are under which branch of Us military?",
    "SerialNumber": "4431",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Naval_Station_Mobile\u003e \u003chttp://dbpedia.org/ontology/type\u003e ?uri. \u003chttp://dbpedia.org/resource/Naval_Support_Activity_Naples\u003e \u003chttp://dbpedia.org/ontology/type\u003e ?uri . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MilitaryUnit\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Naval station mobile",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Naval_Station_Mobile",
        "seq": "0,20"
      },
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Naval_Support_Activity_Naples",
        "seq": "999,1000"
      }
    ],
    "id": "80e469b7945f4f16a8801256c157cab0",
    "predicate mapping": [
      {
        "label": "branch",
        "uri": "http://dbpedia.org/ontology/type",
        "mappedBy": "word2vec"
      },
      {
        "label": "branch",
        "uri": "http://dbpedia.org/ontology/type",
        "mappedBy": "word2vec"
      },
      {
        "label": "military",
        "uri": "http://dbpedia.org/ontology/MilitaryUnit",
        "seq": "85,93",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the team manger of Middlebrough F.C season 2006-07 ?",
    "SerialNumber": "4433",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/2006–07_Middlesbrough_F.C._season\u003e \u003chttp://dbpedia.org/ontology/manager\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "2006-07",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/2006–07_Middlesbrough_F.C._season",
        "seq": "48,55"
      }
    ],
    "id": "e3851817df724055bf9d59adc6155746",
    "predicate mapping": [
      {
        "label": "season",
        "uri": "http://dbpedia.org/ontology/manager",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "7",
    "question": "Who was in missions of Gemini 8 and Apollo 11?",
    "SerialNumber": "4436",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/property/mission\u003e \u003chttp://dbpedia.org/resource/Gemini_8\u003e . ?uri \u003chttp://dbpedia.org/property/mission\u003e \u003chttp://dbpedia.org/resource/Apollo_11\u003e . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Gemini 8",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Gemini_8",
        "seq": "23,31"
      },
      {
        "label": "Apollo 11",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Apollo_11",
        "seq": "36,45"
      }
    ],
    "id": "a02542cdbf71477b8b35e4db7fa67cfa",
    "predicate mapping": [
      {
        "label": "mission",
        "uri": "http://dbpedia.org/property/mission",
        "seq": "11,18",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "mission",
        "uri": "http://dbpedia.org/property/mission",
        "seq": "11,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who founded the league which was won by Joe McKeehen?",
    "SerialNumber": "4437",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/champion\u003e \u003chttp://dbpedia.org/resource/Joe_McKeehen\u003e . ?x \u003chttp://dbpedia.org/property/founded\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/SportsLeague\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Joe McKeehen",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Joe_McKeehen",
        "seq": "40,52"
      }
    ],
    "id": "a222bccc883b4487896ae0312ec2c17c",
    "predicate mapping": [
      {
        "label": "won",
        "uri": "http://dbpedia.org/property/champion",
        "mappedBy": "word2vec"
      },
      {
        "label": "founded",
        "uri": "http://dbpedia.org/property/founded",
        "seq": "4,11",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "league",
        "uri": "http://dbpedia.org/ontology/SportsLeague",
        "seq": "16,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Give me some nominees of politicians in the US?",
    "SerialNumber": "4438",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/residence\u003e \u003chttp://dbpedia.org/resource/United_States\u003e . ?x \u003chttp://dbpedia.org/ontology/nominee\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/OfficeHolder\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "US",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/United_States",
        "seq": "44,46"
      }
    ],
    "id": "e905a1686f744be6b8e33f6c79a49c7b",
    "predicate mapping": [
      {
        "label": "politicians",
        "uri": "http://dbpedia.org/ontology/residence",
        "mappedBy": "word2vec"
      },
      {
        "label": "nominee",
        "uri": "http://dbpedia.org/ontology/nominee",
        "seq": "13,20",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "politicians",
        "uri": "http://dbpedia.org/ontology/OfficeHolder",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "To what did the parliament member swore her oath to, whose has sons is Lohan Ratwatte?",
    "SerialNumber": "4439",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/child\u003e \u003chttp://dbpedia.org/resource/Lohan_Ratwatte\u003e . ?x \u003chttp://dbpedia.org/property/allegiance\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MemberOfParliament\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Lohan Ratwatte",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Lohan_Ratwatte",
        "seq": "71,85"
      }
    ],
    "id": "c34b719cd3be44ab82c70eb8f169d6c6",
    "predicate mapping": [
      {
        "label": "has sons",
        "uri": "http://dbpedia.org/ontology/child",
        "seq": "59,67",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "oath",
        "uri": "http://dbpedia.org/property/allegiance",
        "mappedBy": "word2vec"
      },
      {
        "label": "parliament member",
        "uri": "http://dbpedia.org/ontology/MemberOfParliament",
        "seq": "16,33",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "In which races have Tillingdale\u0027s horses participated?",
    "SerialNumber": "4440",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/owner\u003e \u003chttp://dbpedia.org/resource/Tillingdale\u003e . ?x \u003chttp://dbpedia.org/property/race\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Horse\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Tillingdale",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Tillingdale",
        "seq": "20,31"
      }
    ],
    "id": "0bd745b22ebe404a8b28d4cf5954c9e7",
    "predicate mapping": [
      {
        "label": "participated",
        "uri": "http://dbpedia.org/property/owner",
        "mappedBy": "word2vec"
      },
      {
        "label": "race",
        "uri": "http://dbpedia.org/property/race",
        "seq": "9,13",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "horse",
        "uri": "http://dbpedia.org/ontology/Horse",
        "seq": "34,39",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "307",
    "question": "Name the tv series produced by Stephen Ambrose and Erik Bork?",
    "SerialNumber": "4443",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/ontology/producer\u003e \u003chttp://dbpedia.org/resource/Stephen_E._Ambrose\u003e . ?uri \u003chttp://dbpedia.org/ontology/producer\u003e \u003chttp://dbpedia.org/resource/Erik_Bork\u003e . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "stephen ambrose",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Stephen_E._Ambrose",
        "seq": "999,1000"
      },
      {
        "label": "Erik Bork",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Erik_Bork",
        "seq": "51,60"
      }
    ],
    "id": "605675f72f0449d6a0b72908f4546a13",
    "predicate mapping": [
      {
        "label": "produced",
        "uri": "http://dbpedia.org/ontology/producer",
        "seq": "19,27",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "produced",
        "uri": "http://dbpedia.org/ontology/producer",
        "seq": "19,27",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "Ambrose",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Where do the railroads owned by the Chicago and Northwestern Transportation company begin?",
    "SerialNumber": "4445",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/system\u003e \u003chttp://dbpedia.org/resource/Chicago_and_North_Western_Transportation_Company\u003e . ?x \u003chttp://dbpedia.org/ontology/routeStart\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/RailwayLine\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "transportation",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Chicago_and_North_Western_Transportation_Company",
        "seq": "999,1000"
      }
    ],
    "id": "e90f562181834b19b5ca9d4787d19f19",
    "predicate mapping": [
      {
        "label": "begin",
        "uri": "http://dbpedia.org/property/system",
        "mappedBy": "word2vec"
      },
      {
        "label": "begin",
        "uri": "http://dbpedia.org/ontology/routeStart",
        "mappedBy": "word2vec"
      },
      {
        "label": "begin",
        "uri": "http://dbpedia.org/ontology/RailwayLine",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "Give me a list of all the buildings which are located in districts governed by John Tory.",
    "SerialNumber": "4447",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/leaderName\u003e \u003chttp://dbpedia.org/resource/John_Tory\u003e . ?uri \u003chttp://dbpedia.org/ontology/location\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Building\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "John Tory",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/John_Tory",
        "seq": "79,88"
      }
    ],
    "id": "2c2a4120329e4f2a96503a5534340a63",
    "predicate mapping": [
      {
        "label": "governed",
        "uri": "http://dbpedia.org/property/leaderName",
        "mappedBy": "word2vec"
      },
      {
        "label": "governed",
        "uri": "http://dbpedia.org/ontology/location",
        "mappedBy": "word2vec"
      },
      {
        "label": "building",
        "uri": "http://dbpedia.org/ontology/Building",
        "seq": "26,34",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Where can one find the Dzogchen Ponolop Rinpoche?",
    "SerialNumber": "4449",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Dzogchen_Ponlop_Rinpoche\u003e \u003chttp://dbpedia.org/property/location\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "rinpoche dzogchen",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Dzogchen_Ponlop_Rinpoche",
        "seq": "999,1000"
      }
    ],
    "id": "c43401a585454b6f9d0987e6511a91f9",
    "predicate mapping": [
      {
        "label": "Rinpoche",
        "uri": "http://dbpedia.org/property/location",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Did Bob Suci play for the New England Patriots?",
    "SerialNumber": "4451",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Bob_Suci\u003e \u003chttp://dbpedia.org/property/pastteams\u003e \u003chttp://dbpedia.org/resource/New_England_Patriots\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Bob Suci",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Bob_Suci",
        "seq": "4,12"
      },
      {
        "label": "New England Patriots",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/New_England_Patriots",
        "seq": "26,46"
      }
    ],
    "id": "cb2281af4c674df6a881117802e8115c",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/pastteams",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "What would be the most important creation which involved both Neil Cross and Russel Davies ?",
    "SerialNumber": "4452",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Neil_Cross\u003e \u003chttp://dbpedia.org/ontology/notableWork\u003e ?uri. \u003chttp://dbpedia.org/resource/Russell_T_Davies\u003e \u003chttp://dbpedia.org/ontology/notableWork\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Neil Cross",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Neil_Cross",
        "seq": "62,72"
      },
      {
        "label": "russel davies",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Russell_T_Davies",
        "seq": "999,1000"
      }
    ],
    "id": "2435496704084a5992c396fcba62cd33",
    "predicate mapping": [
      {
        "label": "Davies",
        "uri": "http://dbpedia.org/ontology/notableWork",
        "mappedBy": "word2vec"
      },
      {
        "label": "Davies",
        "uri": "http://dbpedia.org/ontology/notableWork",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which TV show produced by Paramount Television and is located in Massachusetts ?",
    "SerialNumber": "4454",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/company\u003e \u003chttp://dbpedia.org/resource/Paramount_Television\u003e . ?uri \u003chttp://dbpedia.org/ontology/location\u003e \u003chttp://dbpedia.org/resource/Massachusetts\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Paramount Television",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Paramount_Television",
        "seq": "26,46"
      },
      {
        "label": "Massachusetts",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Massachusetts",
        "seq": "65,78"
      }
    ],
    "id": "fa41d6a62ed040f5a195ea1fa799f2d4",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/property/company",
        "mappedBy": "word2vec"
      },
      {
        "label": "located",
        "uri": "http://dbpedia.org/ontology/location",
        "mappedBy": "word2vec"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "-1,14",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "How many labels sign up progressive rock artists?",
    "SerialNumber": "4457",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/genre\u003e \u003chttp://dbpedia.org/resource/Progressive_rock\u003e . ?x \u003chttp://dbpedia.org/ontology/recordLabel\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "progressive rock",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Progressive_rock",
        "seq": "24,40"
      }
    ],
    "id": "17ce149639704a6da50a88f32bc5eff6",
    "predicate mapping": [
      {
        "label": "artists",
        "uri": "http://dbpedia.org/property/genre",
        "mappedBy": "word2vec"
      },
      {
        "label": "label",
        "uri": "http://dbpedia.org/ontology/recordLabel",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Which indian party has won the arunachal pradesh elections of 2014, and has been in the 4th legislative assembly?",
    "SerialNumber": "4463",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Arunachal_Pradesh_Legislative_Assembly_election,_2014\u003e \u003chttp://dbpedia.org/property/party\u003e ?uri. \u003chttp://dbpedia.org/resource/Fourth_Legislative_Assembly_of_Delhi\u003e \u003chttp://dbpedia.org/property/party\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "legislative arunachal assembly",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Arunachal_Pradesh_Legislative_Assembly_election,_2014",
        "seq": "999,1000"
      },
      {
        "label": "legislative assembly",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Fourth_Legislative_Assembly_of_Delhi",
        "seq": "999,1000"
      }
    ],
    "id": "ee09ab7feb1344e7b513cd18e2f891e7",
    "predicate mapping": [
      {
        "label": "party",
        "uri": "http://dbpedia.org/property/party",
        "seq": "13,18",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "party",
        "uri": "http://dbpedia.org/property/party",
        "seq": "13,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What is the party of the politicians whose children is Sanjay Gandhi ?",
    "SerialNumber": "4465",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/children\u003e \u003chttp://dbpedia.org/resource/Sanjay_Gandhi\u003e . ?x \u003chttp://dbpedia.org/ontology/party\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/OfficeHolder\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Sanjay Gandhi",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Sanjay_Gandhi",
        "seq": "55,68"
      }
    ],
    "id": "0cd8980e09074dc185a0889b18d53657",
    "predicate mapping": [
      {
        "label": "children",
        "uri": "http://dbpedia.org/property/children",
        "seq": "43,51",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "party",
        "uri": "http://dbpedia.org/ontology/party",
        "seq": "12,17",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "politicians",
        "uri": "http://dbpedia.org/ontology/OfficeHolder",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "Who is the owner of the FC which owns the Cobham Training Centre?",
    "SerialNumber": "4466",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Cobham_Training_Centre\u003e \u003chttp://dbpedia.org/property/owner\u003e ?x . ?x \u003chttp://dbpedia.org/property/owner\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/SoccerClub\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Cobham Training Centre",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Cobham_Training_Centre",
        "seq": "42,64"
      }
    ],
    "id": "d348e34b15b34282bcca4892641b5f9d",
    "predicate mapping": [
      {
        "label": "owner",
        "uri": "http://dbpedia.org/property/owner",
        "seq": "11,16",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "owner",
        "uri": "http://dbpedia.org/property/owner",
        "seq": "11,16",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "owns",
        "uri": "http://dbpedia.org/ontology/SoccerClub",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the river whose source is located in Ikelenge  District and mouth in Mozambique?",
    "SerialNumber": "4469",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/sourceLocation\u003e \u003chttp://dbpedia.org/resource/Ikelenge_District\u003e . ?uri \u003chttp://dbpedia.org/property/mouthCountry\u003e \u003chttp://dbpedia.org/resource/Mozambique\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/River\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "ikelenge district",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Ikelenge_District",
        "seq": "999,1000"
      },
      {
        "label": "Mozambique",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Mozambique",
        "seq": "74,84"
      }
    ],
    "id": "b4321c4410c14121844377a286ff893f",
    "predicate mapping": [
      {
        "label": "source",
        "uri": "http://dbpedia.org/property/sourceLocation",
        "seq": "21,27",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "mouth",
        "uri": "http://dbpedia.org/property/mouthCountry",
        "seq": "65,70",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Who is the founder of the trade union with whom Amalgamated Clothing Workers of America is affiliated?",
    "SerialNumber": "4471",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Amalgamated_Clothing_Workers_of_America\u003e \u003chttp://dbpedia.org/ontology/affiliation\u003e ?x . ?x \u003chttp://dbpedia.org/property/founded\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Amalgamated Clothing Workers of America",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Amalgamated_Clothing_Workers_of_America",
        "seq": "48,87"
      }
    ],
    "id": "3691b72c47ef41ecb0642a31737f3b86",
    "predicate mapping": [
      {
        "label": "affiliated",
        "uri": "http://dbpedia.org/ontology/affiliation",
        "mappedBy": "word2vec"
      },
      {
        "label": "founder of",
        "uri": "http://dbpedia.org/property/founded",
        "seq": "11,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What are some people working for the New York Post?",
    "SerialNumber": "4472",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/employer\u003e \u003chttp://dbpedia.org/resource/New_York_Post\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "New York Post",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/New_York_Post",
        "seq": "37,50"
      }
    ],
    "id": "4af5c60efca84897ae3b0cf6c727f603",
    "predicate mapping": [
      {
        "label": "working for",
        "uri": "http://dbpedia.org/ontology/employer",
        "seq": "21,32",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "people",
        "uri": "http://dbpedia.org/ontology/Person",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "8",
    "question": "Which gaming console\u0027s central processing unit is microprocessor and built by Sony?",
    "SerialNumber": "4473",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/cpu\u003e \u003chttp://dbpedia.org/resource/Cell_(microprocessor)\u003e . ?uri \u003chttp://dbpedia.org/ontology/manufacturer\u003e \u003chttp://dbpedia.org/resource/Sony\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "microprocessor",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Cell_(microprocessor)",
        "seq": "999,1000"
      },
      {
        "label": "Sony",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Sony",
        "seq": "78,82"
      }
    ],
    "id": "001da0a604d74bae8d29e5bfc521e92e",
    "predicate mapping": [
      {
        "label": "central processing unit",
        "uri": "http://dbpedia.org/ontology/cpu",
        "seq": "23,46",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "built by",
        "uri": "http://dbpedia.org/ontology/manufacturer",
        "seq": "69,77",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "How many things have made different people living in Canada famous?",
    "SerialNumber": "4477",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/nationality\u003e \u003chttp://dbpedia.org/resource/Canadians\u003e . ?x \u003chttp://dbpedia.org/ontology/knownFor\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Canada",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Canadians",
        "seq": "53,59"
      }
    ],
    "id": "cb1b7e3030df44b592c6bca8cf93d76f",
    "predicate mapping": [
      {
        "label": "famous",
        "uri": "http://dbpedia.org/ontology/nationality",
        "mappedBy": "word2vec"
      },
      {
        "label": "famous",
        "uri": "http://dbpedia.org/ontology/knownFor",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Which famous political figures are relatives to George Madison?",
    "SerialNumber": "4478",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/George_Madison\u003e \u003chttp://dbpedia.org/ontology/relation\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "George Madison",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/George_Madison",
        "seq": "48,62"
      }
    ],
    "id": "b9053f165ad74242808b096ce9040971",
    "predicate mapping": [
      {
        "label": "relatives",
        "uri": "http://dbpedia.org/ontology/relation",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which TV show\u0027s composer is Judy  Hart  Angelo and executive producer as Glen and Les Charles?",
    "SerialNumber": "4479",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/composer\u003e \u003chttp://dbpedia.org/resource/Judy_Hart_Angelo\u003e . ?uri \u003chttp://dbpedia.org/ontology/executiveProducer\u003e \u003chttp://dbpedia.org/resource/Glen_and_Les_Charles\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "angelo judy hart",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Judy_Hart_Angelo",
        "seq": "999,1000"
      },
      {
        "label": "Glen and Les Charles",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Glen_and_Les_Charles",
        "seq": "73,93"
      }
    ],
    "id": "170a69d8ac1c40e0930df1a674d5c1cf",
    "predicate mapping": [
      {
        "label": "composer",
        "uri": "http://dbpedia.org/ontology/composer",
        "seq": "16,24",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "executive producer",
        "uri": "http://dbpedia.org/ontology/executiveProducer",
        "seq": "51,69",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "show\u0027s",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "9,15",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Is Maria Sharapova the silver medalist of Tennis at the 2012 Summer Olympics  Women\u0027s singles?",
    "SerialNumber": "4487",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Tennis_at_the_2012_Summer_Olympics_–_Women\u0027s_singles\u003e \u003chttp://dbpedia.org/ontology/silverMedalist\u003e \u003chttp://dbpedia.org/resource/Maria_Sharapova\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "olympics women\u0027s singles tennis summer",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Tennis_at_the_2012_Summer_Olympics_–_Women\u0027s_singles",
        "seq": "999,1000"
      },
      {
        "label": "Maria Sharapova",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Maria_Sharapova",
        "seq": "3,18"
      }
    ],
    "id": "3efd4b46f83649b8b2b937bbe752427f",
    "predicate mapping": [
      {
        "label": "medalist silver",
        "uri": "http://dbpedia.org/ontology/silverMedalist",
        "seq": "-1,14",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What is the layout of the cars similar to that of the Subaru Outback?",
    "SerialNumber": "4488",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/relatedMeanOfTransportation\u003e \u003chttp://dbpedia.org/resource/Subaru_Outback\u003e . ?x \u003chttp://dbpedia.org/ontology/layout\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Automobile\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Subaru Outback",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Subaru_Outback",
        "seq": "54,68"
      }
    ],
    "id": "f2f115531d7445d49155fe03258dffe1",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/relatedMeanOfTransportation",
        "mappedBy": "word2vec"
      },
      {
        "label": "layout",
        "uri": "http://dbpedia.org/ontology/layout",
        "seq": "12,18",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "similar",
        "uri": "http://dbpedia.org/ontology/Automobile",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Where do the rivers starting from Zambia end?",
    "SerialNumber": "4489",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/sourceCountry\u003e \u003chttp://dbpedia.org/resource/Zambia\u003e . ?x \u003chttp://dbpedia.org/ontology/riverMouth\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/River\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Zambia",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Zambia",
        "seq": "34,40"
      }
    ],
    "id": "09a1b808c0fa4f2f8839a1ce8279556d",
    "predicate mapping": [
      {
        "label": "end",
        "uri": "http://dbpedia.org/ontology/sourceCountry",
        "mappedBy": "word2vec"
      },
      {
        "label": "rivers",
        "uri": "http://dbpedia.org/ontology/riverMouth",
        "seq": "13,19",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River",
        "seq": "13,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is Naval Support Activity Naples a part of?",
    "SerialNumber": "4492",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Naval_Support_Activity_Naples\u003e \u003chttp://dbpedia.org/ontology/type\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Naval Support Activity Naples",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Naval_Support_Activity_Naples",
        "seq": "8,37"
      }
    ],
    "id": "81a79bece2344b4aaa91302154014fbc",
    "predicate mapping": [
      {
        "label": "part",
        "uri": "http://dbpedia.org/ontology/type",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "307",
    "question": "Which series was written by Eric Jendresen and John Orloff?",
    "SerialNumber": "4499",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/property/writer\u003e \u003chttp://dbpedia.org/resource/Erik_Jendresen\u003e . ?uri \u003chttp://dbpedia.org/property/writer\u003e \u003chttp://dbpedia.org/resource/John_Orloff\u003e . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "jendresen",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Erik_Jendresen",
        "seq": "999,1000"
      },
      {
        "label": "John Orloff",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/John_Orloff",
        "seq": "47,58"
      }
    ],
    "id": "a9844619aaa14527a44829ee64b0658b",
    "predicate mapping": [
      {
        "label": "written by",
        "uri": "http://dbpedia.org/property/writer",
        "seq": "17,27",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "written by",
        "uri": "http://dbpedia.org/property/writer",
        "seq": "17,27",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "Jendresen",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "406",
    "question": "Count the number of musical work which were sold by Sony Music?",
    "SerialNumber": "4500",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/label\u003e \u003chttp://dbpedia.org/resource/Sony_Music_Entertainment\u003e . ?uri \u003chttp://dbpedia.org/property/music\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MusicalWork\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Sony Music",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Sony_Music_Entertainment",
        "seq": "52,62"
      }
    ],
    "id": "a3f36caa2ac0432a9aca31a86472fe19",
    "predicate mapping": [
      {
        "label": "sold",
        "uri": "http://dbpedia.org/property/label",
        "mappedBy": "word2vec"
      },
      {
        "label": "music",
        "uri": "http://dbpedia.org/property/music",
        "seq": "20,25",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "musical work",
        "uri": "http://dbpedia.org/ontology/MusicalWork",
        "seq": "20,32",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "Who was succeeded by Arthur Gegei as the office ho0lder ?",
    "SerialNumber": "4502",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/successor\u003e \u003chttp://dbpedia.org/resource/Artúr_Görgei\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Arthur Gegei",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Artúr_Görgei",
        "seq": "21,33"
      }
    ],
    "id": "f59c8bc3349a4d1e8edfa572284dd9be",
    "predicate mapping": [
      {
        "label": "office",
        "uri": "http://dbpedia.org/ontology/successor",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Does the mississippi orignate in the clearwater county, minnesota?",
    "SerialNumber": "4505",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Mississippi_River\u003e \u003chttp://dbpedia.org/ontology/sourceRegion\u003e \u003chttp://dbpedia.org/resource/Clearwater_County,_Minnesota\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "mississippi",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Mississippi_River",
        "seq": "999,1000"
      },
      {
        "label": "clearwater county",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Clearwater_County,_Minnesota",
        "seq": "37,54"
      }
    ],
    "id": "6b16d12e156b4bb294b527c83c07f76a",
    "predicate mapping": [
      {
        "label": "minnesota",
        "uri": "http://dbpedia.org/ontology/sourceRegion",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the company with product lines like Visual studio and Surface ?",
    "SerialNumber": "4508",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/products\u003e \u003chttp://dbpedia.org/resource/Microsoft_Visual_Studio\u003e . ?uri \u003chttp://dbpedia.org/ontology/product\u003e \u003chttp://dbpedia.org/resource/Microsoft_Surface\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Company\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Visual studio",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Microsoft_Visual_Studio",
        "seq": "41,54"
      },
      {
        "label": "surface",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Microsoft_Surface",
        "seq": "999,1000"
      }
    ],
    "id": "a3c5942a30ca4e078b7cac835d4eb065",
    "predicate mapping": [
      {
        "label": "product",
        "uri": "http://dbpedia.org/property/products",
        "seq": "22,29",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "product",
        "uri": "http://dbpedia.org/ontology/product",
        "seq": "22,29",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company",
        "seq": "9,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Which city is Black Grape Global located ?",
    "SerialNumber": "4513",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Black_Grape_Global\u003e \u003chttp://dbpedia.org/ontology/locationCity\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Black Grape Global",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Black_Grape_Global",
        "seq": "14,32"
      }
    ],
    "id": "1a57597da91944a4ac167a67fcca0174",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/ontology/locationCity",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Who preceded Lucius Crus as an office holder?",
    "SerialNumber": "4516",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/predecessor\u003e \u003chttp://dbpedia.org/resource/Lucius_Cornelius_Lentulus_Crus\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/OfficeHolder\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Lucius Crus",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Lucius_Cornelius_Lentulus_Crus",
        "seq": "13,24"
      }
    ],
    "id": "a234b1c5bf4d4ae29790e87b267333fc",
    "predicate mapping": [
      {
        "label": "preceded",
        "uri": "http://dbpedia.org/ontology/predecessor",
        "mappedBy": "word2vec"
      },
      {
        "label": "office holder",
        "uri": "http://dbpedia.org/ontology/OfficeHolder",
        "seq": "31,44",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Which company has developed games whose music is done by Gerard Marino?",
    "SerialNumber": "4522",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/composer\u003e \u003chttp://dbpedia.org/resource/Gerard_Marino\u003e . ?x \u003chttp://dbpedia.org/ontology/developer\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/VideoGame\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Gerard Marino",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Gerard_Marino",
        "seq": "57,70"
      }
    ],
    "id": "d094fc39be5943518c758621e7598c9f",
    "predicate mapping": [
      {
        "label": "music",
        "uri": "http://dbpedia.org/ontology/composer",
        "mappedBy": "word2vec"
      },
      {
        "label": "developed",
        "uri": "http://dbpedia.org/ontology/developer",
        "seq": "18,27",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "games",
        "uri": "http://dbpedia.org/ontology/VideoGame",
        "seq": "28,33",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "What would be a common border of Siberia and the shimsa plateau?",
    "SerialNumber": "4524",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Shimōsa_Plateau\u003e \u003chttp://dbpedia.org/ontology/border\u003e ?uri. \u003chttp://dbpedia.org/resource/Siberia\u003e \u003chttp://dbpedia.org/ontology/border\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "plateau",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Shimōsa_Plateau",
        "seq": "999,1000"
      },
      {
        "label": "Siberia",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Siberia",
        "seq": "33,40"
      }
    ],
    "id": "27ec0051c6fa4b6c8224afcec91fc1ac",
    "predicate mapping": [
      {
        "label": "border",
        "uri": "http://dbpedia.org/ontology/border",
        "seq": "23,29",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "border",
        "uri": "http://dbpedia.org/ontology/border",
        "seq": "23,29",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "List the institute of Robert hall ?",
    "SerialNumber": "4525",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Robert_Hall_(economist)\u003e \u003chttp://dbpedia.org/ontology/institution\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Robert hall",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Robert_Hall_(economist)",
        "seq": "22,33"
      }
    ],
    "id": "c6c9dbbe628c4282bac952abf1b6d056",
    "predicate mapping": [
      {
        "label": "institute",
        "uri": "http://dbpedia.org/ontology/institution",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What are some shows by Comedy Central?",
    "SerialNumber": "4527",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/network\u003e \u003chttp://dbpedia.org/resource/Comedy_Central\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Comedy Central",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Comedy_Central",
        "seq": "23,37"
      }
    ],
    "id": "e7fab35dd5cf469895cae4ef222fbcd7",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/network",
        "mappedBy": "word2vec"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "14,19",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "What are some magazines whose publishers are themselves Rock and Roll Hall of Fame members?",
    "SerialNumber": "4529",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/award\u003e \u003chttp://dbpedia.org/resource/Rock_and_Roll_Hall_of_Fame\u003e . ?uri \u003chttp://dbpedia.org/ontology/publisher\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Magazine\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Rock and Roll Hall of Fame",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Rock_and_Roll_Hall_of_Fame",
        "seq": "56,82"
      }
    ],
    "id": "b9b68b1ab73f47e48473bbb74c50ba1a",
    "predicate mapping": [
      {
        "label": "members",
        "uri": "http://dbpedia.org/ontology/award",
        "mappedBy": "word2vec"
      },
      {
        "label": "publisher",
        "uri": "http://dbpedia.org/ontology/publisher",
        "seq": "30,39",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "magazine",
        "uri": "http://dbpedia.org/ontology/Magazine",
        "seq": "14,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "In which states can I find Truss bridges?",
    "SerialNumber": "4530",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/style\u003e \u003chttp://dbpedia.org/resource/Truss_bridge\u003e . ?x \u003chttp://dbpedia.org/ontology/state\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Bridge\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Truss bridge",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Truss_bridge",
        "seq": "27,39"
      }
    ],
    "id": "25322000923943a3b7694bfcabc42a66",
    "predicate mapping": [
      {
        "label": "find",
        "uri": "http://dbpedia.org/property/style",
        "mappedBy": "word2vec"
      },
      {
        "label": "state",
        "uri": "http://dbpedia.org/ontology/state",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "bridge",
        "uri": "http://dbpedia.org/ontology/Bridge",
        "seq": "33,39",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Does Richard Marx play guitar?",
    "SerialNumber": "4531",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Richard_Marx\u003e \u003chttp://dbpedia.org/property/instrument\u003e \u003chttp://dbpedia.org/resource/Guitar\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Richard Marx",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Richard_Marx",
        "seq": "5,17"
      },
      {
        "label": "guitar",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Guitar",
        "seq": "23,29"
      }
    ],
    "id": "e3dd3f0c6fa442b6ad746b3be43c9d41",
    "predicate mapping": [
      {
        "label": "play",
        "uri": "http://dbpedia.org/property/instrument",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "307",
    "question": "Which sea is surrounded by Rostock and Kaliningrad?",
    "SerialNumber": "4532",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/property/cities\u003e \u003chttp://dbpedia.org/resource/Rostock\u003e . ?uri \u003chttp://dbpedia.org/property/cities\u003e \u003chttp://dbpedia.org/resource/Kaliningrad\u003e . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Sea\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Rostock",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Rostock",
        "seq": "27,34"
      },
      {
        "label": "Kaliningrad",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Kaliningrad",
        "seq": "39,50"
      }
    ],
    "id": "79a4891fa50c4add9ea19a97a185d544",
    "predicate mapping": [
      {
        "label": "surrounded",
        "uri": "http://dbpedia.org/property/cities",
        "mappedBy": "word2vec"
      },
      {
        "label": "surrounded",
        "uri": "http://dbpedia.org/property/cities",
        "mappedBy": "word2vec"
      },
      {
        "label": "sea",
        "uri": "http://dbpedia.org/ontology/Sea",
        "seq": "6,9",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Which university is led by Jay Gogue?",
    "SerialNumber": "4533",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/president\u003e \u003chttp://dbpedia.org/resource/Jay_Gogue\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/University\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jay Gogue",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Jay_Gogue",
        "seq": "27,36"
      }
    ],
    "id": "4d42ac9615894cb8b1670248b35ff581",
    "predicate mapping": [
      {
        "label": "led",
        "uri": "http://dbpedia.org/ontology/president",
        "mappedBy": "word2vec"
      },
      {
        "label": "university",
        "uri": "http://dbpedia.org/ontology/University",
        "seq": "6,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "7",
    "question": "Whose commanders are John Mc Ewen and Park Chunghee?",
    "SerialNumber": "4537",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/ontology/commander\u003e \u003chttp://dbpedia.org/resource/John_McEwen\u003e . ?uri \u003chttp://dbpedia.org/ontology/commander\u003e \u003chttp://dbpedia.org/resource/Park_Chung-hee\u003e . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "john ewen mc",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/John_McEwen",
        "seq": "999,1000"
      },
      {
        "label": "Park Chunghee",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Park_Chung-hee",
        "seq": "38,51"
      }
    ],
    "id": "598d49c1f1db4938ab50cc5492fbf488",
    "predicate mapping": [
      {
        "label": "commander",
        "uri": "http://dbpedia.org/ontology/commander",
        "seq": "6,15",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "commander",
        "uri": "http://dbpedia.org/ontology/commander",
        "seq": "6,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which high school of jerry Tagge is also the nearest city of Tennie laura ?",
    "SerialNumber": "4541",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Jerry_Tagge\u003e \u003chttp://dbpedia.org/property/highSchool\u003e ?uri. \u003chttp://dbpedia.org/resource/Tennie_and_Laura_(schooner)\u003e \u003chttp://dbpedia.org/property/nearestCity\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "jerry Tagge",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Jerry_Tagge",
        "seq": "21,32"
      },
      {
        "label": "tennie laura",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Tennie_and_Laura_(schooner)",
        "seq": "999,1000"
      }
    ],
    "id": "88f545749cc4451988e2442225fa9bca",
    "predicate mapping": [
      {
        "label": "high school",
        "uri": "http://dbpedia.org/property/highSchool",
        "seq": "6,17",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "nearest city",
        "uri": "http://dbpedia.org/property/nearestCity",
        "seq": "45,57",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "In which cities were the chess grand masters born?",
    "SerialNumber": "4543",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/title\u003e \u003chttp://dbpedia.org/resource/Grandmaster_(chess)\u003e . ?x \u003chttp://dbpedia.org/ontology/birthPlace\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Grandmaster_(chess)",
        "seq": "999,1000"
      }
    ],
    "id": "ad0d34bb16504702b756a8c82100920b",
    "predicate mapping": [
      {
        "label": "born",
        "uri": "http://dbpedia.org/property/title",
        "mappedBy": "word2vec"
      },
      {
        "label": "born",
        "uri": "http://dbpedia.org/ontology/birthPlace",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What nation is the motherland of Ricardo Alfonso Cerna  where Apostolic Vicariate of El Petn is located?",
    "SerialNumber": "4546",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Ricardo_Alfonso_Cerna\u003e \u003chttp://dbpedia.org/property/birthPlace\u003e ?uri. \u003chttp://dbpedia.org/resource/Apostolic_Vicariate_of_El_Petén\u003e \u003chttp://dbpedia.org/ontology/country\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ricardo Alfonso Cerna",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ricardo_Alfonso_Cerna",
        "seq": "33,54"
      },
      {
        "label": "vicariate apostolic",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Apostolic_Vicariate_of_El_Petén",
        "seq": "999,1000"
      }
    ],
    "id": "433a238279f1423380425f507a28d1b7",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/property/birthPlace",
        "mappedBy": "word2vec"
      },
      {
        "label": "nation",
        "uri": "http://dbpedia.org/ontology/country",
        "seq": "5,11",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "What does the river end on whose border we find in Bjelasnica?",
    "SerialNumber": "4550",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/border\u003e \u003chttp://dbpedia.org/resource/Bjelašnica\u003e . ?x \u003chttp://dbpedia.org/ontology/mouthCountry\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Bjelasnica",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Bjelašnica",
        "seq": "51,61"
      }
    ],
    "id": "9202537eff6a4bbba5a512ca97ef35ff",
    "predicate mapping": [
      {
        "label": "border",
        "uri": "http://dbpedia.org/ontology/border",
        "seq": "33,39",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "find",
        "uri": "http://dbpedia.org/ontology/mouthCountry",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "Which newspapers are owned by Oslo citizens?",
    "SerialNumber": "4553",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/location\u003e \u003chttp://dbpedia.org/resource/Oslo\u003e . ?uri \u003chttp://dbpedia.org/property/owners\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Newspaper\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Oslo",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Oslo",
        "seq": "30,34"
      }
    ],
    "id": "1aa73156801547f1babc504ef1f539a5",
    "predicate mapping": [
      {
        "label": "citizens",
        "uri": "http://dbpedia.org/property/location",
        "mappedBy": "word2vec"
      },
      {
        "label": "owned",
        "uri": "http://dbpedia.org/property/owners",
        "seq": "21,26",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "newspaper",
        "uri": "http://dbpedia.org/ontology/Newspaper",
        "seq": "6,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Which hockey teams have had people playing as Defenceman?",
    "SerialNumber": "4554",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/position\u003e \u003chttp://dbpedia.org/resource/Defenceman\u003e . ?x \u003chttp://dbpedia.org/property/playedFor\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/IceHockeyPlayer\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Defenceman",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Defenceman",
        "seq": "46,56"
      }
    ],
    "id": "7794edb4bced489bad560bde6d7f1b1d",
    "predicate mapping": [
      {
        "label": "playing",
        "uri": "http://dbpedia.org/property/position",
        "mappedBy": "word2vec"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/property/playedFor",
        "seq": "13,17",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "hockey",
        "uri": "http://dbpedia.org/ontology/IceHockeyPlayer",
        "seq": "6,12",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What monument was unveiled in 1984 of fine arts of the Soviet Union ?",
    "SerialNumber": "4558",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/1984_in_fine_arts_of_the_Soviet_Union\u003e \u003chttp://dbpedia.org/property/title\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "soviet union fine arts 1984",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/1984_in_fine_arts_of_the_Soviet_Union",
        "seq": "999,1000"
      }
    ],
    "id": "748e2f950c61435586ef72d009b2f7c1",
    "predicate mapping": [
      {
        "label": "Union",
        "uri": "http://dbpedia.org/property/title",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Which universities are also known as the Tulane Green wave?",
    "SerialNumber": "4559",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/nickname\u003e \u003chttp://dbpedia.org/resource/Tulane_Green_Wave\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/University\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Tulane Green wave",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Tulane_Green_Wave",
        "seq": "41,58"
      }
    ],
    "id": "f9d4553365b340d89df7041600ddb304",
    "predicate mapping": [
      {
        "label": "known",
        "uri": "http://dbpedia.org/property/nickname",
        "mappedBy": "word2vec"
      },
      {
        "label": "universities",
        "uri": "http://dbpedia.org/ontology/University",
        "seq": "6,18",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "Count the religions followed by people living in British Columbia.",
    "SerialNumber": "4562",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/residence\u003e \u003chttp://dbpedia.org/resource/British_Columbia\u003e . ?x \u003chttp://dbpedia.org/property/religion\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "British Columbia",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/British_Columbia",
        "seq": "49,65"
      }
    ],
    "id": "3783ed5014f64bc59ce995cf1be1dc9c",
    "predicate mapping": [
      {
        "label": "living",
        "uri": "http://dbpedia.org/property/residence",
        "mappedBy": "word2vec"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/property/religion",
        "seq": "10,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Where did the conflict take place where Louis Briere de I\u0027Isle was a commander?",
    "SerialNumber": "4566",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/commander\u003e \u003chttp://dbpedia.org/resource/Louis_Brière_de_l\u0027Isle\u003e . ?x \u003chttp://dbpedia.org/ontology/territory\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MilitaryConflict\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Louis Briere",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Louis_Brière_de_l\u0027Isle",
        "seq": "40,52"
      }
    ],
    "id": "bd8a29101ec64bdaa50f4f3c3c3de808",
    "predicate mapping": [
      {
        "label": "commander",
        "uri": "http://dbpedia.org/ontology/commander",
        "seq": "69,78",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "de",
        "uri": "http://dbpedia.org/ontology/territory",
        "mappedBy": "word2vec"
      },
      {
        "label": "conflict",
        "uri": "http://dbpedia.org/ontology/MilitaryConflict",
        "seq": "14,22",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "406",
    "question": "How many publisher have been founded by american citizens?",
    "SerialNumber": "4567",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/stateOfOrigin\u003e \u003chttp://dbpedia.org/resource/United_States\u003e . ?uri \u003chttp://dbpedia.org/ontology/founder\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Publisher\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/United_States",
        "seq": "999,1000"
      }
    ],
    "id": "1f1e8a30a2d348d09ee11446805e1382",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/stateOfOrigin",
        "mappedBy": "word2vec"
      },
      {
        "label": "founded by",
        "uri": "http://dbpedia.org/ontology/founder",
        "seq": "29,39",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "publisher",
        "uri": "http://dbpedia.org/ontology/Publisher",
        "seq": "9,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "In which city can I find both the office of Elasticsearch and the Yellow Claw DJ?",
    "SerialNumber": "4572",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Yellow_Claw_(DJs)\u003e \u003chttp://dbpedia.org/property/location\u003e ?uri. \u003chttp://dbpedia.org/resource/Elasticsearch\u003e \u003chttp://dbpedia.org/property/location\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Yellow Claw",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Yellow_Claw_(DJs)",
        "seq": "66,77"
      },
      {
        "label": "Elasticsearch",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Elasticsearch",
        "seq": "44,57"
      }
    ],
    "id": "00792920d6934b74b1aac3738f061200",
    "predicate mapping": [
      {
        "label": "DJ",
        "uri": "http://dbpedia.org/property/location",
        "mappedBy": "word2vec"
      },
      {
        "label": "DJ",
        "uri": "http://dbpedia.org/property/location",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "Give me all magazines whose editors live in Chicago?",
    "SerialNumber": "4573",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/hometown\u003e \u003chttp://dbpedia.org/resource/Chicago\u003e . ?uri \u003chttp://dbpedia.org/property/editor\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Magazine\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Chicago",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Chicago",
        "seq": "44,51"
      }
    ],
    "id": "cc62ecdc3a6b49c0abb8041c806f783b",
    "predicate mapping": [
      {
        "label": "live",
        "uri": "http://dbpedia.org/ontology/hometown",
        "mappedBy": "word2vec"
      },
      {
        "label": "editor",
        "uri": "http://dbpedia.org/property/editor",
        "seq": "28,34",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "magazine",
        "uri": "http://dbpedia.org/ontology/Magazine",
        "seq": "12,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Which religions are followed by people in England?",
    "SerialNumber": "4574",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/residence\u003e \u003chttp://dbpedia.org/resource/England\u003e . ?x \u003chttp://dbpedia.org/property/religion\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "England",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/England",
        "seq": "42,49"
      }
    ],
    "id": "e14c2eb6c1784c0b8a72befd991b28b9",
    "predicate mapping": [
      {
        "label": "people",
        "uri": "http://dbpedia.org/property/residence",
        "mappedBy": "word2vec"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/property/religion",
        "seq": "6,14",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "people",
        "uri": "http://dbpedia.org/ontology/Person",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Which televison shows have location as Massachusetts ?",
    "SerialNumber": "4575",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/location\u003e \u003chttp://dbpedia.org/resource/Massachusetts\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Massachusetts",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Massachusetts",
        "seq": "39,52"
      }
    ],
    "id": "4545adc58a0241e7a7f875171495d9db",
    "predicate mapping": [
      {
        "label": "location",
        "uri": "http://dbpedia.org/ontology/location",
        "seq": "27,35",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "8",
    "question": "Which governor of Charles Willing had a child named John Scott ?",
    "SerialNumber": "4576",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/governor\u003e \u003chttp://dbpedia.org/resource/Charles_Willing_Byrd\u003e . ?uri \u003chttp://dbpedia.org/ontology/child\u003e \u003chttp://dbpedia.org/resource/John_Scott_Harrison\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "willing charles",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Charles_Willing_Byrd",
        "seq": "999,1000"
      },
      {
        "label": "scott",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/John_Scott_Harrison",
        "seq": "999,1000"
      }
    ],
    "id": "f42b1c36286b47c8958cf2d6a74f511a",
    "predicate mapping": [
      {
        "label": "governor",
        "uri": "http://dbpedia.org/ontology/governor",
        "seq": "6,14",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "child",
        "uri": "http://dbpedia.org/ontology/child",
        "seq": "40,45",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "is blue lagoon island a part of the bahamas achipelago?",
    "SerialNumber": "4580",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Blue_Lagoon_Island\u003e \u003chttp://dbpedia.org/ontology/archipelago\u003e \u003chttp://dbpedia.org/resource/The_Bahamas\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "blue lagoon island",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Blue_Lagoon_Island",
        "seq": "3,21"
      },
      {
        "label": "bahamas",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/The_Bahamas",
        "seq": "36,43"
      }
    ],
    "id": "7909a81b56b34a5fb3669d704b262965",
    "predicate mapping": [
      {
        "label": "part",
        "uri": "http://dbpedia.org/ontology/archipelago",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "What is the war in which both K Fordice and P Fitzwallace fight?",
    "SerialNumber": "4582",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Kirk_Fordice\u003e \u003chttp://dbpedia.org/property/battles\u003e ?uri. \u003chttp://dbpedia.org/resource/Percy_Fitzwallace\u003e \u003chttp://dbpedia.org/property/battles\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "fordice",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Kirk_Fordice",
        "seq": "999,1000"
      },
      {
        "label": "fitzwallace",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Percy_Fitzwallace",
        "seq": "999,1000"
      }
    ],
    "id": "113e33dbe9dc46c58978e463ef3ce85f",
    "predicate mapping": [
      {
        "label": "fight",
        "uri": "http://dbpedia.org/property/battles",
        "mappedBy": "word2vec"
      },
      {
        "label": "fight",
        "uri": "http://dbpedia.org/property/battles",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "Who are currently playing for Barcelona FC?",
    "SerialNumber": "4584",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/currentclub\u003e \u003chttp://dbpedia.org/resource/FC_Barcelona\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Barcelona FC",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/FC_Barcelona",
        "seq": "30,42"
      }
    ],
    "id": "0a8fde7c5b8543ea9cbcbe3cd2931cd0",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/currentclub",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Was Just Another day made by Queen Latifah?",
    "SerialNumber": "4586",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Just_Another_Day...\u003e \u003chttp://dbpedia.org/ontology/musicalBand\u003e \u003chttp://dbpedia.org/resource/Queen_Latifah\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "another just day",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Just_Another_Day...",
        "seq": "999,1000"
      },
      {
        "label": "Queen Latifah",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Queen_Latifah",
        "seq": "29,42"
      }
    ],
    "id": "b4dfd5c3a0424173bb8d70e4152cdbf7",
    "predicate mapping": [
      {
        "label": "made",
        "uri": "http://dbpedia.org/ontology/musicalBand",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "Who are the players whose current clubs have Ferran Soriano as chairman?",
    "SerialNumber": "4587",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/chairman\u003e \u003chttp://dbpedia.org/resource/Ferran_Soriano\u003e . ?uri \u003chttp://dbpedia.org/property/currentclub\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ferran Soriano",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Ferran_Soriano",
        "seq": "46,60"
      }
    ],
    "id": "8cb03d7f98d14093b047782ba028ffa2",
    "predicate mapping": [
      {
        "label": "chairman",
        "uri": "http://dbpedia.org/property/chairman",
        "seq": "63,71",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "current",
        "uri": "http://dbpedia.org/property/currentclub",
        "seq": "26,33",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "clubs",
        "uri": "http://dbpedia.org/ontology/Person",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Of the places where Kurt Vonnegut Memorial Library exists, where did Louis LeCocq die?",
    "SerialNumber": "4589",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Kurt_Vonnegut_Memorial_Library\u003e \u003chttp://dbpedia.org/ontology/location\u003e ?uri. \u003chttp://dbpedia.org/resource/Louis_LeCocq\u003e \u003chttp://dbpedia.org/property/placeOfDeath\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Kurt Vonnegut Memorial Library",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Kurt_Vonnegut_Memorial_Library",
        "seq": "20,50"
      },
      {
        "label": "Louis LeCocq",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Louis_LeCocq",
        "seq": "69,81"
      }
    ],
    "id": "15e2bcfdb55148b2a535b757cdfae2bd",
    "predicate mapping": [
      {
        "label": "die",
        "uri": "http://dbpedia.org/ontology/location",
        "mappedBy": "word2vec"
      },
      {
        "label": "places",
        "uri": "http://dbpedia.org/property/placeOfDeath",
        "seq": "7,13",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "The people who did their high school in Palm City, Florida did their college where?",
    "SerialNumber": "4591",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/highschool\u003e \u003chttp://dbpedia.org/resource/Palm_City,_Florida\u003e . ?x \u003chttp://dbpedia.org/ontology/college\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Palm City, Florida",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Palm_City,_Florida",
        "seq": "40,58"
      }
    ],
    "id": "ca66cfc326e54da8afe7236d75e259f7",
    "predicate mapping": [
      {
        "label": "school high",
        "uri": "http://dbpedia.org/property/highschool",
        "seq": "-1,10",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "college",
        "uri": "http://dbpedia.org/ontology/college",
        "seq": "69,76",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "school",
        "uri": "http://dbpedia.org/ontology/Person",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Which company developed Google Web Toolkit and Google custom search?",
    "SerialNumber": "4594",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Google_Web_Toolkit\u003e \u003chttp://dbpedia.org/ontology/author\u003e ?uri. \u003chttp://dbpedia.org/resource/Google_Custom_Search\u003e \u003chttp://dbpedia.org/ontology/author\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Google Web Toolkit",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Google_Web_Toolkit",
        "seq": "24,42"
      },
      {
        "label": "Google custom search",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Google_Custom_Search",
        "seq": "47,67"
      }
    ],
    "id": "3fe61b9c19eb497db424c23986cb1dce",
    "predicate mapping": [
      {
        "label": "developed",
        "uri": "http://dbpedia.org/ontology/author",
        "mappedBy": "word2vec"
      },
      {
        "label": "developed",
        "uri": "http://dbpedia.org/ontology/author",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "From where did Ben Wilson (American football) do his highscool?",
    "SerialNumber": "4597",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Ben_Wilson_(American_football)\u003e \u003chttp://dbpedia.org/ontology/highschool\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ben Wilson (American football)",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ben_Wilson_(American_football)",
        "seq": "15,45"
      }
    ],
    "id": "3b97fa49140f452d85633a8d1f63764f",
    "predicate mapping": [
      {
        "label": "Wilson",
        "uri": "http://dbpedia.org/ontology/highschool",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Which sports are played in the school which runs the Fr. Agnel Stadium?",
    "SerialNumber": "4598",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Fr._Agnel_Stadium\u003e \u003chttp://dbpedia.org/property/operator\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/sport\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Fr. Agnel Stadium",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Fr._Agnel_Stadium",
        "seq": "53,70"
      }
    ],
    "id": "dd871c9e9b134d939271640e81c6095d",
    "predicate mapping": [
      {
        "label": "runs",
        "uri": "http://dbpedia.org/property/operator",
        "mappedBy": "word2vec"
      },
      {
        "label": "sport",
        "uri": "http://dbpedia.org/ontology/sport",
        "seq": "6,11",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Name the route end of the North-South Transport Corridor and Mumbai Vadodara Expressway?",
    "SerialNumber": "4599",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/North–South_Transport_Corridor\u003e \u003chttp://dbpedia.org/ontology/routeEnd\u003e ?uri. \u003chttp://dbpedia.org/resource/Mumbai_Vadodara_Expressway\u003e \u003chttp://dbpedia.org/ontology/routeEnd\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/North–South_Transport_Corridor",
        "seq": "999,1000"
      },
      {
        "label": "Mumbai Vadodara Expressway",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Mumbai_Vadodara_Expressway",
        "seq": "61,87"
      }
    ],
    "id": "ea3bd4ab943c4ebf82618c545d171971",
    "predicate mapping": [
      {
        "label": "route end",
        "uri": "http://dbpedia.org/ontology/routeEnd",
        "seq": "9,18",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "route end",
        "uri": "http://dbpedia.org/ontology/routeEnd",
        "seq": "9,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Katharevousa writers have been given which awards?",
    "SerialNumber": "4602",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/movement\u003e \u003chttp://dbpedia.org/resource/Katharevousa\u003e . ?x \u003chttp://dbpedia.org/ontology/award\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Writer\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Katharevousa",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Katharevousa",
        "seq": "0,12"
      }
    ],
    "id": "0312574f280d45a89cd5147313fad0b1",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/movement",
        "mappedBy": "word2vec"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/award",
        "seq": "43,49",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "writers",
        "uri": "http://dbpedia.org/ontology/Writer",
        "seq": "13,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "311",
    "question": "List the subjects of the books whose one of the topics is Pau Broca ?",
    "SerialNumber": "4608",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/subject\u003e \u003chttp://dbpedia.org/resource/Paul_Broca\u003e . ?x \u003chttp://dbpedia.org/property/subject\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Book\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "broca pau",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Paul_Broca",
        "seq": "999,1000"
      }
    ],
    "id": "7d287a0404374984833426b01ed42751",
    "predicate mapping": [
      {
        "label": "subject",
        "uri": "http://dbpedia.org/property/subject",
        "seq": "9,16",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "subject",
        "uri": "http://dbpedia.org/property/subject",
        "seq": "9,16",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "book",
        "uri": "http://dbpedia.org/ontology/Book",
        "seq": "25,29",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "Which company owns instagram?",
    "SerialNumber": "4612",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/subsidiary\u003e \u003chttp://dbpedia.org/resource/Instagram\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "instagram",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Instagram",
        "seq": "19,28"
      }
    ],
    "id": "233b7a9099164868a3abc029100949c1",
    "predicate mapping": [
      {
        "label": "owns",
        "uri": "http://dbpedia.org/ontology/subsidiary",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Where were the sportsmen born, who started their careers with Homestead Grays?",
    "SerialNumber": "4614",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/debutteam\u003e \u003chttp://dbpedia.org/resource/Homestead_Grays\u003e . ?x \u003chttp://dbpedia.org/property/birthDate\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Athlete\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Homestead Grays",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Homestead_Grays",
        "seq": "62,77"
      }
    ],
    "id": "7c1138e9bbe54bf79f56584f88d64515",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/debutteam",
        "mappedBy": "word2vec"
      },
      {
        "label": "careers",
        "uri": "http://dbpedia.org/property/birthDate",
        "mappedBy": "word2vec"
      },
      {
        "label": "careers",
        "uri": "http://dbpedia.org/ontology/Athlete",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "In which countries can i find some feminist writers?",
    "SerialNumber": "4616",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/movement\u003e \u003chttp://dbpedia.org/resource/Feminism\u003e . ?x \u003chttp://dbpedia.org/ontology/nationality\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Writer\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "feminist",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Feminism",
        "seq": "35,43"
      }
    ],
    "id": "67b58e4d4ed94311a8d0d1ab84d2154d",
    "predicate mapping": [
      {
        "label": "find",
        "uri": "http://dbpedia.org/ontology/movement",
        "mappedBy": "word2vec"
      },
      {
        "label": "find",
        "uri": "http://dbpedia.org/ontology/nationality",
        "mappedBy": "word2vec"
      },
      {
        "label": "writers",
        "uri": "http://dbpedia.org/ontology/Writer",
        "seq": "44,51",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Which famous philosopher died on island Euboea?",
    "SerialNumber": "4617",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/deathDate\u003e \u003chttp://dbpedia.org/resource/Euboea\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Philosopher\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Euboea",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Euboea",
        "seq": "40,46"
      }
    ],
    "id": "794526bf2c154e83bd9954aed2e8d6ea",
    "predicate mapping": [
      {
        "label": "island",
        "uri": "http://dbpedia.org/property/deathDate",
        "mappedBy": "word2vec"
      },
      {
        "label": "philosopher",
        "uri": "http://dbpedia.org/ontology/Philosopher",
        "seq": "13,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who was the president under which a tennis player held office before John W. Weeks?",
    "SerialNumber": "4620",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/predecessor\u003e \u003chttp://dbpedia.org/resource/John_W._Weeks\u003e . ?x \u003chttp://dbpedia.org/property/president\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TennisPlayer\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "John W. Weeks",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/John_W._Weeks",
        "seq": "69,82"
      }
    ],
    "id": "fece7229f9bf482dbebf1709a0fb8112",
    "predicate mapping": [
      {
        "label": "office",
        "uri": "http://dbpedia.org/property/predecessor",
        "mappedBy": "word2vec"
      },
      {
        "label": "president",
        "uri": "http://dbpedia.org/property/president",
        "seq": "12,21",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "tennis player",
        "uri": "http://dbpedia.org/ontology/TennisPlayer",
        "seq": "36,49",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "Who are the tenants of the stadium where the UFC 140 is located?",
    "SerialNumber": "4626",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/UFC_140\u003e \u003chttp://dbpedia.org/ontology/location\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/tenant\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Stadium\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "UFC 140",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/UFC_140",
        "seq": "45,52"
      }
    ],
    "id": "0fa03d2ba63f4f22b7c78644d60f399d",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/ontology/location",
        "mappedBy": "word2vec"
      },
      {
        "label": "tenant",
        "uri": "http://dbpedia.org/ontology/tenant",
        "seq": "12,18",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "stadium",
        "uri": "http://dbpedia.org/ontology/Stadium",
        "seq": "27,34",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Which religion followers are in the Royal Thai Army?",
    "SerialNumber": "4628",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/militaryBranch\u003e \u003chttp://dbpedia.org/resource/Royal_Thai_Army\u003e . ?x \u003chttp://dbpedia.org/ontology/religion\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Royal Thai Army",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Royal_Thai_Army",
        "seq": "36,51"
      }
    ],
    "id": "cbc87af1e755447fa98c05a0e64a2eb2",
    "predicate mapping": [
      {
        "label": "followers",
        "uri": "http://dbpedia.org/ontology/militaryBranch",
        "mappedBy": "word2vec"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion",
        "seq": "6,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "In which teams did anyone who played as a defencemen, play previously?",
    "SerialNumber": "4629",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/position\u003e \u003chttp://dbpedia.org/resource/Defenceman\u003e . ?x \u003chttp://dbpedia.org/ontology/formerTeam\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "previously",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Defenceman",
        "seq": "59,69"
      }
    ],
    "id": "572bc2bfc3424538bdc77b22722dfe47",
    "predicate mapping": [
      {
        "label": "play",
        "uri": "http://dbpedia.org/property/position",
        "mappedBy": "word2vec"
      },
      {
        "label": "teams",
        "uri": "http://dbpedia.org/ontology/formerTeam",
        "seq": "9,14",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Did James brown make the song Killing is Out, School Is In?",
    "SerialNumber": "4630",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Killing_Is_Out,_School_Is_In\u003e \u003chttp://dbpedia.org/ontology/musicalBand\u003e \u003chttp://dbpedia.org/resource/James_Brown\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Killing is Out, School Is In",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Killing_Is_Out,_School_Is_In",
        "seq": "30,58"
      },
      {
        "label": "James brown",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/James_Brown",
        "seq": "4,15"
      }
    ],
    "id": "dab9358e5ab14f72b0af6926cb98b371",
    "predicate mapping": [
      {
        "label": "song",
        "uri": "http://dbpedia.org/ontology/musicalBand",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What party are Siddharta Shankar Ray and Kamla Beniwal from?",
    "SerialNumber": "4632",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Siddhartha_Shankar_Ray\u003e \u003chttp://dbpedia.org/ontology/party\u003e ?uri. \u003chttp://dbpedia.org/resource/Kamla_Beniwal\u003e \u003chttp://dbpedia.org/property/party\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Siddhartha_Shankar_Ray",
        "seq": "999,1000"
      },
      {
        "label": "Kamla Beniwal",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Kamla_Beniwal",
        "seq": "41,54"
      }
    ],
    "id": "16a642c2d9054f76866946a7e2aa742a",
    "predicate mapping": [
      {
        "label": "party",
        "uri": "http://dbpedia.org/ontology/party",
        "seq": "5,10",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "party",
        "uri": "http://dbpedia.org/property/party",
        "seq": "5,10",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "101",
    "question": "How many apes are there?",
    "SerialNumber": "4635",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/ontology/family\u003e \u003chttp://dbpedia.org/resource/Ape\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "ape",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ape",
        "seq": "9,12"
      }
    ],
    "id": "09f4a767c4ef49b09ad81beafe0dcf61",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/family",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Where did the war take place where one of the commander was Zuo Zongtang?",
    "SerialNumber": "4640",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/commander\u003e \u003chttp://dbpedia.org/resource/Zuo_Zongtang\u003e . ?x \u003chttp://dbpedia.org/ontology/territory\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MilitaryConflict\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Zuo Zongtang",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Zuo_Zongtang",
        "seq": "60,72"
      }
    ],
    "id": "e41dd0cd6d1140b8b8f3f4cf25ac51e1",
    "predicate mapping": [
      {
        "label": "commander",
        "uri": "http://dbpedia.org/ontology/commander",
        "seq": "46,55",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "place",
        "uri": "http://dbpedia.org/ontology/territory",
        "mappedBy": "word2vec"
      },
      {
        "label": "place",
        "uri": "http://dbpedia.org/ontology/MilitaryConflict",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which route start of Moscow-Kazan high-speed railway is the home stadium of 2011-12 FC Spartak Moscow ?",
    "SerialNumber": "4642",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Moscow-Kazan_high-speed_railway\u003e \u003chttp://dbpedia.org/ontology/routeStart\u003e ?uri. \u003chttp://dbpedia.org/resource/2011–12_FC_Spartak_Moscow_season\u003e \u003chttp://dbpedia.org/ontology/homeStadium\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Moscow-Kazan high-speed railway",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Moscow-Kazan_high-speed_railway",
        "seq": "21,52"
      },
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/2011–12_FC_Spartak_Moscow_season",
        "seq": "999,1000"
      }
    ],
    "id": "6d665a3fde3242e690e58cf5a30b7331",
    "predicate mapping": [
      {
        "label": "route start",
        "uri": "http://dbpedia.org/ontology/routeStart",
        "seq": "6,17",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "home stadium",
        "uri": "http://dbpedia.org/ontology/homeStadium",
        "seq": "60,72",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who was the PM under which William Deane served?",
    "SerialNumber": "4644",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/William_Deane\u003e \u003chttp://dbpedia.org/ontology/primeMinister\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "William Deane",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/William_Deane",
        "seq": "27,40"
      }
    ],
    "id": "a5f5c0c2445b4506b6b33166953033e2",
    "predicate mapping": [
      {
        "label": "served",
        "uri": "http://dbpedia.org/ontology/primeMinister",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "What killed John Thompson Mason and Martino Martini?",
    "SerialNumber": "4646",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/John_Thomson_Mason_(1787–1850)\u003e \u003chttp://dbpedia.org/ontology/deathCause\u003e ?uri. \u003chttp://dbpedia.org/resource/Martino_Martini\u003e \u003chttp://dbpedia.org/ontology/deathCause\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/John_Thomson_Mason_(1787–1850)",
        "seq": "999,1000"
      },
      {
        "label": "Martino Martini",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Martino_Martini",
        "seq": "36,51"
      }
    ],
    "id": "a66454f689bf4ec393eef188c8ea0fb6",
    "predicate mapping": [
      {
        "label": "Mason",
        "uri": "http://dbpedia.org/ontology/deathCause",
        "mappedBy": "word2vec"
      },
      {
        "label": "Mason",
        "uri": "http://dbpedia.org/ontology/deathCause",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "How many different currencies are used in the places governed by the president of France?",
    "SerialNumber": "4647",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/leaderTitle\u003e \u003chttp://dbpedia.org/resource/President_of_France\u003e . ?x \u003chttp://dbpedia.org/ontology/currency\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "president of France",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/President_of_France",
        "seq": "69,88"
      }
    ],
    "id": "36e913ffdfe04f3c836be75b16def3a4",
    "predicate mapping": [
      {
        "label": "governed",
        "uri": "http://dbpedia.org/property/leaderTitle",
        "mappedBy": "word2vec"
      },
      {
        "label": "currencies",
        "uri": "http://dbpedia.org/ontology/currency",
        "seq": "19,29",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "101",
    "question": "How many people play for the Dallas Cowboys?",
    "SerialNumber": "4649",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/ontology/team\u003e \u003chttp://dbpedia.org/resource/Dallas_Cowboys\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Dallas Cowboys",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Dallas_Cowboys",
        "seq": "29,43"
      }
    ],
    "id": "a850c2eb0a1a4e92b601ea447d0228f2",
    "predicate mapping": [
      {
        "label": "play",
        "uri": "http://dbpedia.org/ontology/team",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Where did the people die who were known for Young Life?",
    "SerialNumber": "4651",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/knownFor\u003e \u003chttp://dbpedia.org/resource/Young_Life\u003e . ?x \u003chttp://dbpedia.org/ontology/deathPlace\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Young Life",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Young_Life",
        "seq": "44,54"
      }
    ],
    "id": "2d3593472ac64342ae437da2e0f9880f",
    "predicate mapping": [
      {
        "label": "known for",
        "uri": "http://dbpedia.org/ontology/knownFor",
        "seq": "34,43",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "die",
        "uri": "http://dbpedia.org/ontology/deathPlace",
        "mappedBy": "word2vec"
      },
      {
        "label": "die",
        "uri": "http://dbpedia.org/ontology/Person",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who are the  judges of the television show whose anchor is Josh Groban?",
    "SerialNumber": "4655",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/presenter\u003e \u003chttp://dbpedia.org/resource/Josh_Groban\u003e . ?x \u003chttp://dbpedia.org/property/judges\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Josh Groban",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Josh_Groban",
        "seq": "59,70"
      }
    ],
    "id": "0652b6c013d14959a266fdbb14f106ab",
    "predicate mapping": [
      {
        "label": "anchor",
        "uri": "http://dbpedia.org/property/presenter",
        "mappedBy": "word2vec"
      },
      {
        "label": "judges",
        "uri": "http://dbpedia.org/property/judges",
        "seq": "13,19",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "27,42",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "108",
    "question": "Give me the total number of television shows whose theme music composer is Julian Gingell and created by  Simon Fuller?",
    "SerialNumber": "4656",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/property/themeMusicComposer\u003e \u003chttp://dbpedia.org/resource/Julian_Gingell\u003e . ?uri \u003chttp://dbpedia.org/property/creator\u003e \u003chttp://dbpedia.org/resource/Simon_Fuller\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Julian Gingell",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Julian_Gingell",
        "seq": "75,89"
      },
      {
        "label": "Simon Fuller",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Simon_Fuller",
        "seq": "106,118"
      }
    ],
    "id": "dba124f2991542c596c0081858c11b79",
    "predicate mapping": [
      {
        "label": "theme music composer",
        "uri": "http://dbpedia.org/property/themeMusicComposer",
        "seq": "51,71",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "created",
        "uri": "http://dbpedia.org/property/creator",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What ethnicity do people in British Columbia belong to?",
    "SerialNumber": "4658",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/residence\u003e \u003chttp://dbpedia.org/resource/British_Columbia\u003e . ?x \u003chttp://dbpedia.org/ontology/ethnicity\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "British Columbia",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/British_Columbia",
        "seq": "28,44"
      }
    ],
    "id": "0d93df312f8448acb89d604531f0dcc3",
    "predicate mapping": [
      {
        "label": "belong",
        "uri": "http://dbpedia.org/property/residence",
        "mappedBy": "word2vec"
      },
      {
        "label": "ethnicity",
        "uri": "http://dbpedia.org/ontology/ethnicity",
        "seq": "5,14",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "belong",
        "uri": "http://dbpedia.org/ontology/Person",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "Which awards did the creator of A Barrel of Laughs, a Vale of Tears won ?",
    "SerialNumber": "4661",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/A_Barrel_of_Laughs,_a_Vale_of_Tears\u003e \u003chttp://dbpedia.org/ontology/author\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/award\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/ComicsCreator\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "A Barrel of Laughs, a Vale of Tears",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/A_Barrel_of_Laughs,_a_Vale_of_Tears",
        "seq": "32,67"
      }
    ],
    "id": "214ff25fe3d84f69a29dc354d42a6207",
    "predicate mapping": [
      {
        "label": "won",
        "uri": "http://dbpedia.org/ontology/author",
        "mappedBy": "word2vec"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/award",
        "seq": "6,12",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "creator",
        "uri": "http://dbpedia.org/ontology/ComicsCreator",
        "seq": "21,28",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "What is father\u0027s name who also served in military of Carlene Carter?",
    "SerialNumber": "4662",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/children\u003e \u003chttp://dbpedia.org/resource/Carlene_Carter\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Carlene Carter",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Carlene_Carter",
        "seq": "53,67"
      }
    ],
    "id": "8c3a21bdc66d4755b75c98c498773f1e",
    "predicate mapping": [
      {
        "label": "military",
        "uri": "http://dbpedia.org/property/children",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "In which university did Harlan Mathews study, where Richard Meriil Atkinson went too?",
    "SerialNumber": "4663",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Harlan_Mathews\u003e \u003chttp://dbpedia.org/ontology/almaMater\u003e ?uri. \u003chttp://dbpedia.org/resource/Richard_Merrill_Atkinson\u003e \u003chttp://dbpedia.org/ontology/almaMater\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Harlan Mathews",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Harlan_Mathews",
        "seq": "24,38"
      },
      {
        "label": "atkinson richard",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Richard_Merrill_Atkinson",
        "seq": "999,1000"
      }
    ],
    "id": "930ba27955d9475587dbbb75ffcae399",
    "predicate mapping": [
      {
        "label": "Atkinson",
        "uri": "http://dbpedia.org/ontology/almaMater",
        "mappedBy": "word2vec"
      },
      {
        "label": "Atkinson",
        "uri": "http://dbpedia.org/ontology/almaMater",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "405",
    "question": "How many people have trained the wrestlers who were billed in Wisconsin?",
    "SerialNumber": "4664",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/billed\u003e \u003chttp://dbpedia.org/resource/Wisconsin\u003e . ?x \u003chttp://dbpedia.org/ontology/trainer\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Wisconsin",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Wisconsin",
        "seq": "62,71"
      }
    ],
    "id": "e36c53ecf3f04cf7a35675ce5ff859ea",
    "predicate mapping": [
      {
        "label": "billed",
        "uri": "http://dbpedia.org/ontology/billed",
        "seq": "52,58",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "trained",
        "uri": "http://dbpedia.org/ontology/trainer",
        "seq": "21,28",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "wrestlers",
        "uri": "http://dbpedia.org/ontology/Person",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Did Chant Mas originate in West Africa?",
    "SerialNumber": "4667",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Chanté_mas\u003e \u003chttp://dbpedia.org/ontology/stylisticOrigin\u003e \u003chttp://dbpedia.org/resource/West_Africa\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "chant mas",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Chanté_mas",
        "seq": "999,1000"
      },
      {
        "label": "West Africa",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/West_Africa",
        "seq": "27,38"
      }
    ],
    "id": "df518a80342e4fb984830368c9884d96",
    "predicate mapping": [
      {
        "label": "originate",
        "uri": "http://dbpedia.org/ontology/stylisticOrigin",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "8",
    "question": "Which current player of Chicago Bulls was drafted by Los Angeles Clippers ?",
    "SerialNumber": "4671",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/team\u003e \u003chttp://dbpedia.org/resource/Chicago_Bulls\u003e . ?uri \u003chttp://dbpedia.org/property/draftTeam\u003e \u003chttp://dbpedia.org/resource/Los_Angeles_Clippers\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Chicago Bulls",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Chicago_Bulls",
        "seq": "24,37"
      },
      {
        "label": "Los Angeles Clippers",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Los_Angeles_Clippers",
        "seq": "53,73"
      }
    ],
    "id": "105528dc63e94de280ca2dd24c29a603",
    "predicate mapping": [
      {
        "label": "player",
        "uri": "http://dbpedia.org/property/team",
        "mappedBy": "word2vec"
      },
      {
        "label": "drafted",
        "uri": "http://dbpedia.org/property/draftTeam",
        "seq": "42,49",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "tell me the school to which Cyril Hume went?",
    "SerialNumber": "4675",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Cyril_Hume\u003e \u003chttp://dbpedia.org/property/education\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Cyril Hume",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Cyril_Hume",
        "seq": "28,38"
      }
    ],
    "id": "cd0e2088c4334a499439865a4b8605d1",
    "predicate mapping": [
      {
        "label": "school",
        "uri": "http://dbpedia.org/property/education",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who has built the stadiums which were rented by the Central american games of 2013?",
    "SerialNumber": "4676",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/tenant\u003e \u003chttp://dbpedia.org/resource/2013_Central_American_Games\u003e . ?x \u003chttp://dbpedia.org/ontology/builder\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Stadium\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "american central games 2013",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/2013_Central_American_Games",
        "seq": "999,1000"
      }
    ],
    "id": "2518d2b2d1ac4e4fbd3d905d8ea634bd",
    "predicate mapping": [
      {
        "label": "games",
        "uri": "http://dbpedia.org/ontology/tenant",
        "mappedBy": "word2vec"
      },
      {
        "label": "built",
        "uri": "http://dbpedia.org/ontology/builder",
        "seq": "8,13",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "stadium",
        "uri": "http://dbpedia.org/ontology/Stadium",
        "seq": "18,25",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "Estimate the number of sports divisions at the universities under international association of universities.",
    "SerialNumber": "4677",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/affiliation\u003e \u003chttp://dbpedia.org/resource/International_Association_of_Universities\u003e . ?x \u003chttp://dbpedia.org/ontology/sport\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "international association of universities",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/International_Association_of_Universities",
        "seq": "66,107"
      }
    ],
    "id": "3f549a2b9eb34b59bd94ab9d9d2a60d2",
    "predicate mapping": [
      {
        "label": "universities",
        "uri": "http://dbpedia.org/ontology/affiliation",
        "mappedBy": "word2vec"
      },
      {
        "label": "sport",
        "uri": "http://dbpedia.org/ontology/sport",
        "seq": "23,28",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What is sovereignity of the successor of Mr. George Robert Andrews ?",
    "SerialNumber": "4679",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/George_Roberts_Andrews\u003e \u003chttp://dbpedia.org/property/successor\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/country\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "George Robert Andrews",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/George_Roberts_Andrews",
        "seq": "45,66"
      }
    ],
    "id": "600bf1ca0e93442ba5fa63154cf524a9",
    "predicate mapping": [
      {
        "label": "successor",
        "uri": "http://dbpedia.org/property/successor",
        "seq": "28,37",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "Mr.",
        "uri": "http://dbpedia.org/ontology/country",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which show developed by Brain Graden has theme music composed by Primus ?",
    "SerialNumber": "4681",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/developer\u003e \u003chttp://dbpedia.org/resource/Brian_Graden\u003e . ?uri \u003chttp://dbpedia.org/property/themeMusicComposer\u003e \u003chttp://dbpedia.org/resource/Primus_(band)\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "graden",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Brian_Graden",
        "seq": "999,1000"
      },
      {
        "label": "Primus",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Primus_(band)",
        "seq": "65,71"
      }
    ],
    "id": "aed72becd6f144b194afb38e15d9b5c2",
    "predicate mapping": [
      {
        "label": "developed by",
        "uri": "http://dbpedia.org/property/developer",
        "seq": "11,23",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "composed",
        "uri": "http://dbpedia.org/property/themeMusicComposer",
        "seq": "53,61",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "6,10",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What mammals are classified into Diprotodontia ?",
    "SerialNumber": "4682",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/order\u003e \u003chttp://dbpedia.org/resource/Diprotodontia\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Mammal\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Diprotodontia",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Diprotodontia",
        "seq": "33,46"
      }
    ],
    "id": "55b30011d61b4084beb7e4971374cac2",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/order",
        "mappedBy": "word2vec"
      },
      {
        "label": "mammal",
        "uri": "http://dbpedia.org/ontology/Mammal",
        "seq": "5,11",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who all have succeeded the kings buried in Rome?",
    "SerialNumber": "4683",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/placeOfBurial\u003e \u003chttp://dbpedia.org/resource/Rome\u003e . ?x \u003chttp://dbpedia.org/ontology/successor\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Royalty\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Rome",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Rome",
        "seq": "43,47"
      }
    ],
    "id": "acf96951be6c4bdda4d3fe9e77b9da55",
    "predicate mapping": [
      {
        "label": "buried in",
        "uri": "http://dbpedia.org/property/placeOfBurial",
        "seq": "33,42",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "kings",
        "uri": "http://dbpedia.org/ontology/successor",
        "mappedBy": "word2vec"
      },
      {
        "label": "kings",
        "uri": "http://dbpedia.org/ontology/Royalty",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Where did the  designer of Monument to Salavat Yulaev die?",
    "SerialNumber": "4685",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Monument_to_Salavat_Yulaev\u003e \u003chttp://dbpedia.org/ontology/designer\u003e ?x . ?x \u003chttp://dbpedia.org/property/placeOfDeath\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Monument to Salavat Yulaev",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Monument_to_Salavat_Yulaev",
        "seq": "27,53"
      }
    ],
    "id": "e0c15d9cbe7d442b90853f84915861a9",
    "predicate mapping": [
      {
        "label": "designer",
        "uri": "http://dbpedia.org/ontology/designer",
        "seq": "15,23",
        "mappedBy": "byLabelMatch"
      },
      {
        "uri": "http://dbpedia.org/property/placeOfDeath",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Where is the constituency of John Smith Griffin ?",
    "SerialNumber": "4687",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/John_Smith_Griffin\u003e \u003chttp://dbpedia.org/property/constituency\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/location\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "John Smith Griffin",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/John_Smith_Griffin",
        "seq": "29,47"
      }
    ],
    "id": "bea54664fe0f4bb38b817c38546b103d",
    "predicate mapping": [
      {
        "label": "constituency",
        "uri": "http://dbpedia.org/property/constituency",
        "seq": "13,25",
        "mappedBy": "byLabelMatch"
      },
      {
        "uri": "http://dbpedia.org/ontology/location",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Which companies have launched from the Vandenberg Air Force Air base?",
    "SerialNumber": "4689",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/launchSite\u003e \u003chttp://dbpedia.org/resource/Vandenberg_Air_Force_Base\u003e . ?x \u003chttp://dbpedia.org/ontology/manufacturer\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Vandenberg Air Force Air",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Vandenberg_Air_Force_Base",
        "seq": "39,63"
      }
    ],
    "id": "55f6d1bfea1c4facbb55ebbb90805560",
    "predicate mapping": [
      {
        "label": "launched",
        "uri": "http://dbpedia.org/ontology/launchSite",
        "seq": "21,29",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "base",
        "uri": "http://dbpedia.org/ontology/manufacturer",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "406",
    "question": " How many scientist have won an award by the society led by Venkatraman Ramakrishnan?",
    "SerialNumber": "4693",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/leaderName\u003e \u003chttp://dbpedia.org/resource/Venkatraman_Ramakrishnan\u003e . ?uri \u003chttp://dbpedia.org/property/prizes\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Scientist\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Venkatraman Ramakrishnan",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Venkatraman_Ramakrishnan",
        "seq": "60,84"
      }
    ],
    "id": "84f2de8922174f768151cc95ffc13a23",
    "predicate mapping": [
      {
        "label": "led",
        "uri": "http://dbpedia.org/property/leaderName",
        "seq": "53,56",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "society",
        "uri": "http://dbpedia.org/property/prizes",
        "mappedBy": "word2vec"
      },
      {
        "label": "scientist",
        "uri": "http://dbpedia.org/ontology/Scientist",
        "seq": "10,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which television show is based in Massachusetts and has opening theme as \"Where Everybody Knows Your Name\" ?",
    "SerialNumber": "4695",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/openingTheme\u003e \u003chttp://dbpedia.org/resource/Where_Everybody_Knows_Your_Name\u003e . ?uri \u003chttp://dbpedia.org/ontology/location\u003e \u003chttp://dbpedia.org/resource/Massachusetts\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Where Everybody Knows Your Name",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Where_Everybody_Knows_Your_Name",
        "seq": "74,105"
      },
      {
        "label": "Massachusetts",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Massachusetts",
        "seq": "34,47"
      }
    ],
    "id": "a94b8573bbf7434592b2463cc3700be8",
    "predicate mapping": [
      {
        "label": "opening theme",
        "uri": "http://dbpedia.org/ontology/openingTheme",
        "seq": "56,69",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "based",
        "uri": "http://dbpedia.org/ontology/location",
        "mappedBy": "word2vec"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "6,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "For which team do Guido Guerrini and Massimo Liverani currently play for?",
    "SerialNumber": "4701",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Guido_Guerrini\u003e \u003chttp://dbpedia.org/property/currentTeam\u003e ?uri. \u003chttp://dbpedia.org/resource/Massimo_Liverani\u003e \u003chttp://dbpedia.org/property/currentTeam\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Guido Guerrini",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Guido_Guerrini",
        "seq": "18,32"
      },
      {
        "label": "Massimo Liverani",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Massimo_Liverani",
        "seq": "37,53"
      }
    ],
    "id": "03a102b6e3c94e6d819336676a2e112d",
    "predicate mapping": [
      {
        "label": "play",
        "uri": "http://dbpedia.org/property/currentTeam",
        "mappedBy": "word2vec"
      },
      {
        "label": "play",
        "uri": "http://dbpedia.org/property/currentTeam",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "Which games publishers are located in California?",
    "SerialNumber": "4702",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/location\u003e \u003chttp://dbpedia.org/resource/California\u003e . ?uri \u003chttp://dbpedia.org/ontology/publisher\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "California",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/California",
        "seq": "38,48"
      }
    ],
    "id": "10f14cccfbd949feb78ff964c2f44eb9",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/ontology/location",
        "mappedBy": "word2vec"
      },
      {
        "label": "publisher",
        "uri": "http://dbpedia.org/ontology/publisher",
        "seq": "12,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the company with product named Microsft Azure and provides OneDrive as a service ?",
    "SerialNumber": "4714",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/product\u003e \u003chttp://dbpedia.org/resource/Microsoft_Azure\u003e . ?uri \u003chttp://dbpedia.org/property/services\u003e \u003chttp://dbpedia.org/resource/OneDrive\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Company\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Microsoft_Azure",
        "seq": "999,1000"
      },
      {
        "label": "OneDrive",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/OneDrive",
        "seq": "64,72"
      }
    ],
    "id": "05243a944c564231bfbdcc7577bf0492",
    "predicate mapping": [
      {
        "label": "product",
        "uri": "http://dbpedia.org/ontology/product",
        "seq": "22,29",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "service",
        "uri": "http://dbpedia.org/property/services",
        "seq": "78,85",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company",
        "seq": "9,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Which famous commander led the Siege of forn meigs and was involved in the battle of fort stephenson?",
    "SerialNumber": "4716",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Siege_of_Fort_Meigs\u003e \u003chttp://dbpedia.org/ontology/commander\u003e ?uri. \u003chttp://dbpedia.org/resource/Battle_of_Fort_Stephenson\u003e \u003chttp://dbpedia.org/ontology/commander\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "siege meigs fort",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Siege_of_Fort_Meigs",
        "seq": "999,1000"
      },
      {
        "label": "battle of fort stephenson",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Battle_of_Fort_Stephenson",
        "seq": "75,100"
      }
    ],
    "id": "11258ba9f4464dabb69a719605f61b78",
    "predicate mapping": [
      {
        "label": "commander",
        "uri": "http://dbpedia.org/ontology/commander",
        "seq": "13,22",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "commander",
        "uri": "http://dbpedia.org/ontology/commander",
        "seq": "13,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Where did the partner of Teriitaria II die?",
    "SerialNumber": "4721",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Teriitaria_II\u003e \u003chttp://dbpedia.org/property/spouse\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/deathPlace\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Teriitaria II",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Teriitaria_II",
        "seq": "25,38"
      }
    ],
    "id": "d03cf8ab9ba54ead94c0ab2b0355b918",
    "predicate mapping": [
      {
        "label": "partner",
        "uri": "http://dbpedia.org/property/spouse",
        "seq": "14,21",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "die",
        "uri": "http://dbpedia.org/ontology/deathPlace",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which work institue of andrew Schally belongs to WTUL ?",
    "SerialNumber": "4722",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Andrew_Schally\u003e \u003chttp://dbpedia.org/property/workInstitutions\u003e ?uri. \u003chttp://dbpedia.org/resource/WTUL\u003e \u003chttp://dbpedia.org/property/owner\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "andrew Schally",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Andrew_Schally",
        "seq": "23,37"
      },
      {
        "label": "WTUL",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/WTUL",
        "seq": "49,53"
      }
    ],
    "id": "e5fd26f8366941a1a8300ce006874f4c",
    "predicate mapping": [
      {
        "label": "institue",
        "uri": "http://dbpedia.org/property/workInstitutions",
        "mappedBy": "word2vec"
      },
      {
        "label": "belongs to",
        "uri": "http://dbpedia.org/property/owner",
        "seq": "38,48",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Under which common jurisdiction do Trinity School, Brentwood and Buckhurst Hill County High School fall?",
    "SerialNumber": "4726",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Trinity_School,_Brentwood\u003e \u003chttp://dbpedia.org/ontology/localAuthority\u003e ?uri. \u003chttp://dbpedia.org/resource/Buckhurst_Hill_County_High_School\u003e \u003chttp://dbpedia.org/ontology/localAuthority\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Trinity School, Brentwood",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Trinity_School,_Brentwood",
        "seq": "35,60"
      },
      {
        "label": "Buckhurst Hill County High School",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Buckhurst_Hill_County_High_School",
        "seq": "65,98"
      }
    ],
    "id": "28ad5ec354e644e4adfd4890503082b9",
    "predicate mapping": [
      {
        "label": "fall",
        "uri": "http://dbpedia.org/ontology/localAuthority",
        "mappedBy": "word2vec"
      },
      {
        "label": "fall",
        "uri": "http://dbpedia.org/ontology/localAuthority",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "101",
    "question": "How many things are written in C++?",
    "SerialNumber": "4729",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/property/programmingLanguage\u003e \u003chttp://dbpedia.org/resource/C++\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "C++",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/C++",
        "seq": "31,34"
      }
    ],
    "id": "79277088dda94649b2348c07d0dd17e5",
    "predicate mapping": [
      {
        "label": "written",
        "uri": "http://dbpedia.org/property/programmingLanguage",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "401",
    "question": "How many artists play as Rickenbacker?",
    "SerialNumber": "4730",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/ontology/instrument\u003e \u003chttp://dbpedia.org/resource/Rickenbacker\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Artist\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Rickenbacker",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Rickenbacker",
        "seq": "25,37"
      }
    ],
    "id": "4d5845bcd6044165bbcdfa12d79bd84d",
    "predicate mapping": [
      {
        "label": "play",
        "uri": "http://dbpedia.org/ontology/instrument",
        "mappedBy": "word2vec"
      },
      {
        "label": "artist",
        "uri": "http://dbpedia.org/ontology/Artist",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Who were the opponents of employees of Henry Howard, the Northampton Earl?",
    "SerialNumber": "4731",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/employer\u003e \u003chttp://dbpedia.org/resource/Henry_Howard,_1st_Earl_of_Northampton\u003e . ?x \u003chttp://dbpedia.org/ontology/opponent\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "northampton howard, henry earl",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Henry_Howard,_1st_Earl_of_Northampton",
        "seq": "999,1000"
      }
    ],
    "id": "5617f56ff171400ebf9650a950609f0c",
    "predicate mapping": [
      {
        "label": "Earl",
        "uri": "http://dbpedia.org/ontology/employer",
        "mappedBy": "word2vec"
      },
      {
        "label": "opponent",
        "uri": "http://dbpedia.org/ontology/opponent",
        "seq": "13,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "List the mammals whose taxonomy is Diprotodontia and phylum is Chordate?",
    "SerialNumber": "4732",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/order\u003e \u003chttp://dbpedia.org/resource/Diprotodontia\u003e . ?uri \u003chttp://dbpedia.org/ontology/phylum\u003e \u003chttp://dbpedia.org/resource/Chordate\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Mammal\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Diprotodontia",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Diprotodontia",
        "seq": "35,48"
      },
      {
        "label": "Chordate",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Chordate",
        "seq": "63,71"
      }
    ],
    "id": "14fbed5378264537bb4a579854d59789",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/order",
        "mappedBy": "word2vec"
      },
      {
        "label": "phylum",
        "uri": "http://dbpedia.org/ontology/phylum",
        "seq": "53,59",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "mammal",
        "uri": "http://dbpedia.org/ontology/Mammal",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the river whose source region is North-Western Province, Zambia and source location is Ikelenge  District?",
    "SerialNumber": "4734",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/sourceRegion\u003e \u003chttp://dbpedia.org/resource/North-Western_Province,_Zambia\u003e . ?uri \u003chttp://dbpedia.org/property/sourceLocation\u003e \u003chttp://dbpedia.org/resource/Ikelenge_District\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/River\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "North-Western Province, Zambia",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/North-Western_Province,_Zambia",
        "seq": "38,68"
      },
      {
        "label": "ikelenge district",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Ikelenge_District",
        "seq": "999,1000"
      }
    ],
    "id": "bb053b427bf8492cabece4ccf6a9a256",
    "predicate mapping": [
      {
        "label": "source region",
        "uri": "http://dbpedia.org/property/sourceRegion",
        "seq": "21,34",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "source location",
        "uri": "http://dbpedia.org/property/sourceLocation",
        "seq": "73,88",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which collaborator of Nice and Smooth wrote Same Song ?",
    "SerialNumber": "4736",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Nice_\u0026_Smooth\u003e \u003chttp://dbpedia.org/ontology/associatedBand\u003e ?uri. \u003chttp://dbpedia.org/resource/Same_Song_(Digital_Underground_song)\u003e \u003chttp://dbpedia.org/property/writer\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "smooth nice",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Nice_\u0026_Smooth",
        "seq": "999,1000"
      },
      {
        "label": "Same Song",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Same_Song_(Digital_Underground_song)",
        "seq": "44,53"
      }
    ],
    "id": "b4b6cd2e49ad4a12b209a01e1eab720b",
    "predicate mapping": [
      {
        "label": "and",
        "uri": "http://dbpedia.org/ontology/associatedBand",
        "seq": "27,30",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "wrote",
        "uri": "http://dbpedia.org/property/writer",
        "seq": "38,43",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "How many awards have been given to screenwriters?",
    "SerialNumber": "4741",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/occupation\u003e \u003chttp://dbpedia.org/resource/Screenwriter\u003e . ?x \u003chttp://dbpedia.org/property/awards\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "screenwriter",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Screenwriter",
        "seq": "35,47"
      }
    ],
    "id": "a0c73428e66a4f2bb89939cc2149d2bf",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/occupation",
        "mappedBy": "word2vec"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "To which county of New York city does the Tremount Avenue street belong?",
    "SerialNumber": "4744",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Tremont_Avenue\u003e \u003chttp://dbpedia.org/property/counties\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Tremont_Avenue",
        "seq": "999,1000"
      }
    ],
    "id": "db2a89ff91b04227888c9c20728914c9",
    "predicate mapping": [
      {
        "label": "county",
        "uri": "http://dbpedia.org/property/counties",
        "seq": "9,15",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Where is the tomb of son of Bruce Lee?",
    "SerialNumber": "4747",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/parent\u003e \u003chttp://dbpedia.org/resource/Bruce_Lee\u003e . ?x \u003chttp://dbpedia.org/ontology/restingPlace\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Bruce Lee",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Bruce_Lee",
        "seq": "28,37"
      }
    ],
    "id": "e3f73674fbdd41a38021d60204f7196f",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/parent",
        "mappedBy": "word2vec"
      },
      {
        "label": "tomb",
        "uri": "http://dbpedia.org/ontology/restingPlace",
        "seq": "13,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which university has a sports team member called Micheal Powell and also owns Syracuse University Press ?",
    "SerialNumber": "4752",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Michael_Powell_(lacrosse)\u003e \u003chttp://dbpedia.org/ontology/team\u003e ?uri. \u003chttp://dbpedia.org/resource/Syracuse_University_Press\u003e \u003chttp://dbpedia.org/property/parent\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "powell",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Michael_Powell_(lacrosse)",
        "seq": "999,1000"
      },
      {
        "label": "Syracuse University Press",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Syracuse_University_Press",
        "seq": "78,103"
      }
    ],
    "id": "1c527306fea14763ad07d75de14f267f",
    "predicate mapping": [
      {
        "label": "sports team",
        "uri": "http://dbpedia.org/ontology/team",
        "seq": "23,34",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "owns",
        "uri": "http://dbpedia.org/property/parent",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Whihc successor of McDonnell Douglas was built bu Delta 3 ?",
    "SerialNumber": "4754",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Delta_III\u003e \u003chttp://dbpedia.org/ontology/manufacturer\u003e ?uri. \u003chttp://dbpedia.org/resource/McDonnell_Douglas\u003e \u003chttp://dbpedia.org/property/successor\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "delta",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Delta_III",
        "seq": "999,1000"
      },
      {
        "label": "McDonnell Douglas",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/McDonnell_Douglas",
        "seq": "19,36"
      }
    ],
    "id": "8d5634ca304b423292db69a546b53974",
    "predicate mapping": [
      {
        "label": "Delta",
        "uri": "http://dbpedia.org/ontology/manufacturer",
        "mappedBy": "word2vec"
      },
      {
        "label": "successor",
        "uri": "http://dbpedia.org/property/successor",
        "seq": "6,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the religious affiliation of the Neungin High School which is also the academic interest of Sylvain Lvi ?",
    "SerialNumber": "4757",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Neungin_High_School\u003e \u003chttp://dbpedia.org/property/religiousAffiliation\u003e ?uri. \u003chttp://dbpedia.org/resource/Sylvain_Lévi\u003e \u003chttp://dbpedia.org/property/fields\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Neungin High School",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Neungin_High_School",
        "seq": "41,60"
      },
      {
        "label": "sylvain",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Sylvain_Lévi",
        "seq": "999,1000"
      }
    ],
    "id": "23a3176ce04642ab9202377c16bb86d2",
    "predicate mapping": [
      {
        "label": "religious affiliation",
        "uri": "http://dbpedia.org/property/religiousAffiliation",
        "seq": "12,33",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "Sylvain",
        "uri": "http://dbpedia.org/property/fields",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which European sea has Oulu as one of the shore city ?",
    "SerialNumber": "4758",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/location\u003e \u003chttp://dbpedia.org/resource/Europe\u003e . ?uri \u003chttp://dbpedia.org/property/cities\u003e \u003chttp://dbpedia.org/resource/Oulu\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Sea\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Europe",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Europe",
        "seq": "6,12"
      },
      {
        "label": "Oulu",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Oulu",
        "seq": "23,27"
      }
    ],
    "id": "d615e5224cae43fabb824a9522e63556",
    "predicate mapping": [
      {
        "label": "shore",
        "uri": "http://dbpedia.org/ontology/location",
        "mappedBy": "word2vec"
      },
      {
        "label": "city",
        "uri": "http://dbpedia.org/property/cities",
        "seq": "48,52",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "sea",
        "uri": "http://dbpedia.org/ontology/Sea",
        "seq": "15,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "In which province was Dick Redding born?",
    "SerialNumber": "4763",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Dick_Redding\u003e \u003chttp://dbpedia.org/property/birthDate\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Dick Redding",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Dick_Redding",
        "seq": "22,34"
      }
    ],
    "id": "d90413f58c7e4ec4926d84d822483e59",
    "predicate mapping": [
      {
        "label": "born",
        "uri": "http://dbpedia.org/property/birthDate",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What are some cars related to the ones with a V8?",
    "SerialNumber": "4766",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/engine\u003e \u003chttp://dbpedia.org/resource/V8_engine\u003e . ?x \u003chttp://dbpedia.org/property/related\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Automobile\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "V8",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/V8_engine",
        "seq": "46,48"
      }
    ],
    "id": "8bacd9f637114aacb4f912ee3339497c",
    "predicate mapping": [
      {
        "label": "cars",
        "uri": "http://dbpedia.org/property/engine",
        "mappedBy": "word2vec"
      },
      {
        "label": "related",
        "uri": "http://dbpedia.org/property/related",
        "seq": "19,26",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "cars",
        "uri": "http://dbpedia.org/ontology/Automobile",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Where is the person from whose military rank is Airman first class?",
    "SerialNumber": "4767",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/militaryRank\u003e \u003chttp://dbpedia.org/resource/Airman_first_class\u003e . ?x \u003chttp://dbpedia.org/property/state\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Airman first class",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Airman_first_class",
        "seq": "48,66"
      }
    ],
    "id": "211240c6dae54cc2a76f849270ff99e9",
    "predicate mapping": [
      {
        "label": "military rank",
        "uri": "http://dbpedia.org/ontology/militaryRank",
        "seq": "31,44",
        "mappedBy": "byLabelMatch"
      },
      {
        "uri": "http://dbpedia.org/property/state",
        "mappedBy": "word2vec"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/Person",
        "seq": "13,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who currently operates the railway lines one of whose stockholder is Chicago, St Paul, Minneapolis and Omaha railway?",
    "SerialNumber": "4770",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/owner\u003e \u003chttp://dbpedia.org/resource/Chicago,_St._Paul,_Minneapolis_and_Omaha_Railway\u003e . ?x \u003chttp://dbpedia.org/ontology/operatedBy\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/RailwayLine\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "minneapolis chicago, railway",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Chicago,_St._Paul,_Minneapolis_and_Omaha_Railway",
        "seq": "999,1000"
      }
    ],
    "id": "7e5cf8ddee13481fb0d168850d0ba814",
    "predicate mapping": [
      {
        "label": "stockholder",
        "uri": "http://dbpedia.org/property/owner",
        "seq": "54,65",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "",
        "uri": "http://dbpedia.org/ontology/operatedBy",
        "seq": "0,0",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "railway line",
        "uri": "http://dbpedia.org/ontology/RailwayLine",
        "seq": "27,39",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "In how many different people are alumini of the University of Oxford working?",
    "SerialNumber": "4771",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/almaMater\u003e \u003chttp://dbpedia.org/resource/Worcester_College,_Oxford\u003e . ?x \u003chttp://dbpedia.org/ontology/field\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "University of Oxford",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Worcester_College,_Oxford",
        "seq": "48,68"
      }
    ],
    "id": "bbf6d77abc1d4097b5073835a08375a0",
    "predicate mapping": [
      {
        "label": "working",
        "uri": "http://dbpedia.org/property/almaMater",
        "mappedBy": "word2vec"
      },
      {
        "label": "working",
        "uri": "http://dbpedia.org/ontology/field",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which district of Fort Heath radar station is also the state of Joesph Story ?",
    "SerialNumber": "4772",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Fort_Heath_radar_station\u003e \u003chttp://dbpedia.org/property/district\u003e ?uri. \u003chttp://dbpedia.org/resource/Joseph_Story\u003e \u003chttp://dbpedia.org/property/state\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Fort Heath radar station",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Fort_Heath_radar_station",
        "seq": "18,42"
      },
      {
        "label": "story",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Joseph_Story",
        "seq": "999,1000"
      }
    ],
    "id": "22bc7e7fb2b44679a76b1872370adf4c",
    "predicate mapping": [
      {
        "label": "district",
        "uri": "http://dbpedia.org/property/district",
        "seq": "6,14",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "district",
        "uri": "http://dbpedia.org/property/state",
        "seq": "6,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who were the head of government agencies working in the German occupied Europe?",
    "SerialNumber": "4773",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/jurisdiction\u003e \u003chttp://dbpedia.org/resource/German-occupied_Europe\u003e . ?x \u003chttp://dbpedia.org/ontology/leader\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/GovernmentAgency\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "German occupied Europe",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/German-occupied_Europe",
        "seq": "56,78"
      }
    ],
    "id": "325df11498174809bd9488b134a0bf82",
    "predicate mapping": [
      {
        "label": "working",
        "uri": "http://dbpedia.org/property/jurisdiction",
        "mappedBy": "word2vec"
      },
      {
        "label": "working",
        "uri": "http://dbpedia.org/ontology/leader",
        "mappedBy": "word2vec"
      },
      {
        "label": "government",
        "uri": "http://dbpedia.org/ontology/GovernmentAgency",
        "seq": "21,31",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "102",
    "question": "How many ingedients are required to make the Ragout Fin?",
    "SerialNumber": "4774",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { \u003chttp://dbpedia.org/resource/Ragout_fin\u003e \u003chttp://dbpedia.org/ontology/ingredient\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ragout Fin",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ragout_fin",
        "seq": "45,55"
      }
    ],
    "id": "edd0fb4fe2274a5fb2e3de95d13d2066",
    "predicate mapping": [
      {
        "label": "make",
        "uri": "http://dbpedia.org/ontology/ingredient",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Is Serbian Titieca a doctoral student of Werner Heisenberghttp://dbpedia.org/resource/Werner_Heisenberg",
    "SerialNumber": "4775",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Werner_Heisenberg\u003e \u003chttp://dbpedia.org/ontology/doctoralStudent\u003e \u003chttp://dbpedia.org/resource/Șerban_Țițeica\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Werner Heisenberg",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Werner_Heisenberg",
        "seq": "41,58"
      },
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Șerban_Țițeica",
        "seq": "999,1000"
      }
    ],
    "id": "cd7f39c8d3324c20a0beff615cfa9063",
    "predicate mapping": [
      {
        "label": "doctoral student",
        "uri": "http://dbpedia.org/ontology/doctoralStudent",
        "seq": "21,37",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "What show has  judge as Randy Jackson sculptors as Simon Fuller?",
    "SerialNumber": "4776",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/judges\u003e \u003chttp://dbpedia.org/resource/Randy_Jackson\u003e . ?uri \u003chttp://dbpedia.org/property/creator\u003e \u003chttp://dbpedia.org/resource/Simon_Fuller\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Randy Jackson",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Randy_Jackson",
        "seq": "24,37"
      },
      {
        "label": "Simon Fuller",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Simon_Fuller",
        "seq": "51,63"
      }
    ],
    "id": "54ca819c32f845f1830c057254adb0e4",
    "predicate mapping": [
      {
        "label": "judge",
        "uri": "http://dbpedia.org/property/judges",
        "seq": "15,20",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "sculptors",
        "uri": "http://dbpedia.org/property/creator",
        "mappedBy": "word2vec"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "5,9",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Where are the cooper mountain vineyards and Mt. bachelor ski area located?",
    "SerialNumber": "4778",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Cooper_Mountain_Vineyards\u003e \u003chttp://dbpedia.org/ontology/location\u003e ?uri. \u003chttp://dbpedia.org/resource/Mount_Bachelor_ski_area\u003e \u003chttp://dbpedia.org/ontology/location\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "cooper mountain vineyards",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Cooper_Mountain_Vineyards",
        "seq": "14,39"
      },
      {
        "label": "bachelor",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Mount_Bachelor_ski_area",
        "seq": "999,1000"
      }
    ],
    "id": "35de725b9a904932a4c7cad2d4f6d3dd",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/ontology/location",
        "mappedBy": "word2vec"
      },
      {
        "label": "located",
        "uri": "http://dbpedia.org/ontology/location",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "From which countries are the people from who are an academic authority of the Western pygmy blue species?",
    "SerialNumber": "4780",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Western_pygmy_blue\u003e \u003chttp://dbpedia.org/ontology/binomialAuthority\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/citizenship\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Western pygmy blue",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Western_pygmy_blue",
        "seq": "78,96"
      }
    ],
    "id": "be8e6c435f1e4b00978abbd40786446f",
    "predicate mapping": [
      {
        "label": "authority",
        "uri": "http://dbpedia.org/ontology/binomialAuthority",
        "seq": "61,70",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "species",
        "uri": "http://dbpedia.org/ontology/citizenship",
        "mappedBy": "word2vec"
      },
      {
        "label": "species",
        "uri": "http://dbpedia.org/ontology/Person",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the fictional character painted by Josh Friedman and portrayed in Terminator Genisys ?",
    "SerialNumber": "4782",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/creator\u003e \u003chttp://dbpedia.org/resource/Josh_Friedman\u003e . ?uri \u003chttp://dbpedia.org/ontology/portrayer\u003e \u003chttp://dbpedia.org/resource/Terminator_Genisys\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/FictionalCharacter\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Josh Friedman",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Josh_Friedman",
        "seq": "40,53"
      },
      {
        "label": "Terminator Genisys",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Terminator_Genisys",
        "seq": "71,89"
      }
    ],
    "id": "37ea4965d2b64433a69300a0f28f5c84",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/creator",
        "mappedBy": "word2vec"
      },
      {
        "label": "portrayed",
        "uri": "http://dbpedia.org/ontology/portrayer",
        "seq": "58,67",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "fictional character",
        "uri": "http://dbpedia.org/ontology/FictionalCharacter",
        "seq": "9,28",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "What is the total number of religions that politicians have followed?",
    "SerialNumber": "4783",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/profession\u003e \u003chttp://dbpedia.org/resource/Politician\u003e . ?x \u003chttp://dbpedia.org/ontology/religion\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "politician",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Politician",
        "seq": "43,53"
      }
    ],
    "id": "0954f05704294cdc948715c7348303d7",
    "predicate mapping": [
      {
        "label": "number",
        "uri": "http://dbpedia.org/ontology/profession",
        "mappedBy": "word2vec"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion",
        "seq": "28,36",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "For how many different presidents have people in the Continental Army served?",
    "SerialNumber": "4787",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/branch\u003e \u003chttp://dbpedia.org/resource/Continental_Army\u003e . ?x \u003chttp://dbpedia.org/property/president\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Continental Army",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Continental_Army",
        "seq": "53,69"
      }
    ],
    "id": "4bb6b234a89a4be49aac5792626314a1",
    "predicate mapping": [
      {
        "label": "served",
        "uri": "http://dbpedia.org/property/branch",
        "mappedBy": "word2vec"
      },
      {
        "label": "president",
        "uri": "http://dbpedia.org/property/president",
        "seq": "23,32",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What is the religion of the president who won the Mongolian legislative election, 2004 ?",
    "SerialNumber": "4788",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Mongolian_legislative_election,_2004\u003e \u003chttp://dbpedia.org/property/leader\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/religion\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Mongolian legislative election, 2004",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Mongolian_legislative_election,_2004",
        "seq": "50,86"
      }
    ],
    "id": "da38af790e6e4c63a38c8f834d67ca62",
    "predicate mapping": [
      {
        "label": "won",
        "uri": "http://dbpedia.org/property/leader",
        "mappedBy": "word2vec"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion",
        "seq": "12,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which leader of Trump Entertainment Resorts is a relative of Maryanne Barry?",
    "SerialNumber": "4792",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Maryanne_Trump_Barry\u003e \u003chttp://dbpedia.org/ontology/relation\u003e ?uri. \u003chttp://dbpedia.org/resource/Trump_Entertainment_Resorts\u003e \u003chttp://dbpedia.org/ontology/keyPerson\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "maryanne trump barry",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Maryanne_Trump_Barry",
        "seq": "999,1000"
      },
      {
        "label": "Trump Entertainment Resorts",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Trump_Entertainment_Resorts",
        "seq": "16,43"
      }
    ],
    "id": "ba66549d7ede4f90ad8fa7a436face6c",
    "predicate mapping": [
      {
        "label": "Barry",
        "uri": "http://dbpedia.org/ontology/relation",
        "mappedBy": "word2vec"
      },
      {
        "label": "Barry",
        "uri": "http://dbpedia.org/ontology/keyPerson",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "From which party is the politician who was selected  in Barasat constituency?",
    "SerialNumber": "4793",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/constituency\u003e \u003chttp://dbpedia.org/resource/Barasat_(Lok_Sabha_constituency)\u003e . ?x \u003chttp://dbpedia.org/ontology/party\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/OfficeHolder\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Barasat",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Barasat_(Lok_Sabha_constituency)",
        "seq": "56,63"
      }
    ],
    "id": "af0335e9c71440b287a6a62d2211645c",
    "predicate mapping": [
      {
        "label": "constituency",
        "uri": "http://dbpedia.org/property/constituency",
        "seq": "64,76",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "party",
        "uri": "http://dbpedia.org/ontology/party",
        "seq": "11,16",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "selected",
        "uri": "http://dbpedia.org/ontology/OfficeHolder",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Was John muir one of the first to ascend a mountain on Mt hoffmann?",
    "SerialNumber": "4796",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Mount_Hoffmann\u003e \u003chttp://dbpedia.org/ontology/firstAscentPerson\u003e \u003chttp://dbpedia.org/resource/John_Muir\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "hoffmann",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Mount_Hoffmann",
        "seq": "999,1000"
      },
      {
        "label": "John muir",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/John_Muir",
        "seq": "4,13"
      }
    ],
    "id": "168ccd9fd66449a2a3587324aa89e190",
    "predicate mapping": [
      {
        "label": "first",
        "uri": "http://dbpedia.org/ontology/firstAscentPerson",
        "seq": "25,30",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which coach of England national under 21 footbal team is also the coach of Aston Villa F.C season ?",
    "SerialNumber": "4797",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/England_national_under-21_football_team\u003e \u003chttp://dbpedia.org/property/coach\u003e ?uri. \u003chttp://dbpedia.org/resource/2000–01_Aston_Villa_F.C._season\u003e \u003chttp://dbpedia.org/property/name\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "national footbal england under team",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/England_national_under-21_football_team",
        "seq": "999,1000"
      },
      {
        "label": "season villa aston",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/2000–01_Aston_Villa_F.C._season",
        "seq": "999,1000"
      }
    ],
    "id": "fab10ec7feeb4e3790ee4563b268c058",
    "predicate mapping": [
      {
        "label": "coach",
        "uri": "http://dbpedia.org/property/coach",
        "seq": "6,11",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "season",
        "uri": "http://dbpedia.org/property/name",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "405",
    "question": "In how many countries are people born who play cricket?",
    "SerialNumber": "4802",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/occupation\u003e \u003chttp://dbpedia.org/resource/Cricket\u003e . ?x \u003chttp://dbpedia.org/ontology/stateOfOrigin\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Country\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "cricket",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Cricket",
        "seq": "47,54"
      }
    ],
    "id": "048f33e69989456e87cecd1566322fe2",
    "predicate mapping": [
      {
        "label": "play",
        "uri": "http://dbpedia.org/ontology/occupation",
        "mappedBy": "word2vec"
      },
      {
        "uri": "http://dbpedia.org/ontology/stateOfOrigin",
        "mappedBy": "word2vec"
      },
      {
        "label": "countries",
        "uri": "http://dbpedia.org/ontology/Country",
        "seq": "12,21",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who has authored books published by the Perkins school for the Blind?",
    "SerialNumber": "4804",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/publisher\u003e \u003chttp://dbpedia.org/resource/Perkins_School_for_the_Blind\u003e . ?x \u003chttp://dbpedia.org/ontology/author\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/WrittenWork\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Perkins school for the Blind",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Perkins_School_for_the_Blind",
        "seq": "40,68"
      }
    ],
    "id": "d4566c91a3a1479e8ed3152f7892af27",
    "predicate mapping": [
      {
        "label": "published",
        "uri": "http://dbpedia.org/ontology/publisher",
        "seq": "23,32",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "author",
        "uri": "http://dbpedia.org/ontology/author",
        "seq": "8,14",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "books",
        "uri": "http://dbpedia.org/ontology/WrittenWork",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Give me the name of the organization hqed at  Chaeng Watthana Govt Complex?",
    "SerialNumber": "4806",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/headquarter\u003e \u003chttp://dbpedia.org/resource/Chaeng_Watthana_Government_Complex\u003e . ?x \u003chttp://dbpedia.org/property/agencyName\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Organisation\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "watthana complex chaeng",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Chaeng_Watthana_Government_Complex",
        "seq": "999,1000"
      }
    ],
    "id": "3aba37a171704d5ebb0b4ae966a6d176",
    "predicate mapping": [
      {
        "label": "hq",
        "uri": "http://dbpedia.org/ontology/headquarter",
        "seq": "37,39",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "name",
        "uri": "http://dbpedia.org/property/agencyName",
        "seq": "12,16",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "uri": "http://dbpedia.org/ontology/Organisation",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Which footballers did their high school in west Sacramento california? ",
    "SerialNumber": "4807",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/highSchool\u003e \u003chttp://dbpedia.org/resource/West_Sacramento,_California\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/AmericanFootballPlayer\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Sacramento california",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/West_Sacramento,_California",
        "seq": "48,69"
      }
    ],
    "id": "91ccac916105446b8d75a09eee63c100",
    "predicate mapping": [
      {
        "label": "high school",
        "uri": "http://dbpedia.org/property/highSchool",
        "seq": "28,39",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "west",
        "uri": "http://dbpedia.org/ontology/AmericanFootballPlayer",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Which company created BASIC and Language Integrated Query ?",
    "SerialNumber": "4809",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Microsoft_BASIC\u003e \u003chttp://dbpedia.org/ontology/designer\u003e ?uri. \u003chttp://dbpedia.org/resource/Language_Integrated_Query\u003e \u003chttp://dbpedia.org/ontology/designer\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "basic",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Microsoft_BASIC",
        "seq": "999,1000"
      },
      {
        "label": "Language Integrated Query",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Language_Integrated_Query",
        "seq": "32,57"
      }
    ],
    "id": "b1b8eee4fef548d282895877658d0862",
    "predicate mapping": [
      {
        "label": "BASIC",
        "uri": "http://dbpedia.org/ontology/designer",
        "mappedBy": "word2vec"
      },
      {
        "label": "BASIC",
        "uri": "http://dbpedia.org/ontology/designer",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who has recorded their singles in London?",
    "SerialNumber": "4810",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/recordedIn\u003e \u003chttp://dbpedia.org/resource/London\u003e . ?x \u003chttp://dbpedia.org/ontology/writer\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Single\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "London",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/London",
        "seq": "34,40"
      }
    ],
    "id": "2808134095db47bfaa55a5b9ae17a35e",
    "predicate mapping": [
      {
        "label": "recorded in",
        "uri": "http://dbpedia.org/ontology/recordedIn",
        "seq": "-1,10",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "recorded",
        "uri": "http://dbpedia.org/ontology/writer",
        "mappedBy": "word2vec"
      },
      {
        "label": "single",
        "uri": "http://dbpedia.org/ontology/Single",
        "seq": "23,29",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What awards have been given to the writers of Wallace and Gromit?",
    "SerialNumber": "4812",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/notableworks\u003e \u003chttp://dbpedia.org/resource/Wallace_and_Gromit\u003e . ?x \u003chttp://dbpedia.org/ontology/award\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Writer\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Gromit",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Wallace_and_Gromit",
        "seq": "58,64"
      }
    ],
    "id": "249281ef2b90405aba4523fe74c3f855",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/notableworks",
        "mappedBy": "word2vec"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/award",
        "seq": "5,11",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "writers",
        "uri": "http://dbpedia.org/ontology/Writer",
        "seq": "35,42",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "How many companies have built concrete bridges?",
    "SerialNumber": "4813",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/material\u003e \u003chttp://dbpedia.org/resource/Concrete\u003e . ?x \u003chttp://dbpedia.org/ontology/builder\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "concrete",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Concrete",
        "seq": "30,38"
      }
    ],
    "id": "5fa75359b2f34008a02d32e4d86ae9f4",
    "predicate mapping": [
      {
        "label": "bridges",
        "uri": "http://dbpedia.org/property/material",
        "mappedBy": "word2vec"
      },
      {
        "label": "built",
        "uri": "http://dbpedia.org/ontology/builder",
        "seq": "24,29",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the alma mater of Alvin Bell and Charles Plosser?",
    "SerialNumber": "4814",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Alvin_Bell\u003e \u003chttp://dbpedia.org/ontology/college\u003e ?uri. \u003chttp://dbpedia.org/resource/Charles_Plosser\u003e \u003chttp://dbpedia.org/property/almaMater\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Alvin Bell",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Alvin_Bell",
        "seq": "26,36"
      },
      {
        "label": "Charles Plosser",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Charles_Plosser",
        "seq": "41,56"
      }
    ],
    "id": "a51285af64f54bbc8cc0e2548ad0b92f",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/college",
        "mappedBy": "word2vec"
      },
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/property/almaMater",
        "seq": "12,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "How many producers have casted Michael Jackson?",
    "SerialNumber": "4815",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/starring\u003e \u003chttp://dbpedia.org/resource/Michael_Jackson\u003e . ?x \u003chttp://dbpedia.org/property/producer\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Michael Jackson",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Michael_Jackson",
        "seq": "31,46"
      }
    ],
    "id": "8679debda0a14d0a87042b3eb712b95b",
    "predicate mapping": [
      {
        "label": "casted",
        "uri": "http://dbpedia.org/property/starring",
        "mappedBy": "word2vec"
      },
      {
        "label": "producer",
        "uri": "http://dbpedia.org/property/producer",
        "seq": "9,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Who all have created new kinds of cookies?",
    "SerialNumber": "4816",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/type\u003e \u003chttp://dbpedia.org/resource/Cookie\u003e . ?x \u003chttp://dbpedia.org/property/creator\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "cookie",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Cookie",
        "seq": "34,40"
      }
    ],
    "id": "34cf6c9abf5c40c8a73553a1ea992f28",
    "predicate mapping": [
      {
        "label": "kinds",
        "uri": "http://dbpedia.org/property/type",
        "mappedBy": "word2vec"
      },
      {
        "label": "kinds",
        "uri": "http://dbpedia.org/property/creator",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the fictional character who was in Terminator and portrayer is Terminator 2: Judgment Day?",
    "SerialNumber": "4818",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/series\u003e \u003chttp://dbpedia.org/resource/Terminator_(franchise)\u003e . ?uri \u003chttp://dbpedia.org/ontology/portrayer\u003e \u003chttp://dbpedia.org/resource/Terminator_2:_Judgment_Day\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/FictionalCharacter\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Terminator",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Terminator_(franchise)",
        "seq": "40,50"
      },
      {
        "label": "Terminator 2: Judgment Day",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Terminator_2:_Judgment_Day",
        "seq": "68,94"
      }
    ],
    "id": "c00fa42c4aa643d4aad94464399b60ea",
    "predicate mapping": [
      {
        "label": "Day",
        "uri": "http://dbpedia.org/ontology/series",
        "mappedBy": "word2vec"
      },
      {
        "label": "portrayer",
        "uri": "http://dbpedia.org/ontology/portrayer",
        "seq": "55,64",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "fictional character",
        "uri": "http://dbpedia.org/ontology/FictionalCharacter",
        "seq": "9,28",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "Whose mayors are affiliated with Christen-Democratisch en Vlaams?",
    "SerialNumber": "4819",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/affiliation\u003e \u003chttp://dbpedia.org/resource/Christen-Democratisch_en_Vlaams\u003e . ?uri \u003chttp://dbpedia.org/ontology/leaderName\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Christen-Democratisch en Vlaams",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Christen-Democratisch_en_Vlaams",
        "seq": "33,64"
      }
    ],
    "id": "8a1d6eb70486401e9b03768061fb6933",
    "predicate mapping": [
      {
        "label": "affiliated",
        "uri": "http://dbpedia.org/property/affiliation",
        "mappedBy": "word2vec"
      },
      {
        "label": "affiliated",
        "uri": "http://dbpedia.org/ontology/leaderName",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "What company is the one which wrote the google web toolkit and PlayN?",
    "SerialNumber": "4821",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Google_Web_Toolkit\u003e \u003chttp://dbpedia.org/ontology/author\u003e ?uri. \u003chttp://dbpedia.org/resource/PlayN\u003e \u003chttp://dbpedia.org/ontology/author\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "google web toolkit",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Google_Web_Toolkit",
        "seq": "40,58"
      },
      {
        "label": "PlayN",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/PlayN",
        "seq": "63,68"
      }
    ],
    "id": "f4f5ee1369484c24bff925aa0c0f67c5",
    "predicate mapping": [
      {
        "label": "wrote",
        "uri": "http://dbpedia.org/ontology/author",
        "mappedBy": "word2vec"
      },
      {
        "label": "wrote",
        "uri": "http://dbpedia.org/ontology/author",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who fought in the battle at Tupelo Mississippi?",
    "SerialNumber": "4824",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/place\u003e \u003chttp://dbpedia.org/resource/Tupelo,_Mississippi\u003e . ?x \u003chttp://dbpedia.org/property/combatant\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MilitaryConflict\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Tupelo Mississippi",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Tupelo,_Mississippi",
        "seq": "28,46"
      }
    ],
    "id": "e479ae7b3a9c4819b494827f01d6bc9a",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/place",
        "mappedBy": "word2vec"
      },
      {
        "label": "battle",
        "uri": "http://dbpedia.org/property/combatant",
        "mappedBy": "word2vec"
      },
      {
        "label": "battle",
        "uri": "http://dbpedia.org/ontology/MilitaryConflict",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What is the purpose of some Maharashtran organizations?",
    "SerialNumber": "4828",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/headquarter\u003e \u003chttp://dbpedia.org/resource/Maharashtra\u003e . ?x \u003chttp://dbpedia.org/property/purpose\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Organisation\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Maharashtra",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Maharashtra",
        "seq": "28,39"
      }
    ],
    "id": "dc71852033ea4aa78c0988a5a8353b08",
    "predicate mapping": [
      {
        "label": "organizations",
        "uri": "http://dbpedia.org/ontology/headquarter",
        "mappedBy": "word2vec"
      },
      {
        "label": "purpose",
        "uri": "http://dbpedia.org/property/purpose",
        "seq": "12,19",
        "mappedBy": "byLabelMatch"
      },
      {
        "uri": "http://dbpedia.org/ontology/Organisation",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "which movies have been published by Cinema International Corporation?",
    "SerialNumber": "4829",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/distributor\u003e \u003chttp://dbpedia.org/resource/Cinema_International_Corporation\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Cinema International Corporation",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Cinema_International_Corporation",
        "seq": "36,68"
      }
    ],
    "id": "e7b65b4aecc7437f80afe8be2d2a53eb",
    "predicate mapping": [
      {
        "label": "published",
        "uri": "http://dbpedia.org/ontology/distributor",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Where the children of Ashot Grashi employed at?",
    "SerialNumber": "4830",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/parent\u003e \u003chttp://dbpedia.org/resource/Ashot_Grashi\u003e . ?x \u003chttp://dbpedia.org/ontology/occupation\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ashot Grashi",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Ashot_Grashi",
        "seq": "22,34"
      }
    ],
    "id": "5737744543d348468c3951fddb9f25e1",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/parent",
        "mappedBy": "word2vec"
      },
      {
        "label": "employed",
        "uri": "http://dbpedia.org/ontology/occupation",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "7",
    "question": "Who is renowned for Ae Fond Kiss and poem of Halloween ?",
    "SerialNumber": "4831",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/property/notableworks\u003e \u003chttp://dbpedia.org/resource/Ae_Fond_Kiss\u003e . ?uri \u003chttp://dbpedia.org/property/notableworks\u003e \u003chttp://dbpedia.org/resource/Halloween_(poem)\u003e . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ae Fond Kiss",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Ae_Fond_Kiss",
        "seq": "20,32"
      },
      {
        "label": "Halloween",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Halloween_(poem)",
        "seq": "45,54"
      }
    ],
    "id": "91316e105d274bdbae3927a547e2020a",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/notableworks",
        "mappedBy": "word2vec"
      },
      {
        "uri": "http://dbpedia.org/property/notableworks",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which  science fiction show has Steven Moffat as executive producer ?",
    "SerialNumber": "4833",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/executiveProducer\u003e \u003chttp://dbpedia.org/resource/Steven_Moffat\u003e . ?uri \u003chttp://dbpedia.org/property/genre\u003e \u003chttp://dbpedia.org/resource/Science_fiction\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Steven Moffat",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Steven_Moffat",
        "seq": "32,45"
      },
      {
        "label": "science fiction",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Science_fiction",
        "seq": "7,22"
      }
    ],
    "id": "0fc6655da5464bec8b5a6df22edcaa86",
    "predicate mapping": [
      {
        "label": "executive producer",
        "uri": "http://dbpedia.org/ontology/executiveProducer",
        "seq": "49,67",
        "mappedBy": "byLabelMatch"
      },
      {
        "uri": "http://dbpedia.org/property/genre",
        "mappedBy": "word2vec"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "23,27",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What cars were built upon the cars which were assembled in Canada?",
    "SerialNumber": "4836",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/assembly\u003e \u003chttp://dbpedia.org/resource/Canada\u003e . ?x \u003chttp://dbpedia.org/ontology/predecessor\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Automobile\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Canada",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Canada",
        "seq": "59,65"
      }
    ],
    "id": "1d60b0de9bd444dabe4c059c4f7fde5f",
    "predicate mapping": [
      {
        "label": "assembled",
        "uri": "http://dbpedia.org/property/assembly",
        "mappedBy": "word2vec"
      },
      {
        "label": "assembled",
        "uri": "http://dbpedia.org/ontology/predecessor",
        "mappedBy": "word2vec"
      },
      {
        "label": "assembled",
        "uri": "http://dbpedia.org/ontology/Automobile",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Is San Salvador Island a part of the Bahamas?",
    "SerialNumber": "4838",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/San_Salvador_Island\u003e \u003chttp://dbpedia.org/ontology/archipelago\u003e \u003chttp://dbpedia.org/resource/The_Bahamas\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "San Salvador Island",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/San_Salvador_Island",
        "seq": "3,22"
      },
      {
        "label": "Bahamas",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/The_Bahamas",
        "seq": "37,44"
      }
    ],
    "id": "c9bf804617e04cd194d2f8fcdad0d49c",
    "predicate mapping": [
      {
        "label": "part",
        "uri": "http://dbpedia.org/ontology/archipelago",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which  NASA astronaut was on mission Gemini 8?",
    "SerialNumber": "4840",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/type\u003e \u003chttp://dbpedia.org/resource/NASA\u003e . ?uri \u003chttp://dbpedia.org/property/mission\u003e \u003chttp://dbpedia.org/resource/Gemini_8\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Astronaut\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "NASA",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/NASA",
        "seq": "7,11"
      },
      {
        "label": "Gemini 8",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Gemini_8",
        "seq": "37,45"
      }
    ],
    "id": "89d93ab9db184098bea7201d4e1f85c0",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/type",
        "mappedBy": "word2vec"
      },
      {
        "label": "mission",
        "uri": "http://dbpedia.org/property/mission",
        "seq": "29,36",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "astronaut",
        "uri": "http://dbpedia.org/ontology/Astronaut",
        "seq": "12,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Did Stanlee write the Tales of Suspense?",
    "SerialNumber": "4844",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Tales_of_Suspense\u003e \u003chttp://dbpedia.org/property/writers\u003e \u003chttp://dbpedia.org/resource/Stan_Lee\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Tales of Suspense",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Tales_of_Suspense",
        "seq": "22,39"
      },
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Stan_Lee",
        "seq": "999,1000"
      }
    ],
    "id": "6ad08f71a43048129e0b566148bb3665",
    "predicate mapping": [
      {
        "label": "write",
        "uri": "http://dbpedia.org/property/writers",
        "seq": "12,17",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Who is the head coach of the teams in Middlesbrough FC?",
    "SerialNumber": "4845",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/club\u003e \u003chttp://dbpedia.org/resource/Middlesbrough_F.C.\u003e . ?x \u003chttp://dbpedia.org/ontology/manager\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Middlesbrough FC",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Middlesbrough_F.C.",
        "seq": "38,54"
      }
    ],
    "id": "37ebf5a678ed42c3b38fc81a00ff30ff",
    "predicate mapping": [
      {
        "label": "teams",
        "uri": "http://dbpedia.org/property/club",
        "mappedBy": "word2vec"
      },
      {
        "label": "coach",
        "uri": "http://dbpedia.org/ontology/manager",
        "seq": "16,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What is the religion of the leader of South Korean legislative election of 1992 ?",
    "SerialNumber": "4852",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/South_Korean_legislative_election,_1992\u003e \u003chttp://dbpedia.org/property/leader\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/religion\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "legislative election",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/South_Korean_legislative_election,_1992",
        "seq": "999,1000"
      }
    ],
    "id": "6f97fe98633b44dcb7ba31cf7719b380",
    "predicate mapping": [
      {
        "label": "leader",
        "uri": "http://dbpedia.org/property/leader",
        "seq": "28,34",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion",
        "seq": "12,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "to which university did both, the Stanford Cardinal and Gerald Reaven go?",
    "SerialNumber": "4853",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Stanford_Cardinal\u003e \u003chttp://dbpedia.org/ontology/university\u003e ?uri. \u003chttp://dbpedia.org/resource/Gerald_Reaven\u003e \u003chttp://dbpedia.org/ontology/institution\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Stanford Cardinal",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Stanford_Cardinal",
        "seq": "34,51"
      },
      {
        "label": "Gerald Reaven",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Gerald_Reaven",
        "seq": "56,69"
      }
    ],
    "id": "9f8aa6229d504392a15d7e77b795aadd",
    "predicate mapping": [
      {
        "label": "university",
        "uri": "http://dbpedia.org/ontology/university",
        "seq": "9,19",
        "mappedBy": "byLabelMatch"
      },
      {
        "uri": "http://dbpedia.org/ontology/institution",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which american football team is owned by Mark davis and is located in O.co Colliseum ?",
    "SerialNumber": "4854",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/owner\u003e \u003chttp://dbpedia.org/resource/Mark_Davis_(American_football)\u003e . ?uri \u003chttp://dbpedia.org/ontology/locationCity\u003e \u003chttp://dbpedia.org/resource/O.co_Coliseum\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/AmericanFootballTeam\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Mark davis",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Mark_Davis_(American_football)",
        "seq": "41,51"
      },
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/O.co_Coliseum",
        "seq": "999,1000"
      }
    ],
    "id": "c357921ea8ff43fda72ad08c8e216ab8",
    "predicate mapping": [
      {
        "label": "is owned by",
        "uri": "http://dbpedia.org/ontology/owner",
        "seq": "29,40",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "Colliseum",
        "uri": "http://dbpedia.org/ontology/locationCity",
        "mappedBy": "word2vec"
      },
      {
        "label": "american football team",
        "uri": "http://dbpedia.org/ontology/AmericanFootballTeam",
        "seq": "6,28",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which BBC\u0027s TV show is related with the Sarah Jane Adventures?",
    "SerialNumber": "4855",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/network\u003e \u003chttp://dbpedia.org/resource/BBC_HD\u003e . ?uri \u003chttp://dbpedia.org/ontology/related\u003e \u003chttp://dbpedia.org/resource/The_Sarah_Jane_Adventures\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/BBC_HD",
        "seq": "999,1000"
      },
      {
        "label": "the Sarah Jane Adventures",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Sarah_Jane_Adventures",
        "seq": "36,61"
      }
    ],
    "id": "17ca429ec4984bb7bc285f94d3de62b9",
    "predicate mapping": [
      {
        "label": "TV",
        "uri": "http://dbpedia.org/ontology/network",
        "mappedBy": "word2vec"
      },
      {
        "label": "related",
        "uri": "http://dbpedia.org/ontology/related",
        "seq": "23,30",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "15,19",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Who were the first drivers in the grand prix which took place at Autodromo Enzo e Dino Ferrari?",
    "SerialNumber": "4856",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/location\u003e \u003chttp://dbpedia.org/resource/Autodromo_Enzo_e_Dino_Ferrari\u003e . ?x \u003chttp://dbpedia.org/ontology/firstDriver\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Autodromo Enzo e Dino Ferrari",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Autodromo_Enzo_e_Dino_Ferrari",
        "seq": "65,94"
      }
    ],
    "id": "2c3931e9e39447a6a5313df14a8934b6",
    "predicate mapping": [
      {
        "label": "place",
        "uri": "http://dbpedia.org/ontology/location",
        "mappedBy": "word2vec"
      },
      {
        "label": "first driver",
        "uri": "http://dbpedia.org/ontology/firstDriver",
        "seq": "13,25",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "405",
    "question": "How many cars succeed the cars assembled in Canada?",
    "SerialNumber": "4857",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/assembly\u003e \u003chttp://dbpedia.org/resource/Canada\u003e . ?x \u003chttp://dbpedia.org/ontology/predecessor\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Automobile\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Canada",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Canada",
        "seq": "44,50"
      }
    ],
    "id": "947e3ddd016d41a9b97ecc9eed2e370a",
    "predicate mapping": [
      {
        "label": "assembled",
        "uri": "http://dbpedia.org/property/assembly",
        "mappedBy": "word2vec"
      },
      {
        "label": "assembled",
        "uri": "http://dbpedia.org/ontology/predecessor",
        "mappedBy": "word2vec"
      },
      {
        "label": "assembled",
        "uri": "http://dbpedia.org/ontology/Automobile",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "406",
    "question": "How many books are written by the author who is famous for Novelas Ejemplares?",
    "SerialNumber": "4858",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/notableWork\u003e \u003chttp://dbpedia.org/resource/Novelas_ejemplares\u003e . ?uri \u003chttp://dbpedia.org/ontology/author\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Book\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Novelas Ejemplares",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Novelas_ejemplares",
        "seq": "59,77"
      }
    ],
    "id": "d813efbf28c848ec9859bbc3ad45e3ea",
    "predicate mapping": [
      {
        "label": "famous",
        "uri": "http://dbpedia.org/ontology/notableWork",
        "mappedBy": "word2vec"
      },
      {
        "label": "written by",
        "uri": "http://dbpedia.org/ontology/author",
        "seq": "19,29",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "book",
        "uri": "http://dbpedia.org/ontology/Book",
        "seq": "9,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "What is the largest city of the country where P. Sathyanarayanan was born?",
    "SerialNumber": "4859",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/P._Sathyanarayanan\u003e \u003chttp://dbpedia.org/property/birthplace\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/largestCity\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Country\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "P. Sathyanarayanan",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/P._Sathyanarayanan",
        "seq": "46,64"
      }
    ],
    "id": "2f9db429754045d79c15661e9175997e",
    "predicate mapping": [
      {
        "label": "born",
        "uri": "http://dbpedia.org/property/birthplace",
        "mappedBy": "word2vec"
      },
      {
        "label": "largest city",
        "uri": "http://dbpedia.org/ontology/largestCity",
        "seq": "12,24",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/Country",
        "seq": "32,39",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "List the people whose are in the board of an organization kickstarted in New York.",
    "SerialNumber": "4862",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/foundation\u003e \u003chttp://dbpedia.org/resource/New_York\u003e . ?uri \u003chttp://dbpedia.org/ontology/board\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "New York",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/New_York",
        "seq": "73,81"
      }
    ],
    "id": "f039556b67ef4cb1baad3d5fa816ba36",
    "predicate mapping": [
      {
        "label": "kickstarted",
        "uri": "http://dbpedia.org/property/foundation",
        "mappedBy": "word2vec"
      },
      {
        "label": "board",
        "uri": "http://dbpedia.org/ontology/board",
        "seq": "33,38",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "kickstarted",
        "uri": "http://dbpedia.org/ontology/Person",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which HBO\u0027s television series was produced by Erik Bork?",
    "SerialNumber": "4863",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/distributor\u003e \u003chttp://dbpedia.org/resource/HBO\u003e . ?uri \u003chttp://dbpedia.org/ontology/producer\u003e \u003chttp://dbpedia.org/resource/Erik_Bork\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "HBO",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/HBO",
        "seq": "6,9"
      },
      {
        "label": "Erik Bork",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Erik_Bork",
        "seq": "46,55"
      }
    ],
    "id": "43e17ab32b48408188702fc59b80e3d6",
    "predicate mapping": [
      {
        "label": "series",
        "uri": "http://dbpedia.org/property/distributor",
        "mappedBy": "word2vec"
      },
      {
        "label": "produced",
        "uri": "http://dbpedia.org/ontology/producer",
        "seq": "34,42",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "television",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "12,22",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "List the common sports between Fr. Agnel Multipurpose School  and Jamiatu Muslim Mindanao",
    "SerialNumber": "4864",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Fr._Agnel_Multipurpose_School_and_Junior_College\u003e \u003chttp://dbpedia.org/ontology/sport\u003e ?uri. \u003chttp://dbpedia.org/resource/Jamiatu_Muslim_Mindanao\u003e \u003chttp://dbpedia.org/ontology/athletics\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "multipurpose school",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Fr._Agnel_Multipurpose_School_and_Junior_College",
        "seq": "999,1000"
      },
      {
        "label": "Jamiatu Muslim Mindanao",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Jamiatu_Muslim_Mindanao",
        "seq": "66,89"
      }
    ],
    "id": "1e5190197e764ad2852ced4917575e45",
    "predicate mapping": [
      {
        "label": "sport",
        "uri": "http://dbpedia.org/ontology/sport",
        "seq": "16,21",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "School",
        "uri": "http://dbpedia.org/ontology/athletics",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "Which newspapers are owned by companies which are under Rolv Erik Ryssdal?",
    "SerialNumber": "4867",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/keyPerson\u003e \u003chttp://dbpedia.org/resource/Rolv_Erik_Ryssdal\u003e . ?uri \u003chttp://dbpedia.org/property/owners\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Newspaper\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Rolv Erik Ryssdal",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Rolv_Erik_Ryssdal",
        "seq": "56,73"
      }
    ],
    "id": "8784014ab7f14b28871e97a0df2a4200",
    "predicate mapping": [
      {
        "label": "companies",
        "uri": "http://dbpedia.org/ontology/keyPerson",
        "mappedBy": "word2vec"
      },
      {
        "label": "owned",
        "uri": "http://dbpedia.org/property/owners",
        "seq": "21,26",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "newspaper",
        "uri": "http://dbpedia.org/ontology/Newspaper",
        "seq": "6,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Who coached the Marquette golden eagles men team in 09 to 10 and then again in 13 to 14 ?",
    "SerialNumber": "4869",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/2009–10_Marquette_Golden_Eagles_men\u0027s_basketball_team\u003e \u003chttp://dbpedia.org/ontology/coach\u003e ?uri. \u003chttp://dbpedia.org/resource/2013–14_Marquette_Golden_Eagles_men\u0027s_basketball_team\u003e \u003chttp://dbpedia.org/ontology/coach\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "marquette golden eagles team men",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/2009–10_Marquette_Golden_Eagles_men\u0027s_basketball_team",
        "seq": "999,1000"
      },
      {
        "label": "marquette golden eagles team men",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/2013–14_Marquette_Golden_Eagles_men\u0027s_basketball_team",
        "seq": "999,1000"
      }
    ],
    "id": "69fc05f2eb85472d8f28a6dec16cf0a8",
    "predicate mapping": [
      {
        "label": "coach",
        "uri": "http://dbpedia.org/ontology/coach",
        "seq": "4,9",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "coach",
        "uri": "http://dbpedia.org/ontology/coach",
        "seq": "4,9",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "111",
    "question": "Count the number of sports played by university which also plays Taekwondo ?",
    "SerialNumber": "4872",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/athletics\u003e \u003chttp://dbpedia.org/resource/Taekwondo\u003e . ?x \u003chttp://dbpedia.org/property/athletics\u003e ?uri }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Taekwondo",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Taekwondo",
        "seq": "65,74"
      }
    ],
    "id": "2ad75f9b93f64498968879d9c695fb02",
    "predicate mapping": [
      {
        "label": "plays",
        "uri": "http://dbpedia.org/property/athletics",
        "mappedBy": "word2vec"
      },
      {
        "label": "plays",
        "uri": "http://dbpedia.org/property/athletics",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Where did the narrators of the Championship snooker die?",
    "SerialNumber": "4873",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Championship_Snooker\u003e \u003chttp://dbpedia.org/property/narrated\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/deathPlace\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Championship snooker",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Championship_Snooker",
        "seq": "31,51"
      }
    ],
    "id": "b98192ce06ab477dbe39eb6081bfb58c",
    "predicate mapping": [
      {
        "label": "die",
        "uri": "http://dbpedia.org/property/narrated",
        "mappedBy": "word2vec"
      },
      {
        "label": "die",
        "uri": "http://dbpedia.org/ontology/deathPlace",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Where is the lake located into which the Winnipeg River flows?",
    "SerialNumber": "4874",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/outflow\u003e \u003chttp://dbpedia.org/resource/Winnipeg_River\u003e . ?x \u003chttp://dbpedia.org/property/location\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Winnipeg River",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Winnipeg_River",
        "seq": "41,55"
      }
    ],
    "id": "259c7da5ba2e4d11814879c79da16742",
    "predicate mapping": [
      {
        "label": "flows",
        "uri": "http://dbpedia.org/property/outflow",
        "seq": "56,61",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "located",
        "uri": "http://dbpedia.org/property/location",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Which government agency is run by Supachai Somcharoen?",
    "SerialNumber": "4875",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/leader\u003e \u003chttp://dbpedia.org/resource/Supachai_Somcharoen\u003e . ?x \u003chttp://dbpedia.org/property/agencyName\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/GovernmentAgency\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Supachai Somcharoen",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Supachai_Somcharoen",
        "seq": "34,53"
      }
    ],
    "id": "875e9a8ee0ce4454a79b9daa496dcbb6",
    "predicate mapping": [
      {
        "label": "run",
        "uri": "http://dbpedia.org/ontology/leader",
        "mappedBy": "word2vec"
      },
      {
        "label": "agency",
        "uri": "http://dbpedia.org/property/agencyName",
        "seq": "17,23",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "government agency",
        "uri": "http://dbpedia.org/ontology/GovernmentAgency",
        "seq": "6,23",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Is Grand Bahama lie in the achipelago of the bahamas?",
    "SerialNumber": "4877",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Grand_Bahama\u003e \u003chttp://dbpedia.org/property/archipelago\u003e \u003chttp://dbpedia.org/resource/The_Bahamas\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Grand Bahama",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Grand_Bahama",
        "seq": "3,15"
      },
      {
        "label": "bahamas",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/The_Bahamas",
        "seq": "45,52"
      }
    ],
    "id": "3b485c94a86c4c4e8a6f8929cc0dde2b",
    "predicate mapping": [
      {
        "label": "lie",
        "uri": "http://dbpedia.org/property/archipelago",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which colonel has allegiance to Colony of Virginia ?",
    "SerialNumber": "4879",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/allegiance\u003e \u003chttp://dbpedia.org/resource/Colony_of_Virginia\u003e . ?uri \u003chttp://dbpedia.org/property/rank\u003e \u003chttp://dbpedia.org/resource/Colonel_(United_States)\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/OfficeHolder\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Colony of Virginia",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Colony_of_Virginia",
        "seq": "32,50"
      },
      {
        "label": "colonel",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Colonel_(United_States)",
        "seq": "6,13"
      }
    ],
    "id": "08e93b8d4249442b88762e1a51910088",
    "predicate mapping": [
      {
        "label": "allegiance",
        "uri": "http://dbpedia.org/property/allegiance",
        "seq": "18,28",
        "mappedBy": "byLabelMatch"
      },
      {
        "uri": "http://dbpedia.org/property/rank",
        "mappedBy": "word2vec"
      },
      {
        "uri": "http://dbpedia.org/ontology/OfficeHolder",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "401",
    "question": "How many companies were started in the states?",
    "SerialNumber": "4880",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/ontology/foundationPlace\u003e \u003chttp://dbpedia.org/resource/United_States\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Company\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "states",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/United_States",
        "seq": "999,1000"
      }
    ],
    "id": "f01fe449ce054eacad63ba079a2cdd2e",
    "predicate mapping": [
      {
        "label": "states",
        "uri": "http://dbpedia.org/ontology/foundationPlace",
        "mappedBy": "word2vec"
      },
      {
        "label": "companies",
        "uri": "http://dbpedia.org/ontology/Company",
        "seq": "9,18",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "307",
    "question": "What is the sea connected to Kaliningrad and Gdask?",
    "SerialNumber": "4885",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/property/cities\u003e \u003chttp://dbpedia.org/resource/Kaliningrad\u003e . ?uri \u003chttp://dbpedia.org/property/cities\u003e \u003chttp://dbpedia.org/resource/Gdańsk\u003e . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Sea\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Kaliningrad",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Kaliningrad",
        "seq": "29,40"
      },
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Gdańsk",
        "seq": "999,1000"
      }
    ],
    "id": "8595807efc4449d68eed8d38166a812a",
    "predicate mapping": [
      {
        "label": "connected",
        "uri": "http://dbpedia.org/property/cities",
        "mappedBy": "word2vec"
      },
      {
        "label": "connected",
        "uri": "http://dbpedia.org/property/cities",
        "mappedBy": "word2vec"
      },
      {
        "label": "sea",
        "uri": "http://dbpedia.org/ontology/Sea",
        "seq": "12,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "405",
    "question": "From how many countries did the aeroplanes designed by Alexander Lippisch originate?",
    "SerialNumber": "4886",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/designer\u003e \u003chttp://dbpedia.org/resource/Alexander_Lippisch\u003e . ?x \u003chttp://dbpedia.org/property/nationalOrigin\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Country\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Alexander Lippisch",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Alexander_Lippisch",
        "seq": "55,73"
      }
    ],
    "id": "9d9692a4132c4495ae0f5931957e586b",
    "predicate mapping": [
      {
        "label": "designed",
        "uri": "http://dbpedia.org/property/designer",
        "seq": "43,51",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "originate",
        "uri": "http://dbpedia.org/property/nationalOrigin",
        "mappedBy": "word2vec"
      },
      {
        "label": "countries",
        "uri": "http://dbpedia.org/ontology/Country",
        "seq": "14,23",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who has manufactured vehicles designed originally by NASA?",
    "SerialNumber": "4888",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/designCompany\u003e \u003chttp://dbpedia.org/resource/NASA\u003e . ?x \u003chttp://dbpedia.org/ontology/manufacturer\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Automobile\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "NASA",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/NASA",
        "seq": "53,57"
      }
    ],
    "id": "b4e0d76805604866bf173ea2e1b23a30",
    "predicate mapping": [
      {
        "label": "designed",
        "uri": "http://dbpedia.org/ontology/designCompany",
        "seq": "30,38",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "manufactured",
        "uri": "http://dbpedia.org/ontology/manufacturer",
        "seq": "8,20",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "originally",
        "uri": "http://dbpedia.org/ontology/Automobile",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "101",
    "question": "How many people are famous for the Gibson Les Paul?",
    "SerialNumber": "4889",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/property/notableInstruments\u003e \u003chttp://dbpedia.org/resource/Gibson_Les_Paul\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Gibson Les Paul",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Gibson_Les_Paul",
        "seq": "35,50"
      }
    ],
    "id": "fd5f1f21c5d84d139a078d7c277185cd",
    "predicate mapping": [
      {
        "label": "famous",
        "uri": "http://dbpedia.org/property/notableInstruments",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "307",
    "question": "Who is the office holder for constituencies  Castro District and Haight-Ashbury?",
    "SerialNumber": "4890",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/property/constituency\u003e \u003chttp://dbpedia.org/resource/Castro_District,_San_Francisco\u003e . ?uri \u003chttp://dbpedia.org/property/constituency\u003e \u003chttp://dbpedia.org/resource/Haight-Ashbury\u003e . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/OfficeHolder\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "district",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Castro_District,_San_Francisco",
        "seq": "999,1000"
      },
      {
        "label": "Haight-Ashbury",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Haight-Ashbury",
        "seq": "65,79"
      }
    ],
    "id": "a6ed413a6d5445999356286aac0836d9",
    "predicate mapping": [
      {
        "label": "constituencies",
        "uri": "http://dbpedia.org/property/constituency",
        "seq": "29,43",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "constituencies",
        "uri": "http://dbpedia.org/property/constituency",
        "seq": "29,43",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "office holder",
        "uri": "http://dbpedia.org/ontology/OfficeHolder",
        "seq": "11,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "405",
    "question": "In how many places did the Schutzstaffels die?",
    "SerialNumber": "4893",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/militaryRank\u003e \u003chttp://dbpedia.org/resource/Schutzstaffel\u003e . ?x \u003chttp://dbpedia.org/property/placeOfDeath\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Place\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Schutzstaffel",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Schutzstaffel",
        "seq": "27,40"
      }
    ],
    "id": "112be4e032d2473e8a45c73e9689419f",
    "predicate mapping": [
      {
        "label": "die",
        "uri": "http://dbpedia.org/ontology/militaryRank",
        "mappedBy": "word2vec"
      },
      {
        "label": "places",
        "uri": "http://dbpedia.org/property/placeOfDeath",
        "seq": "12,18",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "place",
        "uri": "http://dbpedia.org/ontology/Place",
        "seq": "12,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "What faith do hang chuon naron and Kron Ngoy follow?",
    "SerialNumber": "4894",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Hang_Chuon_Naron\u003e \u003chttp://dbpedia.org/ontology/religion\u003e ?uri. \u003chttp://dbpedia.org/resource/Krom_Ngoy\u003e \u003chttp://dbpedia.org/ontology/religion\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "hang chuon naron",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Hang_Chuon_Naron",
        "seq": "14,30"
      },
      {
        "label": "ngoy",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Krom_Ngoy",
        "seq": "999,1000"
      }
    ],
    "id": "93b33f2e4d4f4d07a6dbd2be5baba794",
    "predicate mapping": [
      {
        "label": "faith",
        "uri": "http://dbpedia.org/ontology/religion",
        "seq": "5,10",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "faith",
        "uri": "http://dbpedia.org/ontology/religion",
        "seq": "5,10",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "Name the people living in a place governed by William W Brien?",
    "SerialNumber": "4895",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/leaderName\u003e \u003chttp://dbpedia.org/resource/William_W._Brien\u003e . ?uri \u003chttp://dbpedia.org/ontology/residence\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "William W Brien",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/William_W._Brien",
        "seq": "46,61"
      }
    ],
    "id": "6904a39015e041cdb5b9e4c8100f6f6a",
    "predicate mapping": [
      {
        "label": "name",
        "uri": "http://dbpedia.org/property/leaderName",
        "seq": "-1,3",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "governed",
        "uri": "http://dbpedia.org/ontology/residence",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "How many game series exist for iOS?",
    "SerialNumber": "4896",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/computingPlatform\u003e \u003chttp://dbpedia.org/resource/IOS\u003e . ?x \u003chttp://dbpedia.org/ontology/series\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "iOS",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/IOS",
        "seq": "31,34"
      }
    ],
    "id": "4e15567ee9b34922b7ffeb5e3b835c65",
    "predicate mapping": [
      {
        "label": "exist",
        "uri": "http://dbpedia.org/ontology/computingPlatform",
        "mappedBy": "word2vec"
      },
      {
        "label": "series",
        "uri": "http://dbpedia.org/ontology/series",
        "seq": "14,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who is the narrator of The Incredible Hulk , 1982 TV series ?",
    "SerialNumber": "4897",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/The_Incredible_Hulk_(1982_TV_series)\u003e \u003chttp://dbpedia.org/property/narrated\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "The Incredible Hulk",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/The_Incredible_Hulk_(1982_TV_series)",
        "seq": "23,42"
      }
    ],
    "id": "c43336ea3f5f4a078eae1b1cdbb23ae0",
    "predicate mapping": [
      {
        "label": "series",
        "uri": "http://dbpedia.org/property/narrated",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What is the location of the pope whose major shrine is St. Peter\u0027s Basilica ?",
    "SerialNumber": "4900",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/majorShrine\u003e \u003chttp://dbpedia.org/resource/St._Peter\u0027s_Basilica\u003e . ?x \u003chttp://dbpedia.org/property/birthPlace\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Pope\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "St. Peter\u0027s Basilica",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/St._Peter\u0027s_Basilica",
        "seq": "55,75"
      }
    ],
    "id": "5e448ee7e7a347909af9a05fd941d609",
    "predicate mapping": [
      {
        "label": "major shrine",
        "uri": "http://dbpedia.org/property/majorShrine",
        "seq": "39,51",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "location",
        "uri": "http://dbpedia.org/property/birthPlace",
        "mappedBy": "word2vec"
      },
      {
        "label": "pope",
        "uri": "http://dbpedia.org/ontology/Pope",
        "seq": "28,32",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Where does the rivers ending in lake washington begin?",
    "SerialNumber": "4902",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/riverMouth\u003e \u003chttp://dbpedia.org/resource/Lake_Washington\u003e . ?x \u003chttp://dbpedia.org/property/sourceLocation\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/River\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "lake washington",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Lake_Washington",
        "seq": "32,47"
      }
    ],
    "id": "c4b41b17bd6e461f9bab1fd5d18fb1cb",
    "predicate mapping": [
      {
        "label": "rivers",
        "uri": "http://dbpedia.org/ontology/riverMouth",
        "seq": "15,21",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "begin",
        "uri": "http://dbpedia.org/property/sourceLocation",
        "mappedBy": "word2vec"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River",
        "seq": "15,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is operated by FedExField ?",
    "SerialNumber": "4903",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/FedExField\u003e \u003chttp://dbpedia.org/ontology/operator\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "FedExField",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/FedExField",
        "seq": "20,30"
      }
    ],
    "id": "26c83a9e8dd7414ba4b9740120278949",
    "predicate mapping": [
      {
        "label": "operated",
        "uri": "http://dbpedia.org/ontology/operator",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Who owns the company that made the Edsel Villager?",
    "SerialNumber": "4904",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/products\u003e \u003chttp://dbpedia.org/resource/Edsel_Villager\u003e . ?x \u003chttp://dbpedia.org/property/parent\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Edsel Villager",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Edsel_Villager",
        "seq": "35,49"
      }
    ],
    "id": "c3101002a14d4415b13183cee4ce5c19",
    "predicate mapping": [
      {
        "label": "made",
        "uri": "http://dbpedia.org/property/products",
        "mappedBy": "word2vec"
      },
      {
        "label": "made",
        "uri": "http://dbpedia.org/property/parent",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Where does the river flow into, which starts at the Sierra Madre de Chiapas?",
    "SerialNumber": "4905",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/source\u003e \u003chttp://dbpedia.org/resource/Sierra_Madre_de_Chiapas\u003e . ?x \u003chttp://dbpedia.org/property/mouthCountry\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/River\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Sierra Madre de Chiapas",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Sierra_Madre_de_Chiapas",
        "seq": "52,75"
      }
    ],
    "id": "22fd27d058e34064ab9f3f5f1a1a85b9",
    "predicate mapping": [
      {
        "label": "starts",
        "uri": "http://dbpedia.org/ontology/source",
        "mappedBy": "word2vec"
      },
      {
        "label": "starts",
        "uri": "http://dbpedia.org/property/mouthCountry",
        "mappedBy": "word2vec"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River",
        "seq": "15,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What series is Mazes of Time from, and is produced by BBC multimedia?",
    "SerialNumber": "4908",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/BBC_Multimedia\u003e \u003chttp://dbpedia.org/ontology/product\u003e ?uri. \u003chttp://dbpedia.org/resource/Doctor_Who:_The_Mazes_of_Time\u003e \u003chttp://dbpedia.org/ontology/series\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "BBC multimedia",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/BBC_Multimedia",
        "seq": "54,68"
      },
      {
        "label": "mazes",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Doctor_Who:_The_Mazes_of_Time",
        "seq": "999,1000"
      }
    ],
    "id": "a600e69fac2b46a58ff1d1fe22877e45",
    "predicate mapping": [
      {
        "label": "produced",
        "uri": "http://dbpedia.org/ontology/product",
        "mappedBy": "word2vec"
      },
      {
        "label": "series",
        "uri": "http://dbpedia.org/ontology/series",
        "seq": "5,11",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "WHo gave the lyrcis of Doonesbury ?",
    "SerialNumber": "4909",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Doonesbury_(musical)\u003e \u003chttp://dbpedia.org/ontology/lyrics\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Doonesbury",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Doonesbury_(musical)",
        "seq": "23,33"
      }
    ],
    "id": "e1a45956b7a142a8bf2eef25850435d5",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/lyrics",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "7",
    "question": "Who are the parents of  Charles Phelps Taft II and Robert A. Taft?",
    "SerialNumber": "4911",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/ontology/child\u003e \u003chttp://dbpedia.org/resource/Charles_Phelps_Taft_II\u003e . ?uri \u003chttp://dbpedia.org/ontology/child\u003e \u003chttp://dbpedia.org/resource/Robert_A._Taft\u003e . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Charles Phelps Taft II",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Charles_Phelps_Taft_II",
        "seq": "24,46"
      },
      {
        "label": "Robert A. Taft",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Robert_A._Taft",
        "seq": "51,65"
      }
    ],
    "id": "db1c3fdf8d784274b4e27db7dd62b263",
    "predicate mapping": [
      {
        "label": "parents",
        "uri": "http://dbpedia.org/ontology/child",
        "mappedBy": "word2vec"
      },
      {
        "label": "parents",
        "uri": "http://dbpedia.org/ontology/child",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which assembly of the Plymouth Savoy is the route end of the NorthSouth Transport Corridor?",
    "SerialNumber": "4914",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Plymouth_Savoy\u003e \u003chttp://dbpedia.org/ontology/assembly\u003e ?uri. \u003chttp://dbpedia.org/resource/North–South_Transport_Corridor\u003e \u003chttp://dbpedia.org/ontology/routeEnd\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Plymouth Savoy",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Plymouth_Savoy",
        "seq": "22,36"
      },
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/North–South_Transport_Corridor",
        "seq": "999,1000"
      }
    ],
    "id": "5bf74194f313453a92938a6069178a82",
    "predicate mapping": [
      {
        "label": "assembly",
        "uri": "http://dbpedia.org/ontology/assembly",
        "seq": "6,14",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "route end",
        "uri": "http://dbpedia.org/ontology/routeEnd",
        "seq": "44,53",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "Name the band atleast one of whose members is famous for playing the Fender Stratocaster?",
    "SerialNumber": "4915",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/notableInstruments\u003e \u003chttp://dbpedia.org/resource/Fender_Stratocaster\u003e . ?uri \u003chttp://dbpedia.org/property/currentMembers\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Band\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Fender Stratocaster",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Fender_Stratocaster",
        "seq": "69,88"
      }
    ],
    "id": "433e3e8781da456b9fc1184bb9815b88",
    "predicate mapping": [
      {
        "label": "playing",
        "uri": "http://dbpedia.org/property/notableInstruments",
        "mappedBy": "word2vec"
      },
      {
        "label": "members",
        "uri": "http://dbpedia.org/property/currentMembers",
        "seq": "35,42",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "band",
        "uri": "http://dbpedia.org/ontology/Band",
        "seq": "9,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "Who owns Chelsea F.C.?",
    "SerialNumber": "4918",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/occupation\u003e \u003chttp://dbpedia.org/resource/Chelsea_F.C.\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Chelsea F.C.",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Chelsea_F.C.",
        "seq": "9,21"
      }
    ],
    "id": "5901e1cf900d4564b0ad6a25eb733684",
    "predicate mapping": [
      {
        "label": "owns",
        "uri": "http://dbpedia.org/ontology/occupation",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "During the reigns of which monarchs was the name to the  Israelite kingdom as United Monarch?",
    "SerialNumber": "4919",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/title\u003e \u003chttp://dbpedia.org/resource/Kingdom_of_Israel_(united_monarchy)\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Kingdom_of_Israel_(united_monarchy)",
        "seq": "999,1000"
      }
    ],
    "id": "d3ccc70090cb4f15a0c1e6340f773d93",
    "predicate mapping": [
      {
        "label": "Monarch",
        "uri": "http://dbpedia.org/property/title",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "405",
    "question": "Tell me the total number of organizations who maintain the bridges made by the malaysian PWD?",
    "SerialNumber": "4920",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/designer\u003e \u003chttp://dbpedia.org/resource/Malaysian_Public_Works_Department\u003e . ?x \u003chttp://dbpedia.org/ontology/maintainedBy\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Organisation\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "malaysian",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Malaysian_Public_Works_Department",
        "seq": "999,1000"
      }
    ],
    "id": "396cc549a7c941308fc6490554d328b0",
    "predicate mapping": [
      {
        "label": "PWD",
        "uri": "http://dbpedia.org/property/designer",
        "mappedBy": "word2vec"
      },
      {
        "label": "maintain",
        "uri": "http://dbpedia.org/ontology/maintainedBy",
        "seq": "46,54",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "uri": "http://dbpedia.org/ontology/Organisation",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "7",
    "question": "list the  software which works on both the OS  - Microsoft Windows and Mac OS ?",
    "SerialNumber": "4923",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/ontology/operatingSystem\u003e \u003chttp://dbpedia.org/resource/Microsoft_Windows\u003e . ?uri \u003chttp://dbpedia.org/ontology/operatingSystem\u003e \u003chttp://dbpedia.org/resource/Mac_OS\u003e . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Microsoft Windows",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Microsoft_Windows",
        "seq": "49,66"
      },
      {
        "label": "Mac OS",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Mac_OS",
        "seq": "71,77"
      }
    ],
    "id": "090fdd1b6e04464eb2afffb08d7868dd",
    "predicate mapping": [
      {
        "label": "OS",
        "uri": "http://dbpedia.org/ontology/operatingSystem",
        "mappedBy": "word2vec"
      },
      {
        "label": "OS",
        "uri": "http://dbpedia.org/ontology/operatingSystem",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which idelogy of the Palang Dharma Party is also the  faith of Miao people ?",
    "SerialNumber": "4926",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Palang_Dharma_Party\u003e \u003chttp://dbpedia.org/ontology/ideology\u003e ?uri. \u003chttp://dbpedia.org/resource/Miao_people\u003e \u003chttp://dbpedia.org/ontology/religion\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Palang Dharma Party",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Palang_Dharma_Party",
        "seq": "21,40"
      },
      {
        "label": "Miao people",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Miao_people",
        "seq": "63,74"
      }
    ],
    "id": "276666cb2dd442d29983656956c65930",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/ideology",
        "mappedBy": "word2vec"
      },
      {
        "label": "faith",
        "uri": "http://dbpedia.org/ontology/religion",
        "seq": "54,59",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Where did the members of judge advocate general corps study?",
    "SerialNumber": "4928",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/militaryRank\u003e \u003chttp://dbpedia.org/resource/Judge_Advocate_General\u0027s_Corps,_United_States_Army\u003e . ?x \u003chttp://dbpedia.org/ontology/almaMater\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "advocate general judge corps",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Judge_Advocate_General\u0027s_Corps,_United_States_Army",
        "seq": "999,1000"
      }
    ],
    "id": "ca35959e3aa54d29a210ae778908d977",
    "predicate mapping": [
      {
        "label": "study",
        "uri": "http://dbpedia.org/ontology/militaryRank",
        "mappedBy": "word2vec"
      },
      {
        "label": "study",
        "uri": "http://dbpedia.org/ontology/almaMater",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "In how many different places are Brown haired models living?",
    "SerialNumber": "4930",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/hairColor\u003e \u003chttp://dbpedia.org/resource/Brown_hair\u003e . ?x \u003chttp://dbpedia.org/ontology/residence\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Brown hair",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Brown_hair",
        "seq": "33,43"
      }
    ],
    "id": "7544359cc60644078fbfd6ee91abdf55",
    "predicate mapping": [
      {
        "label": "haired",
        "uri": "http://dbpedia.org/property/hairColor",
        "seq": "39,45",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "living",
        "uri": "http://dbpedia.org/ontology/residence",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "405",
    "question": "Solon Spencer Beman has architected in how many cities?",
    "SerialNumber": "4931",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/architect\u003e \u003chttp://dbpedia.org/resource/Solon_Spencer_Beman\u003e . ?x \u003chttp://dbpedia.org/property/locationTown\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/City\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Solon Spencer Beman",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Solon_Spencer_Beman",
        "seq": "0,19"
      }
    ],
    "id": "901504aad5414f9b8ea3323d9f9f9e3a",
    "predicate mapping": [
      {
        "label": "architect",
        "uri": "http://dbpedia.org/ontology/architect",
        "seq": "24,33",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "cities",
        "uri": "http://dbpedia.org/property/locationTown",
        "mappedBy": "word2vec"
      },
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/City",
        "seq": "36,38",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "What was a common first team at the 1967 Mexican Grand Prix and 1971 US one?",
    "SerialNumber": "4932",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/1967_Mexican_Grand_Prix\u003e \u003chttp://dbpedia.org/property/firstTeam\u003e ?uri. \u003chttp://dbpedia.org/resource/1971_United_States_Grand_Prix\u003e \u003chttp://dbpedia.org/property/firstTeam\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "1967 Mexican Grand Prix",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/1967_Mexican_Grand_Prix",
        "seq": "36,59"
      },
      {
        "label": "grand prix 1971",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/1971_United_States_Grand_Prix",
        "seq": "999,1000"
      }
    ],
    "id": "6bfad60b196445aea7c5be7ba2412166",
    "predicate mapping": [
      {
        "label": "first team",
        "uri": "http://dbpedia.org/property/firstTeam",
        "seq": "18,28",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "first team",
        "uri": "http://dbpedia.org/property/firstTeam",
        "seq": "18,28",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the location of Sam Sen Railway Station ?",
    "SerialNumber": "4933",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Sam_Sen_Railway_Station\u003e \u003chttp://dbpedia.org/property/other\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Sam Sen",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Sam_Sen_Railway_Station",
        "seq": "24,31"
      }
    ],
    "id": "3eedc8d9fc1842a88f9158d88e77eb21",
    "predicate mapping": [
      {
        "label": "Station",
        "uri": "http://dbpedia.org/property/other",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "405",
    "question": "In how many places have the companies started in Newcastle worked?",
    "SerialNumber": "4934",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/foundationPlace\u003e \u003chttp://dbpedia.org/resource/City_of_Newcastle\u003e . ?x \u003chttp://dbpedia.org/ontology/regionServed\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Place\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Newcastle",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/City_of_Newcastle",
        "seq": "49,58"
      }
    ],
    "id": "d3003f279fce43c2bd590feb5ea35a89",
    "predicate mapping": [
      {
        "label": "places",
        "uri": "http://dbpedia.org/ontology/foundationPlace",
        "seq": "12,18",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "worked",
        "uri": "http://dbpedia.org/ontology/regionServed",
        "mappedBy": "word2vec"
      },
      {
        "label": "place",
        "uri": "http://dbpedia.org/ontology/Place",
        "seq": "12,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "How many things are produced by companies located in Tehran?",
    "SerialNumber": "4935",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/location\u003e \u003chttp://dbpedia.org/resource/Tehran\u003e . ?x \u003chttp://dbpedia.org/ontology/product\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Tehran",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Tehran",
        "seq": "53,59"
      }
    ],
    "id": "2c4dcb51677a45c2b824fb2b6faee585",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/property/location",
        "mappedBy": "word2vec"
      },
      {
        "label": "located",
        "uri": "http://dbpedia.org/ontology/product",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Who was the director of photography of Mickey\u0027s Mellerdrammer and the animator of Tommy Tucker\u0027s Tooth?",
    "SerialNumber": "4937",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Mickey\u0027s_Mellerdrammer\u003e \u003chttp://dbpedia.org/property/cinematography\u003e ?uri. \u003chttp://dbpedia.org/resource/Tommy_Tucker\u0027s_Tooth\u003e \u003chttp://dbpedia.org/property/animator\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Mickey\u0027s Mellerdrammer",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Mickey\u0027s_Mellerdrammer",
        "seq": "39,61"
      },
      {
        "label": "Tommy Tucker\u0027s Tooth",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Tommy_Tucker\u0027s_Tooth",
        "seq": "82,102"
      }
    ],
    "id": "c750e7c0608b41ceb0f89a608bc35174",
    "predicate mapping": [
      {
        "label": "photography",
        "uri": "http://dbpedia.org/property/cinematography",
        "mappedBy": "word2vec"
      },
      {
        "label": "animator",
        "uri": "http://dbpedia.org/property/animator",
        "seq": "70,78",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "11",
    "question": "Name the origins of the river with Quich Department as one of the origin ?",
    "SerialNumber": "4938",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/origin\u003e \u003chttp://dbpedia.org/resource/Quiché_Department\u003e . ?x \u003chttp://dbpedia.org/ontology/origin\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "department quich",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Quiché_Department",
        "seq": "999,1000"
      }
    ],
    "id": "da6a53f6df164501ac3e5ca040d30802",
    "predicate mapping": [
      {
        "label": "origin",
        "uri": "http://dbpedia.org/ontology/origin",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "origin",
        "uri": "http://dbpedia.org/ontology/origin",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "7",
    "question": "Who was in the missions of Apollo 11 and Gemini 8?",
    "SerialNumber": "4939",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/property/mission\u003e \u003chttp://dbpedia.org/resource/Apollo_11\u003e . ?uri \u003chttp://dbpedia.org/property/mission\u003e \u003chttp://dbpedia.org/resource/Gemini_8\u003e . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Apollo 11",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Apollo_11",
        "seq": "27,36"
      },
      {
        "label": "Gemini 8",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Gemini_8",
        "seq": "41,49"
      }
    ],
    "id": "4f474c1d102d429188592e6442f0dc85",
    "predicate mapping": [
      {
        "label": "mission",
        "uri": "http://dbpedia.org/property/mission",
        "seq": "15,22",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "mission",
        "uri": "http://dbpedia.org/property/mission",
        "seq": "15,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which producer of Wizards and the aliens is also the notable work of russell T Davies ?",
    "SerialNumber": "4944",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Wizards_vs_Aliens\u003e \u003chttp://dbpedia.org/ontology/producer\u003e ?uri. \u003chttp://dbpedia.org/resource/Russell_T_Davies\u003e \u003chttp://dbpedia.org/ontology/notableWork\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "wizards aliens",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Wizards_vs_Aliens",
        "seq": "999,1000"
      },
      {
        "label": "russell T Davies",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Russell_T_Davies",
        "seq": "69,85"
      }
    ],
    "id": "3b829598cada4093999a79cba952861b",
    "predicate mapping": [
      {
        "label": "producer",
        "uri": "http://dbpedia.org/ontology/producer",
        "seq": "6,14",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "notable work",
        "uri": "http://dbpedia.org/ontology/notableWork",
        "seq": "53,65",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Rivers which end in Arkansas go through which cities?",
    "SerialNumber": "4945",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/mouthMountain\u003e \u003chttp://dbpedia.org/resource/Arkansas\u003e . ?x \u003chttp://dbpedia.org/ontology/city\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/River\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Arkansas",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Arkansas",
        "seq": "20,28"
      }
    ],
    "id": "1f3d2c8c9b824f60ab080077dcff3dc9",
    "predicate mapping": [
      {
        "label": "cities",
        "uri": "http://dbpedia.org/ontology/mouthMountain",
        "mappedBy": "word2vec"
      },
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/city",
        "seq": "17,19",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "River",
        "uri": "http://dbpedia.org/ontology/River",
        "seq": "0,5",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What is the religion of the academic authority on Ceratosoma tenue?",
    "SerialNumber": "4946",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Ceratosoma_tenue\u003e \u003chttp://dbpedia.org/ontology/binomialAuthority\u003e ?x . ?x \u003chttp://dbpedia.org/property/veneratedIn\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ceratosoma tenue",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ceratosoma_tenue",
        "seq": "50,66"
      }
    ],
    "id": "aaded2628d52480a81d952c6157fbd13",
    "predicate mapping": [
      {
        "label": "authority",
        "uri": "http://dbpedia.org/ontology/binomialAuthority",
        "seq": "37,46",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "academic",
        "uri": "http://dbpedia.org/property/veneratedIn",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which ethinicity of  Riley Reid is the state of origin of Holmes Colbert?",
    "SerialNumber": "4947",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Riley_Reid\u003e \u003chttp://dbpedia.org/property/ethnicity\u003e ?uri. \u003chttp://dbpedia.org/resource/Holmes_Colbert\u003e \u003chttp://dbpedia.org/ontology/stateOfOrigin\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Riley Reid",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Riley_Reid",
        "seq": "21,31"
      },
      {
        "label": "Holmes Colbert",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Holmes_Colbert",
        "seq": "58,72"
      }
    ],
    "id": "6b2c6038daa7480ea340b9f0afc64454",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/ethnicity",
        "mappedBy": "word2vec"
      },
      {
        "label": "state of origin",
        "uri": "http://dbpedia.org/ontology/stateOfOrigin",
        "seq": "39,54",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who all have been a commander during the battles of Ohio?",
    "SerialNumber": "4952",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/place\u003e \u003chttp://dbpedia.org/resource/Ohio\u003e . ?x \u003chttp://dbpedia.org/ontology/commander\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MilitaryConflict\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ohio",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ohio",
        "seq": "52,56"
      }
    ],
    "id": "fbb1dc5dc78144d4b151528772891c5a",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/place",
        "mappedBy": "word2vec"
      },
      {
        "label": "commander",
        "uri": "http://dbpedia.org/ontology/commander",
        "seq": "20,29",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "battles",
        "uri": "http://dbpedia.org/ontology/MilitaryConflict",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Where did john o conner study?",
    "SerialNumber": "4953",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/John_O\u0027Connor_(archbishop_of_New_York)\u003e \u003chttp://dbpedia.org/ontology/almaMater\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/John_O\u0027Connor_(archbishop_of_New_York)",
        "seq": "999,1000"
      }
    ],
    "id": "44b54ea88b4c437bbca297ca3c04a6d3",
    "predicate mapping": [
      {
        "label": "study",
        "uri": "http://dbpedia.org/ontology/almaMater",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Who owns the websites for which Jimmy wales writes?",
    "SerialNumber": "4955",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/author\u003e \u003chttp://dbpedia.org/resource/Jimmy_Wales\u003e . ?x \u003chttp://dbpedia.org/ontology/owner\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jimmy wales",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Jimmy_Wales",
        "seq": "32,43"
      }
    ],
    "id": "0d41f404ff594266aac5f28f38fdb49f",
    "predicate mapping": [
      {
        "label": "writes",
        "uri": "http://dbpedia.org/ontology/author",
        "mappedBy": "word2vec"
      },
      {
        "label": "owns",
        "uri": "http://dbpedia.org/ontology/owner",
        "seq": "4,8",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Which city council owns the Ted Williams tunnel and Leonard Memorial ridge?",
    "SerialNumber": "4956",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Ted_Williams_Tunnel\u003e \u003chttp://dbpedia.org/property/owner\u003e ?uri. \u003chttp://dbpedia.org/resource/Leonard_P._Zakim_Bunker_Hill_Memorial_Bridge\u003e \u003chttp://dbpedia.org/property/owner\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ted Williams tunnel",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Ted_Williams_Tunnel",
        "seq": "28,47"
      },
      {
        "label": "memorial leonard ridge",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Leonard_P._Zakim_Bunker_Hill_Memorial_Bridge",
        "seq": "999,1000"
      }
    ],
    "id": "92f7bcc8b88145149f59ce244d965e37",
    "predicate mapping": [
      {
        "label": "owns",
        "uri": "http://dbpedia.org/property/owner",
        "seq": "19,23",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "owns",
        "uri": "http://dbpedia.org/property/owner",
        "seq": "19,23",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "405",
    "question": "How many people have been the first one to scale a peak in the Yosemite Park?",
    "SerialNumber": "4958",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/locatedInArea\u003e \u003chttp://dbpedia.org/resource/Yosemite_National_Park\u003e . ?x \u003chttp://dbpedia.org/ontology/firstAscentPerson\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Yosemite",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Yosemite_National_Park",
        "seq": "63,71"
      }
    ],
    "id": "8ccd8b60f2ef4e8bb9158dd030afb484",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/locatedInArea",
        "seq": "56,58",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "first",
        "uri": "http://dbpedia.org/ontology/firstAscentPerson",
        "seq": "30,35",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "Park",
        "uri": "http://dbpedia.org/ontology/Person",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "311",
    "question": "Name the battle fought by the people which also fought in Levant ?",
    "SerialNumber": "4959",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/battles\u003e \u003chttp://dbpedia.org/resource/Levant\u003e . ?x \u003chttp://dbpedia.org/property/battles\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Levant",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Levant",
        "seq": "58,64"
      }
    ],
    "id": "aad9f9ceb4364ee9b570d43ca42ce29c",
    "predicate mapping": [
      {
        "label": "battle",
        "uri": "http://dbpedia.org/property/battles",
        "seq": "9,15",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "battle",
        "uri": "http://dbpedia.org/property/battles",
        "seq": "9,15",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "fought",
        "uri": "http://dbpedia.org/ontology/Person",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Who starred in Awakening and fifety five days at peknig ?",
    "SerialNumber": "4960",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/The_Awakening_(1980_film)\u003e \u003chttp://dbpedia.org/property/starring\u003e ?uri. \u003chttp://dbpedia.org/resource/55_Days_at_Peking\u003e \u003chttp://dbpedia.org/ontology/starring\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "awakening",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/The_Awakening_(1980_film)",
        "seq": "999,1000"
      },
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/55_Days_at_Peking",
        "seq": "999,1000"
      }
    ],
    "id": "c1e28310cb5443f18804bfc7fb1af725",
    "predicate mapping": [
      {
        "label": "starred",
        "uri": "http://dbpedia.org/property/starring",
        "seq": "4,11",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "starred",
        "uri": "http://dbpedia.org/ontology/starring",
        "seq": "4,11",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What actor of Le Cirque is a relative of Maryanne Trump barry?",
    "SerialNumber": "4964",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Le_Cirque:_A_Table_in_Heaven\u003e \u003chttp://dbpedia.org/property/starring\u003e ?uri. \u003chttp://dbpedia.org/resource/Maryanne_Trump_Barry\u003e \u003chttp://dbpedia.org/ontology/relation\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "cirque",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Le_Cirque:_A_Table_in_Heaven",
        "seq": "999,1000"
      },
      {
        "label": "Maryanne Trump barry",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Maryanne_Trump_Barry",
        "seq": "41,61"
      }
    ],
    "id": "649d452e63834157a29c6a1db0e777fa",
    "predicate mapping": [
      {
        "label": "actor",
        "uri": "http://dbpedia.org/property/starring",
        "seq": "5,10",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "relative",
        "uri": "http://dbpedia.org/ontology/relation",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "401",
    "question": "How many buildings are located in Toronto ?",
    "SerialNumber": "4965",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/property/location\u003e \u003chttp://dbpedia.org/resource/Toronto\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Building\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Toronto",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Toronto",
        "seq": "34,41"
      }
    ],
    "id": "6a6a9694fbb44140ada81d7a8c89aa0f",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/property/location",
        "mappedBy": "word2vec"
      },
      {
        "label": "building",
        "uri": "http://dbpedia.org/ontology/Building",
        "seq": "9,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "List the Stanley Kubrick\u0027s movies which has music by Laurie Johnson  ?",
    "SerialNumber": "4966",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/director\u003e \u003chttp://dbpedia.org/resource/Stanley_Kubrick\u003e . ?uri \u003chttp://dbpedia.org/property/music\u003e \u003chttp://dbpedia.org/resource/Laurie_Johnson\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Stanley Kubrick",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Stanley_Kubrick",
        "seq": "9,24"
      },
      {
        "label": "Laurie Johnson",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Laurie_Johnson",
        "seq": "53,67"
      }
    ],
    "id": "d5f39362abb34bc4a563caa4d12fa4ce",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/director",
        "mappedBy": "word2vec"
      },
      {
        "label": "music",
        "uri": "http://dbpedia.org/property/music",
        "seq": "44,49",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "27,32",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What are some relatives of Battle of the Bulge veterans?",
    "SerialNumber": "4970",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/battles\u003e \u003chttp://dbpedia.org/resource/Battle_of_the_Bulge\u003e . ?x \u003chttp://dbpedia.org/ontology/relation\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MilitaryPerson\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Battle of the Bulge",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Battle_of_the_Bulge",
        "seq": "27,46"
      }
    ],
    "id": "219e980d18d243f3a491b427da37633b",
    "predicate mapping": [
      {
        "label": "battle",
        "uri": "http://dbpedia.org/property/battles",
        "seq": "-1,5",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "veterans",
        "uri": "http://dbpedia.org/ontology/relation",
        "mappedBy": "word2vec"
      },
      {
        "label": "veterans",
        "uri": "http://dbpedia.org/ontology/MilitaryPerson",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "7",
    "question": "What is the scientist whose doctoral students are Erich Bagge and erban ieica?",
    "SerialNumber": "4975",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/ontology/doctoralStudent\u003e \u003chttp://dbpedia.org/resource/Erich_Bagge\u003e . ?uri \u003chttp://dbpedia.org/ontology/doctoralStudent\u003e \u003chttp://dbpedia.org/resource/Șerban_Țițeica\u003e . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Erich Bagge",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Erich_Bagge",
        "seq": "50,61"
      },
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Șerban_Țițeica",
        "seq": "999,1000"
      }
    ],
    "id": "10c135a7b31546cc91c3dacf6c470b5c",
    "predicate mapping": [
      {
        "label": "doctoral student",
        "uri": "http://dbpedia.org/ontology/doctoralStudent",
        "seq": "28,44",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "doctoral student",
        "uri": "http://dbpedia.org/ontology/doctoralStudent",
        "seq": "28,44",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": " Who astronaut from NASA was on the mission of Apollo 11?",
    "SerialNumber": "4976",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/mission\u003e \u003chttp://dbpedia.org/resource/Apollo_11\u003e . ?uri \u003chttp://dbpedia.org/property/type\u003e \u003chttp://dbpedia.org/resource/NASA\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Astronaut\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Apollo 11",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Apollo_11",
        "seq": "47,56"
      },
      {
        "label": "NASA",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/NASA",
        "seq": "20,24"
      }
    ],
    "id": "3b7d789c05074466884d8e0d189d97c4",
    "predicate mapping": [
      {
        "label": "mission",
        "uri": "http://dbpedia.org/property/mission",
        "seq": "36,43",
        "mappedBy": "byLabelMatch"
      },
      {
        "uri": "http://dbpedia.org/property/type",
        "mappedBy": "word2vec"
      },
      {
        "label": "astronaut",
        "uri": "http://dbpedia.org/ontology/Astronaut",
        "seq": "5,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Games on amiga are typically of what kind?",
    "SerialNumber": "4979",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/computingPlatform\u003e \u003chttp://dbpedia.org/resource/Amiga\u003e . ?x \u003chttp://dbpedia.org/property/genre\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/VideoGame\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "amiga",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Amiga",
        "seq": "9,14"
      }
    ],
    "id": "c26fb222e05a44ed915b27a0b62b1f35",
    "predicate mapping": [
      {
        "label": "games",
        "uri": "http://dbpedia.org/ontology/computingPlatform",
        "seq": "-1,4",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "kind",
        "uri": "http://dbpedia.org/property/genre",
        "mappedBy": "word2vec"
      },
      {
        "label": "games",
        "uri": "http://dbpedia.org/ontology/VideoGame",
        "seq": "-1,4",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Through which states does the stream ending at Saunders county go?",
    "SerialNumber": "4982",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/mouthLocation\u003e \u003chttp://dbpedia.org/resource/Saunders_County,_Nebraska\u003e . ?x \u003chttp://dbpedia.org/ontology/state\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Stream\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Saunders county",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Saunders_County,_Nebraska",
        "seq": "47,62"
      }
    ],
    "id": "ac2cdf6aeebd49aba3049d487a9ce8a1",
    "predicate mapping": [
      {
        "label": "ending",
        "uri": "http://dbpedia.org/property/mouthLocation",
        "mappedBy": "word2vec"
      },
      {
        "label": "county",
        "uri": "http://dbpedia.org/ontology/state",
        "seq": "56,62",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "stream",
        "uri": "http://dbpedia.org/ontology/Stream",
        "seq": "30,36",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Which religions\u0027 people fought in the Miao rebellion?",
    "SerialNumber": "4983",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Miao_Rebellion_(1795–1806)\u003e \u003chttp://dbpedia.org/property/combatant\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/religion\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Miao rebellion",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Miao_Rebellion_(1795–1806)",
        "seq": "38,52"
      }
    ],
    "id": "5bba92da3db5463eb604709023bbdce3",
    "predicate mapping": [
      {
        "label": "fought",
        "uri": "http://dbpedia.org/property/combatant",
        "mappedBy": "word2vec"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion",
        "seq": "6,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "What are some languages in the italic family of languages?",
    "SerialNumber": "4984",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/languageFamily\u003e \u003chttp://dbpedia.org/resource/Italic_languages\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "languages italic",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/Italic_languages",
        "seq": "999,1000"
      }
    ],
    "id": "639d2cebd1c947d086337507434c201d",
    "predicate mapping": [
      {
        "label": "family",
        "uri": "http://dbpedia.org/ontology/languageFamily",
        "seq": "38,44",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the product of the BBC Multimedia and is the theme of Visions, the convention?",
    "SerialNumber": "4985",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/BBC_Multimedia\u003e \u003chttp://dbpedia.org/ontology/product\u003e ?uri. \u003chttp://dbpedia.org/resource/Visions_(convention)\u003e \u003chttp://dbpedia.org/property/genre\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "BBC Multimedia",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/BBC_Multimedia",
        "seq": "27,41"
      },
      {
        "label": "Visions",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Visions_(convention)",
        "seq": "62,69"
      }
    ],
    "id": "bef5d2d4a45a4e84bdc7a586d4247c3c",
    "predicate mapping": [
      {
        "label": "product",
        "uri": "http://dbpedia.org/ontology/product",
        "seq": "12,19",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "convention",
        "uri": "http://dbpedia.org/property/genre",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "How many people hold important positions alongwith Donna Shalala?",
    "SerialNumber": "4986",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/keyPerson\u003e \u003chttp://dbpedia.org/resource/Donna_Shalala\u003e . ?x \u003chttp://dbpedia.org/property/keyPeople\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Donna Shalala",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Donna_Shalala",
        "seq": "51,64"
      }
    ],
    "id": "aa9357296bd640539d42bcd5e05bca8a",
    "predicate mapping": [
      {
        "label": "positions",
        "uri": "http://dbpedia.org/ontology/keyPerson",
        "mappedBy": "word2vec"
      },
      {
        "label": "people",
        "uri": "http://dbpedia.org/property/keyPeople",
        "seq": "9,15",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Where do I find buildings rented by Weber Thompson?",
    "SerialNumber": "4988",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/tenant\u003e \u003chttp://dbpedia.org/resource/Weber_Thompson\u003e . ?x \u003chttp://dbpedia.org/property/address\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Building\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Weber Thompson",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Weber_Thompson",
        "seq": "36,50"
      }
    ],
    "id": "c002ce3102a6429a849b2bc1c63213c8",
    "predicate mapping": [
      {
        "label": "rented",
        "uri": "http://dbpedia.org/ontology/tenant",
        "mappedBy": "word2vec"
      },
      {
        "label": "rented",
        "uri": "http://dbpedia.org/property/address",
        "mappedBy": "word2vec"
      },
      {
        "label": "building",
        "uri": "http://dbpedia.org/ontology/Building",
        "seq": "16,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Who is the father of Edith Vonnegut and is also a writer?",
    "SerialNumber": "4989",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/child\u003e \u003chttp://dbpedia.org/resource/Edith_Vonnegut\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Writer\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Edith Vonnegut",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Edith_Vonnegut",
        "seq": "21,35"
      }
    ],
    "id": "ab3856e5604443d1967a40d89f070cc9",
    "predicate mapping": [
      {
        "label": "father",
        "uri": "http://dbpedia.org/ontology/child",
        "mappedBy": "word2vec"
      },
      {
        "label": "writer",
        "uri": "http://dbpedia.org/ontology/Writer",
        "seq": "50,56",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who are the members of organizations headquartered at Amstelveen?",
    "SerialNumber": "4994",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/headquarters\u003e \u003chttp://dbpedia.org/resource/Amstelveen\u003e . ?x \u003chttp://dbpedia.org/property/membership\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Organisation\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Amstelveen",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Amstelveen",
        "seq": "54,64"
      }
    ],
    "id": "824317de97054fe7b674e6cf7d41721f",
    "predicate mapping": [
      {
        "label": "headquarter",
        "uri": "http://dbpedia.org/property/headquarters",
        "seq": "37,48",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "members",
        "uri": "http://dbpedia.org/property/membership",
        "seq": "12,19",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "uri": "http://dbpedia.org/ontology/Organisation",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the show formed by J. Michael Stroczynski and had network as TNT ?",
    "SerialNumber": "4997",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/developer\u003e \u003chttp://dbpedia.org/resource/J._Michael_Straczynski\u003e . ?uri \u003chttp://dbpedia.org/property/network\u003e \u003chttp://dbpedia.org/resource/TNT_(TV_channel)\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/J._Michael_Straczynski",
        "seq": "999,1000"
      },
      {
        "label": "TNT",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/TNT_(TV_channel)",
        "seq": "66,69"
      }
    ],
    "id": "03dc94e9c928474f91e0414b14f9e1e4",
    "predicate mapping": [
      {
        "label": "Michael",
        "uri": "http://dbpedia.org/ontology/developer",
        "mappedBy": "word2vec"
      },
      {
        "label": "network",
        "uri": "http://dbpedia.org/property/network",
        "seq": "55,62",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "9,13",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "106",
    "question": "Count all those who previously played for a team which ownes Varsity Stadium ?",
    "SerialNumber": "4998",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/field\u003e \u003chttp://dbpedia.org/resource/Varsity_Stadium\u003e . ?uri \u003chttp://dbpedia.org/ontology/formerTeam\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Varsity Stadium",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Varsity_Stadium",
        "seq": "61,76"
      }
    ],
    "id": "2ca6c46d4387400999f62cc8354d3f73",
    "predicate mapping": [
      {
        "label": "ownes",
        "uri": "http://dbpedia.org/property/field",
        "mappedBy": "word2vec"
      },
      {
        "label": "team for",
        "uri": "http://dbpedia.org/ontology/formerTeam",
        "seq": "-1,7",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Is NY Rangers a prospective team for Robin Kovacs?",
    "SerialNumber": "4999",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Robin_Kovacs\u003e \u003chttp://dbpedia.org/ontology/prospectTeam\u003e \u003chttp://dbpedia.org/resource/New_York_Rangers\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Robin Kovacs",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Robin_Kovacs",
        "seq": "37,49"
      },
      {
        "label": "rangers",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/New_York_Rangers",
        "seq": "999,1000"
      }
    ],
    "id": "2b9759c6010b4d4181dbad7e72db419c",
    "predicate mapping": [
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/prospectTeam",
        "mappedBy": "word2vec"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which headcoach of Marquette Golden Eagles men\u0027s basketball team, 2008-09 was also the coach of Marquette Golden Eagles team ?",
    "SerialNumber": "5000",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/2013–14_Marquette_Golden_Eagles_men\u0027s_basketball_team\u003e \u003chttp://dbpedia.org/ontology/coach\u003e ?uri. \u003chttp://dbpedia.org/resource/2008–09_Marquette_Golden_Eagles_men\u0027s_basketball_team\u003e \u003chttp://dbpedia.org/property/headcoach\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "basketball marquette golden",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/2013–14_Marquette_Golden_Eagles_men\u0027s_basketball_team",
        "seq": "999,1000"
      },
      {
        "label": "basketball marquette golden",
        "matchedBy": "miss",
        "uri": "http://dbpedia.org/resource/2008–09_Marquette_Golden_Eagles_men\u0027s_basketball_team",
        "seq": "999,1000"
      }
    ],
    "id": "1740f374977d429492e5c58dce8e4273",
    "predicate mapping": [
      {
        "label": "coach",
        "uri": "http://dbpedia.org/ontology/coach",
        "seq": "10,15",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "headcoach",
        "uri": "http://dbpedia.org/property/headcoach",
        "seq": "6,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  }
]