[
  {
    "sparql_id": "301",
    "question": "Which comic characters are painted by Bill Finger?",
    "SerialNumber": "1",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/creator\u003e \u003chttp://dbpedia.org/resource/Bill_Finger\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/ComicsCharacter\u003e}",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Bill Finger",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Bill_Finger",
        "seq": "38,49"
      }
    ],
    "id": "f0a9f1ca14764095ae089b152e0e7f12",
    "predicate mapping": [
      {
        "label": "painted by",
        "uri": "http://dbpedia.org/ontology/creator",
        "seq": "27,37",
        "mappedBy": "manual corrections"
      },
      {
        "label": "comic characters",
        "uri": "http://dbpedia.org/ontology/ComicsCharacter",
        "seq": "6,22",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Was winston churchill the prime minister of Selwyn Lloyd?",
    "SerialNumber": "2",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Selwyn_Lloyd\u003e \u003chttp://dbpedia.org/ontology/primeMinister\u003e \u003chttp://dbpedia.org/resource/Winston_Churchill\u003e }",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Selwyn Lloyd",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Selwyn_Lloyd",
        "seq": "44,56"
      },
      {
        "label": "winston churchill",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Winston_Churchill",
        "seq": "4,21"
      }
    ],
    "id": "30b709079ea5421cb33c227c3feb9019",
    "predicate mapping": [
      {
        "label": "prime minister",
        "uri": "http://dbpedia.org/ontology/primeMinister",
        "seq": "26,39",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Name some leaders of the parent organisation of the Gestapo?",
    "SerialNumber": "3",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Gestapo\u003e \u003chttp://dbpedia.org/ontology/parentOrganisation\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/leader\u003e ?uri  . }",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Gestapo",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Gestapo",
        "seq": "52,59"
      }
    ],
    "id": "dad51bf9d0294cac99d176aba17c0241",
    "predicate mapping": [
      {
        "label": "parent organisation",
        "uri": "http://dbpedia.org/ontology/parentOrganisation",
        "seq": "25,43",
        "mappedBy": "manual corrections"
      },
      {
        "label": "leaders",
        "uri": "http://dbpedia.org/ontology/leader",
        "seq": "10,16",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Which party has come in power in Mumbai North?",
    "SerialNumber": "4",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/constituency\u003e \u003chttp://dbpedia.org/resource/Mumbai_North_(Lok_Sabha_constituency)\u003e . ?x \u003chttp://dbpedia.org/ontology/party\u003e ?uri  . }",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Mumbai North",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Mumbai_North_(Lok_Sabha_constituency)",
        "seq": "33,45"
      }
    ],
    "id": "00a3465694634edc903510572f23b487",
    "predicate mapping": [
      {
        "label": "in power",
        "uri": "http://dbpedia.org/property/constituency",
        "seq": "21,29",
        "mappedBy": "manual corrections"
      },
      {
        "label": "party",
        "uri": "http://dbpedia.org/ontology/party",
        "seq": "6,10",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the municipality of Roberto Clemente Bridge ?",
    "SerialNumber": "5",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Roberto_Clemente_Bridge\u003e \u003chttp://dbpedia.org/ontology/municipality\u003e ?uri } ",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Roberto Clemente Bridge",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Roberto_Clemente_Bridge",
        "seq": "25,48"
      }
    ],
    "id": "8216e5b6033a407191548689994aa32e",
    "predicate mapping": [
      {
        "label": "municipality",
        "uri": "http://dbpedia.org/ontology/municipality",
        "seq": "9,20",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "In which monarch did Li Si succeed someone?",
    "SerialNumber": "7",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/successor\u003e \u003chttp://dbpedia.org/resource/Li_Si\u003e . ?x \u003chttp://dbpedia.org/ontology/monarch\u003e ?uri  . }",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Li Si",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Li_Si",
        "seq": "21,26"
      }
    ],
    "id": "4447f7daa7cf45eaadac04711dce299a",
    "predicate mapping": [
      {
        "label": "succeed",
        "uri": "http://dbpedia.org/ontology/successor",
        "seq": "27,33",
        "mappedBy": "manual corrections"
      },
      {
        "label": "monarch",
        "uri": "http://dbpedia.org/ontology/monarch",
        "seq": "9,15",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which home town of PAvel Moroz is the death location of the Yakov Estrin ?",
    "SerialNumber": "8",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Pavel_Moroz\u003e \u003chttp://dbpedia.org/property/hometown\u003e ?uri. \u003chttp://dbpedia.org/resource/Yakov_Estrin\u003e \u003chttp://dbpedia.org/ontology/deathPlace\u003e ?uri} ",
    "checked": "true",
    "entity mapping": [
      {
        "label": "PAvel Moroz",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Pavel_Moroz",
        "seq": "19,30"
      },
      {
        "label": "Yakov Estrin",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Yakov_Estrin",
        "seq": "60,72"
      }
    ],
    "id": "a899e312823543e7b728a2517d29392d",
    "predicate mapping": [
      {
        "label": "home town",
        "uri": "http://dbpedia.org/property/hometown",
        "seq": "6,14",
        "mappedBy": "manual corrections"
      },
      {
        "label": "death location",
        "uri": "http://dbpedia.org/ontology/deathPlace",
        "seq": "38,52",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Which company which assembles its cars in Broadmeadows, Victoria?",
    "SerialNumber": "9",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/assembly\u003e \u003chttp://dbpedia.org/resource/Broadmeadows,_Victoria\u003e . ?x \u003chttp://dbpedia.org/ontology/parentCompany\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Automobile\u003e}",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Broadmeadows, Victoria",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Broadmeadows,_Victoria",
        "seq": "42,64"
      }
    ],
    "id": "338733202ebc4df1b6b92c618ebe3fc7",
    "predicate mapping": [
      {
        "label": "assembles",
        "uri": "http://dbpedia.org/property/assembly",
        "seq": "20,28",
        "mappedBy": "manual corrections"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/parentCompany",
        "seq": "6,12",
        "mappedBy": "manual corrections"
      },
      {
        "label": "cars",
        "uri": "http://dbpedia.org/ontology/Automobile",
        "seq": "34,38",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Which person designed the cars which has been designed by ASC Creative Services?",
    "SerialNumber": "10",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/designCompany\u003e \u003chttp://dbpedia.org/resource/ASC_Creative_Services\u003e . ?x \u003chttp://dbpedia.org/property/designer\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Automobile\u003e}",
    "checked": "true",
    "entity mapping": [
      {
        "label": "ASC Creative Services",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/ASC_Creative_Services",
        "seq": "58,79"
      }
    ],
    "id": "efa779115ad94d16aa180258a272a399",
    "predicate mapping": [
      {
        "label": "designed by",
        "uri": "http://dbpedia.org/ontology/designCompany",
        "seq": "46,56",
        "mappedBy": "manual corrections"
      },
      {
        "label": "designed",
        "uri": "http://dbpedia.org/property/designer",
        "seq": "13,20",
        "mappedBy": "manual corrections"
      },
      {
        "label": "car",
        "uri": "http://dbpedia.org/ontology/Automobile",
        "seq": "22,24",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the scientist whose supervisor was Ernest Rutherford and had a doctoral students named Charles Drummond Ellis?",
    "SerialNumber": "11",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/doctoralAdvisor\u003e \u003chttp://dbpedia.org/resource/Ernest_Rutherford\u003e . ?uri \u003chttp://dbpedia.org/property/doctoralStudents\u003e \u003chttp://dbpedia.org/resource/Charles_Drummond_Ellis\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Scientist\u003e}",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Ernest Rutherford",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ernest_Rutherford",
        "seq": "40,57"
      },
      {
        "label": "Charles Drummond Ellis",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Charles_Drummond_Ellis",
        "seq": "92,114"
      }
    ],
    "id": "7136d470a4c340bb8a9e1b60d5e68fdf",
    "predicate mapping": [
      {
        "label": "supervisor",
        "uri": "http://dbpedia.org/ontology/doctoralAdvisor",
        "seq": "25,34",
        "mappedBy": "manual corrections"
      },
      {
        "label": "students doctoral",
        "uri": "http://dbpedia.org/property/doctoralStudents",
        "seq": "68,84",
        "mappedBy": "manual corrections"
      },
      {
        "label": "scientist",
        "uri": "http://dbpedia.org/ontology/Scientist",
        "seq": "9,17",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Where was the designer of REP Parasol born?",
    "SerialNumber": "12",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/REP_Parasol\u003e \u003chttp://dbpedia.org/ontology/designer\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/birthPlace\u003e ?uri  . }",
    "checked": "true",
    "entity mapping": [
      {
        "label": "REP Parasol",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/REP_Parasol",
        "seq": "26,37"
      }
    ],
    "id": "250dc8957716408cbea2c7c1918791f8",
    "predicate mapping": [
      {
        "label": "designer",
        "uri": "http://dbpedia.org/ontology/designer",
        "seq": "14,21",
        "mappedBy": "manual corrections"
      },
      {
        "label": "born",
        "uri": "http://dbpedia.org/ontology/birthPlace",
        "seq": "10,12",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the common affiliation of the Monroe Carell Jr. Children\u0027s Hospital at Vanderbilt and alma mater of the Duncan U. Fletcher?",
    "SerialNumber": "13",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Monroe_Carell_Jr._Children\u0027s_Hospital_at_Vanderbilt\u003e \u003chttp://dbpedia.org/property/affiliation\u003e ?uri. \u003chttp://dbpedia.org/resource/Duncan_U._Fletcher\u003e \u003chttp://dbpedia.org/ontology/almaMater\u003e ?uri} ",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Monroe Carell Jr. Children\u0027s Hospital at Vanderbilt",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Monroe_Carell_Jr._Children\u0027s_Hospital_at_Vanderbilt",
        "seq": "38,89"
      },
      {
        "label": "Duncan U. Fletcher",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Duncan_U._Fletcher",
        "seq": "112,130"
      }
    ],
    "id": "35fd0b13f9824451b518e8b26ba64bde",
    "predicate mapping": [
      {
        "label": "affiliation",
        "uri": "http://dbpedia.org/property/affiliation",
        "seq": "19,29",
        "mappedBy": "manual corrections"
      },
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/ontology/almaMater",
        "seq": "94,103",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the hometown of Nader Guirat, where Josef Johansson was born too?",
    "SerialNumber": "14",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Josef_Johansson\u003e \u003chttp://dbpedia.org/property/birthPlace\u003e ?uri. \u003chttp://dbpedia.org/resource/Nader_Guirat\u003e \u003chttp://dbpedia.org/ontology/hometown\u003e ?uri . }",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Josef Johansson",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Josef_Johansson",
        "seq": "44,59"
      },
      {
        "label": "Nader Guirat",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Nader_Guirat",
        "seq": "25,37"
      }
    ],
    "id": "243f95d2144c4b2fadb5a18aa339bd98",
    "predicate mapping": [
      {
        "label": "born",
        "uri": "http://dbpedia.org/property/birthPlace",
        "seq": "64,67",
        "mappedBy": "manual corrections"
      },
      {
        "label": "hometown",
        "uri": "http://dbpedia.org/ontology/hometown",
        "seq": "12,19",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "401",
    "question": "How many shows does HBO have?",
    "SerialNumber": "16",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/ontology/company\u003e \u003chttp://dbpedia.org/resource/HBO\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "true",
    "entity mapping": [
      {
        "label": "HBO",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/HBO",
        "seq": "20,23"
      }
    ],
    "id": "1b604c16430a441ebbae9e095b36661e",
    "predicate mapping": [
      {
        "label": "@@@",
        "uri": "http://dbpedia.org/ontology/company",
        "seq": "-1,-1",
        "mappedBy": "manual corrections"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "9,13",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Is Nikolai Morozov the former coach of Stanislav Morozov?",
    "SerialNumber": "17",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Stanislav_Morozov\u003e \u003chttp://dbpedia.org/ontology/formerCoach\u003e \u003chttp://dbpedia.org/resource/Nikolai_Morozov_(figure_skater)\u003e }",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Stanislav Morozov",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Stanislav_Morozov",
        "seq": "39,56"
      },
      {
        "label": "Nikolai Morozov",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Nikolai_Morozov_(figure_skater)",
        "seq": "3,18"
      }
    ],
    "id": "80d88d56a6634b49b41ded0bdc54ae5c",
    "predicate mapping": [
      {
        "label": "former coach",
        "uri": "http://dbpedia.org/ontology/formerCoach",
        "seq": "23,34",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which share holder of outlook is also the content license of the MSX Basics ?",
    "SerialNumber": "19",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/MSX_BASIC\u003e \u003chttp://dbpedia.org/property/license\u003e ?uri. \u003chttp://dbpedia.org/resource/Outlook_on_the_web\u003e \u003chttp://dbpedia.org/property/owner\u003e ?uri} ",
    "checked": "true",
    "entity mapping": [
      {
        "label": "MSX Basic",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/MSX_BASIC",
        "seq": "65,74"
      },
      {
        "label": "outlook",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Outlook_on_the_web",
        "seq": "22,29"
      }
    ],
    "id": "239fef57d6664f4280caf0dafa7e1eb8",
    "predicate mapping": [
      {
        "label": "license",
        "uri": "http://dbpedia.org/property/license",
        "seq": "50,56",
        "mappedBy": "manual corrections"
      },
      {
        "label": "share holder",
        "uri": "http://dbpedia.org/property/owner",
        "seq": "6,17",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "On how many different grounds were seasons chaired by Ronaldo held?",
    "SerialNumber": "20",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/chairman\u003e \u003chttp://dbpedia.org/resource/Ronaldo\u003e . ?x \u003chttp://dbpedia.org/ontology/ground\u003e ?uri  . }",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Ronaldo",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Ronaldo",
        "seq": "54,61"
      }
    ],
    "id": "3f943b9b68fe43c7a7363ff39f9f3074",
    "predicate mapping": [
      {
        "label": "chaired",
        "uri": "http://dbpedia.org/ontology/chairman",
        "seq": "43,49",
        "mappedBy": "manual corrections"
      },
      {
        "label": "grounds",
        "uri": "http://dbpedia.org/ontology/ground",
        "seq": "22,28",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "Where was the battle fought where 2nd Foreign Infantry Regiment participated  ?",
    "SerialNumber": "22",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/2nd_Foreign_Infantry_Regiment\u003e \u003chttp://dbpedia.org/ontology/battle\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/territory\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MilitaryConflict\u003e}",
    "checked": "true",
    "entity mapping": [
      {
        "label": "2nd Foreign Infantry Regiment",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/2nd_Foreign_Infantry_Regiment",
        "seq": "34,63"
      }
    ],
    "id": "380224a93b1e441994c4b9785881aa6c",
    "predicate mapping": [
      {
        "label": "battle",
        "uri": "http://dbpedia.org/ontology/battle",
        "seq": "14,19",
        "mappedBy": "manual corrections"
      },
      {
        "label": "@@@",
        "uri": "http://dbpedia.org/ontology/territory",
        "seq": "-1,-1",
        "mappedBy": "manual corrections"
      },
      {
        "label": "battle",
        "uri": "http://dbpedia.org/ontology/MilitaryConflict",
        "seq": "14,19",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the operator of SR class 3Sub ?",
    "SerialNumber": "23",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/SR_class_3Sub\u003e \u003chttp://dbpedia.org/ontology/operator\u003e ?uri } ",
    "checked": "true",
    "entity mapping": [
      {
        "label": "SR class 3Sub",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/SR_class_3Sub",
        "seq": "24,37"
      }
    ],
    "id": "df8a83a06ca941c3b6f30667a64bc305",
    "predicate mapping": [
      {
        "label": "operator",
        "uri": "http://dbpedia.org/ontology/operator",
        "seq": "12,19",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which band\u0027s  former member are Kevin Jonas and Joe Jonas?",
    "SerialNumber": "24",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/formerBandMember\u003e \u003chttp://dbpedia.org/resource/Kevin_Jonas\u003e . ?uri \u003chttp://dbpedia.org/property/pastMembers\u003e \u003chttp://dbpedia.org/resource/Joe_Jonas\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Band\u003e}",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Kevin Jonas",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Kevin_Jonas",
        "seq": "32,43"
      },
      {
        "label": "Joe Jonas",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Joe_Jonas",
        "seq": "48,57"
      }
    ],
    "id": "8f8139c45fc142a1af369ddcaed646f3",
    "predicate mapping": [
      {
        "label": "former member",
        "uri": "http://dbpedia.org/ontology/formerBandMember",
        "seq": "14,26",
        "mappedBy": "manual corrections"
      },
      {
        "label": "former member",
        "uri": "http://dbpedia.org/property/pastMembers",
        "seq": "14,26",
        "mappedBy": "manual corrections"
      },
      {
        "label": "band",
        "uri": "http://dbpedia.org/ontology/Band",
        "seq": "7,9",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the tenants of O.co Coliseum ?",
    "SerialNumber": "26",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/O.co_Coliseum\u003e \u003chttp://dbpedia.org/ontology/tenant\u003e ?uri } ",
    "checked": "true",
    "entity mapping": [
      {
        "label": "O.co Coliseum",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/O.co_Coliseum",
        "seq": "20,33"
      }
    ],
    "id": "a649a19bfcbc4f2e962d2199f8e9598d",
    "predicate mapping": [
      {
        "label": "tenants",
        "uri": "http://dbpedia.org/ontology/tenant",
        "seq": "9,15",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "which politician is currently ruling over Rishikesh?",
    "SerialNumber": "27",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Rishikesh\u003e \u003chttp://dbpedia.org/ontology/leaderName\u003e ?uri } ",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Rishikesh",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Rishikesh",
        "seq": "42,51"
      }
    ],
    "id": "30e697b1548c4671bb748f26a165543c",
    "predicate mapping": [
      {
        "label": "politician",
        "uri": "http://dbpedia.org/ontology/leaderName",
        "seq": "6,15",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Is north america one of the destinations of airtours airways?",
    "SerialNumber": "28",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Airtours_International_Airways\u003e \u003chttp://dbpedia.org/ontology/destination\u003e \u003chttp://dbpedia.org/resource/North_America\u003e }",
    "checked": "true",
    "entity mapping": [
      {
        "label": "airtours",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Airtours_International_Airways",
        "seq": "44,52"
      },
      {
        "label": "north america",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/North_America",
        "seq": "3,16"
      }
    ],
    "id": "7c56af394fc64b84a9f5e244bb068831",
    "predicate mapping": [
      {
        "label": "destinations",
        "uri": "http://dbpedia.org/ontology/destination",
        "seq": "28,39",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "Who have done their PhDs under a National Medal of Science winner?",
    "SerialNumber": "29",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/prizes\u003e \u003chttp://dbpedia.org/resource/National_Medal_of_Science\u003e . ?uri \u003chttp://dbpedia.org/property/doctoralAdvisor\u003e ?x  . }",
    "checked": "true",
    "entity mapping": [
      {
        "label": "National Medal of Science",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/National_Medal_of_Science",
        "seq": "33,58"
      }
    ],
    "id": "d3695db03a5e45ae8906a2527508e7c5",
    "predicate mapping": [
      {
        "label": "winner",
        "uri": "http://dbpedia.org/property/prizes",
        "seq": "59,64",
        "mappedBy": "manual corrections"
      },
      {
        "label": "PhDs under",
        "uri": "http://dbpedia.org/property/doctoralAdvisor",
        "seq": "20,29",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Name the mascot of the military branch of William Harper.",
    "SerialNumber": "31",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/William_Harper_(Rhodesian_politician)\u003e \u003chttp://dbpedia.org/ontology/militaryBranch\u003e ?x . ?x \u003chttp://dbpedia.org/property/mascot\u003e ?uri  . }",
    "checked": "true",
    "entity mapping": [
      {
        "label": "William Harper",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/William_Harper_(Rhodesian_politician)",
        "seq": "42,56"
      }
    ],
    "id": "8b3daf3912ea4686a1b8ee5d2d9918df",
    "predicate mapping": [
      {
        "label": "military branch",
        "uri": "http://dbpedia.org/ontology/militaryBranch",
        "seq": "23,37",
        "mappedBy": "manual corrections"
      },
      {
        "label": "mascot",
        "uri": "http://dbpedia.org/property/mascot",
        "seq": "9,14",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Was Kevin Jonas a part of Jonas brothers?",
    "SerialNumber": "33",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Jonas_Brothers\u003e \u003chttp://dbpedia.org/ontology/formerBandMember\u003e \u003chttp://dbpedia.org/resource/Kevin_Jonas\u003e }",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Jonas brothers",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Jonas_Brothers",
        "seq": "26,40"
      },
      {
        "label": "Kevin Jonas",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Kevin_Jonas",
        "seq": "4,15"
      }
    ],
    "id": "f97937b4cc484a1f82a31b1d65d0041c",
    "predicate mapping": [
      {
        "label": "part of",
        "uri": "http://dbpedia.org/ontology/formerBandMember",
        "seq": "18,24",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What was the book that lead to Sagan\u0027s Cosmos, about?",
    "SerialNumber": "34",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/subsequentWork\u003e \u003chttp://dbpedia.org/resource/Cosmos_(Carl_Sagan_book)\u003e . ?x \u003chttp://dbpedia.org/property/subject\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Book\u003e}",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Cosmos",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Cosmos_(Carl_Sagan_book)",
        "seq": "39,45"
      }
    ],
    "id": "d8d0571b353e4b028d618c08d2643923",
    "predicate mapping": [
      {
        "label": "lead to",
        "uri": "http://dbpedia.org/ontology/subsequentWork",
        "seq": "23,29",
        "mappedBy": "manual corrections"
      },
      {
        "label": "about",
        "uri": "http://dbpedia.org/property/subject",
        "seq": "47,51",
        "mappedBy": "manual corrections"
      },
      {
        "label": "book",
        "uri": "http://dbpedia.org/ontology/Book",
        "seq": "13,16",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Which kind of conventions are held in Rosemont, Illinois?",
    "SerialNumber": "35",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/location\u003e \u003chttp://dbpedia.org/resource/Rosemont,_Illinois\u003e . ?x \u003chttp://dbpedia.org/property/genre\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Convention\u003e}",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Rosemont, Illinois",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Rosemont,_Illinois",
        "seq": "38,56"
      }
    ],
    "id": "3d5d25adde2b46dda7d5bc780106d764",
    "predicate mapping": [
      {
        "label": "held in",
        "uri": "http://dbpedia.org/ontology/location",
        "seq": "30,36",
        "mappedBy": "manual corrections"
      },
      {
        "label": "kind of",
        "uri": "http://dbpedia.org/property/genre",
        "seq": "6,12",
        "mappedBy": "manual corrections"
      },
      {
        "label": "conventions",
        "uri": "http://dbpedia.org/ontology/Convention",
        "seq": "14,24",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What are the type of Greenup County High School?",
    "SerialNumber": "36",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Greenup_County_High_School\u003e \u003chttp://dbpedia.org/property/type\u003e ?uri } ",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Greenup County High School",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Greenup_County_High_School",
        "seq": "21,47"
      }
    ],
    "id": "42d9e558edd840a0a310036f7f9bb9b2",
    "predicate mapping": [
      {
        "label": "type",
        "uri": "http://dbpedia.org/property/type",
        "seq": "13,16",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "List the teams for which Bobby Hoppe played ?",
    "SerialNumber": "37",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Bobby_Hoppe\u003e \u003chttp://dbpedia.org/property/pastteams\u003e ?uri } ",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Bobby Hoppe",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Bobby_Hoppe",
        "seq": "25,36"
      }
    ],
    "id": "082ecdc0056f4f3192e3b13e46d0ee0c",
    "predicate mapping": [
      {
        "label": "teams",
        "uri": "http://dbpedia.org/property/pastteams",
        "seq": "9,13",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What are some famous works of the writer of The Second Coming?",
    "SerialNumber": "38",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/The_Second_Coming_(TV_serial)\u003e \u003chttp://dbpedia.org/property/writer\u003e ?x . ?x \u003chttp://dbpedia.org/property/notableworks\u003e ?uri  . }",
    "checked": "true",
    "entity mapping": [
      {
        "label": "The Second Coming",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Second_Coming_(TV_serial)",
        "seq": "44,61"
      }
    ],
    "id": "d93543518a8d4a69b6f540f4be499a28",
    "predicate mapping": [
      {
        "label": "writer",
        "uri": "http://dbpedia.org/property/writer",
        "seq": "34,39",
        "mappedBy": "manual corrections"
      },
      {
        "label": "famous works",
        "uri": "http://dbpedia.org/property/notableworks",
        "seq": "14,25",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "401",
    "question": "How many books have been penned by Miguel de Cervantes?",
    "SerialNumber": "39",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/ontology/author\u003e \u003chttp://dbpedia.org/resource/Miguel_de_Cervantes\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Book\u003e}",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Miguel de Cervantes",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Miguel_de_Cervantes",
        "seq": "35,54"
      }
    ],
    "id": "e7c8927b5bec41c6a09ea2319c24e65f",
    "predicate mapping": [
      {
        "label": "penned",
        "uri": "http://dbpedia.org/ontology/author",
        "seq": "25,30",
        "mappedBy": "manual corrections"
      },
      {
        "label": "books",
        "uri": "http://dbpedia.org/ontology/Book",
        "seq": "9,13",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Which labels signs up progressive rock bands?",
    "SerialNumber": "40",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/genre\u003e \u003chttp://dbpedia.org/resource/Progressive_rock\u003e . ?x \u003chttp://dbpedia.org/ontology/recordLabel\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MusicalArtist\u003e}",
    "checked": "true",
    "entity mapping": [
      {
        "label": "progressive rock",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Progressive_rock",
        "seq": "22,38"
      }
    ],
    "id": "be29caba2b2b43a385df47982c5421d3",
    "predicate mapping": [
      {
        "label": "signs",
        "uri": "http://dbpedia.org/property/genre",
        "seq": "13,17",
        "mappedBy": "manual corrections"
      },
      {
        "label": "labels",
        "uri": "http://dbpedia.org/ontology/recordLabel",
        "seq": "6,11",
        "mappedBy": "manual corrections"
      },
      {
        "label": "bands",
        "uri": "http://dbpedia.org/ontology/MusicalArtist",
        "seq": "39,43",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "What are the schools whose city is Reading, Berkshire?",
    "SerialNumber": "41",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/city\u003e \u003chttp://dbpedia.org/resource/Reading,_Berkshire\u003e } ",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Reading, Berkshire",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Reading,_Berkshire",
        "seq": "35,53"
      }
    ],
    "id": "9a7523469c8c45b58ec65ed56af6e306",
    "predicate mapping": [
      {
        "label": "city",
        "uri": "http://dbpedia.org/ontology/city",
        "seq": "27,30",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "Which magazine\u0027s editor is married to Crystal Harris?",
    "SerialNumber": "42",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/spouse\u003e \u003chttp://dbpedia.org/resource/Crystal_Harris\u003e . ?uri \u003chttp://dbpedia.org/property/editor\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Magazine\u003e}",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Crystal Harris",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Crystal_Harris",
        "seq": "38,52"
      }
    ],
    "id": "efe2cdcf9bb3460e9f13067772d9e62f",
    "predicate mapping": [
      {
        "label": "married",
        "uri": "http://dbpedia.org/property/spouse",
        "seq": "27,33",
        "mappedBy": "manual corrections"
      },
      {
        "label": "editor",
        "uri": "http://dbpedia.org/property/editor",
        "seq": "17,22",
        "mappedBy": "manual corrections"
      },
      {
        "label": "magazine\u0027s",
        "uri": "http://dbpedia.org/ontology/Magazine",
        "seq": "6,15",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Does the west thurrock come under Essex county?",
    "SerialNumber": "43",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/West_Thurrock\u003e \u003chttp://dbpedia.org/ontology/ceremonialCounty\u003e \u003chttp://dbpedia.org/resource/Essex\u003e }",
    "checked": "true",
    "entity mapping": [
      {
        "label": "west thurrock",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/West_Thurrock",
        "seq": "9,22"
      },
      {
        "label": "Essex",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Essex",
        "seq": "34,39"
      }
    ],
    "id": "d4f1cee8ab32498faaf9d3d2190380c1",
    "predicate mapping": [
      {
        "label": "county",
        "uri": "http://dbpedia.org/ontology/ceremonialCounty",
        "seq": "40,45",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "How many people have headed organizations headquartered at Niederkirchnerstrae?",
    "SerialNumber": "44",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/headquarter\u003e \u003chttp://dbpedia.org/resource/Niederkirchnerstraße\u003e . ?x \u003chttp://dbpedia.org/ontology/leader\u003e ?uri  . }",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Niederkirchnerstrae",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Niederkirchnerstraße",
        "seq": "59,78"
      }
    ],
    "id": "70448495be244ebea4746e370eb19f5c",
    "predicate mapping": [
      {
        "label": "headquartered",
        "uri": "http://dbpedia.org/ontology/headquarter",
        "seq": "42,54",
        "mappedBy": "manual corrections"
      },
      {
        "label": "headed",
        "uri": "http://dbpedia.org/ontology/leader",
        "seq": "21,26",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "In which television shows have Steven Moffat served as an executive producer?",
    "SerialNumber": "45",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/executiveProducer\u003e \u003chttp://dbpedia.org/resource/Steven_Moffat\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Steven Moffat",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Steven_Moffat",
        "seq": "31,44"
      }
    ],
    "id": "93ca4dc34b5e4bf7ba90d0ae55f7d50c",
    "predicate mapping": [
      {
        "label": "executive producer",
        "uri": "http://dbpedia.org/ontology/executiveProducer",
        "seq": "58,75",
        "mappedBy": "manual corrections"
      },
      {
        "label": "television shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "9,24",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which shareholder of Dagenham wind turbines is also the parent company of the Ford Falcon Cobra?",
    "SerialNumber": "46",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Ford_Falcon_Cobra\u003e \u003chttp://dbpedia.org/ontology/parentCompany\u003e ?uri. \u003chttp://dbpedia.org/resource/Dagenham_wind_turbines\u003e \u003chttp://dbpedia.org/property/owner\u003e ?uri} ",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Ford Falcon Cobra",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Ford_Falcon_Cobra",
        "seq": "78,95"
      },
      {
        "label": "Dagenham wind turbines",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Dagenham_wind_turbines",
        "seq": "21,43"
      }
    ],
    "id": "d8150b46a8714ed9b7ede5b606aa2638",
    "predicate mapping": [
      {
        "label": "company parent",
        "uri": "http://dbpedia.org/ontology/parentCompany",
        "seq": "56,69",
        "mappedBy": "manual corrections"
      },
      {
        "label": "shareholder",
        "uri": "http://dbpedia.org/property/owner",
        "seq": "6,16",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What are the airlines whose hub is San Francisco International Airport?",
    "SerialNumber": "47",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/hubs\u003e \u003chttp://dbpedia.org/resource/San_Francisco_International_Airport\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Airline\u003e}",
    "checked": "true",
    "entity mapping": [
      {
        "label": "San Francisco International Airport",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/San_Francisco_International_Airport",
        "seq": "35,70"
      }
    ],
    "id": "09b0e80486e44ea2b1cbca4f69c89923",
    "predicate mapping": [
      {
        "label": "hub",
        "uri": "http://dbpedia.org/property/hubs",
        "seq": "28,30",
        "mappedBy": "manual corrections"
      },
      {
        "label": "airlines",
        "uri": "http://dbpedia.org/ontology/Airline",
        "seq": "13,20",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Where can I find things run by the maritime museum of San Diego?",
    "SerialNumber": "48",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/governingBody\u003e \u003chttp://dbpedia.org/resource/Maritime_Museum_of_San_Diego\u003e . ?x \u003chttp://dbpedia.org/property/location\u003e ?uri  . }",
    "checked": "true",
    "entity mapping": [
      {
        "label": "maritime museum of San Diego",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Maritime_Museum_of_San_Diego",
        "seq": "35,63"
      }
    ],
    "id": "8c9f73ffe06247fa8fefae66915c41bb",
    "predicate mapping": [
      {
        "label": "run by",
        "uri": "http://dbpedia.org/property/governingBody",
        "seq": "24,29",
        "mappedBy": "manual corrections"
      },
      {
        "label": "of",
        "uri": "http://dbpedia.org/property/location",
        "seq": "51,52",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the local authority of the Trinity School, Brentwood and place of birth of the Sarah Walker (badminton) ?",
    "SerialNumber": "49",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Trinity_School,_Brentwood\u003e \u003chttp://dbpedia.org/ontology/localAuthority\u003e ?uri. \u003chttp://dbpedia.org/resource/Sarah_Walker_(badminton)\u003e \u003chttp://dbpedia.org/property/placeOfBirth\u003e ?uri} ",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Trinity School, Brentwood",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Trinity_School,_Brentwood",
        "seq": "35,60"
      },
      {
        "label": "Sarah Walker (badminton)",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Sarah_Walker_(badminton)",
        "seq": "87,111"
      }
    ],
    "id": "d4b1587fce7046aabe7c9717457c7894",
    "predicate mapping": [
      {
        "label": "authority local",
        "uri": "http://dbpedia.org/ontology/localAuthority",
        "seq": "12,26",
        "mappedBy": "manual corrections"
      },
      {
        "label": "place of birth",
        "uri": "http://dbpedia.org/property/placeOfBirth",
        "seq": "65,78",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "102",
    "question": "How many services does 21Vianet provide?",
    "SerialNumber": "50",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { \u003chttp://dbpedia.org/resource/21Vianet\u003e \u003chttp://dbpedia.org/property/services\u003e ?uri  . }",
    "checked": "true",
    "entity mapping": [
      {
        "label": "21Vianet",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/21Vianet",
        "seq": "23,31"
      }
    ],
    "id": "fb1bfcc7943943b892d6d22690b2ef48",
    "predicate mapping": [
      {
        "label": "services",
        "uri": "http://dbpedia.org/property/services",
        "seq": "9,16",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "where did the office holder died  who is successor to Elmer Burkett ?",
    "SerialNumber": "52",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/successor\u003e \u003chttp://dbpedia.org/resource/Elmer_Burkett\u003e . ?x \u003chttp://dbpedia.org/property/deathPlace\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/OfficeHolder\u003e}",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Elmer Burkett",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Elmer_Burkett",
        "seq": "54,67"
      }
    ],
    "id": "ee04ea91a583412db4d05a9929dcc4dc",
    "predicate mapping": [
      {
        "label": "successor",
        "uri": "http://dbpedia.org/property/successor",
        "seq": "41,49",
        "mappedBy": "manual corrections"
      },
      {
        "label": "died",
        "uri": "http://dbpedia.org/property/deathPlace",
        "seq": "28,31",
        "mappedBy": "manual corrections"
      },
      {
        "label": "office holder",
        "uri": "http://dbpedia.org/ontology/OfficeHolder",
        "seq": "14,26",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Name the team for which Hensley Meulens played, whihc was also the debut team od Steve Ontiveros ?",
    "SerialNumber": "53",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Steve_Ontiveros_(infielder)\u003e \u003chttp://dbpedia.org/property/debutteam\u003e ?uri. \u003chttp://dbpedia.org/resource/Hensley_Meulens\u003e \u003chttp://dbpedia.org/ontology/team\u003e ?uri} ",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Steve Ontiveros",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Steve_Ontiveros_(infielder)",
        "seq": "81,96"
      },
      {
        "label": "Hensley Meulens",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Hensley_Meulens",
        "seq": "24,39"
      }
    ],
    "id": "5c171d57abb14180b3f6dc48e55c4bbf",
    "predicate mapping": [
      {
        "label": "debut team",
        "uri": "http://dbpedia.org/property/debutteam",
        "seq": "67,76",
        "mappedBy": "manual corrections"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/team",
        "seq": "9,12",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "List the actors of  Lucy Sullivan Is Getting Married?",
    "SerialNumber": "54",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Lucy_Sullivan_Is_Getting_Married\u003e \u003chttp://dbpedia.org/property/starring\u003e ?uri } ",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Lucy Sullivan Is Getting Married",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Lucy_Sullivan_Is_Getting_Married",
        "seq": "20,52"
      }
    ],
    "id": "f3110585cbc94fc69f9f61aeb1c3555f",
    "predicate mapping": [
      {
        "label": "actors of",
        "uri": "http://dbpedia.org/property/starring",
        "seq": "9,17",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the island with archipelago as Society Islands and has the largest city named Faaa ?",
    "SerialNumber": "55",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/largestCity\u003e \u003chttp://dbpedia.org/resource/Faaa\u003e . ?uri \u003chttp://dbpedia.org/property/archipelago\u003e \u003chttp://dbpedia.org/resource/Society_Islands\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Island\u003e}",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Faaa",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Faaa",
        "seq": "83,87"
      },
      {
        "label": "Society Islands",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Society_Islands",
        "seq": "36,51"
      }
    ],
    "id": "54e823bdc8d44ed7a0a40c77e29c361d",
    "predicate mapping": [
      {
        "label": "largest city",
        "uri": "http://dbpedia.org/ontology/largestCity",
        "seq": "64,75",
        "mappedBy": "manual corrections"
      },
      {
        "label": "archipelago",
        "uri": "http://dbpedia.org/property/archipelago",
        "seq": "21,31",
        "mappedBy": "manual corrections"
      },
      {
        "label": "island",
        "uri": "http://dbpedia.org/ontology/Island",
        "seq": "9,14",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Who appointed the governor under whom Richard Winn served?",
    "SerialNumber": "57",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Richard_Winn\u003e \u003chttp://dbpedia.org/ontology/governor\u003e ?x . ?x \u003chttp://dbpedia.org/property/appointer\u003e ?uri  . }",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Richard Winn",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Richard_Winn",
        "seq": "38,50"
      }
    ],
    "id": "32ab0f92ca6444c5a2877e23fc76303c",
    "predicate mapping": [
      {
        "label": "governor",
        "uri": "http://dbpedia.org/ontology/governor",
        "seq": "18,25",
        "mappedBy": "manual corrections"
      },
      {
        "label": "appointed",
        "uri": "http://dbpedia.org/property/appointer",
        "seq": "4,12",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What company involved in the development of Sherlock did Arthur Levinson work for?",
    "SerialNumber": "58",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Arthur_D._Levinson\u003e \u003chttp://dbpedia.org/ontology/occupation\u003e ?uri. \u003chttp://dbpedia.org/resource/Sherlock_(software)\u003e \u003chttp://dbpedia.org/ontology/developer\u003e ?uri} ",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Arthur Levinson",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Arthur_D._Levinson",
        "seq": "57,72"
      },
      {
        "label": "Sherlock",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Sherlock_(software)",
        "seq": "44,52"
      }
    ],
    "id": "83248eda73fd4609ac3a9359b62a9a2c",
    "predicate mapping": [
      {
        "label": "work for",
        "uri": "http://dbpedia.org/ontology/occupation",
        "seq": "73,80",
        "mappedBy": "manual corrections"
      },
      {
        "label": "development",
        "uri": "http://dbpedia.org/ontology/developer",
        "seq": "29,39",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who produced the TV shows for Fremantle Media?",
    "SerialNumber": "60",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/company\u003e \u003chttp://dbpedia.org/resource/FremantleMedia\u003e . ?x \u003chttp://dbpedia.org/ontology/producer\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Fremantle Media",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/FremantleMedia",
        "seq": "30,45"
      }
    ],
    "id": "5e4463b5e91147819fab19c1eb738a8b",
    "predicate mapping": [
      {
        "label": "Who",
        "uri": "http://dbpedia.org/property/company",
        "seq": "0,2",
        "mappedBy": "manual corrections"
      },
      {
        "label": "produced",
        "uri": "http://dbpedia.org/ontology/producer",
        "seq": "4,11",
        "mappedBy": "manual corrections"
      },
      {
        "label": "TV shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "17,24",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the style of architecture of South Loop Printing House District ?",
    "SerialNumber": "61",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/South_Loop_Printing_House_District\u003e \u003chttp://dbpedia.org/ontology/architecturalStyle\u003e ?uri } ",
    "checked": "true",
    "entity mapping": [
      {
        "label": "South Loop Printing House District",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/South_Loop_Printing_House_District",
        "seq": "37,71"
      }
    ],
    "id": "2a11aeb11ce248cfaf63be2b6701fe9a",
    "predicate mapping": [
      {
        "label": "style of architecture",
        "uri": "http://dbpedia.org/ontology/architecturalStyle",
        "seq": "12,32",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "8",
    "question": "Whose provides the service of  Outlook and also products  such as Visual Studio?",
    "SerialNumber": "62",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/services\u003e \u003chttp://dbpedia.org/resource/Outlook.com\u003e . ?uri \u003chttp://dbpedia.org/property/products\u003e \u003chttp://dbpedia.org/resource/Microsoft_Visual_Studio\u003e  . }",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Outlook",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Outlook.com",
        "seq": "31,38"
      },
      {
        "label": "Visual Studio",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Microsoft_Visual_Studio",
        "seq": "66,79"
      }
    ],
    "id": "d101acb6da7a464cbdec88d18d5b855e",
    "predicate mapping": [
      {
        "label": "service",
        "uri": "http://dbpedia.org/property/services",
        "seq": "19,25",
        "mappedBy": "manual corrections"
      },
      {
        "label": "products",
        "uri": "http://dbpedia.org/property/products",
        "seq": "48,55",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Is Ombla originate in Croatia?",
    "SerialNumber": "63",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Ombla\u003e \u003chttp://dbpedia.org/ontology/sourceMountain\u003e \u003chttp://dbpedia.org/resource/Croatia\u003e }",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Ombla",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ombla",
        "seq": "3,8"
      },
      {
        "label": "Croatia",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Croatia",
        "seq": "22,29"
      }
    ],
    "id": "a2f446250f114e05ad19763cc9c8a1a6",
    "predicate mapping": [
      {
        "label": "originate",
        "uri": "http://dbpedia.org/ontology/sourceMountain",
        "seq": "9,17",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the nationality of Newin Chidchob ?",
    "SerialNumber": "64",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Newin_Chidchob\u003e \u003chttp://dbpedia.org/property/nationality\u003e ?uri } ",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Newin Chidchob",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Newin_Chidchob",
        "seq": "27,41"
      }
    ],
    "id": "873c3fe1ec484dcfbb114320042f298d",
    "predicate mapping": [
      {
        "label": "nationality",
        "uri": "http://dbpedia.org/property/nationality",
        "seq": "12,22",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "In which team did Dave Bing and Ron Reed started their basketball career?",
    "SerialNumber": "65",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Dave_Bing\u003e \u003chttp://dbpedia.org/property/draftTeam\u003e ?uri. \u003chttp://dbpedia.org/resource/Ron_Reed\u003e \u003chttp://dbpedia.org/property/draftTeam\u003e ?uri . }",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Dave Bing",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Dave_Bing",
        "seq": "18,27"
      },
      {
        "label": "Ron Reed",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ron_Reed",
        "seq": "32,40"
      }
    ],
    "id": "d509a97d616741b69ea3d084e0a7b737",
    "predicate mapping": [
      {
        "label": "team",
        "uri": "http://dbpedia.org/property/draftTeam",
        "seq": "9,12",
        "mappedBy": "manual corrections"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/property/draftTeam",
        "seq": "9,12",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Was Ganymede discovered by Galileo Galilei?",
    "SerialNumber": "66",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Ganymede_(moon)\u003e \u003chttp://dbpedia.org/property/discoverer\u003e \u003chttp://dbpedia.org/resource/Galileo_Galilei\u003e }",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Ganymede",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Ganymede_(moon)",
        "seq": "4,12"
      },
      {
        "label": "Galileo Galilei",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Galileo_Galilei",
        "seq": "27,42"
      }
    ],
    "id": "418b062f88884aff8095211e8c44cbed",
    "predicate mapping": [
      {
        "label": "discovered",
        "uri": "http://dbpedia.org/property/discoverer",
        "seq": "13,22",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "List some musicians associated with famous guitar players?",
    "SerialNumber": "67",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/notableInstruments\u003e \u003chttp://dbpedia.org/resource/Guitar\u003e . ?x \u003chttp://dbpedia.org/ontology/associatedMusicalArtist\u003e ?uri  . }",
    "checked": "true",
    "entity mapping": [
      {
        "label": "guitar",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Guitar",
        "seq": "43,49"
      }
    ],
    "id": "cbddb4a494514d32ae94fd66fdde0269",
    "predicate mapping": [
      {
        "label": "list",
        "uri": "http://dbpedia.org/property/notableInstruments",
        "seq": "0,3",
        "mappedBy": "manual corrections"
      },
      {
        "label": "musicians associated",
        "uri": "http://dbpedia.org/ontology/associatedMusicalArtist",
        "seq": "10,29",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What are the awards won by the producer of Elizabeth: The Golden Age?",
    "SerialNumber": "68",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Elizabeth:_The_Golden_Age_(soundtrack)\u003e \u003chttp://dbpedia.org/property/producer\u003e ?x . ?x \u003chttp://dbpedia.org/property/awards\u003e ?uri  . }",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Elizabeth: The Golden Age",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Elizabeth:_The_Golden_Age_(soundtrack)",
        "seq": "43,68"
      }
    ],
    "id": "339f9ccfb682456ab0f1e7f580a2d27e",
    "predicate mapping": [
      {
        "label": "producer",
        "uri": "http://dbpedia.org/property/producer",
        "seq": "31,38",
        "mappedBy": "manual corrections"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards",
        "seq": "13,18",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "With what company is the service OneDrive associated?",
    "SerialNumber": "69",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/services\u003e \u003chttp://dbpedia.org/resource/OneDrive\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Company\u003e}",
    "checked": "true",
    "entity mapping": [
      {
        "label": "OneDrive",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/OneDrive",
        "seq": "33,41"
      }
    ],
    "id": "1be4e465a7ac4a6c893e6b1fc1aef01a",
    "predicate mapping": [
      {
        "label": "service",
        "uri": "http://dbpedia.org/property/services",
        "seq": "25,31",
        "mappedBy": "manual corrections"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company",
        "seq": "10,16",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "Name the university whose affiliations\u0027s foundation place is Washington, D.C.?",
    "SerialNumber": "70",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/foundationPlace\u003e \u003chttp://dbpedia.org/resource/Washington,_D.C.\u003e . ?uri \u003chttp://dbpedia.org/property/affiliations\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/University\u003e}",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Washington, D.C.",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Washington,_D.C.",
        "seq": "61,77"
      }
    ],
    "id": "a969284fc29d4b659e9088088a2c49f2",
    "predicate mapping": [
      {
        "label": "foundation place",
        "uri": "http://dbpedia.org/ontology/foundationPlace",
        "seq": "41,56",
        "mappedBy": "manual corrections"
      },
      {
        "label": "affiliations\u0027s",
        "uri": "http://dbpedia.org/property/affiliations",
        "seq": "26,39",
        "mappedBy": "manual corrections"
      },
      {
        "label": "university",
        "uri": "http://dbpedia.org/ontology/University",
        "seq": "9,18",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "311",
    "question": "Name presidents of the schools which have queen noor of Jordan as one of them ?",
    "SerialNumber": "71",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/president\u003e \u003chttp://dbpedia.org/resource/Queen_Noor_of_Jordan\u003e . ?x \u003chttp://dbpedia.org/property/president\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/School\u003e}",
    "checked": "true",
    "entity mapping": [
      {
        "label": "queen noor of Jordan",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Queen_Noor_of_Jordan",
        "seq": "42,62"
      }
    ],
    "id": "7aff0ab2a7b741839c3df90771be6add",
    "predicate mapping": [
      {
        "label": "presidents",
        "uri": "http://dbpedia.org/ontology/president",
        "seq": "5,14",
        "mappedBy": "manual corrections"
      },
      {
        "label": "presidents",
        "uri": "http://dbpedia.org/property/president",
        "seq": "5,14",
        "mappedBy": "manual corrections"
      },
      {
        "label": "schools",
        "uri": "http://dbpedia.org/ontology/School",
        "seq": "23,29",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Who appointed the governor under which Robert Witherspoon worked?",
    "SerialNumber": "72",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Robert_Witherspoon\u003e \u003chttp://dbpedia.org/ontology/governor\u003e ?x . ?x \u003chttp://dbpedia.org/property/appointer\u003e ?uri  . }",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Robert Witherspoon",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Robert_Witherspoon",
        "seq": "39,57"
      }
    ],
    "id": "312435fad0194831a80fe3346c9a683b",
    "predicate mapping": [
      {
        "label": "governor",
        "uri": "http://dbpedia.org/ontology/governor",
        "seq": "18,25",
        "mappedBy": "manual corrections"
      },
      {
        "label": "appointed",
        "uri": "http://dbpedia.org/property/appointer",
        "seq": "4,12",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "Who is the producer of the song which is the previous work of He\u0027s a Liar ?",
    "SerialNumber": "73",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/He\u0027s_a_Liar\u003e \u003chttp://dbpedia.org/ontology/previousWork\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/producer\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Song\u003e}",
    "checked": "true",
    "entity mapping": [
      {
        "label": "He\u0027s a Liar",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/He\u0027s_a_Liar",
        "seq": "62,73"
      }
    ],
    "id": "f76953f003c2433d837966593c777c75",
    "predicate mapping": [
      {
        "label": "previous work",
        "uri": "http://dbpedia.org/ontology/previousWork",
        "seq": "45,57",
        "mappedBy": "manual corrections"
      },
      {
        "label": "producer",
        "uri": "http://dbpedia.org/ontology/producer",
        "seq": "11,18",
        "mappedBy": "manual corrections"
      },
      {
        "label": "song",
        "uri": "http://dbpedia.org/ontology/Song",
        "seq": "27,30",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "List the base currency of the country whose anthem is Oj, svijetla majska zoro.",
    "SerialNumber": "74",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/anthem\u003e \u003chttp://dbpedia.org/resource/Oj,_svijetla_majska_zoro\u003e . ?x \u003chttp://dbpedia.org/property/currency\u003e ?uri  . }",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Oj, svijetla majska zoro",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Oj,_svijetla_majska_zoro",
        "seq": "54,78"
      }
    ],
    "id": "6ac000fc0bb7458f8556f603ed42e4b3",
    "predicate mapping": [
      {
        "label": "anthem",
        "uri": "http://dbpedia.org/ontology/anthem",
        "seq": "44,49",
        "mappedBy": "manual corrections"
      },
      {
        "label": "currency",
        "uri": "http://dbpedia.org/property/currency",
        "seq": "14,21",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who gave the voice for Allen Walker ?",
    "SerialNumber": "75",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Allen_Walker\u003e \u003chttp://dbpedia.org/ontology/voice\u003e ?uri } ",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Allen Walker",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Allen_Walker",
        "seq": "23,35"
      }
    ],
    "id": "48584c830439478e9272821ca6fac246",
    "predicate mapping": [
      {
        "label": "voice",
        "uri": "http://dbpedia.org/ontology/voice",
        "seq": "13,17",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "7",
    "question": "Who is associated to Publius Servilius Vatia Isauricus  and Marcus Calpurnius Bibulus?",
    "SerialNumber": "76",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/ontology/associate\u003e \u003chttp://dbpedia.org/resource/Publius_Servilius_Vatia_Isauricus_(consul_48_BC)\u003e . ?uri \u003chttp://dbpedia.org/ontology/associate\u003e \u003chttp://dbpedia.org/resource/Marcus_Calpurnius_Bibulus\u003e . }",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Publius Servilius Vatia Isauricus",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Publius_Servilius_Vatia_Isauricus_(consul_48_BC)",
        "seq": "21,54"
      },
      {
        "label": "Marcus Calpurnius Bibulus",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Marcus_Calpurnius_Bibulus",
        "seq": "60,85"
      }
    ],
    "id": "78435963a0b241ecbd9b7ab9e4916acc",
    "predicate mapping": [
      {
        "label": "associated",
        "uri": "http://dbpedia.org/ontology/associate",
        "seq": "7,16",
        "mappedBy": "manual corrections"
      },
      {
        "label": "associated",
        "uri": "http://dbpedia.org/ontology/associate",
        "seq": "7,16",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Which country has given citizenship to both saima chowdhury and edmund john?",
    "SerialNumber": "77",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Saima_Chowdhury\u003e \u003chttp://dbpedia.org/ontology/citizenship\u003e ?uri. \u003chttp://dbpedia.org/resource/Edmund_John\u003e \u003chttp://dbpedia.org/ontology/citizenship\u003e ?uri . }",
    "checked": "true",
    "entity mapping": [
      {
        "label": "saima chowdhury",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Saima_Chowdhury",
        "seq": "44,59"
      },
      {
        "label": "edmund john",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Edmund_John",
        "seq": "64,75"
      }
    ],
    "id": "81218ea48e2f44a1bef8c118ae5b965a",
    "predicate mapping": [
      {
        "label": "citizenship",
        "uri": "http://dbpedia.org/ontology/citizenship",
        "seq": "24,34",
        "mappedBy": "manual corrections"
      },
      {
        "label": "citizenship",
        "uri": "http://dbpedia.org/ontology/citizenship",
        "seq": "24,34",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Who is the person that first ascented the Cathedral Peak and Mount Hoffmann?",
    "SerialNumber": "78",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Cathedral_Peak_(California)\u003e \u003chttp://dbpedia.org/ontology/firstAscentPerson\u003e ?uri. \u003chttp://dbpedia.org/resource/Mount_Hoffmann\u003e \u003chttp://dbpedia.org/ontology/firstAscentPerson\u003e ?uri . }",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Cathedral Peak",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Cathedral_Peak_(California)",
        "seq": "42,56"
      },
      {
        "label": "Mount Hoffmann",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Mount_Hoffmann",
        "seq": "61,75"
      }
    ],
    "id": "5df6285e711048a5aa9d59ee7bbc7886",
    "predicate mapping": [
      {
        "label": "person that first ascented",
        "uri": "http://dbpedia.org/ontology/firstAscentPerson",
        "seq": "11,36",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What university campuses are situated in Indiana?",
    "SerialNumber": "79",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/campus\u003e \u003chttp://dbpedia.org/resource/Indiana\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/University\u003e}",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Indiana",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Indiana",
        "seq": "41,48"
      }
    ],
    "id": "ae5afe36b84a4b65b6e52062c8c1d079",
    "predicate mapping": [
      {
        "label": "campuses",
        "uri": "http://dbpedia.org/ontology/campus",
        "seq": "16,23",
        "mappedBy": "manual corrections"
      },
      {
        "label": "university",
        "uri": "http://dbpedia.org/ontology/University",
        "seq": "5,14",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Where is the swedish covenant hospital?",
    "SerialNumber": "80",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Swedish_Covenant_Hospital\u003e \u003chttp://dbpedia.org/ontology/location\u003e ?uri } ",
    "checked": "true",
    "entity mapping": [
      {
        "label": "swedish covenant hospital",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Swedish_Covenant_Hospital",
        "seq": "13,38"
      }
    ],
    "id": "ef9db1b8f7de4e319db223cee9531bb4",
    "predicate mapping": [
      {
        "label": "Where",
        "uri": "http://dbpedia.org/ontology/location",
        "seq": "0,4",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which composer of Girl from the North Country is the subsequent work of the Moondog Matinee?",
    "SerialNumber": "81",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Girl_from_the_North_Country\u003e \u003chttp://dbpedia.org/ontology/composer\u003e ?uri. \u003chttp://dbpedia.org/resource/Moondog_Matinee\u003e \u003chttp://dbpedia.org/ontology/subsequentWork\u003e ?uri} ",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Girl from the North Country",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Girl_from_the_North_Country",
        "seq": "18,45"
      },
      {
        "label": "Moondog Matinee",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Moondog_Matinee",
        "seq": "76,91"
      }
    ],
    "id": "a6ff1c4c6e0f4b519d1f50c706af5469",
    "predicate mapping": [
      {
        "label": "composer",
        "uri": "http://dbpedia.org/ontology/composer",
        "seq": "6,13",
        "mappedBy": "manual corrections"
      },
      {
        "label": "subsequent work",
        "uri": "http://dbpedia.org/ontology/subsequentWork",
        "seq": "53,67",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "307",
    "question": "What is the television show whose vocals are performed by  April Stewart and Mona Marshall?",
    "SerialNumber": "82",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/property/voices\u003e \u003chttp://dbpedia.org/resource/April_Stewart\u003e . ?uri \u003chttp://dbpedia.org/property/voices\u003e \u003chttp://dbpedia.org/resource/Mona_Marshall\u003e . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "true",
    "entity mapping": [
      {
        "label": "April Stewart",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/April_Stewart",
        "seq": "59,72"
      },
      {
        "label": "Mona Marshall",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Mona_Marshall",
        "seq": "77,90"
      }
    ],
    "id": "b38170945c5d442e80799fe9d203be22",
    "predicate mapping": [
      {
        "label": "vocals",
        "uri": "http://dbpedia.org/property/voices",
        "seq": "34,39",
        "mappedBy": "manual corrections"
      },
      {
        "label": "vocals",
        "uri": "http://dbpedia.org/property/voices",
        "seq": "34,39",
        "mappedBy": "manual corrections"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "12,26",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "7",
    "question": "Name the members of  boards of Freedom of the City and Trinity House?",
    "SerialNumber": "83",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/ontology/board\u003e \u003chttp://dbpedia.org/resource/Freedom_of_the_City\u003e . ?uri \u003chttp://dbpedia.org/ontology/board\u003e \u003chttp://dbpedia.org/resource/Trinity_House\u003e . }",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Freedom of the City",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Freedom_of_the_City",
        "seq": "31,50"
      },
      {
        "label": "Trinity House",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Trinity_House",
        "seq": "55,68"
      }
    ],
    "id": "401fed151be7413abf38efaa54396fce",
    "predicate mapping": [
      {
        "label": "boards",
        "uri": "http://dbpedia.org/ontology/board",
        "seq": "21,26",
        "mappedBy": "manual corrections"
      },
      {
        "label": "boards",
        "uri": "http://dbpedia.org/ontology/board",
        "seq": "21,26",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Was Reza Amrollahi born in Iran?",
    "SerialNumber": "84",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Reza_Amrollahi\u003e \u003chttp://dbpedia.org/property/birthplace\u003e \u003chttp://dbpedia.org/resource/Iran\u003e }",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Reza Amrollahi",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Reza_Amrollahi",
        "seq": "4,18"
      },
      {
        "label": "Iran",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Iran",
        "seq": "27,31"
      }
    ],
    "id": "55fad74c2c62469581f58e7bbe60da52",
    "predicate mapping": [
      {
        "label": "born",
        "uri": "http://dbpedia.org/property/birthplace",
        "seq": "19,22",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "In which war did Roh Tae Woo and Lee Leffingwell fight?",
    "SerialNumber": "86",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Roh_Tae-woo\u003e \u003chttp://dbpedia.org/ontology/battle\u003e ?uri. \u003chttp://dbpedia.org/resource/Lee_Leffingwell\u003e \u003chttp://dbpedia.org/ontology/battle\u003e ?uri . }",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Roh Tae Woo",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Roh_Tae-woo",
        "seq": "17,28"
      },
      {
        "label": "Lee Leffingwell",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Lee_Leffingwell",
        "seq": "33,48"
      }
    ],
    "id": "94a86fc843af4093900744147451118e",
    "predicate mapping": [
      {
        "label": "war",
        "uri": "http://dbpedia.org/ontology/battle",
        "seq": "9,11",
        "mappedBy": "manual corrections"
      },
      {
        "label": "war",
        "uri": "http://dbpedia.org/ontology/battle",
        "seq": "9,11",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "list  the producer of the movies in which Rosemarie DeWitt in the star cast?",
    "SerialNumber": "87",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/starring\u003e \u003chttp://dbpedia.org/resource/Rosemarie_DeWitt\u003e . ?x \u003chttp://dbpedia.org/property/producer\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Rosemarie DeWitt",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Rosemarie_DeWitt",
        "seq": "42,58"
      }
    ],
    "id": "fa13e164104b419f82179aeed15b6117",
    "predicate mapping": [
      {
        "label": "star",
        "uri": "http://dbpedia.org/property/starring",
        "seq": "66,69",
        "mappedBy": "manual corrections"
      },
      {
        "label": "producer",
        "uri": "http://dbpedia.org/property/producer",
        "seq": "10,17",
        "mappedBy": "manual corrections"
      },
      {
        "label": "movies",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "26,31",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "What can be cooked out of things belonging to the order Sapindales?",
    "SerialNumber": "88",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/order\u003e \u003chttp://dbpedia.org/resource/Sapindales\u003e . ?uri \u003chttp://dbpedia.org/ontology/ingredient\u003e ?x  . }",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Sapindales",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Sapindales",
        "seq": "56,66"
      }
    ],
    "id": "8bdd1143f4044694980167f57d2f1ebd",
    "predicate mapping": [
      {
        "label": "order",
        "uri": "http://dbpedia.org/ontology/order",
        "seq": "50,54",
        "mappedBy": "manual corrections"
      },
      {
        "label": "things",
        "uri": "http://dbpedia.org/ontology/ingredient",
        "seq": "26,31",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "406",
    "question": "How many  TV shows were made by someone who was associated with Lewis Hamilton?",
    "SerialNumber": "89",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/associatedBand\u003e \u003chttp://dbpedia.org/resource/Lewis_Hamilton\u003e . ?uri \u003chttp://dbpedia.org/property/creator\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Lewis Hamilton",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Lewis_Hamilton",
        "seq": "64,78"
      }
    ],
    "id": "938bb65e3ede442c84c63fc27fb7b4ea",
    "predicate mapping": [
      {
        "label": "associated",
        "uri": "http://dbpedia.org/ontology/associatedBand",
        "seq": "48,57",
        "mappedBy": "manual corrections"
      },
      {
        "label": "made",
        "uri": "http://dbpedia.org/property/creator",
        "seq": "24,27",
        "mappedBy": "manual corrections"
      },
      {
        "label": "TV shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "10,17",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What is the city whose mayor is Giorgos Kaminis?",
    "SerialNumber": "90",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/mayor\u003e \u003chttp://dbpedia.org/resource/Giorgos_Kaminis\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/AdministrativeRegion\u003e}",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Giorgos Kaminis",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Giorgos_Kaminis",
        "seq": "32,47"
      }
    ],
    "id": "fb471cb9a15f4e8a84b6741cf2b2850c",
    "predicate mapping": [
      {
        "label": "mayor",
        "uri": "http://dbpedia.org/property/mayor",
        "seq": "23,27",
        "mappedBy": "manual corrections"
      },
      {
        "label": "city",
        "uri": "http://dbpedia.org/ontology/AdministrativeRegion",
        "seq": "12,15",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the alma mater of Michael hahn ?",
    "SerialNumber": "91",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Michael_Hahn\u003e \u003chttp://dbpedia.org/ontology/almaMater\u003e ?uri } ",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Michael hahn",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Michael_Hahn",
        "seq": "23,35"
      }
    ],
    "id": "d87c7466bde24cb3a5fcc03dc0c210fe",
    "predicate mapping": [
      {
        "label": "mater alma",
        "uri": "http://dbpedia.org/ontology/almaMater",
        "seq": "9,18",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "405",
    "question": "How many party leaders are there whose parties are headquartered in Berlin?",
    "SerialNumber": "92",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/headquarter\u003e \u003chttp://dbpedia.org/resource/Berlin\u003e . ?x \u003chttp://dbpedia.org/ontology/leader\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Politician\u003e}",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Berlin",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Berlin",
        "seq": "68,74"
      }
    ],
    "id": "7c654505500d49bd835cc07799940fb1",
    "predicate mapping": [
      {
        "label": "headquartered",
        "uri": "http://dbpedia.org/ontology/headquarter",
        "seq": "51,63",
        "mappedBy": "manual corrections"
      },
      {
        "label": "leaders",
        "uri": "http://dbpedia.org/ontology/leader",
        "seq": "15,21",
        "mappedBy": "manual corrections"
      },
      {
        "label": "party leaders",
        "uri": "http://dbpedia.org/ontology/Politician",
        "seq": "9,21",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "How many total religions are followed by people whose hometown is somewhere in India?",
    "SerialNumber": "93",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/hometown\u003e \u003chttp://dbpedia.org/resource/India\u003e . ?x \u003chttp://dbpedia.org/property/religion\u003e ?uri  . }",
    "checked": "true",
    "entity mapping": [
      {
        "label": "India",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/India",
        "seq": "79,84"
      }
    ],
    "id": "556d585ed3d04cff978e0f6c86b73d8d",
    "predicate mapping": [
      {
        "label": "hometown",
        "uri": "http://dbpedia.org/ontology/hometown",
        "seq": "54,61",
        "mappedBy": "manual corrections"
      },
      {
        "label": "religions",
        "uri": "http://dbpedia.org/property/religion",
        "seq": "15,23",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who are the cast members of The Simpsons Ride?",
    "SerialNumber": "94",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/The_Simpsons_Ride\u003e \u003chttp://dbpedia.org/property/starring\u003e ?uri } ",
    "checked": "true",
    "entity mapping": [
      {
        "label": "The Simpsons Ride",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/The_Simpsons_Ride",
        "seq": "28,45"
      }
    ],
    "id": "1df652b299e84ef4a467b353d91a9eff",
    "predicate mapping": [
      {
        "label": "cast members",
        "uri": "http://dbpedia.org/property/starring",
        "seq": "12,23",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Which american football team  has stadium as O.co Coliseum?",
    "SerialNumber": "95",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/locationCity\u003e \u003chttp://dbpedia.org/resource/O.co_Coliseum\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/AmericanFootballTeam\u003e}",
    "checked": "true",
    "entity mapping": [
      {
        "label": "O.co Coliseum",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/O.co_Coliseum",
        "seq": "45,58"
      }
    ],
    "id": "ebbd40c6a3ad4a8697e03dc804ff0b4f",
    "predicate mapping": [
      {
        "label": "Which",
        "uri": "http://dbpedia.org/ontology/locationCity",
        "seq": "0,4",
        "mappedBy": "manual corrections"
      },
      {
        "label": "american football team",
        "uri": "http://dbpedia.org/ontology/AmericanFootballTeam",
        "seq": "6,27",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "List the products of Playboy Enterprises?",
    "SerialNumber": "97",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Playboy_Enterprises\u003e \u003chttp://dbpedia.org/property/products\u003e ?uri } ",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Playboy Enterprises",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Playboy_Enterprises",
        "seq": "21,40"
      }
    ],
    "id": "5e3b1b3d67c14e79a69346483e72f30e",
    "predicate mapping": [
      {
        "label": "products",
        "uri": "http://dbpedia.org/property/products",
        "seq": "9,16",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Did Gwo Ka originate in Western Africa?",
    "SerialNumber": "98",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Gwo_ka\u003e \u003chttp://dbpedia.org/property/stylisticOrigins\u003e \u003chttp://dbpedia.org/resource/West_Africa\u003e }",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Gwo Ka",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Gwo_ka",
        "seq": "4,10"
      },
      {
        "label": "Western Africa",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/West_Africa",
        "seq": "24,38"
      }
    ],
    "id": "0e1747e68f354dd482d80063d88e8466",
    "predicate mapping": [
      {
        "label": "originate",
        "uri": "http://dbpedia.org/property/stylisticOrigins",
        "seq": "11,19",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What are some artists on the show whose opening theme is Send It On?",
    "SerialNumber": "99",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/openingTheme\u003e \u003chttp://dbpedia.org/resource/Send_It_On_(Disney\u0027s_Friends_for_Change_song)\u003e . ?x \u003chttp://dbpedia.org/property/artist\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Send It On",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Send_It_On_(Disney\u0027s_Friends_for_Change_song)",
        "seq": "57,67"
      }
    ],
    "id": "7a11e9f4385d422fb3bd4fd737dbb307",
    "predicate mapping": [
      {
        "label": "opening theme",
        "uri": "http://dbpedia.org/ontology/openingTheme",
        "seq": "40,52",
        "mappedBy": "manual corrections"
      },
      {
        "label": "artists",
        "uri": "http://dbpedia.org/property/artist",
        "seq": "14,20",
        "mappedBy": "manual corrections"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "29,32",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which company has a product named Visual Studio and One Drive as service ?",
    "SerialNumber": "100",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/services\u003e \u003chttp://dbpedia.org/resource/OneDrive\u003e . ?uri \u003chttp://dbpedia.org/property/products\u003e \u003chttp://dbpedia.org/resource/Microsoft_Visual_Studio\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Company\u003e}",
    "checked": "true",
    "entity mapping": [
      {
        "label": "One Drive",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/OneDrive",
        "seq": "52,61"
      },
      {
        "label": "Visual Studio",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Microsoft_Visual_Studio",
        "seq": "34,47"
      }
    ],
    "id": "487fb2a215ba44abb1cd73b0c0c37fda",
    "predicate mapping": [
      {
        "label": "service",
        "uri": "http://dbpedia.org/property/services",
        "seq": "65,71",
        "mappedBy": "manual corrections"
      },
      {
        "label": "product",
        "uri": "http://dbpedia.org/property/products",
        "seq": "20,26",
        "mappedBy": "manual corrections"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company",
        "seq": "6,12",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "111",
    "question": "Give me the total number of commander of the military conflicts whose commander is Roundhead (Wyandot).",
    "SerialNumber": "101",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/commander\u003e \u003chttp://dbpedia.org/resource/Roundhead_(Wyandot)\u003e . ?x \u003chttp://dbpedia.org/ontology/commander\u003e ?uri }",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Roundhead",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Roundhead_(Wyandot)",
        "seq": "83,92"
      }
    ],
    "id": "449ad6621b0e4991bd93d146a64becab",
    "predicate mapping": [
      {
        "label": "commander",
        "uri": "http://dbpedia.org/property/commander",
        "seq": "28,36",
        "mappedBy": "manual corrections"
      },
      {
        "label": "commander",
        "uri": "http://dbpedia.org/ontology/commander",
        "seq": "28,36",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "Who is the player who plays for the team that has the Michigan Stadium?",
    "SerialNumber": "102",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/stadium\u003e \u003chttp://dbpedia.org/resource/Michigan_Stadium\u003e . ?uri \u003chttp://dbpedia.org/property/currentteam\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Athlete\u003e}",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Michigan Stadium",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Michigan_Stadium",
        "seq": "54,70"
      }
    ],
    "id": "cff039a6ae4f4238b311e705c5b4614b",
    "predicate mapping": [
      {
        "label": "stadium",
        "uri": "http://dbpedia.org/property/stadium",
        "seq": "63,69",
        "mappedBy": "manual corrections"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/property/currentteam",
        "seq": "36,39",
        "mappedBy": "manual corrections"
      },
      {
        "label": "player",
        "uri": "http://dbpedia.org/ontology/Athlete",
        "seq": "11,16",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Which country\u0027s leader is David Johnston?",
    "SerialNumber": "103",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/leader\u003e \u003chttp://dbpedia.org/resource/David_Johnston\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Country\u003e}",
    "checked": "true",
    "entity mapping": [
      {
        "label": "David Johnston",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/David_Johnston",
        "seq": "26,40"
      }
    ],
    "id": "8bb7bae6734a4a6492c283e11e8db101",
    "predicate mapping": [
      {
        "label": "leader",
        "uri": "http://dbpedia.org/ontology/leader",
        "seq": "16,21",
        "mappedBy": "manual corrections"
      },
      {
        "label": "country\u0027s",
        "uri": "http://dbpedia.org/ontology/Country",
        "seq": "6,14",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "403",
    "question": "How many factions have fought in wars where Francois Marie Le Marchand de Lignery was involved?",
    "SerialNumber": "104",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { \u003chttp://dbpedia.org/resource/François-Marie_Le_Marchand_de_Lignery\u003e \u003chttp://dbpedia.org/ontology/battle\u003e ?x . ?x \u003chttp://dbpedia.org/property/combatant\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MilitaryConflict\u003e}",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Francois Marie Le Marchand de Lignery",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/François-Marie_Le_Marchand_de_Lignery",
        "seq": "44,81"
      }
    ],
    "id": "22220c46c35d4bf18d79a51b59159884",
    "predicate mapping": [
      {
        "label": "fought",
        "uri": "http://dbpedia.org/ontology/battle",
        "seq": "23,28",
        "mappedBy": "manual corrections"
      },
      {
        "label": "wars",
        "uri": "http://dbpedia.org/property/combatant",
        "seq": "33,36",
        "mappedBy": "manual corrections"
      },
      {
        "label": "marchand",
        "uri": "http://dbpedia.org/ontology/MilitaryConflict",
        "seq": "62,69",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "Who is the leader of the town where the Myntdu river originates?",
    "SerialNumber": "105",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Myntdu_River\u003e \u003chttp://dbpedia.org/ontology/origin\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/leaderName\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Town\u003e}",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Myntdu river",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Myntdu_River",
        "seq": "40,52"
      }
    ],
    "id": "fb9fef1a345e41a8a89924438d199ab6",
    "predicate mapping": [
      {
        "label": "originates",
        "uri": "http://dbpedia.org/ontology/origin",
        "seq": "53,62",
        "mappedBy": "manual corrections"
      },
      {
        "label": "leader",
        "uri": "http://dbpedia.org/ontology/leaderName",
        "seq": "11,16",
        "mappedBy": "manual corrections"
      },
      {
        "label": "town",
        "uri": "http://dbpedia.org/ontology/Town",
        "seq": "25,28",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "List the movies whose editors are born in London.",
    "SerialNumber": "106",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/placeOfBirth\u003e \u003chttp://dbpedia.org/resource/London\u003e . ?uri \u003chttp://dbpedia.org/ontology/editing\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "true",
    "entity mapping": [
      {
        "label": "London",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/London",
        "seq": "42,48"
      }
    ],
    "id": "f6f6f72678964b8d94d2af776d9f76bb",
    "predicate mapping": [
      {
        "label": "born",
        "uri": "http://dbpedia.org/property/placeOfBirth",
        "seq": "34,37",
        "mappedBy": "manual corrections"
      },
      {
        "label": "editors",
        "uri": "http://dbpedia.org/ontology/editing",
        "seq": "22,28",
        "mappedBy": "manual corrections"
      },
      {
        "label": "movies",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "9,14",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the incumbent of the Al Gore presidential campaign, 2000 and also the president of the Ann Lewis ?",
    "SerialNumber": "107",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Al_Gore_presidential_campaign,_2000\u003e \u003chttp://dbpedia.org/ontology/incumbent\u003e ?uri. \u003chttp://dbpedia.org/resource/Ann_Lewis\u003e \u003chttp://dbpedia.org/ontology/president\u003e ?uri} ",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Al Gore presidential campaign, 2000",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Al_Gore_presidential_campaign,_2000",
        "seq": "29,64"
      },
      {
        "label": "Ann Lewis",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Ann_Lewis",
        "seq": "95,104"
      }
    ],
    "id": "413efd91c7ba4afcbd998432bd8c5531",
    "predicate mapping": [
      {
        "label": "incumbent",
        "uri": "http://dbpedia.org/ontology/incumbent",
        "seq": "12,20",
        "mappedBy": "manual corrections"
      },
      {
        "label": "president",
        "uri": "http://dbpedia.org/ontology/president",
        "seq": "37,45",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "Which royal person married the successor of Darius I?",
    "SerialNumber": "108",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/predecessor\u003e \u003chttp://dbpedia.org/resource/Darius_I\u003e . ?uri \u003chttp://dbpedia.org/property/spouse\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Royalty\u003e}",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Darius I",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Darius_I",
        "seq": "44,52"
      }
    ],
    "id": "f20340cfdedd4821a148e2baf7bbc531",
    "predicate mapping": [
      {
        "label": "successor",
        "uri": "http://dbpedia.org/property/predecessor",
        "seq": "31,39",
        "mappedBy": "manual corrections"
      },
      {
        "label": "married",
        "uri": "http://dbpedia.org/property/spouse",
        "seq": "19,25",
        "mappedBy": "manual corrections"
      },
      {
        "label": "royal person",
        "uri": "http://dbpedia.org/ontology/Royalty",
        "seq": "6,17",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the region of the Kim Sawchuk which is also served by the Airtours International Airways ?",
    "SerialNumber": "109",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Kim_Sawchuk\u003e \u003chttp://dbpedia.org/property/region\u003e ?uri. \u003chttp://dbpedia.org/resource/Airtours_International_Airways\u003e \u003chttp://dbpedia.org/property/destinations\u003e ?uri} ",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Kim Sawchuk",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Kim_Sawchuk",
        "seq": "26,37"
      },
      {
        "label": "Airtours International Airways",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Airtours_International_Airways",
        "seq": "66,96"
      }
    ],
    "id": "553a9cedaec54b4f8160ba21fec81957",
    "predicate mapping": [
      {
        "label": "region",
        "uri": "http://dbpedia.org/property/region",
        "seq": "12,17",
        "mappedBy": "manual corrections"
      },
      {
        "label": "served by",
        "uri": "http://dbpedia.org/property/destinations",
        "seq": "52,60",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Where was Antonio Giannini born?",
    "SerialNumber": "110",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Antonio_Giannini\u003e \u003chttp://dbpedia.org/ontology/birthPlace\u003e ?uri } ",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Antonio Giannini",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Antonio_Giannini",
        "seq": "10,26"
      }
    ],
    "id": "30e7fe4d37d4480d8bcd9e85057504ab",
    "predicate mapping": [
      {
        "label": "born",
        "uri": "http://dbpedia.org/ontology/birthPlace",
        "seq": "27,30",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Where was David Scherman trained ?",
    "SerialNumber": "111",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/David_Scherman\u003e \u003chttp://dbpedia.org/ontology/training\u003e ?uri } ",
    "checked": "true",
    "entity mapping": [
      {
        "label": "David Scherman",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/David_Scherman",
        "seq": "10,24"
      }
    ],
    "id": "b1eb16707621406e83de3269573e6703",
    "predicate mapping": [
      {
        "label": "trained",
        "uri": "http://dbpedia.org/ontology/training",
        "seq": "25,31",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "307",
    "question": "Which company offer service of Outlook.com and OneDrive?",
    "SerialNumber": "112",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/property/services\u003e \u003chttp://dbpedia.org/resource/Outlook.com\u003e . ?uri \u003chttp://dbpedia.org/property/services\u003e \u003chttp://dbpedia.org/resource/OneDrive\u003e . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Company\u003e}",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Outlook.com",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Outlook.com",
        "seq": "31,42"
      },
      {
        "label": "OneDrive",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/OneDrive",
        "seq": "47,55"
      }
    ],
    "id": "53e6885f679049b3912f392f6b6d80c3",
    "predicate mapping": [
      {
        "label": "service",
        "uri": "http://dbpedia.org/property/services",
        "seq": "20,26",
        "mappedBy": "manual corrections"
      },
      {
        "label": "service",
        "uri": "http://dbpedia.org/property/services",
        "seq": "20,26",
        "mappedBy": "manual corrections"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company",
        "seq": "6,12",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the province of Rouen Business School ?",
    "SerialNumber": "113",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Rouen_Business_School\u003e \u003chttp://dbpedia.org/property/province\u003e ?uri } ",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Rouen Business School",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Rouen_Business_School",
        "seq": "24,45"
      }
    ],
    "id": "b7ac1b81508e4f6081ad0dc4b5b009f5",
    "predicate mapping": [
      {
        "label": "province",
        "uri": "http://dbpedia.org/property/province",
        "seq": "12,19",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What religions do politicians in the Korean Minjoo Party follow?",
    "SerialNumber": "114",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/party\u003e \u003chttp://dbpedia.org/resource/Minjoo_Party_of_Korea\u003e . ?x \u003chttp://dbpedia.org/ontology/religion\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/OfficeHolder\u003e}",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Korean Minjoo Party",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Minjoo_Party_of_Korea",
        "seq": "37,56"
      }
    ],
    "id": "3b974c045b2e4beb9b59e0a8b37717cc",
    "predicate mapping": [
      {
        "label": "party",
        "uri": "http://dbpedia.org/ontology/party",
        "seq": "51,55",
        "mappedBy": "manual corrections"
      },
      {
        "label": "religions",
        "uri": "http://dbpedia.org/ontology/religion",
        "seq": "5,13",
        "mappedBy": "manual corrections"
      },
      {
        "label": "politicians",
        "uri": "http://dbpedia.org/ontology/OfficeHolder",
        "seq": "18,28",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "111",
    "question": "Give me the total number of employer of the engineers whose one of the employer is McDonnell Aircraft ?",
    "SerialNumber": "115",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/employer\u003e \u003chttp://dbpedia.org/resource/McDonnell_Aircraft\u003e . ?x \u003chttp://dbpedia.org/ontology/employer\u003e ?uri }",
    "checked": "true",
    "entity mapping": [
      {
        "label": "McDonnell Aircraft",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/McDonnell_Aircraft",
        "seq": "83,101"
      }
    ],
    "id": "6c1e8f0fd26d46a99e74e077585e78c5",
    "predicate mapping": [
      {
        "label": "employer",
        "uri": "http://dbpedia.org/ontology/employer",
        "seq": "28,35",
        "mappedBy": "manual corrections"
      },
      {
        "label": "employer",
        "uri": "http://dbpedia.org/ontology/employer",
        "seq": "28,35",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What were the major actions taken by the politicians living in Gales Ferry, Connecticut?",
    "SerialNumber": "116",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/residence\u003e \u003chttp://dbpedia.org/resource/Gales_Ferry,_Connecticut\u003e . ?x \u003chttp://dbpedia.org/ontology/battle\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Politician\u003e}",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Gales Ferry, Connecticut",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Gales_Ferry,_Connecticut",
        "seq": "63,87"
      }
    ],
    "id": "120b4c5d72884ab7bed686704a78e112",
    "predicate mapping": [
      {
        "label": "living in",
        "uri": "http://dbpedia.org/ontology/residence",
        "seq": "53,61",
        "mappedBy": "manual corrections"
      },
      {
        "label": "@@@",
        "uri": "http://dbpedia.org/ontology/battle",
        "seq": "-1,-1",
        "mappedBy": "manual corrections"
      },
      {
        "label": "politicians",
        "uri": "http://dbpedia.org/ontology/Politician",
        "seq": "41,51",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Where was Live in Detroit, MI recorded ?",
    "SerialNumber": "117",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Live_in_Detroit,_MI\u003e \u003chttp://dbpedia.org/ontology/recordedIn\u003e ?uri } ",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Live in Detroit, MI",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Live_in_Detroit,_MI",
        "seq": "10,29"
      }
    ],
    "id": "e9800af29b274e64b6e1d8fe78b11a40",
    "predicate mapping": [
      {
        "label": "recorded",
        "uri": "http://dbpedia.org/ontology/recordedIn",
        "seq": "30,37",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "who all have been a manager of english under twenty one football team?",
    "SerialNumber": "118",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/managerclubs\u003e \u003chttp://dbpedia.org/resource/England_national_under-21_football_team\u003e } ",
    "checked": "true",
    "entity mapping": [
      {
        "label": "twenty one football team",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/England_national_under-21_football_team",
        "seq": "45,55"
      }
    ],
    "id": "5c2a0fdd797b4369b317ef7541f9dc35",
    "predicate mapping": [
      {
        "label": "manager",
        "uri": "http://dbpedia.org/property/managerclubs",
        "seq": "20,26",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the sea with Helsinki as one of the shore city and is also an outflow for Danish straits?",
    "SerialNumber": "119",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/cities\u003e \u003chttp://dbpedia.org/resource/Helsinki\u003e . ?uri \u003chttp://dbpedia.org/property/outflow\u003e \u003chttp://dbpedia.org/resource/Danish_straits\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Sea\u003e}",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Helsinki",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Helsinki",
        "seq": "18,26"
      },
      {
        "label": "Danish straits",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Danish_straits",
        "seq": "79,93"
      }
    ],
    "id": "e3f84d4ea2bf4837a4250a5cce509c30",
    "predicate mapping": [
      {
        "label": "city",
        "uri": "http://dbpedia.org/property/cities",
        "seq": "47,50",
        "mappedBy": "manual corrections"
      },
      {
        "label": "outflow",
        "uri": "http://dbpedia.org/property/outflow",
        "seq": "67,73",
        "mappedBy": "manual corrections"
      },
      {
        "label": "sea",
        "uri": "http://dbpedia.org/ontology/Sea",
        "seq": "9,11",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What awards have been won by the executive producer of Timmy Time ?",
    "SerialNumber": "120",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Timmy_Time\u003e \u003chttp://dbpedia.org/ontology/executiveProducer\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/award\u003e ?uri  . }",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Timmy Time",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Timmy_Time",
        "seq": "55,65"
      }
    ],
    "id": "357edf2393e94d8c9218db99a838a080",
    "predicate mapping": [
      {
        "label": "executive producer",
        "uri": "http://dbpedia.org/ontology/executiveProducer",
        "seq": "33,50",
        "mappedBy": "manual corrections"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/award",
        "seq": "5,10",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the district of Fort Heath radar station ?",
    "SerialNumber": "121",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Fort_Heath_radar_station\u003e \u003chttp://dbpedia.org/property/district\u003e ?uri } ",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Fort Heath radar station",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Fort_Heath_radar_station",
        "seq": "24,48"
      }
    ],
    "id": "37a0e0437d3549d1ab607f3bcc29d49b",
    "predicate mapping": [
      {
        "label": "district",
        "uri": "http://dbpedia.org/property/district",
        "seq": "12,19",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "What is the common nickname given both to Harding academy and Lyons township high school?",
    "SerialNumber": "122",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Harding_Academy_(Memphis)\u003e \u003chttp://dbpedia.org/property/nickname\u003e ?uri. \u003chttp://dbpedia.org/resource/Lyons_Township_High_School\u003e \u003chttp://dbpedia.org/property/nickname\u003e ?uri . }",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Harding academy",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Harding_Academy_(Memphis)",
        "seq": "42,57"
      },
      {
        "label": "Lyons township high school",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Lyons_Township_High_School",
        "seq": "62,88"
      }
    ],
    "id": "d704a94fd1fb40aa80e96962ef8ad7f2",
    "predicate mapping": [
      {
        "label": "nickname",
        "uri": "http://dbpedia.org/property/nickname",
        "seq": "19,26",
        "mappedBy": "manual corrections"
      },
      {
        "label": "nickname",
        "uri": "http://dbpedia.org/property/nickname",
        "seq": "19,26",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "106",
    "question": "Count all those who\u0027ve played for the youth club which owns the Rosario, Santa Fe stadium.",
    "SerialNumber": "123",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/ground\u003e \u003chttp://dbpedia.org/resource/Rosario,_Santa_Fe\u003e . ?uri \u003chttp://dbpedia.org/property/youthclubs\u003e ?x  . }",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Rosario, Santa Fe",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Rosario,_Santa_Fe",
        "seq": "64,81"
      }
    ],
    "id": "3ca24dd2487c4192af7eabf87b4a30f5",
    "predicate mapping": [
      {
        "label": "stadium",
        "uri": "http://dbpedia.org/property/ground",
        "seq": "82,88",
        "mappedBy": "manual corrections"
      },
      {
        "label": "youth club",
        "uri": "http://dbpedia.org/property/youthclubs",
        "seq": "38,47",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What are some families of mammals in the animal kingdom?",
    "SerialNumber": "124",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/kingdom\u003e \u003chttp://dbpedia.org/resource/Animal\u003e . ?x \u003chttp://dbpedia.org/ontology/family\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Mammal\u003e}",
    "checked": "true",
    "entity mapping": [
      {
        "label": "animal",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Animal",
        "seq": "41,47"
      }
    ],
    "id": "4ee83040646043bab75bab4d3b19e105",
    "predicate mapping": [
      {
        "label": "kingdom",
        "uri": "http://dbpedia.org/ontology/kingdom",
        "seq": "48,54",
        "mappedBy": "manual corrections"
      },
      {
        "label": "families",
        "uri": "http://dbpedia.org/ontology/family",
        "seq": "14,21",
        "mappedBy": "manual corrections"
      },
      {
        "label": "mammals",
        "uri": "http://dbpedia.org/ontology/Mammal",
        "seq": "26,32",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the profession of the Chris Myers (New Jersey) which is the governing body of Oahu Railway and Land Company ?",
    "SerialNumber": "125",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Chris_Myers_(New_Jersey)\u003e \u003chttp://dbpedia.org/ontology/profession\u003e ?uri. \u003chttp://dbpedia.org/resource/Oahu_Railway_and_Land_Company\u003e \u003chttp://dbpedia.org/property/governingBody\u003e ?uri} ",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Chris Myers (New Jersey)",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Chris_Myers_(New_Jersey)",
        "seq": "30,54"
      },
      {
        "label": "Oahu Railway and Land Company",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Oahu_Railway_and_Land_Company",
        "seq": "86,115"
      }
    ],
    "id": "1dd15e0e5e684a168e1ded727d0942ed",
    "predicate mapping": [
      {
        "label": "profession",
        "uri": "http://dbpedia.org/ontology/profession",
        "seq": "12,21",
        "mappedBy": "manual corrections"
      },
      {
        "label": "governing body",
        "uri": "http://dbpedia.org/property/governingBody",
        "seq": "68,81",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "Count all the different purposes followed by the different NGOs.",
    "SerialNumber": "126",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/type\u003e \u003chttp://dbpedia.org/resource/Non-governmental_organization\u003e . ?x \u003chttp://dbpedia.org/property/purpose\u003e ?uri  . }",
    "checked": "true",
    "entity mapping": [
      {
        "label": "NGOs",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Non-governmental_organization",
        "seq": "59,63"
      }
    ],
    "id": "9633e3f24eb54f34b01ee6d1c08f943b",
    "predicate mapping": [
      {
        "label": "Count",
        "uri": "http://dbpedia.org/property/type",
        "seq": "0,4",
        "mappedBy": "manual corrections"
      },
      {
        "label": "purposes",
        "uri": "http://dbpedia.org/property/purpose",
        "seq": "24,31",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which television show\u0027s developer is Brian Graden and voices to the character is by Isaac Hayes?",
    "SerialNumber": "127",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/developer\u003e \u003chttp://dbpedia.org/resource/Brian_Graden\u003e . ?uri \u003chttp://dbpedia.org/property/voices\u003e \u003chttp://dbpedia.org/resource/Isaac_Hayes\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Brian Graden",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Brian_Graden",
        "seq": "37,49"
      },
      {
        "label": "Isaac Hayes",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Isaac_Hayes",
        "seq": "84,95"
      }
    ],
    "id": "0e1f9caa3e1941c08f8685a375af037d",
    "predicate mapping": [
      {
        "label": "developer",
        "uri": "http://dbpedia.org/property/developer",
        "seq": "24,32",
        "mappedBy": "manual corrections"
      },
      {
        "label": "voices",
        "uri": "http://dbpedia.org/property/voices",
        "seq": "54,59",
        "mappedBy": "manual corrections"
      },
      {
        "label": "television show\u0027s",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "6,22",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Did Steve Sampson manage a club of Santa Clara university",
    "SerialNumber": "129",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Steve_Sampson\u003e \u003chttp://dbpedia.org/ontology/managerClub\u003e \u003chttp://dbpedia.org/resource/Santa_Clara_University\u003e }",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Steve Sampson",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Steve_Sampson",
        "seq": "4,17"
      },
      {
        "label": "Santa Clara university",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Santa_Clara_University",
        "seq": "35,57"
      }
    ],
    "id": "6e5ca1c3866c4d40803a16e1119672a6",
    "predicate mapping": [
      {
        "label": "manage a club",
        "uri": "http://dbpedia.org/ontology/managerClub",
        "seq": "18,30",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What newspapers\u0027s owners is Schibsted",
    "SerialNumber": "130",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/owners\u003e \u003chttp://dbpedia.org/resource/Schibsted\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Newspaper\u003e}",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Schibsted",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Schibsted",
        "seq": "28,37"
      }
    ],
    "id": "60a97365c85d48f790174e2e468ec6e0",
    "predicate mapping": [
      {
        "label": "owners",
        "uri": "http://dbpedia.org/property/owners",
        "seq": "18,23",
        "mappedBy": "manual corrections"
      },
      {
        "label": "newspapers\u0027s",
        "uri": "http://dbpedia.org/ontology/Newspaper",
        "seq": "5,16",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which arena of WPC Dynamo Moscow is death location of Tigran Petrosian \u003e",
    "SerialNumber": "131",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/WPC_Dynamo_Moscow\u003e \u003chttp://dbpedia.org/property/arena\u003e ?uri. \u003chttp://dbpedia.org/resource/Tigran_Petrosian\u003e \u003chttp://dbpedia.org/ontology/deathPlace\u003e ?uri} ",
    "checked": "true",
    "entity mapping": [
      {
        "label": "WPC Dynamo Moscow",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/WPC_Dynamo_Moscow",
        "seq": "15,32"
      },
      {
        "label": "Tigran Petrosian",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Tigran_Petrosian",
        "seq": "54,70"
      }
    ],
    "id": "eef1fbca5e44495eb158ddc399496b52",
    "predicate mapping": [
      {
        "label": "arena",
        "uri": "http://dbpedia.org/property/arena",
        "seq": "6,10",
        "mappedBy": "manual corrections"
      },
      {
        "label": "death location",
        "uri": "http://dbpedia.org/ontology/deathPlace",
        "seq": "36,49",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "List the name of the soccer clubs whose chairman is Joan Laporta.",
    "SerialNumber": "132",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/chairman\u003e \u003chttp://dbpedia.org/resource/Joan_Laporta\u003e . ?x \u003chttp://dbpedia.org/property/name\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/SoccerClub\u003e}",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Joan Laporta",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Joan_Laporta",
        "seq": "52,64"
      }
    ],
    "id": "b7d34b18a1a7492986c025ca171504e3",
    "predicate mapping": [
      {
        "label": "chairman",
        "uri": "http://dbpedia.org/ontology/chairman",
        "seq": "40,47",
        "mappedBy": "manual corrections"
      },
      {
        "label": "name",
        "uri": "http://dbpedia.org/property/name",
        "seq": "9,12",
        "mappedBy": "manual corrections"
      },
      {
        "label": "soccer clubs",
        "uri": "http://dbpedia.org/ontology/SoccerClub",
        "seq": "21,32",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "311",
    "question": "List all the layouts of the automobile whose one of the layout is four-wheel-drive layout ?",
    "SerialNumber": "133",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/layout\u003e \u003chttp://dbpedia.org/resource/Front-engine,_four-wheel-drive_layout\u003e . ?x \u003chttp://dbpedia.org/ontology/layout\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Automobile\u003e}",
    "checked": "true",
    "entity mapping": [
      {
        "label": "four-wheel-drive layout",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Front-engine,_four-wheel-drive_layout",
        "seq": "45,48"
      }
    ],
    "id": "8a436b4d6a9c4452a7cdb52c1a8fb54e",
    "predicate mapping": [
      {
        "label": "layout",
        "uri": "http://dbpedia.org/ontology/layout",
        "seq": "13,18",
        "mappedBy": "manual corrections"
      },
      {
        "label": "layout",
        "uri": "http://dbpedia.org/ontology/layout",
        "seq": "56,61",
        "mappedBy": "manual corrections"
      },
      {
        "label": "automobile",
        "uri": "http://dbpedia.org/ontology/Automobile",
        "seq": "28,37",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "In which time zone is Pong Pha?",
    "SerialNumber": "134",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Pong_Pha\u003e \u003chttp://dbpedia.org/ontology/timeZone\u003e ?uri } ",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Pong Pha",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Pong_Pha",
        "seq": "22,30"
      }
    ],
    "id": "d1e59f4659f1447daf1f03518db7111e",
    "predicate mapping": [
      {
        "label": "zone time",
        "uri": "http://dbpedia.org/ontology/timeZone",
        "seq": "9,17",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "What is the alma mater of the Angela Trusty and Charles Ayres?",
    "SerialNumber": "135",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Angela_Trusty\u003e \u003chttp://dbpedia.org/ontology/almaMater\u003e ?uri. \u003chttp://dbpedia.org/resource/Charles_Ayres\u003e \u003chttp://dbpedia.org/ontology/almaMater\u003e ?uri . }",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Angela Trusty",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Angela_Trusty",
        "seq": "30,43"
      },
      {
        "label": "Charles Ayres",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Charles_Ayres",
        "seq": "48,61"
      }
    ],
    "id": "36826b2b0cc1469b91526bbfeeaa3d35",
    "predicate mapping": [
      {
        "label": "mater alma",
        "uri": "http://dbpedia.org/ontology/almaMater",
        "seq": "12,21",
        "mappedBy": "manual corrections"
      },
      {
        "label": "mater alma",
        "uri": "http://dbpedia.org/ontology/almaMater",
        "seq": "12,21",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which band had the members of The Conglomerate, and has made \u0027Before I let you go\u0027?",
    "SerialNumber": "136",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/The_Conglomerate_(American_group)\u003e \u003chttp://dbpedia.org/property/pastMembers\u003e ?uri. \u003chttp://dbpedia.org/resource/Before_I_Let_You_Go\u003e \u003chttp://dbpedia.org/ontology/musicalArtist\u003e ?uri} ",
    "checked": "true",
    "entity mapping": [
      {
        "label": "The Conglomerate",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Conglomerate_(American_group)",
        "seq": "30,46"
      },
      {
        "label": "Before I let you go",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Before_I_Let_You_Go",
        "seq": "62,81"
      }
    ],
    "id": "c6f59ba390834c9cb144952a1bedf699",
    "predicate mapping": [
      {
        "label": "members",
        "uri": "http://dbpedia.org/property/pastMembers",
        "seq": "19,25",
        "mappedBy": "manual corrections"
      },
      {
        "label": "band",
        "uri": "http://dbpedia.org/ontology/musicalArtist",
        "seq": "6,9",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What is the birth place of the cast of Lagnacha Dhumdhadaka?",
    "SerialNumber": "137",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Lagnacha_Dhumdhadaka\u003e \u003chttp://dbpedia.org/property/starring\u003e ?x . ?x \u003chttp://dbpedia.org/property/placeOfBirth\u003e ?uri  . }",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Lagnacha Dhumdhadaka",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Lagnacha_Dhumdhadaka",
        "seq": "39,59"
      }
    ],
    "id": "74d88ff455d1442eb2c7cf52c8f6bed4",
    "predicate mapping": [
      {
        "label": "cast",
        "uri": "http://dbpedia.org/property/starring",
        "seq": "31,34",
        "mappedBy": "manual corrections"
      },
      {
        "label": "place birth",
        "uri": "http://dbpedia.org/property/placeOfBirth",
        "seq": "12,22",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "406",
    "question": "How many rivers start in an English speaking country?",
    "SerialNumber": "138",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/officialLanguage\u003e \u003chttp://dbpedia.org/resource/English_language\u003e . ?uri \u003chttp://dbpedia.org/ontology/sourceCountry\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/River\u003e}",
    "checked": "true",
    "entity mapping": [
      {
        "label": "English",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/English_language",
        "seq": "28,35"
      }
    ],
    "id": "6f88aee8549b4f49983ccc544c1cac61",
    "predicate mapping": [
      {
        "label": "speaking",
        "uri": "http://dbpedia.org/ontology/officialLanguage",
        "seq": "36,43",
        "mappedBy": "manual corrections"
      },
      {
        "label": "start",
        "uri": "http://dbpedia.org/ontology/sourceCountry",
        "seq": "16,20",
        "mappedBy": "manual corrections"
      },
      {
        "label": "rivers",
        "uri": "http://dbpedia.org/ontology/River",
        "seq": "9,14",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "What is the television show whose theme music composer\u0027s home town is El Sobrante, California?",
    "SerialNumber": "139",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/hometown\u003e \u003chttp://dbpedia.org/resource/El_Sobrante,_California\u003e . ?uri \u003chttp://dbpedia.org/property/themeMusicComposer\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "true",
    "entity mapping": [
      {
        "label": "El Sobrante, California",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/El_Sobrante,_California",
        "seq": "70,93"
      }
    ],
    "id": "175315957baa44d4803c095b646ee477",
    "predicate mapping": [
      {
        "label": "town home",
        "uri": "http://dbpedia.org/ontology/hometown",
        "seq": "57,65",
        "mappedBy": "manual corrections"
      },
      {
        "label": "composer\u0027s",
        "uri": "http://dbpedia.org/property/themeMusicComposer",
        "seq": "46,55",
        "mappedBy": "manual corrections"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "12,26",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What  is the Nickname of Daniel O\u0027Regan ?",
    "SerialNumber": "140",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Daniel_O\u0027Regan\u003e \u003chttp://dbpedia.org/property/nickname\u003e ?uri } ",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Daniel O\u0027Regan",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Daniel_O\u0027Regan",
        "seq": "25,39"
      }
    ],
    "id": "a12c261c27154991801e5701a39bdc5b",
    "predicate mapping": [
      {
        "label": "nickname",
        "uri": "http://dbpedia.org/property/nickname",
        "seq": "13,20",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "7",
    "question": "Where are Aureus and Solidus used as currency?",
    "SerialNumber": "141",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/ontology/currency\u003e \u003chttp://dbpedia.org/resource/Aureus\u003e . ?uri \u003chttp://dbpedia.org/ontology/currency\u003e \u003chttp://dbpedia.org/resource/Solidus_(coin)\u003e . }",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Aureus",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Aureus",
        "seq": "10,16"
      },
      {
        "label": "Solidus",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Solidus_(coin)",
        "seq": "21,28"
      }
    ],
    "id": "83982663a6f04e249b296b7d3bee0c46",
    "predicate mapping": [
      {
        "label": "currency",
        "uri": "http://dbpedia.org/ontology/currency",
        "seq": "37,44",
        "mappedBy": "manual corrections"
      },
      {
        "label": "currency",
        "uri": "http://dbpedia.org/ontology/currency",
        "seq": "37,44",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "Music for what was made by someone who died of a cardiovascular disease?",
    "SerialNumber": "142",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/deathCause\u003e \u003chttp://dbpedia.org/resource/Cardiovascular_disease\u003e . ?uri \u003chttp://dbpedia.org/property/music\u003e ?x  . }",
    "checked": "true",
    "entity mapping": [
      {
        "label": "cardiovascular disease",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Cardiovascular_disease",
        "seq": "49,71"
      }
    ],
    "id": "ec38c30a73c44774b95944ad398e3e8b",
    "predicate mapping": [
      {
        "label": "died of",
        "uri": "http://dbpedia.org/ontology/deathCause",
        "seq": "39,45",
        "mappedBy": "manual corrections"
      },
      {
        "label": "music",
        "uri": "http://dbpedia.org/property/music",
        "seq": "0,4",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Was Tim Gunn a guest on The Broken Code?",
    "SerialNumber": "144",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/The_Broken_Code\u003e \u003chttp://dbpedia.org/property/guests\u003e \u003chttp://dbpedia.org/resource/Tim_Gunn\u003e }",
    "checked": "true",
    "entity mapping": [
      {
        "label": "The Broken Code",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Broken_Code",
        "seq": "24,39"
      },
      {
        "label": "Tim Gunn",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Tim_Gunn",
        "seq": "4,12"
      }
    ],
    "id": "ba52d02c389e44feaf5d0a833e155c0e",
    "predicate mapping": [
      {
        "label": "guest",
        "uri": "http://dbpedia.org/property/guests",
        "seq": "15,19",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "405",
    "question": "In how many nations can I find dishes made of Shallot?",
    "SerialNumber": "145",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/ingredient\u003e \u003chttp://dbpedia.org/resource/Shallot\u003e . ?x \u003chttp://dbpedia.org/ontology/country\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Country\u003e}",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Shallot",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Shallot",
        "seq": "46,53"
      }
    ],
    "id": "0d1b4492ca3a491c916bd0ceefdde54d",
    "predicate mapping": [
      {
        "label": "find",
        "uri": "http://dbpedia.org/ontology/ingredient",
        "seq": "26,29",
        "mappedBy": "manual corrections"
      },
      {
        "label": "nations",
        "uri": "http://dbpedia.org/ontology/country",
        "seq": "12,18",
        "mappedBy": "manual corrections"
      },
      {
        "label": "nations",
        "uri": "http://dbpedia.org/ontology/Country",
        "seq": "12,18",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Who are some american football players whose high school is Oktoc, Mississippi?",
    "SerialNumber": "146",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/highSchool\u003e \u003chttp://dbpedia.org/resource/Oktoc,_Mississippi\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/AmericanFootballPlayer\u003e}",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Oktoc, Mississippi",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Oktoc,_Mississippi",
        "seq": "60,78"
      }
    ],
    "id": "6d6a489b56814dafafe173f865cf480d",
    "predicate mapping": [
      {
        "label": "school high",
        "uri": "http://dbpedia.org/property/highSchool",
        "seq": "45,55",
        "mappedBy": "manual corrections"
      },
      {
        "label": "american football players",
        "uri": "http://dbpedia.org/ontology/AmericanFootballPlayer",
        "seq": "13,37",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What system is both a platform where Nord runs and also distributed The beauty inside?",
    "SerialNumber": "147",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Nord_(video_game)\u003e \u003chttp://dbpedia.org/ontology/computingPlatform\u003e ?uri. \u003chttp://dbpedia.org/resource/The_Beauty_Inside\u003e \u003chttp://dbpedia.org/ontology/distributor\u003e ?uri . }",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Nord",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Nord_(video_game)",
        "seq": "37,41"
      },
      {
        "label": "The beauty inside",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Beauty_Inside",
        "seq": "68,85"
      }
    ],
    "id": "8b5986c0fa344ce8b5e1d878d471fe1c",
    "predicate mapping": [
      {
        "label": "platform",
        "uri": "http://dbpedia.org/ontology/computingPlatform",
        "seq": "22,29",
        "mappedBy": "manual corrections"
      },
      {
        "label": "distributed",
        "uri": "http://dbpedia.org/ontology/distributor",
        "seq": "56,66",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Is Tirana the largest city of Albania?",
    "SerialNumber": "148",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Albania\u003e \u003chttp://dbpedia.org/property/largestCity\u003e \u003chttp://dbpedia.org/resource/Tirana\u003e }",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Albania",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Albania",
        "seq": "30,37"
      },
      {
        "label": "Tirana",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Tirana",
        "seq": "3,9"
      }
    ],
    "id": "622f827a327f450d9f7674c67abce591",
    "predicate mapping": [
      {
        "label": "largest city",
        "uri": "http://dbpedia.org/property/largestCity",
        "seq": "14,25",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "Who were all the people in office when bob hawke was the PM?",
    "SerialNumber": "150",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/primeMinister\u003e \u003chttp://dbpedia.org/resource/Bob_Hawke\u003e } ",
    "checked": "true",
    "entity mapping": [
      {
        "label": "bob hawke",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Bob_Hawke",
        "seq": "39,48"
      }
    ],
    "id": "98df0f1a194d4bb1861607e4d2a1477a",
    "predicate mapping": [
      {
        "label": "PM",
        "uri": "http://dbpedia.org/ontology/primeMinister",
        "seq": "57,58",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "Name some shows whose company is owned by the CBS Corporation?",
    "SerialNumber": "151",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/owner\u003e \u003chttp://dbpedia.org/resource/CBS_Corporation\u003e . ?uri \u003chttp://dbpedia.org/property/company\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "true",
    "entity mapping": [
      {
        "label": "CBS Corporation",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/CBS_Corporation",
        "seq": "46,61"
      }
    ],
    "id": "129e928aa6144eaba586e4379ae9f973",
    "predicate mapping": [
      {
        "label": "owned",
        "uri": "http://dbpedia.org/ontology/owner",
        "seq": "33,37",
        "mappedBy": "manual corrections"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/property/company",
        "seq": "22,28",
        "mappedBy": "manual corrections"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "10,14",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Which sports are played at institues in Taguig?",
    "SerialNumber": "152",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/city\u003e \u003chttp://dbpedia.org/resource/Taguig\u003e . ?x \u003chttp://dbpedia.org/ontology/sport\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/EducationalInstitution\u003e}",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Taguig",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Taguig",
        "seq": "40,46"
      }
    ],
    "id": "38c688a1da544a7fb79c1a239732903f",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/city",
        "seq": "27,28",
        "mappedBy": "manual corrections"
      },
      {
        "label": "sports",
        "uri": "http://dbpedia.org/ontology/sport",
        "seq": "6,11",
        "mappedBy": "manual corrections"
      },
      {
        "label": "institues",
        "uri": "http://dbpedia.org/ontology/EducationalInstitution",
        "seq": "27,35",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Joe Hahn is the member of what band?",
    "SerialNumber": "153",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/currentMembers\u003e \u003chttp://dbpedia.org/resource/Joe_Hahn\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Band\u003e}",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Joe Hahn",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Joe_Hahn",
        "seq": "0,8"
      }
    ],
    "id": "47e1ecb9aed24329aa182ac22dd61027",
    "predicate mapping": [
      {
        "label": "member",
        "uri": "http://dbpedia.org/property/currentMembers",
        "seq": "16,21",
        "mappedBy": "manual corrections"
      },
      {
        "label": "band",
        "uri": "http://dbpedia.org/ontology/Band",
        "seq": "31,34",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the television show whose distributor is Comedy central and  the character voice is given by Isaac hayes ?",
    "SerialNumber": "154",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/distributor\u003e \u003chttp://dbpedia.org/resource/Comedy_Central\u003e . ?uri \u003chttp://dbpedia.org/property/voices\u003e \u003chttp://dbpedia.org/resource/Isaac_Hayes\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Comedy central",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Comedy_Central",
        "seq": "46,60"
      },
      {
        "label": "Isaac hayes",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Isaac_Hayes",
        "seq": "98,109"
      }
    ],
    "id": "7bbd4a94e58e4bd2b5c13beb56280925",
    "predicate mapping": [
      {
        "label": "distributor",
        "uri": "http://dbpedia.org/property/distributor",
        "seq": "31,41",
        "mappedBy": "manual corrections"
      },
      {
        "label": "voice",
        "uri": "http://dbpedia.org/property/voices",
        "seq": "80,84",
        "mappedBy": "manual corrections"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "9,23",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "Raymond Johansen is the mayor of what city?",
    "SerialNumber": "155",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/leaderName\u003e \u003chttp://dbpedia.org/resource/Raymond_Johansen\u003e  . }",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Raymond Johansen",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Raymond_Johansen",
        "seq": "0,16"
      }
    ],
    "id": "be6db808f6ae400989a772e77e8e9ff1",
    "predicate mapping": [
      {
        "label": "mayor",
        "uri": "http://dbpedia.org/ontology/leaderName",
        "seq": "24,28",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "What is the nation of the speedway league where Ikaros Smederna played?",
    "SerialNumber": "156",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Ikaros_Smederna\u003e \u003chttp://dbpedia.org/ontology/league\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/country\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/SpeedwayLeague\u003e}",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Ikaros Smederna",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ikaros_Smederna",
        "seq": "48,63"
      }
    ],
    "id": "f919a579f278404ea6751583426857cd",
    "predicate mapping": [
      {
        "label": "league",
        "uri": "http://dbpedia.org/ontology/league",
        "seq": "35,40",
        "mappedBy": "manual corrections"
      },
      {
        "label": "nation",
        "uri": "http://dbpedia.org/ontology/country",
        "seq": "12,17",
        "mappedBy": "manual corrections"
      },
      {
        "label": "speedway league",
        "uri": "http://dbpedia.org/ontology/SpeedwayLeague",
        "seq": "26,40",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "605",
    "question": "What are the kind of games one can play on windows?",
    "SerialNumber": "157",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/computingPlatform\u003e \u003chttp://dbpedia.org/resource/Microsoft_Windows\u003e . ?x \u003chttp://dbpedia.org/ontology/genre\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/VideoGame\u003e}",
    "checked": "true",
    "entity mapping": [
      {
        "label": "windows",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Microsoft_Windows",
        "seq": "27,30"
      }
    ],
    "id": "714196c75ed547948e2bd73be5cd2cc2",
    "predicate mapping": [
      {
        "label": "on",
        "uri": "http://dbpedia.org/ontology/computingPlatform",
        "seq": "27,28",
        "mappedBy": "manual corrections"
      },
      {
        "label": "one",
        "uri": "http://dbpedia.org/ontology/genre",
        "seq": "27,29",
        "mappedBy": "manual corrections"
      },
      {
        "label": "games",
        "uri": "http://dbpedia.org/ontology/VideoGame",
        "seq": "21,25",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "111",
    "question": "Count the number of sports played by schools which play hockey ?",
    "SerialNumber": "158",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/sport\u003e \u003chttp://dbpedia.org/resource/Hockey\u003e . ?x \u003chttp://dbpedia.org/ontology/sport\u003e ?uri }",
    "checked": "true",
    "entity mapping": [
      {
        "label": "hockey",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Hockey",
        "seq": "56,62"
      }
    ],
    "id": "87fb8fce27b84f93b8bce8c5f37fd3f3",
    "predicate mapping": [
      {
        "label": "sports",
        "uri": "http://dbpedia.org/ontology/sport",
        "seq": "20,25",
        "mappedBy": "manual corrections"
      },
      {
        "label": "sports",
        "uri": "http://dbpedia.org/ontology/sport",
        "seq": "20,25",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who holds stock in the railway lines ending in Washington DC?",
    "SerialNumber": "159",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/routeEnd\u003e \u003chttp://dbpedia.org/resource/Union_Station_(Washington,_D.C.)\u003e . ?x \u003chttp://dbpedia.org/property/owner\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/RailwayLine\u003e}",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Washington DC",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Union_Station_(Washington,_D.C.)",
        "seq": "47,60"
      }
    ],
    "id": "25a932470707489bb49238d7d424b9a9",
    "predicate mapping": [
      {
        "label": "ending",
        "uri": "http://dbpedia.org/ontology/routeEnd",
        "seq": "37,42",
        "mappedBy": "manual corrections"
      },
      {
        "label": "holds stock",
        "uri": "http://dbpedia.org/property/owner",
        "seq": "4,14",
        "mappedBy": "manual corrections"
      },
      {
        "label": "railway lines",
        "uri": "http://dbpedia.org/ontology/RailwayLine",
        "seq": "23,35",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Where is Temenos Group founded ?",
    "SerialNumber": "160",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Temenos_Group\u003e \u003chttp://dbpedia.org/property/foundation\u003e ?uri } ",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Temenos Group",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Temenos_Group",
        "seq": "9,22"
      }
    ],
    "id": "bbcc0bde9178475b83167718e3f7f63c",
    "predicate mapping": [
      {
        "label": "founded",
        "uri": "http://dbpedia.org/property/foundation",
        "seq": "23,29",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What was the language of the single which came before To Know Him Is to Love Him?",
    "SerialNumber": "161",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/To_Know_Him_Is_to_Love_Him\u003e \u003chttp://dbpedia.org/ontology/previousWork\u003e ?x . ?x \u003chttp://dbpedia.org/property/language\u003e ?uri  . }",
    "checked": "true",
    "entity mapping": [
      {
        "label": "To Know Him Is to Love Him",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/To_Know_Him_Is_to_Love_Him",
        "seq": "54,80"
      }
    ],
    "id": "d08d5583e3724547baa6711c074b4e4c",
    "predicate mapping": [
      {
        "label": "before",
        "uri": "http://dbpedia.org/ontology/previousWork",
        "seq": "47,52",
        "mappedBy": "manual corrections"
      },
      {
        "label": "language",
        "uri": "http://dbpedia.org/property/language",
        "seq": "13,20",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Where was the narrator of Spain on the Road Again born?",
    "SerialNumber": "162",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Spain..._on_the_Road_Again\u003e \u003chttp://dbpedia.org/ontology/narrator\u003e ?x . ?x \u003chttp://dbpedia.org/property/birthPlace\u003e ?uri  . }",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Spain on the Road Again",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Spain..._on_the_Road_Again",
        "seq": "26,31"
      }
    ],
    "id": "b144d19ed17845e3be65c933a80b56a5",
    "predicate mapping": [
      {
        "label": "narrator",
        "uri": "http://dbpedia.org/ontology/narrator",
        "seq": "14,21",
        "mappedBy": "manual corrections"
      },
      {
        "label": "born",
        "uri": "http://dbpedia.org/property/birthPlace",
        "seq": "50,53",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the common school of Chris Marve and Neria Douglass?",
    "SerialNumber": "163",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Chris_Marve\u003e \u003chttp://dbpedia.org/ontology/school\u003e ?uri. \u003chttp://dbpedia.org/resource/Neria_Douglass\u003e \u003chttp://dbpedia.org/ontology/almaMater\u003e ?uri} ",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Chris Marve",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Chris_Marve",
        "seq": "29,40"
      },
      {
        "label": "Neria Douglass",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Neria_Douglass",
        "seq": "45,59"
      }
    ],
    "id": "99e4d849107646e78dc70715e92b6f25",
    "predicate mapping": [
      {
        "label": "school",
        "uri": "http://dbpedia.org/ontology/school",
        "seq": "19,24",
        "mappedBy": "manual corrections"
      },
      {
        "label": "common",
        "uri": "http://dbpedia.org/ontology/almaMater",
        "seq": "12,17",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "In which areas are the radio stations of Monticello, Maine available too?",
    "SerialNumber": "164",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/city\u003e \u003chttp://dbpedia.org/resource/Monticello,_Maine\u003e . ?x \u003chttp://dbpedia.org/property/area\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/RadioStation\u003e}",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Monticello, Maine",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Monticello,_Maine",
        "seq": "41,58"
      }
    ],
    "id": "31da90b739024aa79457f4f8a2e5e432",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/property/city",
        "seq": "0,1",
        "mappedBy": "manual corrections"
      },
      {
        "label": "areas",
        "uri": "http://dbpedia.org/property/area",
        "seq": "9,13",
        "mappedBy": "manual corrections"
      },
      {
        "label": "radio stations",
        "uri": "http://dbpedia.org/ontology/RadioStation",
        "seq": "29,36",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the TV show whose composer is Judy Hart Angelo and company as Paramount Television ?",
    "SerialNumber": "166",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/composer\u003e \u003chttp://dbpedia.org/resource/Judy_Hart_Angelo\u003e . ?uri \u003chttp://dbpedia.org/property/company\u003e \u003chttp://dbpedia.org/resource/Paramount_Television\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Judy Hart Angelo",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Judy_Hart_Angelo",
        "seq": "35,51"
      },
      {
        "label": "Paramount Television",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Paramount_Television",
        "seq": "67,87"
      }
    ],
    "id": "584cc0fdb95040f19cc8ee83fa1c62bb",
    "predicate mapping": [
      {
        "label": "composer",
        "uri": "http://dbpedia.org/ontology/composer",
        "seq": "23,30",
        "mappedBy": "manual corrections"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/property/company",
        "seq": "56,62",
        "mappedBy": "manual corrections"
      },
      {
        "label": "TV show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "9,15",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Rivers from which countries flow into the Caspian?",
    "SerialNumber": "167",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/riverMouth\u003e \u003chttp://dbpedia.org/resource/Caspian_Sea\u003e . ?x \u003chttp://dbpedia.org/ontology/sourceCountry\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/River\u003e}",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Caspian",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Caspian_Sea",
        "seq": "42,49"
      }
    ],
    "id": "8bcd288b39ee436f92f8e71b129048af",
    "predicate mapping": [
      {
        "label": "from",
        "uri": "http://dbpedia.org/ontology/riverMouth",
        "seq": "7,10",
        "mappedBy": "manual corrections"
      },
      {
        "label": "countries",
        "uri": "http://dbpedia.org/ontology/sourceCountry",
        "seq": "18,26",
        "mappedBy": "manual corrections"
      },
      {
        "label": "rivers",
        "uri": "http://dbpedia.org/ontology/River",
        "seq": "0,5",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the military unit whose garrison is Arlington County, Virginia and command structure is United States Department of Defense?",
    "SerialNumber": "168",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/garrison\u003e \u003chttp://dbpedia.org/resource/Arlington_County,_Virginia\u003e . ?uri \u003chttp://dbpedia.org/ontology/commandStructure\u003e \u003chttp://dbpedia.org/resource/United_States_Department_of_Defense\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MilitaryUnit\u003e}",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Arlington County, Virginia",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Arlington_County,_Virginia",
        "seq": "41,67"
      },
      {
        "label": "United States Department of Defense",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/United_States_Department_of_Defense",
        "seq": "93,128"
      }
    ],
    "id": "ebdbaf92c7bf4d16bf1e0624908a684f",
    "predicate mapping": [
      {
        "label": "garrison",
        "uri": "http://dbpedia.org/ontology/garrison",
        "seq": "29,36",
        "mappedBy": "manual corrections"
      },
      {
        "label": "structure command",
        "uri": "http://dbpedia.org/ontology/commandStructure",
        "seq": "72,88",
        "mappedBy": "manual corrections"
      },
      {
        "label": "military unit",
        "uri": "http://dbpedia.org/ontology/MilitaryUnit",
        "seq": "9,21",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Where does the successor of Thongsuk Samdaengpan reside?",
    "SerialNumber": "169",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Thongsuk_Samdaengpan\u003e \u003chttp://dbpedia.org/property/successor\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/location\u003e ?uri  . }",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Thongsuk Samdaengpan",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Thongsuk_Samdaengpan",
        "seq": "28,48"
      }
    ],
    "id": "6cda75748c1440b1a5c1a4d4f6d2810d",
    "predicate mapping": [
      {
        "label": "successor",
        "uri": "http://dbpedia.org/property/successor",
        "seq": "15,23",
        "mappedBy": "manual corrections"
      },
      {
        "label": "Where",
        "uri": "http://dbpedia.org/ontology/location",
        "seq": "0,4",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "what are some devices made by asus?",
    "SerialNumber": "170",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/manufacturer\u003e \u003chttp://dbpedia.org/resource/Asus\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/InformationAppliance\u003e}",
    "checked": "true",
    "entity mapping": [
      {
        "label": "asus",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Asus",
        "seq": "30,34"
      }
    ],
    "id": "d30b2d9672204e8ba6c45d14bee2bdb1",
    "predicate mapping": [
      {
        "label": "made by",
        "uri": "http://dbpedia.org/ontology/manufacturer",
        "seq": "22,28",
        "mappedBy": "manual corrections"
      },
      {
        "label": "devices",
        "uri": "http://dbpedia.org/ontology/InformationAppliance",
        "seq": "14,20",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "406",
    "question": "Count the number of people who graduated from universities affiliated with the NCAA.",
    "SerialNumber": "171",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/athletics\u003e \u003chttp://dbpedia.org/resource/National_Collegiate_Athletic_Association\u003e . ?uri \u003chttp://dbpedia.org/property/education\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "true",
    "entity mapping": [
      {
        "label": "NCAA",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/National_Collegiate_Athletic_Association",
        "seq": "79,83"
      }
    ],
    "id": "3da7b4f9f9174d63901356cf058dd0a6",
    "predicate mapping": [
      {
        "label": "@@@",
        "uri": "http://dbpedia.org/ontology/athletics",
        "seq": "-1,-1",
        "mappedBy": "manual corrections"
      },
      {
        "label": "@@@",
        "uri": "http://dbpedia.org/property/education",
        "seq": "-1,-1",
        "mappedBy": "manual corrections"
      },
      {
        "label": "people",
        "uri": "http://dbpedia.org/ontology/Person",
        "seq": "20,25",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Is Queen Latifah associated with Afrika Baby Bam?",
    "SerialNumber": "172",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Afrika_Baby_Bam\u003e \u003chttp://dbpedia.org/ontology/associatedBand\u003e \u003chttp://dbpedia.org/resource/Queen_Latifah\u003e }",
    "checked": "true",
    "entity mapping": [
      {
        "label": "Afrika Baby Bam",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Afrika_Baby_Bam",
        "seq": "33,48"
      },
      {
        "label": "Queen Latifah",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Queen_Latifah",
        "seq": "3,16"
      }
    ],
    "id": "452897c147984666bc0750d8e1981a80",
    "predicate mapping": [
      {
        "label": "associated",
        "uri": "http://dbpedia.org/ontology/associatedBand",
        "seq": "17,26",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the sports played by PATTS College of Aeronautics?",
    "SerialNumber": "174",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/PATTS_College_of_Aeronautics\u003e \u003chttp://dbpedia.org/property/athletics\u003e ?uri } ",
    "checked": "true",
    "entity mapping": [
      {
        "label": "PATTS College of Aeronautics",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/PATTS_College_of_Aeronautics",
        "seq": "26,54"
      }
    ],
    "id": "fee7a4bf34654f22a3e70e7544af3f20",
    "predicate mapping": [
      {
        "label": "sports",
        "uri": "http://dbpedia.org/property/athletics",
        "seq": "9,14",
        "mappedBy": "manual corrections"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Which country did the prime minister belong to who was served by Thanong Bidaya ?",
    "SerialNumber": "176",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Thanong_Bidaya\u003e \u003chttp://dbpedia.org/property/primeminister\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/nationality\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Thanong Bidaya",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Thanong_Bidaya",
        "seq": "65,79"
      }
    ],
    "id": "9fa439841abd475690547f59b821490f",
    "predicate mapping": [
      {
        "label": "minister prime",
        "uri": "http://dbpedia.org/property/primeminister",
        "seq": "-1,13",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/nationality",
        "seq": "6,13",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the major shrine of Bogumilus?",
    "SerialNumber": "179",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Bogumilus\u003e \u003chttp://dbpedia.org/ontology/majorShrine\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Bogumilus",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Bogumilus",
        "seq": "25,34"
      }
    ],
    "id": "49e05cb4c7b944b687a0c3d8d1766fc5",
    "predicate mapping": [
      {
        "label": "major shrine",
        "uri": "http://dbpedia.org/ontology/majorShrine",
        "seq": "9,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the office holder whose predecessor is  Henry E. Catto, Jr. and won Screen Actors Guild Life Achievement Award?",
    "SerialNumber": "180",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/predecessor\u003e \u003chttp://dbpedia.org/resource/Henry_E._Catto,_Jr.\u003e . ?uri \u003chttp://dbpedia.org/ontology/award\u003e \u003chttp://dbpedia.org/resource/Screen_Actors_Guild_Life_Achievement_Award\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/OfficeHolder\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Henry E. Catto, Jr.",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Henry_E._Catto,_Jr.",
        "seq": "45,64"
      },
      {
        "label": "Screen Actors Guild Life Achievement Award",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Screen_Actors_Guild_Life_Achievement_Award",
        "seq": "73,115"
      }
    ],
    "id": "a0d691169c504035af1d90fd31a2014a",
    "predicate mapping": [
      {
        "label": "predecessor",
        "uri": "http://dbpedia.org/ontology/predecessor",
        "seq": "29,40",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "Award",
        "uri": "http://dbpedia.org/ontology/award",
        "seq": "110,115",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "office holder",
        "uri": "http://dbpedia.org/ontology/OfficeHolder",
        "seq": "9,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "In which teams have league members of the Czech Extraliga played previously?",
    "SerialNumber": "183",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/league\u003e \u003chttp://dbpedia.org/resource/Czech_Extraliga\u003e . ?x \u003chttp://dbpedia.org/ontology/formerTeam\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Czech Extraliga",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Czech_Extraliga",
        "seq": "42,57"
      }
    ],
    "id": "37f49d990d204f4c83aa133bab321be3",
    "predicate mapping": [
      {
        "label": "league",
        "uri": "http://dbpedia.org/property/league",
        "seq": "20,26",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "teams",
        "uri": "http://dbpedia.org/ontology/formerTeam",
        "seq": "9,14",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "7",
    "question": "Who are buried in  Rome and Mausoleum of Augustus?",
    "SerialNumber": "187",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/property/placeOfBurial\u003e \u003chttp://dbpedia.org/resource/Rome\u003e . ?uri \u003chttp://dbpedia.org/property/placeOfBurial\u003e \u003chttp://dbpedia.org/resource/Mausoleum_of_Augustus\u003e . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Rome",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Rome",
        "seq": "19,23"
      },
      {
        "label": "Mausoleum of Augustus",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Mausoleum_of_Augustus",
        "seq": "28,49"
      }
    ],
    "id": "fc62fafe2c5c436cb7695e5a91beb9ed",
    "predicate mapping": [
      {
        "label": "buried in",
        "uri": "http://dbpedia.org/property/placeOfBurial",
        "seq": "8,17",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "buried in",
        "uri": "http://dbpedia.org/property/placeOfBurial",
        "seq": "8,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "103",
    "question": "How many battles have involved commanders of 1st Free French Division?",
    "SerialNumber": "188",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { \u003chttp://dbpedia.org/resource/1st_Free_French_Division\u003e \u003chttp://dbpedia.org/property/notableCommanders\u003e ?x . ?x \u003chttp://dbpedia.org/property/battles\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "1st Free French Division",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/1st_Free_French_Division",
        "seq": "45,69"
      }
    ],
    "id": "4243b354b7954e75ad5981538c61dfa1",
    "predicate mapping": [
      {
        "label": "commanders",
        "uri": "http://dbpedia.org/property/notableCommanders",
        "seq": "31,41",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "battles",
        "uri": "http://dbpedia.org/property/battles",
        "seq": "9,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "102",
    "question": "Count the number of cities on the Mediterranean Sea?",
    "SerialNumber": "189",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { \u003chttp://dbpedia.org/resource/Mediterranean_Sea\u003e \u003chttp://dbpedia.org/property/cities\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Mediterranean Sea",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Mediterranean_Sea",
        "seq": "34,51"
      }
    ],
    "id": "172bb4fd523c408cb8cfc0bd46db1031",
    "predicate mapping": [
      {
        "label": "cities",
        "uri": "http://dbpedia.org/property/cities",
        "seq": "20,26",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "307",
    "question": "Who is the office holder with deputies as Neil Brown and Andrew Peacock?",
    "SerialNumber": "194",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/property/deputy\u003e \u003chttp://dbpedia.org/resource/Neil_Brown_(Australian_politician)\u003e . ?uri \u003chttp://dbpedia.org/property/deputy\u003e \u003chttp://dbpedia.org/resource/Andrew_Peacock\u003e . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/OfficeHolder\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Neil Brown",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Neil_Brown_(Australian_politician)",
        "seq": "42,52"
      },
      {
        "label": "Andrew Peacock",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Andrew_Peacock",
        "seq": "57,71"
      }
    ],
    "id": "da9c6ff456104d10945b6af22f54ca27",
    "predicate mapping": [
      {
        "label": "deputies",
        "uri": "http://dbpedia.org/property/deputy",
        "seq": "30,38",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "deputies",
        "uri": "http://dbpedia.org/property/deputy",
        "seq": "30,38",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "office holder",
        "uri": "http://dbpedia.org/ontology/OfficeHolder",
        "seq": "11,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which executive producer of Into the Dalek also produced Wizards vs Aliens ?",
    "SerialNumber": "195",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Into_the_Dalek\u003e \u003chttp://dbpedia.org/property/executiveProducer\u003e ?uri. \u003chttp://dbpedia.org/resource/Wizards_vs_Aliens\u003e \u003chttp://dbpedia.org/ontology/producer\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Into the Dalek",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Into_the_Dalek",
        "seq": "28,42"
      },
      {
        "label": "Wizards vs Aliens",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Wizards_vs_Aliens",
        "seq": "57,74"
      }
    ],
    "id": "629c24823cdd4a4793f7696489607700",
    "predicate mapping": [
      {
        "label": "executive producer",
        "uri": "http://dbpedia.org/property/executiveProducer",
        "seq": "6,24",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "producer",
        "uri": "http://dbpedia.org/ontology/producer",
        "seq": "16,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Who appointed the successor of Charles Pinckney ?",
    "SerialNumber": "196",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Charles_Pinckney_(governor)\u003e \u003chttp://dbpedia.org/ontology/successor\u003e ?x . ?x \u003chttp://dbpedia.org/property/appointer\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Charles Pinckney",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Charles_Pinckney_(governor)",
        "seq": "31,47"
      }
    ],
    "id": "c5bb228043054a8ea67035887fd84db8",
    "predicate mapping": [
      {
        "label": "successor",
        "uri": "http://dbpedia.org/ontology/successor",
        "seq": "18,27",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "appointed",
        "uri": "http://dbpedia.org/property/appointer",
        "seq": "4,13",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Where did they debut their careers , those who have played for US men\u0027s national soccer team?",
    "SerialNumber": "197",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/nationalteam\u003e \u003chttp://dbpedia.org/resource/United_States_men\u0027s_national_soccer_team\u003e . ?x \u003chttp://dbpedia.org/property/debutteam\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "US men\u0027s national soccer team",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/United_States_men\u0027s_national_soccer_team",
        "seq": "63,65"
      }
    ],
    "id": "dff1afb3640745f382d04cc81eeff9e1",
    "predicate mapping": [
      {
        "label": "national team",
        "uri": "http://dbpedia.org/property/nationalteam",
        "seq": "-1,12",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "debut team",
        "uri": "http://dbpedia.org/property/debutteam",
        "seq": "-1,9",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "EU Broadcasting Union is the owner of the distributor of what?",
    "SerialNumber": "199",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/owner\u003e \u003chttp://dbpedia.org/resource/European_Broadcasting_Union\u003e . ?uri \u003chttp://dbpedia.org/ontology/distributor\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "EU Broadcasting Union",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/European_Broadcasting_Union",
        "seq": "0,21"
      }
    ],
    "id": "ea289b0161b2405ca5ec1de91100eab1",
    "predicate mapping": [
      {
        "label": "owner",
        "uri": "http://dbpedia.org/property/owner",
        "seq": "29,34",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "distributor",
        "uri": "http://dbpedia.org/ontology/distributor",
        "seq": "42,53",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Was Jack Ryan a nominee of US Senate?",
    "SerialNumber": "200",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Jack_Ryan_(politician)\u003e \u003chttp://dbpedia.org/ontology/nominee\u003e \u003chttp://dbpedia.org/resource/United_States_Senate\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jack Ryan",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Jack_Ryan_(politician)",
        "seq": "4,13"
      },
      {
        "label": "US Senate",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/United_States_Senate",
        "seq": "27,36"
      }
    ],
    "id": "38646a24ca5a41c2b44a07158a6d5483",
    "predicate mapping": [
      {
        "label": "nominee",
        "uri": "http://dbpedia.org/ontology/nominee",
        "seq": "16,23",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the broadcast area of WBCQ (SW) ?",
    "SerialNumber": "204",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/WBCQ_(SW)\u003e \u003chttp://dbpedia.org/property/area\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "WBCQ",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/WBCQ_(SW)",
        "seq": "30,34"
      }
    ],
    "id": "c4acb6859ef2400a8989bd05cdf3f766",
    "predicate mapping": [
      {
        "label": "area",
        "uri": "http://dbpedia.org/property/area",
        "seq": "22,26",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "311",
    "question": "List the cities which share the same water body as that of Florida ?",
    "SerialNumber": "206",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/cities\u003e \u003chttp://dbpedia.org/resource/Florida\u003e . ?x \u003chttp://dbpedia.org/property/cities\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/BodyOfWater\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Florida",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Florida",
        "seq": "59,66"
      }
    ],
    "id": "df05400e047e44529cb00216e3ca4203",
    "predicate mapping": [
      {
        "label": "cities",
        "uri": "http://dbpedia.org/property/cities",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "cities",
        "uri": "http://dbpedia.org/property/cities",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "water body of",
        "uri": "http://dbpedia.org/ontology/BodyOfWater",
        "seq": "-1,12",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "God Defend New Zealand is the national anthem of which country?",
    "SerialNumber": "207",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/nationalAnthem\u003e \u003chttp://dbpedia.org/resource/God_Defend_New_Zealand\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "God Defend New Zealand",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/God_Defend_New_Zealand",
        "seq": "0,22"
      }
    ],
    "id": "dc045b68c18349d693ff758050108ee5",
    "predicate mapping": [
      {
        "label": "national anthem",
        "uri": "http://dbpedia.org/property/nationalAnthem",
        "seq": "30,45",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Who founded the sister stations of Discovery Communications?",
    "SerialNumber": "210",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/sisterNames\u003e \u003chttp://dbpedia.org/resource/Discovery_Communications\u003e . ?x \u003chttp://dbpedia.org/property/founder\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Discovery Communications",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Discovery_Communications",
        "seq": "35,59"
      }
    ],
    "id": "4d0d78713fc845a3ac7f51b309934ca1",
    "predicate mapping": [
      {
        "label": "sister",
        "uri": "http://dbpedia.org/property/sisterNames",
        "seq": "16,22",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "founded",
        "uri": "http://dbpedia.org/property/founder",
        "seq": "4,11",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "What are the notable works of the person who produced Queer as Folk?",
    "SerialNumber": "211",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Queer_as_Folk_(UK_TV_series)\u003e \u003chttp://dbpedia.org/ontology/producer\u003e ?x . ?x \u003chttp://dbpedia.org/property/notableworks\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Queer as Folk",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Queer_as_Folk_(UK_TV_series)",
        "seq": "54,67"
      }
    ],
    "id": "05c054d50e42453aaea8ea3da8ce6afa",
    "predicate mapping": [
      {
        "label": "produced",
        "uri": "http://dbpedia.org/ontology/producer",
        "seq": "45,53",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "notable works",
        "uri": "http://dbpedia.org/property/notableworks",
        "seq": "13,26",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/Person",
        "seq": "34,40",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What are the border of High Desert (Oregon)?",
    "SerialNumber": "212",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/High_Desert_(Oregon)\u003e \u003chttp://dbpedia.org/ontology/border\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "High Desert (Oregon)",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/High_Desert_(Oregon)",
        "seq": "23,43"
      }
    ],
    "id": "f90fbf38ccac4a54915b9f68886b7257",
    "predicate mapping": [
      {
        "label": "border",
        "uri": "http://dbpedia.org/ontology/border",
        "seq": "13,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "What all is owned by a company one of whose division is Paramount Domestic Television?",
    "SerialNumber": "213",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/division\u003e \u003chttp://dbpedia.org/resource/Paramount_Domestic_Television\u003e . ?uri \u003chttp://dbpedia.org/property/company\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Paramount Domestic Television",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Paramount_Domestic_Television",
        "seq": "56,85"
      }
    ],
    "id": "0305f6c0414b4f0cba825e2346e0b8a0",
    "predicate mapping": [
      {
        "label": "division",
        "uri": "http://dbpedia.org/ontology/division",
        "seq": "44,52",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/property/company",
        "seq": "23,30",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": " Which musical band produced the subsequent work of City of New Orleans ?",
    "SerialNumber": "214",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/City_of_New_Orleans_(song)\u003e \u003chttp://dbpedia.org/ontology/subsequentWork\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/musicalBand\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "City of New Orleans",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/City_of_New_Orleans_(song)",
        "seq": "52,71"
      }
    ],
    "id": "5714a0b607134b3494e96af29ff7888b",
    "predicate mapping": [
      {
        "label": "subsequent work",
        "uri": "http://dbpedia.org/ontology/subsequentWork",
        "seq": "33,48",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "musical band",
        "uri": "http://dbpedia.org/ontology/musicalBand",
        "seq": "7,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which artist of Madagascar: Operation Penguin is also the writer of He\u0027s a Pirate ?",
    "SerialNumber": "216",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Madagascar:_Operation_Penguin\u003e \u003chttp://dbpedia.org/property/artist\u003e ?uri. \u003chttp://dbpedia.org/resource/He\u0027s_a_Pirate\u003e \u003chttp://dbpedia.org/property/writer\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Operation Penguin",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Madagascar:_Operation_Penguin",
        "seq": "28,45"
      },
      {
        "label": "He\u0027s a Pirate",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/He\u0027s_a_Pirate",
        "seq": "68,81"
      }
    ],
    "id": "d527decfd5df49a9852e46439a6e38ec",
    "predicate mapping": [
      {
        "label": "artist",
        "uri": "http://dbpedia.org/property/artist",
        "seq": "6,12",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "writer",
        "uri": "http://dbpedia.org/property/writer",
        "seq": "58,64",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Where did Goran Cengic die?",
    "SerialNumber": "217",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Goran_Čengić\u003e \u003chttp://dbpedia.org/property/deathPlace\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Goran Cengic",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Goran_Čengić",
        "seq": "10,22"
      }
    ],
    "id": "789d45349934476b8ebaf084f1161fc0",
    "predicate mapping": [
      {
        "label": "die",
        "uri": "http://dbpedia.org/property/deathPlace",
        "seq": "23,26",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "The authors of Zhorstoke nebo was influenced by whom ?",
    "SerialNumber": "218",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Zhorstoke_nebo\u003e \u003chttp://dbpedia.org/ontology/author\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/influencedBy\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Zhorstoke nebo",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Zhorstoke_nebo",
        "seq": "15,29"
      }
    ],
    "id": "39173d997c5d410fab182a0ea5ca6a78",
    "predicate mapping": [
      {
        "label": "authors",
        "uri": "http://dbpedia.org/ontology/author",
        "seq": "4,11",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "influenced by",
        "uri": "http://dbpedia.org/ontology/influencedBy",
        "seq": "34,47",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the basketball team which is coached by Louis Dunbar and has president as Jeff Munn ?",
    "SerialNumber": "219",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/coach\u003e \u003chttp://dbpedia.org/resource/Louis_Dunbar\u003e . ?uri \u003chttp://dbpedia.org/property/president\u003e \u003chttp://dbpedia.org/resource/Jeff_Munn\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/BasketballTeam\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Louis Dunbar",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Louis_Dunbar",
        "seq": "45,57"
      },
      {
        "label": "Jeff Munn",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Jeff_Munn",
        "seq": "79,88"
      }
    ],
    "id": "1bdfe333c33d4a9b93c68aff83578281",
    "predicate mapping": [
      {
        "label": "coach",
        "uri": "http://dbpedia.org/property/coach",
        "seq": "34,39",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "president",
        "uri": "http://dbpedia.org/property/president",
        "seq": "66,75",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "basketball team",
        "uri": "http://dbpedia.org/ontology/BasketballTeam",
        "seq": "9,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which hometown of pavel Moroz is also the palace of birthplace of Helena of Moscow ?",
    "SerialNumber": "222",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Pavel_Moroz\u003e \u003chttp://dbpedia.org/property/hometown\u003e ?uri. \u003chttp://dbpedia.org/resource/Helena_of_Moscow\u003e \u003chttp://dbpedia.org/ontology/birthPlace\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "pavel Moroz",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Pavel_Moroz",
        "seq": "18,29"
      },
      {
        "label": "Helena of Moscow",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Helena_of_Moscow",
        "seq": "66,82"
      }
    ],
    "id": "a79197506cc946a797bee8f7882d90f0",
    "predicate mapping": [
      {
        "label": "hometown",
        "uri": "http://dbpedia.org/property/hometown",
        "seq": "6,14",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "birthplace",
        "uri": "http://dbpedia.org/ontology/birthPlace",
        "seq": "52,62",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Name the largest city in the county where there is a Cy-Fair High School.",
    "SerialNumber": "224",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Cy-Fair_High_School\u003e \u003chttp://dbpedia.org/ontology/county\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/largestCity\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Cy-Fair High School",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Cy-Fair_High_School",
        "seq": "53,72"
      }
    ],
    "id": "d20a76100844447baaac326f589861ce",
    "predicate mapping": [
      {
        "label": "county",
        "uri": "http://dbpedia.org/ontology/county",
        "seq": "29,35",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "largest city",
        "uri": "http://dbpedia.org/ontology/largestCity",
        "seq": "9,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What are the academic interests of the past members of Senser?",
    "SerialNumber": "225",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Senser\u003e \u003chttp://dbpedia.org/property/pastMembers\u003e ?x . ?x \u003chttp://dbpedia.org/property/mainInterests\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Senser",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Senser",
        "seq": "55,61"
      }
    ],
    "id": "dec00419f40040aab1c69746a1a93469",
    "predicate mapping": [
      {
        "label": "past members",
        "uri": "http://dbpedia.org/property/pastMembers",
        "seq": "39,51",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "interests",
        "uri": "http://dbpedia.org/property/mainInterests",
        "seq": "22,31",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Name the common associate band of Blayse and Teddy Riley ?",
    "SerialNumber": "226",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Blayse\u003e \u003chttp://dbpedia.org/ontology/associatedBand\u003e ?uri. \u003chttp://dbpedia.org/resource/Teddy_Riley\u003e \u003chttp://dbpedia.org/ontology/associatedBand\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Blayse",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Blayse",
        "seq": "34,40"
      },
      {
        "label": "Teddy Riley",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Teddy_Riley",
        "seq": "45,56"
      }
    ],
    "id": "f84aac1f48e348e8964388d29ed6a82b",
    "predicate mapping": [
      {
        "label": "associate band",
        "uri": "http://dbpedia.org/ontology/associatedBand",
        "seq": "16,30",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "associate band",
        "uri": "http://dbpedia.org/ontology/associatedBand",
        "seq": "16,30",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Who is the performer of album which has the song \"To Where You Are\" ?",
    "SerialNumber": "227",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/To_Where_You_Are\u003e \u003chttp://dbpedia.org/ontology/album\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/artist\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "To Where You Are",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/To_Where_You_Are",
        "seq": "50,66"
      }
    ],
    "id": "60347895278a411187b6aaafce98462e",
    "predicate mapping": [
      {
        "label": "album",
        "uri": "http://dbpedia.org/ontology/album",
        "seq": "24,29",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "performer",
        "uri": "http://dbpedia.org/ontology/artist",
        "seq": "11,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What is the alma mater of the actors of The God Who Wasn\u0027t There ?",
    "SerialNumber": "233",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/The_God_Who_Wasn\u0027t_There\u003e \u003chttp://dbpedia.org/property/starring\u003e ?x . ?x \u003chttp://dbpedia.org/property/almaMater\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "The God Who Wasn\u0027t There",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_God_Who_Wasn\u0027t_There",
        "seq": "40,64"
      }
    ],
    "id": "1184156dad9a478ba5e2c3590f20096e",
    "predicate mapping": [
      {
        "label": "actor",
        "uri": "http://dbpedia.org/property/starring",
        "seq": "30,35",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/property/almaMater",
        "seq": "12,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Which label released the movie written by Thomas Meehan?",
    "SerialNumber": "235",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/writer\u003e \u003chttp://dbpedia.org/resource/Thomas_Meehan_(writer)\u003e . ?x \u003chttp://dbpedia.org/property/label\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Thomas Meehan",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Thomas_Meehan_(writer)",
        "seq": "42,55"
      }
    ],
    "id": "6829110a0f8c4c0297649f7ae290e6b3",
    "predicate mapping": [
      {
        "label": "written by",
        "uri": "http://dbpedia.org/property/writer",
        "seq": "31,41",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "label",
        "uri": "http://dbpedia.org/property/label",
        "seq": "6,11",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "25,30",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What is the leader name of the settlements whose governing body is Municipal council?",
    "SerialNumber": "236",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/governingBody\u003e \u003chttp://dbpedia.org/resource/Municipal_council\u003e . ?x \u003chttp://dbpedia.org/ontology/leaderName\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Settlement\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Municipal council",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Municipal_council",
        "seq": "67,84"
      }
    ],
    "id": "8b5f83f82fb945f68ec39bf2ee49c270",
    "predicate mapping": [
      {
        "label": "governing body",
        "uri": "http://dbpedia.org/ontology/governingBody",
        "seq": "49,63",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "leader name",
        "uri": "http://dbpedia.org/ontology/leaderName",
        "seq": "12,23",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "settlement",
        "uri": "http://dbpedia.org/ontology/Settlement",
        "seq": "31,41",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the major shrine of Jacques-Dsir Laval ?",
    "SerialNumber": "237",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Jacques-Désiré_Laval\u003e \u003chttp://dbpedia.org/ontology/majorShrine\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jacques-Dsir Laval",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Jacques-Désiré_Laval",
        "seq": "28,46"
      }
    ],
    "id": "624847b205bc4cfdb3fc6d5a3bb94089",
    "predicate mapping": [
      {
        "label": "major shrine",
        "uri": "http://dbpedia.org/ontology/majorShrine",
        "seq": "12,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "List places that are associated to cities in the state of Mecklenburg-Vorpommern.",
    "SerialNumber": "238",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/federalState\u003e \u003chttp://dbpedia.org/resource/Mecklenburg-Vorpommern\u003e . ?uri \u003chttp://dbpedia.org/property/cities\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Mecklenburg-Vorpommern",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Mecklenburg-Vorpommern",
        "seq": "58,80"
      }
    ],
    "id": "7cd11e37116b4218a85d96fc128b3c02",
    "predicate mapping": [
      {
        "label": "state",
        "uri": "http://dbpedia.org/ontology/federalState",
        "seq": "49,54",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "cities",
        "uri": "http://dbpedia.org/property/cities",
        "seq": "35,41",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "102",
    "question": "Count the number of actors in Lucy Sullivan Is Getting Married.",
    "SerialNumber": "240",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { \u003chttp://dbpedia.org/resource/Lucy_Sullivan_Is_Getting_Married\u003e \u003chttp://dbpedia.org/property/starring\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Lucy Sullivan Is Getting Married",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Lucy_Sullivan_Is_Getting_Married",
        "seq": "30,62"
      }
    ],
    "id": "973af98c92e24d1793c45d8c0ed3e83b",
    "predicate mapping": [
      {
        "label": "actor",
        "uri": "http://dbpedia.org/property/starring",
        "seq": "20,25",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "8",
    "question": "Which predecessor of Alexander Downer was deputy to Neil Brown ?",
    "SerialNumber": "242",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/predecessor\u003e \u003chttp://dbpedia.org/resource/Alexander_Downer\u003e . ?uri \u003chttp://dbpedia.org/property/deputy\u003e \u003chttp://dbpedia.org/resource/Neil_Brown_(Australian_politician)\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Alexander Downer",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Alexander_Downer",
        "seq": "21,37"
      },
      {
        "label": "Neil Brown",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Neil_Brown_(Australian_politician)",
        "seq": "52,62"
      }
    ],
    "id": "27ac3a28ee1145f3b6b5a1b7fd89b595",
    "predicate mapping": [
      {
        "label": "predecessor",
        "uri": "http://dbpedia.org/ontology/predecessor",
        "seq": "6,17",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "deputy",
        "uri": "http://dbpedia.org/property/deputy",
        "seq": "42,48",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Which sports are played in the alma mater of Amitava Datta?",
    "SerialNumber": "244",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Amitava_Datta\u003e \u003chttp://dbpedia.org/property/almaMater\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/sport\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Amitava Datta",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Amitava_Datta",
        "seq": "45,58"
      }
    ],
    "id": "802bb417e72d4d8a9cb37d8136a0ae07",
    "predicate mapping": [
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/property/almaMater",
        "seq": "31,41",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "sport",
        "uri": "http://dbpedia.org/ontology/sport",
        "seq": "6,11",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "To which series does the character of Londo Mollari belong?",
    "SerialNumber": "245",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Londo_Mollari\u003e \u003chttp://dbpedia.org/ontology/series\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Londo Mollari",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Londo_Mollari",
        "seq": "38,51"
      }
    ],
    "id": "8c42485e42e641b297c1b7b9bc431f71",
    "predicate mapping": [
      {
        "label": "series",
        "uri": "http://dbpedia.org/ontology/series",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Rashid Behbudov State Song Theatre and Baku Puppet Theatre can be found in which country?",
    "SerialNumber": "247",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Rashid_Behbudov_State_Song_Theatre\u003e \u003chttp://dbpedia.org/ontology/locationCountry\u003e ?uri. \u003chttp://dbpedia.org/resource/Baku_Puppet_Theatre\u003e \u003chttp://dbpedia.org/ontology/locationCountry\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Rashid Behbudov State Song Theatre",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Rashid_Behbudov_State_Song_Theatre",
        "seq": "0,34"
      },
      {
        "label": "Baku Puppet Theatre",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Baku_Puppet_Theatre",
        "seq": "39,58"
      }
    ],
    "id": "484f28f611e648b4b388f6cf98d964bb",
    "predicate mapping": [
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/locationCountry",
        "seq": "81,88",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/locationCountry",
        "seq": "81,88",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "What is the birthplace of Liudmila Privivkova and Qadir Huseynov ?",
    "SerialNumber": "248",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Liudmila_Privivkova\u003e \u003chttp://dbpedia.org/ontology/birthPlace\u003e ?uri. \u003chttp://dbpedia.org/resource/Qadir_Huseynov\u003e \u003chttp://dbpedia.org/ontology/birthPlace\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Liudmila Privivkova",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Liudmila_Privivkova",
        "seq": "26,45"
      },
      {
        "label": "Qadir Huseynov",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Qadir_Huseynov",
        "seq": "50,64"
      }
    ],
    "id": "b5dca27ca03b43638ef8c6dddbd21693",
    "predicate mapping": [
      {
        "label": "birthplace",
        "uri": "http://dbpedia.org/ontology/birthPlace",
        "seq": "12,22",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "birthplace",
        "uri": "http://dbpedia.org/ontology/birthPlace",
        "seq": "12,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "What is the predecessor of the automobile which is the related of Cadillac Fleetwood?",
    "SerialNumber": "249",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Cadillac_Fleetwood\u003e \u003chttp://dbpedia.org/property/related\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/predecessor\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Automobile\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Cadillac Fleetwood",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Cadillac_Fleetwood",
        "seq": "66,84"
      }
    ],
    "id": "8bd9695f7e1442e2a222a9db2e5934f0",
    "predicate mapping": [
      {
        "label": "related",
        "uri": "http://dbpedia.org/property/related",
        "seq": "55,62",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "predecessor",
        "uri": "http://dbpedia.org/ontology/predecessor",
        "seq": "12,23",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "automobile",
        "uri": "http://dbpedia.org/ontology/Automobile",
        "seq": "31,41",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "Under which archipelago does Canary Islands fall?",
    "SerialNumber": "252",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/archipelago\u003e \u003chttp://dbpedia.org/resource/Canary_Islands\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Canary Islands",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Canary_Islands",
        "seq": "29,43"
      }
    ],
    "id": "588353d070ef46ebab76b15f479bafda",
    "predicate mapping": [
      {
        "label": "archipelago",
        "uri": "http://dbpedia.org/property/archipelago",
        "seq": "12,23",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the craft of the Ralph Flanders which is also the profession of  Claiborne Pell ?",
    "SerialNumber": "254",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Ralph_Flanders\u003e \u003chttp://dbpedia.org/property/occupation\u003e ?uri. \u003chttp://dbpedia.org/resource/Claiborne_Pell\u003e \u003chttp://dbpedia.org/ontology/profession\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ralph Flanders",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ralph_Flanders",
        "seq": "25,39"
      },
      {
        "label": "Claiborne Pell",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Claiborne_Pell",
        "seq": "73,87"
      }
    ],
    "id": "c2b204dc4fa14f0fa3e64b8a5e79c362",
    "predicate mapping": [
      {
        "label": "profession",
        "uri": "http://dbpedia.org/property/occupation",
        "seq": "58,68",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "profession",
        "uri": "http://dbpedia.org/ontology/profession",
        "seq": "58,68",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Who are the politicians whose death place is Ontario?",
    "SerialNumber": "255",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/deathPlace\u003e \u003chttp://dbpedia.org/resource/Ontario\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Politician\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ontario",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Ontario",
        "seq": "45,52"
      }
    ],
    "id": "c69b4dff5f2c416d9a4d119548801193",
    "predicate mapping": [
      {
        "label": "death place",
        "uri": "http://dbpedia.org/ontology/deathPlace",
        "seq": "30,41",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "politician",
        "uri": "http://dbpedia.org/ontology/Politician",
        "seq": "12,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Does the US route 281 have a junction at San Antonio?",
    "SerialNumber": "256",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/U.S._Route_281\u003e \u003chttp://dbpedia.org/property/junction\u003e \u003chttp://dbpedia.org/resource/San_Antonio\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "US route 281",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/U.S._Route_281",
        "seq": "9,21"
      },
      {
        "label": "San Antonio",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/San_Antonio",
        "seq": "41,52"
      }
    ],
    "id": "60c286ef4d054f78a11a86763d47290b",
    "predicate mapping": [
      {
        "label": "junction",
        "uri": "http://dbpedia.org/property/junction",
        "seq": "29,37",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the company whose one of the product is Pixar Image Computer and has one of the key person as Edwin Catmull?",
    "SerialNumber": "259",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/product\u003e \u003chttp://dbpedia.org/resource/Pixar_Image_Computer\u003e . ?uri \u003chttp://dbpedia.org/ontology/keyPerson\u003e \u003chttp://dbpedia.org/resource/Edwin_Catmull\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Company\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Pixar Image Computer",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Pixar_Image_Computer",
        "seq": "45,65"
      },
      {
        "label": "Edwin Catmull",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Edwin_Catmull",
        "seq": "99,112"
      }
    ],
    "id": "5cf13a5c4a1849c6afb4b1a429c18893",
    "predicate mapping": [
      {
        "label": "product",
        "uri": "http://dbpedia.org/ontology/product",
        "seq": "34,41",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "key person",
        "uri": "http://dbpedia.org/ontology/keyPerson",
        "seq": "85,95",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company",
        "seq": "9,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "7",
    "question": "Who has official residences at Beverly Hills and Colts Neck Township ?",
    "SerialNumber": "260",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/ontology/residence\u003e \u003chttp://dbpedia.org/resource/Beverly_Hills,_California\u003e . ?uri \u003chttp://dbpedia.org/ontology/residence\u003e \u003chttp://dbpedia.org/resource/Colts_Neck_Township,_New_Jersey\u003e . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Beverly Hills",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Beverly_Hills,_California",
        "seq": "31,44"
      },
      {
        "label": "Colts Neck Township",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Colts_Neck_Township,_New_Jersey",
        "seq": "49,68"
      }
    ],
    "id": "9f7022f5c92b4603a66efc8ad9c62d35",
    "predicate mapping": [
      {
        "label": "residence",
        "uri": "http://dbpedia.org/ontology/residence",
        "seq": "17,26",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "residence",
        "uri": "http://dbpedia.org/ontology/residence",
        "seq": "17,26",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "401",
    "question": "Give me a count of royalties buried in Rome ?",
    "SerialNumber": "261",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/property/placeOfBurial\u003e \u003chttp://dbpedia.org/resource/Rome\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Royalty\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Rome",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Rome",
        "seq": "39,43"
      }
    ],
    "id": "a33350d8ce8d449a9ce52f0ca2451234",
    "predicate mapping": [
      {
        "label": "buried in",
        "uri": "http://dbpedia.org/property/placeOfBurial",
        "seq": "29,38",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "royalties",
        "uri": "http://dbpedia.org/ontology/Royalty",
        "seq": "19,28",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the route junction of Rhode Island Route 15 ?",
    "SerialNumber": "262",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Rhode_Island_Route_15\u003e \u003chttp://dbpedia.org/ontology/routeJunction\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Route 15",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Rhode_Island_Route_15",
        "seq": "43,51"
      }
    ],
    "id": "eb58dda4372c4a6596673f32df5a1ef4",
    "predicate mapping": [
      {
        "label": "route junction",
        "uri": "http://dbpedia.org/ontology/routeJunction",
        "seq": "12,26",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which executive producer of the ultimate merger is also an important person at Trump Productions?",
    "SerialNumber": "263",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/The_Ultimate_Merger\u003e \u003chttp://dbpedia.org/ontology/executiveProducer\u003e ?uri. \u003chttp://dbpedia.org/resource/Trump_Productions\u003e \u003chttp://dbpedia.org/ontology/keyPerson\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "the ultimate merger",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Ultimate_Merger",
        "seq": "28,47"
      },
      {
        "label": "Trump Productions",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Trump_Productions",
        "seq": "79,96"
      }
    ],
    "id": "7231e19892bf4ed6bc48ad9493d50db8",
    "predicate mapping": [
      {
        "label": "executive producer",
        "uri": "http://dbpedia.org/ontology/executiveProducer",
        "seq": "6,24",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/keyPerson",
        "seq": "69,75",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Is KOMC-FM the sister station of KOMC (AM)?",
    "SerialNumber": "264",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/KOMC_(AM)\u003e \u003chttp://dbpedia.org/ontology/sisterStation\u003e \u003chttp://dbpedia.org/resource/KOMC-FM\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "KOMC (AM)",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/KOMC_(AM)",
        "seq": "33,42"
      },
      {
        "label": "KOMC-FM",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/KOMC-FM",
        "seq": "3,10"
      }
    ],
    "id": "bc0e9473e03d40289b81d23a7aad7340",
    "predicate mapping": [
      {
        "label": "sister station",
        "uri": "http://dbpedia.org/ontology/sisterStation",
        "seq": "15,29",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Which awards are presented by Swedish Academy?",
    "SerialNumber": "266",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/presenter\u003e \u003chttp://dbpedia.org/resource/Swedish_Academy\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Award\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Swedish Academy",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Swedish_Academy",
        "seq": "30,45"
      }
    ],
    "id": "001fa9f758104896b853528c748e25f6",
    "predicate mapping": [
      {
        "label": "presented",
        "uri": "http://dbpedia.org/ontology/presenter",
        "seq": "17,26",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/Award",
        "seq": "6,12",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "311",
    "question": "List the awards won by the fashion designer which have been recognized by Tennessee State Museum ?",
    "SerialNumber": "267",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/award\u003e \u003chttp://dbpedia.org/resource/Tennessee_State_Museum\u003e . ?x \u003chttp://dbpedia.org/ontology/award\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/FashionDesigner\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Tennessee State Museum",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Tennessee_State_Museum",
        "seq": "74,96"
      }
    ],
    "id": "569c03444cd642899588bdbe6cf9351c",
    "predicate mapping": [
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/award",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/award",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "fashion designer",
        "uri": "http://dbpedia.org/ontology/FashionDesigner",
        "seq": "27,43",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the record label of the Next Thing and also the  label of the The Producers (2005 film)?",
    "SerialNumber": "275",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Next_Thing\u003e \u003chttp://dbpedia.org/ontology/recordLabel\u003e ?uri. \u003chttp://dbpedia.org/resource/The_Producers_(2005_film)\u003e \u003chttp://dbpedia.org/property/label\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Next Thing",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Next_Thing",
        "seq": "32,42"
      },
      {
        "label": "The Producers (2005 film)",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Producers_(2005_film)",
        "seq": "70,95"
      }
    ],
    "id": "0d2597c2a2f94822a3951967fe2e3a7e",
    "predicate mapping": [
      {
        "label": "record label",
        "uri": "http://dbpedia.org/ontology/recordLabel",
        "seq": "12,24",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "record label",
        "uri": "http://dbpedia.org/property/label",
        "seq": "12,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "101",
    "question": "How many people are known for Dragons\u0027 Den?",
    "SerialNumber": "277",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/ontology/knownFor\u003e \u003chttp://dbpedia.org/resource/Dragons\u0027_Den_(UK_TV_series)\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Dragons\u0027 Den",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Dragons\u0027_Den_(UK_TV_series)",
        "seq": "30,42"
      }
    ],
    "id": "49df02ead3be433689a0ab015de139c9",
    "predicate mapping": [
      {
        "label": "known for",
        "uri": "http://dbpedia.org/ontology/knownFor",
        "seq": "20,29",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "307",
    "question": "What is the award presented by Downtown Athletic Club and Yale Club NYCity?",
    "SerialNumber": "282",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/property/presenter\u003e \u003chttp://dbpedia.org/resource/Downtown_Athletic_Club\u003e . ?uri \u003chttp://dbpedia.org/property/presenter\u003e \u003chttp://dbpedia.org/resource/Yale_Club_of_New_York_City\u003e . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Award\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Downtown Athletic Club",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Downtown_Athletic_Club",
        "seq": "31,53"
      },
      {
        "label": "Yale Club",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Yale_Club_of_New_York_City",
        "seq": "58,67"
      }
    ],
    "id": "c33e201bd83f4ba38d3aabb00cec0f07",
    "predicate mapping": [
      {
        "label": "presented",
        "uri": "http://dbpedia.org/property/presenter",
        "seq": "18,27",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "presented",
        "uri": "http://dbpedia.org/property/presenter",
        "seq": "18,27",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "award",
        "uri": "http://dbpedia.org/ontology/Award",
        "seq": "12,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "List the  primeministers of Victor Hope, 2nd Marquess of Linlithgow ?",
    "SerialNumber": "283",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Victor_Hope,_2nd_Marquess_of_Linlithgow\u003e \u003chttp://dbpedia.org/property/primeminister\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Victor Hope, 2nd Marquess of Linlithgow",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Victor_Hope,_2nd_Marquess_of_Linlithgow",
        "seq": "28,67"
      }
    ],
    "id": "9d8981bec314421cbc7ab5fa19b35a8b",
    "predicate mapping": [
      {
        "label": "primeminister",
        "uri": "http://dbpedia.org/property/primeminister",
        "seq": "10,23",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "In which state is the Channel district?",
    "SerialNumber": "286",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Channel_District\u003e \u003chttp://dbpedia.org/ontology/state\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Channel district",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Channel_District",
        "seq": "22,38"
      }
    ],
    "id": "df2e76ce3304460b96e4bc1004ba31ff",
    "predicate mapping": [
      {
        "label": "district",
        "uri": "http://dbpedia.org/ontology/state",
        "seq": "30,38",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the religious affiliation of Vagif Aliyev ?",
    "SerialNumber": "287",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Vagif_Aliyev\u003e \u003chttp://dbpedia.org/ontology/religion\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Vagif Aliyev",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Vagif_Aliyev",
        "seq": "34,46"
      }
    ],
    "id": "72e904a0c1464fa49e6a57b90d012b10",
    "predicate mapping": [
      {
        "label": "religious affiliation",
        "uri": "http://dbpedia.org/ontology/religion",
        "seq": "9,30",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "In which branch of the government does James L. McConaughy belong?",
    "SerialNumber": "289",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/James_L._McConaughy\u003e \u003chttp://dbpedia.org/ontology/governor\u003e ?x . ?x \u003chttp://dbpedia.org/property/branch\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "James L. McConaughy",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/James_L._McConaughy",
        "seq": "39,58"
      }
    ],
    "id": "0994c57e0c4a42daaa38f1d36dbb7e24",
    "predicate mapping": [
      {
        "label": "government",
        "uri": "http://dbpedia.org/ontology/governor",
        "seq": "23,33",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "branch",
        "uri": "http://dbpedia.org/property/branch",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "111",
    "question": "Count the number of characters of the play whose one of the character is Catwoman ?",
    "SerialNumber": "290",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/characters\u003e \u003chttp://dbpedia.org/resource/Catwoman\u003e . ?x \u003chttp://dbpedia.org/property/characters\u003e ?uri }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Catwoman",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Catwoman",
        "seq": "73,81"
      }
    ],
    "id": "e4ff3218dca54f6e816707115b42aea9",
    "predicate mapping": [
      {
        "label": "characters",
        "uri": "http://dbpedia.org/property/characters",
        "seq": "20,30",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "characters",
        "uri": "http://dbpedia.org/property/characters",
        "seq": "20,30",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "what cities are located on the sides of mediterranean sea?",
    "SerialNumber": "291",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Mediterranean_Sea\u003e \u003chttp://dbpedia.org/property/cities\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "mediterranean sea",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Mediterranean_Sea",
        "seq": "40,57"
      }
    ],
    "id": "a216ea53e375474aa3d2a23273a88807",
    "predicate mapping": [
      {
        "label": "cities",
        "uri": "http://dbpedia.org/property/cities",
        "seq": "5,11",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Is Bacillus belong to the domain Bacteria?",
    "SerialNumber": "292",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Bacillus\u003e \u003chttp://dbpedia.org/property/domain\u003e \u003chttp://dbpedia.org/resource/Bacteria\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Bacillus",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Bacillus",
        "seq": "3,11"
      },
      {
        "label": "Bacteria",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Bacteria",
        "seq": "33,41"
      }
    ],
    "id": "6abd056cf07347d29aaf81047e0d6975",
    "predicate mapping": [
      {
        "label": "domain",
        "uri": "http://dbpedia.org/property/domain",
        "seq": "26,32",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "406",
    "question": "How many writers speak a language belonging to the Germanic kind of languages?",
    "SerialNumber": "296",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/languageFamily\u003e \u003chttp://dbpedia.org/resource/Germanic_languages\u003e . ?uri \u003chttp://dbpedia.org/property/language\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Writer\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Germanic",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Germanic_languages",
        "seq": "51,59"
      }
    ],
    "id": "92bd8bf1ae994d77a70ff9745c6690be",
    "predicate mapping": [
      {
        "label": "language",
        "uri": "http://dbpedia.org/ontology/languageFamily",
        "seq": "25,33",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "language",
        "uri": "http://dbpedia.org/property/language",
        "seq": "25,33",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "writers",
        "uri": "http://dbpedia.org/ontology/Writer",
        "seq": "9,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "Who are the major stockholders of the bank which is the company of Bloomberg Markets ?",
    "SerialNumber": "299",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Bloomberg_Markets\u003e \u003chttp://dbpedia.org/property/company\u003e ?x . ?x \u003chttp://dbpedia.org/property/owner\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Bank\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Bloomberg Markets",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Bloomberg_Markets",
        "seq": "67,84"
      }
    ],
    "id": "d501cb9ebb8445839dc4079bffe5f377",
    "predicate mapping": [
      {
        "label": "company",
        "uri": "http://dbpedia.org/property/company",
        "seq": "56,63",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "stockholders",
        "uri": "http://dbpedia.org/property/owner",
        "seq": "18,30",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "bank",
        "uri": "http://dbpedia.org/ontology/Bank",
        "seq": "38,42",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "How many maintainers are there of the bridges that can carry motor vehicles over them?",
    "SerialNumber": "300",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/carries\u003e \u003chttp://dbpedia.org/resource/Motor_vehicle\u003e . ?x \u003chttp://dbpedia.org/ontology/maintainedBy\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "motor vehicle",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Motor_vehicle",
        "seq": "61,74"
      }
    ],
    "id": "640f3316ba4b47ec9f5efa399249afdb",
    "predicate mapping": [
      {
        "label": "carry",
        "uri": "http://dbpedia.org/property/carries",
        "seq": "55,60",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "maintainer",
        "uri": "http://dbpedia.org/ontology/maintainedBy",
        "seq": "9,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What race of Linda Hogan is the state of origin of the Holmes Colbert ?",
    "SerialNumber": "301",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Linda_Hogan\u003e \u003chttp://dbpedia.org/property/ethnicity\u003e ?uri. \u003chttp://dbpedia.org/resource/Holmes_Colbert\u003e \u003chttp://dbpedia.org/ontology/stateOfOrigin\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Linda Hogan",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Linda_Hogan",
        "seq": "13,24"
      },
      {
        "label": "Holmes Colbert",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Holmes_Colbert",
        "seq": "55,69"
      }
    ],
    "id": "3e8fa86f90ba41089a2aea279c13c9f3",
    "predicate mapping": [
      {
        "label": "race",
        "uri": "http://dbpedia.org/property/ethnicity",
        "seq": "5,9",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "state of origin",
        "uri": "http://dbpedia.org/ontology/stateOfOrigin",
        "seq": "32,47",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What is the name of the artist which worked on the subsequent work of Ella Loves Cole ?",
    "SerialNumber": "303",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Ella_Loves_Cole\u003e \u003chttp://dbpedia.org/ontology/subsequentWork\u003e ?x . ?x \u003chttp://dbpedia.org/property/artist\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ella Loves Cole",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Ella_Loves_Cole",
        "seq": "70,85"
      }
    ],
    "id": "7bb0d99556694daa97224e6cdb0d61f4",
    "predicate mapping": [
      {
        "label": "subsequent work",
        "uri": "http://dbpedia.org/ontology/subsequentWork",
        "seq": "51,66",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "artist",
        "uri": "http://dbpedia.org/property/artist",
        "seq": "24,30",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What are the television shows whose network is Prime Time Entertainment Network?",
    "SerialNumber": "304",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/network\u003e \u003chttp://dbpedia.org/resource/Prime_Time_Entertainment_Network\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Prime Time Entertainment Network",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Prime_Time_Entertainment_Network",
        "seq": "47,79"
      }
    ],
    "id": "1d3e8d528a354735aa5fdffc086c9530",
    "predicate mapping": [
      {
        "label": "network",
        "uri": "http://dbpedia.org/property/network",
        "seq": "36,43",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "13,28",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What is the place of birth of the stars of Auto Shankar ?",
    "SerialNumber": "305",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Auto_Shankar_(film)\u003e \u003chttp://dbpedia.org/property/starring\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/birthPlace\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Auto Shankar",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Auto_Shankar_(film)",
        "seq": "43,55"
      }
    ],
    "id": "659915fe8d864b808a9a514f5b3ff35d",
    "predicate mapping": [
      {
        "label": "stars",
        "uri": "http://dbpedia.org/property/starring",
        "seq": "34,39",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "place birth",
        "uri": "http://dbpedia.org/ontology/birthPlace",
        "seq": "-1,10",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "In which state can I find Burr Truss styled bridges?",
    "SerialNumber": "306",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/style\u003e \u003chttp://dbpedia.org/resource/Burr_Truss\u003e . ?x \u003chttp://dbpedia.org/ontology/state\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Bridge\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Burr Truss",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Burr_Truss",
        "seq": "26,36"
      }
    ],
    "id": "5b90785deb8a4411aaa78d29aa3731e5",
    "predicate mapping": [
      {
        "label": "style",
        "uri": "http://dbpedia.org/property/style",
        "seq": "37,42",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "state",
        "uri": "http://dbpedia.org/ontology/state",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "bridge",
        "uri": "http://dbpedia.org/ontology/Bridge",
        "seq": "44,50",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What city is the residence of Cheryl Teigs?",
    "SerialNumber": "308",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Cheryl_Tiegs\u003e \u003chttp://dbpedia.org/ontology/residence\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Cheryl Teigs",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Cheryl_Tiegs",
        "seq": "30,42"
      }
    ],
    "id": "6229161c4acd41e5ba294a148a25abfb",
    "predicate mapping": [
      {
        "label": "residence",
        "uri": "http://dbpedia.org/ontology/residence",
        "seq": "17,26",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the nearest city to  Lake Victoria?",
    "SerialNumber": "311",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Lake_Victoria\u003e \u003chttp://dbpedia.org/ontology/nearestCity\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Lake Victoria",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Lake_Victoria",
        "seq": "26,39"
      }
    ],
    "id": "a622cb449bde410c8c3e8c5c11a18ebb",
    "predicate mapping": [
      {
        "label": "nearest city",
        "uri": "http://dbpedia.org/ontology/nearestCity",
        "seq": "9,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the constituency of Domenico Modugno ?",
    "SerialNumber": "312",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Domenico_Modugno\u003e \u003chttp://dbpedia.org/property/constituency\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Domenico Modugno",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Domenico_Modugno",
        "seq": "25,41"
      }
    ],
    "id": "416fe4e82425427cb42f2d36b6e64527",
    "predicate mapping": [
      {
        "label": "constituency",
        "uri": "http://dbpedia.org/property/constituency",
        "seq": "9,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What awards did the founder of Grameen Bank win?",
    "SerialNumber": "313",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Grameen_Bank\u003e \u003chttp://dbpedia.org/property/founder\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/award\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Grameen Bank",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Grameen_Bank",
        "seq": "31,43"
      }
    ],
    "id": "c77dbf978c4e46a490287a6c82caa7f3",
    "predicate mapping": [
      {
        "label": "founder of",
        "uri": "http://dbpedia.org/property/founder",
        "seq": "20,30",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/award",
        "seq": "5,11",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who is the writer of the singles whose producer is Peter-John Vettese?",
    "SerialNumber": "317",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/producer\u003e \u003chttp://dbpedia.org/resource/Peter-John_Vettese\u003e . ?x \u003chttp://dbpedia.org/ontology/writer\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Single\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Peter-John Vettese",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Peter-John_Vettese",
        "seq": "51,69"
      }
    ],
    "id": "2cb981d2ba4a480c9a1e0f51b6478f22",
    "predicate mapping": [
      {
        "label": "producer",
        "uri": "http://dbpedia.org/property/producer",
        "seq": "39,47",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "writer",
        "uri": "http://dbpedia.org/ontology/writer",
        "seq": "11,17",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "single",
        "uri": "http://dbpedia.org/ontology/Single",
        "seq": "25,31",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "101",
    "question": "Eric roth wrote how many screenplays?",
    "SerialNumber": "319",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/property/screenplay\u003e \u003chttp://dbpedia.org/resource/Eric_Roth\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Eric roth",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Eric_Roth",
        "seq": "0,9"
      }
    ],
    "id": "47255156e21340db90b083e6f65946bd",
    "predicate mapping": [
      {
        "label": "screenplay",
        "uri": "http://dbpedia.org/property/screenplay",
        "seq": "25,35",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the common race of the Martin Molony and race of the Coneygree ?",
    "SerialNumber": "320",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Martin_Molony\u003e \u003chttp://dbpedia.org/ontology/race\u003e ?uri. \u003chttp://dbpedia.org/resource/Coneygree\u003e \u003chttp://dbpedia.org/property/race\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Martin Molony",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Martin_Molony",
        "seq": "31,44"
      },
      {
        "label": "Coneygree",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Coneygree",
        "seq": "61,70"
      }
    ],
    "id": "df00f7dce8864849b265e3d1128d8dd8",
    "predicate mapping": [
      {
        "label": "race",
        "uri": "http://dbpedia.org/ontology/race",
        "seq": "19,23",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "race",
        "uri": "http://dbpedia.org/property/race",
        "seq": "19,23",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "101",
    "question": "How many have been awarded by the Royal Society?",
    "SerialNumber": "322",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/property/awards\u003e \u003chttp://dbpedia.org/resource/Royal_Society\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Royal Society",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Royal_Society",
        "seq": "34,47"
      }
    ],
    "id": "538b8fc2d6e54c939c970590874a350e",
    "predicate mapping": [
      {
        "label": "awarded",
        "uri": "http://dbpedia.org/property/awards",
        "seq": "19,26",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who are the opponents of Gervase Helwys?",
    "SerialNumber": "324",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Gervase_Helwys\u003e \u003chttp://dbpedia.org/ontology/opponent\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Gervase Helwys",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Gervase_Helwys",
        "seq": "25,39"
      }
    ],
    "id": "a9e1cae212ba4c2699ddcc5aa1686c2e",
    "predicate mapping": [
      {
        "label": "opponent",
        "uri": "http://dbpedia.org/ontology/opponent",
        "seq": "12,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who is the starring of the movies such that music is by Raamlaxman?",
    "SerialNumber": "325",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/music\u003e \u003chttp://dbpedia.org/resource/Raamlaxman\u003e . ?x \u003chttp://dbpedia.org/ontology/starring\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Raamlaxman",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Raamlaxman",
        "seq": "56,66"
      }
    ],
    "id": "2d7035345c0c4b94aa94c1b42ec57b41",
    "predicate mapping": [
      {
        "label": "music",
        "uri": "http://dbpedia.org/property/music",
        "seq": "44,49",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "starring",
        "uri": "http://dbpedia.org/ontology/starring",
        "seq": "11,19",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "27,32",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the movies distributed by RKO Pictures and has music composer as Bernard Herrmann?",
    "SerialNumber": "327",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/distributor\u003e \u003chttp://dbpedia.org/resource/RKO_Pictures\u003e . ?uri \u003chttp://dbpedia.org/ontology/musicComposer\u003e \u003chttp://dbpedia.org/resource/Bernard_Herrmann\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "RKO Pictures",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/RKO_Pictures",
        "seq": "31,43"
      },
      {
        "label": "Bernard Herrmann",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Bernard_Herrmann",
        "seq": "70,86"
      }
    ],
    "id": "bb9861a2275446428e974e73dd1e1b1b",
    "predicate mapping": [
      {
        "label": "distributed by",
        "uri": "http://dbpedia.org/property/distributor",
        "seq": "16,30",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "music composer",
        "uri": "http://dbpedia.org/ontology/musicComposer",
        "seq": "52,66",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "What is the headquarters of the public transit system which is the section of Red Ahead ?",
    "SerialNumber": "328",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Red_Ahead\u003e \u003chttp://dbpedia.org/ontology/isPartOf\u003e ?x . ?x \u003chttp://dbpedia.org/property/headquarters\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/PublicTransitSystem\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Red Ahead",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Red_Ahead",
        "seq": "78,87"
      }
    ],
    "id": "7f75c46b604847b88c64d3d6fffa098b",
    "predicate mapping": [
      {
        "label": "section of",
        "uri": "http://dbpedia.org/ontology/isPartOf",
        "seq": "67,77",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "headquarters",
        "uri": "http://dbpedia.org/property/headquarters",
        "seq": "12,24",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "public transit system",
        "uri": "http://dbpedia.org/ontology/PublicTransitSystem",
        "seq": "32,53",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Where is the head quarters of the owner of Hamline Avenue?",
    "SerialNumber": "330",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Hamline_Avenue_(Metro_Transit_station)\u003e \u003chttp://dbpedia.org/ontology/owner\u003e ?x . ?x \u003chttp://dbpedia.org/property/headquarters\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Hamline Avenue",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Hamline_Avenue_(Metro_Transit_station)",
        "seq": "43,57"
      }
    ],
    "id": "6a5afff8b79e41ab814b7600af7ca45a",
    "predicate mapping": [
      {
        "label": "owner",
        "uri": "http://dbpedia.org/ontology/owner",
        "seq": "34,39",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "head quarters",
        "uri": "http://dbpedia.org/property/headquarters",
        "seq": "13,26",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which magazine\u0027s publisher is Jann Wenner and founded by Ralph J. Gleason?",
    "SerialNumber": "333",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/publisher\u003e \u003chttp://dbpedia.org/resource/Jann_Wenner\u003e . ?uri \u003chttp://dbpedia.org/ontology/founder\u003e \u003chttp://dbpedia.org/resource/Ralph_J._Gleason\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Magazine\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jann Wenner",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Jann_Wenner",
        "seq": "30,41"
      },
      {
        "label": "Ralph J. Gleason",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ralph_J._Gleason",
        "seq": "57,73"
      }
    ],
    "id": "5dcd0eb818614883b22111575756bd54",
    "predicate mapping": [
      {
        "label": "publisher",
        "uri": "http://dbpedia.org/ontology/publisher",
        "seq": "17,26",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "founded by",
        "uri": "http://dbpedia.org/ontology/founder",
        "seq": "46,56",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "magazine",
        "uri": "http://dbpedia.org/ontology/Magazine",
        "seq": "6,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the mountain whose range is Sierra Nevada (U.S.) and parent mountain peak is Nevado de Toluca?",
    "SerialNumber": "334",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/mountainRange\u003e \u003chttp://dbpedia.org/resource/Sierra_Nevada_(U.S.)\u003e . ?uri \u003chttp://dbpedia.org/ontology/parentMountainPeak\u003e \u003chttp://dbpedia.org/resource/Nevado_de_Toluca\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Mountain\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Sierra Nevada (U.S.)",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Sierra_Nevada_(U.S.)",
        "seq": "33,53"
      },
      {
        "label": "Nevado de Toluca",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Nevado_de_Toluca",
        "seq": "82,98"
      }
    ],
    "id": "838eaa04147b4081beae5daad514fb0c",
    "predicate mapping": [
      {
        "label": "mountain",
        "uri": "http://dbpedia.org/ontology/mountainRange",
        "seq": "9,17",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "parent mountain peak",
        "uri": "http://dbpedia.org/ontology/parentMountainPeak",
        "seq": "58,78",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "mountain",
        "uri": "http://dbpedia.org/ontology/Mountain",
        "seq": "9,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which television show\u0027s network  is BBC HD and is related to Doctor Who Confidential?",
    "SerialNumber": "335",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/network\u003e \u003chttp://dbpedia.org/resource/BBC_HD\u003e . ?uri \u003chttp://dbpedia.org/ontology/related\u003e \u003chttp://dbpedia.org/resource/Doctor_Who_Confidential\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "BBC HD",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/BBC_HD",
        "seq": "36,42"
      },
      {
        "label": "Doctor Who Confidential",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Doctor_Who_Confidential",
        "seq": "61,84"
      }
    ],
    "id": "f3ad79c40d524db4b41288872c95ba91",
    "predicate mapping": [
      {
        "label": "network",
        "uri": "http://dbpedia.org/ontology/network",
        "seq": "24,31",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "related",
        "uri": "http://dbpedia.org/ontology/related",
        "seq": "50,57",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "6,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Who is the artist of Sings Kristofferson and also performed Milk Cow Blues atleast once?",
    "SerialNumber": "336",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Sings_Kristofferson\u003e \u003chttp://dbpedia.org/property/artist\u003e ?uri. \u003chttp://dbpedia.org/resource/Milk_Cow_Blues\u003e \u003chttp://dbpedia.org/ontology/artist\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Sings Kristofferson",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Sings_Kristofferson",
        "seq": "21,40"
      },
      {
        "label": "Milk Cow Blues",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Milk_Cow_Blues",
        "seq": "60,74"
      }
    ],
    "id": "0d1d38a04dff419b9fb358a190d55004",
    "predicate mapping": [
      {
        "label": "artist",
        "uri": "http://dbpedia.org/property/artist",
        "seq": "11,17",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "artist",
        "uri": "http://dbpedia.org/ontology/artist",
        "seq": "11,17",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What is the life stance of the ethnic groups related to Micronesia ?",
    "SerialNumber": "338",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/related\u003e \u003chttp://dbpedia.org/resource/Micronesia\u003e . ?x \u003chttp://dbpedia.org/ontology/religion\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/EthnicGroup\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Micronesia",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Micronesia",
        "seq": "56,66"
      }
    ],
    "id": "6658f7d6a2f84f6db5f3da64b9953c8d",
    "predicate mapping": [
      {
        "label": "related",
        "uri": "http://dbpedia.org/ontology/related",
        "seq": "45,52",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "life stance",
        "uri": "http://dbpedia.org/ontology/religion",
        "seq": "12,23",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "ethnic group",
        "uri": "http://dbpedia.org/ontology/EthnicGroup",
        "seq": "31,43",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What is the television show whose producer is Stephen E. Ambrose?",
    "SerialNumber": "339",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/producer\u003e \u003chttp://dbpedia.org/resource/Stephen_E._Ambrose\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Stephen E. Ambrose",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Stephen_E._Ambrose",
        "seq": "46,64"
      }
    ],
    "id": "73bbae8c251d41238b7dcf1aa0e155e4",
    "predicate mapping": [
      {
        "label": "producer",
        "uri": "http://dbpedia.org/property/producer",
        "seq": "34,42",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "12,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "List the newspapers whose headquarters\u0027s time zone is Central European Summer Time.",
    "SerialNumber": "340",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/timeZone\u003e \u003chttp://dbpedia.org/resource/Central_European_Summer_Time\u003e . ?uri \u003chttp://dbpedia.org/property/headquarters\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Newspaper\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Central European Summer Time",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Central_European_Summer_Time",
        "seq": "54,82"
      }
    ],
    "id": "d3ea98fc91814fd2b7993a9312f41010",
    "predicate mapping": [
      {
        "label": "time zone",
        "uri": "http://dbpedia.org/ontology/timeZone",
        "seq": "41,50",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "headquarters",
        "uri": "http://dbpedia.org/property/headquarters",
        "seq": "26,38",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "newspaper",
        "uri": "http://dbpedia.org/ontology/Newspaper",
        "seq": "9,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What is the magazine which have been  founded by Ralph J. Gleason?",
    "SerialNumber": "342",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/founder\u003e \u003chttp://dbpedia.org/resource/Ralph_J._Gleason\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Magazine\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ralph J. Gleason",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ralph_J._Gleason",
        "seq": "49,65"
      }
    ],
    "id": "b8eaafc1020c44c7b96f49241aafe8a4",
    "predicate mapping": [
      {
        "label": "founded by",
        "uri": "http://dbpedia.org/ontology/founder",
        "seq": "38,48",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "magazine",
        "uri": "http://dbpedia.org/ontology/Magazine",
        "seq": "12,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "307",
    "question": "Which river ends at  Thames Estuary and North Sea?",
    "SerialNumber": "344",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/ontology/riverMouth\u003e \u003chttp://dbpedia.org/resource/Thames_Estuary\u003e . ?uri \u003chttp://dbpedia.org/ontology/riverMouth\u003e \u003chttp://dbpedia.org/resource/North_Sea\u003e . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/River\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Thames Estuary",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Thames_Estuary",
        "seq": "21,35"
      },
      {
        "label": "North Sea",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/North_Sea",
        "seq": "40,49"
      }
    ],
    "id": "bc35238acbbf4e1fa317ccc66299f892",
    "predicate mapping": [
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/riverMouth",
        "seq": "6,11",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/riverMouth",
        "seq": "6,11",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River",
        "seq": "6,11",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Where was Ganefo hosted?",
    "SerialNumber": "345",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/GANEFO\u003e \u003chttp://dbpedia.org/property/hostCity\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ganefo",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/GANEFO",
        "seq": "10,16"
      }
    ],
    "id": "3f84c71fa3754d4c8efa129eb69a81a7",
    "predicate mapping": [
      {
        "label": "hosted",
        "uri": "http://dbpedia.org/property/hostCity",
        "seq": "17,23",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "111",
    "question": "Count the number of sports team members  which have player named Matt Williams ?",
    "SerialNumber": "346",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/name\u003e \u003chttp://dbpedia.org/resource/Matt_Williams_(New_Zealand_footballer)\u003e . ?x \u003chttp://dbpedia.org/property/name\u003e ?uri }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Matt Williams",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Matt_Williams_(New_Zealand_footballer)",
        "seq": "65,78"
      }
    ],
    "id": "3480c793f4804929a97fe292acfa30a9",
    "predicate mapping": [
      {
        "label": "name",
        "uri": "http://dbpedia.org/property/name",
        "seq": "59,63",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "name",
        "uri": "http://dbpedia.org/property/name",
        "seq": "59,63",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the office holder with predecessor as Samuel W. McCall and office in Massachusetts House of Representatives?",
    "SerialNumber": "347",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/predecessor\u003e \u003chttp://dbpedia.org/resource/Samuel_W._McCall\u003e . ?uri \u003chttp://dbpedia.org/property/office\u003e \u003chttp://dbpedia.org/resource/Massachusetts_House_of_Representatives\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/OfficeHolder\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Samuel W. McCall",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Samuel_W._McCall",
        "seq": "43,59"
      },
      {
        "label": "Massachusetts House of Representatives",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Massachusetts_House_of_Representatives",
        "seq": "74,112"
      }
    ],
    "id": "ba1402357518422281e2d6df50cfbe2e",
    "predicate mapping": [
      {
        "label": "predecessor",
        "uri": "http://dbpedia.org/property/predecessor",
        "seq": "28,39",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "office",
        "uri": "http://dbpedia.org/property/office",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "office holder",
        "uri": "http://dbpedia.org/ontology/OfficeHolder",
        "seq": "9,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "405",
    "question": "How many other awards have been given to people who have won the Golden Globe?",
    "SerialNumber": "348",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/award\u003e \u003chttp://dbpedia.org/resource/Golden_Globe_Award\u003e . ?x \u003chttp://dbpedia.org/property/awards\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Award\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Golden Globe",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Golden_Globe_Award",
        "seq": "65,77"
      }
    ],
    "id": "da55afc0da0e4b36af66810a1bec956d",
    "predicate mapping": [
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/award",
        "seq": "15,21",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards",
        "seq": "15,21",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/Award",
        "seq": "15,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Does Mr. Jim\u0027s Pizza operate in the pizza industry?",
    "SerialNumber": "349",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Mr._Jim\u0027s_Pizza\u003e \u003chttp://dbpedia.org/ontology/industry\u003e \u003chttp://dbpedia.org/resource/Pizza\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Mr. Jim\u0027s Pizza",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Mr._Jim\u0027s_Pizza",
        "seq": "5,20"
      },
      {
        "label": "pizza",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Pizza",
        "seq": "36,41"
      }
    ],
    "id": "87ef3828c73b4021ab723efbb0b64525",
    "predicate mapping": [
      {
        "label": "industry",
        "uri": "http://dbpedia.org/ontology/industry",
        "seq": "42,50",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "List down the schools whose mascot\u0027s order is Even-toed ungulate?",
    "SerialNumber": "350",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/order\u003e \u003chttp://dbpedia.org/resource/Even-toed_ungulate\u003e . ?uri \u003chttp://dbpedia.org/property/mascot\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Even-toed ungulate",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Even-toed_ungulate",
        "seq": "46,64"
      }
    ],
    "id": "dba313f8b26847beb6c2826754d55507",
    "predicate mapping": [
      {
        "label": "order",
        "uri": "http://dbpedia.org/ontology/order",
        "seq": "37,42",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "mascot",
        "uri": "http://dbpedia.org/property/mascot",
        "seq": "28,34",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "111",
    "question": "How many other field are there of the scientists whose one of the field is Mathematics ?",
    "SerialNumber": "351",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/field\u003e \u003chttp://dbpedia.org/resource/Mathematics\u003e . ?x \u003chttp://dbpedia.org/ontology/field\u003e ?uri }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Mathematics",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Mathematics",
        "seq": "75,86"
      }
    ],
    "id": "5f7d68b6d7c24bd29b84f2fd7fa2d1c2",
    "predicate mapping": [
      {
        "label": "field",
        "uri": "http://dbpedia.org/ontology/field",
        "seq": "15,20",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "field",
        "uri": "http://dbpedia.org/ontology/field",
        "seq": "15,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "7",
    "question": "Who had  Joe Purcell and Winston Bryant as lieutenants ?",
    "SerialNumber": "352",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/ontology/lieutenant\u003e \u003chttp://dbpedia.org/resource/Joe_Purcell\u003e . ?uri \u003chttp://dbpedia.org/ontology/lieutenant\u003e \u003chttp://dbpedia.org/resource/Winston_Bryant\u003e . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Joe Purcell",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Joe_Purcell",
        "seq": "9,20"
      },
      {
        "label": "Winston Bryant",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Winston_Bryant",
        "seq": "25,39"
      }
    ],
    "id": "1b7152be06d645fd89cc99c2c1436c63",
    "predicate mapping": [
      {
        "label": "lieutenant",
        "uri": "http://dbpedia.org/ontology/lieutenant",
        "seq": "43,53",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "lieutenant",
        "uri": "http://dbpedia.org/ontology/lieutenant",
        "seq": "43,53",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "What company\u0027s founder is Jim Harris?",
    "SerialNumber": "353",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/founder\u003e \u003chttp://dbpedia.org/resource/Jim_Harris_(entrepreneur)\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jim Harris",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Jim_Harris_(entrepreneur)",
        "seq": "26,36"
      }
    ],
    "id": "3cdc8e8ea823409f959acead754885e6",
    "predicate mapping": [
      {
        "label": "founder",
        "uri": "http://dbpedia.org/property/founder",
        "seq": "15,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "405",
    "question": "How many sports are played in organizations presided by Emanuel de Guzman?",
    "SerialNumber": "356",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/president\u003e \u003chttp://dbpedia.org/resource/Emanuel_de_Guzman\u003e . ?x \u003chttp://dbpedia.org/ontology/sport\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Sport\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Emanuel de Guzman",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Emanuel_de_Guzman",
        "seq": "56,73"
      }
    ],
    "id": "596f2ecca2be42aea17eb2f3e2bbffd9",
    "predicate mapping": [
      {
        "label": "presided",
        "uri": "http://dbpedia.org/ontology/president",
        "seq": "44,52",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "sport",
        "uri": "http://dbpedia.org/ontology/sport",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "sport",
        "uri": "http://dbpedia.org/ontology/Sport",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "What is the religion of the person who is in the cast of Master\u0027s Sun\u003e ?",
    "SerialNumber": "359",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Master\u0027s_Sun\u003e \u003chttp://dbpedia.org/ontology/starring\u003e ?x . ?x \u003chttp://dbpedia.org/property/religion\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Master\u0027s Sun",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Master\u0027s_Sun",
        "seq": "57,69"
      }
    ],
    "id": "654b89b5de0945439a24d12e98348582",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/starring",
        "seq": "42,44",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/property/religion",
        "seq": "12,20",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/Person",
        "seq": "28,34",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "7",
    "question": "Who has official residences at Colts Neck Township and Beverly Hills?",
    "SerialNumber": "361",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/ontology/residence\u003e \u003chttp://dbpedia.org/resource/Colts_Neck_Township,_New_Jersey\u003e . ?uri \u003chttp://dbpedia.org/ontology/residence\u003e \u003chttp://dbpedia.org/resource/Beverly_Hills,_California\u003e . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Colts Neck Township",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Colts_Neck_Township,_New_Jersey",
        "seq": "31,50"
      },
      {
        "label": "Beverly Hills",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Beverly_Hills,_California",
        "seq": "55,68"
      }
    ],
    "id": "efca0e0f9fd34c37abe132b6dec6b3eb",
    "predicate mapping": [
      {
        "label": "residence",
        "uri": "http://dbpedia.org/ontology/residence",
        "seq": "17,26",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "residence",
        "uri": "http://dbpedia.org/ontology/residence",
        "seq": "17,26",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the river with source as Shannon Pot and its mouth is located in Limerick?",
    "SerialNumber": "363",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/source\u003e \u003chttp://dbpedia.org/resource/Shannon_Pot\u003e . ?uri \u003chttp://dbpedia.org/property/mouthLocation\u003e \u003chttp://dbpedia.org/resource/Limerick\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/River\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Shannon Pot",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Shannon_Pot",
        "seq": "30,41"
      },
      {
        "label": "Limerick",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Limerick",
        "seq": "70,78"
      }
    ],
    "id": "a08bb500ab2240118a0e3c00ed317f0b",
    "predicate mapping": [
      {
        "label": "source",
        "uri": "http://dbpedia.org/ontology/source",
        "seq": "20,26",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "mouth",
        "uri": "http://dbpedia.org/property/mouthLocation",
        "seq": "50,55",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "What is the common licence of the Frontaccounting and nUbuntu?",
    "SerialNumber": "366",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Frontaccounting\u003e \u003chttp://dbpedia.org/ontology/license\u003e ?uri. \u003chttp://dbpedia.org/resource/NUbuntu\u003e \u003chttp://dbpedia.org/ontology/license\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Frontaccounting",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Frontaccounting",
        "seq": "34,49"
      },
      {
        "label": "nUbuntu",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/NUbuntu",
        "seq": "54,61"
      }
    ],
    "id": "1a77969a5597407fae22ede47cc281fc",
    "predicate mapping": [
      {
        "label": "licence",
        "uri": "http://dbpedia.org/ontology/license",
        "seq": "19,26",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "licence",
        "uri": "http://dbpedia.org/ontology/license",
        "seq": "19,26",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which TV shows distributor is Broadcast syndication and developed by Brian Graden ?",
    "SerialNumber": "367",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/developer\u003e \u003chttp://dbpedia.org/resource/Brian_Graden\u003e . ?uri \u003chttp://dbpedia.org/ontology/distributor\u003e \u003chttp://dbpedia.org/resource/Broadcast_syndication\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Brian Graden",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Brian_Graden",
        "seq": "69,81"
      },
      {
        "label": "Broadcast syndication",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Broadcast_syndication",
        "seq": "30,51"
      }
    ],
    "id": "cb0fc7a9c56e4298acc19aa91d3d4c8e",
    "predicate mapping": [
      {
        "label": "developed by",
        "uri": "http://dbpedia.org/property/developer",
        "seq": "56,68",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "distributor",
        "uri": "http://dbpedia.org/ontology/distributor",
        "seq": "15,26",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "9,14",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Name few companies founded in Texas?",
    "SerialNumber": "373",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/foundationPlace\u003e \u003chttp://dbpedia.org/resource/Texas\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Company\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Texas",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Texas",
        "seq": "30,35"
      }
    ],
    "id": "74e0b2e3b6864179acc9fd874d6897eb",
    "predicate mapping": [
      {
        "label": "founded",
        "uri": "http://dbpedia.org/ontology/foundationPlace",
        "seq": "19,26",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "companies",
        "uri": "http://dbpedia.org/ontology/Company",
        "seq": "9,18",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which office holder\u0027s governor is Charles Willing Byrd and has final resting place in North Bend, Ohio?",
    "SerialNumber": "378",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/governor\u003e \u003chttp://dbpedia.org/resource/Charles_Willing_Byrd\u003e . ?uri \u003chttp://dbpedia.org/property/restingplace\u003e \u003chttp://dbpedia.org/resource/North_Bend,_Ohio\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/OfficeHolder\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Charles Willing Byrd",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Charles_Willing_Byrd",
        "seq": "34,54"
      },
      {
        "label": "North Bend, Ohio",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/North_Bend,_Ohio",
        "seq": "86,102"
      }
    ],
    "id": "ed4dd38195244983a340f07ca5d05529",
    "predicate mapping": [
      {
        "label": "governor",
        "uri": "http://dbpedia.org/ontology/governor",
        "seq": "22,30",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "resting place",
        "uri": "http://dbpedia.org/property/restingplace",
        "seq": "69,82",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "office holder",
        "uri": "http://dbpedia.org/ontology/OfficeHolder",
        "seq": "6,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Does chicago own the washington station on the CTA Blue Line?",
    "SerialNumber": "382",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Washington_station_(CTA_Blue_Line)\u003e \u003chttp://dbpedia.org/property/owned\u003e \u003chttp://dbpedia.org/resource/Chicago\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "washington station",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Washington_station_(CTA_Blue_Line)",
        "seq": "21,39"
      },
      {
        "label": "chicago",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Chicago",
        "seq": "5,12"
      }
    ],
    "id": "9177e0691e8c4848a5237a226aed23d4",
    "predicate mapping": [
      {
        "label": "own",
        "uri": "http://dbpedia.org/property/owned",
        "seq": "13,16",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "111",
    "question": "Give the distinct number of other party of the people which have one of the party as Janata Party ?",
    "SerialNumber": "383",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/otherParty\u003e \u003chttp://dbpedia.org/resource/Janata_Party\u003e . ?x \u003chttp://dbpedia.org/ontology/otherParty\u003e ?uri }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Janata Party",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Janata_Party",
        "seq": "85,97"
      }
    ],
    "id": "0ffd6b150c7046af82a01f9b29dbddd6",
    "predicate mapping": [
      {
        "label": "other party",
        "uri": "http://dbpedia.org/ontology/otherParty",
        "seq": "28,39",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "other party",
        "uri": "http://dbpedia.org/ontology/otherParty",
        "seq": "28,39",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the company of Ford Theatre ?",
    "SerialNumber": "384",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Ford_Theatre\u003e \u003chttp://dbpedia.org/property/company\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ford Theatre",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Ford_Theatre",
        "seq": "23,35"
      }
    ],
    "id": "966ba5310c7049799db0464434010003",
    "predicate mapping": [
      {
        "label": "company",
        "uri": "http://dbpedia.org/property/company",
        "seq": "12,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "List the director of The Adventures of mimi ?",
    "SerialNumber": "385",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/The_Adventures_of_Mimi_(video)\u003e \u003chttp://dbpedia.org/property/director\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "The Adventures of mimi",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Adventures_of_Mimi_(video)",
        "seq": "21,43"
      }
    ],
    "id": "f77569069e6d41b692071d0350ab2d1d",
    "predicate mapping": [
      {
        "label": "director",
        "uri": "http://dbpedia.org/property/director",
        "seq": "9,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "401",
    "question": "Count the units garrisoned at Arlington County, Virginia.",
    "SerialNumber": "386",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/ontology/garrison\u003e \u003chttp://dbpedia.org/resource/Arlington_County,_Virginia\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MilitaryUnit\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Arlington County, Virginia",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Arlington_County,_Virginia",
        "seq": "30,56"
      }
    ],
    "id": "4212ec5b2f564dd58eaf9a18be59d709",
    "predicate mapping": [
      {
        "label": "garrison",
        "uri": "http://dbpedia.org/ontology/garrison",
        "seq": "16,24",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "units",
        "uri": "http://dbpedia.org/ontology/MilitaryUnit",
        "seq": "10,15",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which company founded by Fusajiro Yamauchi gives service as Nintendo Network?",
    "SerialNumber": "388",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/foundedBy\u003e \u003chttp://dbpedia.org/resource/Fusajiro_Yamauchi\u003e . ?uri \u003chttp://dbpedia.org/property/services\u003e \u003chttp://dbpedia.org/resource/Nintendo_Network\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Company\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Fusajiro Yamauchi",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Fusajiro_Yamauchi",
        "seq": "25,42"
      },
      {
        "label": "Nintendo Network",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Nintendo_Network",
        "seq": "60,76"
      }
    ],
    "id": "b6d929ad2217419984a923785b1dcac2",
    "predicate mapping": [
      {
        "label": "founded by",
        "uri": "http://dbpedia.org/ontology/foundedBy",
        "seq": "14,24",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "service",
        "uri": "http://dbpedia.org/property/services",
        "seq": "49,56",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company",
        "seq": "6,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who designed the bridge in Oddamavadi?",
    "SerialNumber": "389",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/locatedInArea\u003e \u003chttp://dbpedia.org/resource/Oddamavadi\u003e . ?x \u003chttp://dbpedia.org/property/designer\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Bridge\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Oddamavadi",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Oddamavadi",
        "seq": "27,37"
      }
    ],
    "id": "ef594c21024c4ec599be2c7e49e10c09",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/locatedInArea",
        "seq": "24,26",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "designed",
        "uri": "http://dbpedia.org/property/designer",
        "seq": "4,12",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "bridge",
        "uri": "http://dbpedia.org/ontology/Bridge",
        "seq": "17,23",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "311",
    "question": "List all the co-founders of the non for profit which have founding member as David pressman ?",
    "SerialNumber": "390",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/foundedBy\u003e \u003chttp://dbpedia.org/resource/David_Pressman\u003e . ?x \u003chttp://dbpedia.org/ontology/foundedBy\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Non-ProfitOrganisation\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "David pressman",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/David_Pressman",
        "seq": "77,91"
      }
    ],
    "id": "e65f96b6ccf54d99ac963173043c60f4",
    "predicate mapping": [
      {
        "label": "co-founder",
        "uri": "http://dbpedia.org/ontology/foundedBy",
        "seq": "13,23",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "co-founder",
        "uri": "http://dbpedia.org/ontology/foundedBy",
        "seq": "13,23",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "profit",
        "uri": "http://dbpedia.org/ontology/Non-ProfitOrganisation",
        "seq": "40,46",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the products of Den norske Bank ?",
    "SerialNumber": "391",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Den_norske_Bank\u003e \u003chttp://dbpedia.org/property/products\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Den norske Bank",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Den_norske_Bank",
        "seq": "21,36"
      }
    ],
    "id": "33bedb8ae5c1409fb0ba92d69816a355",
    "predicate mapping": [
      {
        "label": "products",
        "uri": "http://dbpedia.org/property/products",
        "seq": "9,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "What is the common profession of William Luther Hill and Claiborne Pell?",
    "SerialNumber": "398",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/William_Luther_Hill\u003e \u003chttp://dbpedia.org/ontology/profession\u003e ?uri. \u003chttp://dbpedia.org/resource/Claiborne_Pell\u003e \u003chttp://dbpedia.org/ontology/profession\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "William Luther Hill",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/William_Luther_Hill",
        "seq": "33,52"
      },
      {
        "label": "Claiborne Pell",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Claiborne_Pell",
        "seq": "57,71"
      }
    ],
    "id": "95c977845c1d40f387b0a56de11b73b7",
    "predicate mapping": [
      {
        "label": "profession",
        "uri": "http://dbpedia.org/ontology/profession",
        "seq": "19,29",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "profession",
        "uri": "http://dbpedia.org/ontology/profession",
        "seq": "19,29",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the movie whose director is Ridley Scott and it\u0027s music composer is Vangelis?",
    "SerialNumber": "399",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/director\u003e \u003chttp://dbpedia.org/resource/Ridley_Scott\u003e . ?uri \u003chttp://dbpedia.org/ontology/musicComposer\u003e \u003chttp://dbpedia.org/resource/Vangelis\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ridley Scott",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ridley_Scott",
        "seq": "33,45"
      },
      {
        "label": "Vangelis",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Vangelis",
        "seq": "73,81"
      }
    ],
    "id": "9c030631b627435492811c991fff3fe5",
    "predicate mapping": [
      {
        "label": "director",
        "uri": "http://dbpedia.org/property/director",
        "seq": "21,29",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "music composer",
        "uri": "http://dbpedia.org/ontology/musicComposer",
        "seq": "55,69",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who coached the marquet golden eagels during 2013",
    "SerialNumber": "402",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/2013–14_Marquette_Golden_Eagles_men\u0027s_basketball_team\u003e \u003chttp://dbpedia.org/ontology/coach\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "marquet golden eagels during 2013",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/2013–14_Marquette_Golden_Eagles_men\u0027s_basketball_team",
        "seq": "45,49"
      }
    ],
    "id": "0cec5868cc27426382d0ebfcbf2272bf",
    "predicate mapping": [
      {
        "label": "coach",
        "uri": "http://dbpedia.org/ontology/coach",
        "seq": "4,9",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "307",
    "question": "Who is the musical artist worked for labels Celluloid Records and Victor Entertainment?",
    "SerialNumber": "403",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/property/label\u003e \u003chttp://dbpedia.org/resource/Celluloid_Records\u003e . ?uri \u003chttp://dbpedia.org/property/label\u003e \u003chttp://dbpedia.org/resource/Victor_Entertainment\u003e . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MusicalArtist\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Celluloid Records",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Celluloid_Records",
        "seq": "44,61"
      },
      {
        "label": "Victor Entertainment",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Victor_Entertainment",
        "seq": "66,86"
      }
    ],
    "id": "25b560314df748389e244a17213dbb52",
    "predicate mapping": [
      {
        "label": "label",
        "uri": "http://dbpedia.org/property/label",
        "seq": "37,42",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "label",
        "uri": "http://dbpedia.org/property/label",
        "seq": "37,42",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "musical artist",
        "uri": "http://dbpedia.org/ontology/MusicalArtist",
        "seq": "11,25",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Is Tea the main ingredient of Lahpet?",
    "SerialNumber": "404",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Lahpet\u003e \u003chttp://dbpedia.org/property/mainIngredient\u003e \u003chttp://dbpedia.org/resource/Tea\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Lahpet",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Lahpet",
        "seq": "30,36"
      },
      {
        "label": "Tea",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Tea",
        "seq": "3,6"
      }
    ],
    "id": "abbf6d791be14816875ef172d71668dd",
    "predicate mapping": [
      {
        "label": "main ingredient",
        "uri": "http://dbpedia.org/property/mainIngredient",
        "seq": "11,26",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which tenant of New Sanno Hotel is the military branch of the Gary Holder-Winfield ?",
    "SerialNumber": "405",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/New_Sanno_Hotel\u003e \u003chttp://dbpedia.org/ontology/tenant\u003e ?uri. \u003chttp://dbpedia.org/resource/Gary_Holder-Winfield\u003e \u003chttp://dbpedia.org/ontology/militaryBranch\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "New Sanno Hotel",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/New_Sanno_Hotel",
        "seq": "16,31"
      },
      {
        "label": "Gary Holder-Winfield",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Gary_Holder-Winfield",
        "seq": "62,82"
      }
    ],
    "id": "f659b3e1ce264120a3d7649054b18001",
    "predicate mapping": [
      {
        "label": "tenant",
        "uri": "http://dbpedia.org/ontology/tenant",
        "seq": "6,12",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "military branch",
        "uri": "http://dbpedia.org/ontology/militaryBranch",
        "seq": "39,54",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "111",
    "question": "How many destinations are covered by the airlines which also serves Europe ?",
    "SerialNumber": "406",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/destinations\u003e \u003chttp://dbpedia.org/resource/Europe\u003e . ?x \u003chttp://dbpedia.org/property/destinations\u003e ?uri }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Europe",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Europe",
        "seq": "68,74"
      }
    ],
    "id": "2110869943d4431c80ed60a4598d5f4a",
    "predicate mapping": [
      {
        "label": "destinations",
        "uri": "http://dbpedia.org/property/destinations",
        "seq": "9,21",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "destinations",
        "uri": "http://dbpedia.org/property/destinations",
        "seq": "9,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "101",
    "question": "How many famous people are born in Long Island?",
    "SerialNumber": "407",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/ontology/birthPlace\u003e \u003chttp://dbpedia.org/resource/Long_Island\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Long Island",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Long_Island",
        "seq": "35,46"
      }
    ],
    "id": "7025f720c0ff41419cef7e20b14a8d8d",
    "predicate mapping": [
      {
        "label": "born in",
        "uri": "http://dbpedia.org/ontology/birthPlace",
        "seq": "27,34",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "Whose academic advisor works at the St George\u0027s Hospital?",
    "SerialNumber": "409",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/workInstitutions\u003e \u003chttp://dbpedia.org/resource/St_George\u0027s_Hospital\u003e . ?uri \u003chttp://dbpedia.org/ontology/academicAdvisor\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "St George\u0027s Hospital",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/St_George\u0027s_Hospital",
        "seq": "36,56"
      }
    ],
    "id": "466de8f3348242efa607641fbb8cfd7f",
    "predicate mapping": [
      {
        "label": "works",
        "uri": "http://dbpedia.org/property/workInstitutions",
        "seq": "23,28",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "academic advisor",
        "uri": "http://dbpedia.org/ontology/academicAdvisor",
        "seq": "6,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "List the home stadiums of the teams in the Russian Premier League?",
    "SerialNumber": "410",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/league\u003e \u003chttp://dbpedia.org/resource/2011–12_Russian_Premier_League\u003e . ?x \u003chttp://dbpedia.org/ontology/homeStadium\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Russian Premier League",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/2011–12_Russian_Premier_League",
        "seq": "43,65"
      }
    ],
    "id": "cc49d89995894cb9af4efa08186ac9b7",
    "predicate mapping": [
      {
        "label": "League",
        "uri": "http://dbpedia.org/property/league",
        "seq": "59,65",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "home stadium",
        "uri": "http://dbpedia.org/ontology/homeStadium",
        "seq": "9,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What are the countries for which History of Trier principal to?",
    "SerialNumber": "411",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/capital\u003e \u003chttp://dbpedia.org/resource/History_of_Trier\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Country\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "History of Trier",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/History_of_Trier",
        "seq": "33,49"
      }
    ],
    "id": "6979c92554e94d2f9801bdd2da60d29e",
    "predicate mapping": [
      {
        "label": "principal",
        "uri": "http://dbpedia.org/ontology/capital",
        "seq": "50,59",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "countries",
        "uri": "http://dbpedia.org/ontology/Country",
        "seq": "13,22",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "In which country is there a dam on the Awash river?",
    "SerialNumber": "412",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/river\u003e \u003chttp://dbpedia.org/resource/Awash_River\u003e . ?x \u003chttp://dbpedia.org/property/country\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Dam\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Awash river",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Awash_River",
        "seq": "39,50"
      }
    ],
    "id": "28fb6009d3174bf0a9761f1dc0d93da9",
    "predicate mapping": [
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/river",
        "seq": "45,50",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/property/country",
        "seq": "9,16",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "dam",
        "uri": "http://dbpedia.org/ontology/Dam",
        "seq": "28,31",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What are the movies whose cinematographer is Gregg Toland?",
    "SerialNumber": "414",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/cinematography\u003e \u003chttp://dbpedia.org/resource/Gregg_Toland\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Gregg Toland",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Gregg_Toland",
        "seq": "45,57"
      }
    ],
    "id": "c782fe8362e4411692072d564ba4fedb",
    "predicate mapping": [
      {
        "label": "cinematographer",
        "uri": "http://dbpedia.org/ontology/cinematography",
        "seq": "26,41",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "13,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Who is the person who are on the board of Freedom of the City?",
    "SerialNumber": "415",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/board\u003e \u003chttp://dbpedia.org/resource/Freedom_of_the_City\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Freedom of the City",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Freedom_of_the_City",
        "seq": "42,61"
      }
    ],
    "id": "6bb6210d9cac47ddaa5e12e8869fdcd5",
    "predicate mapping": [
      {
        "label": "board",
        "uri": "http://dbpedia.org/ontology/board",
        "seq": "33,38",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/Person",
        "seq": "11,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "List the television shows whose Composers are associated with Strontium 90 ?",
    "SerialNumber": "419",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/associatedBand\u003e \u003chttp://dbpedia.org/resource/Strontium_90_(band)\u003e . ?uri \u003chttp://dbpedia.org/property/composer\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Strontium 90",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Strontium_90_(band)",
        "seq": "62,74"
      }
    ],
    "id": "b57a708ebd054204b4816ab7fb3e1c94",
    "predicate mapping": [
      {
        "label": "associated",
        "uri": "http://dbpedia.org/ontology/associatedBand",
        "seq": "46,56",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "Composer",
        "uri": "http://dbpedia.org/property/composer",
        "seq": "32,40",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "9,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "List the ingredient of Blodpalt ?",
    "SerialNumber": "420",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Blodpalt\u003e \u003chttp://dbpedia.org/ontology/ingredient\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Blodpalt",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Blodpalt",
        "seq": "23,31"
      }
    ],
    "id": "8bba670b59bb421ca58a524a0c474e00",
    "predicate mapping": [
      {
        "label": "ingredient",
        "uri": "http://dbpedia.org/ontology/ingredient",
        "seq": "9,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who is the performer of Bengali in Platforms ?",
    "SerialNumber": "422",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Bengali_in_Platforms\u003e \u003chttp://dbpedia.org/ontology/artist\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Bengali in Platforms",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Bengali_in_Platforms",
        "seq": "24,44"
      }
    ],
    "id": "89689724b652439cbc83fd0be32e637c",
    "predicate mapping": [
      {
        "label": "performer",
        "uri": "http://dbpedia.org/ontology/artist",
        "seq": "11,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "Who is the owner of the bank where Thomas Secunda works ?",
    "SerialNumber": "425",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Thomas_Secunda\u003e \u003chttp://dbpedia.org/ontology/occupation\u003e ?x . ?x \u003chttp://dbpedia.org/property/owner\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Bank\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Thomas Secunda",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Thomas_Secunda",
        "seq": "35,49"
      }
    ],
    "id": "00b85c55b2d649c397d73d0e4d2895b8",
    "predicate mapping": [
      {
        "label": "work",
        "uri": "http://dbpedia.org/ontology/occupation",
        "seq": "50,54",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "owner",
        "uri": "http://dbpedia.org/property/owner",
        "seq": "11,16",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "bank",
        "uri": "http://dbpedia.org/ontology/Bank",
        "seq": "24,28",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "What are some fictional characters whose voice is in the peanuts movie?",
    "SerialNumber": "426",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/voice\u003e \u003chttp://dbpedia.org/resource/The_Peanuts_Movie\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "the peanuts movie",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Peanuts_Movie",
        "seq": "53,70"
      }
    ],
    "id": "6b6b25414e6d41a79396ddd1c583fe07",
    "predicate mapping": [
      {
        "label": "voice",
        "uri": "http://dbpedia.org/ontology/voice",
        "seq": "41,46",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What country had the title of 2001 Speedway Ekstraliga ?",
    "SerialNumber": "427",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/2001_Speedway_Ekstraliga\u003e \u003chttp://dbpedia.org/property/title\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/country\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "2001 Speedway Ekstraliga",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/2001_Speedway_Ekstraliga",
        "seq": "30,54"
      }
    ],
    "id": "a5254aca3b244fa1a1736835088e92ea",
    "predicate mapping": [
      {
        "label": "title",
        "uri": "http://dbpedia.org/property/title",
        "seq": "21,26",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/country",
        "seq": "5,12",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "111",
    "question": "What is the total number of other tenant of the stadia whose one of the tenant is Raptors 905?",
    "SerialNumber": "429",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/tenant\u003e \u003chttp://dbpedia.org/resource/Raptors_905\u003e . ?x \u003chttp://dbpedia.org/ontology/tenant\u003e ?uri }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Raptors 905",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Raptors_905",
        "seq": "82,93"
      }
    ],
    "id": "9121c4fcd51b4533a93936728a6c01cf",
    "predicate mapping": [
      {
        "label": "tenant",
        "uri": "http://dbpedia.org/ontology/tenant",
        "seq": "34,40",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "tenant",
        "uri": "http://dbpedia.org/ontology/tenant",
        "seq": "34,40",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "405",
    "question": "In how many places have Irishmen died?",
    "SerialNumber": "431",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/birthPlace\u003e \u003chttp://dbpedia.org/resource/Ireland\u003e . ?x \u003chttp://dbpedia.org/ontology/deathPlace\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Location\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Irishmen",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Ireland",
        "seq": "24,32"
      }
    ],
    "id": "241bdbc0cd074cc2963509e47a0bc547",
    "predicate mapping": [
      {
        "label": "places",
        "uri": "http://dbpedia.org/property/birthPlace",
        "seq": "12,18",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "places",
        "uri": "http://dbpedia.org/ontology/deathPlace",
        "seq": "12,18",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "",
        "uri": "http://dbpedia.org/ontology/Location",
        "seq": "0,0",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which draft team of bob Macmillan is also the prospect team of Mikhail Pashnin ?",
    "SerialNumber": "439",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Mikhail_Pashnin\u003e \u003chttp://dbpedia.org/property/prospectTeam\u003e ?uri. \u003chttp://dbpedia.org/resource/Bob_MacMillan\u003e \u003chttp://dbpedia.org/property/draftTeam\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Mikhail Pashnin",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Mikhail_Pashnin",
        "seq": "63,78"
      },
      {
        "label": "bob Macmillan",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Bob_MacMillan",
        "seq": "20,33"
      }
    ],
    "id": "444ae098996b47649d2dbec98edd52a6",
    "predicate mapping": [
      {
        "label": "prospect team",
        "uri": "http://dbpedia.org/property/prospectTeam",
        "seq": "46,59",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "draft team",
        "uri": "http://dbpedia.org/property/draftTeam",
        "seq": "6,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "What team has  players  born in Dominican Republic ?",
    "SerialNumber": "445",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/birthPlace\u003e \u003chttp://dbpedia.org/resource/Dominican_Republic\u003e . ?x \u003chttp://dbpedia.org/ontology/team\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Dominican Republic",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Dominican_Republic",
        "seq": "32,50"
      }
    ],
    "id": "04f9cbe07a5d4f17bf09a6c7eca5a2b4",
    "predicate mapping": [
      {
        "label": "born in",
        "uri": "http://dbpedia.org/property/birthPlace",
        "seq": "24,31",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/team",
        "seq": "5,9",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What is the university attended by the baseball player who\u0027s known for Olin Corporation?",
    "SerialNumber": "447",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/knownFor\u003e \u003chttp://dbpedia.org/resource/Olin_Corporation\u003e . ?x \u003chttp://dbpedia.org/property/education\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/BaseballPlayer\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Olin Corporation",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Olin_Corporation",
        "seq": "71,87"
      }
    ],
    "id": "c352251c728144d3a1114a020b3abb11",
    "predicate mapping": [
      {
        "label": "known for",
        "uri": "http://dbpedia.org/ontology/knownFor",
        "seq": "61,70",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "university attended",
        "uri": "http://dbpedia.org/property/education",
        "seq": "12,31",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "baseball player",
        "uri": "http://dbpedia.org/ontology/BaseballPlayer",
        "seq": "39,54",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What cities does the river goes through, whose tributary is the little black river in Arkansas?",
    "SerialNumber": "452",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/leftTributary\u003e \u003chttp://dbpedia.org/resource/Little_Black_River_(Missouri_-_Arkansas)\u003e . ?x \u003chttp://dbpedia.org/ontology/city\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/River\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "little black river",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Little_Black_River_(Missouri_-_Arkansas)",
        "seq": "64,82"
      }
    ],
    "id": "eaf2ccf4da0d4dd99bf39224e317dcf1",
    "predicate mapping": [
      {
        "label": "tributary",
        "uri": "http://dbpedia.org/ontology/leftTributary",
        "seq": "47,56",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/city",
        "seq": "83,85",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River",
        "seq": "21,26",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "111",
    "question": "How many other characters are there of the plays which has a  characters name Joker (comics) ?",
    "SerialNumber": "454",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/characters\u003e \u003chttp://dbpedia.org/resource/Joker_(comics)\u003e . ?x \u003chttp://dbpedia.org/property/characters\u003e ?uri }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Joker (comics)",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Joker_(comics)",
        "seq": "78,92"
      }
    ],
    "id": "7dfa4ea0de86402fadf35b56230094d7",
    "predicate mapping": [
      {
        "label": "characters",
        "uri": "http://dbpedia.org/property/characters",
        "seq": "15,25",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "characters",
        "uri": "http://dbpedia.org/property/characters",
        "seq": "15,25",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the Team Name  of St. Viator High School ?",
    "SerialNumber": "455",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/St._Viator_High_School\u003e \u003chttp://dbpedia.org/property/teamName\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "St. Viator High School",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/St._Viator_High_School",
        "seq": "26,48"
      }
    ],
    "id": "b86a96a710634f0c85c57c051dbd247d",
    "predicate mapping": [
      {
        "label": "Team Name",
        "uri": "http://dbpedia.org/property/teamName",
        "seq": "12,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "List the battles fought by  Ali Habib Mahmud ?",
    "SerialNumber": "456",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Ali_Habib_Mahmud\u003e \u003chttp://dbpedia.org/property/battles\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ali Habib Mahmud",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ali_Habib_Mahmud",
        "seq": "28,44"
      }
    ],
    "id": "1b0b90cd44a24c30a8e58ca7fe099d30",
    "predicate mapping": [
      {
        "label": "battles",
        "uri": "http://dbpedia.org/property/battles",
        "seq": "9,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What is the label of the singles whose group is Outlawz ?",
    "SerialNumber": "457",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/musicalArtist\u003e \u003chttp://dbpedia.org/resource/Outlawz\u003e . ?x \u003chttp://dbpedia.org/property/label\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Single\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Outlawz",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Outlawz",
        "seq": "48,55"
      }
    ],
    "id": "9bee0af78e8640ebb9e0835aab1fbf80",
    "predicate mapping": [
      {
        "label": "group",
        "uri": "http://dbpedia.org/ontology/musicalArtist",
        "seq": "39,44",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "label",
        "uri": "http://dbpedia.org/property/label",
        "seq": "12,17",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "single",
        "uri": "http://dbpedia.org/ontology/Single",
        "seq": "25,31",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "405",
    "question": "For how many other teams have the former players of Boston Bruins played?",
    "SerialNumber": "458",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/formerTeam\u003e \u003chttp://dbpedia.org/resource/Boston_Bruins\u003e . ?x \u003chttp://dbpedia.org/property/playedFor\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/SportsTeam\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Boston Bruins",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Boston_Bruins",
        "seq": "52,65"
      }
    ],
    "id": "4a4e462a65d545da8ed589257c9a7b03",
    "predicate mapping": [
      {
        "label": "former",
        "uri": "http://dbpedia.org/ontology/formerTeam",
        "seq": "34,40",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/property/playedFor",
        "seq": "19,23",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/SportsTeam",
        "seq": "19,23",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who is the author of Karakuri Dji Ultimo ?",
    "SerialNumber": "460",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Karakuri_Dôji_Ultimo\u003e \u003chttp://dbpedia.org/ontology/author\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Karakuri Dji Ultimo",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Karakuri_Dôji_Ultimo",
        "seq": "21,40"
      }
    ],
    "id": "1aee4c637a91415f9d690c4c5315ded9",
    "predicate mapping": [
      {
        "label": "author",
        "uri": "http://dbpedia.org/ontology/author",
        "seq": "11,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "311",
    "question": "List the destinations of the airlines which also serves Mediterranean  Sea ?",
    "SerialNumber": "461",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/destinations\u003e \u003chttp://dbpedia.org/resource/Mediterranean_Sea\u003e . ?x \u003chttp://dbpedia.org/property/destinations\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Airline\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Mediterranean Sea",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Mediterranean_Sea",
        "seq": "-1,16"
      }
    ],
    "id": "f0517726b79e40179b9458dd79aa9218",
    "predicate mapping": [
      {
        "label": "destinations",
        "uri": "http://dbpedia.org/property/destinations",
        "seq": "9,21",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "destinations",
        "uri": "http://dbpedia.org/property/destinations",
        "seq": "9,21",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "airline",
        "uri": "http://dbpedia.org/ontology/Airline",
        "seq": "29,36",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Was the  2d Command and Control Squadron barracked in Colorado?",
    "SerialNumber": "462",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/2d_Command_and_Control_Squadron\u003e \u003chttp://dbpedia.org/ontology/garrison\u003e \u003chttp://dbpedia.org/resource/Colorado\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "2d Command and Control Squadron",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/2d_Command_and_Control_Squadron",
        "seq": "9,40"
      },
      {
        "label": "Colorado",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Colorado",
        "seq": "54,62"
      }
    ],
    "id": "ca07f5bdb8504d5eb9f7042cf60590a6",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/garrison",
        "seq": "51,53",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "Name the members of youth clubs which have Camp Nou as their homeground.",
    "SerialNumber": "464",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/ground\u003e \u003chttp://dbpedia.org/resource/Camp_Nou\u003e . ?uri \u003chttp://dbpedia.org/property/youthclubs\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Camp Nou",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Camp_Nou",
        "seq": "43,51"
      }
    ],
    "id": "5600cf1071264310a057ac57ba802779",
    "predicate mapping": [
      {
        "label": "ground",
        "uri": "http://dbpedia.org/property/ground",
        "seq": "65,71",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "youth clubs",
        "uri": "http://dbpedia.org/property/youthclubs",
        "seq": "20,31",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who is the founder of Hohenau, Paraguay?",
    "SerialNumber": "465",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Hohenau,_Paraguay\u003e \u003chttp://dbpedia.org/ontology/founder\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Hohenau",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Hohenau,_Paraguay",
        "seq": "22,29"
      }
    ],
    "id": "a813050ed3c340158c9e4c5fbb61fb8f",
    "predicate mapping": [
      {
        "label": "founder of",
        "uri": "http://dbpedia.org/ontology/founder",
        "seq": "11,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "111",
    "question": "Count the number teams which have  former ice hockey players which also included American Hockey League ?",
    "SerialNumber": "467",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/formerTeam\u003e \u003chttp://dbpedia.org/resource/American_Hockey_League\u003e . ?x \u003chttp://dbpedia.org/ontology/formerTeam\u003e ?uri }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "American Hockey League",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/American_Hockey_League",
        "seq": "81,103"
      }
    ],
    "id": "76d7c51e723d48af9852d33633d70572",
    "predicate mapping": [
      {
        "label": "former",
        "uri": "http://dbpedia.org/ontology/formerTeam",
        "seq": "35,41",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "former",
        "uri": "http://dbpedia.org/ontology/formerTeam",
        "seq": "35,41",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "What is the largest city of the country which hosted the 1951 Asian Games?",
    "SerialNumber": "468",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/1951_Asian_Games\u003e \u003chttp://dbpedia.org/property/hostCity\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/largestCity\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Country\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "1951 Asian Games",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/1951_Asian_Games",
        "seq": "57,73"
      }
    ],
    "id": "d0946844e189450aadee011b3a6e2ac5",
    "predicate mapping": [
      {
        "label": "city",
        "uri": "http://dbpedia.org/property/hostCity",
        "seq": "20,24",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "largest city",
        "uri": "http://dbpedia.org/ontology/largestCity",
        "seq": "12,24",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/Country",
        "seq": "32,39",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who gives the license of WXXV-DT2 ?",
    "SerialNumber": "469",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/WXXV-DT2\u003e \u003chttp://dbpedia.org/property/licensee\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "WXXV-DT2",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/WXXV-DT2",
        "seq": "25,33"
      }
    ],
    "id": "02bb53dca86a4babb87a656db5452944",
    "predicate mapping": [
      {
        "label": "license",
        "uri": "http://dbpedia.org/property/licensee",
        "seq": "14,21",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "Which political figures were awarded Screen Actors Guild Life Achievement Award?",
    "SerialNumber": "473",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/award\u003e \u003chttp://dbpedia.org/resource/Screen_Actors_Guild_Life_Achievement_Award\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Screen Actors Guild Life Achievement Award",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Screen_Actors_Guild_Life_Achievement_Award",
        "seq": "37,79"
      }
    ],
    "id": "fb1cfb6030934cd2843217941b60cbe7",
    "predicate mapping": [
      {
        "label": "awarded",
        "uri": "http://dbpedia.org/ontology/award",
        "seq": "29,36",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Where are the movies directed by Faisal Aman Khan recorded?",
    "SerialNumber": "474",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/director\u003e \u003chttp://dbpedia.org/resource/Faisal_Aman_Khan\u003e . ?x \u003chttp://dbpedia.org/property/recorded\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Faisal Aman Khan",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Faisal_Aman_Khan",
        "seq": "33,49"
      }
    ],
    "id": "ff50d4217d0d43c69bb66a163247c4f1",
    "predicate mapping": [
      {
        "label": "directed by",
        "uri": "http://dbpedia.org/ontology/director",
        "seq": "21,32",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "recorded",
        "uri": "http://dbpedia.org/property/recorded",
        "seq": "50,58",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "How many different layouts do cars designed by Oliver Boulay have?",
    "SerialNumber": "477",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/designer\u003e \u003chttp://dbpedia.org/resource/Olivier_Boulay\u003e . ?x \u003chttp://dbpedia.org/ontology/layout\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Oliver Boulay",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Olivier_Boulay",
        "seq": "47,60"
      }
    ],
    "id": "91feed339fa040e486755c343500f7d1",
    "predicate mapping": [
      {
        "label": "designed",
        "uri": "http://dbpedia.org/property/designer",
        "seq": "35,43",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "layout",
        "uri": "http://dbpedia.org/ontology/layout",
        "seq": "19,25",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "111",
    "question": "How many other Guests are there of the television episodes whose Guests is Brian d\u0027Arcy James ?",
    "SerialNumber": "479",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/guests\u003e \u003chttp://dbpedia.org/resource/Brian_d\u0027Arcy_James\u003e . ?x \u003chttp://dbpedia.org/property/guests\u003e ?uri }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Brian d\u0027Arcy James",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Brian_d\u0027Arcy_James",
        "seq": "75,93"
      }
    ],
    "id": "f018611c46d2443ca03755ae47d1568b",
    "predicate mapping": [
      {
        "label": "Guests",
        "uri": "http://dbpedia.org/property/guests",
        "seq": "15,21",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "Guests",
        "uri": "http://dbpedia.org/property/guests",
        "seq": "15,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What awards have the narrator of the Cries and Whispers won?",
    "SerialNumber": "480",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Cries_and_Whispers\u003e \u003chttp://dbpedia.org/ontology/narrator\u003e ?x . ?x \u003chttp://dbpedia.org/property/awards\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Cries and Whispers",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Cries_and_Whispers",
        "seq": "37,55"
      }
    ],
    "id": "d7b3b5d412234a01aa50b7d8d3365a20",
    "predicate mapping": [
      {
        "label": "narrator",
        "uri": "http://dbpedia.org/ontology/narrator",
        "seq": "21,29",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards",
        "seq": "5,11",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Name the software which has been developed by John Fanning ?",
    "SerialNumber": "481",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/developer\u003e \u003chttp://dbpedia.org/resource/John_Fanning_(businessman)\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Software\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "John Fanning",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/John_Fanning_(businessman)",
        "seq": "46,58"
      }
    ],
    "id": "b3a55c2d774b4ae5b6890b7ae5cf5d5e",
    "predicate mapping": [
      {
        "label": "developed by",
        "uri": "http://dbpedia.org/property/developer",
        "seq": "33,45",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "software",
        "uri": "http://dbpedia.org/ontology/Software",
        "seq": "9,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What are the cities located on the sea into which the Aegean Sea flows?",
    "SerialNumber": "482",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Aegean_Sea\u003e \u003chttp://dbpedia.org/ontology/outflow\u003e ?x . ?x \u003chttp://dbpedia.org/property/cities\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Aegean Sea",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Aegean_Sea",
        "seq": "54,64"
      }
    ],
    "id": "2b59ba028c34416390816c7c18f84230",
    "predicate mapping": [
      {
        "label": "flows",
        "uri": "http://dbpedia.org/ontology/outflow",
        "seq": "65,70",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "cities",
        "uri": "http://dbpedia.org/property/cities",
        "seq": "13,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Whichi  burial place of the Henri, Duke of Rohan is also the birth place of Michel Frutschi ?",
    "SerialNumber": "484",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Henri,_Duke_of_Rohan\u003e \u003chttp://dbpedia.org/ontology/placeOfBurial\u003e ?uri. \u003chttp://dbpedia.org/resource/Michel_Frutschi\u003e \u003chttp://dbpedia.org/property/birthPlace\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Henri, Duke of Rohan",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Henri,_Duke_of_Rohan",
        "seq": "28,48"
      },
      {
        "label": "Michel Frutschi",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Michel_Frutschi",
        "seq": "76,91"
      }
    ],
    "id": "9056e4b74f654d5ea69fefdc6992e717",
    "predicate mapping": [
      {
        "label": "burial place",
        "uri": "http://dbpedia.org/ontology/placeOfBurial",
        "seq": "8,20",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "birth place",
        "uri": "http://dbpedia.org/property/birthPlace",
        "seq": "61,72",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "401",
    "question": "How many mammals are in the Chordate phylum?",
    "SerialNumber": "487",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/property/phylum\u003e \u003chttp://dbpedia.org/resource/Chordate\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Mammal\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Chordate",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Chordate",
        "seq": "28,36"
      }
    ],
    "id": "784fa60a6196464d8a6c45f97733c61f",
    "predicate mapping": [
      {
        "label": "phylum",
        "uri": "http://dbpedia.org/property/phylum",
        "seq": "37,43",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "mammal",
        "uri": "http://dbpedia.org/ontology/Mammal",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the species of Southwest African lion ?",
    "SerialNumber": "490",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Southwest_African_lion\u003e \u003chttp://dbpedia.org/ontology/species\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Southwest African lion",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Southwest_African_lion",
        "seq": "20,42"
      }
    ],
    "id": "ac98a0220f7340f187466f3e2d99aab4",
    "predicate mapping": [
      {
        "label": "species",
        "uri": "http://dbpedia.org/ontology/species",
        "seq": "9,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "List the pole drivers in the grand prixes where Williams Grand Prix Engineering was a first team?",
    "SerialNumber": "492",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/firstTeam\u003e \u003chttp://dbpedia.org/resource/Williams_Grand_Prix_Engineering\u003e . ?x \u003chttp://dbpedia.org/ontology/poleDriver\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/GrandPrix\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Williams Grand Prix Engineering",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Williams_Grand_Prix_Engineering",
        "seq": "48,79"
      }
    ],
    "id": "b1760c005bc747f78ec34be2a730e01b",
    "predicate mapping": [
      {
        "label": "first team",
        "uri": "http://dbpedia.org/property/firstTeam",
        "seq": "86,96",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "pole driver",
        "uri": "http://dbpedia.org/ontology/poleDriver",
        "seq": "9,20",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "grand prix",
        "uri": "http://dbpedia.org/ontology/GrandPrix",
        "seq": "29,39",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "311",
    "question": "What are the other key people of the non-profit organisations whose one of the  key person is Joe Green ?",
    "SerialNumber": "499",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/keyPeople\u003e \u003chttp://dbpedia.org/resource/Joe_Green_(entrepreneur)\u003e . ?x \u003chttp://dbpedia.org/property/keyPeople\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Non-ProfitOrganisation\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Joe Green",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Joe_Green_(entrepreneur)",
        "seq": "94,103"
      }
    ],
    "id": "8b97d14dcaf24e5ebfbcdd6c33b5225b",
    "predicate mapping": [
      {
        "label": "key people",
        "uri": "http://dbpedia.org/property/keyPeople",
        "seq": "19,29",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "key people",
        "uri": "http://dbpedia.org/property/keyPeople",
        "seq": "19,29",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "non-profit organisation",
        "uri": "http://dbpedia.org/ontology/Non-ProfitOrganisation",
        "seq": "37,60",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Is Mike Babcock the head coach of Toronto Maple Leafs?",
    "SerialNumber": "500",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Toronto_Maple_Leafs\u003e \u003chttp://dbpedia.org/property/headCoach\u003e \u003chttp://dbpedia.org/resource/Mike_Babcock\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Toronto Maple Leafs",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Toronto_Maple_Leafs",
        "seq": "34,53"
      },
      {
        "label": "Mike Babcock",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Mike_Babcock",
        "seq": "3,15"
      }
    ],
    "id": "9c45e57bd6df436a804a484269f51d51",
    "predicate mapping": [
      {
        "label": "head coach",
        "uri": "http://dbpedia.org/property/headCoach",
        "seq": "20,30",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What writers have nationality as Statelessness?  ",
    "SerialNumber": "501",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/nationality\u003e \u003chttp://dbpedia.org/resource/Statelessness\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Writer\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Statelessness",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Statelessness",
        "seq": "33,46"
      }
    ],
    "id": "902aa5708f8b44108380a95c01c45686",
    "predicate mapping": [
      {
        "label": "nationality",
        "uri": "http://dbpedia.org/property/nationality",
        "seq": "18,29",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "writers",
        "uri": "http://dbpedia.org/ontology/Writer",
        "seq": "5,12",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who is the leader of United States House of Representatives elections, 1788 and 1789 ?",
    "SerialNumber": "502",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/United_States_House_of_Representatives_elections,_1788_and_1789\u003e \u003chttp://dbpedia.org/property/leader\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "United States House of Representatives elections, 1788 and 1789",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/United_States_House_of_Representatives_elections,_1788_and_1789",
        "seq": "21,84"
      }
    ],
    "id": "4fa56e45fedf4969b8ccfc846a78dc9a",
    "predicate mapping": [
      {
        "label": "leader",
        "uri": "http://dbpedia.org/property/leader",
        "seq": "11,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What honours did Reigh Count receive?",
    "SerialNumber": "505",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Reigh_Count\u003e \u003chttp://dbpedia.org/ontology/honours\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Reigh Count",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Reigh_Count",
        "seq": "17,28"
      }
    ],
    "id": "82880466af6a4a07bb1bcd89ed90af00",
    "predicate mapping": [
      {
        "label": "honours",
        "uri": "http://dbpedia.org/ontology/honours",
        "seq": "5,12",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "List the awards received of the person whose child is Daine Disney Miller?",
    "SerialNumber": "507",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/children\u003e \u003chttp://dbpedia.org/resource/Diane_Disney_Miller\u003e . ?x \u003chttp://dbpedia.org/ontology/award\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Daine Disney Miller",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Diane_Disney_Miller",
        "seq": "54,73"
      }
    ],
    "id": "ee1bccf6ccb7409e82df8306828de0c8",
    "predicate mapping": [
      {
        "label": "child",
        "uri": "http://dbpedia.org/property/children",
        "seq": "45,50",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "awards received",
        "uri": "http://dbpedia.org/ontology/award",
        "seq": "9,24",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/Person",
        "seq": "32,38",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the place of birth of Lauren Briggs ?",
    "SerialNumber": "510",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Lauren_Briggs\u003e \u003chttp://dbpedia.org/property/placeOfBirth\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Lauren Briggs",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Lauren_Briggs",
        "seq": "30,43"
      }
    ],
    "id": "5ac4dc8f112e464796c31164eb0f3a64",
    "predicate mapping": [
      {
        "label": "place of birth",
        "uri": "http://dbpedia.org/property/placeOfBirth",
        "seq": "12,26",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Who is the fictional character whose relative is Vestigial Peter?",
    "SerialNumber": "513",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/relative\u003e \u003chttp://dbpedia.org/resource/Vestigial_Peter\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/FictionalCharacter\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Vestigial Peter",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Vestigial_Peter",
        "seq": "49,64"
      }
    ],
    "id": "50815a2e5ca14118b958db770c868c1e",
    "predicate mapping": [
      {
        "label": "relative",
        "uri": "http://dbpedia.org/ontology/relative",
        "seq": "37,45",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "fictional character",
        "uri": "http://dbpedia.org/ontology/FictionalCharacter",
        "seq": "11,30",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What are a few molluscas whose family is Buccinidae?",
    "SerialNumber": "514",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/family\u003e \u003chttp://dbpedia.org/resource/Buccinidae\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Mollusca\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Buccinidae",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Buccinidae",
        "seq": "41,51"
      }
    ],
    "id": "6283e026a6f54433921efa5494260bc8",
    "predicate mapping": [
      {
        "label": "family",
        "uri": "http://dbpedia.org/ontology/family",
        "seq": "31,37",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "mollusca",
        "uri": "http://dbpedia.org/ontology/Mollusca",
        "seq": "15,23",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the agency name of the Ministry of Information and Communication Technology (Thailand) and distribution region  of the Channel 9 MCOT HD ?",
    "SerialNumber": "515",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Ministry_of_Information_and_Communication_Technology_(Thailand)\u003e \u003chttp://dbpedia.org/property/agencyName\u003e ?uri. \u003chttp://dbpedia.org/resource/Channel_9_MCOT_HD\u003e \u003chttp://dbpedia.org/property/city\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ministry of Information and Communication Technology (Thailand)",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ministry_of_Information_and_Communication_Technology_(Thailand)",
        "seq": "31,94"
      },
      {
        "label": "Channel 9 MCOT HD",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Channel_9_MCOT_HD",
        "seq": "127,144"
      }
    ],
    "id": "4082e390c8294b71804e3c6b5b3f249c",
    "predicate mapping": [
      {
        "label": "agency name",
        "uri": "http://dbpedia.org/property/agencyName",
        "seq": "12,23",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "in",
        "uri": "http://dbpedia.org/property/city",
        "seq": "32,34",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What type of government is elected in Kumta?",
    "SerialNumber": "516",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Kumta\u003e \u003chttp://dbpedia.org/ontology/governmentType\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Kumta",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Kumta",
        "seq": "38,43"
      }
    ],
    "id": "f976333c9df44935b5cb741fdfd342ea",
    "predicate mapping": [
      {
        "label": "government type",
        "uri": "http://dbpedia.org/ontology/governmentType",
        "seq": "-1,14",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "What is the television show whose subsequent work is Crusade (TV series) and developed by  J. Michael Straczynski?",
    "SerialNumber": "521",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/subsequentWork\u003e \u003chttp://dbpedia.org/resource/Crusade_(TV_series)\u003e . ?uri \u003chttp://dbpedia.org/ontology/developer\u003e \u003chttp://dbpedia.org/resource/J._Michael_Straczynski\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Crusade (TV series)",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Crusade_(TV_series)",
        "seq": "53,72"
      },
      {
        "label": "J. Michael Straczynski",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/J._Michael_Straczynski",
        "seq": "91,113"
      }
    ],
    "id": "7509db63f63840548107d56cc97f5a0f",
    "predicate mapping": [
      {
        "label": "subsequent work",
        "uri": "http://dbpedia.org/ontology/subsequentWork",
        "seq": "34,49",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "developed by",
        "uri": "http://dbpedia.org/ontology/developer",
        "seq": "77,89",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "12,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which content license of the MSX BASIC is also the profession of the Laura K. Ipsen ?",
    "SerialNumber": "523",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/MSX_BASIC\u003e \u003chttp://dbpedia.org/property/license\u003e ?uri. \u003chttp://dbpedia.org/resource/Laura_K._Ipsen\u003e \u003chttp://dbpedia.org/ontology/occupation\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "MSX BASIC",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/MSX_BASIC",
        "seq": "29,38"
      },
      {
        "label": "Laura K. Ipsen",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Laura_K._Ipsen",
        "seq": "69,83"
      }
    ],
    "id": "40d57e64ea22448ab4a194129f2793ae",
    "predicate mapping": [
      {
        "label": "content license",
        "uri": "http://dbpedia.org/property/license",
        "seq": "6,21",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "profession",
        "uri": "http://dbpedia.org/ontology/occupation",
        "seq": "51,61",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Who is the performer of the album whose subsequent work is Willie Nelson and Family ?",
    "SerialNumber": "525",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/subsequentWork\u003e \u003chttp://dbpedia.org/resource/Willie_Nelson_and_Family\u003e . ?x \u003chttp://dbpedia.org/ontology/artist\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Willie Nelson and Family",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Willie_Nelson_and_Family",
        "seq": "59,83"
      }
    ],
    "id": "41dea095bc384feb9fb2f59597e2457d",
    "predicate mapping": [
      {
        "label": "subsequent work",
        "uri": "http://dbpedia.org/ontology/subsequentWork",
        "seq": "40,55",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "performer",
        "uri": "http://dbpedia.org/ontology/artist",
        "seq": "11,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the debut team of Dan Otero ?",
    "SerialNumber": "526",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Dan_Otero\u003e \u003chttp://dbpedia.org/ontology/debutTeam\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Dan Otero",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Dan_Otero",
        "seq": "23,32"
      }
    ],
    "id": "509e179ae21a44d68ac494defe1b32e7",
    "predicate mapping": [
      {
        "label": "debut team",
        "uri": "http://dbpedia.org/ontology/debutTeam",
        "seq": "9,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who is the producer of Captain EO ?",
    "SerialNumber": "528",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Captain_EO\u003e \u003chttp://dbpedia.org/property/producer\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Captain EO",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Captain_EO",
        "seq": "23,33"
      }
    ],
    "id": "d15ac9a40bb143a0a3da0de817e8d832",
    "predicate mapping": [
      {
        "label": "producer",
        "uri": "http://dbpedia.org/property/producer",
        "seq": "11,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "311",
    "question": "List all the home stadium of the soccer clubs which has one of the home stadium as Nairobi ?",
    "SerialNumber": "529",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/homeStadium\u003e \u003chttp://dbpedia.org/resource/Nairobi\u003e . ?x \u003chttp://dbpedia.org/property/homeStadium\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/SoccerClub\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Nairobi",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Nairobi",
        "seq": "83,90"
      }
    ],
    "id": "f2e72675e3df4f1abe9deb7b7779f904",
    "predicate mapping": [
      {
        "label": "home stadium",
        "uri": "http://dbpedia.org/property/homeStadium",
        "seq": "13,25",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "home stadium",
        "uri": "http://dbpedia.org/property/homeStadium",
        "seq": "13,25",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "soccer club",
        "uri": "http://dbpedia.org/ontology/SoccerClub",
        "seq": "33,44",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which college of Luke List (golfer) is the alma mater of K. Terry Dornbush",
    "SerialNumber": "531",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Luke_List_(golfer)\u003e \u003chttp://dbpedia.org/property/college\u003e ?uri. \u003chttp://dbpedia.org/resource/K._Terry_Dornbush\u003e \u003chttp://dbpedia.org/property/almaMater\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Luke List",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Luke_List_(golfer)",
        "seq": "17,26"
      },
      {
        "label": "K. Terry Dornbush",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/K._Terry_Dornbush",
        "seq": "57,74"
      }
    ],
    "id": "0645d71c51664c7f98ef83d258d24c5d",
    "predicate mapping": [
      {
        "label": "college",
        "uri": "http://dbpedia.org/property/college",
        "seq": "6,13",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/property/almaMater",
        "seq": "43,53",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What are the academic interest of Philip Novak?",
    "SerialNumber": "532",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Philip_Novak\u003e \u003chttp://dbpedia.org/property/mainInterests\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Philip Novak",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Philip_Novak",
        "seq": "34,46"
      }
    ],
    "id": "593a45b09e04430e9687b99f34b3e709",
    "predicate mapping": [
      {
        "label": "interest",
        "uri": "http://dbpedia.org/property/mainInterests",
        "seq": "22,30",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "108",
    "question": "Count the total number of software whose programming language is C++ and operating system is Microsoft Windows?",
    "SerialNumber": "534",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/property/programmingLanguage\u003e \u003chttp://dbpedia.org/resource/C++\u003e . ?uri \u003chttp://dbpedia.org/ontology/operatingSystem\u003e \u003chttp://dbpedia.org/resource/Microsoft_Windows\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "C++",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/C++",
        "seq": "65,68"
      },
      {
        "label": "Microsoft Windows",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Microsoft_Windows",
        "seq": "93,110"
      }
    ],
    "id": "526b1249debc4893af724c324a24726e",
    "predicate mapping": [
      {
        "label": "programming language",
        "uri": "http://dbpedia.org/property/programmingLanguage",
        "seq": "41,61",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "operating system",
        "uri": "http://dbpedia.org/ontology/operatingSystem",
        "seq": "73,89",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "401",
    "question": "How many albums were released under the Victor Entertainment label?",
    "SerialNumber": "535",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/property/label\u003e \u003chttp://dbpedia.org/resource/Victor_Entertainment\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Album\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Victor Entertainment",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Victor_Entertainment",
        "seq": "40,60"
      }
    ],
    "id": "e91c453536f24b228292c56b81ead42b",
    "predicate mapping": [
      {
        "label": "label",
        "uri": "http://dbpedia.org/property/label",
        "seq": "61,66",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "album",
        "uri": "http://dbpedia.org/ontology/Album",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Does NOAAS Davidson (S 331) have a homeport in Seattle?",
    "SerialNumber": "536",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/NOAAS_Davidson_(S_331)\u003e \u003chttp://dbpedia.org/ontology/homeport\u003e \u003chttp://dbpedia.org/resource/Seattle\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "NOAAS Davidson (S 331)",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/NOAAS_Davidson_(S_331)",
        "seq": "5,27"
      },
      {
        "label": "Seattle",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Seattle",
        "seq": "47,54"
      }
    ],
    "id": "7dc5e7a5b436490481cc92fa93bd288f",
    "predicate mapping": [
      {
        "label": "homeport",
        "uri": "http://dbpedia.org/ontology/homeport",
        "seq": "35,43",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which serving railway line of the Daund Junction railway station was also the place where 99 (2009 film) was recorded ?",
    "SerialNumber": "537",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Daund_Junction_railway_station\u003e \u003chttp://dbpedia.org/ontology/servingRailwayLine\u003e ?uri. \u003chttp://dbpedia.org/resource/99_(2009_film)\u003e \u003chttp://dbpedia.org/property/recorded\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Daund Junction railway station",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Daund_Junction_railway_station",
        "seq": "34,64"
      },
      {
        "label": "99 (2009 film)",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/99_(2009_film)",
        "seq": "90,104"
      }
    ],
    "id": "e81ec239e24b4394ad486b4fcfb77f8b",
    "predicate mapping": [
      {
        "label": "serving railway line",
        "uri": "http://dbpedia.org/ontology/servingRailwayLine",
        "seq": "6,26",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "recorded",
        "uri": "http://dbpedia.org/property/recorded",
        "seq": "109,117",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which office holder\u0027s resting place is Alta Mesa Memorial park and has adrian A. Basora as successor ?",
    "SerialNumber": "539",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/successor\u003e \u003chttp://dbpedia.org/resource/Adrian_A._Basora\u003e . ?uri \u003chttp://dbpedia.org/property/restingPlace\u003e \u003chttp://dbpedia.org/resource/Alta_Mesa_Memorial_Park\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/OfficeHolder\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "adrian A. Basora",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Adrian_A._Basora",
        "seq": "71,87"
      },
      {
        "label": "Alta Mesa Memorial park",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Alta_Mesa_Memorial_Park",
        "seq": "39,62"
      }
    ],
    "id": "6daa5758ac314e80929ed6583575c5f8",
    "predicate mapping": [
      {
        "label": "successor",
        "uri": "http://dbpedia.org/property/successor",
        "seq": "91,100",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "resting place",
        "uri": "http://dbpedia.org/property/restingPlace",
        "seq": "22,35",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "office holder",
        "uri": "http://dbpedia.org/ontology/OfficeHolder",
        "seq": "6,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the movie written by Monty Python and distributed by Cinema International Corporation ?",
    "SerialNumber": "540",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/distributor\u003e \u003chttp://dbpedia.org/resource/Cinema_International_Corporation\u003e . ?uri \u003chttp://dbpedia.org/property/writer\u003e \u003chttp://dbpedia.org/resource/Monty_Python\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Cinema International Corporation",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Cinema_International_Corporation",
        "seq": "58,90"
      },
      {
        "label": "Monty Python",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Monty_Python",
        "seq": "26,38"
      }
    ],
    "id": "22420b9ce00545229aecd57813393a38",
    "predicate mapping": [
      {
        "label": "distributed by",
        "uri": "http://dbpedia.org/ontology/distributor",
        "seq": "43,57",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "written by",
        "uri": "http://dbpedia.org/property/writer",
        "seq": "15,25",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "8",
    "question": "Which governor of Charles Willing byrd fought the battle of Siege of Fort Recovery ?",
    "SerialNumber": "541",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/battle\u003e \u003chttp://dbpedia.org/resource/Siege_of_Fort_Recovery\u003e . ?uri \u003chttp://dbpedia.org/property/governor\u003e \u003chttp://dbpedia.org/resource/Charles_Willing_Byrd\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Siege of Fort Recovery",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Siege_of_Fort_Recovery",
        "seq": "60,82"
      },
      {
        "label": "Charles Willing byrd",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Charles_Willing_Byrd",
        "seq": "18,38"
      }
    ],
    "id": "18cc0cb6c446411aba19e87c3d2cef99",
    "predicate mapping": [
      {
        "label": "battle",
        "uri": "http://dbpedia.org/ontology/battle",
        "seq": "50,56",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "governor",
        "uri": "http://dbpedia.org/property/governor",
        "seq": "6,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Which company owns Evraz ?",
    "SerialNumber": "543",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Evraz\u003e \u003chttp://dbpedia.org/ontology/owningCompany\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Evraz",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Evraz",
        "seq": "19,24"
      }
    ],
    "id": "86346cf018e9417da21aae023485460f",
    "predicate mapping": [
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/owningCompany",
        "seq": "6,13",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who is the leader of Panki block ?",
    "SerialNumber": "544",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Panki_block\u003e \u003chttp://dbpedia.org/ontology/leaderName\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Panki block",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Panki_block",
        "seq": "21,32"
      }
    ],
    "id": "3c5ec517b1a14c2bbccc65ce6c1db5c7",
    "predicate mapping": [
      {
        "label": "leader",
        "uri": "http://dbpedia.org/ontology/leaderName",
        "seq": "11,17",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which parent company of  Edsel was the first team of the 1967 Mexican Grand Prix ?",
    "SerialNumber": "545",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Edsel\u003e \u003chttp://dbpedia.org/property/parent\u003e ?uri. \u003chttp://dbpedia.org/resource/1967_Mexican_Grand_Prix\u003e \u003chttp://dbpedia.org/property/firstTeam\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Edsel",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Edsel",
        "seq": "25,30"
      },
      {
        "label": "1967 Mexican Grand Prix",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/1967_Mexican_Grand_Prix",
        "seq": "57,80"
      }
    ],
    "id": "d0a9f37f03c64ca2a96a688f3ac12798",
    "predicate mapping": [
      {
        "label": "parent",
        "uri": "http://dbpedia.org/property/parent",
        "seq": "6,12",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "first team",
        "uri": "http://dbpedia.org/property/firstTeam",
        "seq": "39,49",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "Name the company whose products\u0027s predecessor is Boeing Vertol CH-46 Sea Knight?",
    "SerialNumber": "546",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/predecessor\u003e \u003chttp://dbpedia.org/resource/Boeing_Vertol_CH-46_Sea_Knight\u003e . ?uri \u003chttp://dbpedia.org/property/products\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Company\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Boeing Vertol CH-46 Sea Knight",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Boeing_Vertol_CH-46_Sea_Knight",
        "seq": "49,79"
      }
    ],
    "id": "2de2ea8f7f994e38898f57b6b90b2088",
    "predicate mapping": [
      {
        "label": "predecessor",
        "uri": "http://dbpedia.org/ontology/predecessor",
        "seq": "34,45",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "products",
        "uri": "http://dbpedia.org/property/products",
        "seq": "23,31",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company",
        "seq": "9,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the species of Liger ?",
    "SerialNumber": "547",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Liger\u003e \u003chttp://dbpedia.org/ontology/species\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Liger",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Liger",
        "seq": "20,25"
      }
    ],
    "id": "c1231c9ac8174bc4bb544853d3faf6ca",
    "predicate mapping": [
      {
        "label": "species",
        "uri": "http://dbpedia.org/ontology/species",
        "seq": "9,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Name the line of the Vadodara Junction railway station which is also the  hub airport of the Pawan Hans?",
    "SerialNumber": "550",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Vadodara_Junction_railway_station\u003e \u003chttp://dbpedia.org/property/line\u003e ?uri. \u003chttp://dbpedia.org/resource/Pawan_Hans\u003e \u003chttp://dbpedia.org/ontology/hubAirport\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Vadodara Junction railway station",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Vadodara_Junction_railway_station",
        "seq": "21,54"
      },
      {
        "label": "Pawan Hans",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Pawan_Hans",
        "seq": "93,103"
      }
    ],
    "id": "1fddb6aae1e34017a5ef49ecfbd2f3bb",
    "predicate mapping": [
      {
        "label": "line",
        "uri": "http://dbpedia.org/property/line",
        "seq": "9,13",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "hub airport",
        "uri": "http://dbpedia.org/ontology/hubAirport",
        "seq": "74,85",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Which television shows has sound format as 5.1 surround?",
    "SerialNumber": "551",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/format\u003e \u003chttp://dbpedia.org/resource/5.1_surround_sound\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "5.1 surround",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/5.1_surround_sound",
        "seq": "43,46"
      }
    ],
    "id": "a043a59e39a94f1b804acd94a58801e2",
    "predicate mapping": [
      {
        "label": "format",
        "uri": "http://dbpedia.org/ontology/format",
        "seq": "33,39",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "6,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the TV show whose opening theme is Gary Portnoy and the subsequent work is Frasier?",
    "SerialNumber": "554",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/openingTheme\u003e \u003chttp://dbpedia.org/resource/Gary_Portnoy\u003e . ?uri \u003chttp://dbpedia.org/ontology/subsequentWork\u003e \u003chttp://dbpedia.org/resource/Frasier\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Gary Portnoy",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Gary_Portnoy",
        "seq": "40,52"
      },
      {
        "label": "Frasier",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Frasier",
        "seq": "80,87"
      }
    ],
    "id": "652f41e8f5324124af1f9e41d9127e5d",
    "predicate mapping": [
      {
        "label": "opening theme",
        "uri": "http://dbpedia.org/ontology/openingTheme",
        "seq": "23,36",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "subsequent work",
        "uri": "http://dbpedia.org/ontology/subsequentWork",
        "seq": "61,76",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "12,16",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Which president was served by someone whose lieutenant is Lewis Stuyvesant Chanler?",
    "SerialNumber": "555",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/lieutenant\u003e \u003chttp://dbpedia.org/resource/Lewis_Stuyvesant_Chanler\u003e . ?x \u003chttp://dbpedia.org/ontology/president\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Lewis Stuyvesant Chanler",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Lewis_Stuyvesant_Chanler",
        "seq": "58,82"
      }
    ],
    "id": "2a427a404ec84210b9342358d5cb81a4",
    "predicate mapping": [
      {
        "label": "lieutenant",
        "uri": "http://dbpedia.org/property/lieutenant",
        "seq": "44,54",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "president",
        "uri": "http://dbpedia.org/ontology/president",
        "seq": "6,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "7",
    "question": "Whose county seats are Mediolanum and History of Trier?",
    "SerialNumber": "557",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/ontology/capital\u003e \u003chttp://dbpedia.org/resource/Mediolanum\u003e . ?uri \u003chttp://dbpedia.org/ontology/capital\u003e \u003chttp://dbpedia.org/resource/History_of_Trier\u003e . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Mediolanum",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Mediolanum",
        "seq": "23,33"
      },
      {
        "label": "History of Trier",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/History_of_Trier",
        "seq": "38,54"
      }
    ],
    "id": "14657aede6af4c84b339a412d713119b",
    "predicate mapping": [
      {
        "label": "county seat",
        "uri": "http://dbpedia.org/ontology/capital",
        "seq": "6,17",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "county seat",
        "uri": "http://dbpedia.org/ontology/capital",
        "seq": "6,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "401",
    "question": "How many movies did Joel Schumacher direct?",
    "SerialNumber": "558",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/ontology/director\u003e \u003chttp://dbpedia.org/resource/Joel_Schumacher\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Joel Schumacher",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Joel_Schumacher",
        "seq": "20,35"
      }
    ],
    "id": "55a0f9a155d248a4b36850165c830f0b",
    "predicate mapping": [
      {
        "label": "direct",
        "uri": "http://dbpedia.org/ontology/director",
        "seq": "36,42",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who is the owner of Saumarez ?",
    "SerialNumber": "560",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Saumarez_(horse)\u003e \u003chttp://dbpedia.org/ontology/owner\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Saumarez",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Saumarez_(horse)",
        "seq": "20,28"
      }
    ],
    "id": "a100cb0681104c81aeaeb99a2e615d66",
    "predicate mapping": [
      {
        "label": "owner",
        "uri": "http://dbpedia.org/ontology/owner",
        "seq": "11,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What automobile engine\u0027s successor is BMW M40",
    "SerialNumber": "563",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/successor\u003e \u003chttp://dbpedia.org/resource/BMW_M40\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/AutomobileEngine\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "BMW M40",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/BMW_M40",
        "seq": "38,45"
      }
    ],
    "id": "9ea90a365f7c4673a2ae7ecd250d290b",
    "predicate mapping": [
      {
        "label": "successor",
        "uri": "http://dbpedia.org/property/successor",
        "seq": "25,34",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "automobile engine",
        "uri": "http://dbpedia.org/ontology/AutomobileEngine",
        "seq": "5,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which shareholder of Naval Air facility Adak is also the operator of New Sanno Hotel ?",
    "SerialNumber": "564",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/New_Sanno_Hotel\u003e \u003chttp://dbpedia.org/property/operator\u003e ?uri. \u003chttp://dbpedia.org/resource/Naval_Air_Facility_Adak\u003e \u003chttp://dbpedia.org/property/owner\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "New Sanno Hotel",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/New_Sanno_Hotel",
        "seq": "69,84"
      },
      {
        "label": "Naval Air facility Adak",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Naval_Air_Facility_Adak",
        "seq": "21,44"
      }
    ],
    "id": "e30c5fcc3147441587dae1c295b22f19",
    "predicate mapping": [
      {
        "label": "operator",
        "uri": "http://dbpedia.org/property/operator",
        "seq": "57,65",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "shareholder",
        "uri": "http://dbpedia.org/property/owner",
        "seq": "6,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "How many owners are there of things located in Alabama?",
    "SerialNumber": "565",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/city\u003e \u003chttp://dbpedia.org/resource/Alabama\u003e . ?x \u003chttp://dbpedia.org/ontology/owner\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Alabama",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Alabama",
        "seq": "47,54"
      }
    ],
    "id": "12381d3b6b434094988269dcdc1e8a46",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/city",
        "seq": "31,33",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "owners",
        "uri": "http://dbpedia.org/ontology/owner",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "11",
    "question": "What are the outflow of the lakes which also has one of the outflow as Congo River ?",
    "SerialNumber": "568",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/outflow\u003e \u003chttp://dbpedia.org/resource/Congo_River\u003e . ?x \u003chttp://dbpedia.org/ontology/outflow\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Congo River",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Congo_River",
        "seq": "71,82"
      }
    ],
    "id": "6b60ad1e840246a7a1e76df64a37be03",
    "predicate mapping": [
      {
        "label": "outflow",
        "uri": "http://dbpedia.org/property/outflow",
        "seq": "13,20",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "outflow",
        "uri": "http://dbpedia.org/ontology/outflow",
        "seq": "13,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which key person of Clinton Foundation is also the president of Jim Sasser ?",
    "SerialNumber": "570",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Clinton_Foundation\u003e \u003chttp://dbpedia.org/property/keyPeople\u003e ?uri. \u003chttp://dbpedia.org/resource/Jim_Sasser\u003e \u003chttp://dbpedia.org/ontology/president\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Clinton Foundation",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Clinton_Foundation",
        "seq": "20,38"
      },
      {
        "label": "Jim Sasser",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Jim_Sasser",
        "seq": "64,74"
      }
    ],
    "id": "1c39ad9fe6534d5ab15c4cdca5526643",
    "predicate mapping": [
      {
        "label": "key",
        "uri": "http://dbpedia.org/property/keyPeople",
        "seq": "6,9",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "president",
        "uri": "http://dbpedia.org/ontology/president",
        "seq": "51,60",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "What is the basketball team whose President\u0027s college is Brockport Golden Eagles?",
    "SerialNumber": "572",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/college\u003e \u003chttp://dbpedia.org/resource/Brockport_Golden_Eagles\u003e . ?uri \u003chttp://dbpedia.org/property/president\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/BasketballTeam\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Brockport Golden Eagles",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Brockport_Golden_Eagles",
        "seq": "57,80"
      }
    ],
    "id": "258d0ae4aaa94829ab2720cff3ef031c",
    "predicate mapping": [
      {
        "label": "college",
        "uri": "http://dbpedia.org/property/college",
        "seq": "46,53",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "President",
        "uri": "http://dbpedia.org/property/president",
        "seq": "34,43",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "basketball team",
        "uri": "http://dbpedia.org/ontology/BasketballTeam",
        "seq": "12,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "403",
    "question": "How many cities are around the sea into which the aegean sea flows?",
    "SerialNumber": "575",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { \u003chttp://dbpedia.org/resource/Aegean_Sea\u003e \u003chttp://dbpedia.org/ontology/outflow\u003e ?x . ?x \u003chttp://dbpedia.org/property/cities\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Sea\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "aegean sea",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Aegean_Sea",
        "seq": "50,60"
      }
    ],
    "id": "891f155dd9e14cdcac38afc45e4a869e",
    "predicate mapping": [
      {
        "label": "flows",
        "uri": "http://dbpedia.org/ontology/outflow",
        "seq": "61,66",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "cities",
        "uri": "http://dbpedia.org/property/cities",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "sea",
        "uri": "http://dbpedia.org/ontology/Sea",
        "seq": "31,34",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "Whose doctoral student is etienne bieler\\xc9tienne_Bi\\xe9ler",
    "SerialNumber": "578",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/doctoralStudent\u003e \u003chttp://dbpedia.org/resource/Étienne_Biéler\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "etienne bieler",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Étienne_Biéler",
        "seq": "40,41"
      }
    ],
    "id": "59ee66fc1eb648ff9ca0e751825f1de1",
    "predicate mapping": [
      {
        "label": "doctoral student",
        "uri": "http://dbpedia.org/ontology/doctoralStudent",
        "seq": "6,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "what awards have been giving to Muhammad Yunus?",
    "SerialNumber": "580",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Muhammad_Yunus\u003e \u003chttp://dbpedia.org/ontology/award\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Muhammad Yunus",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Muhammad_Yunus",
        "seq": "32,46"
      }
    ],
    "id": "cf3c2cbbbde94259a9b3d4194d90ac28",
    "predicate mapping": [
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/award",
        "seq": "5,11",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "List the successor of successor of Hayden, Stone \u0026 Co.",
    "SerialNumber": "581",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Hayden,_Stone_\u0026_Co.\u003e \u003chttp://dbpedia.org/ontology/successor\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/successor\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Hayden, Stone \u0026 Co.",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Hayden,_Stone_\u0026_Co.",
        "seq": "35,54"
      }
    ],
    "id": "f93b26eb3cf04a5e8664ae62dd6b5dfb",
    "predicate mapping": [
      {
        "label": "successor",
        "uri": "http://dbpedia.org/ontology/successor",
        "seq": "9,18",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "successor",
        "uri": "http://dbpedia.org/ontology/successor",
        "seq": "9,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "Who are the people which ITV(TV network) has employed?",
    "SerialNumber": "583",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/employer\u003e \u003chttp://dbpedia.org/resource/ITV_(TV_network)\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "ITV",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/ITV_(TV_network)",
        "seq": "25,28"
      }
    ],
    "id": "900ef117ddb54ad0b9686cde649bc3d0",
    "predicate mapping": [
      {
        "label": "employed",
        "uri": "http://dbpedia.org/property/employer",
        "seq": "45,53",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "405",
    "question": "How many teams have LA kings players in them currently?",
    "SerialNumber": "586",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/formerTeam\u003e \u003chttp://dbpedia.org/resource/Los_Angeles_Kings\u003e . ?x \u003chttp://dbpedia.org/ontology/team\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/SportsTeam\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "LA kings",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Los_Angeles_Kings",
        "seq": "20,28"
      }
    ],
    "id": "1303bcf1aff546deb0445accfefd890d",
    "predicate mapping": [
      {
        "label": "teams",
        "uri": "http://dbpedia.org/ontology/formerTeam",
        "seq": "9,14",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/team",
        "seq": "9,13",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/SportsTeam",
        "seq": "9,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who is the coach of England national under-21 football team ?",
    "SerialNumber": "588",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/England_national_under-21_football_team\u003e \u003chttp://dbpedia.org/property/coach\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "England national under-21 football team",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/England_national_under-21_football_team",
        "seq": "20,59"
      }
    ],
    "id": "5bc08a17c2874dc7b7711f0329ab4fb2",
    "predicate mapping": [
      {
        "label": "coach",
        "uri": "http://dbpedia.org/property/coach",
        "seq": "11,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name an airline with hub airports as Los Angeles International Airport and San Francisco International Airport?",
    "SerialNumber": "589",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/hubAirport\u003e \u003chttp://dbpedia.org/resource/Los_Angeles_International_Airport\u003e . ?uri \u003chttp://dbpedia.org/property/hubs\u003e \u003chttp://dbpedia.org/resource/San_Francisco_International_Airport\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Airline\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Los Angeles International Airport",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Los_Angeles_International_Airport",
        "seq": "37,70"
      },
      {
        "label": "San Francisco International Airport",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/San_Francisco_International_Airport",
        "seq": "75,110"
      }
    ],
    "id": "bafd650bf447413fa5e2c8f3f6435da8",
    "predicate mapping": [
      {
        "label": "hub airport",
        "uri": "http://dbpedia.org/ontology/hubAirport",
        "seq": "21,32",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "hub",
        "uri": "http://dbpedia.org/property/hubs",
        "seq": "21,24",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "airline",
        "uri": "http://dbpedia.org/ontology/Airline",
        "seq": "8,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the region of Tom Perriello ?",
    "SerialNumber": "590",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Tom_Perriello\u003e \u003chttp://dbpedia.org/ontology/region\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Tom Perriello",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Tom_Perriello",
        "seq": "22,35"
      }
    ],
    "id": "249843fe379e4bc29f4510be1e62d055",
    "predicate mapping": [
      {
        "label": "region",
        "uri": "http://dbpedia.org/ontology/region",
        "seq": "12,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What is the label of the album whose previous work is Waterfall?",
    "SerialNumber": "591",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/previousWork\u003e \u003chttp://dbpedia.org/resource/Waterfall_(album)\u003e . ?x \u003chttp://dbpedia.org/property/label\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Album\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Waterfall",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Waterfall_(album)",
        "seq": "54,63"
      }
    ],
    "id": "b8477c9f0ba248149197ed898ea97d36",
    "predicate mapping": [
      {
        "label": "previous work",
        "uri": "http://dbpedia.org/ontology/previousWork",
        "seq": "37,50",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "label",
        "uri": "http://dbpedia.org/property/label",
        "seq": "12,17",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "album",
        "uri": "http://dbpedia.org/ontology/Album",
        "seq": "25,30",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Where is the assembly of Plymouth Savoy, and where Special 26 was recorded?",
    "SerialNumber": "593",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Plymouth_Savoy\u003e \u003chttp://dbpedia.org/ontology/assembly\u003e ?uri. \u003chttp://dbpedia.org/resource/Special_26\u003e \u003chttp://dbpedia.org/property/recorded\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Plymouth Savoy",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Plymouth_Savoy",
        "seq": "25,39"
      },
      {
        "label": "Special 26",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Special_26",
        "seq": "51,61"
      }
    ],
    "id": "56f16d1174db4f37b05d59f669705539",
    "predicate mapping": [
      {
        "label": "assembly",
        "uri": "http://dbpedia.org/ontology/assembly",
        "seq": "13,21",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "recorded",
        "uri": "http://dbpedia.org/property/recorded",
        "seq": "66,74",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Who owns the railway line which goes through the Newark Station?",
    "SerialNumber": "594",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Newark_station_(Delaware)\u003e \u003chttp://dbpedia.org/property/line\u003e ?x . ?x \u003chttp://dbpedia.org/property/owner\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Newark Station",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Newark_station_(Delaware)",
        "seq": "49,63"
      }
    ],
    "id": "50ecdb7b02db481399e126e0658583d5",
    "predicate mapping": [
      {
        "label": "line",
        "uri": "http://dbpedia.org/property/line",
        "seq": "21,25",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "owns",
        "uri": "http://dbpedia.org/property/owner",
        "seq": "4,8",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What is the branch of the politicians whose governor is Bill Clements?",
    "SerialNumber": "596",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/governor\u003e \u003chttp://dbpedia.org/resource/Bill_Clements\u003e . ?x \u003chttp://dbpedia.org/property/branch\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Politician\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Bill Clements",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Bill_Clements",
        "seq": "56,69"
      }
    ],
    "id": "85d67513bd1b4291a9c48017ba2c6f30",
    "predicate mapping": [
      {
        "label": "governor",
        "uri": "http://dbpedia.org/ontology/governor",
        "seq": "44,52",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "branch",
        "uri": "http://dbpedia.org/property/branch",
        "seq": "12,18",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "politician",
        "uri": "http://dbpedia.org/ontology/Politician",
        "seq": "26,36",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Is National Archaeological Museum (Florence) the museum of Chimera of Arezzo?",
    "SerialNumber": "597",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Chimera_of_Arezzo\u003e \u003chttp://dbpedia.org/property/museum\u003e \u003chttp://dbpedia.org/resource/National_Archaeological_Museum_(Florence)\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Chimera of Arezzo",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Chimera_of_Arezzo",
        "seq": "59,76"
      },
      {
        "label": "National Archaeological Museum (Florence)",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/National_Archaeological_Museum_(Florence)",
        "seq": "3,44"
      }
    ],
    "id": "78629f144207411aaaf8e5d9dd60022e",
    "predicate mapping": [
      {
        "label": "Museum",
        "uri": "http://dbpedia.org/property/museum",
        "seq": "27,33",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who are the associate musical artists of Dalma Kovcs ?",
    "SerialNumber": "598",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Dalma_Kovács\u003e \u003chttp://dbpedia.org/ontology/associatedMusicalArtist\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Dalma Kovcs",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Dalma_Kovács",
        "seq": "41,52"
      }
    ],
    "id": "390b74bcdbcb43668fa738a6a5ae5bc9",
    "predicate mapping": [
      {
        "label": "associate musical",
        "uri": "http://dbpedia.org/ontology/associatedMusicalArtist",
        "seq": "12,29",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "8",
    "question": "Whichd officer\u0027s final resting place is North Bend, ohio and belongs to Indiana Territory branch ",
    "SerialNumber": "599",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/restingplace\u003e \u003chttp://dbpedia.org/resource/North_Bend,_Ohio\u003e . ?uri \u003chttp://dbpedia.org/property/branch\u003e \u003chttp://dbpedia.org/resource/Indiana_Territory\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "North Bend, ohio",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/North_Bend,_Ohio",
        "seq": "40,56"
      },
      {
        "label": "Indiana Territory",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Indiana_Territory",
        "seq": "72,89"
      }
    ],
    "id": "e2894724dd3947e481b68dd558dced13",
    "predicate mapping": [
      {
        "label": "resting place",
        "uri": "http://dbpedia.org/property/restingplace",
        "seq": "23,36",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "branch",
        "uri": "http://dbpedia.org/property/branch",
        "seq": "90,96",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "What is the series of the book which is a subsequent work of Blade Runner 2: The Edge of Human ?",
    "SerialNumber": "601",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Blade_Runner_2:_The_Edge_of_Human\u003e \u003chttp://dbpedia.org/ontology/subsequentWork\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/series\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Book\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Blade Runner 2: The Edge of Human",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Blade_Runner_2:_The_Edge_of_Human",
        "seq": "61,94"
      }
    ],
    "id": "b2ca768fe1b54426a2d0413c0f7c42f0",
    "predicate mapping": [
      {
        "label": "subsequent work",
        "uri": "http://dbpedia.org/ontology/subsequentWork",
        "seq": "42,57",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "series",
        "uri": "http://dbpedia.org/ontology/series",
        "seq": "12,18",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "book",
        "uri": "http://dbpedia.org/ontology/Book",
        "seq": "26,30",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "President of Ghana is the leader title of which country?",
    "SerialNumber": "603",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/leaderTitle\u003e \u003chttp://dbpedia.org/resource/President_of_Ghana\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Country\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "President of Ghana",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/President_of_Ghana",
        "seq": "0,18"
      }
    ],
    "id": "4ec3f228ceb342d1b160cd91a06ac835",
    "predicate mapping": [
      {
        "label": "leader title",
        "uri": "http://dbpedia.org/property/leaderTitle",
        "seq": "26,38",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/Country",
        "seq": "48,55",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Give me all commanders which had an important role in both, the Battle of Fort Stephenson and Battle of the Thames?",
    "SerialNumber": "604",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Battle_of_Fort_Stephenson\u003e \u003chttp://dbpedia.org/ontology/commander\u003e ?uri. \u003chttp://dbpedia.org/resource/Battle_of_the_Thames\u003e \u003chttp://dbpedia.org/ontology/commander\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Battle of Fort Stephenson",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Battle_of_Fort_Stephenson",
        "seq": "64,89"
      },
      {
        "label": "Battle of the Thames",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Battle_of_the_Thames",
        "seq": "94,114"
      }
    ],
    "id": "462864a5cac04f65bde1144083b52815",
    "predicate mapping": [
      {
        "label": "commander",
        "uri": "http://dbpedia.org/ontology/commander",
        "seq": "12,21",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "commander",
        "uri": "http://dbpedia.org/ontology/commander",
        "seq": "12,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the commander of Battle of Brownstown ?",
    "SerialNumber": "607",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Battle_of_Brownstown\u003e \u003chttp://dbpedia.org/ontology/commander\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Battle of Brownstown",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Battle_of_Brownstown",
        "seq": "25,45"
      }
    ],
    "id": "28908ee4e3754d90b904645e4f1156b2",
    "predicate mapping": [
      {
        "label": "commander",
        "uri": "http://dbpedia.org/ontology/commander",
        "seq": "12,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What religion\u0027s politicians are in the Malaysian Chinese association?",
    "SerialNumber": "608",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/party\u003e \u003chttp://dbpedia.org/resource/Malaysian_Chinese_Association\u003e . ?x \u003chttp://dbpedia.org/ontology/religion\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Politician\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Malaysian Chinese association",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Malaysian_Chinese_Association",
        "seq": "39,68"
      }
    ],
    "id": "d5e7fe8c8df14e7884592ea07357f9fa",
    "predicate mapping": [
      {
        "label": "are",
        "uri": "http://dbpedia.org/ontology/party",
        "seq": "28,31",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion",
        "seq": "5,13",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "politician",
        "uri": "http://dbpedia.org/ontology/Politician",
        "seq": "16,26",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who developed the programming languages designed by Rob Pike?",
    "SerialNumber": "610",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/designer\u003e \u003chttp://dbpedia.org/resource/Rob_Pike\u003e . ?x \u003chttp://dbpedia.org/ontology/developer\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/ProgrammingLanguage\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Rob Pike",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Rob_Pike",
        "seq": "52,60"
      }
    ],
    "id": "d7d071a722434a7282752c8442ba5572",
    "predicate mapping": [
      {
        "label": "designed",
        "uri": "http://dbpedia.org/ontology/designer",
        "seq": "40,48",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "developed",
        "uri": "http://dbpedia.org/ontology/developer",
        "seq": "4,13",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "programming language",
        "uri": "http://dbpedia.org/ontology/ProgrammingLanguage",
        "seq": "18,38",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "List down the prime ministers of Peter Thorneycroft ?",
    "SerialNumber": "611",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Peter_Thorneycroft\u003e \u003chttp://dbpedia.org/ontology/primeMinister\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Peter Thorneycroft",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Peter_Thorneycroft",
        "seq": "33,51"
      }
    ],
    "id": "1894061d4693487abbac158ae035218c",
    "predicate mapping": [
      {
        "label": "prime minister",
        "uri": "http://dbpedia.org/ontology/primeMinister",
        "seq": "14,28",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What are the non-fiction topics in the books whose authors is Terry Pratchett?",
    "SerialNumber": "612",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/author\u003e \u003chttp://dbpedia.org/resource/Terry_Pratchett\u003e . ?x \u003chttp://dbpedia.org/ontology/nonFictionSubject\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Book\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Terry Pratchett",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Terry_Pratchett",
        "seq": "62,77"
      }
    ],
    "id": "fa79374cc5624b72992b576863b1b839",
    "predicate mapping": [
      {
        "label": "authors",
        "uri": "http://dbpedia.org/property/author",
        "seq": "51,58",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "non-fiction",
        "uri": "http://dbpedia.org/ontology/nonFictionSubject",
        "seq": "13,24",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "book",
        "uri": "http://dbpedia.org/ontology/Book",
        "seq": "39,43",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "List the newspapers which has headquarters in Stockholm?",
    "SerialNumber": "614",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/headquarters\u003e \u003chttp://dbpedia.org/resource/Stockholm\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Newspaper\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Stockholm",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Stockholm",
        "seq": "46,55"
      }
    ],
    "id": "dd4fd682874b4c23bf5f60ebc119a98d",
    "predicate mapping": [
      {
        "label": "headquarters",
        "uri": "http://dbpedia.org/property/headquarters",
        "seq": "30,42",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "newspaper",
        "uri": "http://dbpedia.org/ontology/Newspaper",
        "seq": "9,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which president of Lance Adams-Schneider had nickname Daniel O\u0027Regan ?",
    "SerialNumber": "615",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Lance_Adams-Schneider\u003e \u003chttp://dbpedia.org/property/president\u003e ?uri. \u003chttp://dbpedia.org/resource/Daniel_O\u0027Regan\u003e \u003chttp://dbpedia.org/property/nickname\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Lance Adams-Schneider",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Lance_Adams-Schneider",
        "seq": "19,40"
      },
      {
        "label": "Daniel O\u0027Regan",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Daniel_O\u0027Regan",
        "seq": "54,68"
      }
    ],
    "id": "d4dde19bfcd949abbdde426e8ebfb8d9",
    "predicate mapping": [
      {
        "label": "president",
        "uri": "http://dbpedia.org/property/president",
        "seq": "6,15",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "nickname",
        "uri": "http://dbpedia.org/property/nickname",
        "seq": "45,53",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "List the software using C++ as programming language and licence is Software as a service?",
    "SerialNumber": "616",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/programmingLanguage\u003e \u003chttp://dbpedia.org/resource/C++\u003e . ?uri \u003chttp://dbpedia.org/ontology/license\u003e \u003chttp://dbpedia.org/resource/Software_as_a_service\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Software\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "C++",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/C++",
        "seq": "24,27"
      },
      {
        "label": "Software as a service",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Software_as_a_service",
        "seq": "67,88"
      }
    ],
    "id": "a1df4f7d07df497f8e7ddbd6643a6ea2",
    "predicate mapping": [
      {
        "label": "programming language",
        "uri": "http://dbpedia.org/property/programmingLanguage",
        "seq": "31,51",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "licence",
        "uri": "http://dbpedia.org/ontology/license",
        "seq": "56,63",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "software",
        "uri": "http://dbpedia.org/ontology/Software",
        "seq": "9,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "list some companies founded by Jim Harris.",
    "SerialNumber": "617",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/foundedBy\u003e \u003chttp://dbpedia.org/resource/Jim_Harris_(entrepreneur)\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jim Harris",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Jim_Harris_(entrepreneur)",
        "seq": "31,41"
      }
    ],
    "id": "f9d991647aae449285e9d5867ea64911",
    "predicate mapping": [
      {
        "label": "founded by",
        "uri": "http://dbpedia.org/ontology/foundedBy",
        "seq": "20,30",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "What has been founded in the state that Denton county, Texas is a part of? ",
    "SerialNumber": "618",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/part\u003e \u003chttp://dbpedia.org/resource/Denton_County,_Texas\u003e . ?uri \u003chttp://dbpedia.org/ontology/foundationPlace\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Denton county, Texas",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Denton_County,_Texas",
        "seq": "40,60"
      }
    ],
    "id": "eb46e7dfdd9244a1b5455ccdf1a5abb6",
    "predicate mapping": [
      {
        "label": "part",
        "uri": "http://dbpedia.org/ontology/part",
        "seq": "66,70",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "founded",
        "uri": "http://dbpedia.org/ontology/foundationPlace",
        "seq": "14,21",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Which countries militaries fought the SFOR battle?",
    "SerialNumber": "619",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/battles\u003e \u003chttp://dbpedia.org/resource/SFOR\u003e . ?x \u003chttp://dbpedia.org/ontology/battle\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MilitaryPerson\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "SFOR",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/SFOR",
        "seq": "38,42"
      }
    ],
    "id": "a22e77732ec340b89b2da8d21bc2d89a",
    "predicate mapping": [
      {
        "label": "battle",
        "uri": "http://dbpedia.org/property/battles",
        "seq": "43,49",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "battle",
        "uri": "http://dbpedia.org/ontology/battle",
        "seq": "43,49",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "militaries",
        "uri": "http://dbpedia.org/ontology/MilitaryPerson",
        "seq": "16,26",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What is the awards won by the producer of From the Life of the Marionettes ?",
    "SerialNumber": "620",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/From_the_Life_of_the_Marionettes\u003e \u003chttp://dbpedia.org/ontology/producer\u003e ?x . ?x \u003chttp://dbpedia.org/property/awards\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "From the Life of the Marionettes",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/From_the_Life_of_the_Marionettes",
        "seq": "42,74"
      }
    ],
    "id": "068c624211d44e12aee8f503946a20b0",
    "predicate mapping": [
      {
        "label": "producer",
        "uri": "http://dbpedia.org/ontology/producer",
        "seq": "30,38",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards",
        "seq": "12,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "How many writers worked on the album Main Course?",
    "SerialNumber": "622",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/album\u003e \u003chttp://dbpedia.org/resource/Main_Course\u003e . ?x \u003chttp://dbpedia.org/property/writer\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Main Course",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Main_Course",
        "seq": "37,48"
      }
    ],
    "id": "2d5d4a8626d54ff58754ce28b3036910",
    "predicate mapping": [
      {
        "label": "album",
        "uri": "http://dbpedia.org/property/album",
        "seq": "31,36",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "writers",
        "uri": "http://dbpedia.org/property/writer",
        "seq": "9,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "107",
    "question": "Count the number of shows whose creators are Jerry Seinfeld and Larry David?",
    "SerialNumber": "623",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?uri \u003chttp://dbpedia.org/ontology/creator\u003e \u003chttp://dbpedia.org/resource/Jerry_Seinfeld\u003e . ?uri \u003chttp://dbpedia.org/ontology/creator\u003e \u003chttp://dbpedia.org/resource/Larry_David\u003e} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jerry Seinfeld",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Jerry_Seinfeld",
        "seq": "45,59"
      },
      {
        "label": "Larry David",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Larry_David",
        "seq": "64,75"
      }
    ],
    "id": "1bbfeeb6913d4de6a7e96c9a64ec101f",
    "predicate mapping": [
      {
        "label": "creators",
        "uri": "http://dbpedia.org/ontology/creator",
        "seq": "32,40",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "creators",
        "uri": "http://dbpedia.org/ontology/creator",
        "seq": "32,40",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "What is the television show whose company is Playtone and written by Erik Jendresen?",
    "SerialNumber": "625",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/company\u003e \u003chttp://dbpedia.org/resource/Playtone\u003e . ?uri \u003chttp://dbpedia.org/property/writer\u003e \u003chttp://dbpedia.org/resource/Erik_Jendresen\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Playtone",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Playtone",
        "seq": "45,53"
      },
      {
        "label": "Erik Jendresen",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Erik_Jendresen",
        "seq": "69,83"
      }
    ],
    "id": "162e1b03aabf4dec9809ad4bd74fbbde",
    "predicate mapping": [
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/company",
        "seq": "34,41",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "written by",
        "uri": "http://dbpedia.org/property/writer",
        "seq": "58,68",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "12,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which office holder allegiance is Colony of Virginia and was has a wife named Dolley Madison ?",
    "SerialNumber": "626",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/spouse\u003e \u003chttp://dbpedia.org/resource/Dolley_Madison\u003e . ?uri \u003chttp://dbpedia.org/property/allegiance\u003e \u003chttp://dbpedia.org/resource/Colony_of_Virginia\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/OfficeHolder\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Dolley Madison",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Dolley_Madison",
        "seq": "78,92"
      },
      {
        "label": "Colony of Virginia",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Colony_of_Virginia",
        "seq": "34,52"
      }
    ],
    "id": "c8c8394ec36c4c9eb2ab8e1fb8c14441",
    "predicate mapping": [
      {
        "label": "wife",
        "uri": "http://dbpedia.org/property/spouse",
        "seq": "67,71",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "allegiance",
        "uri": "http://dbpedia.org/property/allegiance",
        "seq": "20,30",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "office holder",
        "uri": "http://dbpedia.org/ontology/OfficeHolder",
        "seq": "6,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "111",
    "question": "How many broadcast area of the television stations exists whose broadcast area is Rodrigues ?",
    "SerialNumber": "627",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/broadcastArea\u003e \u003chttp://dbpedia.org/resource/Rodrigues\u003e . ?x \u003chttp://dbpedia.org/property/broadcastArea\u003e ?uri }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Rodrigues",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Rodrigues",
        "seq": "82,91"
      }
    ],
    "id": "50af4130157947afa9979e302f6247f8",
    "predicate mapping": [
      {
        "label": "broadcast area",
        "uri": "http://dbpedia.org/property/broadcastArea",
        "seq": "9,23",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "broadcast area",
        "uri": "http://dbpedia.org/property/broadcastArea",
        "seq": "9,23",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Which company is the parent company of Chevrolet Spark ?",
    "SerialNumber": "631",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Chevrolet_Spark\u003e \u003chttp://dbpedia.org/property/parentCompany\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Chevrolet Spark",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Chevrolet_Spark",
        "seq": "39,54"
      }
    ],
    "id": "d43e1ffd1be04f37bd53e99b819bcd08",
    "predicate mapping": [
      {
        "label": "parent company",
        "uri": "http://dbpedia.org/property/parentCompany",
        "seq": "21,35",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "Which stadium\u0027s operator works in the Pepsi Center?",
    "SerialNumber": "633",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/occupation\u003e \u003chttp://dbpedia.org/resource/Pepsi_Center\u003e . ?uri \u003chttp://dbpedia.org/ontology/operator\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Pepsi Center",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Pepsi_Center",
        "seq": "38,50"
      }
    ],
    "id": "6506ce80b6da4014a695dd37684fd858",
    "predicate mapping": [
      {
        "label": "work",
        "uri": "http://dbpedia.org/ontology/occupation",
        "seq": "25,29",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "operator",
        "uri": "http://dbpedia.org/ontology/operator",
        "seq": "16,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "Whose deputy is Neil Brown?",
    "SerialNumber": "638",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/deputy\u003e \u003chttp://dbpedia.org/resource/Neil_Brown_(Australian_politician)\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Neil Brown",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Neil_Brown_(Australian_politician)",
        "seq": "16,26"
      }
    ],
    "id": "52c67daa68c74c3aba9e745ba14b242c",
    "predicate mapping": [
      {
        "label": "deputy",
        "uri": "http://dbpedia.org/property/deputy",
        "seq": "6,12",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who founded the Not on our Watch NGO?",
    "SerialNumber": "639",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Not_on_Our_Watch_(organization)\u003e \u003chttp://dbpedia.org/ontology/foundedBy\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Not on our Watch",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Not_on_Our_Watch_(organization)",
        "seq": "16,32"
      }
    ],
    "id": "2ae88829677d41d4aea8ccfc94157dc9",
    "predicate mapping": [
      {
        "label": "founded",
        "uri": "http://dbpedia.org/ontology/foundedBy",
        "seq": "4,11",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who first ascented a mountain of Mount Hoffmann ?",
    "SerialNumber": "640",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Mount_Hoffmann\u003e \u003chttp://dbpedia.org/ontology/firstAscentPerson\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Mount Hoffmann",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Mount_Hoffmann",
        "seq": "33,47"
      }
    ],
    "id": "689d2f8f512742b78ba168d386e52220",
    "predicate mapping": [
      {
        "label": "ascented",
        "uri": "http://dbpedia.org/ontology/firstAscentPerson",
        "seq": "10,18",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "11",
    "question": "List the broadcast area of the TV stations which also serves in Agalga ?",
    "SerialNumber": "641",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/broadcastArea\u003e \u003chttp://dbpedia.org/resource/Agaléga\u003e . ?x \u003chttp://dbpedia.org/property/broadcastArea\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Agalga",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Agaléga",
        "seq": "64,70"
      }
    ],
    "id": "8d253335f3354509a31f7348a91ae3e5",
    "predicate mapping": [
      {
        "label": "broadcast area",
        "uri": "http://dbpedia.org/ontology/broadcastArea",
        "seq": "9,23",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "broadcast area",
        "uri": "http://dbpedia.org/property/broadcastArea",
        "seq": "9,23",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which operating system provider of LG Optimus Vu is also the employer of Manu Cornet ?",
    "SerialNumber": "642",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/LG_Optimus_Vu\u003e \u003chttp://dbpedia.org/ontology/operatingSystem\u003e ?uri. \u003chttp://dbpedia.org/resource/Manu_Cornet\u003e \u003chttp://dbpedia.org/property/employer\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "LG Optimus Vu",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/LG_Optimus_Vu",
        "seq": "35,48"
      },
      {
        "label": "Manu Cornet",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Manu_Cornet",
        "seq": "73,84"
      }
    ],
    "id": "61660d3107614a2d8f76e7dfac844a7b",
    "predicate mapping": [
      {
        "label": "operating system",
        "uri": "http://dbpedia.org/ontology/operatingSystem",
        "seq": "6,22",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "employer",
        "uri": "http://dbpedia.org/property/employer",
        "seq": "61,69",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "405",
    "question": "In how many countries do the rivers start which end at the Caspian Sea?",
    "SerialNumber": "649",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/riverMouth\u003e \u003chttp://dbpedia.org/resource/Caspian_Sea\u003e . ?x \u003chttp://dbpedia.org/ontology/sourceCountry\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Country\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Caspian Sea",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Caspian_Sea",
        "seq": "59,70"
      }
    ],
    "id": "c5e369b698d4499a92beac8371b73491",
    "predicate mapping": [
      {
        "label": "rivers",
        "uri": "http://dbpedia.org/ontology/riverMouth",
        "seq": "29,35",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "countries",
        "uri": "http://dbpedia.org/ontology/sourceCountry",
        "seq": "12,21",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "countries",
        "uri": "http://dbpedia.org/ontology/Country",
        "seq": "12,21",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What was founded by Congress of Industrial Organizations ?",
    "SerialNumber": "650",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Congress_of_Industrial_Organizations\u003e \u003chttp://dbpedia.org/property/founded\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Congress of Industrial Organizations",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Congress_of_Industrial_Organizations",
        "seq": "20,56"
      }
    ],
    "id": "b39e52f81f1a4c8db50b35e3a82ebb1d",
    "predicate mapping": [
      {
        "label": "was founded by",
        "uri": "http://dbpedia.org/property/founded",
        "seq": "5,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who are the former partners of the figure skaters whose performance have been choreographed by Catarina Lindgren in the past?",
    "SerialNumber": "651",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/formerChoreographer\u003e \u003chttp://dbpedia.org/resource/Catarina_Lindgren\u003e . ?x \u003chttp://dbpedia.org/ontology/formerPartner\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/FigureSkater\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Catarina Lindgren",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Catarina_Lindgren",
        "seq": "95,112"
      }
    ],
    "id": "be5e96ca6b8e4b3cbda144341ad8892e",
    "predicate mapping": [
      {
        "label": "choreographed",
        "uri": "http://dbpedia.org/ontology/formerChoreographer",
        "seq": "78,91",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "former partner",
        "uri": "http://dbpedia.org/ontology/formerPartner",
        "seq": "12,26",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "figure skater",
        "uri": "http://dbpedia.org/ontology/FigureSkater",
        "seq": "35,48",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Which holy things canonized John of Damascus?",
    "SerialNumber": "652",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/John_of_Damascus\u003e \u003chttp://dbpedia.org/ontology/canonizedBy\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "John of Damascus",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/John_of_Damascus",
        "seq": "28,44"
      }
    ],
    "id": "e9207f57106645a098206a135438489b",
    "predicate mapping": [
      {
        "label": "canonized",
        "uri": "http://dbpedia.org/ontology/canonizedBy",
        "seq": "18,27",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Is Pixar Canada a subsidiary of Pixar?",
    "SerialNumber": "655",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Pixar\u003e \u003chttp://dbpedia.org/ontology/subsidiary\u003e \u003chttp://dbpedia.org/resource/Pixar_Canada\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Pixar",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Pixar",
        "seq": "3,15"
      },
      {
        "label": "Pixar Canada ",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Pixar_Canada",
        "seq": "3,15"
      }
    ],
    "id": "d278080949bc4004b75ff345c547a211",
    "predicate mapping": [
      {
        "label": "subsidiary",
        "uri": "http://dbpedia.org/ontology/subsidiary",
        "seq": "18,28",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which TV show is related to The Sarah Jane Adventures and theme music is composed by  Ron Grainer?",
    "SerialNumber": "660",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/related\u003e \u003chttp://dbpedia.org/resource/The_Sarah_Jane_Adventures\u003e . ?uri \u003chttp://dbpedia.org/property/themeMusicComposer\u003e \u003chttp://dbpedia.org/resource/Ron_Grainer\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "The Sarah Jane Adventures",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Sarah_Jane_Adventures",
        "seq": "28,53"
      },
      {
        "label": "Ron Grainer",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ron_Grainer",
        "seq": "86,97"
      }
    ],
    "id": "afaeb0eb33ff41d5be722b4859f82618",
    "predicate mapping": [
      {
        "label": "related",
        "uri": "http://dbpedia.org/ontology/related",
        "seq": "17,24",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "composed",
        "uri": "http://dbpedia.org/property/themeMusicComposer",
        "seq": "73,81",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "9,13",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "List the notable work of David Isaacs (writer)?",
    "SerialNumber": "661",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/David_Isaacs_(writer)\u003e \u003chttp://dbpedia.org/ontology/notableWork\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "David Isaacs",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/David_Isaacs_(writer)",
        "seq": "25,37"
      }
    ],
    "id": "47315c1388d2459d9fa1ecc1723ffcf6",
    "predicate mapping": [
      {
        "label": "notable work",
        "uri": "http://dbpedia.org/ontology/notableWork",
        "seq": "9,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "Who was in military unit which played the role of Air interdiction?",
    "SerialNumber": "662",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/role\u003e \u003chttp://dbpedia.org/resource/Air_interdiction\u003e . ?uri \u003chttp://dbpedia.org/ontology/militaryUnit\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Air interdiction",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Air_interdiction",
        "seq": "50,66"
      }
    ],
    "id": "f6b72115e52e4c26983c7be44e8e1df8",
    "predicate mapping": [
      {
        "label": "role",
        "uri": "http://dbpedia.org/property/role",
        "seq": "42,46",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "military unit",
        "uri": "http://dbpedia.org/ontology/militaryUnit",
        "seq": "11,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Tirana is the largest city of which country?",
    "SerialNumber": "664",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/largestCity\u003e \u003chttp://dbpedia.org/resource/Tirana\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Country\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Tirana",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Tirana",
        "seq": "0,6"
      }
    ],
    "id": "2bf7c4d882ac4bdca78ac99d19625b3b",
    "predicate mapping": [
      {
        "label": "largest city",
        "uri": "http://dbpedia.org/ontology/largestCity",
        "seq": "14,26",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/Country",
        "seq": "36,43",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "List the movies whose music composer is often associated with Jon and Vangelis.",
    "SerialNumber": "665",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/associatedActs\u003e \u003chttp://dbpedia.org/resource/Jon_and_Vangelis\u003e . ?uri \u003chttp://dbpedia.org/ontology/musicComposer\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jon and Vangelis",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Jon_and_Vangelis",
        "seq": "62,78"
      }
    ],
    "id": "b9e8a704d52448cfa0def79568e79d2a",
    "predicate mapping": [
      {
        "label": "associated",
        "uri": "http://dbpedia.org/property/associatedActs",
        "seq": "46,56",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "music composer",
        "uri": "http://dbpedia.org/ontology/musicComposer",
        "seq": "22,36",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "What is the area of the broadcast network which has the affiliation with 9TV?",
    "SerialNumber": "668",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/9TV\u003e \u003chttp://dbpedia.org/property/affiliation\u003e ?x . ?x \u003chttp://dbpedia.org/property/area\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/BroadcastNetwork\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "9TV",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/9TV",
        "seq": "73,76"
      }
    ],
    "id": "7db0553af6fd43c3b91d8767f3add3f3",
    "predicate mapping": [
      {
        "label": "affiliation",
        "uri": "http://dbpedia.org/property/affiliation",
        "seq": "56,67",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "area",
        "uri": "http://dbpedia.org/property/area",
        "seq": "12,16",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "broadcast network",
        "uri": "http://dbpedia.org/ontology/BroadcastNetwork",
        "seq": "24,41",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Was the Army Air Corps honored for the battle of Iraq?",
    "SerialNumber": "669",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Army_Air_Corps_(United_Kingdom)\u003e \u003chttp://dbpedia.org/property/battleHonours\u003e \u003chttp://dbpedia.org/resource/Iraq\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Army Air Corps",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Army_Air_Corps_(United_Kingdom)",
        "seq": "8,22"
      },
      {
        "label": "Iraq",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Iraq",
        "seq": "49,53"
      }
    ],
    "id": "7aa2e062f4ea473f830cf8f1a72fded6",
    "predicate mapping": [
      {
        "label": "battle",
        "uri": "http://dbpedia.org/property/battleHonours",
        "seq": "39,45",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What is the debut team of the american football player who studied in North Fort Myers High School?",
    "SerialNumber": "670",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/highschool\u003e \u003chttp://dbpedia.org/resource/North_Fort_Myers_High_School\u003e . ?x \u003chttp://dbpedia.org/property/debutteam\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/AmericanFootballPlayer\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "North Fort Myers High School",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/North_Fort_Myers_High_School",
        "seq": "70,98"
      }
    ],
    "id": "5a928e7eda774ef6911803e52d2461d5",
    "predicate mapping": [
      {
        "label": "school high",
        "uri": "http://dbpedia.org/ontology/highschool",
        "seq": "-1,10",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "debut team",
        "uri": "http://dbpedia.org/property/debutteam",
        "seq": "12,22",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "american football player",
        "uri": "http://dbpedia.org/ontology/AmericanFootballPlayer",
        "seq": "30,54",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What is the mascot of the handball teams in the Turkish Handball Super League?",
    "SerialNumber": "672",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/league\u003e \u003chttp://dbpedia.org/resource/Turkish_Handball_Super_League\u003e . ?x \u003chttp://dbpedia.org/property/mascot\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/HandballTeam\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Turkish Handball Super League",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Turkish_Handball_Super_League",
        "seq": "48,77"
      }
    ],
    "id": "dfd73dbae7ae491793de86126bdb9de2",
    "predicate mapping": [
      {
        "label": "League",
        "uri": "http://dbpedia.org/ontology/league",
        "seq": "71,77",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "mascot",
        "uri": "http://dbpedia.org/property/mascot",
        "seq": "12,18",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "handball team",
        "uri": "http://dbpedia.org/ontology/HandballTeam",
        "seq": "26,39",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Is Truth prevails the national motto of Czechoslovakia?",
    "SerialNumber": "675",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Czechoslovakia\u003e \u003chttp://dbpedia.org/property/nationalMotto\u003e \u003chttp://dbpedia.org/resource/Truth_prevails\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Czechoslovakia",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Czechoslovakia",
        "seq": "40,54"
      },
      {
        "label": "Truth prevails",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Truth_prevails",
        "seq": "3,17"
      }
    ],
    "id": "3a2ddeb21c3746fb92dbf66a6c0bc86e",
    "predicate mapping": [
      {
        "label": "national motto",
        "uri": "http://dbpedia.org/property/nationalMotto",
        "seq": "22,36",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is Bob Adams (American football) known for?",
    "SerialNumber": "677",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Bob_Adams_(American_football)\u003e \u003chttp://dbpedia.org/property/knownFor\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Bob Adams (American football)",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Bob_Adams_(American_football)",
        "seq": "8,37"
      }
    ],
    "id": "3a948631dd8441caa4bea0a1acc65d97",
    "predicate mapping": [
      {
        "label": "known for",
        "uri": "http://dbpedia.org/property/knownFor",
        "seq": "38,47",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "Which football players have Newell\u0027s Old Boys as youthclub?",
    "SerialNumber": "679",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/youthclubs\u003e \u003chttp://dbpedia.org/resource/Newell\u0027s_Old_Boys\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Newell\u0027s Old Boys",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Newell\u0027s_Old_Boys",
        "seq": "28,45"
      }
    ],
    "id": "08ebfe3921a342c3affe388dd2aea32c",
    "predicate mapping": [
      {
        "label": "youthclub",
        "uri": "http://dbpedia.org/property/youthclubs",
        "seq": "49,58",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Which educational institution of Jack Mcgregor is also the alma mater of Donn barber ?",
    "SerialNumber": "685",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Jack_McGregor\u003e \u003chttp://dbpedia.org/ontology/education\u003e ?uri. \u003chttp://dbpedia.org/resource/Donn_Barber\u003e \u003chttp://dbpedia.org/ontology/education\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jack Mcgregor",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Jack_McGregor",
        "seq": "33,46"
      },
      {
        "label": "Donn barber",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Donn_Barber",
        "seq": "73,84"
      }
    ],
    "id": "90db48b330cc476e9694d1e7e62d38bd",
    "predicate mapping": [
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/ontology/education",
        "seq": "59,69",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/ontology/education",
        "seq": "59,69",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the common party of the Manthena Venkata Raju and  B. Shiva Rao?",
    "SerialNumber": "688",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Manthena_Venkata_Raju\u003e \u003chttp://dbpedia.org/ontology/party\u003e ?uri. \u003chttp://dbpedia.org/resource/B._Shiva_Rao\u003e \u003chttp://dbpedia.org/property/party\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Manthena Venkata Raju",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Manthena_Venkata_Raju",
        "seq": "32,53"
      },
      {
        "label": "B. Shiva Rao",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/B._Shiva_Rao",
        "seq": "59,71"
      }
    ],
    "id": "d3faf37f41144547b64d5521b4e67d1c",
    "predicate mapping": [
      {
        "label": "party",
        "uri": "http://dbpedia.org/ontology/party",
        "seq": "19,24",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "party",
        "uri": "http://dbpedia.org/property/party",
        "seq": "19,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "List the ceremonial county of East Tilbury ?",
    "SerialNumber": "692",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/East_Tilbury\u003e \u003chttp://dbpedia.org/ontology/ceremonialCounty\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "East Tilbury",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/East_Tilbury",
        "seq": "30,42"
      }
    ],
    "id": "78f031f16717475180bc9868531bd502",
    "predicate mapping": [
      {
        "label": "ceremonial county",
        "uri": "http://dbpedia.org/ontology/ceremonialCounty",
        "seq": "9,26",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "101",
    "question": "How many people are there who have relationship with Kennedy family?",
    "SerialNumber": "693",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/ontology/relation\u003e \u003chttp://dbpedia.org/resource/Kennedy_family\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Kennedy family",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Kennedy_family",
        "seq": "53,67"
      }
    ],
    "id": "6bb581d8ce694ddea69cd899f9f45e14",
    "predicate mapping": [
      {
        "label": "relation",
        "uri": "http://dbpedia.org/ontology/relation",
        "seq": "35,43",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the official residence of the Lula J. Davis which is also the death location of the John McTaggart (jockey) ?",
    "SerialNumber": "697",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Lula_J._Davis\u003e \u003chttp://dbpedia.org/ontology/residence\u003e ?uri. \u003chttp://dbpedia.org/resource/John_McTaggart_(jockey)\u003e \u003chttp://dbpedia.org/ontology/deathPlace\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Lula J. Davis",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Lula_J._Davis",
        "seq": "38,51"
      },
      {
        "label": "John McTaggart (jockey)",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/John_McTaggart_(jockey)",
        "seq": "92,115"
      }
    ],
    "id": "4aa7041e78b14355a3150e15ab4c8cbb",
    "predicate mapping": [
      {
        "label": "residence",
        "uri": "http://dbpedia.org/ontology/residence",
        "seq": "21,30",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "death location",
        "uri": "http://dbpedia.org/ontology/deathPlace",
        "seq": "70,84",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "111",
    "question": "How many other key people are there of the non-profit organisations whose key people is Hillary Clinton ?",
    "SerialNumber": "705",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/keyPeople\u003e \u003chttp://dbpedia.org/resource/Hillary_Clinton\u003e . ?x \u003chttp://dbpedia.org/property/keyPeople\u003e ?uri }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Hillary Clinton",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Hillary_Clinton",
        "seq": "88,103"
      }
    ],
    "id": "1d01420e4fe94bcb98a919c43f297926",
    "predicate mapping": [
      {
        "label": "key people",
        "uri": "http://dbpedia.org/property/keyPeople",
        "seq": "15,25",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "key people",
        "uri": "http://dbpedia.org/property/keyPeople",
        "seq": "15,25",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "How many races have the horses bred by Jacques Van\u0027t Hart participated in?",
    "SerialNumber": "706",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/breeder\u003e \u003chttp://dbpedia.org/resource/Jacques_Van\u0027t_Hart\u003e . ?x \u003chttp://dbpedia.org/property/race\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jacques Van\u0027t Hart",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Jacques_Van\u0027t_Hart",
        "seq": "39,57"
      }
    ],
    "id": "4553bf351e414e73a1faa2b005c17496",
    "predicate mapping": [
      {
        "label": "bred",
        "uri": "http://dbpedia.org/ontology/breeder",
        "seq": "31,35",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "race",
        "uri": "http://dbpedia.org/property/race",
        "seq": "9,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "Who is the spouse of Daniel Gibson? ",
    "SerialNumber": "707",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/spouse\u003e \u003chttp://dbpedia.org/resource/Daniel_Gibson\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Daniel Gibson",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Daniel_Gibson",
        "seq": "21,34"
      }
    ],
    "id": "1f0f16883a764370b8cb9aae06e6d527",
    "predicate mapping": [
      {
        "label": "spouse",
        "uri": "http://dbpedia.org/property/spouse",
        "seq": "11,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the mouth country of Upper Neretva ?",
    "SerialNumber": "708",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Upper_Neretva\u003e \u003chttp://dbpedia.org/ontology/mouthCountry\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Upper Neretva",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Upper_Neretva",
        "seq": "26,39"
      }
    ],
    "id": "afc1eb64cfc24a95975afaf3b10c8429",
    "predicate mapping": [
      {
        "label": "mouth country",
        "uri": "http://dbpedia.org/ontology/mouthCountry",
        "seq": "9,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "102",
    "question": "In how many regions is English American spoken?",
    "SerialNumber": "709",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { \u003chttp://dbpedia.org/resource/English_Americans\u003e \u003chttp://dbpedia.org/property/region\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "English American ",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/English_Americans",
        "seq": "23,40"
      }
    ],
    "id": "3edcbc0ae531477c808768239f89c922",
    "predicate mapping": [
      {
        "label": "region",
        "uri": "http://dbpedia.org/property/region",
        "seq": "12,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Who has been married to both Penny Lancaster and Alana Stewart?",
    "SerialNumber": "710",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Penny_Lancaster\u003e \u003chttp://dbpedia.org/ontology/spouse\u003e ?uri. \u003chttp://dbpedia.org/resource/Alana_Stewart\u003e \u003chttp://dbpedia.org/ontology/spouse\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Penny Lancaster",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Penny_Lancaster",
        "seq": "29,44"
      },
      {
        "label": "Alana Stewart",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Alana_Stewart",
        "seq": "49,62"
      }
    ],
    "id": "3dfd41b5ba22435eb756a1d2034d0ce6",
    "predicate mapping": [
      {
        "label": "married to",
        "uri": "http://dbpedia.org/ontology/spouse",
        "seq": "13,23",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "married to",
        "uri": "http://dbpedia.org/ontology/spouse",
        "seq": "13,23",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Which country does league of Nguendula Filipe belongs to?",
    "SerialNumber": "711",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Nguendula_Filipe\u003e \u003chttp://dbpedia.org/ontology/league\u003e ?x . ?x \u003chttp://dbpedia.org/property/country\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Nguendula Filipe",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Nguendula_Filipe",
        "seq": "29,45"
      }
    ],
    "id": "e1f667ae1cb6458ba9f14a1021e8c8b4",
    "predicate mapping": [
      {
        "label": "league",
        "uri": "http://dbpedia.org/ontology/league",
        "seq": "19,25",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/property/country",
        "seq": "6,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What is the largest city of the country to whom, the battle honours of 65th Regiment of Foot were given?",
    "SerialNumber": "713",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/65th_(2nd_Yorkshire,_North_Riding)_Regiment_of_Foot\u003e \u003chttp://dbpedia.org/property/battleHonours\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/largestCity\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "65th",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/65th_(2nd_Yorkshire,_North_Riding)_Regiment_of_Foot",
        "seq": "71,75"
      }
    ],
    "id": "20163596744342f4b6677a18dbc491d0",
    "predicate mapping": [
      {
        "label": "battle honours",
        "uri": "http://dbpedia.org/property/battleHonours",
        "seq": "53,67",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "largest city",
        "uri": "http://dbpedia.org/ontology/largestCity",
        "seq": "12,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Is Ella Fitzgerald associated with Mickey Roker?",
    "SerialNumber": "715",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Mickey_Roker\u003e \u003chttp://dbpedia.org/ontology/associatedBand\u003e \u003chttp://dbpedia.org/resource/Ella_Fitzgerald\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Mickey Roker",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Mickey_Roker",
        "seq": "35,47"
      },
      {
        "label": "Ella Fitzgerald",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Ella_Fitzgerald",
        "seq": "3,18"
      }
    ],
    "id": "007bb942a6da4c3f987fba8dff86e26b",
    "predicate mapping": [
      {
        "label": "associated",
        "uri": "http://dbpedia.org/ontology/associatedBand",
        "seq": "19,29",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Does Cascade Airways have a hub in Seattle?",
    "SerialNumber": "717",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Cascade_Airways\u003e \u003chttp://dbpedia.org/ontology/hubAirport\u003e \u003chttp://dbpedia.org/resource/Seattle\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Cascade Airways",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Cascade_Airways",
        "seq": "5,20"
      },
      {
        "label": "Seattle",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Seattle",
        "seq": "35,42"
      }
    ],
    "id": "461bef912cd34b3cbadf533925a20f87",
    "predicate mapping": [
      {
        "label": "hub",
        "uri": "http://dbpedia.org/ontology/hubAirport",
        "seq": "28,31",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "Who did their highschool from a school whose mascot was a fighting tiger?",
    "SerialNumber": "718",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/mascot\u003e \u003chttp://dbpedia.org/resource/Fighting_Tiger\u003e . ?uri \u003chttp://dbpedia.org/ontology/highschool\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "fighting tiger",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Fighting_Tiger",
        "seq": "58,72"
      }
    ],
    "id": "d795c9f16e8347cba7a4dd7b2a27de50",
    "predicate mapping": [
      {
        "label": "mascot",
        "uri": "http://dbpedia.org/property/mascot",
        "seq": "45,51",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "highschool",
        "uri": "http://dbpedia.org/ontology/highschool",
        "seq": "14,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What are the school mascots in Blytheville school district?",
    "SerialNumber": "719",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/district\u003e \u003chttp://dbpedia.org/resource/Blytheville_School_District\u003e . ?x \u003chttp://dbpedia.org/property/mascot\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/School\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Blytheville school district",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Blytheville_School_District",
        "seq": "31,58"
      }
    ],
    "id": "295460c32de746aa8bcc193aaee595c3",
    "predicate mapping": [
      {
        "label": "district",
        "uri": "http://dbpedia.org/property/district",
        "seq": "50,58",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "mascot",
        "uri": "http://dbpedia.org/property/mascot",
        "seq": "20,26",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "school",
        "uri": "http://dbpedia.org/ontology/School",
        "seq": "13,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "How many services does the company who made Onedrive provide?",
    "SerialNumber": "721",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/service\u003e \u003chttp://dbpedia.org/resource/OneDrive\u003e . ?x \u003chttp://dbpedia.org/property/services\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Onedrive",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/OneDrive",
        "seq": "44,52"
      }
    ],
    "id": "f4b98010a03e427385fe8ee2f13cffc8",
    "predicate mapping": [
      {
        "label": "service",
        "uri": "http://dbpedia.org/ontology/service",
        "seq": "9,16",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "services",
        "uri": "http://dbpedia.org/property/services",
        "seq": "9,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the movie written by Monty Python and has music composer as Geoffrey Burgon ?",
    "SerialNumber": "722",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/writer\u003e \u003chttp://dbpedia.org/resource/Monty_Python\u003e . ?uri \u003chttp://dbpedia.org/ontology/musicComposer\u003e \u003chttp://dbpedia.org/resource/Geoffrey_Burgon\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Monty Python",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Monty_Python",
        "seq": "26,38"
      },
      {
        "label": "Geoffrey Burgon",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Geoffrey_Burgon",
        "seq": "65,80"
      }
    ],
    "id": "b087abc428724248b54e69d4f2519f9a",
    "predicate mapping": [
      {
        "label": "written by",
        "uri": "http://dbpedia.org/property/writer",
        "seq": "15,25",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "music composer",
        "uri": "http://dbpedia.org/ontology/musicComposer",
        "seq": "47,61",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who is the leader of Hackweiser ?",
    "SerialNumber": "724",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Hackweiser\u003e \u003chttp://dbpedia.org/property/leaderName\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Hackweiser",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Hackweiser",
        "seq": "21,31"
      }
    ],
    "id": "8dc28cce9d654bfe8fbf70dc2b8673e9",
    "predicate mapping": [
      {
        "label": "leader",
        "uri": "http://dbpedia.org/property/leaderName",
        "seq": "11,17",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What musician is often associated with Tiffany Villarreal and wrote Same Song?",
    "SerialNumber": "726",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Same_Song_(Digital_Underground_song)\u003e \u003chttp://dbpedia.org/property/writer\u003e ?uri. \u003chttp://dbpedia.org/resource/Tiffany_Villarreal\u003e \u003chttp://dbpedia.org/ontology/associatedMusicalArtist\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Same Song",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Same_Song_(Digital_Underground_song)",
        "seq": "68,77"
      },
      {
        "label": "Tiffany Villarreal",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Tiffany_Villarreal",
        "seq": "39,57"
      }
    ],
    "id": "968a91762e304939ac276e8bffeeb104",
    "predicate mapping": [
      {
        "label": "wrote",
        "uri": "http://dbpedia.org/property/writer",
        "seq": "62,67",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "associated",
        "uri": "http://dbpedia.org/ontology/associatedMusicalArtist",
        "seq": "23,33",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the city served by Juhu Aerodrome ?",
    "SerialNumber": "727",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Juhu_Aerodrome\u003e \u003chttp://dbpedia.org/property/cityServed\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Juhu Aerodrome",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Juhu_Aerodrome",
        "seq": "24,38"
      }
    ],
    "id": "bdab35771cbc423897c8ea4079e34696",
    "predicate mapping": [
      {
        "label": "served city",
        "uri": "http://dbpedia.org/property/cityServed",
        "seq": "-1,10",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "What common team are Mikhail Pashnin and Robin Kovacs expected to play for?",
    "SerialNumber": "730",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Mikhail_Pashnin\u003e \u003chttp://dbpedia.org/property/prospectTeam\u003e ?uri. \u003chttp://dbpedia.org/resource/Robin_Kovacs\u003e \u003chttp://dbpedia.org/property/prospectTeam\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Mikhail Pashnin",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Mikhail_Pashnin",
        "seq": "21,36"
      },
      {
        "label": "Robin Kovacs",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Robin_Kovacs",
        "seq": "41,53"
      }
    ],
    "id": "4e674cf3dbdb4a39a2fc15b0844576f1",
    "predicate mapping": [
      {
        "label": "team",
        "uri": "http://dbpedia.org/property/prospectTeam",
        "seq": "12,16",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/property/prospectTeam",
        "seq": "12,16",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Which races has the horse bred by Jacques Van\u0027t Hart participated in?",
    "SerialNumber": "731",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/breeder\u003e \u003chttp://dbpedia.org/resource/Jacques_Van\u0027t_Hart\u003e . ?x \u003chttp://dbpedia.org/property/race\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Horse\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jacques Van\u0027t Hart",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Jacques_Van\u0027t_Hart",
        "seq": "34,52"
      }
    ],
    "id": "cc34045be9af41d2a638daad32507b44",
    "predicate mapping": [
      {
        "label": "bred",
        "uri": "http://dbpedia.org/ontology/breeder",
        "seq": "26,30",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "race",
        "uri": "http://dbpedia.org/property/race",
        "seq": "6,10",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "horse",
        "uri": "http://dbpedia.org/ontology/Horse",
        "seq": "20,25",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What are the awards won by the spouse of Liv Ullmann ?",
    "SerialNumber": "732",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Liv_Ullmann\u003e \u003chttp://dbpedia.org/ontology/partner\u003e ?x . ?x \u003chttp://dbpedia.org/property/awards\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Liv Ullmann",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Liv_Ullmann",
        "seq": "41,52"
      }
    ],
    "id": "216d2d9373974e00a989034dbc7b8fd4",
    "predicate mapping": [
      {
        "label": "spouse",
        "uri": "http://dbpedia.org/ontology/partner",
        "seq": "31,37",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards",
        "seq": "13,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "List the movies directed by Stanley Kubrick?",
    "SerialNumber": "735",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/director\u003e \u003chttp://dbpedia.org/resource/Stanley_Kubrick\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Stanley Kubrick",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Stanley_Kubrick",
        "seq": "28,43"
      }
    ],
    "id": "ce2de0ff47ec4745a8c1c17dbfe8758b",
    "predicate mapping": [
      {
        "label": "directed by",
        "uri": "http://dbpedia.org/ontology/director",
        "seq": "16,27",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "How many first drivers have participated when Scuderia Ferrari was a first team?",
    "SerialNumber": "737",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/firstTeam\u003e \u003chttp://dbpedia.org/resource/Scuderia_Ferrari\u003e . ?x \u003chttp://dbpedia.org/ontology/firstDriver\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Scuderia Ferrari",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Scuderia_Ferrari",
        "seq": "46,62"
      }
    ],
    "id": "c6faa5c6368d4328b6ff164344475881",
    "predicate mapping": [
      {
        "label": "first team",
        "uri": "http://dbpedia.org/property/firstTeam",
        "seq": "69,79",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "first driver",
        "uri": "http://dbpedia.org/ontology/firstDriver",
        "seq": "9,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the religious affiliation of Wickramabahu Central College (National School) ?",
    "SerialNumber": "739",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Wickramabahu_Central_College_(National_School)\u003e \u003chttp://dbpedia.org/property/religiousAffiliation\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Wickramabahu Central College (National School)",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Wickramabahu_Central_College_(National_School)",
        "seq": "37,83"
      }
    ],
    "id": "418dfe53e2ba43708a7884f5047d9093",
    "predicate mapping": [
      {
        "label": "religious affiliation",
        "uri": "http://dbpedia.org/property/religiousAffiliation",
        "seq": "12,33",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What is the destinations of the airline whose headquarters is in Manchester?",
    "SerialNumber": "740",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/headquarters\u003e \u003chttp://dbpedia.org/resource/Manchester\u003e . ?x \u003chttp://dbpedia.org/property/destinations\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Airline\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Manchester",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Manchester",
        "seq": "65,75"
      }
    ],
    "id": "e20cde96361c4690974f7cd6b67e3241",
    "predicate mapping": [
      {
        "label": "headquarters",
        "uri": "http://dbpedia.org/property/headquarters",
        "seq": "46,58",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "destinations",
        "uri": "http://dbpedia.org/property/destinations",
        "seq": "12,24",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "airline",
        "uri": "http://dbpedia.org/ontology/Airline",
        "seq": "32,39",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Name all the bands which have members of QDT in them.",
    "SerialNumber": "741",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/QDT\u003e \u003chttp://dbpedia.org/ontology/bandMember\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/associatedBand\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "QDT",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/QDT",
        "seq": "41,44"
      }
    ],
    "id": "4afbc166875f40419999fc2110b6ec04",
    "predicate mapping": [
      {
        "label": "members",
        "uri": "http://dbpedia.org/ontology/bandMember",
        "seq": "30,37",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "bands",
        "uri": "http://dbpedia.org/ontology/associatedBand",
        "seq": "13,18",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the allegiance of the Albert Kwesi Ocran and state of origin of the Jojo Chintoh ?",
    "SerialNumber": "742",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Albert_Kwesi_Ocran\u003e \u003chttp://dbpedia.org/property/allegiance\u003e ?uri. \u003chttp://dbpedia.org/resource/Jojo_Chintoh\u003e \u003chttp://dbpedia.org/ontology/stateOfOrigin\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Albert Kwesi Ocran",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Albert_Kwesi_Ocran",
        "seq": "30,48"
      },
      {
        "label": "Jojo Chintoh",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Jojo_Chintoh",
        "seq": "76,88"
      }
    ],
    "id": "70e501f13ec0430ab83bbd1ab7d9768e",
    "predicate mapping": [
      {
        "label": "allegiance",
        "uri": "http://dbpedia.org/property/allegiance",
        "seq": "12,22",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "state of origin",
        "uri": "http://dbpedia.org/ontology/stateOfOrigin",
        "seq": "53,68",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which publisher of Stone Canoe is also the university for which Michael Powell plays for ?",
    "SerialNumber": "744",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Stone_Canoe\u003e \u003chttp://dbpedia.org/ontology/publisher\u003e ?uri. \u003chttp://dbpedia.org/resource/Michael_Powell_(lacrosse)\u003e \u003chttp://dbpedia.org/ontology/team\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Stone Canoe",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Stone_Canoe",
        "seq": "19,30"
      },
      {
        "label": "Michael Powell",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Michael_Powell_(lacrosse)",
        "seq": "64,78"
      }
    ],
    "id": "cc91a60484e342e48d63ac373d934455",
    "predicate mapping": [
      {
        "label": "publisher",
        "uri": "http://dbpedia.org/ontology/publisher",
        "seq": "6,15",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "plays for",
        "uri": "http://dbpedia.org/ontology/team",
        "seq": "79,88",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What are the movies directed by Joel Schumacher?",
    "SerialNumber": "746",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/director\u003e \u003chttp://dbpedia.org/resource/Joel_Schumacher\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Joel Schumacher",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Joel_Schumacher",
        "seq": "32,47"
      }
    ],
    "id": "8c563a445be548dcbe86117be621f124",
    "predicate mapping": [
      {
        "label": "directed by",
        "uri": "http://dbpedia.org/ontology/director",
        "seq": "20,31",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "13,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "9",
    "question": "Who is owner of the soccer club which owns the Cobham Training Centre?",
    "SerialNumber": "747",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Cobham_Training_Centre\u003e  \u003chttp://dbpedia.org/property/owner\u003e ?x .  ?x \u003chttp://dbpedia.org/property/owner\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Cobham Training Centre",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Cobham_Training_Centre",
        "seq": "47,69"
      }
    ],
    "id": "3fd7c86ca6824a3dbc88fe313eb4e1a8",
    "predicate mapping": [
      {
        "label": "owner",
        "uri": "http://dbpedia.org/property/owner",
        "seq": "7,12",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "owner",
        "uri": "http://dbpedia.org/property/owner",
        "seq": "7,12",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What is the military rank of the commanders of Regiment of Mounted Grenadiers?",
    "SerialNumber": "748",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Regiment_of_Mounted_Grenadiers\u003e \u003chttp://dbpedia.org/property/notableCommanders\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/militaryRank\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Regiment of Mounted Grenadiers",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Regiment_of_Mounted_Grenadiers",
        "seq": "47,77"
      }
    ],
    "id": "ce57cc92bd8645e186f8da0f9cf915de",
    "predicate mapping": [
      {
        "label": "commanders",
        "uri": "http://dbpedia.org/property/notableCommanders",
        "seq": "33,43",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "military rank",
        "uri": "http://dbpedia.org/ontology/militaryRank",
        "seq": "12,25",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "401",
    "question": "How many companies serve the Australian region?",
    "SerialNumber": "752",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/ontology/regionServed\u003e \u003chttp://dbpedia.org/resource/Australia\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Company\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Australia",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Australia",
        "seq": "29,38"
      }
    ],
    "id": "27bc2760a11844569f85ac7e66cd3be3",
    "predicate mapping": [
      {
        "label": "region serve",
        "uri": "http://dbpedia.org/ontology/regionServed",
        "seq": "-1,11",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "companies",
        "uri": "http://dbpedia.org/ontology/Company",
        "seq": "9,18",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the river whose source mountain is Baikal Mountains and mouth location is Arctic Ocean?",
    "SerialNumber": "754",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/sourceMountain\u003e \u003chttp://dbpedia.org/resource/Baikal_Mountains\u003e . ?uri \u003chttp://dbpedia.org/property/mouthLocation\u003e \u003chttp://dbpedia.org/resource/Arctic_Ocean\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/River\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Baikal Mountains",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Baikal_Mountains",
        "seq": "40,56"
      },
      {
        "label": "Arctic Ocean",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Arctic_Ocean",
        "seq": "79,91"
      }
    ],
    "id": "9c981beb9a30463aaf8b11f260183ccc",
    "predicate mapping": [
      {
        "label": "source mountain",
        "uri": "http://dbpedia.org/ontology/sourceMountain",
        "seq": "21,36",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "mouth location",
        "uri": "http://dbpedia.org/property/mouthLocation",
        "seq": "61,75",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who was the opponent of Robert Carr, 1st Earl of Somerset ?",
    "SerialNumber": "755",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Robert_Carr,_1st_Earl_of_Somerset\u003e \u003chttp://dbpedia.org/ontology/opponent\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Robert Carr",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Robert_Carr,_1st_Earl_of_Somerset",
        "seq": "24,35"
      }
    ],
    "id": "86746719f387413aaf461a7c70f4ef96",
    "predicate mapping": [
      {
        "label": "opponent",
        "uri": "http://dbpedia.org/ontology/opponent",
        "seq": "12,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Which organisation has superintendent as Lieutenant general (United States)?",
    "SerialNumber": "756",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/superintendent\u003e \u003chttp://dbpedia.org/resource/Lieutenant_general_(United_States)\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Organisation\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Lieutenant general (United States)",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Lieutenant_general_(United_States)",
        "seq": "41,75"
      }
    ],
    "id": "709ea85fe41942d3a0f49a39541f93ee",
    "predicate mapping": [
      {
        "label": "superintendent",
        "uri": "http://dbpedia.org/ontology/superintendent",
        "seq": "23,37",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "organisation",
        "uri": "http://dbpedia.org/ontology/Organisation",
        "seq": "6,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "111",
    "question": "Give me the total number of architect of the buildings whose one of the  architect was Louis D. Astorino?",
    "SerialNumber": "757",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/architect\u003e \u003chttp://dbpedia.org/resource/Louis_D._Astorino\u003e . ?x \u003chttp://dbpedia.org/property/architect\u003e ?uri }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Louis D. Astorino",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Louis_D._Astorino",
        "seq": "87,104"
      }
    ],
    "id": "681e53e68393454b864693eaa0ee2eb7",
    "predicate mapping": [
      {
        "label": "architect",
        "uri": "http://dbpedia.org/property/architect",
        "seq": "28,37",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "architect",
        "uri": "http://dbpedia.org/property/architect",
        "seq": "28,37",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "List the leaders of the government agencies whose jurisdiction was German-occupied Europe.",
    "SerialNumber": "759",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/jurisdiction\u003e \u003chttp://dbpedia.org/resource/German-occupied_Europe\u003e . ?x \u003chttp://dbpedia.org/ontology/leader\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/GovernmentAgency\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "German-occupied Europe",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/German-occupied_Europe",
        "seq": "67,89"
      }
    ],
    "id": "26e27f1518224881bd791e4d2ed313b6",
    "predicate mapping": [
      {
        "label": "jurisdiction",
        "uri": "http://dbpedia.org/ontology/jurisdiction",
        "seq": "50,62",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "leader",
        "uri": "http://dbpedia.org/ontology/leader",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "government",
        "uri": "http://dbpedia.org/ontology/GovernmentAgency",
        "seq": "24,34",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "406",
    "question": "What is the total number of awards whose presenter\u0027s headquarters is Beverly Hills, California?",
    "SerialNumber": "761",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/headquarters\u003e \u003chttp://dbpedia.org/resource/Beverly_Hills,_California\u003e . ?uri \u003chttp://dbpedia.org/ontology/presenter\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Award\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Beverly Hills, California",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Beverly_Hills,_California",
        "seq": "69,94"
      }
    ],
    "id": "ca43be7031db43e1bea3ea6da5eb0e12",
    "predicate mapping": [
      {
        "label": "headquarters",
        "uri": "http://dbpedia.org/property/headquarters",
        "seq": "53,65",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "presenter",
        "uri": "http://dbpedia.org/ontology/presenter",
        "seq": "41,50",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/Award",
        "seq": "28,34",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "111",
    "question": "Count the total number of launch site of the rockets which have been launched form Cape Canaveral Air Force Station ?",
    "SerialNumber": "764",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/launchSite\u003e \u003chttp://dbpedia.org/resource/Cape_Canaveral_Air_Force_Station\u003e . ?x \u003chttp://dbpedia.org/ontology/launchSite\u003e ?uri }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Cape Canaveral Air Force Station",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Cape_Canaveral_Air_Force_Station",
        "seq": "83,115"
      }
    ],
    "id": "1d08293ffa5440beaad63cd2ffd708a8",
    "predicate mapping": [
      {
        "label": "launch site",
        "uri": "http://dbpedia.org/ontology/launchSite",
        "seq": "26,37",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "launch site",
        "uri": "http://dbpedia.org/ontology/launchSite",
        "seq": "26,37",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the home town of Cline Buckens ?",
    "SerialNumber": "766",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Céline_Buckens\u003e \u003chttp://dbpedia.org/ontology/hometown\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Cline Buckens",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Céline_Buckens",
        "seq": "22,35"
      }
    ],
    "id": "e45dcefc54af4edbbb07b37331ca8f14",
    "predicate mapping": [
      {
        "label": "home town",
        "uri": "http://dbpedia.org/ontology/hometown",
        "seq": "9,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Was Cliff Burton in Metallica?",
    "SerialNumber": "767",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Metallica\u003e \u003chttp://dbpedia.org/property/pastMembers\u003e \u003chttp://dbpedia.org/resource/Cliff_Burton\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Metallica",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Metallica",
        "seq": "20,29"
      },
      {
        "label": "Cliff Burton",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Cliff_Burton",
        "seq": "4,16"
      }
    ],
    "id": "a4cea3abd1184b649cc7a5057169a76b",
    "predicate mapping": [
      {
        "label": "was",
        "uri": "http://dbpedia.org/property/pastMembers",
        "seq": "-1,2",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "What are the television shows whose network\u0027s sister station is BBC Two?",
    "SerialNumber": "768",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/sisterStation\u003e \u003chttp://dbpedia.org/resource/BBC_Two\u003e . ?uri \u003chttp://dbpedia.org/ontology/network\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "BBC Two",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/BBC_Two",
        "seq": "64,71"
      }
    ],
    "id": "0b60b66059d842f79d0b4d9825973e79",
    "predicate mapping": [
      {
        "label": "sister station",
        "uri": "http://dbpedia.org/ontology/sisterStation",
        "seq": "46,60",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "network",
        "uri": "http://dbpedia.org/ontology/network",
        "seq": "36,43",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "13,28",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Tell me the name of the Prime Time Entertainment Network\u0027s TV show whose Artist is Christopher Franke ?",
    "SerialNumber": "769",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/artist\u003e \u003chttp://dbpedia.org/resource/Christopher_Franke\u003e . ?uri \u003chttp://dbpedia.org/ontology/network\u003e \u003chttp://dbpedia.org/resource/Prime_Time_Entertainment_Network\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Christopher Franke",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Christopher_Franke",
        "seq": "83,101"
      },
      {
        "label": "Prime Time Entertainment Network",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Prime_Time_Entertainment_Network",
        "seq": "24,56"
      }
    ],
    "id": "33f63e6829ad4508bbe0d83cf298e9df",
    "predicate mapping": [
      {
        "label": "Artist",
        "uri": "http://dbpedia.org/property/artist",
        "seq": "73,79",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "Network",
        "uri": "http://dbpedia.org/ontology/network",
        "seq": "49,56",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "62,66",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which TV show had a judge named Harry Connick, Jr. and was presented by Ryan Seacrest?",
    "SerialNumber": "770",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/judges\u003e \u003chttp://dbpedia.org/resource/Harry_Connick,_Jr.\u003e . ?uri \u003chttp://dbpedia.org/ontology/presenter\u003e \u003chttp://dbpedia.org/resource/Ryan_Seacrest\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Harry Connick, Jr.",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Harry_Connick,_Jr.",
        "seq": "32,50"
      },
      {
        "label": "Ryan Seacrest",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ryan_Seacrest",
        "seq": "72,85"
      }
    ],
    "id": "7e720d99f29d4758adc7c2bcbf7b69d7",
    "predicate mapping": [
      {
        "label": "judge",
        "uri": "http://dbpedia.org/property/judges",
        "seq": "20,25",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "presented",
        "uri": "http://dbpedia.org/ontology/presenter",
        "seq": "59,68",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "9,13",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "By which companies is RENFE Class 333 designed?",
    "SerialNumber": "773",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/RENFE_Class_333\u003e \u003chttp://dbpedia.org/ontology/designer\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "RENFE Class 333",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/RENFE_Class_333",
        "seq": "22,37"
      }
    ],
    "id": "5943549088b54cd687dab2cb1cd0bde2",
    "predicate mapping": [
      {
        "label": "designed",
        "uri": "http://dbpedia.org/ontology/designer",
        "seq": "38,46",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Does the asiana airlines fly into the Gimhae International Airport?",
    "SerialNumber": "775",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Asiana_Airlines\u003e \u003chttp://dbpedia.org/ontology/targetAirport\u003e \u003chttp://dbpedia.org/resource/Gimhae_International_Airport\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "asiana airlines",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Asiana_Airlines",
        "seq": "9,24"
      },
      {
        "label": "Gimhae International Airport",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Gimhae_International_Airport",
        "seq": "38,66"
      }
    ],
    "id": "b242da1bee49478487a9dd713cc010da",
    "predicate mapping": [
      {
        "label": "airport",
        "uri": "http://dbpedia.org/ontology/targetAirport",
        "seq": "-1,6",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What is the state of the senator whose successor is Nathaniel P. Hill ?",
    "SerialNumber": "778",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/successor\u003e \u003chttp://dbpedia.org/resource/Nathaniel_P._Hill\u003e . ?x \u003chttp://dbpedia.org/property/state\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Senator\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Nathaniel P. Hill",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Nathaniel_P._Hill",
        "seq": "52,69"
      }
    ],
    "id": "601a17c1d3db4a76b3e597bf95a55f39",
    "predicate mapping": [
      {
        "label": "successor",
        "uri": "http://dbpedia.org/ontology/successor",
        "seq": "39,48",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "state",
        "uri": "http://dbpedia.org/property/state",
        "seq": "12,17",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "senator",
        "uri": "http://dbpedia.org/ontology/Senator",
        "seq": "25,32",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the alma mater of the James Still which is also the alma mater of Tom Maniatis?",
    "SerialNumber": "779",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/James_Still\u003e \u003chttp://dbpedia.org/ontology/almaMater\u003e ?uri. \u003chttp://dbpedia.org/resource/Tom_Maniatis\u003e \u003chttp://dbpedia.org/property/almaMater\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "James Still",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/James_Still",
        "seq": "30,41"
      },
      {
        "label": "Tom Maniatis",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Tom_Maniatis",
        "seq": "74,86"
      }
    ],
    "id": "b6db05781cdc46cb9c9a8c83a5ad5276",
    "predicate mapping": [
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/ontology/almaMater",
        "seq": "12,22",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/property/almaMater",
        "seq": "12,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "Count the awards given to the recepients of the Becket fund for religious liberty.",
    "SerialNumber": "780",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/award\u003e \u003chttp://dbpedia.org/resource/Becket_Fund_for_Religious_Liberty\u003e . ?x \u003chttp://dbpedia.org/property/awards\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Becket fund for religious liberty",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Becket_Fund_for_Religious_Liberty",
        "seq": "48,81"
      }
    ],
    "id": "acbd41cd7e11412e8af8c45b2f8d29c6",
    "predicate mapping": [
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/award",
        "seq": "10,16",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards",
        "seq": "10,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "307",
    "question": "What is the president whose lieutenants are Winston Bryant and Joe Purcell?",
    "SerialNumber": "781",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/ontology/lieutenant\u003e \u003chttp://dbpedia.org/resource/Winston_Bryant\u003e . ?uri \u003chttp://dbpedia.org/ontology/lieutenant\u003e \u003chttp://dbpedia.org/resource/Joe_Purcell\u003e . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/President\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Winston Bryant",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Winston_Bryant",
        "seq": "44,58"
      },
      {
        "label": "Joe Purcell",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Joe_Purcell",
        "seq": "63,74"
      }
    ],
    "id": "f602a0dfb487490098f078746235816a",
    "predicate mapping": [
      {
        "label": "lieutenant",
        "uri": "http://dbpedia.org/ontology/lieutenant",
        "seq": "28,38",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "lieutenant",
        "uri": "http://dbpedia.org/ontology/lieutenant",
        "seq": "28,38",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "president",
        "uri": "http://dbpedia.org/ontology/President",
        "seq": "12,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "In all the grand prixes where the first team was Scuderia Ferrari, who all were the pole drivers?",
    "SerialNumber": "782",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/firstTeam\u003e \u003chttp://dbpedia.org/resource/Scuderia_Ferrari\u003e . ?x \u003chttp://dbpedia.org/property/poleDriver\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/GrandPrix\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Scuderia Ferrari",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Scuderia_Ferrari",
        "seq": "49,65"
      }
    ],
    "id": "ecce3a142aae4853b61f92d76a787bfe",
    "predicate mapping": [
      {
        "label": "first team",
        "uri": "http://dbpedia.org/property/firstTeam",
        "seq": "34,44",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "pole driver",
        "uri": "http://dbpedia.org/property/poleDriver",
        "seq": "84,95",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "grand prix",
        "uri": "http://dbpedia.org/ontology/GrandPrix",
        "seq": "11,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What is the layout of the automobiles designed by Olivier Boulay?",
    "SerialNumber": "783",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/designer\u003e \u003chttp://dbpedia.org/resource/Olivier_Boulay\u003e . ?x \u003chttp://dbpedia.org/ontology/layout\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Automobile\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Olivier Boulay",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Olivier_Boulay",
        "seq": "50,64"
      }
    ],
    "id": "f9931eecbd9646808d8468edd4b7cc74",
    "predicate mapping": [
      {
        "label": "designed",
        "uri": "http://dbpedia.org/property/designer",
        "seq": "38,46",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "layout",
        "uri": "http://dbpedia.org/ontology/layout",
        "seq": "12,18",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "automobile",
        "uri": "http://dbpedia.org/ontology/Automobile",
        "seq": "26,36",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Who maintains the stuff designed by the Brunei government?",
    "SerialNumber": "786",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/designer\u003e \u003chttp://dbpedia.org/resource/Politics_of_Brunei\u003e . ?x \u003chttp://dbpedia.org/ontology/maintainedBy\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Brunei",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Politics_of_Brunei",
        "seq": "40,46"
      }
    ],
    "id": "5c175091321340c3bb110a48d78c7d74",
    "predicate mapping": [
      {
        "label": "designed",
        "uri": "http://dbpedia.org/property/designer",
        "seq": "24,32",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "maintains",
        "uri": "http://dbpedia.org/ontology/maintainedBy",
        "seq": "4,13",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Name the common current team of the Avalon biddle and John mcGuinness ?",
    "SerialNumber": "787",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Avalon_Biddle\u003e \u003chttp://dbpedia.org/property/currentTeam\u003e ?uri. \u003chttp://dbpedia.org/resource/John_McGuinness_(motorcycle_racer)\u003e \u003chttp://dbpedia.org/property/currentTeam\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Avalon biddle",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Avalon_Biddle",
        "seq": "36,49"
      },
      {
        "label": "John mcGuinness",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/John_McGuinness_(motorcycle_racer)",
        "seq": "54,69"
      }
    ],
    "id": "d39b6d7deb914f70b8ca353696734df4",
    "predicate mapping": [
      {
        "label": "current team",
        "uri": "http://dbpedia.org/property/currentTeam",
        "seq": "16,28",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "current team",
        "uri": "http://dbpedia.org/property/currentTeam",
        "seq": "16,28",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "List the origin of the weapons which were used in the American Revolutionary War.",
    "SerialNumber": "788",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/usedInWar\u003e \u003chttp://dbpedia.org/resource/American_Revolutionary_War\u003e . ?x \u003chttp://dbpedia.org/property/origin\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Weapon\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "American Revolutionary War",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/American_Revolutionary_War",
        "seq": "54,80"
      }
    ],
    "id": "1a62e676c8a44df4b06c37ad3e9e5061",
    "predicate mapping": [
      {
        "label": "used",
        "uri": "http://dbpedia.org/ontology/usedInWar",
        "seq": "42,46",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "origin",
        "uri": "http://dbpedia.org/property/origin",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "weapon",
        "uri": "http://dbpedia.org/ontology/Weapon",
        "seq": "23,29",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "To which military division does Clark Daniel Stearns belong?",
    "SerialNumber": "789",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Clark_Daniel_Stearns\u003e \u003chttp://dbpedia.org/ontology/militaryBranch\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Clark Daniel Stearns",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Clark_Daniel_Stearns",
        "seq": "32,52"
      }
    ],
    "id": "7e03672a7f204b4e97641dcfd07042af",
    "predicate mapping": [
      {
        "label": "military",
        "uri": "http://dbpedia.org/ontology/militaryBranch",
        "seq": "9,17",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "In which race did Coneygree the racehorse and Fergie Sutherland the horse trainer participate?",
    "SerialNumber": "790",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Fergie_Sutherland\u003e \u003chttp://dbpedia.org/property/race\u003e ?uri. \u003chttp://dbpedia.org/resource/Coneygree\u003e \u003chttp://dbpedia.org/property/race\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Fergie Sutherland",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Fergie_Sutherland",
        "seq": "46,63"
      },
      {
        "label": "Coneygree",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Coneygree",
        "seq": "18,27"
      }
    ],
    "id": "216172af192b4bbda827edcfaac62a26",
    "predicate mapping": [
      {
        "label": "race",
        "uri": "http://dbpedia.org/property/race",
        "seq": "9,13",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "race",
        "uri": "http://dbpedia.org/property/race",
        "seq": "9,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What are the resting places of the associates of John Betts a, Connecticut politician?",
    "SerialNumber": "791",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/John_Betts_(Connecticut_politician)\u003e \u003chttp://dbpedia.org/ontology/associate\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/restingPlace\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "John Betts",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/John_Betts_(Connecticut_politician)",
        "seq": "49,59"
      }
    ],
    "id": "86f33792c9fe4d8bab748d5b5d0d13e5",
    "predicate mapping": [
      {
        "label": "associate",
        "uri": "http://dbpedia.org/ontology/associate",
        "seq": "35,44",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "resting place",
        "uri": "http://dbpedia.org/ontology/restingPlace",
        "seq": "13,26",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "To which educational institutes is Samuel Isham associated to?",
    "SerialNumber": "792",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Samuel_Isham\u003e \u003chttp://dbpedia.org/property/education\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Samuel Isham",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Samuel_Isham",
        "seq": "35,47"
      }
    ],
    "id": "62d41f3590914838b15d806cdd5e887b",
    "predicate mapping": [
      {
        "label": "education",
        "uri": "http://dbpedia.org/property/education",
        "seq": "9,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "401",
    "question": "Give me a count of mammals whose family is Canidae?",
    "SerialNumber": "793",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/ontology/family\u003e \u003chttp://dbpedia.org/resource/Canidae\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Mammal\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Canidae",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Canidae",
        "seq": "43,50"
      }
    ],
    "id": "4d9cdb81e3394b4fab4a281827ca89fe",
    "predicate mapping": [
      {
        "label": "family",
        "uri": "http://dbpedia.org/ontology/family",
        "seq": "33,39",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "mammal",
        "uri": "http://dbpedia.org/ontology/Mammal",
        "seq": "19,25",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What sports can be played in Kharghar\u0027s schools",
    "SerialNumber": "794",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/city\u003e \u003chttp://dbpedia.org/resource/Kharghar\u003e . ?x \u003chttp://dbpedia.org/ontology/sport\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/School\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Kharghar",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Kharghar",
        "seq": "29,37"
      }
    ],
    "id": "b438f7d1e9084d009019042d4cae9c70",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/city",
        "seq": "26,28",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "sport",
        "uri": "http://dbpedia.org/ontology/sport",
        "seq": "5,10",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "school",
        "uri": "http://dbpedia.org/ontology/School",
        "seq": "40,46",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the origin of Henry Cluney ?",
    "SerialNumber": "795",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Henry_Cluney\u003e \u003chttp://dbpedia.org/property/origin\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Henry Cluney",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Henry_Cluney",
        "seq": "19,31"
      }
    ],
    "id": "0737179a939545608332c4f961a2373c",
    "predicate mapping": [
      {
        "label": "origin",
        "uri": "http://dbpedia.org/property/origin",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "Which football team is in a city where A J Clark was a builder?",
    "SerialNumber": "796",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/builder\u003e \u003chttp://dbpedia.org/resource/A._James_Clark\u003e . ?uri \u003chttp://dbpedia.org/property/city\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/AmericanFootballTeam\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "A J Clark",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/A._James_Clark",
        "seq": "41,48"
      }
    ],
    "id": "bfa3a1b13bce417a9befe12eabeda20d",
    "predicate mapping": [
      {
        "label": "builder",
        "uri": "http://dbpedia.org/ontology/builder",
        "seq": "55,62",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "city",
        "uri": "http://dbpedia.org/property/city",
        "seq": "28,32",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "football team",
        "uri": "http://dbpedia.org/ontology/AmericanFootballTeam",
        "seq": "6,19",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "What are the current music bands of Chester Bennington?",
    "SerialNumber": "798",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/currentMembers\u003e \u003chttp://dbpedia.org/resource/Chester_Bennington\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Chester Bennington",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Chester_Bennington",
        "seq": "36,54"
      }
    ],
    "id": "1d04a828ba6f427eac7fe74af1769003",
    "predicate mapping": [
      {
        "label": "current",
        "uri": "http://dbpedia.org/property/currentMembers",
        "seq": "13,20",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "For which team does Ramiro Pea play ?",
    "SerialNumber": "799",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Ramiro_Peña\u003e \u003chttp://dbpedia.org/ontology/team\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ramiro Pea",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Ramiro_Peña",
        "seq": "20,30"
      }
    ],
    "id": "6e7de39eb6f7486286b10b30a81637ab",
    "predicate mapping": [
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/team",
        "seq": "10,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What is the leader of the government agency which is the military unit of Erich Kempka ?",
    "SerialNumber": "801",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Erich_Kempka\u003e \u003chttp://dbpedia.org/ontology/militaryUnit\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/leader\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Erich Kempka",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Erich_Kempka",
        "seq": "74,86"
      }
    ],
    "id": "70ff6c1f39f74fbe9d2b6229a7b825c1",
    "predicate mapping": [
      {
        "label": "military unit",
        "uri": "http://dbpedia.org/ontology/militaryUnit",
        "seq": "57,70",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "leader",
        "uri": "http://dbpedia.org/ontology/leader",
        "seq": "12,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Which offices were held by the politicians who held their allegiance to the union of american civil war?",
    "SerialNumber": "802",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/allegiance\u003e \u003chttp://dbpedia.org/resource/Union_(American_Civil_War)\u003e . ?x \u003chttp://dbpedia.org/property/office\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/OfficeHolder\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "union",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Union_(American_Civil_War)",
        "seq": "76,81"
      }
    ],
    "id": "6d8299cbdb824323a42be4e46d7c60c3",
    "predicate mapping": [
      {
        "label": "allegiance",
        "uri": "http://dbpedia.org/property/allegiance",
        "seq": "58,68",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "office",
        "uri": "http://dbpedia.org/property/office",
        "seq": "6,12",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "offices",
        "uri": "http://dbpedia.org/ontology/OfficeHolder",
        "seq": "6,13",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Which awards did the narrator of Oscar and Lucinda win?",
    "SerialNumber": "803",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Oscar_and_Lucinda_(film)\u003e \u003chttp://dbpedia.org/ontology/narrator\u003e ?x . ?x \u003chttp://dbpedia.org/property/awards\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Oscar and Lucinda",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Oscar_and_Lucinda_(film)",
        "seq": "33,50"
      }
    ],
    "id": "4034b4110a224b589124d0037cfd52c3",
    "predicate mapping": [
      {
        "label": "narrator",
        "uri": "http://dbpedia.org/ontology/narrator",
        "seq": "21,29",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards",
        "seq": "6,12",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the serving line of Daund Junction railway station?",
    "SerialNumber": "804",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Daund_Junction_railway_station\u003e \u003chttp://dbpedia.org/ontology/servingRailwayLine\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Daund Junction railway station",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Daund_Junction_railway_station",
        "seq": "25,55"
      }
    ],
    "id": "222add5c80274f5b86e1221896e34865",
    "predicate mapping": [
      {
        "label": "serving railway line",
        "uri": "http://dbpedia.org/ontology/servingRailwayLine",
        "seq": "-1,19",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "On what subjects was Broca\u0027s Brain written?",
    "SerialNumber": "805",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Broca\u0027s_Brain\u003e \u003chttp://dbpedia.org/property/subject\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Broca\u0027s Brain",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Broca\u0027s_Brain",
        "seq": "21,34"
      }
    ],
    "id": "80f74a9018ae47769a3c567eee3066b9",
    "predicate mapping": [
      {
        "label": "subject",
        "uri": "http://dbpedia.org/property/subject",
        "seq": "8,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which purpose of the Maharashtra Chess Association is Abhijit kunte is also know for ?",
    "SerialNumber": "806",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Maharashtra_Chess_Association\u003e \u003chttp://dbpedia.org/property/purpose\u003e ?uri. \u003chttp://dbpedia.org/resource/Abhijit_Kunte\u003e \u003chttp://dbpedia.org/property/knownFor\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Maharashtra Chess Association",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Maharashtra_Chess_Association",
        "seq": "21,50"
      },
      {
        "label": "Abhijit kunte",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Abhijit_Kunte",
        "seq": "54,67"
      }
    ],
    "id": "c9f88e12945544de9fc544118870c95e",
    "predicate mapping": [
      {
        "label": "purpose",
        "uri": "http://dbpedia.org/property/purpose",
        "seq": "6,13",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "know for",
        "uri": "http://dbpedia.org/property/knownFor",
        "seq": "76,84",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Who are the people who influenced the writers of Evenor ?",
    "SerialNumber": "813",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Evenor_(collection)\u003e \u003chttp://dbpedia.org/ontology/author\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/influenced\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Evenor",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Evenor_(collection)",
        "seq": "49,55"
      }
    ],
    "id": "403c3d0a80c9462f9baf9fbe7edcbff0",
    "predicate mapping": [
      {
        "label": "writers",
        "uri": "http://dbpedia.org/ontology/author",
        "seq": "38,45",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "influenced",
        "uri": "http://dbpedia.org/ontology/influenced",
        "seq": "23,33",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What is the mascot of alma mater of John O Moseley?",
    "SerialNumber": "817",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/John_O._Moseley\u003e \u003chttp://dbpedia.org/property/almaMater\u003e ?x . ?x \u003chttp://dbpedia.org/property/mascot\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "John O Moseley",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/John_O._Moseley",
        "seq": "36,50"
      }
    ],
    "id": "da229f76f78d4af7bc559dab6f9f3d00",
    "predicate mapping": [
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/property/almaMater",
        "seq": "22,32",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "mascot",
        "uri": "http://dbpedia.org/property/mascot",
        "seq": "12,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Henry McDaniel\u0027s trained horses have won which awards?",
    "SerialNumber": "818",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/trainer\u003e \u003chttp://dbpedia.org/resource/Henry_McDaniel_(racehorse_trainer)\u003e . ?x \u003chttp://dbpedia.org/ontology/honours\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Horse\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Henry McDaniel",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Henry_McDaniel_(racehorse_trainer)",
        "seq": "0,14"
      }
    ],
    "id": "e00e1461078d4aacba00099390f97ced",
    "predicate mapping": [
      {
        "label": "trained",
        "uri": "http://dbpedia.org/property/trainer",
        "seq": "17,24",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/honours",
        "seq": "47,53",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "horse",
        "uri": "http://dbpedia.org/ontology/Horse",
        "seq": "25,30",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What are the Languages of Zabbaleen ?",
    "SerialNumber": "819",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Zabbaleen\u003e \u003chttp://dbpedia.org/property/languages\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Zabbaleen",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Zabbaleen",
        "seq": "26,35"
      }
    ],
    "id": "9985f6fa134e4a0eb0cb51e125757840",
    "predicate mapping": [
      {
        "label": "Languages",
        "uri": "http://dbpedia.org/property/languages",
        "seq": "13,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "List down the important people of The Elders ?",
    "SerialNumber": "820",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/The_Elders_(organization)\u003e \u003chttp://dbpedia.org/property/keyPeople\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "The Elders",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Elders_(organization)",
        "seq": "34,44"
      }
    ],
    "id": "498a45b06c174d1d87a2f97ad4d3cd8c",
    "predicate mapping": [
      {
        "label": "people",
        "uri": "http://dbpedia.org/property/keyPeople",
        "seq": "24,30",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Through which label did Mel Brooks produce his movie?",
    "SerialNumber": "821",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/producer\u003e \u003chttp://dbpedia.org/resource/Mel_Brooks\u003e . ?x \u003chttp://dbpedia.org/property/label\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Mel Brooks",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Mel_Brooks",
        "seq": "24,34"
      }
    ],
    "id": "b41762bf722a4fa7a80d93b0759d28c6",
    "predicate mapping": [
      {
        "label": "produce",
        "uri": "http://dbpedia.org/property/producer",
        "seq": "35,42",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "label",
        "uri": "http://dbpedia.org/property/label",
        "seq": "14,19",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "47,52",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "401",
    "question": "How many scientists are known for the Manhatten Project?",
    "SerialNumber": "822",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/property/knownFor\u003e \u003chttp://dbpedia.org/resource/Manhattan_Project\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Scientist\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Manhatten Project",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Manhattan_Project",
        "seq": "38,47"
      }
    ],
    "id": "58cce734a7f44455a0cf5a7d76f94bf2",
    "predicate mapping": [
      {
        "label": "known for",
        "uri": "http://dbpedia.org/property/knownFor",
        "seq": "24,33",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "scientist",
        "uri": "http://dbpedia.org/ontology/Scientist",
        "seq": "9,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which broadcast area of Mauritius Broadcasting Corporation is also the nationality of Michael Medor ?",
    "SerialNumber": "823",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Mauritius_Broadcasting_Corporation\u003e \u003chttp://dbpedia.org/property/broadcastArea\u003e ?uri. \u003chttp://dbpedia.org/resource/Michael_Medor\u003e \u003chttp://dbpedia.org/ontology/nationality\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Mauritius Broadcasting Corporation",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Mauritius_Broadcasting_Corporation",
        "seq": "24,58"
      },
      {
        "label": "Michael Medor",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Michael_Medor",
        "seq": "86,99"
      }
    ],
    "id": "4230209176f74a3380d70219147cb40e",
    "predicate mapping": [
      {
        "label": "broadcast area",
        "uri": "http://dbpedia.org/property/broadcastArea",
        "seq": "6,20",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "nationality",
        "uri": "http://dbpedia.org/ontology/nationality",
        "seq": "71,82",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "What is the settlement whose neighboring municipalities is Lancy and mayor name is Esther Alder?",
    "SerialNumber": "827",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/neighboringMunicipalities\u003e \u003chttp://dbpedia.org/resource/Lancy\u003e . ?uri \u003chttp://dbpedia.org/ontology/mayor\u003e \u003chttp://dbpedia.org/resource/Esther_Alder\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Settlement\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Lancy",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Lancy",
        "seq": "59,64"
      },
      {
        "label": "Esther Alder",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Esther_Alder",
        "seq": "83,95"
      }
    ],
    "id": "8f3f49b511d24b11956f541a0bc155f5",
    "predicate mapping": [
      {
        "label": "neighboring municipalities",
        "uri": "http://dbpedia.org/property/neighboringMunicipalities",
        "seq": "29,55",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "mayor",
        "uri": "http://dbpedia.org/ontology/mayor",
        "seq": "69,74",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "settlement",
        "uri": "http://dbpedia.org/ontology/Settlement",
        "seq": "12,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What is the television show whose executive producer is Douglas Netter?",
    "SerialNumber": "828",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/executiveProducer\u003e \u003chttp://dbpedia.org/resource/Douglas_Netter\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Douglas Netter",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Douglas_Netter",
        "seq": "56,70"
      }
    ],
    "id": "9d8915a4779f49148599be5ab27a571d",
    "predicate mapping": [
      {
        "label": "executive producer",
        "uri": "http://dbpedia.org/ontology/executiveProducer",
        "seq": "34,52",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "12,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Whihc alma mater of angela Trusty is also the training center of David Scherman ?",
    "SerialNumber": "829",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/David_Scherman\u003e \u003chttp://dbpedia.org/ontology/training\u003e ?uri. \u003chttp://dbpedia.org/resource/Angela_Trusty\u003e \u003chttp://dbpedia.org/ontology/almaMater\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "David Scherman",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/David_Scherman",
        "seq": "65,79"
      },
      {
        "label": "angela Trusty",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Angela_Trusty",
        "seq": "20,33"
      }
    ],
    "id": "e631c13576674e3a99d3ba6ec5186338",
    "predicate mapping": [
      {
        "label": "training",
        "uri": "http://dbpedia.org/ontology/training",
        "seq": "46,54",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/ontology/almaMater",
        "seq": "6,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which successor of Philippine Ports Authority is the state of origin of Ruben J. Villote ?",
    "SerialNumber": "831",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Philippine_Ports_Authority\u003e \u003chttp://dbpedia.org/ontology/successor\u003e ?uri. \u003chttp://dbpedia.org/resource/Ruben_J._Villote\u003e \u003chttp://dbpedia.org/ontology/stateOfOrigin\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Philippine Ports Authority",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Philippine_Ports_Authority",
        "seq": "19,45"
      },
      {
        "label": "Ruben J. Villote",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ruben_J._Villote",
        "seq": "72,88"
      }
    ],
    "id": "b9c7b8e256e64e948ef9b537af9aa574",
    "predicate mapping": [
      {
        "label": "successor",
        "uri": "http://dbpedia.org/ontology/successor",
        "seq": "6,15",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "state of origin",
        "uri": "http://dbpedia.org/ontology/stateOfOrigin",
        "seq": "53,68",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who is the spouse of Willian Menalaus?",
    "SerialNumber": "832",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/William_Menelaus\u003e \u003chttp://dbpedia.org/ontology/spouse\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Willian Menalaus",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/William_Menelaus",
        "seq": "21,37"
      }
    ],
    "id": "ea6c7a88f9a643beb176f5c9e5c2a632",
    "predicate mapping": [
      {
        "label": "spouse",
        "uri": "http://dbpedia.org/ontology/spouse",
        "seq": "11,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What television show is aired on channel Sirius XM Holdings?",
    "SerialNumber": "833",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/channel\u003e \u003chttp://dbpedia.org/resource/Sirius_XM_Holdings\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Sirius XM Holdings",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Sirius_XM_Holdings",
        "seq": "41,59"
      }
    ],
    "id": "dafa96a08d1e4268be2cd01faa56f652",
    "predicate mapping": [
      {
        "label": "channel",
        "uri": "http://dbpedia.org/ontology/channel",
        "seq": "33,40",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "5,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Is Joe Schilling the trainer of Nick Diaz?",
    "SerialNumber": "834",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Nick_Diaz\u003e \u003chttp://dbpedia.org/ontology/trainer\u003e \u003chttp://dbpedia.org/resource/Joe_Schilling\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Nick Diaz",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Nick_Diaz",
        "seq": "32,41"
      },
      {
        "label": "Joe Schilling",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Joe_Schilling",
        "seq": "3,16"
      }
    ],
    "id": "ea9a58014dfc4200ba7ad903db937419",
    "predicate mapping": [
      {
        "label": "trainer",
        "uri": "http://dbpedia.org/ontology/trainer",
        "seq": "21,28",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the associate acts of  Martin Pugh?",
    "SerialNumber": "835",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Martin_Pugh\u003e \u003chttp://dbpedia.org/property/associatedActs\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Martin Pugh",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Martin_Pugh",
        "seq": "28,39"
      }
    ],
    "id": "e491eb48c1824d5b8ae4e30f80a67e90",
    "predicate mapping": [
      {
        "label": "associate acts",
        "uri": "http://dbpedia.org/property/associatedActs",
        "seq": "9,23",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Which domain\u0027s journals did Willard Fiske edit?",
    "SerialNumber": "836",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/editor\u003e \u003chttp://dbpedia.org/resource/Willard_Fiske\u003e . ?x \u003chttp://dbpedia.org/property/discipline\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/AcademicJournal\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Willard Fiske",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Willard_Fiske",
        "seq": "28,41"
      }
    ],
    "id": "151691666bec45238d4879d05f239dd4",
    "predicate mapping": [
      {
        "label": "edit",
        "uri": "http://dbpedia.org/property/editor",
        "seq": "42,46",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "domain",
        "uri": "http://dbpedia.org/property/discipline",
        "seq": "6,12",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "journals",
        "uri": "http://dbpedia.org/ontology/AcademicJournal",
        "seq": "15,23",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Is James Hetfield a band member of Metallica?",
    "SerialNumber": "837",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Metallica\u003e \u003chttp://dbpedia.org/ontology/bandMember\u003e \u003chttp://dbpedia.org/resource/James_Hetfield\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Metallica",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Metallica",
        "seq": "35,44"
      },
      {
        "label": "James Hetfield",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/James_Hetfield",
        "seq": "3,17"
      }
    ],
    "id": "d27aec4554814245aba1890efc687d41",
    "predicate mapping": [
      {
        "label": "band member",
        "uri": "http://dbpedia.org/ontology/bandMember",
        "seq": "20,31",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Which baseball team is managed by Bruce Bochy?",
    "SerialNumber": "838",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/manager\u003e \u003chttp://dbpedia.org/resource/Bruce_Bochy\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/BaseballTeam\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Bruce Bochy",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Bruce_Bochy",
        "seq": "34,45"
      }
    ],
    "id": "8d0300b08e544d4a98727862063b751f",
    "predicate mapping": [
      {
        "label": "managed",
        "uri": "http://dbpedia.org/ontology/manager",
        "seq": "23,30",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "baseball team",
        "uri": "http://dbpedia.org/ontology/BaseballTeam",
        "seq": "6,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the F1 racer with relative as Ralf Schumacher and has child named Mick Schumacher?",
    "SerialNumber": "839",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/relatives\u003e \u003chttp://dbpedia.org/resource/Ralf_Schumacher\u003e . ?uri \u003chttp://dbpedia.org/ontology/child\u003e \u003chttp://dbpedia.org/resource/Mick_Schumacher\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/FormulaOneRacer\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ralf Schumacher",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Ralf_Schumacher",
        "seq": "35,50"
      },
      {
        "label": "Mick Schumacher",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Mick_Schumacher",
        "seq": "71,86"
      }
    ],
    "id": "2a230169f9384e17b2a51ca0553f5fd4",
    "predicate mapping": [
      {
        "label": "relative",
        "uri": "http://dbpedia.org/property/relatives",
        "seq": "23,31",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "has child",
        "uri": "http://dbpedia.org/ontology/child",
        "seq": "55,64",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "racer",
        "uri": "http://dbpedia.org/ontology/FormulaOneRacer",
        "seq": "12,17",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "What is the person known for who is the movie director of Sleepy-Time Squirrel ?",
    "SerialNumber": "843",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Sleepy-Time_Squirrel\u003e \u003chttp://dbpedia.org/property/director\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/knownFor\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Sleepy-Time Squirrel",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Sleepy-Time_Squirrel",
        "seq": "58,78"
      }
    ],
    "id": "744c835886844eeca2d45ce92e2d5c28",
    "predicate mapping": [
      {
        "label": "director",
        "uri": "http://dbpedia.org/property/director",
        "seq": "46,54",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "known for",
        "uri": "http://dbpedia.org/ontology/knownFor",
        "seq": "19,28",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/Person",
        "seq": "12,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What kind of music is produced at the record label founded by Andre Bourgeois?",
    "SerialNumber": "844",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/founder\u003e \u003chttp://dbpedia.org/resource/André_Bourgeois\u003e . ?x \u003chttp://dbpedia.org/ontology/genre\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/RecordLabel\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Andre Bourgeois",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/André_Bourgeois",
        "seq": "62,77"
      }
    ],
    "id": "41e26ecabe2c4da4a506fd9fee06b197",
    "predicate mapping": [
      {
        "label": "founded by",
        "uri": "http://dbpedia.org/property/founder",
        "seq": "51,61",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "kind of music",
        "uri": "http://dbpedia.org/ontology/genre",
        "seq": "5,18",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "record label",
        "uri": "http://dbpedia.org/ontology/RecordLabel",
        "seq": "38,50",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which political party of Arunachal Pradesh Legislative Assembly election, 2014 was the leader of Rishikesh ?",
    "SerialNumber": "845",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Arunachal_Pradesh_Legislative_Assembly_election,_2014\u003e \u003chttp://dbpedia.org/property/party\u003e ?uri. \u003chttp://dbpedia.org/resource/Rishikesh\u003e \u003chttp://dbpedia.org/ontology/leaderName\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Arunachal Pradesh Legislative Assembly election, 2014",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Arunachal_Pradesh_Legislative_Assembly_election,_2014",
        "seq": "25,78"
      },
      {
        "label": "Rishikesh",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Rishikesh",
        "seq": "97,106"
      }
    ],
    "id": "34a0e332264149388873f74ac371829a",
    "predicate mapping": [
      {
        "label": "political party",
        "uri": "http://dbpedia.org/property/party",
        "seq": "6,21",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "leader",
        "uri": "http://dbpedia.org/ontology/leaderName",
        "seq": "87,93",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the common battle fought by Stephen Urban and Ali Habib Mahmud ?",
    "SerialNumber": "847",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Stephen_Urban\u003e \u003chttp://dbpedia.org/ontology/battle\u003e ?uri. \u003chttp://dbpedia.org/resource/Ali_Habib_Mahmud\u003e \u003chttp://dbpedia.org/property/battles\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Stephen Urban",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Stephen_Urban",
        "seq": "36,49"
      },
      {
        "label": "Ali Habib Mahmud",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Ali_Habib_Mahmud",
        "seq": "54,70"
      }
    ],
    "id": "96b03adc9d314bfa8a97e5d5d784a62e",
    "predicate mapping": [
      {
        "label": "battle",
        "uri": "http://dbpedia.org/ontology/battle",
        "seq": "19,25",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "battle",
        "uri": "http://dbpedia.org/property/battles",
        "seq": "19,25",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who is the cover artist of Doctor Mirabilis (novel) ?",
    "SerialNumber": "848",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Doctor_Mirabilis_(novel)\u003e \u003chttp://dbpedia.org/property/coverArtist\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Doctor Mirabilis (novel)",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Doctor_Mirabilis_(novel)",
        "seq": "27,51"
      }
    ],
    "id": "ecbda26b25fc4319a9c2f2b629abdd69",
    "predicate mapping": [
      {
        "label": "cover artist",
        "uri": "http://dbpedia.org/property/coverArtist",
        "seq": "11,23",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Where did Whitney Wistert debut?",
    "SerialNumber": "849",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Whitey_Wistert\u003e \u003chttp://dbpedia.org/property/debutteam\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Whitney Wistert",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Whitey_Wistert",
        "seq": "10,25"
      }
    ],
    "id": "5a09891ab68147329f938e2031e236a0",
    "predicate mapping": [
      {
        "label": "debut",
        "uri": "http://dbpedia.org/property/debutteam",
        "seq": "26,31",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the sport league of Hampton Roads Rhinos ?",
    "SerialNumber": "851",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Hampton_Roads_Rhinos\u003e \u003chttp://dbpedia.org/property/league\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Hampton Roads Rhinos",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Hampton_Roads_Rhinos",
        "seq": "25,45"
      }
    ],
    "id": "d6d6f6e87c26462fb54e12d67e50ba61",
    "predicate mapping": [
      {
        "label": "league",
        "uri": "http://dbpedia.org/property/league",
        "seq": "15,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "What novels are belong to the genre of Utopian and dystopian fiction?",
    "SerialNumber": "852",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/literaryGenre\u003e \u003chttp://dbpedia.org/resource/Utopian_and_dystopian_fiction\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Utopian",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Utopian_and_dystopian_fiction",
        "seq": "39,46"
      }
    ],
    "id": "55717a4e06d940f9a6e2d0fee2b4709d",
    "predicate mapping": [
      {
        "label": "genre",
        "uri": "http://dbpedia.org/ontology/literaryGenre",
        "seq": "30,35",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the programme format of WWTR ?",
    "SerialNumber": "854",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/WWTR\u003e \u003chttp://dbpedia.org/ontology/programmeFormat\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "WWTR",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/WWTR",
        "seq": "32,36"
      }
    ],
    "id": "1e42c94409f64658a8d74bc8554ae63d",
    "predicate mapping": [
      {
        "label": "programme format",
        "uri": "http://dbpedia.org/ontology/programmeFormat",
        "seq": "12,28",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What is the home ground of the clubs managed by Ciao Zanardi?",
    "SerialNumber": "855",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/manager\u003e \u003chttp://dbpedia.org/resource/Caio_Zanardi\u003e . ?x \u003chttp://dbpedia.org/ontology/ground\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/SoccerClubSeason\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ciao Zanardi",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Caio_Zanardi",
        "seq": "48,60"
      }
    ],
    "id": "603c322f0c284704ba4d70f749b724b2",
    "predicate mapping": [
      {
        "label": "managed",
        "uri": "http://dbpedia.org/ontology/manager",
        "seq": "37,44",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "ground",
        "uri": "http://dbpedia.org/ontology/ground",
        "seq": "17,23",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "clubs",
        "uri": "http://dbpedia.org/ontology/SoccerClubSeason",
        "seq": "31,36",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the university of Alexandre Tichonov ?",
    "SerialNumber": "858",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Alexandre_Tichonov\u003e \u003chttp://dbpedia.org/property/university\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Alexandre Tichonov",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Alexandre_Tichonov",
        "seq": "23,41"
      }
    ],
    "id": "f0185fa38b024eb1acf082b227049b42",
    "predicate mapping": [
      {
        "label": "university",
        "uri": "http://dbpedia.org/property/university",
        "seq": "9,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What subjects does the subsequent work of The Dragons of Eden deals with  ?",
    "SerialNumber": "859",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/The_Dragons_of_Eden\u003e \u003chttp://dbpedia.org/ontology/subsequentWork\u003e ?x . ?x \u003chttp://dbpedia.org/property/subject\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "The Dragons of Eden",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Dragons_of_Eden",
        "seq": "42,61"
      }
    ],
    "id": "0ac2d94a73f64e1181b207736b31a127",
    "predicate mapping": [
      {
        "label": "subsequent work",
        "uri": "http://dbpedia.org/ontology/subsequentWork",
        "seq": "23,38",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "subject",
        "uri": "http://dbpedia.org/property/subject",
        "seq": "5,12",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the office of Richard Coke ?",
    "SerialNumber": "861",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Richard_Coke\u003e \u003chttp://dbpedia.org/property/office\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Richard Coke",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Richard_Coke",
        "seq": "19,31"
      }
    ],
    "id": "793d70e3bef54e1eaf081dc7e518ec08",
    "predicate mapping": [
      {
        "label": "office",
        "uri": "http://dbpedia.org/property/office",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which allegiance of the John Kotelawala is also the  sovereign state of the Sanath Weerakoon ?",
    "SerialNumber": "864",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/John_Kotelawala\u003e \u003chttp://dbpedia.org/property/allegiance\u003e ?uri. \u003chttp://dbpedia.org/resource/Sanath_Weerakoon\u003e \u003chttp://dbpedia.org/ontology/country\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "John Kotelawala",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/John_Kotelawala",
        "seq": "24,39"
      },
      {
        "label": "Sanath Weerakoon",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Sanath_Weerakoon",
        "seq": "76,92"
      }
    ],
    "id": "64a7ff80505c4d709cd0b19106d1cf2d",
    "predicate mapping": [
      {
        "label": "allegiance",
        "uri": "http://dbpedia.org/property/allegiance",
        "seq": "6,16",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "sovereign state",
        "uri": "http://dbpedia.org/ontology/country",
        "seq": "53,68",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Which city\u0027s teams have been coached by Gary Kubaik?",
    "SerialNumber": "865",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/coach\u003e \u003chttp://dbpedia.org/resource/Gary_Kubiak\u003e . ?x \u003chttp://dbpedia.org/ontology/locationCity\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/SportsTeam\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Gary Kubaik",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Gary_Kubiak",
        "seq": "40,51"
      }
    ],
    "id": "9e5f22b859b14a329ce320977751c4ef",
    "predicate mapping": [
      {
        "label": "coach",
        "uri": "http://dbpedia.org/property/coach",
        "seq": "29,34",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "city\u0027s",
        "uri": "http://dbpedia.org/ontology/locationCity",
        "seq": "6,12",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/SportsTeam",
        "seq": "13,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Was Writings and Drawings illustrated by Bob Dylan?",
    "SerialNumber": "872",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Writings_and_Drawings\u003e \u003chttp://dbpedia.org/property/illustrator\u003e \u003chttp://dbpedia.org/resource/Bob_Dylan\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Writings and Drawings",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Writings_and_Drawings",
        "seq": "4,25"
      },
      {
        "label": "Bob Dylan",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Bob_Dylan",
        "seq": "41,50"
      }
    ],
    "id": "7d1d3175ed2b434ab6460785837338f2",
    "predicate mapping": [
      {
        "label": "illustrated by",
        "uri": "http://dbpedia.org/property/illustrator",
        "seq": "26,40",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "How many major shrine are there, of the saints whose beatified by Pope Pius XI ?",
    "SerialNumber": "874",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/beatifiedBy\u003e \u003chttp://dbpedia.org/resource/Pope_Pius_XI\u003e . ?x \u003chttp://dbpedia.org/ontology/majorShrine\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Pius XI",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Pope_Pius_XI",
        "seq": "71,78"
      }
    ],
    "id": "3423cef33b1146fe9432cb59652d6c94",
    "predicate mapping": [
      {
        "label": "beatified by",
        "uri": "http://dbpedia.org/property/beatifiedBy",
        "seq": "53,65",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "major shrine",
        "uri": "http://dbpedia.org/ontology/majorShrine",
        "seq": "9,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "List the guest of the show The Other Side (The Outer Limits)?",
    "SerialNumber": "875",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/The_Other_Side_(The_Outer_Limits)\u003e \u003chttp://dbpedia.org/property/guests\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "The Other Side (The Outer Limits)",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Other_Side_(The_Outer_Limits)",
        "seq": "27,60"
      }
    ],
    "id": "9e935a3e2d31428c87992e9f8bca00bd",
    "predicate mapping": [
      {
        "label": "guest",
        "uri": "http://dbpedia.org/property/guests",
        "seq": "9,14",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who are the characters of Batman Live?",
    "SerialNumber": "876",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Batman_Live\u003e \u003chttp://dbpedia.org/property/characters\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Batman Live",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Batman_Live",
        "seq": "26,37"
      }
    ],
    "id": "9ae7378d981c4a9ca527a177a3042a8e",
    "predicate mapping": [
      {
        "label": "characters",
        "uri": "http://dbpedia.org/property/characters",
        "seq": "12,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "Who is buried at the place governed by National Park Service?",
    "SerialNumber": "877",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/governingBody\u003e \u003chttp://dbpedia.org/resource/National_Park_Service\u003e . ?uri \u003chttp://dbpedia.org/property/restingplace\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "National Park Service",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/National_Park_Service",
        "seq": "39,60"
      }
    ],
    "id": "329c2825367b4e55a7788f13852af6e8",
    "predicate mapping": [
      {
        "label": "governed",
        "uri": "http://dbpedia.org/property/governingBody",
        "seq": "27,35",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "place",
        "uri": "http://dbpedia.org/property/restingplace",
        "seq": "21,26",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "101",
    "question": "Count all the things licensed as Software as a service.",
    "SerialNumber": "878",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/ontology/license\u003e \u003chttp://dbpedia.org/resource/Software_as_a_service\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Software as a service",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Software_as_a_service",
        "seq": "33,54"
      }
    ],
    "id": "fef09ad090cf49e09d0a7cc2b6befc0c",
    "predicate mapping": [
      {
        "label": "license",
        "uri": "http://dbpedia.org/ontology/license",
        "seq": "21,28",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "What show  has theme music composer as Ron Grainer and at the same time  related to Class (2016 TV series)?",
    "SerialNumber": "879",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/themeMusicComposer\u003e \u003chttp://dbpedia.org/resource/Ron_Grainer\u003e . ?uri \u003chttp://dbpedia.org/ontology/related\u003e \u003chttp://dbpedia.org/resource/Class_(2016_TV_series)\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ron Grainer",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ron_Grainer",
        "seq": "39,50"
      },
      {
        "label": "Class (2016 TV series)",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Class_(2016_TV_series)",
        "seq": "84,106"
      }
    ],
    "id": "be7a77cb153746509db12c6ab5f4b69f",
    "predicate mapping": [
      {
        "label": "theme music composer",
        "uri": "http://dbpedia.org/property/themeMusicComposer",
        "seq": "15,35",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "related",
        "uri": "http://dbpedia.org/ontology/related",
        "seq": "73,80",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "5,9",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who are the stars of the movies which are distributed by Artisan Entertainment ?",
    "SerialNumber": "882",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/distributor\u003e \u003chttp://dbpedia.org/resource/Artisan_Entertainment\u003e . ?x \u003chttp://dbpedia.org/ontology/starring\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Artisan Entertainment",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Artisan_Entertainment",
        "seq": "57,78"
      }
    ],
    "id": "d505d3763ec449168b961367ed3a424b",
    "predicate mapping": [
      {
        "label": "distributed by",
        "uri": "http://dbpedia.org/property/distributor",
        "seq": "42,56",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "stars",
        "uri": "http://dbpedia.org/ontology/starring",
        "seq": "12,17",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "25,30",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What awards have been once awarded to Ingmar Bergman, and have employed the service of Laemmle Theatres?",
    "SerialNumber": "884",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Ingmar_Bergman\u003e \u003chttp://dbpedia.org/property/awards\u003e ?uri. \u003chttp://dbpedia.org/resource/Laemmle_Theatres\u003e \u003chttp://dbpedia.org/ontology/service\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ingmar Bergman",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Ingmar_Bergman",
        "seq": "38,52"
      },
      {
        "label": "Laemmle Theatres",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Laemmle_Theatres",
        "seq": "87,103"
      }
    ],
    "id": "b60924d7dde34c5d914cafff9edd9023",
    "predicate mapping": [
      {
        "label": "awarded",
        "uri": "http://dbpedia.org/property/awards",
        "seq": "27,34",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "service",
        "uri": "http://dbpedia.org/ontology/service",
        "seq": "76,83",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who produced wizards vs aliens?",
    "SerialNumber": "885",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Wizards_vs_Aliens\u003e \u003chttp://dbpedia.org/ontology/producer\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "wizards vs aliens",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Wizards_vs_Aliens",
        "seq": "13,30"
      }
    ],
    "id": "53a85329c96443f8b76e32e8ee53d78c",
    "predicate mapping": [
      {
        "label": "produced",
        "uri": "http://dbpedia.org/ontology/producer",
        "seq": "4,12",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which team did Bill Murphy and Jean Segura play for?",
    "SerialNumber": "886",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Bill_Murphy_(baseball)\u003e \u003chttp://dbpedia.org/ontology/debutTeam\u003e ?uri. \u003chttp://dbpedia.org/resource/Jean_Segura\u003e \u003chttp://dbpedia.org/ontology/team\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Bill Murphy",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Bill_Murphy_(baseball)",
        "seq": "15,26"
      },
      {
        "label": "Jean Segura",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Jean_Segura",
        "seq": "31,42"
      }
    ],
    "id": "515670bd31cf40348dbbd059c8876662",
    "predicate mapping": [
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/debutTeam",
        "seq": "6,10",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/team",
        "seq": "6,10",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the draft team of Gene Conley ?",
    "SerialNumber": "887",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Gene_Conley\u003e \u003chttp://dbpedia.org/property/draftTeam\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Gene Conley",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Gene_Conley",
        "seq": "26,37"
      }
    ],
    "id": "fb00be1561c84ae488c92a78ab96340e",
    "predicate mapping": [
      {
        "label": "draft team",
        "uri": "http://dbpedia.org/property/draftTeam",
        "seq": "12,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What location country of AH141 is also the nation of malaysia Junior hockey league ?",
    "SerialNumber": "889",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/AH141\u003e \u003chttp://dbpedia.org/ontology/county\u003e ?uri. \u003chttp://dbpedia.org/resource/Malaysia_Junior_Hockey_League\u003e \u003chttp://dbpedia.org/ontology/country\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "AH141",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/AH141",
        "seq": "25,30"
      },
      {
        "label": "malaysia Junior hockey league",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Malaysia_Junior_Hockey_League",
        "seq": "53,82"
      }
    ],
    "id": "2f848ce8ed2a4a2da8c4b8c892a738aa",
    "predicate mapping": [
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/county",
        "seq": "14,21",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/country",
        "seq": "14,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "On how many subjects has Random house publishers published books?",
    "SerialNumber": "890",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/publisher\u003e \u003chttp://dbpedia.org/resource/Random_House\u003e . ?x \u003chttp://dbpedia.org/property/subject\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Random house",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Random_House",
        "seq": "25,37"
      }
    ],
    "id": "61b0b02309714b1ab6e78e1d416a872f",
    "predicate mapping": [
      {
        "label": "publisher",
        "uri": "http://dbpedia.org/property/publisher",
        "seq": "38,47",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "subject",
        "uri": "http://dbpedia.org/property/subject",
        "seq": "12,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the common nationality of Funny Face a comedian and that of Georgina Theodora Wood ?",
    "SerialNumber": "891",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Funny_Face_(comedian)\u003e \u003chttp://dbpedia.org/property/nationality\u003e ?uri. \u003chttp://dbpedia.org/resource/Georgina_Theodora_Wood\u003e \u003chttp://dbpedia.org/ontology/nationality\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Funny Face",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Funny_Face_(comedian)",
        "seq": "34,44"
      },
      {
        "label": "Georgina Theodora Wood",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Georgina_Theodora_Wood",
        "seq": "68,90"
      }
    ],
    "id": "39bdbe59a40c47c7afc10b6b85c1286a",
    "predicate mapping": [
      {
        "label": "nationality",
        "uri": "http://dbpedia.org/property/nationality",
        "seq": "19,30",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "nationality",
        "uri": "http://dbpedia.org/ontology/nationality",
        "seq": "19,30",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What are the things Eric Schiller known for ?",
    "SerialNumber": "893",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Eric_Schiller\u003e \u003chttp://dbpedia.org/ontology/knownFor\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Eric Schiller",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Eric_Schiller",
        "seq": "20,33"
      }
    ],
    "id": "4988ef2fd0df4d35b243ffe31755c171",
    "predicate mapping": [
      {
        "label": "known for",
        "uri": "http://dbpedia.org/ontology/knownFor",
        "seq": "34,43",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which nearest city of Jurgens Site is the death plce of Jimmie Heuga ?",
    "SerialNumber": "895",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Jurgens_Site\u003e \u003chttp://dbpedia.org/property/nearestCity\u003e ?uri. \u003chttp://dbpedia.org/resource/Jimmie_Heuga\u003e \u003chttp://dbpedia.org/property/deathPlace\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jurgens Site",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Jurgens_Site",
        "seq": "22,34"
      },
      {
        "label": "Jimmie Heuga",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Jimmie_Heuga",
        "seq": "56,68"
      }
    ],
    "id": "eda67bd4365e424cb594decde543c99e",
    "predicate mapping": [
      {
        "label": "nearest city",
        "uri": "http://dbpedia.org/property/nearestCity",
        "seq": "6,18",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "death",
        "uri": "http://dbpedia.org/property/deathPlace",
        "seq": "42,47",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "311",
    "question": "What are the nearest city to the historic places whose one of the nearest city is Wisconsin?",
    "SerialNumber": "897",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/nearestCity\u003e \u003chttp://dbpedia.org/resource/Wisconsin\u003e . ?x \u003chttp://dbpedia.org/property/nearestCity\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/HistoricPlace\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Wisconsin",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Wisconsin",
        "seq": "82,91"
      }
    ],
    "id": "f75be1c0090f4e99b6015f9af7d2589d",
    "predicate mapping": [
      {
        "label": "nearest city",
        "uri": "http://dbpedia.org/ontology/nearestCity",
        "seq": "13,25",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "nearest city",
        "uri": "http://dbpedia.org/property/nearestCity",
        "seq": "13,25",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "historic place",
        "uri": "http://dbpedia.org/ontology/HistoricPlace",
        "seq": "33,47",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Who is the leader of the Kriminalpolizei and Ordnungspolizei?",
    "SerialNumber": "898",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Kriminalpolizei\u003e \u003chttp://dbpedia.org/ontology/leader\u003e ?uri. \u003chttp://dbpedia.org/resource/Ordnungspolizei\u003e \u003chttp://dbpedia.org/ontology/leader\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Kriminalpolizei",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Kriminalpolizei",
        "seq": "25,40"
      },
      {
        "label": "Ordnungspolizei",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Ordnungspolizei",
        "seq": "45,60"
      }
    ],
    "id": "df34b20d025a49648aa1d1d8d09d8533",
    "predicate mapping": [
      {
        "label": "leader",
        "uri": "http://dbpedia.org/ontology/leader",
        "seq": "11,17",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "leader",
        "uri": "http://dbpedia.org/ontology/leader",
        "seq": "11,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "To which political party does Virendra Kataria belongs ?",
    "SerialNumber": "900",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Virendra_Kataria\u003e \u003chttp://dbpedia.org/property/party\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Virendra Kataria",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Virendra_Kataria",
        "seq": "30,46"
      }
    ],
    "id": "80973c292e414e8890ed3a1de7f362bf",
    "predicate mapping": [
      {
        "label": "political party",
        "uri": "http://dbpedia.org/property/party",
        "seq": "9,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "List all the former broadcast network of WMDN ?",
    "SerialNumber": "903",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/WMDN\u003e \u003chttp://dbpedia.org/ontology/formerBroadcastNetwork\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "WMDN",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/WMDN",
        "seq": "41,45"
      }
    ],
    "id": "76fc4d62d2b74c798a3b6b61c4d1ff6f",
    "predicate mapping": [
      {
        "label": "former broadcast network",
        "uri": "http://dbpedia.org/ontology/formerBroadcastNetwork",
        "seq": "13,37",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Which ethnicity do Linda Hogan and Riley Reid come from?",
    "SerialNumber": "904",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Linda_Hogan\u003e \u003chttp://dbpedia.org/property/ethnicity\u003e ?uri. \u003chttp://dbpedia.org/resource/Riley_Reid\u003e \u003chttp://dbpedia.org/property/ethnicity\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Linda Hogan",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Linda_Hogan",
        "seq": "19,30"
      },
      {
        "label": "Riley Reid",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Riley_Reid",
        "seq": "35,45"
      }
    ],
    "id": "406e904e414b410dadccc945a9ed205b",
    "predicate mapping": [
      {
        "label": "ethnicity",
        "uri": "http://dbpedia.org/property/ethnicity",
        "seq": "6,15",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "ethnicity",
        "uri": "http://dbpedia.org/property/ethnicity",
        "seq": "6,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "Who are the people which were the influencer of the person, who influenced Costanzo Preve ?",
    "SerialNumber": "905",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Costanzo_Preve\u003e \u003chttp://dbpedia.org/ontology/influencedBy\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/influencedBy\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Costanzo Preve",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Costanzo_Preve",
        "seq": "75,89"
      }
    ],
    "id": "70fe1d61709e49bd895d4cb06d045664",
    "predicate mapping": [
      {
        "label": "influenced",
        "uri": "http://dbpedia.org/ontology/influencedBy",
        "seq": "64,74",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "influenced",
        "uri": "http://dbpedia.org/ontology/influencedBy",
        "seq": "64,74",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/Person",
        "seq": "52,58",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "Who is married to Tony Ramo",
    "SerialNumber": "907",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/partner\u003e \u003chttp://dbpedia.org/resource/Tony_Romo\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Tony Ramo",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Tony_Romo",
        "seq": "18,27"
      }
    ],
    "id": "75d8ae08f021434f8b64b8c089efb56e",
    "predicate mapping": [
      {
        "label": "married to",
        "uri": "http://dbpedia.org/property/partner",
        "seq": "7,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which county of Tremont Avenue is also the birht place of Ron Galotti ?",
    "SerialNumber": "908",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Tremont_Avenue\u003e \u003chttp://dbpedia.org/property/counties\u003e ?uri. \u003chttp://dbpedia.org/resource/Ron_Galotti\u003e \u003chttp://dbpedia.org/ontology/birthPlace\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Tremont Avenue",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Tremont_Avenue",
        "seq": "16,30"
      },
      {
        "label": "Ron Galotti",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Ron_Galotti",
        "seq": "58,69"
      }
    ],
    "id": "ce59dab6544f465aa821fd5c205187fe",
    "predicate mapping": [
      {
        "label": "county",
        "uri": "http://dbpedia.org/property/counties",
        "seq": "6,12",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "place",
        "uri": "http://dbpedia.org/ontology/birthPlace",
        "seq": "49,54",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "What is the debut team of the gridiron football player who coached the 1931 Staten Island Stapletons season ?",
    "SerialNumber": "909",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/1931_Staten_Island_Stapletons_season\u003e \u003chttp://dbpedia.org/ontology/coach\u003e ?x . ?x \u003chttp://dbpedia.org/property/debutteam\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/GridironFootballPlayer\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "1931 Staten Island Stapletons season",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/1931_Staten_Island_Stapletons_season",
        "seq": "71,107"
      }
    ],
    "id": "2f6ed9508dab4dc695a219ed4c3c90b6",
    "predicate mapping": [
      {
        "label": "coach",
        "uri": "http://dbpedia.org/ontology/coach",
        "seq": "59,64",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "debut team",
        "uri": "http://dbpedia.org/property/debutteam",
        "seq": "12,22",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "gridiron football player",
        "uri": "http://dbpedia.org/ontology/GridironFootballPlayer",
        "seq": "30,54",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What is the region of the successor of Mr. Jerome B. Chaffee ?",
    "SerialNumber": "911",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Jerome_B._Chaffee\u003e \u003chttp://dbpedia.org/ontology/successor\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/region\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jerome B. Chaffee",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Jerome_B._Chaffee",
        "seq": "43,60"
      }
    ],
    "id": "d21e712713ec4e57824cf6b277c93553",
    "predicate mapping": [
      {
        "label": "successor",
        "uri": "http://dbpedia.org/ontology/successor",
        "seq": "26,35",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "region",
        "uri": "http://dbpedia.org/ontology/region",
        "seq": "12,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Who appointed Joseph Clay and William Cushing to their office?",
    "SerialNumber": "912",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Joseph_Clay_(Georgia)\u003e \u003chttp://dbpedia.org/ontology/appointer\u003e ?uri. \u003chttp://dbpedia.org/resource/William_Cushing\u003e \u003chttp://dbpedia.org/ontology/appointer\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Joseph Clay",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Joseph_Clay_(Georgia)",
        "seq": "14,25"
      },
      {
        "label": "William Cushing",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/William_Cushing",
        "seq": "30,45"
      }
    ],
    "id": "c641ab471c154f5f85be724766cc04f4",
    "predicate mapping": [
      {
        "label": "appointed",
        "uri": "http://dbpedia.org/ontology/appointer",
        "seq": "4,13",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "appointed",
        "uri": "http://dbpedia.org/ontology/appointer",
        "seq": "4,13",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who first ascented a mountain of Cathedral Peak (California) ?",
    "SerialNumber": "914",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Cathedral_Peak_(California)\u003e \u003chttp://dbpedia.org/ontology/firstAscentPerson\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Cathedral Peak",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Cathedral_Peak_(California)",
        "seq": "33,47"
      }
    ],
    "id": "e118a1a544bf48ee9836c7b3ce7fc651",
    "predicate mapping": [
      {
        "label": "ascented",
        "uri": "http://dbpedia.org/ontology/firstAscentPerson",
        "seq": "10,18",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Name the licensee of the WRVU who has the affiliation of  Monroe Carell Jr. Children\u0027s Hospital at Vanderbilt ?",
    "SerialNumber": "915",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/WRVU\u003e \u003chttp://dbpedia.org/property/licensee\u003e ?uri. \u003chttp://dbpedia.org/resource/Monroe_Carell_Jr._Children\u0027s_Hospital_at_Vanderbilt\u003e \u003chttp://dbpedia.org/property/affiliation\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "WRVU",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/WRVU",
        "seq": "25,29"
      },
      {
        "label": "Monroe Carell Jr. Children\u0027s Hospital at Vanderbilt",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Monroe_Carell_Jr._Children\u0027s_Hospital_at_Vanderbilt",
        "seq": "58,109"
      }
    ],
    "id": "2cac0aa4df6d4ad6918d462993e33e80",
    "predicate mapping": [
      {
        "label": "licensee",
        "uri": "http://dbpedia.org/property/licensee",
        "seq": "9,17",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "affiliation",
        "uri": "http://dbpedia.org/property/affiliation",
        "seq": "42,53",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What awards did the film director of The Haunted House win ?",
    "SerialNumber": "916",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/The_Haunted_House_(1929_film)\u003e \u003chttp://dbpedia.org/ontology/director\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/award\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "The Haunted House",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Haunted_House_(1929_film)",
        "seq": "37,54"
      }
    ],
    "id": "4aa80af1497f49ecbcd3bd93990e9df9",
    "predicate mapping": [
      {
        "label": "film director",
        "uri": "http://dbpedia.org/ontology/director",
        "seq": "20,33",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/award",
        "seq": "5,11",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "In which war did the units garrisoned at Turin fight?",
    "SerialNumber": "917",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/garrison\u003e \u003chttp://dbpedia.org/resource/Turin\u003e . ?x \u003chttp://dbpedia.org/ontology/battle\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Turin",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Turin",
        "seq": "41,46"
      }
    ],
    "id": "00f3d768f79c46eeaa5348f45889e34e",
    "predicate mapping": [
      {
        "label": "garrison",
        "uri": "http://dbpedia.org/property/garrison",
        "seq": "27,35",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "war",
        "uri": "http://dbpedia.org/ontology/battle",
        "seq": "9,12",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "Whose theme music was composed by a band which collaborated with Phish?",
    "SerialNumber": "920",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/associatedBand\u003e \u003chttp://dbpedia.org/resource/Phish\u003e . ?uri \u003chttp://dbpedia.org/property/themeMusicComposer\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Phish",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Phish",
        "seq": "65,70"
      }
    ],
    "id": "b4b48ab141a24da6b6df5ede9f5bfbf3",
    "predicate mapping": [
      {
        "label": "band",
        "uri": "http://dbpedia.org/ontology/associatedBand",
        "seq": "36,40",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "composed",
        "uri": "http://dbpedia.org/property/themeMusicComposer",
        "seq": "22,30",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "Which president had lieutenants whose governor was Bill Clinton?",
    "SerialNumber": "922",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/governor\u003e \u003chttp://dbpedia.org/resource/Bill_Clinton\u003e . ?uri \u003chttp://dbpedia.org/ontology/lieutenant\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/President\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Bill Clinton",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Bill_Clinton",
        "seq": "51,63"
      }
    ],
    "id": "504f89e982944a649b1a6d9e2106f944",
    "predicate mapping": [
      {
        "label": "governor",
        "uri": "http://dbpedia.org/property/governor",
        "seq": "38,46",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "lieutenant",
        "uri": "http://dbpedia.org/ontology/lieutenant",
        "seq": "20,30",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "president",
        "uri": "http://dbpedia.org/ontology/President",
        "seq": "6,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "List the developers who has contributed to both GNOWSYS and GNU TeXmacs ?",
    "SerialNumber": "923",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/GNOWSYS\u003e \u003chttp://dbpedia.org/ontology/developer\u003e ?uri. \u003chttp://dbpedia.org/resource/GNU_TeXmacs\u003e \u003chttp://dbpedia.org/ontology/developer\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "GNOWSYS",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/GNOWSYS",
        "seq": "48,55"
      },
      {
        "label": "GNU TeXmacs",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/GNU_TeXmacs",
        "seq": "60,71"
      }
    ],
    "id": "32bebb59a0fb43aab77ff13a2fba2b4f",
    "predicate mapping": [
      {
        "label": "developer",
        "uri": "http://dbpedia.org/ontology/developer",
        "seq": "9,18",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "developer",
        "uri": "http://dbpedia.org/ontology/developer",
        "seq": "9,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the municipality of Liberty Bell ?",
    "SerialNumber": "924",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Liberty_Bell\u003e \u003chttp://dbpedia.org/ontology/municipality\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Liberty Bell",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Liberty_Bell",
        "seq": "28,40"
      }
    ],
    "id": "b5774df2305a4772bad9f84bc85d5d62",
    "predicate mapping": [
      {
        "label": "municipality",
        "uri": "http://dbpedia.org/ontology/municipality",
        "seq": "12,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which animator of the The Skeleton Dance is also the  cinematographer of the Mickey\u0027s Mellerdrammer?",
    "SerialNumber": "926",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/The_Skeleton_Dance\u003e \u003chttp://dbpedia.org/ontology/animator\u003e ?uri. \u003chttp://dbpedia.org/resource/Mickey\u0027s_Mellerdrammer\u003e \u003chttp://dbpedia.org/property/cinematography\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "The Skeleton Dance",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Skeleton_Dance",
        "seq": "22,40"
      },
      {
        "label": "Mickey\u0027s Mellerdrammer",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Mickey\u0027s_Mellerdrammer",
        "seq": "77,99"
      }
    ],
    "id": "0ffa12b348584eac8502b778b6e3013a",
    "predicate mapping": [
      {
        "label": "animator",
        "uri": "http://dbpedia.org/ontology/animator",
        "seq": "6,14",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "cinematographer",
        "uri": "http://dbpedia.org/property/cinematography",
        "seq": "54,69",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Brian Dunkleman is the presenter of what TV show?",
    "SerialNumber": "928",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/presenter\u003e \u003chttp://dbpedia.org/resource/Brian_Dunkleman\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Brian Dunkleman",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Brian_Dunkleman",
        "seq": "0,15"
      }
    ],
    "id": "74833a9d360e4944ba62ebb5ff1633fb",
    "predicate mapping": [
      {
        "label": "presenter",
        "uri": "http://dbpedia.org/property/presenter",
        "seq": "23,32",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "44,48",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which television show is the subsequent work of Frasier and the opening theme is Gary Portnoy?",
    "SerialNumber": "930",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/subsequentWork\u003e \u003chttp://dbpedia.org/resource/Frasier\u003e . ?uri \u003chttp://dbpedia.org/ontology/openingTheme\u003e \u003chttp://dbpedia.org/resource/Gary_Portnoy\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Frasier",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Frasier",
        "seq": "48,55"
      },
      {
        "label": "Gary Portnoy",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Gary_Portnoy",
        "seq": "81,93"
      }
    ],
    "id": "eea1dcd97f494d799d7fcacd6bad1685",
    "predicate mapping": [
      {
        "label": "subsequent work",
        "uri": "http://dbpedia.org/ontology/subsequentWork",
        "seq": "29,44",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "opening theme",
        "uri": "http://dbpedia.org/ontology/openingTheme",
        "seq": "64,77",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "6,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "Which country\u0027s largest city is Lima?",
    "SerialNumber": "932",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/largestCity\u003e \u003chttp://dbpedia.org/resource/Lima\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Lima",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Lima",
        "seq": "32,36"
      }
    ],
    "id": "ac8eb701fbd94707ac65d5bd874c8b7a",
    "predicate mapping": [
      {
        "label": "largest city",
        "uri": "http://dbpedia.org/ontology/largestCity",
        "seq": "16,28",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "List the awards given to the relatives of Gregorios Bernardakis.",
    "SerialNumber": "933",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Gregorios_Bernardakis\u003e \u003chttp://dbpedia.org/ontology/relative\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/award\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Gregorios Bernardakis",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Gregorios_Bernardakis",
        "seq": "42,63"
      }
    ],
    "id": "89b4110b9d064a0fb8feff6aa5aa2ff2",
    "predicate mapping": [
      {
        "label": "relative",
        "uri": "http://dbpedia.org/ontology/relative",
        "seq": "29,37",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/award",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "106",
    "question": "Count all the games whose distributors are located in America",
    "SerialNumber": "934",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/country\u003e \u003chttp://dbpedia.org/resource/United_States\u003e . ?uri \u003chttp://dbpedia.org/property/distributor\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "America",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/United_States",
        "seq": "54,61"
      }
    ],
    "id": "18993c411e4b43aa9d11cab3a62f9f88",
    "predicate mapping": [
      {
        "label": "count",
        "uri": "http://dbpedia.org/property/country",
        "seq": "-1,4",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "distributor",
        "uri": "http://dbpedia.org/property/distributor",
        "seq": "26,37",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which builder of Ford Straight-6 engine is also the automobile latform provider of Chiva bus ?",
    "SerialNumber": "936",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Chiva_bus\u003e \u003chttp://dbpedia.org/ontology/automobilePlatform\u003e ?uri. \u003chttp://dbpedia.org/resource/Ford_Straight-6_engine\u003e \u003chttp://dbpedia.org/ontology/manufacturer\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Chiva bus",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Chiva_bus",
        "seq": "83,92"
      },
      {
        "label": "Ford Straight-6 engine",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ford_Straight-6_engine",
        "seq": "17,39"
      }
    ],
    "id": "6099a612c08a4e97be03115bc7433ad2",
    "predicate mapping": [
      {
        "label": "automobile latform",
        "uri": "http://dbpedia.org/ontology/automobilePlatform",
        "seq": "52,70",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "builder",
        "uri": "http://dbpedia.org/ontology/manufacturer",
        "seq": "6,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What is the university whose campus is Mount Moosilauke?",
    "SerialNumber": "937",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/campus\u003e \u003chttp://dbpedia.org/resource/Mount_Moosilauke\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/University\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Mount Moosilauke",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Mount_Moosilauke",
        "seq": "39,55"
      }
    ],
    "id": "b58bac57950f452cbbce5e9e0faa159d",
    "predicate mapping": [
      {
        "label": "campus",
        "uri": "http://dbpedia.org/ontology/campus",
        "seq": "29,35",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "university",
        "uri": "http://dbpedia.org/ontology/University",
        "seq": "12,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which non fiction of the Thud is also the field of the Jon Speelman ?",
    "SerialNumber": "938",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Thud!\u003e \u003chttp://dbpedia.org/ontology/nonFictionSubject\u003e ?uri. \u003chttp://dbpedia.org/resource/Jon_Speelman\u003e \u003chttp://dbpedia.org/ontology/field\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Thud ",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Thud!",
        "seq": "25,30"
      },
      {
        "label": "Jon Speelman",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Jon_Speelman",
        "seq": "55,67"
      }
    ],
    "id": "c7a0d930b20447e4a742431bbe7d440d",
    "predicate mapping": [
      {
        "label": "fiction non",
        "uri": "http://dbpedia.org/ontology/nonFictionSubject",
        "seq": "-1,10",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "field",
        "uri": "http://dbpedia.org/ontology/field",
        "seq": "42,47",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the owning organisation of the Ford Kansas City Assembly Plant and also the builder of the Ford Y-block engine?",
    "SerialNumber": "939",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Ford_Kansas_City_Assembly_Plant\u003e \u003chttp://dbpedia.org/ontology/owningOrganisation\u003e ?uri. \u003chttp://dbpedia.org/resource/Ford_Y-block_engine\u003e \u003chttp://dbpedia.org/ontology/manufacturer\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ford Kansas City Assembly Plant",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Ford_Kansas_City_Assembly_Plant",
        "seq": "39,70"
      },
      {
        "label": "Ford Y-block engine",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Ford_Y-block_engine",
        "seq": "99,118"
      }
    ],
    "id": "b88127c669a54c12aa05eef809943bc3",
    "predicate mapping": [
      {
        "label": "owning organisation",
        "uri": "http://dbpedia.org/ontology/owningOrganisation",
        "seq": "12,31",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "builder",
        "uri": "http://dbpedia.org/ontology/manufacturer",
        "seq": "84,91",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "List the former partner of the figure skaters whose former choreographer was Igor Shpillband.",
    "SerialNumber": "942",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/formerChoreographer\u003e \u003chttp://dbpedia.org/resource/Igor_Shpillband\u003e . ?x \u003chttp://dbpedia.org/ontology/formerPartner\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/FigureSkater\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Igor Shpillband",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Igor_Shpillband",
        "seq": "77,92"
      }
    ],
    "id": "2c84a9a631f743f0b2302b12af7aa606",
    "predicate mapping": [
      {
        "label": "former choreographer",
        "uri": "http://dbpedia.org/ontology/formerChoreographer",
        "seq": "52,72",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "former partner",
        "uri": "http://dbpedia.org/ontology/formerPartner",
        "seq": "9,23",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "figure skater",
        "uri": "http://dbpedia.org/ontology/FigureSkater",
        "seq": "31,44",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the title of Kakae ?",
    "SerialNumber": "944",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Kakae\u003e \u003chttp://dbpedia.org/property/title\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Kakae",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Kakae",
        "seq": "21,26"
      }
    ],
    "id": "1ccd1c0a38d94273b20369bad3a4e3e6",
    "predicate mapping": [
      {
        "label": "title",
        "uri": "http://dbpedia.org/property/title",
        "seq": "12,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "List all the line of Vadodara Junction railway station?",
    "SerialNumber": "945",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Vadodara_Junction_railway_station\u003e \u003chttp://dbpedia.org/property/line\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Vadodara Junction railway station",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Vadodara_Junction_railway_station",
        "seq": "21,54"
      }
    ],
    "id": "bf81c3eaa06d49e9b4022d317a8b2af0",
    "predicate mapping": [
      {
        "label": "line",
        "uri": "http://dbpedia.org/property/line",
        "seq": "13,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "List the team for which Doug Acomb played ?",
    "SerialNumber": "947",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Doug_Acomb\u003e \u003chttp://dbpedia.org/property/playedFor\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Doug Acomb",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Doug_Acomb",
        "seq": "24,34"
      }
    ],
    "id": "2832515b3cd94fbaba52612934519520",
    "predicate mapping": [
      {
        "label": "team",
        "uri": "http://dbpedia.org/property/playedFor",
        "seq": "9,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "102",
    "question": "How many states does the Pioneer corporation operate in?",
    "SerialNumber": "950",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { \u003chttp://dbpedia.org/resource/Pioneer_Corporation\u003e \u003chttp://dbpedia.org/property/country\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Pioneer corporation",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Pioneer_Corporation",
        "seq": "25,44"
      }
    ],
    "id": "91ea8eda1f9b4116a2f984f432ff6ea6",
    "predicate mapping": [
      {
        "label": "state",
        "uri": "http://dbpedia.org/property/country",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What is the appliance which uses the central processing unit manufactured by Marvell Technology Group?",
    "SerialNumber": "954",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/cpu\u003e \u003chttp://dbpedia.org/resource/Marvell_Technology_Group\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/InformationAppliance\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Marvell Technology Group",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Marvell_Technology_Group",
        "seq": "77,101"
      }
    ],
    "id": "dd14801af7dd48b5b9c3860b4f2ac690",
    "predicate mapping": [
      {
        "label": "central processing unit",
        "uri": "http://dbpedia.org/ontology/cpu",
        "seq": "37,60",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "appliance",
        "uri": "http://dbpedia.org/ontology/InformationAppliance",
        "seq": "12,21",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "In which team was the person drafted who has studied at the Worcester college, Oxford?",
    "SerialNumber": "955",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/almaMater\u003e \u003chttp://dbpedia.org/resource/Worcester_College,_Oxford\u003e . ?x \u003chttp://dbpedia.org/property/draftTeam\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Worcester college, Oxford",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Worcester_College,_Oxford",
        "seq": "60,85"
      }
    ],
    "id": "c0b4eebc87244ce9a17b1517fc5a7e4f",
    "predicate mapping": [
      {
        "label": "studied at",
        "uri": "http://dbpedia.org/ontology/almaMater",
        "seq": "45,55",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "drafted",
        "uri": "http://dbpedia.org/property/draftTeam",
        "seq": "29,36",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/Person",
        "seq": "22,28",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the military branch of John Tower ?",
    "SerialNumber": "956",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/John_Tower\u003e \u003chttp://dbpedia.org/ontology/militaryBranch\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "John Tower",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/John_Tower",
        "seq": "31,41"
      }
    ],
    "id": "94efeafa9ef24e1391fdb5bed1b465b0",
    "predicate mapping": [
      {
        "label": "military branch",
        "uri": "http://dbpedia.org/ontology/militaryBranch",
        "seq": "12,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "101",
    "question": "How many people used to play in the youthclub of FC Barcelona?",
    "SerialNumber": "957",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/property/youthclubs\u003e \u003chttp://dbpedia.org/resource/FC_Barcelona\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "FC Barcelona",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/FC_Barcelona",
        "seq": "49,61"
      }
    ],
    "id": "8c423ae07cd444eca119288d4f151034",
    "predicate mapping": [
      {
        "label": "youthclub",
        "uri": "http://dbpedia.org/property/youthclubs",
        "seq": "36,45",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the type of Naval Station Bremerton ?",
    "SerialNumber": "958",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Naval_Station_Bremerton\u003e \u003chttp://dbpedia.org/property/type\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Naval Station Bremerton",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Naval_Station_Bremerton",
        "seq": "20,43"
      }
    ],
    "id": "09496228c50d4dd0829420bde30ad222",
    "predicate mapping": [
      {
        "label": "type",
        "uri": "http://dbpedia.org/property/type",
        "seq": "12,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "Count the number of offices held by people who have their allegiances with the american civil war union?",
    "SerialNumber": "959",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/allegiance\u003e \u003chttp://dbpedia.org/resource/Union_(American_Civil_War)\u003e . ?x \u003chttp://dbpedia.org/property/office\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "union",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Union_(American_Civil_War)",
        "seq": "98,103"
      }
    ],
    "id": "a5f83e85563f44108c787e395fe60425",
    "predicate mapping": [
      {
        "label": "allegiance",
        "uri": "http://dbpedia.org/property/allegiance",
        "seq": "58,68",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "office",
        "uri": "http://dbpedia.org/property/office",
        "seq": "20,26",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What are the other band members of the band one of whose current member is Robert De Niro?",
    "SerialNumber": "961",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/currentMembers\u003e \u003chttp://dbpedia.org/resource/Robert_De_Niro\u003e . ?x \u003chttp://dbpedia.org/ontology/bandMember\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Band\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Robert De Niro",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Robert_De_Niro",
        "seq": "75,89"
      }
    ],
    "id": "d8805aed27b84e74a23977910500e942",
    "predicate mapping": [
      {
        "label": "members current",
        "uri": "http://dbpedia.org/property/currentMembers",
        "seq": "-1,14",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "band member",
        "uri": "http://dbpedia.org/ontology/bandMember",
        "seq": "19,30",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "band",
        "uri": "http://dbpedia.org/ontology/Band",
        "seq": "19,23",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who are the tenants of MasterCard Centre?",
    "SerialNumber": "963",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/MasterCard_Centre\u003e \u003chttp://dbpedia.org/property/tenants\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "MasterCard Centre",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/MasterCard_Centre",
        "seq": "23,40"
      }
    ],
    "id": "694a307769eb4f02b15d499978c98c6a",
    "predicate mapping": [
      {
        "label": "tenants",
        "uri": "http://dbpedia.org/property/tenants",
        "seq": "12,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who is the President of United World College of Costa Rica ?",
    "SerialNumber": "964",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/United_World_College_of_Costa_Rica\u003e \u003chttp://dbpedia.org/property/president\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "United World College of Costa Rica",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/United_World_College_of_Costa_Rica",
        "seq": "24,58"
      }
    ],
    "id": "ba8179bb4b874d8a8ec1115fefbd1fb2",
    "predicate mapping": [
      {
        "label": "President",
        "uri": "http://dbpedia.org/property/president",
        "seq": "11,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Is nintendo in the video games industry?",
    "SerialNumber": "965",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Nintendo\u003e \u003chttp://dbpedia.org/property/industry\u003e \u003chttp://dbpedia.org/resource/Video_game\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "nintendo",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Nintendo",
        "seq": "3,11"
      },
      {
        "label": "video games",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Video_game",
        "seq": "19,30"
      }
    ],
    "id": "fab1a809ffa043059b189683eb9c205e",
    "predicate mapping": [
      {
        "label": "industry",
        "uri": "http://dbpedia.org/property/industry",
        "seq": "31,39",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "In which movies directed by Orson Welles has Bernard Herrmann as music composer ?",
    "SerialNumber": "966",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/musicComposer\u003e \u003chttp://dbpedia.org/resource/Bernard_Herrmann\u003e . ?uri \u003chttp://dbpedia.org/property/director\u003e \u003chttp://dbpedia.org/resource/Orson_Welles\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Bernard Herrmann",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Bernard_Herrmann",
        "seq": "45,61"
      },
      {
        "label": "Orson Welles",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Orson_Welles",
        "seq": "28,40"
      }
    ],
    "id": "bc7257226afd49379f8622d5735bd59f",
    "predicate mapping": [
      {
        "label": "music composer",
        "uri": "http://dbpedia.org/ontology/musicComposer",
        "seq": "65,79",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "directed",
        "uri": "http://dbpedia.org/property/director",
        "seq": "16,24",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What is the major shrine of the monarchs whose successor is Dragimir of Travunia and Zachlumia?",
    "SerialNumber": "967",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/successor\u003e \u003chttp://dbpedia.org/resource/Dragimir_of_Travunia_and_Zachlumia\u003e . ?x \u003chttp://dbpedia.org/property/majorShrine\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Monarch\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Dragimir of Travunia and Zachlumia",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Dragimir_of_Travunia_and_Zachlumia",
        "seq": "60,94"
      }
    ],
    "id": "4279f6d60e2b40aca3b49c6d92f96f80",
    "predicate mapping": [
      {
        "label": "successor",
        "uri": "http://dbpedia.org/ontology/successor",
        "seq": "47,56",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "major shrine",
        "uri": "http://dbpedia.org/property/majorShrine",
        "seq": "12,24",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "monarch",
        "uri": "http://dbpedia.org/ontology/Monarch",
        "seq": "32,39",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "List the program genres of the sister stations of 97.1 WASH FM?",
    "SerialNumber": "975",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/WASH_(FM)\u003e \u003chttp://dbpedia.org/property/sisterStations\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/programmeFormat\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "WASH",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/WASH_(FM)",
        "seq": "55,59"
      }
    ],
    "id": "6f280f2da9014ea5b9dd55d08cd22cd5",
    "predicate mapping": [
      {
        "label": "sister stations",
        "uri": "http://dbpedia.org/property/sisterStations",
        "seq": "31,46",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "program",
        "uri": "http://dbpedia.org/ontology/programmeFormat",
        "seq": "9,16",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "Count all the band members who are in Bands which have signed up with Entertainment One Music?",
    "SerialNumber": "977",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/label\u003e \u003chttp://dbpedia.org/resource/Entertainment_One_Music\u003e . ?x \u003chttp://dbpedia.org/ontology/bandMember\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Entertainment One Music",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Entertainment_One_Music",
        "seq": "70,93"
      }
    ],
    "id": "0bc0430408384e73b48e9e08a71e7f11",
    "predicate mapping": [
      {
        "label": "are",
        "uri": "http://dbpedia.org/property/label",
        "seq": "31,34",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "band member",
        "uri": "http://dbpedia.org/ontology/bandMember",
        "seq": "14,25",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": " Erik Jendresen is the writer of which television show?",
    "SerialNumber": "978",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/writer\u003e \u003chttp://dbpedia.org/resource/Erik_Jendresen\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Erik Jendresen",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Erik_Jendresen",
        "seq": "1,15"
      }
    ],
    "id": "2dccee64e1754b3ebb0e0b7dbd8f53e5",
    "predicate mapping": [
      {
        "label": "writer",
        "uri": "http://dbpedia.org/property/writer",
        "seq": "23,29",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "39,54",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who is the editor of Hearth and Home ?",
    "SerialNumber": "979",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Hearth_and_Home\u003e \u003chttp://dbpedia.org/ontology/editor\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Hearth and Home",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Hearth_and_Home",
        "seq": "21,36"
      }
    ],
    "id": "3bcdc25b65614b0487c429348217ea4b",
    "predicate mapping": [
      {
        "label": "editor",
        "uri": "http://dbpedia.org/ontology/editor",
        "seq": "11,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "Mike Shinoda is in which band?",
    "SerialNumber": "980",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/bandMember\u003e \u003chttp://dbpedia.org/resource/Mike_Shinoda\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Mike Shinoda",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Mike_Shinoda",
        "seq": "0,12"
      }
    ],
    "id": "a2ccd223b18049ec8f3baa631c19db91",
    "predicate mapping": [
      {
        "label": "band",
        "uri": "http://dbpedia.org/ontology/bandMember",
        "seq": "25,29",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "102",
    "question": "How many tenants are there in the Mercedes Benz Superdome?",
    "SerialNumber": "982",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { \u003chttp://dbpedia.org/resource/Mercedes-Benz_Superdome\u003e \u003chttp://dbpedia.org/ontology/tenant\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Mercedes Benz Superdome",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Mercedes-Benz_Superdome",
        "seq": "34,57"
      }
    ],
    "id": "2d350c457f654871877104d78d4595be",
    "predicate mapping": [
      {
        "label": "tenant",
        "uri": "http://dbpedia.org/ontology/tenant",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What is the religion of the successor of Chatumongol Sonakul?",
    "SerialNumber": "983",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Chatumongol_Sonakul\u003e \u003chttp://dbpedia.org/ontology/successor\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/religion\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Chatumongol Sonakul",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Chatumongol_Sonakul",
        "seq": "41,60"
      }
    ],
    "id": "2ce7408563bc4fff84ed8255c318beac",
    "predicate mapping": [
      {
        "label": "successor",
        "uri": "http://dbpedia.org/ontology/successor",
        "seq": "28,37",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion",
        "seq": "12,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which associated band of the Teddy Riley is also the performer of the Before I Let You Go?",
    "SerialNumber": "984",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Teddy_Riley\u003e \u003chttp://dbpedia.org/ontology/associatedBand\u003e ?uri. \u003chttp://dbpedia.org/resource/Before_I_Let_You_Go\u003e \u003chttp://dbpedia.org/ontology/musicalArtist\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Teddy Riley",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Teddy_Riley",
        "seq": "29,40"
      },
      {
        "label": "Before I Let You Go",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Before_I_Let_You_Go",
        "seq": "70,89"
      }
    ],
    "id": "4b2bed5caa0f4fcd97539ab5fe8b0c31",
    "predicate mapping": [
      {
        "label": "associated band",
        "uri": "http://dbpedia.org/ontology/associatedBand",
        "seq": "6,21",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "performer",
        "uri": "http://dbpedia.org/ontology/musicalArtist",
        "seq": "53,62",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "311",
    "question": "List all the doctoral student of the scientist who has advised john Bowlby ?",
    "SerialNumber": "985",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/doctoralStudents\u003e \u003chttp://dbpedia.org/resource/John_Bowlby\u003e . ?x \u003chttp://dbpedia.org/property/doctoralStudents\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Scientist\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "john Bowlby",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/John_Bowlby",
        "seq": "63,74"
      }
    ],
    "id": "9385b5410adb4b398d78b74233daa3e7",
    "predicate mapping": [
      {
        "label": "doctoral student",
        "uri": "http://dbpedia.org/property/doctoralStudents",
        "seq": "13,29",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "doctoral student",
        "uri": "http://dbpedia.org/property/doctoralStudents",
        "seq": "13,29",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "scientist",
        "uri": "http://dbpedia.org/ontology/Scientist",
        "seq": "37,46",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "How many developers have worked on games of the Oddworld series?",
    "SerialNumber": "986",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/series\u003e \u003chttp://dbpedia.org/resource/Oddworld\u003e . ?x \u003chttp://dbpedia.org/ontology/developer\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Oddworld",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Oddworld",
        "seq": "48,56"
      }
    ],
    "id": "c68c8778028948a5a3e0de11281c7ca8",
    "predicate mapping": [
      {
        "label": "series",
        "uri": "http://dbpedia.org/ontology/series",
        "seq": "57,63",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "developer",
        "uri": "http://dbpedia.org/ontology/developer",
        "seq": "9,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "106",
    "question": "Count everyone who was in a youthclub chaired by Josep Maria Bartomeu ?",
    "SerialNumber": "987",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/chairman\u003e \u003chttp://dbpedia.org/resource/Josep_Maria_Bartomeu\u003e . ?uri \u003chttp://dbpedia.org/property/youthclubs\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Josep Maria Bartomeu",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Josep_Maria_Bartomeu",
        "seq": "49,69"
      }
    ],
    "id": "70aa9eff865c482b9b003af932aaf051",
    "predicate mapping": [
      {
        "label": "chaired",
        "uri": "http://dbpedia.org/property/chairman",
        "seq": "38,45",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "youthclub",
        "uri": "http://dbpedia.org/property/youthclubs",
        "seq": "28,37",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Is Peter Piper Pizza in the pizza industry?",
    "SerialNumber": "988",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Peter_Piper_Pizza\u003e \u003chttp://dbpedia.org/ontology/industry\u003e \u003chttp://dbpedia.org/resource/Pizza\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Peter Piper Pizza",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Peter_Piper_Pizza",
        "seq": "3,20"
      },
      {
        "label": "pizza",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Pizza",
        "seq": "28,33"
      }
    ],
    "id": "13a66e0633544928a5c94aa1f3012477",
    "predicate mapping": [
      {
        "label": "industry",
        "uri": "http://dbpedia.org/ontology/industry",
        "seq": "34,42",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Name a river starting from arequipa region?",
    "SerialNumber": "989",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/sourceRegion\u003e \u003chttp://dbpedia.org/resource/Arequipa_Region\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/River\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "arequipa region",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Arequipa_Region",
        "seq": "27,42"
      }
    ],
    "id": "4faf770f82744bd3a5ae913949ab8d0a",
    "predicate mapping": [
      {
        "label": "region",
        "uri": "http://dbpedia.org/property/sourceRegion",
        "seq": "36,42",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River",
        "seq": "7,12",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "What is the religion of the person who founded the Emel magazine?",
    "SerialNumber": "990",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Emel_(magazine)\u003e \u003chttp://dbpedia.org/property/founder\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/religion\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Emel",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Emel_(magazine)",
        "seq": "51,55"
      }
    ],
    "id": "efb34433b68544b09f7dc35e94b450f9",
    "predicate mapping": [
      {
        "label": "founded",
        "uri": "http://dbpedia.org/property/founder",
        "seq": "39,46",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion",
        "seq": "12,20",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/Person",
        "seq": "28,34",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What is the alma mater of the scientist who is known for Rational analysis ?",
    "SerialNumber": "993",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/knownFor\u003e \u003chttp://dbpedia.org/resource/Rational_analysis\u003e . ?x \u003chttp://dbpedia.org/ontology/almaMater\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Scientist\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Rational analysis",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Rational_analysis",
        "seq": "57,74"
      }
    ],
    "id": "c7922582976442cfb8e59c1660842c18",
    "predicate mapping": [
      {
        "label": "known for",
        "uri": "http://dbpedia.org/ontology/knownFor",
        "seq": "47,56",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/ontology/almaMater",
        "seq": "12,22",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "scientist",
        "uri": "http://dbpedia.org/ontology/Scientist",
        "seq": "30,39",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What organisations purpose is Peace?",
    "SerialNumber": "994",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/purpose\u003e \u003chttp://dbpedia.org/resource/Peace\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Organisation\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Peace",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Peace",
        "seq": "30,35"
      }
    ],
    "id": "059b389bffc642eaab76a7072a3a9b9c",
    "predicate mapping": [
      {
        "label": "purpose",
        "uri": "http://dbpedia.org/property/purpose",
        "seq": "19,26",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "organisation",
        "uri": "http://dbpedia.org/ontology/Organisation",
        "seq": "5,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "name the mountain range of Le Gibloux ?",
    "SerialNumber": "995",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Le_Gibloux\u003e \u003chttp://dbpedia.org/ontology/mountainRange\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Gibloux",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Le_Gibloux",
        "seq": "30,37"
      }
    ],
    "id": "1a7add8911774e34a9753b1970a42b0f",
    "predicate mapping": [
      {
        "label": "mountain range",
        "uri": "http://dbpedia.org/ontology/mountainRange",
        "seq": "9,23",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Where is the headquarters of Metro Transit (Minnesota) ?",
    "SerialNumber": "996",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Metro_Transit_(Minnesota)\u003e \u003chttp://dbpedia.org/property/headquarters\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Metro Transit",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Metro_Transit_(Minnesota)",
        "seq": "29,42"
      }
    ],
    "id": "020c57dc849e4ed79054a420fb7f59ff",
    "predicate mapping": [
      {
        "label": "headquarters",
        "uri": "http://dbpedia.org/property/headquarters",
        "seq": "13,25",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Which relative of ralf schumacher is a famous formula one racer?",
    "SerialNumber": "999",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/relatives\u003e \u003chttp://dbpedia.org/resource/Ralf_Schumacher\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/FormulaOneRacer\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "ralf schumacher",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Ralf_Schumacher",
        "seq": "18,33"
      }
    ],
    "id": "28b62059c317408d9e02cdf9e33d1935",
    "predicate mapping": [
      {
        "label": "relative",
        "uri": "http://dbpedia.org/property/relatives",
        "seq": "6,14",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "formula one racer",
        "uri": "http://dbpedia.org/ontology/FormulaOneRacer",
        "seq": "46,63",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "List the awards won by the spouse of Harriet Andersson?",
    "SerialNumber": "1000",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Harriet_Andersson\u003e \u003chttp://dbpedia.org/ontology/partner\u003e ?x . ?x \u003chttp://dbpedia.org/property/awards\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Harriet Andersson",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Harriet_Andersson",
        "seq": "37,54"
      }
    ],
    "id": "47a8730100bb43ab9b5565b15e073f44",
    "predicate mapping": [
      {
        "label": "spouse",
        "uri": "http://dbpedia.org/ontology/partner",
        "seq": "27,33",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "List the judges of Rising Star which is also the artist of Brad Paisley discography ?",
    "SerialNumber": "1002",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Rising_Star_(U.S._TV_series)\u003e \u003chttp://dbpedia.org/property/judges\u003e ?uri. \u003chttp://dbpedia.org/resource/Brad_Paisley_discography\u003e \u003chttp://dbpedia.org/property/artist\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Rising Star",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Rising_Star_(U.S._TV_series)",
        "seq": "19,30"
      },
      {
        "label": "Brad Paisley discography",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Brad_Paisley_discography",
        "seq": "59,83"
      }
    ],
    "id": "95a5e8b6535b44d7a306e95c185accee",
    "predicate mapping": [
      {
        "label": "judges",
        "uri": "http://dbpedia.org/property/judges",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "artist",
        "uri": "http://dbpedia.org/property/artist",
        "seq": "49,55",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who are the current members of Insects vs Robots?",
    "SerialNumber": "1003",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Insects_vs_Robots\u003e \u003chttp://dbpedia.org/property/currentMembers\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Insects vs Robots",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Insects_vs_Robots",
        "seq": "31,48"
      }
    ],
    "id": "69644dc7516e4f57a68e2ef38707770b",
    "predicate mapping": [
      {
        "label": "current members",
        "uri": "http://dbpedia.org/property/currentMembers",
        "seq": "12,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What is the alma mater of the author of Letter to a Christian Nation ?",
    "SerialNumber": "1006",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Letter_to_a_Christian_Nation\u003e \u003chttp://dbpedia.org/ontology/author\u003e ?x . ?x \u003chttp://dbpedia.org/property/almaMater\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Letter to a Christian Nation",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Letter_to_a_Christian_Nation",
        "seq": "40,68"
      }
    ],
    "id": "02d8c986d51743f79aadb85498ab95eb",
    "predicate mapping": [
      {
        "label": "author",
        "uri": "http://dbpedia.org/ontology/author",
        "seq": "30,36",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/property/almaMater",
        "seq": "12,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "name the races where bobby beasley took part ?",
    "SerialNumber": "1007",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Bobby_Beasley\u003e \u003chttp://dbpedia.org/ontology/race\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "bobby beasley",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Bobby_Beasley",
        "seq": "21,34"
      }
    ],
    "id": "760c753b13f2446a9330ada587e18873",
    "predicate mapping": [
      {
        "label": "race",
        "uri": "http://dbpedia.org/ontology/race",
        "seq": "9,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the content license of Darcs ?",
    "SerialNumber": "1008",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Darcs\u003e \u003chttp://dbpedia.org/ontology/license\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Darcs",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Darcs",
        "seq": "31,36"
      }
    ],
    "id": "acc08e9a7a55497086586e40d6223753",
    "predicate mapping": [
      {
        "label": "content license",
        "uri": "http://dbpedia.org/ontology/license",
        "seq": "12,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "101",
    "question": "How many items belong to the Science Fiction genre?",
    "SerialNumber": "1010",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/property/genre\u003e \u003chttp://dbpedia.org/resource/Science_fiction\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Science Fiction",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Science_fiction",
        "seq": "29,44"
      }
    ],
    "id": "8ae784fd30814515b6229d039f232b79",
    "predicate mapping": [
      {
        "label": "genre",
        "uri": "http://dbpedia.org/property/genre",
        "seq": "45,50",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "Who is the developer of the software which serves the platform for King\u0027s Quest VI?",
    "SerialNumber": "1012",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/King\u0027s_Quest_VI\u003e \u003chttp://dbpedia.org/ontology/computingPlatform\u003e ?x . ?x \u003chttp://dbpedia.org/property/developer\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Software\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "King\u0027s Quest VI",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/King\u0027s_Quest_VI",
        "seq": "67,82"
      }
    ],
    "id": "1df640ae02bb4421947b10d25fb15963",
    "predicate mapping": [
      {
        "label": "platform",
        "uri": "http://dbpedia.org/ontology/computingPlatform",
        "seq": "54,62",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "developer",
        "uri": "http://dbpedia.org/property/developer",
        "seq": "11,20",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "software",
        "uri": "http://dbpedia.org/ontology/Software",
        "seq": "28,36",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What magazine companies are of form Limited liability company?",
    "SerialNumber": "1013",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/company\u003e \u003chttp://dbpedia.org/resource/Limited_liability_company\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Magazine\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Limited liability company",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Limited_liability_company",
        "seq": "36,61"
      }
    ],
    "id": "930321a78c1f43668bb1a7051bc5727b",
    "predicate mapping": [
      {
        "label": "company",
        "uri": "http://dbpedia.org/property/company",
        "seq": "54,61",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "magazine",
        "uri": "http://dbpedia.org/ontology/Magazine",
        "seq": "5,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "111",
    "question": "Count the cities whihch are on the same sea as that of Miami ?",
    "SerialNumber": "1014",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/cities\u003e \u003chttp://dbpedia.org/resource/Miami\u003e . ?x \u003chttp://dbpedia.org/property/cities\u003e ?uri }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Miami",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Miami",
        "seq": "55,60"
      }
    ],
    "id": "e2916bd3eb4a49159537f5a32218b829",
    "predicate mapping": [
      {
        "label": "cities",
        "uri": "http://dbpedia.org/property/cities",
        "seq": "10,16",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "cities",
        "uri": "http://dbpedia.org/property/cities",
        "seq": "10,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the river whose mouth mountain is Southend-on-Sea and mouth place is Essex?",
    "SerialNumber": "1017",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/mouthMountain\u003e \u003chttp://dbpedia.org/resource/Southend-on-Sea\u003e . ?uri \u003chttp://dbpedia.org/ontology/mouthPlace\u003e \u003chttp://dbpedia.org/resource/Essex\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/River\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Southend-on-Sea",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Southend-on-Sea",
        "seq": "39,54"
      },
      {
        "label": "Essex",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Essex",
        "seq": "74,79"
      }
    ],
    "id": "12bc818a1cad45d1a91e51273310e997",
    "predicate mapping": [
      {
        "label": "mouth mountain",
        "uri": "http://dbpedia.org/ontology/mouthMountain",
        "seq": "21,35",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "mouth place",
        "uri": "http://dbpedia.org/ontology/mouthPlace",
        "seq": "59,70",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the official residence of the Helen Getachew which is also the palce of death of the Haile Selassie Gugsa ?",
    "SerialNumber": "1021",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Helen_Getachew\u003e \u003chttp://dbpedia.org/ontology/residence\u003e ?uri. \u003chttp://dbpedia.org/resource/Haile_Selassie_Gugsa\u003e \u003chttp://dbpedia.org/property/placeOfDeath\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Helen Getachew",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Helen_Getachew",
        "seq": "38,52"
      },
      {
        "label": "Haile Selassie Gugsa",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Haile_Selassie_Gugsa",
        "seq": "93,113"
      }
    ],
    "id": "d4dcd0fd68e54344be04bf5a83626fb8",
    "predicate mapping": [
      {
        "label": "residence",
        "uri": "http://dbpedia.org/ontology/residence",
        "seq": "21,30",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "death",
        "uri": "http://dbpedia.org/property/placeOfDeath",
        "seq": "80,85",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the nationality of the J. T. Krogh which is also the  sovereign state of the Camilla Martin",
    "SerialNumber": "1023",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/J._T._Krogh\u003e \u003chttp://dbpedia.org/ontology/nationality\u003e ?uri. \u003chttp://dbpedia.org/resource/Camilla_Martin\u003e \u003chttp://dbpedia.org/ontology/country\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "J. T. Krogh",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/J._T._Krogh",
        "seq": "31,42"
      },
      {
        "label": "Camilla Martin",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Camilla_Martin",
        "seq": "85,99"
      }
    ],
    "id": "7791f674f69644b597e58b7e0b2da6be",
    "predicate mapping": [
      {
        "label": "nationality",
        "uri": "http://dbpedia.org/ontology/nationality",
        "seq": "12,23",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "sovereign state",
        "uri": "http://dbpedia.org/ontology/country",
        "seq": "62,77",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the saint whose major shrine is in Canada and was canonized by Pope Benedict XVI?",
    "SerialNumber": "1025",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/majorShrine\u003e \u003chttp://dbpedia.org/resource/Canada\u003e . ?uri \u003chttp://dbpedia.org/property/canonizedBy\u003e \u003chttp://dbpedia.org/resource/Pope_Benedict_XVI\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Saint\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Canada",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Canada",
        "seq": "40,46"
      },
      {
        "label": "Pope Benedict XVI",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Pope_Benedict_XVI",
        "seq": "68,85"
      }
    ],
    "id": "eb9973f1951346f39307949428dd4e26",
    "predicate mapping": [
      {
        "label": "major shrine",
        "uri": "http://dbpedia.org/ontology/majorShrine",
        "seq": "21,33",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "canonized by",
        "uri": "http://dbpedia.org/property/canonizedBy",
        "seq": "55,67",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "saint",
        "uri": "http://dbpedia.org/ontology/Saint",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "What is the television show whose sculptor is C. E. Webber and composed by Murray Gold?",
    "SerialNumber": "1026",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/creator\u003e \u003chttp://dbpedia.org/resource/C._E._Webber\u003e . ?uri \u003chttp://dbpedia.org/ontology/composer\u003e \u003chttp://dbpedia.org/resource/Murray_Gold\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "C. E. Webber",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/C._E._Webber",
        "seq": "46,58"
      },
      {
        "label": "Murray Gold",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Murray_Gold",
        "seq": "75,86"
      }
    ],
    "id": "dc23a511ad514de1aa0138b011745698",
    "predicate mapping": [
      {
        "label": "sculptor",
        "uri": "http://dbpedia.org/ontology/creator",
        "seq": "34,42",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "composed by",
        "uri": "http://dbpedia.org/ontology/composer",
        "seq": "63,74",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "12,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "405",
    "question": "In how many different places have people beatified by Pope Pius X died?",
    "SerialNumber": "1029",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/beatifiedBy\u003e \u003chttp://dbpedia.org/resource/Pope_Pius_X\u003e . ?x \u003chttp://dbpedia.org/property/deathPlace\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Place\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Pope Pius X",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Pope_Pius_X",
        "seq": "54,65"
      }
    ],
    "id": "0eb2c9964a5047548bafa2cc6ffb4019",
    "predicate mapping": [
      {
        "label": "beatified by",
        "uri": "http://dbpedia.org/property/beatifiedBy",
        "seq": "41,53",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "places",
        "uri": "http://dbpedia.org/property/deathPlace",
        "seq": "22,28",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "place",
        "uri": "http://dbpedia.org/ontology/Place",
        "seq": "22,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the title of the Kakae and also the district of the Robert William Wilcox ?",
    "SerialNumber": "1031",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Kakae\u003e \u003chttp://dbpedia.org/property/title\u003e ?uri. \u003chttp://dbpedia.org/resource/Robert_William_Wilcox\u003e \u003chttp://dbpedia.org/property/district\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Kakae",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Kakae",
        "seq": "25,30"
      },
      {
        "label": "Robert William Wilcox",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Robert_William_Wilcox",
        "seq": "60,81"
      }
    ],
    "id": "ed4fb70a35a34a85bd5669521192912b",
    "predicate mapping": [
      {
        "label": "title",
        "uri": "http://dbpedia.org/property/title",
        "seq": "12,17",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "district",
        "uri": "http://dbpedia.org/property/district",
        "seq": "44,52",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Is Halyna Kukhar the former coach of Stanislav Morozov?",
    "SerialNumber": "1033",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Stanislav_Morozov\u003e \u003chttp://dbpedia.org/ontology/formerCoach\u003e \u003chttp://dbpedia.org/resource/Halyna_Kukhar\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Stanislav Morozov",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Stanislav_Morozov",
        "seq": "37,54"
      },
      {
        "label": "Halyna Kukhar",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Halyna_Kukhar",
        "seq": "3,16"
      }
    ],
    "id": "46cb9047955d4914a06a2fd681844bba",
    "predicate mapping": [
      {
        "label": "former coach",
        "uri": "http://dbpedia.org/ontology/formerCoach",
        "seq": "21,33",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What is the origin of the musical artist whose associated band is Ziggi Recado ?",
    "SerialNumber": "1035",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/associatedBand\u003e \u003chttp://dbpedia.org/resource/Ziggi_Recado\u003e . ?x \u003chttp://dbpedia.org/property/origin\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MusicalArtist\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ziggi Recado",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ziggi_Recado",
        "seq": "66,78"
      }
    ],
    "id": "569f87ca37d249fca1fd669c42b61425",
    "predicate mapping": [
      {
        "label": "associated band",
        "uri": "http://dbpedia.org/ontology/associatedBand",
        "seq": "47,62",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "origin",
        "uri": "http://dbpedia.org/property/origin",
        "seq": "12,18",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "musical artist",
        "uri": "http://dbpedia.org/ontology/MusicalArtist",
        "seq": "26,40",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the game platform of Google Cloud Connect ?",
    "SerialNumber": "1042",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Google_Cloud_Connect\u003e \u003chttp://dbpedia.org/ontology/computingPlatform\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Google Cloud Connect",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Google_Cloud_Connect",
        "seq": "29,49"
      }
    ],
    "id": "fd948db9a1074ffca0b870175bf8308e",
    "predicate mapping": [
      {
        "label": "game platform",
        "uri": "http://dbpedia.org/ontology/computingPlatform",
        "seq": "12,25",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "Which city\u0027s mayor is married to Jean Marc Germain?",
    "SerialNumber": "1043",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/spouse\u003e \u003chttp://dbpedia.org/resource/Jean-Marc_Germain\u003e . ?uri \u003chttp://dbpedia.org/property/mayor\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jean Marc Germain",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Jean-Marc_Germain",
        "seq": "33,50"
      }
    ],
    "id": "c9f63111222c4d6c837952e9c7db59f9",
    "predicate mapping": [
      {
        "label": "married to",
        "uri": "http://dbpedia.org/property/spouse",
        "seq": "22,32",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "mayor",
        "uri": "http://dbpedia.org/property/mayor",
        "seq": "13,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the company which provides Outlook.com as service and also has a product named Microsoft Azure ?",
    "SerialNumber": "1044",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/services\u003e \u003chttp://dbpedia.org/resource/Outlook.com\u003e . ?uri \u003chttp://dbpedia.org/ontology/product\u003e \u003chttp://dbpedia.org/resource/Microsoft_Azure\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Company\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Outlook",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Outlook.com",
        "seq": "32,39"
      },
      {
        "label": "Microsoft Azure",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Microsoft_Azure",
        "seq": "84,99"
      }
    ],
    "id": "e9767fcb96f14efeaa05520dc4675f58",
    "predicate mapping": [
      {
        "label": "service",
        "uri": "http://dbpedia.org/property/services",
        "seq": "47,54",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "product",
        "uri": "http://dbpedia.org/ontology/product",
        "seq": "70,77",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company",
        "seq": "9,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "To which persons is Ron Cyrus a relative?",
    "SerialNumber": "1047",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/relatives\u003e \u003chttp://dbpedia.org/resource/Ron_Cyrus\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ron Cyrus",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Ron_Cyrus",
        "seq": "20,29"
      }
    ],
    "id": "cec0cca9c76744ca97e1a9740254d40a",
    "predicate mapping": [
      {
        "label": "relative",
        "uri": "http://dbpedia.org/property/relatives",
        "seq": "32,40",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/Person",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the scientist who was awarded a position in Royal Society and has academic advisor as Franz Brentano?",
    "SerialNumber": "1049",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/awards\u003e \u003chttp://dbpedia.org/resource/Royal_Society\u003e . ?uri \u003chttp://dbpedia.org/ontology/academicAdvisor\u003e \u003chttp://dbpedia.org/resource/Franz_Brentano\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Scientist\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Royal Society",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Royal_Society",
        "seq": "49,62"
      },
      {
        "label": "Franz Brentano",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Franz_Brentano",
        "seq": "91,105"
      }
    ],
    "id": "9a2c07ecaef04020b5ad3820012f0ef4",
    "predicate mapping": [
      {
        "label": "awarded",
        "uri": "http://dbpedia.org/property/awards",
        "seq": "27,34",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "academic advisor",
        "uri": "http://dbpedia.org/ontology/academicAdvisor",
        "seq": "71,87",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "scientist",
        "uri": "http://dbpedia.org/ontology/Scientist",
        "seq": "9,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the allegiance of John Kotelawala ?",
    "SerialNumber": "1056",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/John_Kotelawala\u003e \u003chttp://dbpedia.org/property/allegiance\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "John Kotelawala",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/John_Kotelawala",
        "seq": "26,41"
      }
    ],
    "id": "0496d085c1c84057847b2b47a44df27d",
    "predicate mapping": [
      {
        "label": "allegiance",
        "uri": "http://dbpedia.org/property/allegiance",
        "seq": "12,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the common party of Chandra Shekhar and Govinda  ?",
    "SerialNumber": "1058",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Chandra_Shekhar\u003e \u003chttp://dbpedia.org/ontology/otherParty\u003e ?uri. \u003chttp://dbpedia.org/resource/Govinda_(actor)\u003e \u003chttp://dbpedia.org/ontology/party\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Chandra Shekhar",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Chandra_Shekhar",
        "seq": "28,43"
      },
      {
        "label": "Govinda",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Govinda_(actor)",
        "seq": "48,55"
      }
    ],
    "id": "af46582ccf234c2f9f78b845dd3c11ee",
    "predicate mapping": [
      {
        "label": "party",
        "uri": "http://dbpedia.org/ontology/otherParty",
        "seq": "19,24",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "party",
        "uri": "http://dbpedia.org/ontology/party",
        "seq": "19,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "How many different songwriters have had their songs recorded in London?",
    "SerialNumber": "1061",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/recordedIn\u003e \u003chttp://dbpedia.org/resource/London\u003e . ?x \u003chttp://dbpedia.org/ontology/writer\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "London",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/London",
        "seq": "64,70"
      }
    ],
    "id": "c9adffe8cefd409cac7b4cb98a75654b",
    "predicate mapping": [
      {
        "label": "recorded in",
        "uri": "http://dbpedia.org/ontology/recordedIn",
        "seq": "52,63",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "writers",
        "uri": "http://dbpedia.org/ontology/writer",
        "seq": "23,30",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which university of Alexandre Tichonov is the place of death of Valentin Muratov /",
    "SerialNumber": "1062",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Alexandre_Tichonov\u003e \u003chttp://dbpedia.org/property/university\u003e ?uri. \u003chttp://dbpedia.org/resource/Valentin_Muratov\u003e \u003chttp://dbpedia.org/property/placeOfDeath\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Alexandre Tichonov",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Alexandre_Tichonov",
        "seq": "20,38"
      },
      {
        "label": "Valentin Muratov",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Valentin_Muratov",
        "seq": "64,80"
      }
    ],
    "id": "ce42ceda65bc44e4af05eebe148399f6",
    "predicate mapping": [
      {
        "label": "university",
        "uri": "http://dbpedia.org/property/university",
        "seq": "6,16",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "place of death",
        "uri": "http://dbpedia.org/property/placeOfDeath",
        "seq": "46,60",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What are the common houses of US Congress and the Kansas Legislature?",
    "SerialNumber": "1063",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/United_States_Congress\u003e \u003chttp://dbpedia.org/property/houses\u003e ?uri. \u003chttp://dbpedia.org/resource/Kansas_Legislature\u003e \u003chttp://dbpedia.org/ontology/house\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "US Congress",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/United_States_Congress",
        "seq": "30,41"
      },
      {
        "label": "Kansas Legislature",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Kansas_Legislature",
        "seq": "50,68"
      }
    ],
    "id": "acf18faa3348443eb2081c4a516063f7",
    "predicate mapping": [
      {
        "label": "houses",
        "uri": "http://dbpedia.org/property/houses",
        "seq": "20,26",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "house",
        "uri": "http://dbpedia.org/ontology/house",
        "seq": "20,25",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which administrative headquarters of the Pulau Ubin is also the resting place of the Nicole Lai",
    "SerialNumber": "1064",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Pulau_Ubin\u003e \u003chttp://dbpedia.org/ontology/capital\u003e ?uri. \u003chttp://dbpedia.org/resource/Nicole_Lai\u003e \u003chttp://dbpedia.org/ontology/restingPlace\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Pulau Ubin",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Pulau_Ubin",
        "seq": "41,51"
      },
      {
        "label": "Nicole Lai",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Nicole_Lai",
        "seq": "85,95"
      }
    ],
    "id": "27b4aeb6443f452ab9936158e4704854",
    "predicate mapping": [
      {
        "label": "administrative headquarters",
        "uri": "http://dbpedia.org/ontology/capital",
        "seq": "6,33",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "resting place",
        "uri": "http://dbpedia.org/ontology/restingPlace",
        "seq": "64,77",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the common military branch of the Thomas Darden and that of Edwin F. Hunter",
    "SerialNumber": "1065",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Thomas_Darden\u003e \u003chttp://dbpedia.org/ontology/militaryBranch\u003e ?uri. \u003chttp://dbpedia.org/resource/Edwin_F._Hunter\u003e \u003chttp://dbpedia.org/property/branch\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Thomas Darden",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Thomas_Darden",
        "seq": "42,55"
      },
      {
        "label": "Edwin F. Hunter",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Edwin_F._Hunter",
        "seq": "68,83"
      }
    ],
    "id": "bdd508af2ed146e7ba2598dd73e439b0",
    "predicate mapping": [
      {
        "label": "military branch",
        "uri": "http://dbpedia.org/ontology/militaryBranch",
        "seq": "19,34",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "branch",
        "uri": "http://dbpedia.org/property/branch",
        "seq": "28,34",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Which is the university of Vanderbilt Commodores ?",
    "SerialNumber": "1066",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Vanderbilt_Commodores\u003e \u003chttp://dbpedia.org/ontology/university\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Vanderbilt Commodores",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Vanderbilt_Commodores",
        "seq": "27,48"
      }
    ],
    "id": "c9b8f77f399f4f88b60f4a252aa7e825",
    "predicate mapping": [
      {
        "label": "university",
        "uri": "http://dbpedia.org/ontology/university",
        "seq": "13,23",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "Which fictional character\u0027s portrayer was edited by Roger Barton?",
    "SerialNumber": "1068",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/editing\u003e \u003chttp://dbpedia.org/resource/Roger_Barton_(film_editor)\u003e . ?uri \u003chttp://dbpedia.org/ontology/portrayer\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/FictionalCharacter\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Roger Barton",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Roger_Barton_(film_editor)",
        "seq": "52,64"
      }
    ],
    "id": "76c3eb3bdc2b4a3d846ba7a10155535c",
    "predicate mapping": [
      {
        "label": "edited by",
        "uri": "http://dbpedia.org/property/editing",
        "seq": "42,51",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "portrayer",
        "uri": "http://dbpedia.org/ontology/portrayer",
        "seq": "28,37",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "fictional character",
        "uri": "http://dbpedia.org/ontology/FictionalCharacter",
        "seq": "6,25",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Which country does the current team of Darren McNamara belong to?",
    "SerialNumber": "1069",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Darren_McNamara\u003e \u003chttp://dbpedia.org/property/currentTeam\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/locationCountry\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Darren McNamara",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Darren_McNamara",
        "seq": "39,54"
      }
    ],
    "id": "4c72ce839cc74eb5af7c755665ba0b19",
    "predicate mapping": [
      {
        "label": "current team",
        "uri": "http://dbpedia.org/property/currentTeam",
        "seq": "23,35",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/locationCountry",
        "seq": "6,13",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Which is the common nation of Louisa Hill and American Football Wellington from?",
    "SerialNumber": "1071",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Louisa_Hill\u003e \u003chttp://dbpedia.org/ontology/country\u003e ?uri. \u003chttp://dbpedia.org/resource/American_Football_Wellington\u003e \u003chttp://dbpedia.org/ontology/country\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Louisa Hill",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Louisa_Hill",
        "seq": "30,41"
      },
      {
        "label": "American Football Wellington",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/American_Football_Wellington",
        "seq": "46,74"
      }
    ],
    "id": "1787b4b57f8648f7a691dc0b6458a93c",
    "predicate mapping": [
      {
        "label": "nation",
        "uri": "http://dbpedia.org/ontology/country",
        "seq": "20,26",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "nation",
        "uri": "http://dbpedia.org/ontology/country",
        "seq": "20,26",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Was robert sarvis a nominee of the US Senate?",
    "SerialNumber": "1072",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Robert_Sarvis\u003e \u003chttp://dbpedia.org/ontology/nominee\u003e \u003chttp://dbpedia.org/resource/United_States_Senate\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "robert sarvis",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Robert_Sarvis",
        "seq": "4,17"
      },
      {
        "label": "US Senate",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/United_States_Senate",
        "seq": "35,44"
      }
    ],
    "id": "1dcc19d42ba74a9487b2f289e05c435e",
    "predicate mapping": [
      {
        "label": "nominee",
        "uri": "http://dbpedia.org/ontology/nominee",
        "seq": "20,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who is the successor of McDonnell Douglas ?",
    "SerialNumber": "1075",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/McDonnell_Douglas\u003e \u003chttp://dbpedia.org/property/successor\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "McDonnell Douglas",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/McDonnell_Douglas",
        "seq": "24,41"
      }
    ],
    "id": "e496a9c37c484d349983cda8defe8e0e",
    "predicate mapping": [
      {
        "label": "successor",
        "uri": "http://dbpedia.org/property/successor",
        "seq": "11,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "where did Boga originate?",
    "SerialNumber": "1076",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Boga_(soft_drink)\u003e \u003chttp://dbpedia.org/property/origin\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Boga",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Boga_(soft_drink)",
        "seq": "10,14"
      }
    ],
    "id": "dbd91640b99b4b68accaf939e7b660b6",
    "predicate mapping": [
      {
        "label": "origin",
        "uri": "http://dbpedia.org/property/origin",
        "seq": "15,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the order of the Henry Clay and profession of the William Luther Hill?",
    "SerialNumber": "1077",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Henry_Clay\u003e \u003chttp://dbpedia.org/property/order\u003e ?uri. \u003chttp://dbpedia.org/resource/William_Luther_Hill\u003e \u003chttp://dbpedia.org/ontology/profession\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Henry Clay",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Henry_Clay",
        "seq": "25,35"
      },
      {
        "label": "William Luther Hill",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/William_Luther_Hill",
        "seq": "58,77"
      }
    ],
    "id": "8bc8f57fd4dc4186ba01fb3c91533c19",
    "predicate mapping": [
      {
        "label": "order",
        "uri": "http://dbpedia.org/property/order",
        "seq": "12,17",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "profession",
        "uri": "http://dbpedia.org/ontology/profession",
        "seq": "40,50",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "311",
    "question": "Name the co-founder of the record labels which have one of the founder as Chris DuBois ?",
    "SerialNumber": "1078",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/founder\u003e \u003chttp://dbpedia.org/resource/Chris_DuBois\u003e . ?x \u003chttp://dbpedia.org/property/founder\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/RecordLabel\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Chris DuBois",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Chris_DuBois",
        "seq": "74,86"
      }
    ],
    "id": "abdbfd4f0fc94f8abd065f71ee33daaa",
    "predicate mapping": [
      {
        "label": "founder of",
        "uri": "http://dbpedia.org/property/founder",
        "seq": "12,22",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "founder of",
        "uri": "http://dbpedia.org/property/founder",
        "seq": "12,22",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "record label",
        "uri": "http://dbpedia.org/ontology/RecordLabel",
        "seq": "27,39",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "what does the cahora bassa flow into?",
    "SerialNumber": "1080",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Cahora_Bassa\u003e \u003chttp://dbpedia.org/property/inflow\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "cahora bassa",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Cahora_Bassa",
        "seq": "14,26"
      }
    ],
    "id": "84d8ee90740d450784488c785a892205",
    "predicate mapping": [
      {
        "label": "flow",
        "uri": "http://dbpedia.org/property/inflow",
        "seq": "27,31",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "What awards have been given to the anyone who raced in the Lawrence Realization Stakes?",
    "SerialNumber": "1081",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/race\u003e \u003chttp://dbpedia.org/resource/Lawrence_Realization_Stakes\u003e . ?x \u003chttp://dbpedia.org/ontology/honours\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Lawrence Realization Stakes",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Lawrence_Realization_Stakes",
        "seq": "59,86"
      }
    ],
    "id": "1c1c775a8beb4abfaacf4e09a2fdde14",
    "predicate mapping": [
      {
        "label": "race",
        "uri": "http://dbpedia.org/property/race",
        "seq": "46,50",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/honours",
        "seq": "5,11",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "How many home stadium are there, of the soccer club seasons whose chairman is Merritt Paulson?",
    "SerialNumber": "1082",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/chairman\u003e \u003chttp://dbpedia.org/resource/Merritt_Paulson\u003e . ?x \u003chttp://dbpedia.org/ontology/homeStadium\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Merritt Paulson",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Merritt_Paulson",
        "seq": "78,93"
      }
    ],
    "id": "5cb7cae6ad1c4e6884cdf454075a9ec5",
    "predicate mapping": [
      {
        "label": "chairman",
        "uri": "http://dbpedia.org/property/chairman",
        "seq": "66,74",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "home stadium",
        "uri": "http://dbpedia.org/ontology/homeStadium",
        "seq": "9,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the scientist whose academic advisor is Karl Ewald Hasse and supervisor is Georg Meissner?",
    "SerialNumber": "1083",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/academicAdvisor\u003e \u003chttp://dbpedia.org/resource/Karl_Ewald_Hasse\u003e . ?uri \u003chttp://dbpedia.org/property/doctoralAdvisor\u003e \u003chttp://dbpedia.org/resource/Georg_Meissner\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Scientist\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Karl Ewald Hasse",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Karl_Ewald_Hasse",
        "seq": "45,61"
      },
      {
        "label": "Georg Meissner",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Georg_Meissner",
        "seq": "80,94"
      }
    ],
    "id": "8cf47e5b92d148bdac37fa14e7f2f0d3",
    "predicate mapping": [
      {
        "label": "academic advisor",
        "uri": "http://dbpedia.org/ontology/academicAdvisor",
        "seq": "25,41",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "supervisor",
        "uri": "http://dbpedia.org/property/doctoralAdvisor",
        "seq": "66,76",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "scientist",
        "uri": "http://dbpedia.org/ontology/Scientist",
        "seq": "9,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the resting place of Charles Edward Magoon ?",
    "SerialNumber": "1085",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Charles_Edward_Magoon\u003e \u003chttp://dbpedia.org/property/restingplace\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Charles Edward Magoon",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Charles_Edward_Magoon",
        "seq": "26,47"
      }
    ],
    "id": "20d4fbedbfba402298cd46213df4550e",
    "predicate mapping": [
      {
        "label": "resting place",
        "uri": "http://dbpedia.org/property/restingplace",
        "seq": "9,22",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who owns the newspaper which was founded by Nehru?",
    "SerialNumber": "1087",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/founder\u003e \u003chttp://dbpedia.org/resource/Jawaharlal_Nehru\u003e . ?x \u003chttp://dbpedia.org/ontology/owner\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Newspaper\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Nehru",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Jawaharlal_Nehru",
        "seq": "44,49"
      }
    ],
    "id": "6674f869460343a08285a7ecc8e8efef",
    "predicate mapping": [
      {
        "label": "was founded by",
        "uri": "http://dbpedia.org/property/founder",
        "seq": "29,43",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "owns",
        "uri": "http://dbpedia.org/ontology/owner",
        "seq": "4,8",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "newspaper",
        "uri": "http://dbpedia.org/ontology/Newspaper",
        "seq": "13,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "In which region was political figure Wayne Allard elected?",
    "SerialNumber": "1089",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Wayne_Allard\u003e \u003chttp://dbpedia.org/ontology/region\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Wayne Allard",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Wayne_Allard",
        "seq": "37,49"
      }
    ],
    "id": "bc55397cdb6c4e01b5cb95814c0c9662",
    "predicate mapping": [
      {
        "label": "region",
        "uri": "http://dbpedia.org/ontology/region",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which party of Rishang Keishing is the leader at Manendragarh ?",
    "SerialNumber": "1090",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Manendragarh\u003e \u003chttp://dbpedia.org/ontology/leaderName\u003e ?uri. \u003chttp://dbpedia.org/resource/Rishang_Keishing\u003e \u003chttp://dbpedia.org/property/party\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Manendragarh",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Manendragarh",
        "seq": "49,61"
      },
      {
        "label": "Rishang Keishing",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Rishang_Keishing",
        "seq": "15,31"
      }
    ],
    "id": "f194dbdb9cd343d0a3713fc8e635fff2",
    "predicate mapping": [
      {
        "label": "leader",
        "uri": "http://dbpedia.org/ontology/leaderName",
        "seq": "39,45",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "party",
        "uri": "http://dbpedia.org/property/party",
        "seq": "6,11",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the district of Robert William Wilcox ?",
    "SerialNumber": "1092",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Robert_William_Wilcox\u003e \u003chttp://dbpedia.org/property/district\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Robert William Wilcox",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Robert_William_Wilcox",
        "seq": "21,42"
      }
    ],
    "id": "ba1296ab79d44a72b90bc4eda20551f0",
    "predicate mapping": [
      {
        "label": "district",
        "uri": "http://dbpedia.org/property/district",
        "seq": "9,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who is the author of Karakuri Dji Ultimo ?",
    "SerialNumber": "1093",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Karakuri_Dôji_Ultimo\u003e \u003chttp://dbpedia.org/property/author\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Karakuri Dji Ultimo",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Karakuri_Dôji_Ultimo",
        "seq": "21,40"
      }
    ],
    "id": "3c2822d238f74e5d8723e577709dbc0d",
    "predicate mapping": [
      {
        "label": "author",
        "uri": "http://dbpedia.org/property/author",
        "seq": "11,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the movies in which music is give by  Laurie Johnson and edited by Anthony Harvey ?",
    "SerialNumber": "1094",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/music\u003e \u003chttp://dbpedia.org/resource/Laurie_Johnson\u003e . ?uri \u003chttp://dbpedia.org/ontology/editing\u003e \u003chttp://dbpedia.org/resource/Anthony_Harvey\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Laurie Johnson",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Laurie_Johnson",
        "seq": "43,57"
      },
      {
        "label": "Anthony Harvey",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Anthony_Harvey",
        "seq": "72,86"
      }
    ],
    "id": "96586e0449a14210adfeea2f9756672f",
    "predicate mapping": [
      {
        "label": "music",
        "uri": "http://dbpedia.org/property/music",
        "seq": "25,30",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "edited by",
        "uri": "http://dbpedia.org/ontology/editing",
        "seq": "62,71",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "What are some districts in the Tendring borough?",
    "SerialNumber": "1095",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/borough\u003e \u003chttp://dbpedia.org/resource/Tendring\u003e . ?x \u003chttp://dbpedia.org/ontology/district\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Tendring",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Tendring",
        "seq": "31,39"
      }
    ],
    "id": "87e83ee1d27a42928457988a175777b9",
    "predicate mapping": [
      {
        "label": "borough",
        "uri": "http://dbpedia.org/property/borough",
        "seq": "40,47",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "district",
        "uri": "http://dbpedia.org/ontology/district",
        "seq": "14,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "401",
    "question": "Give me a count of bacterias which belongs to Bacilli class?",
    "SerialNumber": "1097",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/ontology/class\u003e \u003chttp://dbpedia.org/resource/Bacilli\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Bacteria\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Bacilli",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Bacilli",
        "seq": "46,53"
      }
    ],
    "id": "6027ae40ca0541feb5c23edebbf8dc5c",
    "predicate mapping": [
      {
        "label": "class",
        "uri": "http://dbpedia.org/ontology/class",
        "seq": "54,59",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "bacteria",
        "uri": "http://dbpedia.org/ontology/Bacteria",
        "seq": "19,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "8",
    "question": " Name the city whose province is Metropolitan City of Venice and has leader as Luigi Brugnaro ?",
    "SerialNumber": "1098",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/province\u003e \u003chttp://dbpedia.org/resource/Metropolitan_City_of_Venice\u003e . ?uri \u003chttp://dbpedia.org/ontology/leaderName\u003e \u003chttp://dbpedia.org/resource/Luigi_Brugnaro\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Metropolitan City of Venice",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Metropolitan_City_of_Venice",
        "seq": "33,60"
      },
      {
        "label": "Luigi Brugnaro",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Luigi_Brugnaro",
        "seq": "79,93"
      }
    ],
    "id": "87b8d216055241b8bfb033091e0b401d",
    "predicate mapping": [
      {
        "label": "province",
        "uri": "http://dbpedia.org/property/province",
        "seq": "21,29",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "leader name",
        "uri": "http://dbpedia.org/ontology/leaderName",
        "seq": "-1,10",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the television show whose voice is given by April Stewart and it\u0027s distributor is Broadcast syndication?",
    "SerialNumber": "1100",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/voices\u003e \u003chttp://dbpedia.org/resource/April_Stewart\u003e . ?uri \u003chttp://dbpedia.org/ontology/distributor\u003e \u003chttp://dbpedia.org/resource/Broadcast_syndication\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "April Stewart",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/April_Stewart",
        "seq": "49,62"
      },
      {
        "label": "Broadcast syndication",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Broadcast_syndication",
        "seq": "87,108"
      }
    ],
    "id": "b999081fee064aae850db1e1963425c1",
    "predicate mapping": [
      {
        "label": "voice",
        "uri": "http://dbpedia.org/property/voices",
        "seq": "31,36",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "distributor",
        "uri": "http://dbpedia.org/ontology/distributor",
        "seq": "72,83",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "9,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Which universities are alma mater to Charles Plosser?",
    "SerialNumber": "1113",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Charles_Plosser\u003e \u003chttp://dbpedia.org/property/almaMater\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Charles Plosser",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Charles_Plosser",
        "seq": "37,52"
      }
    ],
    "id": "63e6c4e6a8e54d1d84d524f2d2efec81",
    "predicate mapping": [
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/property/almaMater",
        "seq": "23,33",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Where was the Temptation Waits recorded?",
    "SerialNumber": "1114",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Temptation_Waits\u003e \u003chttp://dbpedia.org/ontology/recordedIn\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Temptation Waits",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Temptation_Waits",
        "seq": "14,30"
      }
    ],
    "id": "e8ba1b2b3f3944aa9e7a39ebfb9d8640",
    "predicate mapping": [
      {
        "label": "recorded",
        "uri": "http://dbpedia.org/ontology/recordedIn",
        "seq": "31,39",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the species of Panthera leo fossilis ?",
    "SerialNumber": "1115",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Panthera_leo_fossilis\u003e \u003chttp://dbpedia.org/ontology/species\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Panthera leo fossilis",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Panthera_leo_fossilis",
        "seq": "20,41"
      }
    ],
    "id": "571fc2015ffd4fc78f1f711b2042fbe1",
    "predicate mapping": [
      {
        "label": "species",
        "uri": "http://dbpedia.org/ontology/species",
        "seq": "9,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "What is the associated band of the musical artist who is the producer of The Trumpet Kings Meet Joe Turner ?",
    "SerialNumber": "1116",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/The_Trumpet_Kings_Meet_Joe_Turner\u003e \u003chttp://dbpedia.org/property/producer\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/associatedBand\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MusicalArtist\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "The Trumpet Kings Meet Joe Turner",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Trumpet_Kings_Meet_Joe_Turner",
        "seq": "73,106"
      }
    ],
    "id": "8498d4343f9b475eb530413e390c99cd",
    "predicate mapping": [
      {
        "label": "producer",
        "uri": "http://dbpedia.org/property/producer",
        "seq": "61,69",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "associated band",
        "uri": "http://dbpedia.org/ontology/associatedBand",
        "seq": "12,27",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "musical artist",
        "uri": "http://dbpedia.org/ontology/MusicalArtist",
        "seq": "35,49",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the driver who had a pole finish in 1989 Portuguese Grand Prix ?",
    "SerialNumber": "1117",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/1989_Portuguese_Grand_Prix\u003e \u003chttp://dbpedia.org/ontology/poleDriver\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "1989 Portuguese Grand Prix",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/1989_Portuguese_Grand_Prix",
        "seq": "41,67"
      }
    ],
    "id": "af1582bae86d4e2dbb0237cb9e880064",
    "predicate mapping": [
      {
        "label": "driver pole",
        "uri": "http://dbpedia.org/ontology/poleDriver",
        "seq": "-1,10",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "111",
    "question": "Give me the total number of membership of the organisations which have memebers as  Azerbaijan?",
    "SerialNumber": "1119",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/membership\u003e \u003chttp://dbpedia.org/resource/Azerbaijan\u003e . ?x \u003chttp://dbpedia.org/property/membership\u003e ?uri }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Azerbaijan",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Azerbaijan",
        "seq": "84,94"
      }
    ],
    "id": "66c29c1492c74dc0887a4d8ed49584f1",
    "predicate mapping": [
      {
        "label": "membership",
        "uri": "http://dbpedia.org/property/membership",
        "seq": "28,38",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "membership",
        "uri": "http://dbpedia.org/property/membership",
        "seq": "28,38",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who is the builder of the bridge owned by Tabriz ?",
    "SerialNumber": "1120",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/owner\u003e \u003chttp://dbpedia.org/resource/Tabriz\u003e . ?x \u003chttp://dbpedia.org/ontology/builder\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Bridge\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Tabriz",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Tabriz",
        "seq": "42,48"
      }
    ],
    "id": "6843ef8a60e748b1845aa257e4054420",
    "predicate mapping": [
      {
        "label": "owned",
        "uri": "http://dbpedia.org/property/owner",
        "seq": "33,38",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "builder",
        "uri": "http://dbpedia.org/ontology/builder",
        "seq": "11,18",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "bridge",
        "uri": "http://dbpedia.org/ontology/Bridge",
        "seq": "26,32",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which show\u0027s theme music was composed by Primus and voiced by Isaac Hayes?",
    "SerialNumber": "1121",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/themeMusicComposer\u003e \u003chttp://dbpedia.org/resource/Primus_(band)\u003e . ?uri \u003chttp://dbpedia.org/property/voices\u003e \u003chttp://dbpedia.org/resource/Isaac_Hayes\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Primus",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Primus_(band)",
        "seq": "41,47"
      },
      {
        "label": "Isaac Hayes",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Isaac_Hayes",
        "seq": "62,73"
      }
    ],
    "id": "3d937ff8b74e4b77873053158ed4a571",
    "predicate mapping": [
      {
        "label": "composed",
        "uri": "http://dbpedia.org/property/themeMusicComposer",
        "seq": "29,37",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "voiced",
        "uri": "http://dbpedia.org/property/voices",
        "seq": "52,58",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "show\u0027s",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "6,12",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "Which city\u0027s governing body is led by Bruce Harrell?",
    "SerialNumber": "1122",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/leader\u003e \u003chttp://dbpedia.org/resource/Bruce_Harrell\u003e . ?uri \u003chttp://dbpedia.org/property/governingBody\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Bruce Harrell",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Bruce_Harrell",
        "seq": "38,51"
      }
    ],
    "id": "f99ff03fa6aa4f94ac6dd9d409b8706a",
    "predicate mapping": [
      {
        "label": "led",
        "uri": "http://dbpedia.org/ontology/leader",
        "seq": "31,34",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "governing body",
        "uri": "http://dbpedia.org/property/governingBody",
        "seq": "13,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What are the reason served by Toll Global Express which is also the country of LPGA ?",
    "SerialNumber": "1123",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Toll_Global_Express\u003e \u003chttp://dbpedia.org/ontology/regionServed\u003e ?uri. \u003chttp://dbpedia.org/resource/LPGA\u003e \u003chttp://dbpedia.org/ontology/country\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Toll Global Express",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Toll_Global_Express",
        "seq": "30,49"
      },
      {
        "label": "LPGA",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/LPGA",
        "seq": "79,83"
      }
    ],
    "id": "789c4ee3592743b49f1e3f05c8a35b1e",
    "predicate mapping": [
      {
        "label": "served",
        "uri": "http://dbpedia.org/ontology/regionServed",
        "seq": "20,26",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/country",
        "seq": "68,75",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "What are the television shows whose writers did notable work for Band of Brothers ?",
    "SerialNumber": "1126",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/notableWork\u003e \u003chttp://dbpedia.org/resource/Band_of_Brothers_(miniseries)\u003e . ?uri \u003chttp://dbpedia.org/property/writer\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Band of Brothers",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Band_of_Brothers_(miniseries)",
        "seq": "65,81"
      }
    ],
    "id": "52db9e57f2664971af4d8b9d4dd8b49f",
    "predicate mapping": [
      {
        "label": "notable work",
        "uri": "http://dbpedia.org/ontology/notableWork",
        "seq": "48,60",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "writers",
        "uri": "http://dbpedia.org/property/writer",
        "seq": "36,43",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "13,28",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Was 12th Field Artillery Regiment garrisoned at colorado?",
    "SerialNumber": "1127",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/12th_Field_Artillery_Regiment\u003e \u003chttp://dbpedia.org/ontology/garrison\u003e \u003chttp://dbpedia.org/resource/Colorado\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "12th Field Artillery Regiment",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/12th_Field_Artillery_Regiment",
        "seq": "4,33"
      },
      {
        "label": "colorado",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Colorado",
        "seq": "48,56"
      }
    ],
    "id": "6d862521319c45838d0b8922b8bd22a1",
    "predicate mapping": [
      {
        "label": "garrison",
        "uri": "http://dbpedia.org/ontology/garrison",
        "seq": "34,42",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What is the genre of the Band whose home town is County Westmeath?",
    "SerialNumber": "1129",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/hometown\u003e \u003chttp://dbpedia.org/resource/County_Westmeath\u003e . ?x \u003chttp://dbpedia.org/property/genre\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Band\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "County Westmeath",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/County_Westmeath",
        "seq": "49,65"
      }
    ],
    "id": "44d2ca7a78c54e4e8e4034be3b29abd0",
    "predicate mapping": [
      {
        "label": "home town",
        "uri": "http://dbpedia.org/ontology/hometown",
        "seq": "36,45",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "genre",
        "uri": "http://dbpedia.org/property/genre",
        "seq": "12,17",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "Band",
        "uri": "http://dbpedia.org/ontology/Band",
        "seq": "25,29",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the municipality of Patterson Houses ?",
    "SerialNumber": "1130",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Patterson_Houses\u003e \u003chttp://dbpedia.org/ontology/municipality\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Patterson Houses",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Patterson_Houses",
        "seq": "28,44"
      }
    ],
    "id": "696529855616457e86adf4ee2c4833a9",
    "predicate mapping": [
      {
        "label": "municipality",
        "uri": "http://dbpedia.org/ontology/municipality",
        "seq": "12,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What is the successor of the governors whose child is Levi Lincoln, Jr.?",
    "SerialNumber": "1131",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/children\u003e \u003chttp://dbpedia.org/resource/Levi_Lincoln,_Jr.\u003e . ?x \u003chttp://dbpedia.org/property/successor\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Governor\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Levi Lincoln, Jr.",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Levi_Lincoln,_Jr.",
        "seq": "54,71"
      }
    ],
    "id": "7c998b30d1464e4096270e79dab19769",
    "predicate mapping": [
      {
        "label": "child",
        "uri": "http://dbpedia.org/property/children",
        "seq": "45,50",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "successor",
        "uri": "http://dbpedia.org/property/successor",
        "seq": "12,21",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "governor",
        "uri": "http://dbpedia.org/ontology/Governor",
        "seq": "29,37",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Was Gareth Southgate a manager of Middlesbrough F.C.?",
    "SerialNumber": "1132",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Gareth_Southgate\u003e \u003chttp://dbpedia.org/property/managerclubs\u003e \u003chttp://dbpedia.org/resource/Middlesbrough_F.C.\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Gareth Southgate",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Gareth_Southgate",
        "seq": "4,20"
      },
      {
        "label": "Middlesbrough F.C",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Middlesbrough_F.C.",
        "seq": "34,51"
      }
    ],
    "id": "819cbba8b6af4f75bddb596029d507d6",
    "predicate mapping": [
      {
        "label": "manager",
        "uri": "http://dbpedia.org/property/managerclubs",
        "seq": "23,30",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "In which city is the building, whose part is the Martin AN/FSG1 anti aircraft system?",
    "SerialNumber": "1133",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/part\u003e \u003chttp://dbpedia.org/resource/Martin_AN/FSG-1_Antiaircraft_Defense_System\u003e . ?x \u003chttp://dbpedia.org/property/district\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Building\u003e}",
    "checked": "false",
    "entity mapping": [],
    "id": "bfc1096eaf1243c6b9d2d32967f50390",
    "predicate mapping": [
      {
        "label": "part",
        "uri": "http://dbpedia.org/ontology/part",
        "seq": "37,41",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "aircraft system anti",
        "uri": "http://dbpedia.org/resource/Martin_AN/FSG-1_Antiaircraft_Defense_System",
        "seq": "-1,19",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "city",
        "uri": "http://dbpedia.org/property/district",
        "seq": "9,13",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "building",
        "uri": "http://dbpedia.org/ontology/Building",
        "seq": "21,29",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Does Lousana lie at the end of Alberta Highway 42?",
    "SerialNumber": "1139",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Alberta_Highway_42\u003e \u003chttp://dbpedia.org/ontology/routeEnd\u003e \u003chttp://dbpedia.org/resource/Lousana\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Highway 42",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Alberta_Highway_42",
        "seq": "39,49"
      },
      {
        "label": "Lousana",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Lousana",
        "seq": "5,12"
      }
    ],
    "id": "26729aff756e4638a9b104c39f66ba59",
    "predicate mapping": [
      {
        "label": "end",
        "uri": "http://dbpedia.org/ontology/routeEnd",
        "seq": "24,27",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "401",
    "question": "Give me a count of movies whose producer is Larry J. Franco?",
    "SerialNumber": "1144",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/ontology/producer\u003e \u003chttp://dbpedia.org/resource/Larry_J._Franco\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Larry J. Franco",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Larry_J._Franco",
        "seq": "44,59"
      }
    ],
    "id": "9e0cf38ea6bf48b18ba968d51da06694",
    "predicate mapping": [
      {
        "label": "producer",
        "uri": "http://dbpedia.org/ontology/producer",
        "seq": "32,40",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "19,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Who authored the works published in the Jump Square Magazine?",
    "SerialNumber": "1145",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/magazine\u003e \u003chttp://dbpedia.org/resource/Jump_Square\u003e . ?x \u003chttp://dbpedia.org/property/author\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jump Square",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Jump_Square",
        "seq": "40,51"
      }
    ],
    "id": "847f6bf7556844018c82cace3485a7a9",
    "predicate mapping": [
      {
        "label": "Magazine",
        "uri": "http://dbpedia.org/property/magazine",
        "seq": "52,60",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "author",
        "uri": "http://dbpedia.org/property/author",
        "seq": "4,10",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the partners of Kelly Brook?",
    "SerialNumber": "1146",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Kelly_Brook\u003e \u003chttp://dbpedia.org/ontology/partner\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Kelly Brook",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Kelly_Brook",
        "seq": "21,32"
      }
    ],
    "id": "c6210ff5ca7d44fd8d63a4a8c291e777",
    "predicate mapping": [
      {
        "label": "partner",
        "uri": "http://dbpedia.org/ontology/partner",
        "seq": "9,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "What is the TV Show whose theme is composed by someone signed up with Prawn Song Records?",
    "SerialNumber": "1147",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/recordLabel\u003e \u003chttp://dbpedia.org/resource/Prawn_Song_Records\u003e . ?uri \u003chttp://dbpedia.org/property/themeMusicComposer\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Prawn Song Records",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Prawn_Song_Records",
        "seq": "70,88"
      }
    ],
    "id": "9303edfb0af843e094e5273e975f604e",
    "predicate mapping": [
      {
        "label": "records",
        "uri": "http://dbpedia.org/ontology/recordLabel",
        "seq": "-1,6",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "composed",
        "uri": "http://dbpedia.org/property/themeMusicComposer",
        "seq": "35,43",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "-1,3",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "108",
    "question": "Count the  total number of mammals whose phylum is Chordate and order (taxonomy) is Diprotodontia?",
    "SerialNumber": "1149",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/ontology/phylum\u003e \u003chttp://dbpedia.org/resource/Chordate\u003e . ?uri \u003chttp://dbpedia.org/ontology/order\u003e \u003chttp://dbpedia.org/resource/Diprotodontia\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Chordate",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Chordate",
        "seq": "51,59"
      },
      {
        "label": "Diprotodontia",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Diprotodontia",
        "seq": "84,97"
      }
    ],
    "id": "d1caae4b8c75454d93e63dad304d42b9",
    "predicate mapping": [
      {
        "label": "phylum",
        "uri": "http://dbpedia.org/ontology/phylum",
        "seq": "41,47",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "order (taxonomy)",
        "uri": "http://dbpedia.org/ontology/order",
        "seq": "64,80",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the location town of First Church of Christ, Scientist (Pittsburgh) ?",
    "SerialNumber": "1152",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/First_Church_of_Christ,_Scientist_(Pittsburgh)\u003e \u003chttp://dbpedia.org/property/locationTown\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "First Church of Christ, Scientist (Pittsburgh)",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/First_Church_of_Christ,_Scientist_(Pittsburgh)",
        "seq": "29,75"
      }
    ],
    "id": "1b2911efce6c47eca4f936300c9bb041",
    "predicate mapping": [
      {
        "label": "location town",
        "uri": "http://dbpedia.org/property/locationTown",
        "seq": "12,25",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "7",
    "question": "Whose commanders are Colin Powell and Jaber Al-Ahmad Al-Sabah?",
    "SerialNumber": "1153",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/ontology/commander\u003e \u003chttp://dbpedia.org/resource/Colin_Powell\u003e . ?uri \u003chttp://dbpedia.org/ontology/commander\u003e \u003chttp://dbpedia.org/resource/Jaber_Al-Ahmad_Al-Sabah\u003e . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Colin Powell",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Colin_Powell",
        "seq": "21,33"
      },
      {
        "label": "Jaber Al-Ahmad Al-Sabah",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Jaber_Al-Ahmad_Al-Sabah",
        "seq": "38,61"
      }
    ],
    "id": "fcf7d180e4f849d884627ce282a7d659",
    "predicate mapping": [
      {
        "label": "commander",
        "uri": "http://dbpedia.org/ontology/commander",
        "seq": "6,15",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "commander",
        "uri": "http://dbpedia.org/ontology/commander",
        "seq": "6,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Who is the person whose home town is Fairmount, Indiana?",
    "SerialNumber": "1155",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/hometown\u003e \u003chttp://dbpedia.org/resource/Fairmount,_Indiana\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Fairmount, Indiana",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Fairmount,_Indiana",
        "seq": "37,55"
      }
    ],
    "id": "9986303e97774cd7a0eb26d611ebfb8c",
    "predicate mapping": [
      {
        "label": "home town",
        "uri": "http://dbpedia.org/ontology/hometown",
        "seq": "24,33",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/Person",
        "seq": "11,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Is George Lucas the cinematographer of 6-18-67?",
    "SerialNumber": "1157",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/6-18-67\u003e \u003chttp://dbpedia.org/property/cinematography\u003e \u003chttp://dbpedia.org/resource/George_Lucas\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "6-18-67",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/6-18-67",
        "seq": "39,46"
      },
      {
        "label": "George Lucas",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/George_Lucas",
        "seq": "3,15"
      }
    ],
    "id": "e79c464a0faa4544b7317d38d2bc4f10",
    "predicate mapping": [
      {
        "label": "cinematographer",
        "uri": "http://dbpedia.org/property/cinematography",
        "seq": "20,35",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "List the shows whose company\u0027s successor is Amblin Television.",
    "SerialNumber": "1158",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/successor\u003e \u003chttp://dbpedia.org/resource/Amblin_Television\u003e . ?uri \u003chttp://dbpedia.org/ontology/company\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Amblin Television",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Amblin_Television",
        "seq": "44,61"
      }
    ],
    "id": "cae3487d42164d05933fe21a244679b0",
    "predicate mapping": [
      {
        "label": "successor",
        "uri": "http://dbpedia.org/ontology/successor",
        "seq": "31,40",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/company",
        "seq": "21,28",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "television.",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "-1,10",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "111",
    "question": "Count the total number of battles fought by the military people which fought in Levant ?",
    "SerialNumber": "1159",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/battles\u003e \u003chttp://dbpedia.org/resource/Levant\u003e . ?x \u003chttp://dbpedia.org/property/battles\u003e ?uri }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Levant",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Levant",
        "seq": "80,86"
      }
    ],
    "id": "3d79316015644677b50c9a9187864e97",
    "predicate mapping": [
      {
        "label": "battles",
        "uri": "http://dbpedia.org/property/battles",
        "seq": "26,33",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "battles",
        "uri": "http://dbpedia.org/property/battles",
        "seq": "26,33",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Which genre of books does the writer of The Many Hands write?",
    "SerialNumber": "1162",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/The_Many_Hands\u003e \u003chttp://dbpedia.org/property/author\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/genre\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "The Many Hands",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Many_Hands",
        "seq": "40,54"
      }
    ],
    "id": "e0d5791e431e4dfaa75b9ae5077f76f6",
    "predicate mapping": [
      {
        "label": "writer",
        "uri": "http://dbpedia.org/property/author",
        "seq": "30,36",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "genre",
        "uri": "http://dbpedia.org/ontology/genre",
        "seq": "6,11",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Laozi has authored which books ?",
    "SerialNumber": "1164",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/author\u003e \u003chttp://dbpedia.org/resource/Laozi\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Book\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Laozi",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Laozi",
        "seq": "0,5"
      }
    ],
    "id": "28cd37f0c056464ba94caaf56714d451",
    "predicate mapping": [
      {
        "label": "author",
        "uri": "http://dbpedia.org/property/author",
        "seq": "10,16",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "book",
        "uri": "http://dbpedia.org/ontology/Book",
        "seq": "25,29",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What is the television show whose opening theme is Te Deum (Charpentier)?",
    "SerialNumber": "1166",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/openingTheme\u003e \u003chttp://dbpedia.org/resource/Te_Deum_(Charpentier)\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Te Deum",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Te_Deum_(Charpentier)",
        "seq": "51,58"
      }
    ],
    "id": "8cb5fda5cb994ed4a6559ef08a02c270",
    "predicate mapping": [
      {
        "label": "opening theme",
        "uri": "http://dbpedia.org/ontology/openingTheme",
        "seq": "34,47",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "12,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the river passing through Reading Berkshire and has mouth place at Essex ?",
    "SerialNumber": "1169",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/city\u003e \u003chttp://dbpedia.org/resource/Reading,_Berkshire\u003e . ?uri \u003chttp://dbpedia.org/ontology/mouthPlace\u003e \u003chttp://dbpedia.org/resource/Essex\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/River\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Reading",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Reading,_Berkshire",
        "seq": "31,38"
      },
      {
        "label": "Essex",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Essex",
        "seq": "72,77"
      }
    ],
    "id": "1d9e39c815aa470e98599d9dce9429ac",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/city",
        "seq": "19,21",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "mouth place",
        "uri": "http://dbpedia.org/ontology/mouthPlace",
        "seq": "57,68",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "406",
    "question": "How many movies music composers are associated with Demis Roussos ?",
    "SerialNumber": "1170",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/associatedActs\u003e \u003chttp://dbpedia.org/resource/Demis_Roussos\u003e . ?uri \u003chttp://dbpedia.org/ontology/musicComposer\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Demis Roussos",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Demis_Roussos",
        "seq": "52,65"
      }
    ],
    "id": "8799ce61b9644208a9ceb5a2851990ef",
    "predicate mapping": [
      {
        "label": "associated",
        "uri": "http://dbpedia.org/property/associatedActs",
        "seq": "36,46",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "music composer",
        "uri": "http://dbpedia.org/ontology/musicComposer",
        "seq": "16,30",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "Who all play for the Ivory Coast football team?",
    "SerialNumber": "1171",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/nationalteam\u003e \u003chttp://dbpedia.org/resource/Ivory_Coast_national_football_team\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ivory Coast football team",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Ivory_Coast_national_football_team",
        "seq": "21,32"
      }
    ],
    "id": "68b47db5171449cab76dfcb3095290e0",
    "predicate mapping": [
      {
        "label": "team",
        "uri": "http://dbpedia.org/property/nationalteam",
        "seq": "42,46",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "111",
    "question": "List the total number of executive producer of TV show which have one of the executiive producer as Steven Moffat ?",
    "SerialNumber": "1174",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/executiveProducer\u003e \u003chttp://dbpedia.org/resource/Steven_Moffat\u003e . ?x \u003chttp://dbpedia.org/property/executiveProducer\u003e ?uri }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Steven Moffat",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Steven_Moffat",
        "seq": "100,113"
      }
    ],
    "id": "371d70719856441eaf31d0f5046aa071",
    "predicate mapping": [
      {
        "label": "executive producer",
        "uri": "http://dbpedia.org/ontology/executiveProducer",
        "seq": "25,43",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "executive producer",
        "uri": "http://dbpedia.org/property/executiveProducer",
        "seq": "25,43",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "What is the nation of the Major All Stars Season 1 and Pioneer Corporation ?",
    "SerialNumber": "1175",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Major_All_Stars_Season_1\u003e \u003chttp://dbpedia.org/property/country\u003e ?uri. \u003chttp://dbpedia.org/resource/Pioneer_Corporation\u003e \u003chttp://dbpedia.org/property/country\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Major All Stars Season 1",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Major_All_Stars_Season_1",
        "seq": "26,50"
      },
      {
        "label": "Pioneer Corporation",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Pioneer_Corporation",
        "seq": "55,74"
      }
    ],
    "id": "e3aa6561a7cc47cf9a28949ebf5a6af6",
    "predicate mapping": [
      {
        "label": "nation",
        "uri": "http://dbpedia.org/property/country",
        "seq": "12,18",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "nation",
        "uri": "http://dbpedia.org/property/country",
        "seq": "12,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "106",
    "question": "How many things belong to a division of plant kingdom?",
    "SerialNumber": "1176",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/kingdom\u003e \u003chttp://dbpedia.org/resource/Plant\u003e . ?uri \u003chttp://dbpedia.org/ontology/division\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "plant kingdom",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Plant",
        "seq": "40,53"
      }
    ],
    "id": "45e3091f10f74546abd072865a7e6b78",
    "predicate mapping": [
      {
        "label": "kingdom",
        "uri": "http://dbpedia.org/ontology/kingdom",
        "seq": "46,53",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "division",
        "uri": "http://dbpedia.org/ontology/division",
        "seq": "28,36",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "307",
    "question": "What is the fictional character which has Clan McDuck and Ludwig Von Draken as relatives?",
    "SerialNumber": "1179",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/property/relatives\u003e \u003chttp://dbpedia.org/resource/Clan_McDuck\u003e . ?uri \u003chttp://dbpedia.org/property/relatives\u003e \u003chttp://dbpedia.org/resource/Ludwig_Von_Drake\u003e . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/FictionalCharacter\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Clan McDuck",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Clan_McDuck",
        "seq": "42,53"
      },
      {
        "label": "Ludwig Von Drake",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ludwig_Von_Drake",
        "seq": "58,74"
      }
    ],
    "id": "a737185e8cc848e3ab56d97876bccbff",
    "predicate mapping": [
      {
        "label": "relatives",
        "uri": "http://dbpedia.org/property/relatives",
        "seq": "79,88",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "relatives",
        "uri": "http://dbpedia.org/property/relatives",
        "seq": "79,88",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "fictional character",
        "uri": "http://dbpedia.org/ontology/FictionalCharacter",
        "seq": "12,31",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "Companies headquartered in Geneva own which TV Shows?",
    "SerialNumber": "1184",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/headquarter\u003e \u003chttp://dbpedia.org/resource/Geneva\u003e . ?uri \u003chttp://dbpedia.org/property/company\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Geneva",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Geneva",
        "seq": "27,33"
      }
    ],
    "id": "6abe087917704e3f90ab3bbeb58cc5bb",
    "predicate mapping": [
      {
        "label": "headquarter",
        "uri": "http://dbpedia.org/ontology/headquarter",
        "seq": "10,21",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "companies",
        "uri": "http://dbpedia.org/property/company",
        "seq": "-1,8",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "In which city is the sister station of WCSE-LP located ?",
    "SerialNumber": "1186",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/WCSE-LP\u003e \u003chttp://dbpedia.org/property/sisterStations\u003e ?x . ?x \u003chttp://dbpedia.org/property/city\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "WCSE-LP",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/WCSE-LP",
        "seq": "39,46"
      }
    ],
    "id": "01a41f39bd59458cb89c2df139ccc213",
    "predicate mapping": [
      {
        "label": "station sister",
        "uri": "http://dbpedia.org/property/sisterStations",
        "seq": "-1,13",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "city",
        "uri": "http://dbpedia.org/property/city",
        "seq": "9,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Where are the homestadiums of the seasons chaired by Merritt Paulson?",
    "SerialNumber": "1189",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/chairman\u003e \u003chttp://dbpedia.org/resource/Merritt_Paulson\u003e . ?x \u003chttp://dbpedia.org/ontology/homeStadium\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/SoccerClubSeason\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Merritt Paulson",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Merritt_Paulson",
        "seq": "53,68"
      }
    ],
    "id": "b7b9319df8c949b1a7ddcb86ae2879b0",
    "predicate mapping": [
      {
        "label": "chaired",
        "uri": "http://dbpedia.org/ontology/chairman",
        "seq": "42,49",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "homestadiums",
        "uri": "http://dbpedia.org/ontology/homeStadium",
        "seq": "14,26",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "seasons",
        "uri": "http://dbpedia.org/ontology/SoccerClubSeason",
        "seq": "34,41",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the products of the BBC Multimedia and series of the The Last Resort (Doctor Who)",
    "SerialNumber": "1190",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/BBC_Multimedia\u003e \u003chttp://dbpedia.org/property/products\u003e ?uri. \u003chttp://dbpedia.org/resource/The_Last_Resort_(Doctor_Who)\u003e \u003chttp://dbpedia.org/ontology/series\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "BBC Multimedia",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/BBC_Multimedia",
        "seq": "28,42"
      },
      {
        "label": "The Last Resort (Doctor Who)",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Last_Resort_(Doctor_Who)",
        "seq": "61,89"
      }
    ],
    "id": "d4cce931336041649e567c91e9bfb7c6",
    "predicate mapping": [
      {
        "label": "products",
        "uri": "http://dbpedia.org/property/products",
        "seq": "12,20",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "series",
        "uri": "http://dbpedia.org/ontology/series",
        "seq": "47,53",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "What are the home stadiums of the things Leonid Fedun has been the chairman of?",
    "SerialNumber": "1194",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/chairman\u003e \u003chttp://dbpedia.org/resource/Leonid_Fedun\u003e . ?x \u003chttp://dbpedia.org/ontology/homeStadium\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Leonid Fedun",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Leonid_Fedun",
        "seq": "41,53"
      }
    ],
    "id": "6e2a9956638d4d918c8bc965f66fb09a",
    "predicate mapping": [
      {
        "label": "chairman",
        "uri": "http://dbpedia.org/ontology/chairman",
        "seq": "67,75",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "home stadium",
        "uri": "http://dbpedia.org/ontology/homeStadium",
        "seq": "13,25",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "For which team does hunter pence play for?",
    "SerialNumber": "1195",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Hunter_Pence\u003e \u003chttp://dbpedia.org/ontology/team\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "hunter pence",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Hunter_Pence",
        "seq": "20,32"
      }
    ],
    "id": "a82ecf0242f748acbf844b9c3181614a",
    "predicate mapping": [
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/team",
        "seq": "10,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "107",
    "question": "How many have former teams as Indianapolis Colts and Carolina Panthers?",
    "SerialNumber": "1196",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?uri \u003chttp://dbpedia.org/ontology/formerTeam\u003e \u003chttp://dbpedia.org/resource/Indianapolis_Colts\u003e . ?uri \u003chttp://dbpedia.org/ontology/formerTeam\u003e \u003chttp://dbpedia.org/resource/Carolina_Panthers\u003e} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Indianapolis Colts",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Indianapolis_Colts",
        "seq": "30,48"
      },
      {
        "label": "Carolina Panthers",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Carolina_Panthers",
        "seq": "53,70"
      }
    ],
    "id": "113d32b939f643a3ba85439d8bf95a1f",
    "predicate mapping": [
      {
        "label": "former team",
        "uri": "http://dbpedia.org/ontology/formerTeam",
        "seq": "14,25",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "former team",
        "uri": "http://dbpedia.org/ontology/formerTeam",
        "seq": "14,25",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "Of what all has David Ian Salter been an editor of?",
    "SerialNumber": "1197",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/editing\u003e \u003chttp://dbpedia.org/resource/David_Ian_Salter\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "David Ian Salter",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/David_Ian_Salter",
        "seq": "16,32"
      }
    ],
    "id": "5932978b97be44fd926095c0dfaad785",
    "predicate mapping": [
      {
        "label": "editor",
        "uri": "http://dbpedia.org/property/editing",
        "seq": "41,47",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which  governing body of the Oahu Railway and Land Company is also the military branch of the Jimmy Quillen ?",
    "SerialNumber": "1202",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Oahu_Railway_and_Land_Company\u003e \u003chttp://dbpedia.org/property/governingBody\u003e ?uri. \u003chttp://dbpedia.org/resource/Jimmy_Quillen\u003e \u003chttp://dbpedia.org/ontology/militaryBranch\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Oahu Railway and Land Company",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Oahu_Railway_and_Land_Company",
        "seq": "29,58"
      },
      {
        "label": "Jimmy Quillen",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Jimmy_Quillen",
        "seq": "94,107"
      }
    ],
    "id": "ebc8f78170a84f1b82725c6d20206319",
    "predicate mapping": [
      {
        "label": "governing body",
        "uri": "http://dbpedia.org/property/governingBody",
        "seq": "7,21",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "military branch",
        "uri": "http://dbpedia.org/ontology/militaryBranch",
        "seq": "71,86",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What is the place of death of the royalties one of whose parents was Adam Ludwik Czartoryski?",
    "SerialNumber": "1205",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/parent\u003e \u003chttp://dbpedia.org/resource/Adam_Ludwik_Czartoryski\u003e . ?x \u003chttp://dbpedia.org/property/deathPlace\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Royalty\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Adam Ludwik Czartoryski",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Adam_Ludwik_Czartoryski",
        "seq": "69,92"
      }
    ],
    "id": "2e77394fb30c488ba0cb3132da2b5e95",
    "predicate mapping": [
      {
        "label": "parent",
        "uri": "http://dbpedia.org/ontology/parent",
        "seq": "57,63",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "place death",
        "uri": "http://dbpedia.org/property/deathPlace",
        "seq": "-1,10",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "royalties",
        "uri": "http://dbpedia.org/ontology/Royalty",
        "seq": "34,43",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "Name the fictional character whose voice\u0027s animator is Hardie Gramatky?",
    "SerialNumber": "1206",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/animator\u003e \u003chttp://dbpedia.org/resource/Hardie_Gramatky\u003e . ?uri \u003chttp://dbpedia.org/ontology/voice\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/FictionalCharacter\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Hardie Gramatky",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Hardie_Gramatky",
        "seq": "55,70"
      }
    ],
    "id": "dcb720202a9b4b1bac3951450a734b3a",
    "predicate mapping": [
      {
        "label": "animator",
        "uri": "http://dbpedia.org/property/animator",
        "seq": "43,51",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "voice",
        "uri": "http://dbpedia.org/ontology/voice",
        "seq": "35,40",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "fictional character",
        "uri": "http://dbpedia.org/ontology/FictionalCharacter",
        "seq": "9,28",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What actor starred in Splash and is married to Rita Wilson?",
    "SerialNumber": "1207",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Splash_(film)\u003e \u003chttp://dbpedia.org/property/starring\u003e ?uri. \u003chttp://dbpedia.org/resource/Rita_Wilson\u003e \u003chttp://dbpedia.org/property/spouse\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Splash",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Splash_(film)",
        "seq": "22,28"
      },
      {
        "label": "Rita Wilson",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Rita_Wilson",
        "seq": "47,58"
      }
    ],
    "id": "be6257ece9e546bc821b110aed45c1b1",
    "predicate mapping": [
      {
        "label": "actor",
        "uri": "http://dbpedia.org/property/starring",
        "seq": "5,10",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "married to",
        "uri": "http://dbpedia.org/property/spouse",
        "seq": "36,46",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "What are the movies whose distributor\u0027s headquarters is New York?",
    "SerialNumber": "1210",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/headquarters\u003e \u003chttp://dbpedia.org/resource/New_York\u003e . ?uri \u003chttp://dbpedia.org/property/distributor\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "New York",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/New_York",
        "seq": "56,64"
      }
    ],
    "id": "d8d554549f9949d5833e62ee180939b7",
    "predicate mapping": [
      {
        "label": "headquarters",
        "uri": "http://dbpedia.org/property/headquarters",
        "seq": "40,52",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "distributor",
        "uri": "http://dbpedia.org/property/distributor",
        "seq": "26,37",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "13,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "What is the religion of the political party which is an international party of Hamas?",
    "SerialNumber": "1212",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Hamas\u003e \u003chttp://dbpedia.org/property/international\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/religion\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/PoliticalParty\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Hamas",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Hamas",
        "seq": "79,84"
      }
    ],
    "id": "f6f5d9f089ee4019abd4ce4fb8a6235e",
    "predicate mapping": [
      {
        "label": "international",
        "uri": "http://dbpedia.org/property/international",
        "seq": "56,69",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion",
        "seq": "12,20",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "political party",
        "uri": "http://dbpedia.org/ontology/PoliticalParty",
        "seq": "28,43",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Which bacteria\u0027s taxonomic class is Bacilli?",
    "SerialNumber": "1215",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/class\u003e \u003chttp://dbpedia.org/resource/Bacilli\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Bacteria\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Bacilli",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Bacilli",
        "seq": "36,43"
      }
    ],
    "id": "8b32454f2b2e4618a018054db9635e5b",
    "predicate mapping": [
      {
        "label": "class",
        "uri": "http://dbpedia.org/ontology/class",
        "seq": "27,32",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "bacteria",
        "uri": "http://dbpedia.org/ontology/Bacteria",
        "seq": "6,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Who was the prime minister of Victor Hope, 2nd Marquess of Linlithgow and also the editor of British Gazette ?",
    "SerialNumber": "1216",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Victor_Hope,_2nd_Marquess_of_Linlithgow\u003e \u003chttp://dbpedia.org/property/primeminister\u003e ?uri. \u003chttp://dbpedia.org/resource/British_Gazette\u003e \u003chttp://dbpedia.org/property/editor\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Victor Hope",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Victor_Hope,_2nd_Marquess_of_Linlithgow",
        "seq": "30,41"
      },
      {
        "label": "British Gazette",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/British_Gazette",
        "seq": "93,108"
      }
    ],
    "id": "4b8c7926f42b4c87ab22e1d6116e4c50",
    "predicate mapping": [
      {
        "label": "minister prime",
        "uri": "http://dbpedia.org/property/primeminister",
        "seq": "-1,13",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "editor",
        "uri": "http://dbpedia.org/property/editor",
        "seq": "83,89",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Is the magnolia place of the greek revival architectural style?",
    "SerialNumber": "1217",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Magnolia_Place\u003e \u003chttp://dbpedia.org/ontology/architecturalStyle\u003e \u003chttp://dbpedia.org/resource/Greek_Revival_architecture\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "magnolia place",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Magnolia_Place",
        "seq": "7,21"
      },
      {
        "label": "greek revival",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Greek_Revival_architecture",
        "seq": "29,42"
      }
    ],
    "id": "0f11a466b24a499382890661bf1fc5ef",
    "predicate mapping": [
      {
        "label": "architectural style",
        "uri": "http://dbpedia.org/ontology/architecturalStyle",
        "seq": "43,62",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the fictional character whose relative are Duck family and Clan McDuck?",
    "SerialNumber": "1218",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/relative\u003e \u003chttp://dbpedia.org/resource/Duck_family_(Disney)\u003e . ?uri \u003chttp://dbpedia.org/property/relatives\u003e \u003chttp://dbpedia.org/resource/Clan_McDuck\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/FictionalCharacter\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Duck family",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Duck_family_(Disney)",
        "seq": "48,59"
      },
      {
        "label": "Clan McDuck",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Clan_McDuck",
        "seq": "64,75"
      }
    ],
    "id": "6f8d3265d2f34fe2823b67ae38748882",
    "predicate mapping": [
      {
        "label": "relative",
        "uri": "http://dbpedia.org/ontology/relative",
        "seq": "35,43",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "relative",
        "uri": "http://dbpedia.org/property/relatives",
        "seq": "35,43",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "fictional character",
        "uri": "http://dbpedia.org/ontology/FictionalCharacter",
        "seq": "9,28",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the movies distributed by Warner Bros. and directed by Ridley Scott ?",
    "SerialNumber": "1220",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/distributor\u003e \u003chttp://dbpedia.org/resource/Warner_Bros.\u003e . ?uri \u003chttp://dbpedia.org/property/director\u003e \u003chttp://dbpedia.org/resource/Ridley_Scott\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Warner Bros.",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Warner_Bros.",
        "seq": "31,43"
      },
      {
        "label": "Ridley Scott",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ridley_Scott",
        "seq": "60,72"
      }
    ],
    "id": "57e62ad01fb74f208589fefbb58693e3",
    "predicate mapping": [
      {
        "label": "distributed by",
        "uri": "http://dbpedia.org/property/distributor",
        "seq": "16,30",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "directed",
        "uri": "http://dbpedia.org/property/director",
        "seq": "48,56",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who is the publisher of the comic, one of whose authors is Kentaro Takekuma ?",
    "SerialNumber": "1222",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/writers\u003e \u003chttp://dbpedia.org/resource/Kentaro_Takekuma\u003e . ?x \u003chttp://dbpedia.org/property/publisher\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Comic\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Kentaro Takekuma",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Kentaro_Takekuma",
        "seq": "59,75"
      }
    ],
    "id": "56360270525d4a54a2201b9a4d1f5f55",
    "predicate mapping": [
      {
        "label": "authors",
        "uri": "http://dbpedia.org/property/writers",
        "seq": "48,55",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "publisher",
        "uri": "http://dbpedia.org/property/publisher",
        "seq": "11,20",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "comic",
        "uri": "http://dbpedia.org/ontology/Comic",
        "seq": "28,33",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What was the result of Operation Autumn Clouds ?",
    "SerialNumber": "1223",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Operation_Autumn_Clouds\u003e \u003chttp://dbpedia.org/property/result\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Operation Autumn Clouds",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Operation_Autumn_Clouds",
        "seq": "23,46"
      }
    ],
    "id": "1c72a1337f9d4e5aabf86018b6b52340",
    "predicate mapping": [
      {
        "label": "result",
        "uri": "http://dbpedia.org/property/result",
        "seq": "13,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "311",
    "question": "List the significant building of the architect who also designed  Kiev?",
    "SerialNumber": "1224",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/significantBuilding\u003e \u003chttp://dbpedia.org/resource/Kiev\u003e . ?x \u003chttp://dbpedia.org/ontology/significantBuilding\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Architect\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Kiev",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Kiev",
        "seq": "66,70"
      }
    ],
    "id": "9de9adf4a6e94b7a8958262626c02714",
    "predicate mapping": [
      {
        "label": "significant building",
        "uri": "http://dbpedia.org/ontology/significantBuilding",
        "seq": "9,29",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "significant building",
        "uri": "http://dbpedia.org/ontology/significantBuilding",
        "seq": "9,29",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "architect",
        "uri": "http://dbpedia.org/ontology/Architect",
        "seq": "37,46",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Was George Washington on the rank of general?",
    "SerialNumber": "1225",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/George_Washington\u003e \u003chttp://dbpedia.org/ontology/militaryRank\u003e \u003chttp://dbpedia.org/resource/General_(United_States)\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "George Washington",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/George_Washington",
        "seq": "4,21"
      },
      {
        "label": "general",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/General_(United_States)",
        "seq": "37,44"
      }
    ],
    "id": "246f18a55ab64b0fbb6478194175418d",
    "predicate mapping": [
      {
        "label": "rank",
        "uri": "http://dbpedia.org/ontology/militaryRank",
        "seq": "29,33",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What softwares were created by Apple Productivity Experience Group ?",
    "SerialNumber": "1226",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Apple_Productivity_Experience_Group\u003e \u003chttp://dbpedia.org/ontology/product\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Apple Productivity Experience Group",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Apple_Productivity_Experience_Group",
        "seq": "31,66"
      }
    ],
    "id": "68516929d5024193a4b6db18b81526ba",
    "predicate mapping": [
      {
        "label": "Product",
        "uri": "http://dbpedia.org/ontology/product",
        "seq": "37,44",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "Count the number of judges who\u0027ve come on CTV network shows.",
    "SerialNumber": "1227",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/network\u003e \u003chttp://dbpedia.org/resource/CTV_Television_Network\u003e . ?x \u003chttp://dbpedia.org/property/judges\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "CTV",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/CTV_Television_Network",
        "seq": "42,45"
      }
    ],
    "id": "f43f2072568f44aaa9450a64e62ca3da",
    "predicate mapping": [
      {
        "label": "network",
        "uri": "http://dbpedia.org/ontology/network",
        "seq": "46,53",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "judges",
        "uri": "http://dbpedia.org/property/judges",
        "seq": "20,26",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What is the mountain whose parent mountain peak is Nevado de Toluca?",
    "SerialNumber": "1230",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/parentMountainPeak\u003e \u003chttp://dbpedia.org/resource/Nevado_de_Toluca\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Mountain\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Nevado de Toluca",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Nevado_de_Toluca",
        "seq": "51,67"
      }
    ],
    "id": "d33ef66c27f14eab8306e08bdf8b8973",
    "predicate mapping": [
      {
        "label": "parent mountain peak",
        "uri": "http://dbpedia.org/ontology/parentMountainPeak",
        "seq": "27,47",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "mountain",
        "uri": "http://dbpedia.org/ontology/Mountain",
        "seq": "12,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the Recorded of the Kaptaan is also the headquarters of the Orient News ?",
    "SerialNumber": "1232",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Kaptaan\u003e \u003chttp://dbpedia.org/property/recorded\u003e ?uri. \u003chttp://dbpedia.org/resource/Orient_News\u003e \u003chttp://dbpedia.org/property/headquarters\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Kaptaan",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Kaptaan",
        "seq": "28,35"
      },
      {
        "label": "Orient News",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Orient_News",
        "seq": "68,79"
      }
    ],
    "id": "3a8332895e0e42bf98c79235b4002de4",
    "predicate mapping": [
      {
        "label": "Recorded",
        "uri": "http://dbpedia.org/property/recorded",
        "seq": "12,20",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "headquarters",
        "uri": "http://dbpedia.org/property/headquarters",
        "seq": "48,60",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Is Gaza Strip the result of Operation Autumn Clouds?",
    "SerialNumber": "1233",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Operation_Autumn_Clouds\u003e \u003chttp://dbpedia.org/property/result\u003e \u003chttp://dbpedia.org/resource/Gaza_Strip\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Operation Autumn Clouds",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Operation_Autumn_Clouds",
        "seq": "28,51"
      },
      {
        "label": "Gaza Strip",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Gaza_Strip",
        "seq": "3,13"
      }
    ],
    "id": "4d97dbf2259544de93801dc834e88eb7",
    "predicate mapping": [
      {
        "label": "result",
        "uri": "http://dbpedia.org/property/result",
        "seq": "18,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the office holder whose predecessor is Henry E. Catto, Jr. and successor is Adrian A. Basora?",
    "SerialNumber": "1234",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/predecessor\u003e \u003chttp://dbpedia.org/resource/Henry_E._Catto,_Jr.\u003e . ?uri \u003chttp://dbpedia.org/property/successor\u003e \u003chttp://dbpedia.org/resource/Adrian_A._Basora\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/OfficeHolder\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Henry E. Catto, Jr.",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Henry_E._Catto,_Jr.",
        "seq": "44,63"
      },
      {
        "label": "Adrian A. Basora",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Adrian_A._Basora",
        "seq": "81,97"
      }
    ],
    "id": "8937f9f398fb4c4091e5b258bed5abf1",
    "predicate mapping": [
      {
        "label": "predecessor",
        "uri": "http://dbpedia.org/property/predecessor",
        "seq": "29,40",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "successor",
        "uri": "http://dbpedia.org/property/successor",
        "seq": "68,77",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "office holder",
        "uri": "http://dbpedia.org/ontology/OfficeHolder",
        "seq": "9,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "?What are the airline hubs of Cascade Airways",
    "SerialNumber": "1235",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Cascade_Airways\u003e \u003chttp://dbpedia.org/property/hubs\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Cascade Airways",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Cascade_Airways",
        "seq": "30,45"
      }
    ],
    "id": "606ecd9c542e4d1d8cd5322a41818757",
    "predicate mapping": [
      {
        "label": "hubs",
        "uri": "http://dbpedia.org/property/hubs",
        "seq": "22,26",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Name the common musical band of Take Me There and Tonight\u0027s the Night ?",
    "SerialNumber": "1239",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Take_Me_There_(Blackstreet_\u0026_Mýa_song)\u003e \u003chttp://dbpedia.org/ontology/musicalBand\u003e ?uri. \u003chttp://dbpedia.org/resource/Tonight\u0027s_the_Night_(Blackstreet_song)\u003e \u003chttp://dbpedia.org/ontology/musicalBand\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Take Me There",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Take_Me_There_(Blackstreet_\u0026_Mýa_song)",
        "seq": "32,45"
      },
      {
        "label": "Tonight\u0027s the Night",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Tonight\u0027s_the_Night_(Blackstreet_song)",
        "seq": "50,69"
      }
    ],
    "id": "eec96c7f869747149720de05e392503f",
    "predicate mapping": [
      {
        "label": "musical band",
        "uri": "http://dbpedia.org/ontology/musicalBand",
        "seq": "16,28",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "musical band",
        "uri": "http://dbpedia.org/ontology/musicalBand",
        "seq": "16,28",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "307",
    "question": "What is the university whose campus are Indiana and Iowa?",
    "SerialNumber": "1241",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/ontology/campus\u003e \u003chttp://dbpedia.org/resource/Indiana\u003e . ?uri \u003chttp://dbpedia.org/ontology/campus\u003e \u003chttp://dbpedia.org/resource/Iowa\u003e . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/University\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Indiana",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Indiana",
        "seq": "40,47"
      },
      {
        "label": "Iowa",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Iowa",
        "seq": "52,56"
      }
    ],
    "id": "1bcf8001ee594f30bb75b84ca66dabab",
    "predicate mapping": [
      {
        "label": "campus",
        "uri": "http://dbpedia.org/ontology/campus",
        "seq": "29,35",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "campus",
        "uri": "http://dbpedia.org/ontology/campus",
        "seq": "29,35",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "university",
        "uri": "http://dbpedia.org/ontology/University",
        "seq": "12,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "To which political party does the writer of In the Bazaars of Hyderabad belong?",
    "SerialNumber": "1242",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/In_the_Bazaars_of_Hyderabad\u003e \u003chttp://dbpedia.org/property/writer\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/party\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "In the Bazaars of Hyderabad",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/In_the_Bazaars_of_Hyderabad",
        "seq": "44,71"
      }
    ],
    "id": "dbc169a2e4a34f00b36ca8be031fe8f5",
    "predicate mapping": [
      {
        "label": "writer",
        "uri": "http://dbpedia.org/property/writer",
        "seq": "34,40",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "political party",
        "uri": "http://dbpedia.org/ontology/party",
        "seq": "9,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "List the other members of the band of which Juelz Santana is a part?",
    "SerialNumber": "1243",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/currentMembers\u003e \u003chttp://dbpedia.org/resource/Juelz_Santana\u003e . ?x \u003chttp://dbpedia.org/ontology/bandMember\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Band\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Juelz Santana",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Juelz_Santana",
        "seq": "44,57"
      }
    ],
    "id": "292a555f92794024a9334e9248fd2c1a",
    "predicate mapping": [
      {
        "label": "members",
        "uri": "http://dbpedia.org/property/currentMembers",
        "seq": "15,22",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "members",
        "uri": "http://dbpedia.org/ontology/bandMember",
        "seq": "15,22",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "band",
        "uri": "http://dbpedia.org/ontology/Band",
        "seq": "30,34",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the style of architecture of Pontiac Building ?",
    "SerialNumber": "1245",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Pontiac_Building\u003e \u003chttp://dbpedia.org/ontology/architecturalStyle\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Pontiac Building",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Pontiac_Building",
        "seq": "37,53"
      }
    ],
    "id": "0373e167503941919cb83707358aee72",
    "predicate mapping": [
      {
        "label": "style of architecture",
        "uri": "http://dbpedia.org/ontology/architecturalStyle",
        "seq": "12,33",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the constituency of  Jonas Gahr Stre ?",
    "SerialNumber": "1247",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Jonas_Gahr_Støre\u003e \u003chttp://dbpedia.org/property/constituency\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jonas Gahr Stre",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Jonas_Gahr_Støre",
        "seq": "26,41"
      }
    ],
    "id": "a5012e9aba5b40bbbc06155442c8940c",
    "predicate mapping": [
      {
        "label": "constituency",
        "uri": "http://dbpedia.org/property/constituency",
        "seq": "9,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the directors of Lennon Legend: The Very Best of John Lennon (DVD) ?",
    "SerialNumber": "1249",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Lennon_Legend:_The_Very_Best_of_John_Lennon_(DVD)\u003e \u003chttp://dbpedia.org/ontology/director\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Lennon Legend: The Very Best of John Lennon (DVD)",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Lennon_Legend:_The_Very_Best_of_John_Lennon_(DVD)",
        "seq": "22,71"
      }
    ],
    "id": "6689a88cf3af48998efaa96b5466f7cb",
    "predicate mapping": [
      {
        "label": "directors",
        "uri": "http://dbpedia.org/ontology/director",
        "seq": "9,18",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "For how many other teams have the members of Atlant Moscow Oblast played?",
    "SerialNumber": "1251",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/playedFor\u003e \u003chttp://dbpedia.org/resource/Atlant_Moscow_Oblast\u003e . ?x \u003chttp://dbpedia.org/ontology/formerTeam\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Atlant Moscow Oblast",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Atlant_Moscow_Oblast",
        "seq": "45,65"
      }
    ],
    "id": "f96d57842d93417d8597a69c57604dd8",
    "predicate mapping": [
      {
        "label": "team",
        "uri": "http://dbpedia.org/property/playedFor",
        "seq": "19,23",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "teams",
        "uri": "http://dbpedia.org/ontology/formerTeam",
        "seq": "19,24",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What are some products of the company whose parent is BBC?",
    "SerialNumber": "1252",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/parent\u003e \u003chttp://dbpedia.org/resource/BBC\u003e . ?x \u003chttp://dbpedia.org/property/products\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Company\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "BBC",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/BBC",
        "seq": "54,57"
      }
    ],
    "id": "dfc6f1364b4f43ac8569c33167e51bee",
    "predicate mapping": [
      {
        "label": "parent",
        "uri": "http://dbpedia.org/property/parent",
        "seq": "44,50",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "products",
        "uri": "http://dbpedia.org/property/products",
        "seq": "14,22",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company",
        "seq": "30,37",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "405",
    "question": "How many sports are played in maharashtran schools?",
    "SerialNumber": "1254",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/state\u003e \u003chttp://dbpedia.org/resource/Maharashtra\u003e . ?x \u003chttp://dbpedia.org/ontology/sport\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Sport\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "maharashtra",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Maharashtra",
        "seq": "30,41"
      }
    ],
    "id": "e8ea9501be9241a191a46ec67d21f79b",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/property/state",
        "seq": "27,29",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "sport",
        "uri": "http://dbpedia.org/ontology/sport",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "sport",
        "uri": "http://dbpedia.org/ontology/Sport",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "Whose famous works have been illustrated by E W Kemble?",
    "SerialNumber": "1256",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/illustrator\u003e \u003chttp://dbpedia.org/resource/E._W._Kemble\u003e . ?uri \u003chttp://dbpedia.org/ontology/notableWork\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "E W Kemble",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/E._W._Kemble",
        "seq": "44,54"
      }
    ],
    "id": "7c0d1f9a0e5e430ea5c1edbef2007075",
    "predicate mapping": [
      {
        "label": "illustrated by",
        "uri": "http://dbpedia.org/property/illustrator",
        "seq": "29,43",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "works",
        "uri": "http://dbpedia.org/ontology/notableWork",
        "seq": "13,18",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who is the owner of the South end ?",
    "SerialNumber": "1257",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/The_South_End\u003e \u003chttp://dbpedia.org/property/owners\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "the South end",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_South_End",
        "seq": "20,33"
      }
    ],
    "id": "3180262923484726bbeebc7b398144d1",
    "predicate mapping": [
      {
        "label": "owner",
        "uri": "http://dbpedia.org/property/owners",
        "seq": "11,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "List down the commanders of Battle of Fort stephenson ?",
    "SerialNumber": "1258",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Battle_of_Fort_Stephenson\u003e \u003chttp://dbpedia.org/ontology/commander\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Battle of Fort stephenson",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Battle_of_Fort_Stephenson",
        "seq": "28,53"
      }
    ],
    "id": "6b763993596b4edab96dd9ec9211ba78",
    "predicate mapping": [
      {
        "label": "commander",
        "uri": "http://dbpedia.org/ontology/commander",
        "seq": "14,23",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which cities of the American Mediterranean Sea has Nickname Entronque de Herradura?",
    "SerialNumber": "1259",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/American_Mediterranean_Sea\u003e \u003chttp://dbpedia.org/property/cities\u003e ?uri. \u003chttp://dbpedia.org/resource/Entronque_de_Herradura\u003e \u003chttp://dbpedia.org/property/nickname\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "American Mediterranean Sea",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/American_Mediterranean_Sea",
        "seq": "20,46"
      },
      {
        "label": "Entronque de Herradura",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Entronque_de_Herradura",
        "seq": "60,82"
      }
    ],
    "id": "ba7f17bb21dc46b9979f8bffb96711ed",
    "predicate mapping": [
      {
        "label": "cities",
        "uri": "http://dbpedia.org/property/cities",
        "seq": "6,12",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "Nickname",
        "uri": "http://dbpedia.org/property/nickname",
        "seq": "51,59",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the municipality of the Brown\u0027s Corners, Toronto and also the  place of birth of the George Karrys",
    "SerialNumber": "1260",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Brown\u0027s_Corners,_Toronto\u003e \u003chttp://dbpedia.org/ontology/municipality\u003e ?uri. \u003chttp://dbpedia.org/resource/George_Karrys\u003e \u003chttp://dbpedia.org/property/placeOfBirth\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Brown\u0027s Corners, Toronto",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Brown\u0027s_Corners,_Toronto",
        "seq": "32,56"
      },
      {
        "label": "George Karrys",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/George_Karrys",
        "seq": "93,106"
      }
    ],
    "id": "7e627205a122439da56687c80907b67e",
    "predicate mapping": [
      {
        "label": "municipality",
        "uri": "http://dbpedia.org/ontology/municipality",
        "seq": "12,24",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "place of birth",
        "uri": "http://dbpedia.org/property/placeOfBirth",
        "seq": "71,85",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Did taylor swift do the theme song of The Farmer Wants a Wife?",
    "SerialNumber": "1265",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/The_Farmer_Wants_a_Wife_(Australian_TV_series)\u003e \u003chttp://dbpedia.org/property/opentheme\u003e \u003chttp://dbpedia.org/resource/Taylor_Swift\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "The Farmer Wants a Wife",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Farmer_Wants_a_Wife_(Australian_TV_series)",
        "seq": "38,61"
      },
      {
        "label": "taylor swift",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Taylor_Swift",
        "seq": "4,16"
      }
    ],
    "id": "d5b9d26028c14c77af021dfcc3cc13c2",
    "predicate mapping": [
      {
        "label": "theme",
        "uri": "http://dbpedia.org/property/opentheme",
        "seq": "24,29",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Where does the Kentucky cycle take place?",
    "SerialNumber": "1266",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/The_Kentucky_Cycle\u003e \u003chttp://dbpedia.org/property/place\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "the Kentucky cycle",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Kentucky_Cycle",
        "seq": "11,29"
      }
    ],
    "id": "2c6285f3f7ad4840802f57a3ec025f80",
    "predicate mapping": [
      {
        "label": "place",
        "uri": "http://dbpedia.org/property/place",
        "seq": "35,40",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "What currencies have been prevalent in the country whose national anthem is La Marseillaise?",
    "SerialNumber": "1268",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/anthem\u003e \u003chttp://dbpedia.org/resource/La_Marseillaise\u003e . ?x \u003chttp://dbpedia.org/ontology/currency\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "La Marseillaise",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/La_Marseillaise",
        "seq": "76,91"
      }
    ],
    "id": "a0e58ea11b974c7a85d86e9f454b77c8",
    "predicate mapping": [
      {
        "label": "national anthem",
        "uri": "http://dbpedia.org/ontology/anthem",
        "seq": "57,72",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "currencies",
        "uri": "http://dbpedia.org/ontology/currency",
        "seq": "5,15",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the college of Jon Curran ?",
    "SerialNumber": "1269",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Jon_Curran\u003e \u003chttp://dbpedia.org/property/college\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jon Curran",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Jon_Curran",
        "seq": "20,30"
      }
    ],
    "id": "b698642c0c4944baad539ca67412e78a",
    "predicate mapping": [
      {
        "label": "college",
        "uri": "http://dbpedia.org/property/college",
        "seq": "9,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which writer of A streetcar Named Desire is also the author of The Catastrophe of Success ?",
    "SerialNumber": "1275",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/A_Streetcar_Named_Desire_(play)\u003e \u003chttp://dbpedia.org/property/writer\u003e ?uri. \u003chttp://dbpedia.org/resource/The_Catastrophe_of_Success\u003e \u003chttp://dbpedia.org/ontology/author\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "A streetcar Named Desire",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/A_Streetcar_Named_Desire_(play)",
        "seq": "16,40"
      },
      {
        "label": "The Catastrophe of Success",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Catastrophe_of_Success",
        "seq": "63,89"
      }
    ],
    "id": "64cb26ab6c624d9daee385d3e86ed7c4",
    "predicate mapping": [
      {
        "label": "author",
        "uri": "http://dbpedia.org/property/writer",
        "seq": "53,59",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "author",
        "uri": "http://dbpedia.org/ontology/author",
        "seq": "53,59",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What state was Cyrus Mann born in, and has the famous Downriver ?",
    "SerialNumber": "1277",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Downriver\u003e \u003chttp://dbpedia.org/ontology/state\u003e ?uri. \u003chttp://dbpedia.org/resource/Cyrus_Mann\u003e \u003chttp://dbpedia.org/property/birthPlace\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Downriver",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Downriver",
        "seq": "54,63"
      },
      {
        "label": "Cyrus Mann",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Cyrus_Mann",
        "seq": "15,25"
      }
    ],
    "id": "9ba55398005e4e5c9354a2f73d3f4113",
    "predicate mapping": [
      {
        "label": "state",
        "uri": "http://dbpedia.org/ontology/state",
        "seq": "5,10",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "born in",
        "uri": "http://dbpedia.org/property/birthPlace",
        "seq": "26,33",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who is the appointer of William Cushing ?",
    "SerialNumber": "1278",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/William_Cushing\u003e \u003chttp://dbpedia.org/ontology/appointer\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "William Cushing",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/William_Cushing",
        "seq": "24,39"
      }
    ],
    "id": "d585bb851bb2430d9893a3976b2310bd",
    "predicate mapping": [
      {
        "label": "appointer",
        "uri": "http://dbpedia.org/ontology/appointer",
        "seq": "11,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Where is the origin of Filbert\u0027s Old Time Root Beer ?",
    "SerialNumber": "1279",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Filbert\u0027s_Old_Time_Root_Beer\u003e \u003chttp://dbpedia.org/ontology/origin\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Filbert\u0027s Old Time Root Beer",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Filbert\u0027s_Old_Time_Root_Beer",
        "seq": "23,51"
      }
    ],
    "id": "331c4b8c9a8a40a78ec70c332af7cf77",
    "predicate mapping": [
      {
        "label": "origin",
        "uri": "http://dbpedia.org/ontology/origin",
        "seq": "13,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the musical band of Written in the Stars ?",
    "SerialNumber": "1281",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Written_in_the_Stars_(Elton_John_and_LeAnn_Rimes_song)\u003e \u003chttp://dbpedia.org/ontology/musicalBand\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Written in the Stars",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Written_in_the_Stars_(Elton_John_and_LeAnn_Rimes_song)",
        "seq": "25,45"
      }
    ],
    "id": "f82d0e347f514ec1bcb41a22922ce6aa",
    "predicate mapping": [
      {
        "label": "musical band",
        "uri": "http://dbpedia.org/ontology/musicalBand",
        "seq": "9,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "102",
    "question": "Count the affiliations of International Union of Anarchists?",
    "SerialNumber": "1283",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { \u003chttp://dbpedia.org/resource/International_Union_of_Anarchists\u003e \u003chttp://dbpedia.org/property/affiliation\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "International Union of Anarchists",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/International_Union_of_Anarchists",
        "seq": "26,59"
      }
    ],
    "id": "e18fd4075a914d4a8455c72375bdd4b9",
    "predicate mapping": [
      {
        "label": "affiliation",
        "uri": "http://dbpedia.org/property/affiliation",
        "seq": "10,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Hugh Hefner is editor of which magazine?",
    "SerialNumber": "1284",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/editor\u003e \u003chttp://dbpedia.org/resource/Hugh_Hefner\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Magazine\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Hugh Hefner",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Hugh_Hefner",
        "seq": "0,11"
      }
    ],
    "id": "965fd3fdc73445e6b1bddc3d141ebb3c",
    "predicate mapping": [
      {
        "label": "editor",
        "uri": "http://dbpedia.org/property/editor",
        "seq": "15,21",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "magazine",
        "uri": "http://dbpedia.org/ontology/Magazine",
        "seq": "31,39",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Which are the previous broadcast networks of sister channels of WGBC?",
    "SerialNumber": "1285",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/WGBC_(DT2)\u003e \u003chttp://dbpedia.org/property/sisterStations\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/formerBroadcastNetwork\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "WGBC",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/WGBC_(DT2)",
        "seq": "64,68"
      }
    ],
    "id": "3bb69cb3b8634c3689b4846fcbb449cd",
    "predicate mapping": [
      {
        "label": "sister",
        "uri": "http://dbpedia.org/property/sisterStations",
        "seq": "45,51",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "broadcast",
        "uri": "http://dbpedia.org/ontology/formerBroadcastNetwork",
        "seq": "23,32",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "On which subjects does the author of the novel Thud! delve?",
    "SerialNumber": "1286",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Thud!\u003e \u003chttp://dbpedia.org/ontology/nonFictionSubject\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Thud!",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Thud!",
        "seq": "47,52"
      }
    ],
    "id": "94de863bd4184aa2a7f508889eabee26",
    "predicate mapping": [
      {
        "label": "subjects",
        "uri": "http://dbpedia.org/ontology/nonFictionSubject",
        "seq": "9,17",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Which awards have been given to the horse who sired Triplicate ?",
    "SerialNumber": "1288",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Triplicate\u003e \u003chttp://dbpedia.org/property/sire\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/honours\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Triplicate",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Triplicate",
        "seq": "52,62"
      }
    ],
    "id": "d3b2ba7427da4cfba3470565de8c8c64",
    "predicate mapping": [
      {
        "label": "sire",
        "uri": "http://dbpedia.org/property/sire",
        "seq": "46,50",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/honours",
        "seq": "6,12",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "Who is the american football player whose highschool is Ringgold High School (Pennsylvania)?",
    "SerialNumber": "1289",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/highschool\u003e \u003chttp://dbpedia.org/resource/Ringgold_High_School_(Pennsylvania)\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ringgold High School",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Ringgold_High_School_(Pennsylvania)",
        "seq": "56,76"
      }
    ],
    "id": "24e52abfafbb43d491744511cbfbfb38",
    "predicate mapping": [
      {
        "label": "highschool",
        "uri": "http://dbpedia.org/ontology/highschool",
        "seq": "42,52",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "List books authored by Miguel de Cervantes and published by Francisco de Robles ?",
    "SerialNumber": "1291",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/author\u003e \u003chttp://dbpedia.org/resource/Miguel_de_Cervantes\u003e . ?uri \u003chttp://dbpedia.org/ontology/publisher\u003e \u003chttp://dbpedia.org/resource/Francisco_de_Robles\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Book\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Miguel de Cervantes",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Miguel_de_Cervantes",
        "seq": "23,42"
      },
      {
        "label": "Francisco de Robles",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Francisco_de_Robles",
        "seq": "60,79"
      }
    ],
    "id": "dbb28edd6b1a49f384baf3d63c64a0b3",
    "predicate mapping": [
      {
        "label": "author",
        "uri": "http://dbpedia.org/property/author",
        "seq": "11,17",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "published",
        "uri": "http://dbpedia.org/ontology/publisher",
        "seq": "47,56",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "book",
        "uri": "http://dbpedia.org/ontology/Book",
        "seq": "5,9",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Is Wahoo! the previous work of Honeybuns?",
    "SerialNumber": "1293",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Honeybuns\u003e \u003chttp://dbpedia.org/ontology/previousWork\u003e \u003chttp://dbpedia.org/resource/Wahoo!\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Honeybuns",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Honeybuns",
        "seq": "31,40"
      },
      {
        "label": "Wahoo!",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Wahoo!",
        "seq": "3,9"
      }
    ],
    "id": "e4fd9eca450f4cb2ba2b2bc4f87102ad",
    "predicate mapping": [
      {
        "label": "previous work",
        "uri": "http://dbpedia.org/ontology/previousWork",
        "seq": "14,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "List the awards given to the race horses bred by Willis Sharpe Kilmer.",
    "SerialNumber": "1294",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/breeder\u003e \u003chttp://dbpedia.org/resource/Willis_Sharpe_Kilmer\u003e . ?x \u003chttp://dbpedia.org/ontology/honours\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/RaceHorse\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Willis Sharpe Kilmer",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Willis_Sharpe_Kilmer",
        "seq": "49,69"
      }
    ],
    "id": "f0e59cb06b254517af079b9825cebc6b",
    "predicate mapping": [
      {
        "label": "bred",
        "uri": "http://dbpedia.org/ontology/breeder",
        "seq": "41,45",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/honours",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "race horse",
        "uri": "http://dbpedia.org/ontology/RaceHorse",
        "seq": "29,39",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What is the constituency of the leader of Labour Party (Norway)?",
    "SerialNumber": "1295",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Labour_Party_(Norway)\u003e \u003chttp://dbpedia.org/property/leader\u003e ?x . ?x \u003chttp://dbpedia.org/property/constituency\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Labour Party (Norway)",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Labour_Party_(Norway)",
        "seq": "42,63"
      }
    ],
    "id": "2ba0e19e73f04f15b8858aec5e4e7bd7",
    "predicate mapping": [
      {
        "label": "leader",
        "uri": "http://dbpedia.org/property/leader",
        "seq": "32,38",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "constituency",
        "uri": "http://dbpedia.org/property/constituency",
        "seq": "12,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "311",
    "question": "List the tomb of the royalties whose burial place is Little Easton ?",
    "SerialNumber": "1296",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/placeOfBurial\u003e \u003chttp://dbpedia.org/resource/Little_Easton\u003e . ?x \u003chttp://dbpedia.org/property/placeOfBurial\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Royalty\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Little Easton",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Little_Easton",
        "seq": "53,66"
      }
    ],
    "id": "d7c5b09663594b8d9849e4b0a4561068",
    "predicate mapping": [
      {
        "label": "burial place",
        "uri": "http://dbpedia.org/property/placeOfBurial",
        "seq": "37,49",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "burial place",
        "uri": "http://dbpedia.org/property/placeOfBurial",
        "seq": "37,49",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "royalties",
        "uri": "http://dbpedia.org/ontology/Royalty",
        "seq": "21,30",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "The players born in Bellaire, Ohio have played for which team?",
    "SerialNumber": "1297",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/birthPlace\u003e \u003chttp://dbpedia.org/resource/Bellaire,_Ohio\u003e . ?x \u003chttp://dbpedia.org/ontology/team\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Bellaire, Ohio",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Bellaire,_Ohio",
        "seq": "20,34"
      }
    ],
    "id": "0a6db2441bd741369578947633c0ff1f",
    "predicate mapping": [
      {
        "label": "born in",
        "uri": "http://dbpedia.org/ontology/birthPlace",
        "seq": "12,19",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "played for",
        "uri": "http://dbpedia.org/ontology/team",
        "seq": "40,50",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What are the television shows whose voices is given by  Mona Marshall?",
    "SerialNumber": "1299",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/voices\u003e \u003chttp://dbpedia.org/resource/Mona_Marshall\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Mona Marshall",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Mona_Marshall",
        "seq": "56,69"
      }
    ],
    "id": "715cd1e1ff8d43868e231fe93c6699c9",
    "predicate mapping": [
      {
        "label": "voices",
        "uri": "http://dbpedia.org/property/voices",
        "seq": "36,42",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "13,28",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Is Frontaccounting licensed under GNU license?",
    "SerialNumber": "1302",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Frontaccounting\u003e \u003chttp://dbpedia.org/ontology/license\u003e \u003chttp://dbpedia.org/resource/GNU\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Frontaccounting",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Frontaccounting",
        "seq": "3,18"
      },
      {
        "label": "GNU",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/GNU",
        "seq": "34,37"
      }
    ],
    "id": "479e2179c3784c05b660e355e8236391",
    "predicate mapping": [
      {
        "label": "license",
        "uri": "http://dbpedia.org/ontology/license",
        "seq": "19,26",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "What sports are played by school which owns Fr. Agnel Stadium ?",
    "SerialNumber": "1305",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Fr._Agnel_Stadium\u003e \u003chttp://dbpedia.org/property/owner\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/sport\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/School\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Fr. Agnel Stadium",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Fr._Agnel_Stadium",
        "seq": "44,61"
      }
    ],
    "id": "f6c5c6f3ecd14071b9bfc93098fb994e",
    "predicate mapping": [
      {
        "label": "owns",
        "uri": "http://dbpedia.org/property/owner",
        "seq": "39,43",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "sport",
        "uri": "http://dbpedia.org/ontology/sport",
        "seq": "5,10",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "school",
        "uri": "http://dbpedia.org/ontology/School",
        "seq": "26,32",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "Which things have been made by artists who died in Midhurst?",
    "SerialNumber": "1306",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/deathPlace\u003e \u003chttp://dbpedia.org/resource/Midhurst\u003e . ?uri \u003chttp://dbpedia.org/ontology/creator\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Midhurst",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Midhurst",
        "seq": "51,59"
      }
    ],
    "id": "b3e252172359437c9a8de2e762ad5ce7",
    "predicate mapping": [
      {
        "label": "died in",
        "uri": "http://dbpedia.org/ontology/deathPlace",
        "seq": "43,50",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "artists",
        "uri": "http://dbpedia.org/ontology/creator",
        "seq": "31,38",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the Location of the Peetz Table Wind Energy Center which is also the state of Ben Nighthorse Campbell ?",
    "SerialNumber": "1307",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Peetz_Table_Wind_Energy_Center\u003e \u003chttp://dbpedia.org/property/location\u003e ?uri. \u003chttp://dbpedia.org/resource/Ben_Nighthorse_Campbell\u003e \u003chttp://dbpedia.org/property/state\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Peetz Table Wind Energy Center",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Peetz_Table_Wind_Energy_Center",
        "seq": "28,58"
      },
      {
        "label": "Ben Nighthorse Campbell",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Ben_Nighthorse_Campbell",
        "seq": "86,109"
      }
    ],
    "id": "5b3a93c4212a454bb5186485623329c7",
    "predicate mapping": [
      {
        "label": "Location",
        "uri": "http://dbpedia.org/property/location",
        "seq": "12,20",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "state",
        "uri": "http://dbpedia.org/property/state",
        "seq": "77,82",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the citizenship of the Sarah Kazemy and land of the Cervelle de canut",
    "SerialNumber": "1308",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Sarah_Kazemy\u003e \u003chttp://dbpedia.org/ontology/citizenship\u003e ?uri. \u003chttp://dbpedia.org/resource/Cervelle_de_canut\u003e \u003chttp://dbpedia.org/ontology/country\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Sarah Kazemy",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Sarah_Kazemy",
        "seq": "31,43"
      },
      {
        "label": "Cervelle de canut",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Cervelle_de_canut",
        "seq": "60,77"
      }
    ],
    "id": "3b8e4f3b8b154b09b5afa7f034e6aa1f",
    "predicate mapping": [
      {
        "label": "citizenship",
        "uri": "http://dbpedia.org/ontology/citizenship",
        "seq": "12,23",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "land",
        "uri": "http://dbpedia.org/ontology/country",
        "seq": "48,52",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "From which team did Marv McFadden played ?",
    "SerialNumber": "1309",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Marv_McFadden\u003e \u003chttp://dbpedia.org/property/pastteams\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Marv McFadden",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Marv_McFadden",
        "seq": "20,33"
      }
    ],
    "id": "e2c86da7511a495c8e6a199690371c48",
    "predicate mapping": [
      {
        "label": "team",
        "uri": "http://dbpedia.org/property/pastteams",
        "seq": "11,15",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the draft team of Bob MacMillan ?",
    "SerialNumber": "1314",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Bob_MacMillan\u003e \u003chttp://dbpedia.org/property/draftTeam\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Bob MacMillan",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Bob_MacMillan",
        "seq": "26,39"
      }
    ],
    "id": "d527f6cf049c4bd29df7ab1f81a69de8",
    "predicate mapping": [
      {
        "label": "draft team",
        "uri": "http://dbpedia.org/property/draftTeam",
        "seq": "12,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "111",
    "question": "How many other home stadium are there of the soccer club whose home stadium is Luzhniki Stadium ?",
    "SerialNumber": "1315",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/homeStadium\u003e \u003chttp://dbpedia.org/resource/Luzhniki_Stadium\u003e . ?x \u003chttp://dbpedia.org/ontology/homeStadium\u003e ?uri }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Luzhniki Stadium",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Luzhniki_Stadium",
        "seq": "79,95"
      }
    ],
    "id": "0261cb6df27c42bea175c81ec1b62f5c",
    "predicate mapping": [
      {
        "label": "home stadium",
        "uri": "http://dbpedia.org/ontology/homeStadium",
        "seq": "15,27",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "home stadium",
        "uri": "http://dbpedia.org/ontology/homeStadium",
        "seq": "15,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "List the races of Fergie Sutherland?",
    "SerialNumber": "1317",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Fergie_Sutherland\u003e \u003chttp://dbpedia.org/property/race\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Fergie Sutherland",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Fergie_Sutherland",
        "seq": "18,35"
      }
    ],
    "id": "122b26f0029248c683b600712a408383",
    "predicate mapping": [
      {
        "label": "race",
        "uri": "http://dbpedia.org/property/race",
        "seq": "9,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Where is the  assembly of Caterpillar 797 ?",
    "SerialNumber": "1318",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Caterpillar_797\u003e \u003chttp://dbpedia.org/ontology/assembly\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Caterpillar 797 ",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Caterpillar_797",
        "seq": "26,42"
      }
    ],
    "id": "619c994eb3cd4bbfb7925d970b1f3ad9",
    "predicate mapping": [
      {
        "label": "assembly",
        "uri": "http://dbpedia.org/ontology/assembly",
        "seq": "14,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Which things are Breann McGregor known for ?",
    "SerialNumber": "1320",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Breann_McGregor\u003e \u003chttp://dbpedia.org/property/knownFor\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Breann McGregor",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Breann_McGregor",
        "seq": "17,32"
      }
    ],
    "id": "4423f1c8b04e4c438c50790d4c60c722",
    "predicate mapping": [
      {
        "label": "known for",
        "uri": "http://dbpedia.org/property/knownFor",
        "seq": "33,42",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who is the Pole driver of 1992 Canadian Grand Prix ?",
    "SerialNumber": "1321",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/1992_Canadian_Grand_Prix\u003e \u003chttp://dbpedia.org/property/poleDriver\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "1992 Canadian Grand Prix",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/1992_Canadian_Grand_Prix",
        "seq": "26,50"
      }
    ],
    "id": "ec13e17ac45d4c1a8e774331d113e8cd",
    "predicate mapping": [
      {
        "label": "Pole driver",
        "uri": "http://dbpedia.org/property/poleDriver",
        "seq": "11,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Sentinel High School  team is known as ?",
    "SerialNumber": "1323",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Sentinel_High_School\u003e \u003chttp://dbpedia.org/property/teamName\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Sentinel High School",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Sentinel_High_School",
        "seq": "0,20"
      }
    ],
    "id": "962450920a5d4789866bb953d15deaa4",
    "predicate mapping": [
      {
        "label": "team",
        "uri": "http://dbpedia.org/property/teamName",
        "seq": "22,26",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "406",
    "question": "How many shows belong to the networks one of whose sister station is BBC News?",
    "SerialNumber": "1328",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/sisterNames\u003e \u003chttp://dbpedia.org/resource/BBC_News_(TV_channel)\u003e . ?uri \u003chttp://dbpedia.org/ontology/network\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "BBC News",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/BBC_News_(TV_channel)",
        "seq": "69,77"
      }
    ],
    "id": "43d606c2a68b425aa232aff1c3428a37",
    "predicate mapping": [
      {
        "label": "sister",
        "uri": "http://dbpedia.org/property/sisterNames",
        "seq": "51,57",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "network",
        "uri": "http://dbpedia.org/ontology/network",
        "seq": "29,36",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "9,14",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What are some shareholders of the bridge maintained by the Massachusetts department of transportation?",
    "SerialNumber": "1329",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/maintainedBy\u003e \u003chttp://dbpedia.org/resource/Massachusetts_Department_of_Transportation\u003e . ?x \u003chttp://dbpedia.org/property/owner\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Bridge\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Massachusetts department of transportation",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Massachusetts_Department_of_Transportation",
        "seq": "59,101"
      }
    ],
    "id": "a29f93a5bc72413887c3844c5ebf8e76",
    "predicate mapping": [
      {
        "label": "maintained by",
        "uri": "http://dbpedia.org/ontology/maintainedBy",
        "seq": "41,54",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "shareholders",
        "uri": "http://dbpedia.org/property/owner",
        "seq": "14,26",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "bridge",
        "uri": "http://dbpedia.org/ontology/Bridge",
        "seq": "34,40",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which creator of Theme Time Radio Hour has also given the  musical score of the The Times They Are a-Changin\u0027 (musical)?",
    "SerialNumber": "1331",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Theme_Time_Radio_Hour\u003e \u003chttp://dbpedia.org/property/creator\u003e ?uri. \u003chttp://dbpedia.org/resource/The_Times_They_Are_a-Changin\u0027_(musical)\u003e \u003chttp://dbpedia.org/ontology/musicBy\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Theme Time Radio Hour",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Theme_Time_Radio_Hour",
        "seq": "17,38"
      },
      {
        "label": "The Times They Are a-Changin\u0027 (musical)",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Times_They_Are_a-Changin\u0027_(musical)",
        "seq": "80,119"
      }
    ],
    "id": "abb80d23ef834a749f6d227acc81e758",
    "predicate mapping": [
      {
        "label": "creator",
        "uri": "http://dbpedia.org/property/creator",
        "seq": "6,13",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "musical",
        "uri": "http://dbpedia.org/ontology/musicBy",
        "seq": "59,66",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Alexander Magleby, a rugby player is alma mater to which university?",
    "SerialNumber": "1332",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Alexander_Magleby\u003e \u003chttp://dbpedia.org/property/university\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Alexander Magleby",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Alexander_Magleby",
        "seq": "0,17"
      }
    ],
    "id": "d2698d17b3fc4da3b3a659d38d722a13",
    "predicate mapping": [
      {
        "label": "university",
        "uri": "http://dbpedia.org/property/university",
        "seq": "57,67",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Among the universities having Gyrfalcon as mascot which have Michelle D. Johnson as superintendent ? ",
    "SerialNumber": "1335",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/superintendent\u003e \u003chttp://dbpedia.org/resource/Michelle_D._Johnson\u003e . ?uri \u003chttp://dbpedia.org/property/mascot\u003e \u003chttp://dbpedia.org/resource/Gyrfalcon\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/University\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Michelle D. Johnson",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Michelle_D._Johnson",
        "seq": "61,80"
      },
      {
        "label": "Gyrfalcon",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Gyrfalcon",
        "seq": "30,39"
      }
    ],
    "id": "8b493628c6cb47dcaa54dfa91d17f425",
    "predicate mapping": [
      {
        "label": "superintendent",
        "uri": "http://dbpedia.org/property/superintendent",
        "seq": "84,98",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "mascot",
        "uri": "http://dbpedia.org/property/mascot",
        "seq": "43,49",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "universities",
        "uri": "http://dbpedia.org/ontology/University",
        "seq": "10,22",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "7",
    "question": "Whose opponents are Ike Clanton and Billy Clanton?",
    "SerialNumber": "1336",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/ontology/opponent\u003e \u003chttp://dbpedia.org/resource/Ike_Clanton\u003e . ?uri \u003chttp://dbpedia.org/ontology/opponent\u003e \u003chttp://dbpedia.org/resource/Billy_Clanton\u003e . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ike Clanton",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Ike_Clanton",
        "seq": "20,31"
      },
      {
        "label": "Billy Clanton",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Billy_Clanton",
        "seq": "36,49"
      }
    ],
    "id": "f155833272af4760ab962b2c4a75ea1f",
    "predicate mapping": [
      {
        "label": "opponent",
        "uri": "http://dbpedia.org/ontology/opponent",
        "seq": "6,14",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "opponent",
        "uri": "http://dbpedia.org/ontology/opponent",
        "seq": "6,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "To which religion does the commander of South Thailand insurgency belong?",
    "SerialNumber": "1339",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/South_Thailand_insurgency\u003e \u003chttp://dbpedia.org/ontology/commander\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/religion\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "South Thailand insurgency",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/South_Thailand_insurgency",
        "seq": "40,65"
      }
    ],
    "id": "25d1a97101e943698160921c3f0bb7cc",
    "predicate mapping": [
      {
        "label": "commander",
        "uri": "http://dbpedia.org/ontology/commander",
        "seq": "27,36",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion",
        "seq": "9,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the parent company of Edsel?",
    "SerialNumber": "1340",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Edsel\u003e \u003chttp://dbpedia.org/property/parent\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Edsel",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Edsel",
        "seq": "30,35"
      }
    ],
    "id": "7e8d0703ae84488c9069607df8d097d6",
    "predicate mapping": [
      {
        "label": "parent",
        "uri": "http://dbpedia.org/property/parent",
        "seq": "12,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "106",
    "question": "Give me a count of everything owned by the network whose sister name is The CW?",
    "SerialNumber": "1341",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/sisterNames\u003e \u003chttp://dbpedia.org/resource/The_CW\u003e . ?uri \u003chttp://dbpedia.org/property/network\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "The CW",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/The_CW",
        "seq": "72,78"
      }
    ],
    "id": "921e9607ab704a2293e0d3c7a2e6dbe3",
    "predicate mapping": [
      {
        "label": "sister name",
        "uri": "http://dbpedia.org/property/sisterNames",
        "seq": "57,68",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "network",
        "uri": "http://dbpedia.org/property/network",
        "seq": "43,50",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "In which state does the valley bordering the Modoc plateau lie?",
    "SerialNumber": "1342",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/border\u003e \u003chttp://dbpedia.org/resource/Modoc_Plateau\u003e . ?x \u003chttp://dbpedia.org/ontology/state\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Valley\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Modoc plateau",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Modoc_Plateau",
        "seq": "45,58"
      }
    ],
    "id": "b0daa7f219de4127802c163ea4d7b308",
    "predicate mapping": [
      {
        "label": "border",
        "uri": "http://dbpedia.org/property/border",
        "seq": "31,37",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "state",
        "uri": "http://dbpedia.org/ontology/state",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "valley",
        "uri": "http://dbpedia.org/ontology/Valley",
        "seq": "24,30",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Name the common alma mater of the Henry Morton Dexter and Jack McGregor",
    "SerialNumber": "1343",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Henry_Morton_Dexter\u003e \u003chttp://dbpedia.org/ontology/education\u003e ?uri. \u003chttp://dbpedia.org/resource/Jack_McGregor\u003e \u003chttp://dbpedia.org/ontology/education\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Henry Morton Dexter",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Henry_Morton_Dexter",
        "seq": "34,53"
      },
      {
        "label": "Jack McGregor",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Jack_McGregor",
        "seq": "58,71"
      }
    ],
    "id": "af78d170c10743f2b8c2008336992a65",
    "predicate mapping": [
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/ontology/education",
        "seq": "16,26",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/ontology/education",
        "seq": "16,26",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which famous writer was married to Jill Krementz and had a son named Edith Vonnegut ?",
    "SerialNumber": "1344",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/spouse\u003e \u003chttp://dbpedia.org/resource/Jill_Krementz\u003e . ?uri \u003chttp://dbpedia.org/ontology/child\u003e \u003chttp://dbpedia.org/resource/Edith_Vonnegut\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Writer\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jill Krementz",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Jill_Krementz",
        "seq": "35,48"
      },
      {
        "label": "Edith Vonnegut",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Edith_Vonnegut",
        "seq": "69,83"
      }
    ],
    "id": "e2c84e16da1c4ada900d8e9932d4c088",
    "predicate mapping": [
      {
        "label": "married to",
        "uri": "http://dbpedia.org/ontology/spouse",
        "seq": "24,34",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "son",
        "uri": "http://dbpedia.org/ontology/child",
        "seq": "59,62",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "writer",
        "uri": "http://dbpedia.org/ontology/Writer",
        "seq": "13,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Which are the races in which Martin Molony participated?",
    "SerialNumber": "1346",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Martin_Molony\u003e \u003chttp://dbpedia.org/ontology/race\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Martin Molony",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Martin_Molony",
        "seq": "29,42"
      }
    ],
    "id": "f04e2e9f5e1246b7a8494b970c269e6c",
    "predicate mapping": [
      {
        "label": "race",
        "uri": "http://dbpedia.org/ontology/race",
        "seq": "14,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "What is the main common interests of the Philip Novak and Timothy Morton?",
    "SerialNumber": "1347",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Philip_Novak\u003e \u003chttp://dbpedia.org/property/mainInterests\u003e ?uri. \u003chttp://dbpedia.org/resource/Timothy_Morton\u003e \u003chttp://dbpedia.org/property/mainInterests\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Philip Novak",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Philip_Novak",
        "seq": "41,53"
      },
      {
        "label": "Timothy Morton",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Timothy_Morton",
        "seq": "58,72"
      }
    ],
    "id": "cc91a807569c4c39bd0a00e68053d9c9",
    "predicate mapping": [
      {
        "label": "interests main",
        "uri": "http://dbpedia.org/property/mainInterests",
        "seq": "-1,13",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "interests main",
        "uri": "http://dbpedia.org/property/mainInterests",
        "seq": "-1,13",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "307",
    "question": "What is the company which has Raymond Conner and Dennis Muilenburg as key person?",
    "SerialNumber": "1351",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/property/keyPeople\u003e \u003chttp://dbpedia.org/resource/Raymond_Conner\u003e . ?uri \u003chttp://dbpedia.org/property/keyPeople\u003e \u003chttp://dbpedia.org/resource/Dennis_Muilenburg\u003e . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Company\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Raymond Conner",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Raymond_Conner",
        "seq": "30,44"
      },
      {
        "label": "Dennis Muilenburg",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Dennis_Muilenburg",
        "seq": "49,66"
      }
    ],
    "id": "fe375b78109c42628cbc2ce69704bc5b",
    "predicate mapping": [
      {
        "label": "key",
        "uri": "http://dbpedia.org/property/keyPeople",
        "seq": "70,73",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "key",
        "uri": "http://dbpedia.org/property/keyPeople",
        "seq": "70,73",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company",
        "seq": "12,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the field of the Jon Speelman and occupation of the Karen Grigorian?",
    "SerialNumber": "1352",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Jon_Speelman\u003e \u003chttp://dbpedia.org/ontology/field\u003e ?uri. \u003chttp://dbpedia.org/resource/Karen_Grigorian\u003e \u003chttp://dbpedia.org/ontology/occupation\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jon Speelman",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Jon_Speelman",
        "seq": "25,37"
      },
      {
        "label": "Karen Grigorian",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Karen_Grigorian",
        "seq": "60,75"
      }
    ],
    "id": "7ba861cb0c5447b79cb878b421cf1113",
    "predicate mapping": [
      {
        "label": "field",
        "uri": "http://dbpedia.org/ontology/field",
        "seq": "12,17",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "occupation",
        "uri": "http://dbpedia.org/ontology/occupation",
        "seq": "42,52",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "List the maintainers of Pandaruan Bridge?",
    "SerialNumber": "1353",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Pandaruan_Bridge\u003e \u003chttp://dbpedia.org/ontology/maintainedBy\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Pandaruan Bridge",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Pandaruan_Bridge",
        "seq": "24,40"
      }
    ],
    "id": "ddf2a44585b34de3afaf20021f33a330",
    "predicate mapping": [
      {
        "label": "maintainer",
        "uri": "http://dbpedia.org/ontology/maintainedBy",
        "seq": "9,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the river with source country in Zambia and source region as North-Western Province, Zambia?",
    "SerialNumber": "1354",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/sourceCountry\u003e \u003chttp://dbpedia.org/resource/Zambia\u003e . ?uri \u003chttp://dbpedia.org/ontology/sourceRegion\u003e \u003chttp://dbpedia.org/resource/North-Western_Province,_Zambia\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/River\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Zambia",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Zambia",
        "seq": "38,44"
      },
      {
        "label": "North-Western Province, Zambia",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/North-Western_Province,_Zambia",
        "seq": "66,96"
      }
    ],
    "id": "28ef4e7c24d544d1b9c35db869e032b0",
    "predicate mapping": [
      {
        "label": "source country",
        "uri": "http://dbpedia.org/ontology/sourceCountry",
        "seq": "20,34",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "source region",
        "uri": "http://dbpedia.org/ontology/sourceRegion",
        "seq": "49,62",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who were the producers of the tenderfoot?",
    "SerialNumber": "1355",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/The_Tenderfoot_(miniseries)\u003e \u003chttp://dbpedia.org/ontology/producer\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "the tenderfoot",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Tenderfoot_(miniseries)",
        "seq": "26,40"
      }
    ],
    "id": "42e685f396ad4d289d05e57d384f0b3c",
    "predicate mapping": [
      {
        "label": "producer",
        "uri": "http://dbpedia.org/ontology/producer",
        "seq": "13,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Is coffee a main ingredient of Hopje?",
    "SerialNumber": "1357",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Hopje\u003e \u003chttp://dbpedia.org/property/mainIngredient\u003e \u003chttp://dbpedia.org/resource/Coffee\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Hopje",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Hopje",
        "seq": "31,36"
      },
      {
        "label": "coffee",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Coffee",
        "seq": "3,9"
      }
    ],
    "id": "751a7482320c4deb949864158d4b16b9",
    "predicate mapping": [
      {
        "label": "main ingredient",
        "uri": "http://dbpedia.org/property/mainIngredient",
        "seq": "12,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "7",
    "question": "Who has Saint Joseph and Mary as parents ?",
    "SerialNumber": "1358",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/ontology/parent\u003e \u003chttp://dbpedia.org/resource/Saint_Joseph\u003e . ?uri \u003chttp://dbpedia.org/ontology/parent\u003e \u003chttp://dbpedia.org/resource/Mary_(mother_of_Jesus)\u003e . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Saint Joseph",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Saint_Joseph",
        "seq": "8,20"
      },
      {
        "label": "Mary",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Mary_(mother_of_Jesus)",
        "seq": "25,29"
      }
    ],
    "id": "a62ce2cfa64b4b0fb7f2e17ba58b43d1",
    "predicate mapping": [
      {
        "label": "parent",
        "uri": "http://dbpedia.org/ontology/parent",
        "seq": "33,39",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "parent",
        "uri": "http://dbpedia.org/ontology/parent",
        "seq": "33,39",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "List the products of the company which published Tweenies: Game Time.",
    "SerialNumber": "1359",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Tweenies:_Game_Time\u003e \u003chttp://dbpedia.org/property/publisher\u003e ?x . ?x \u003chttp://dbpedia.org/property/products\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Tweenies: Game Time",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Tweenies:_Game_Time",
        "seq": "49,68"
      }
    ],
    "id": "af164ec109cc41a8895ca7011ca62c3f",
    "predicate mapping": [
      {
        "label": "published",
        "uri": "http://dbpedia.org/property/publisher",
        "seq": "39,48",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "products",
        "uri": "http://dbpedia.org/property/products",
        "seq": "9,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "Which engine\u0027s successor\u0027s predecessor is BMW M10?",
    "SerialNumber": "1361",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/predecessor\u003e \u003chttp://dbpedia.org/resource/BMW_M10\u003e . ?uri \u003chttp://dbpedia.org/ontology/successor\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Engine\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "BMW M10",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/BMW_M10",
        "seq": "42,49"
      }
    ],
    "id": "e68e190c5fea42bd9d7b2f106c0299e4",
    "predicate mapping": [
      {
        "label": "predecessor",
        "uri": "http://dbpedia.org/ontology/predecessor",
        "seq": "27,38",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "successor",
        "uri": "http://dbpedia.org/ontology/successor",
        "seq": "15,24",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "engine",
        "uri": "http://dbpedia.org/ontology/Engine",
        "seq": "6,12",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Which person\u0027s successor is Samsu-iluna?",
    "SerialNumber": "1362",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/successor\u003e \u003chttp://dbpedia.org/resource/Samsu-iluna\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Samsu-iluna",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Samsu-iluna",
        "seq": "28,39"
      }
    ],
    "id": "e52a7b93b92f4a908fbe6e753ea32d89",
    "predicate mapping": [
      {
        "label": "successor",
        "uri": "http://dbpedia.org/ontology/successor",
        "seq": "15,24",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/Person",
        "seq": "6,12",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "To which region does the Miluk language belong?",
    "SerialNumber": "1363",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Miluk_language\u003e \u003chttp://dbpedia.org/property/region\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Miluk language",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Miluk_language",
        "seq": "25,39"
      }
    ],
    "id": "87210ff3e55b4299a32d89b85345d93f",
    "predicate mapping": [
      {
        "label": "region",
        "uri": "http://dbpedia.org/property/region",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Name a person who was educated in Humes High School ?",
    "SerialNumber": "1368",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/education\u003e \u003chttp://dbpedia.org/resource/Humes_High_School\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Humes High School",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Humes_High_School",
        "seq": "34,51"
      }
    ],
    "id": "0f1a0373eac342828313fec23a869b83",
    "predicate mapping": [
      {
        "label": "edu",
        "uri": "http://dbpedia.org/ontology/education",
        "seq": "22,25",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/Person",
        "seq": "7,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "List the awards won by the writer of Face to Face ?",
    "SerialNumber": "1371",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Face_to_Face_(1976_film)\u003e \u003chttp://dbpedia.org/property/writer\u003e ?x . ?x \u003chttp://dbpedia.org/property/awards\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Face to Face",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Face_to_Face_(1976_film)",
        "seq": "37,49"
      }
    ],
    "id": "ce0cda33ee3e45b0b88aae26a2908f48",
    "predicate mapping": [
      {
        "label": "writer",
        "uri": "http://dbpedia.org/property/writer",
        "seq": "27,33",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Does the Sicklefin lemon shark belong in the animal kingdom?",
    "SerialNumber": "1373",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Sicklefin_lemon_shark\u003e \u003chttp://dbpedia.org/ontology/kingdom\u003e \u003chttp://dbpedia.org/resource/Animal\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Sicklefin lemon shark",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Sicklefin_lemon_shark",
        "seq": "9,30"
      },
      {
        "label": "animal",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Animal",
        "seq": "45,51"
      }
    ],
    "id": "0a010b343f2b41da91c743a12b3a47a0",
    "predicate mapping": [
      {
        "label": "kingdom",
        "uri": "http://dbpedia.org/ontology/kingdom",
        "seq": "52,59",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the local authority of Liverpool Institute High School for Boys ?",
    "SerialNumber": "1374",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Liverpool_Institute_High_School_for_Boys\u003e \u003chttp://dbpedia.org/ontology/localAuthority\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Liverpool Institute High School",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Liverpool_Institute_High_School_for_Boys",
        "seq": "31,62"
      }
    ],
    "id": "91921f98a78148b1b74c79a5bd598e40",
    "predicate mapping": [
      {
        "label": "local authority",
        "uri": "http://dbpedia.org/ontology/localAuthority",
        "seq": "12,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "What is the place of birth of the Kira Plastinina and Sergey Ryazansky",
    "SerialNumber": "1375",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Kira_Plastinina\u003e \u003chttp://dbpedia.org/property/placeOfBirth\u003e ?uri. \u003chttp://dbpedia.org/resource/Sergey_Ryazansky\u003e \u003chttp://dbpedia.org/property/placeOfBirth\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Kira Plastinina",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Kira_Plastinina",
        "seq": "34,49"
      },
      {
        "label": "Sergey Ryazansky",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Sergey_Ryazansky",
        "seq": "54,70"
      }
    ],
    "id": "8a98295e35f9472fbc9b9d7ebb99de74",
    "predicate mapping": [
      {
        "label": "place of birth",
        "uri": "http://dbpedia.org/property/placeOfBirth",
        "seq": "12,26",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "place of birth",
        "uri": "http://dbpedia.org/property/placeOfBirth",
        "seq": "12,26",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Give me the places where people who worked in Church of England died in ?",
    "SerialNumber": "1377",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/occupation\u003e \u003chttp://dbpedia.org/resource/Church_of_England\u003e . ?x \u003chttp://dbpedia.org/ontology/deathPlace\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Church of England",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Church_of_England",
        "seq": "46,63"
      }
    ],
    "id": "3f4b72d7662b4caa82f1760f020528db",
    "predicate mapping": [
      {
        "label": "work",
        "uri": "http://dbpedia.org/ontology/occupation",
        "seq": "36,40",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "died in",
        "uri": "http://dbpedia.org/ontology/deathPlace",
        "seq": "64,71",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "7",
    "question": "What belongs to the families of Buccinidae and Buccinoidea?",
    "SerialNumber": "1379",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/ontology/family\u003e \u003chttp://dbpedia.org/resource/Buccinidae\u003e . ?uri \u003chttp://dbpedia.org/ontology/family\u003e \u003chttp://dbpedia.org/resource/Buccinoidea\u003e . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Buccinidae",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Buccinidae",
        "seq": "32,42"
      },
      {
        "label": "Buccinoidea",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Buccinoidea",
        "seq": "47,58"
      }
    ],
    "id": "ff112c068fe348d99bc382783bc5554f",
    "predicate mapping": [
      {
        "label": "families",
        "uri": "http://dbpedia.org/ontology/family",
        "seq": "20,28",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "families",
        "uri": "http://dbpedia.org/ontology/family",
        "seq": "20,28",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "List down all notable works of Neil Cross ?",
    "SerialNumber": "1381",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Neil_Cross\u003e \u003chttp://dbpedia.org/ontology/notableWork\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Neil Cross",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Neil_Cross",
        "seq": "31,41"
      }
    ],
    "id": "89de2e9950be4d148cceb0f13606223d",
    "predicate mapping": [
      {
        "label": "notable work",
        "uri": "http://dbpedia.org/ontology/notableWork",
        "seq": "14,26",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What is the largest city of the country which have an assembly of Plymouth Savoy?",
    "SerialNumber": "1382",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Plymouth_Savoy\u003e \u003chttp://dbpedia.org/ontology/assembly\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/largestCity\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Plymouth Savoy",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Plymouth_Savoy",
        "seq": "66,80"
      }
    ],
    "id": "10540b9b82364f5eb00957a38632eca3",
    "predicate mapping": [
      {
        "label": "assembly",
        "uri": "http://dbpedia.org/ontology/assembly",
        "seq": "54,62",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "largest city",
        "uri": "http://dbpedia.org/ontology/largestCity",
        "seq": "12,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Does nintendo have a division called Nintendo Entertainment Planning \u0026 Development?",
    "SerialNumber": "1383",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Nintendo\u003e \u003chttp://dbpedia.org/property/divisions\u003e \u003chttp://dbpedia.org/resource/Nintendo_Entertainment_Planning_\u0026_Development\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "nintendo",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Nintendo",
        "seq": "37,82"
      },
      {
        "label": "Nintendo Entertainment Planning \u0026 Development",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Nintendo_Entertainment_Planning_\u0026_Development",
        "seq": "37,82"
      }
    ],
    "id": "f6ce613bfafa488daaf3caf27629399b",
    "predicate mapping": [
      {
        "label": "division",
        "uri": "http://dbpedia.org/property/divisions",
        "seq": "21,29",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Is Queen Latifah the narrator of Arctic Tale?",
    "SerialNumber": "1388",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Arctic_Tale\u003e \u003chttp://dbpedia.org/property/narrator\u003e \u003chttp://dbpedia.org/resource/Queen_Latifah\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Arctic Tale",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Arctic_Tale",
        "seq": "33,44"
      },
      {
        "label": "Queen Latifah",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Queen_Latifah",
        "seq": "3,16"
      }
    ],
    "id": "34eed5d543524bd6a5872d93bf79d3e7",
    "predicate mapping": [
      {
        "label": "narrator",
        "uri": "http://dbpedia.org/property/narrator",
        "seq": "21,29",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "311",
    "question": "List the major shrines of the saints whose one of the shrine is St. Takla Haymanot\u0027s Church ?",
    "SerialNumber": "1391",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/majorShrine\u003e \u003chttp://dbpedia.org/resource/St._Takla_Haymanot\u0027s_Church_(Alexandria)\u003e . ?x \u003chttp://dbpedia.org/ontology/majorShrine\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Saint\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "St. Takla Haymanot\u0027s Church",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/St._Takla_Haymanot\u0027s_Church_(Alexandria)",
        "seq": "64,91"
      }
    ],
    "id": "17b4a249affa4dde85cdeb1693177725",
    "predicate mapping": [
      {
        "label": "major shrine",
        "uri": "http://dbpedia.org/property/majorShrine",
        "seq": "9,21",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "major shrine",
        "uri": "http://dbpedia.org/ontology/majorShrine",
        "seq": "9,21",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "saint",
        "uri": "http://dbpedia.org/ontology/Saint",
        "seq": "30,35",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "401",
    "question": "How many companies were founded in Dallas?",
    "SerialNumber": "1392",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/property/foundation\u003e \u003chttp://dbpedia.org/resource/Dallas\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Company\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Dallas",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Dallas",
        "seq": "35,41"
      }
    ],
    "id": "da03ed79bd2448b49214a557bd180b57",
    "predicate mapping": [
      {
        "label": "founded",
        "uri": "http://dbpedia.org/property/foundation",
        "seq": "24,31",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "companies",
        "uri": "http://dbpedia.org/ontology/Company",
        "seq": "9,18",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What are the mammals whose phylum is Chordate?",
    "SerialNumber": "1393",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/phylum\u003e \u003chttp://dbpedia.org/resource/Chordate\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Mammal\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Chordate",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Chordate",
        "seq": "37,45"
      }
    ],
    "id": "b4b08639276b4e5f8db54327fc6c012f",
    "predicate mapping": [
      {
        "label": "phylum",
        "uri": "http://dbpedia.org/ontology/phylum",
        "seq": "27,33",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "mammal",
        "uri": "http://dbpedia.org/ontology/Mammal",
        "seq": "13,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the denomination of S. H. Kapadia ?",
    "SerialNumber": "1394",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/S._H._Kapadia\u003e \u003chttp://dbpedia.org/property/religion\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "S. H. Kapadia",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/S._H._Kapadia",
        "seq": "28,41"
      }
    ],
    "id": "3c8fdf37975f4f08945c5542bcc97d93",
    "predicate mapping": [
      {
        "label": "denomination",
        "uri": "http://dbpedia.org/property/religion",
        "seq": "12,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "Charles Willing Byrd was the governor under which politician?",
    "SerialNumber": "1396",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/governor\u003e \u003chttp://dbpedia.org/resource/Charles_Willing_Byrd\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Charles Willing Byrd",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Charles_Willing_Byrd",
        "seq": "0,20"
      }
    ],
    "id": "b4072b20f7fa40d7b0fe48885dca9d53",
    "predicate mapping": [
      {
        "label": "governor",
        "uri": "http://dbpedia.org/property/governor",
        "seq": "29,37",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Who is the maker of the engine of Ford F-Series first generation ?",
    "SerialNumber": "1397",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Ford_F-Series_first_generation\u003e \u003chttp://dbpedia.org/property/engine\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/manufacturer\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ford F-Series first generation",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ford_F-Series_first_generation",
        "seq": "34,64"
      }
    ],
    "id": "7d5159ea5c5a452086175f68079c8e22",
    "predicate mapping": [
      {
        "label": "engine",
        "uri": "http://dbpedia.org/property/engine",
        "seq": "24,30",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "maker",
        "uri": "http://dbpedia.org/ontology/manufacturer",
        "seq": "11,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who all have been judges on CTV Network\u0027s shows?",
    "SerialNumber": "1400",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/network\u003e \u003chttp://dbpedia.org/resource/CTV_Television_Network\u003e . ?x \u003chttp://dbpedia.org/property/judges\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "CTV Network",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/CTV_Television_Network",
        "seq": "28,39"
      }
    ],
    "id": "44126a7ebefe489c8d4093ec82f95ef1",
    "predicate mapping": [
      {
        "label": "Network",
        "uri": "http://dbpedia.org/ontology/network",
        "seq": "32,39",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "judges",
        "uri": "http://dbpedia.org/property/judges",
        "seq": "18,24",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "42,47",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "Which rivers end in Old Saybrook, Connecticut?",
    "SerialNumber": "1402",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/mouthMountain\u003e \u003chttp://dbpedia.org/resource/Old_Saybrook,_Connecticut\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Old Saybrook, Connecticut",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Old_Saybrook,_Connecticut",
        "seq": "20,45"
      }
    ],
    "id": "8f75a8ba0817469791fe7f783a003b62",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/mouthMountain",
        "seq": "17,19",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which TV show\u0027s executive producer is Douglas Netter and composed by Stewart Copeland ?",
    "SerialNumber": "1404",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/executiveProducer\u003e \u003chttp://dbpedia.org/resource/Douglas_Netter\u003e . ?uri \u003chttp://dbpedia.org/property/composer\u003e \u003chttp://dbpedia.org/resource/Stewart_Copeland\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Douglas Netter",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Douglas_Netter",
        "seq": "38,52"
      },
      {
        "label": "Stewart Copeland",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Stewart_Copeland",
        "seq": "69,85"
      }
    ],
    "id": "e1d331f8870d4fcb99ef55121fda7c31",
    "predicate mapping": [
      {
        "label": "executive producer",
        "uri": "http://dbpedia.org/ontology/executiveProducer",
        "seq": "16,34",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "composed",
        "uri": "http://dbpedia.org/property/composer",
        "seq": "57,65",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "show\u0027s",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "9,15",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the television show whose network is TNT (TV channel) and Prime Time Entertainment Network?",
    "SerialNumber": "1405",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/network\u003e \u003chttp://dbpedia.org/resource/TNT_(TV_channel)\u003e . ?uri \u003chttp://dbpedia.org/ontology/network\u003e \u003chttp://dbpedia.org/resource/Prime_Time_Entertainment_Network\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "TNT (TV channel)",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/TNT_(TV_channel)",
        "seq": "42,58"
      },
      {
        "label": "Prime Time Entertainment Network",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Prime_Time_Entertainment_Network",
        "seq": "63,95"
      }
    ],
    "id": "af7ff586aa3e46058865543dba5c96b0",
    "predicate mapping": [
      {
        "label": "network",
        "uri": "http://dbpedia.org/property/network",
        "seq": "31,38",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "network",
        "uri": "http://dbpedia.org/ontology/network",
        "seq": "31,38",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "9,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Where is the arena of WPC Dynamo Moscow situated?",
    "SerialNumber": "1406",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/WPC_Dynamo_Moscow\u003e \u003chttp://dbpedia.org/property/arena\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "WPC Dynamo Moscow",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/WPC_Dynamo_Moscow",
        "seq": "22,39"
      }
    ],
    "id": "374e41e0c9074e29aa08bc200f1d9a04",
    "predicate mapping": [
      {
        "label": "arena",
        "uri": "http://dbpedia.org/property/arena",
        "seq": "13,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "311",
    "question": "Name the founders of the record labels whose one of the founders is Frank Rogers ?",
    "SerialNumber": "1408",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/founder\u003e \u003chttp://dbpedia.org/resource/Frank_Rogers_(record_producer)\u003e . ?x \u003chttp://dbpedia.org/property/founder\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/RecordLabel\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Frank Rogers",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Frank_Rogers_(record_producer)",
        "seq": "68,80"
      }
    ],
    "id": "ed3777b583d140ae9097e15d39c80d2f",
    "predicate mapping": [
      {
        "label": "founders",
        "uri": "http://dbpedia.org/property/founder",
        "seq": "9,17",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "founders",
        "uri": "http://dbpedia.org/property/founder",
        "seq": "9,17",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "record label",
        "uri": "http://dbpedia.org/ontology/RecordLabel",
        "seq": "25,37",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What are the television shows whose starting music is composed by Ron Grainer?",
    "SerialNumber": "1410",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/themeMusicComposer\u003e \u003chttp://dbpedia.org/resource/Ron_Grainer\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ron Grainer",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Ron_Grainer",
        "seq": "66,77"
      }
    ],
    "id": "7db07f152ba64000952041d7c269d816",
    "predicate mapping": [
      {
        "label": "composed",
        "uri": "http://dbpedia.org/property/themeMusicComposer",
        "seq": "54,62",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "13,28",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "List the military branch of  Henry Hyde ?",
    "SerialNumber": "1411",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Henry_Hyde\u003e \u003chttp://dbpedia.org/ontology/militaryBranch\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Henry Hyde",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Henry_Hyde",
        "seq": "29,39"
      }
    ],
    "id": "74a833da4a3449f792fe8603400f3a51",
    "predicate mapping": [
      {
        "label": "military branch",
        "uri": "http://dbpedia.org/ontology/militaryBranch",
        "seq": "9,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who is the developer of Montecito Inn ?",
    "SerialNumber": "1412",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Montecito_Inn\u003e \u003chttp://dbpedia.org/property/developer\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Montecito Inn",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Montecito_Inn",
        "seq": "24,37"
      }
    ],
    "id": "a51b846524854b8d8be7950d0143aa08",
    "predicate mapping": [
      {
        "label": "developer",
        "uri": "http://dbpedia.org/property/developer",
        "seq": "11,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "which planet was discovered by Urbain Le Verrier?",
    "SerialNumber": "1415",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/discoverer\u003e \u003chttp://dbpedia.org/resource/Urbain_Le_Verrier\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Urbain Le Verrier",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Urbain_Le_Verrier",
        "seq": "31,48"
      }
    ],
    "id": "b2179061510340db8454e133c3829727",
    "predicate mapping": [
      {
        "label": "discovered by",
        "uri": "http://dbpedia.org/ontology/discoverer",
        "seq": "17,30",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the parent company of Ford Falcon Cobra ?",
    "SerialNumber": "1422",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Ford_Falcon_Cobra\u003e \u003chttp://dbpedia.org/ontology/parentCompany\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ford Falcon Cobra",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Ford_Falcon_Cobra",
        "seq": "27,44"
      }
    ],
    "id": "d1129ddcb8c04a6d88e360a759cf01d9",
    "predicate mapping": [
      {
        "label": "parent company",
        "uri": "http://dbpedia.org/ontology/parentCompany",
        "seq": "9,23",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Where is the radio broadcasted in, whose sister station is CKFM-FM?",
    "SerialNumber": "1424",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/sisterStation\u003e \u003chttp://dbpedia.org/resource/CKFM-FM\u003e . ?x \u003chttp://dbpedia.org/ontology/broadcastArea\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/RadioStation\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "CKFM-FM",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/CKFM-FM",
        "seq": "59,66"
      }
    ],
    "id": "6cf9b1c0073641558b6b87a6afd477c3",
    "predicate mapping": [
      {
        "label": "sister station",
        "uri": "http://dbpedia.org/ontology/sisterStation",
        "seq": "41,55",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "broadcasted",
        "uri": "http://dbpedia.org/ontology/broadcastArea",
        "seq": "19,30",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "station radio",
        "uri": "http://dbpedia.org/ontology/RadioStation",
        "seq": "-1,12",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Does A foreign policy of freedom belong to the genre Politics?",
    "SerialNumber": "1425",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/A_Foreign_Policy_of_Freedom\u003e \u003chttp://dbpedia.org/ontology/literaryGenre\u003e \u003chttp://dbpedia.org/resource/Politics\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "A foreign policy of freedom",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/A_Foreign_Policy_of_Freedom",
        "seq": "5,32"
      },
      {
        "label": "Politics",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Politics",
        "seq": "53,61"
      }
    ],
    "id": "63ca129cc4fa4a1a982e2980c540e35b",
    "predicate mapping": [
      {
        "label": "genre",
        "uri": "http://dbpedia.org/ontology/literaryGenre",
        "seq": "47,52",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "For which common president did Jim Sasser and Mike McCurry work?",
    "SerialNumber": "1427",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Jim_Sasser\u003e \u003chttp://dbpedia.org/ontology/president\u003e ?uri. \u003chttp://dbpedia.org/resource/Mike_McCurry_(press_secretary)\u003e \u003chttp://dbpedia.org/ontology/president\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jim Sasser",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Jim_Sasser",
        "seq": "31,41"
      },
      {
        "label": "Mike McCurry",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Mike_McCurry_(press_secretary)",
        "seq": "46,58"
      }
    ],
    "id": "8185bbd0be854ace812c865f25e2ffb2",
    "predicate mapping": [
      {
        "label": "president",
        "uri": "http://dbpedia.org/ontology/president",
        "seq": "17,26",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "president",
        "uri": "http://dbpedia.org/ontology/president",
        "seq": "17,26",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "Jerry Bock\u0027s musicals has been adapted from how many things?",
    "SerialNumber": "1429",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/music\u003e \u003chttp://dbpedia.org/resource/Jerry_Bock\u003e . ?x \u003chttp://dbpedia.org/ontology/basedOn\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jerry Bock",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Jerry_Bock",
        "seq": "0,10"
      }
    ],
    "id": "427a250b939b4dbfab09841c8f20e929",
    "predicate mapping": [
      {
        "label": "music",
        "uri": "http://dbpedia.org/property/music",
        "seq": "13,18",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "adapted from",
        "uri": "http://dbpedia.org/ontology/basedOn",
        "seq": "31,43",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What is the birth place of the children of Miguel Garca Granados ?",
    "SerialNumber": "1431",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Miguel_García_Granados\u003e \u003chttp://dbpedia.org/property/children\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/birthPlace\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Miguel Garca Granados",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Miguel_García_Granados",
        "seq": "43,64"
      }
    ],
    "id": "720882e8f33e4b9a8d62b57e24b5c363",
    "predicate mapping": [
      {
        "label": "children",
        "uri": "http://dbpedia.org/property/children",
        "seq": "31,39",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "birth place",
        "uri": "http://dbpedia.org/ontology/birthPlace",
        "seq": "12,23",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Titus software publishes which genre of games?",
    "SerialNumber": "1432",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/publisher\u003e \u003chttp://dbpedia.org/resource/Titus_Software\u003e . ?x \u003chttp://dbpedia.org/ontology/genre\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/VideoGame\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Titus software",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Titus_Software",
        "seq": "0,14"
      }
    ],
    "id": "edec33716ab949b993955978a2dc9011",
    "predicate mapping": [
      {
        "label": "publishes",
        "uri": "http://dbpedia.org/property/publisher",
        "seq": "15,24",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "genre",
        "uri": "http://dbpedia.org/ontology/genre",
        "seq": "31,36",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "games",
        "uri": "http://dbpedia.org/ontology/VideoGame",
        "seq": "40,45",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Who are the spouse of the parents of Kimberly Stewart?",
    "SerialNumber": "1433",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Kimberly_Stewart\u003e \u003chttp://dbpedia.org/ontology/parent\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/spouse\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Kimberly Stewart",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Kimberly_Stewart",
        "seq": "37,53"
      }
    ],
    "id": "5574fe2aa59d4b4394e830d098886f3c",
    "predicate mapping": [
      {
        "label": "parent",
        "uri": "http://dbpedia.org/ontology/parent",
        "seq": "26,32",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "spouse",
        "uri": "http://dbpedia.org/ontology/spouse",
        "seq": "12,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What academic discipline of the Journal of Cerebral Blood Flow \u0026 Metabolism is also the record label of the Double Diamond (album)?",
    "SerialNumber": "1434",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Journal_of_Cerebral_Blood_Flow_\u0026_Metabolism\u003e \u003chttp://dbpedia.org/ontology/academicDiscipline\u003e ?uri. \u003chttp://dbpedia.org/resource/Double_Diamond_(album)\u003e \u003chttp://dbpedia.org/ontology/recordLabel\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Journal of Cerebral Blood Flow \u0026 Metabolism",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Journal_of_Cerebral_Blood_Flow_\u0026_Metabolism",
        "seq": "32,75"
      },
      {
        "label": "Double Diamond (album)",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Double_Diamond_(album)",
        "seq": "108,130"
      }
    ],
    "id": "79b29a50491143fcb95984df5dc84ca0",
    "predicate mapping": [
      {
        "label": "academic discipline",
        "uri": "http://dbpedia.org/ontology/academicDiscipline",
        "seq": "5,24",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "record label",
        "uri": "http://dbpedia.org/ontology/recordLabel",
        "seq": "88,100",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What are the houses of Parliament Security Services ?",
    "SerialNumber": "1437",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Parliament_Security_Services\u003e \u003chttp://dbpedia.org/property/houses\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Parliament Security Services",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Parliament_Security_Services",
        "seq": "23,51"
      }
    ],
    "id": "0baa037b73d543a7a59be401e8a0bc44",
    "predicate mapping": [
      {
        "label": "houses",
        "uri": "http://dbpedia.org/property/houses",
        "seq": "13,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who is the governor of Carl McCall ?",
    "SerialNumber": "1438",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Carl_McCall\u003e \u003chttp://dbpedia.org/ontology/governor\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Carl McCall",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Carl_McCall",
        "seq": "23,34"
      }
    ],
    "id": "9f03bf078f8e43e68ca2db1f89a182b7",
    "predicate mapping": [
      {
        "label": "governor",
        "uri": "http://dbpedia.org/ontology/governor",
        "seq": "11,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What is the nickname of the city where Tuba Dei lives?",
    "SerialNumber": "1439",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Tuba_Dei\u003e \u003chttp://dbpedia.org/property/city\u003e ?x . ?x \u003chttp://dbpedia.org/property/nickname\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Tuba Dei",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Tuba_Dei",
        "seq": "39,47"
      }
    ],
    "id": "6010a5c2d8cf410ba846684155d6afb3",
    "predicate mapping": [
      {
        "label": "city",
        "uri": "http://dbpedia.org/property/city",
        "seq": "28,32",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "nickname",
        "uri": "http://dbpedia.org/property/nickname",
        "seq": "12,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "List the mascot of the universities which are a part of  National Collegiate Athletic Association.",
    "SerialNumber": "1443",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/athletics\u003e \u003chttp://dbpedia.org/resource/National_Collegiate_Athletic_Association\u003e . ?x \u003chttp://dbpedia.org/property/mascot\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/University\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "National Collegiate Athletic Association",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/National_Collegiate_Athletic_Association",
        "seq": "57,97"
      }
    ],
    "id": "46c7118086dc4e08bdd9bf77f4273377",
    "predicate mapping": [
      {
        "label": "athletic",
        "uri": "http://dbpedia.org/property/athletics",
        "seq": "-1,7",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "mascot",
        "uri": "http://dbpedia.org/property/mascot",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "universities",
        "uri": "http://dbpedia.org/ontology/University",
        "seq": "23,35",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the official residence of Fergus McMaster ?",
    "SerialNumber": "1448",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Fergus_McMaster\u003e \u003chttp://dbpedia.org/ontology/residence\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Fergus McMaster",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Fergus_McMaster",
        "seq": "34,49"
      }
    ],
    "id": "90b8340912aa47be9e2468424ccf95d8",
    "predicate mapping": [
      {
        "label": "residence",
        "uri": "http://dbpedia.org/ontology/residence",
        "seq": "21,30",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Which university has chancellor as Nicholas S. Zeppos?",
    "SerialNumber": "1449",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/chancellor\u003e \u003chttp://dbpedia.org/resource/Nicholas_S._Zeppos\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/University\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Nicholas S. Zeppos",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Nicholas_S._Zeppos",
        "seq": "35,53"
      }
    ],
    "id": "a54d9ab5b073425aa078172cd3175ec8",
    "predicate mapping": [
      {
        "label": "chancellor",
        "uri": "http://dbpedia.org/property/chancellor",
        "seq": "21,31",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "university",
        "uri": "http://dbpedia.org/ontology/University",
        "seq": "6,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "111",
    "question": "What is the total number of  builder of the military structures whose builder is also United States?",
    "SerialNumber": "1450",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/builder\u003e \u003chttp://dbpedia.org/resource/United_States\u003e . ?x \u003chttp://dbpedia.org/ontology/builder\u003e ?uri }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "United States",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/United_States",
        "seq": "86,99"
      }
    ],
    "id": "c83f849b65f046198bee117225c1dac5",
    "predicate mapping": [
      {
        "label": "builder",
        "uri": "http://dbpedia.org/ontology/builder",
        "seq": "29,36",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "builder",
        "uri": "http://dbpedia.org/ontology/builder",
        "seq": "29,36",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "List the associated musical artist of the current members of Al Bano and Romina Power?",
    "SerialNumber": "1452",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Al_Bano_and_Romina_Power\u003e \u003chttp://dbpedia.org/property/currentMembers\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/associatedMusicalArtist\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Al Bano and Romina Power",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Al_Bano_and_Romina_Power",
        "seq": "61,85"
      }
    ],
    "id": "37fc8c815f8f4cd1a8c8b46ad3a577f7",
    "predicate mapping": [
      {
        "label": "current members",
        "uri": "http://dbpedia.org/property/currentMembers",
        "seq": "42,57",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "associated musical artist",
        "uri": "http://dbpedia.org/ontology/associatedMusicalArtist",
        "seq": "9,34",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What team does John McGeever play for, which also employed Ben Dreith at some time?",
    "SerialNumber": "1454",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Ben_Dreith\u003e \u003chttp://dbpedia.org/ontology/occupation\u003e ?uri. \u003chttp://dbpedia.org/resource/John_McGeever\u003e \u003chttp://dbpedia.org/ontology/team\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ben Dreith",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Ben_Dreith",
        "seq": "59,69"
      },
      {
        "label": "John McGeever",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/John_McGeever",
        "seq": "15,28"
      }
    ],
    "id": "967f6935fd4248ed99f03141a2b0e459",
    "predicate mapping": [
      {
        "label": "at",
        "uri": "http://dbpedia.org/ontology/occupation",
        "seq": "2,4",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/team",
        "seq": "5,9",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "What is the total number of guests on the show whose theme music is Let me be your star?",
    "SerialNumber": "1456",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/music\u003e \u003chttp://dbpedia.org/resource/Let_Me_Be_Your_Star\u003e . ?x \u003chttp://dbpedia.org/property/guests\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Let me be your star",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Let_Me_Be_Your_Star",
        "seq": "68,87"
      }
    ],
    "id": "98cf58e6424a49e1afab18da3372f362",
    "predicate mapping": [
      {
        "label": "music",
        "uri": "http://dbpedia.org/property/music",
        "seq": "59,64",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "guests",
        "uri": "http://dbpedia.org/property/guests",
        "seq": "28,34",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the home town of Rolando Gomez ?",
    "SerialNumber": "1457",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Rolando_Gomez\u003e \u003chttp://dbpedia.org/property/homeTown\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Rolando Gomez",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Rolando_Gomez",
        "seq": "22,35"
      }
    ],
    "id": "0f2bfb81e96b44b1bc4586e49852fccf",
    "predicate mapping": [
      {
        "label": "home town",
        "uri": "http://dbpedia.org/property/homeTown",
        "seq": "9,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Was Noko a band member of Luxuria?",
    "SerialNumber": "1458",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Luxuria_(band)\u003e \u003chttp://dbpedia.org/ontology/formerBandMember\u003e \u003chttp://dbpedia.org/resource/Noko\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Luxuria",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Luxuria_(band)",
        "seq": "26,33"
      },
      {
        "label": "Noko",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Noko",
        "seq": "4,8"
      }
    ],
    "id": "3914f43429894759b145e663790fc209",
    "predicate mapping": [
      {
        "label": "member band",
        "uri": "http://dbpedia.org/ontology/formerBandMember",
        "seq": "-1,10",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "Name some basketball players whose team is coached by Fred Hoiberg?",
    "SerialNumber": "1460",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/coach\u003e \u003chttp://dbpedia.org/resource/Fred_Hoiberg\u003e . ?uri \u003chttp://dbpedia.org/property/team\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/BasketballPlayer\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Fred Hoiberg",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Fred_Hoiberg",
        "seq": "54,66"
      }
    ],
    "id": "6ad0d1eeef934ec0bfd88f85a1e3320f",
    "predicate mapping": [
      {
        "label": "coach",
        "uri": "http://dbpedia.org/ontology/coach",
        "seq": "43,48",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/property/team",
        "seq": "35,39",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "basketball player",
        "uri": "http://dbpedia.org/ontology/BasketballPlayer",
        "seq": "10,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who is the prime minister that Michael Jeffery served?",
    "SerialNumber": "1462",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Michael_Jeffery\u003e \u003chttp://dbpedia.org/property/primeminister\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Michael Jeffery",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Michael_Jeffery",
        "seq": "31,46"
      }
    ],
    "id": "3dab698090ef4acda3d9a1bd30a307dc",
    "predicate mapping": [
      {
        "label": "minister prime",
        "uri": "http://dbpedia.org/property/primeminister",
        "seq": "-1,13",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What are the movies whose music is composed by Vangelis?",
    "SerialNumber": "1463",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/musicComposer\u003e \u003chttp://dbpedia.org/resource/Vangelis\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Vangelis",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Vangelis",
        "seq": "47,55"
      }
    ],
    "id": "bf81b0ed08944a0091644587ff07d4fc",
    "predicate mapping": [
      {
        "label": "composed",
        "uri": "http://dbpedia.org/ontology/musicComposer",
        "seq": "35,43",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "13,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Was Walt Disney the cinematographer of Mickey\u0027s Mellerdrammer?",
    "SerialNumber": "1464",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Mickey\u0027s_Mellerdrammer\u003e \u003chttp://dbpedia.org/property/cinematography\u003e \u003chttp://dbpedia.org/resource/Walt_Disney\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Mickey\u0027s Mellerdrammer",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Mickey\u0027s_Mellerdrammer",
        "seq": "39,61"
      },
      {
        "label": "Walt Disney",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Walt_Disney",
        "seq": "4,15"
      }
    ],
    "id": "f1eae8d8caba4bae88873a154dfec671",
    "predicate mapping": [
      {
        "label": "cinematographer",
        "uri": "http://dbpedia.org/property/cinematography",
        "seq": "20,35",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who is the operator of Rainbow Warrior (1955) ?",
    "SerialNumber": "1465",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Rainbow_Warrior_(1955)\u003e \u003chttp://dbpedia.org/ontology/operator\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Rainbow Warrior",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Rainbow_Warrior_(1955)",
        "seq": "23,38"
      }
    ],
    "id": "ff89e1f2ebea4884b42c7497cbf61372",
    "predicate mapping": [
      {
        "label": "operator",
        "uri": "http://dbpedia.org/ontology/operator",
        "seq": "11,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "To which sports team is Aubie the mascot?",
    "SerialNumber": "1466",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/mascot\u003e \u003chttp://dbpedia.org/resource/Aubie\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/SportsTeam\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Aubie",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Aubie",
        "seq": "24,29"
      }
    ],
    "id": "46849da00b124a0f9c847045c1d34579",
    "predicate mapping": [
      {
        "label": "mascot",
        "uri": "http://dbpedia.org/property/mascot",
        "seq": "34,40",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "sports team",
        "uri": "http://dbpedia.org/ontology/SportsTeam",
        "seq": "9,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Which series are Lennier and Londo Mollari both from?",
    "SerialNumber": "1467",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Lennier\u003e \u003chttp://dbpedia.org/ontology/series\u003e ?uri. \u003chttp://dbpedia.org/resource/Londo_Mollari\u003e \u003chttp://dbpedia.org/ontology/series\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Lennier",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Lennier",
        "seq": "17,24"
      },
      {
        "label": "Londo Mollari",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Londo_Mollari",
        "seq": "29,42"
      }
    ],
    "id": "732483cb47924b00b32792c0bb79f680",
    "predicate mapping": [
      {
        "label": "series",
        "uri": "http://dbpedia.org/ontology/series",
        "seq": "6,12",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "series",
        "uri": "http://dbpedia.org/ontology/series",
        "seq": "6,12",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "Graduates of Somerville College have been in how many political parties?",
    "SerialNumber": "1469",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/almaMater\u003e \u003chttp://dbpedia.org/resource/Somerville_College,_Oxford\u003e . ?x \u003chttp://dbpedia.org/ontology/party\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Somerville College",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Somerville_College,_Oxford",
        "seq": "13,31"
      }
    ],
    "id": "c1d38d3b2ca945bd9989a4ea50cb9b23",
    "predicate mapping": [
      {
        "label": "graduates",
        "uri": "http://dbpedia.org/ontology/almaMater",
        "seq": "-1,8",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "parties",
        "uri": "http://dbpedia.org/ontology/party",
        "seq": "64,71",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "111",
    "question": "Count the number of battles fought by the military person involved in Morocco ?",
    "SerialNumber": "1471",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/battles\u003e \u003chttp://dbpedia.org/resource/Morocco\u003e . ?x \u003chttp://dbpedia.org/property/battles\u003e ?uri }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Morocco",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Morocco",
        "seq": "70,77"
      }
    ],
    "id": "9f0fff722db84e1498deba1ebb619e50",
    "predicate mapping": [
      {
        "label": "battles",
        "uri": "http://dbpedia.org/property/battles",
        "seq": "20,27",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "battles",
        "uri": "http://dbpedia.org/property/battles",
        "seq": "20,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Who is the office holder whose deputy was Andrew Peacock and predecessor was Alexander Downer?",
    "SerialNumber": "1475",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/deputy\u003e \u003chttp://dbpedia.org/resource/Andrew_Peacock\u003e . ?uri \u003chttp://dbpedia.org/ontology/predecessor\u003e \u003chttp://dbpedia.org/resource/Alexander_Downer\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/OfficeHolder\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Andrew Peacock",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Andrew_Peacock",
        "seq": "42,56"
      },
      {
        "label": "Alexander Downer",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Alexander_Downer",
        "seq": "77,93"
      }
    ],
    "id": "81fc6048cd674197b4c6918b39592d57",
    "predicate mapping": [
      {
        "label": "deputy",
        "uri": "http://dbpedia.org/property/deputy",
        "seq": "31,37",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "predecessor",
        "uri": "http://dbpedia.org/ontology/predecessor",
        "seq": "61,72",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "office holder",
        "uri": "http://dbpedia.org/ontology/OfficeHolder",
        "seq": "11,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who was the editor of the newspaper owned by the the UK government?",
    "SerialNumber": "1476",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/owners\u003e \u003chttp://dbpedia.org/resource/Government_of_the_United_Kingdom\u003e . ?x \u003chttp://dbpedia.org/property/editor\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Newspaper\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "UK government",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Government_of_the_United_Kingdom",
        "seq": "53,55"
      }
    ],
    "id": "68d4d257dad14afa9f33b32b9f8f06cc",
    "predicate mapping": [
      {
        "label": "owned",
        "uri": "http://dbpedia.org/property/owners",
        "seq": "36,41",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "editor",
        "uri": "http://dbpedia.org/property/editor",
        "seq": "12,18",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "newspaper",
        "uri": "http://dbpedia.org/ontology/Newspaper",
        "seq": "26,35",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "311",
    "question": "List all the collaborators of the artist which has collaborated with sanremo Music Festival ?",
    "SerialNumber": "1478",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/associatedMusicalArtist\u003e \u003chttp://dbpedia.org/resource/Sanremo_Music_Festival\u003e . ?x \u003chttp://dbpedia.org/ontology/associatedMusicalArtist\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Artist\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "sanremo Music Festival",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Sanremo_Music_Festival",
        "seq": "69,91"
      }
    ],
    "id": "c8c5d0a0594e48609e559b9b8766b7a5",
    "predicate mapping": [
      {
        "label": "artist music",
        "uri": "http://dbpedia.org/ontology/associatedMusicalArtist",
        "seq": "-1,11",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "artist music",
        "uri": "http://dbpedia.org/ontology/associatedMusicalArtist",
        "seq": "-1,11",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "artist",
        "uri": "http://dbpedia.org/ontology/Artist",
        "seq": "34,40",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Where did the plays written by Robert Schenkkan take place?",
    "SerialNumber": "1479",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/writer\u003e \u003chttp://dbpedia.org/resource/Robert_Schenkkan\u003e . ?x \u003chttp://dbpedia.org/property/place\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Play\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Robert Schenkkan",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Robert_Schenkkan",
        "seq": "31,47"
      }
    ],
    "id": "0a0eaf434b7342f1a47f9e61c8093efe",
    "predicate mapping": [
      {
        "label": "written by",
        "uri": "http://dbpedia.org/property/writer",
        "seq": "20,30",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "place",
        "uri": "http://dbpedia.org/property/place",
        "seq": "53,58",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "play",
        "uri": "http://dbpedia.org/ontology/Play",
        "seq": "14,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Which baseball team is owned by Robert Nutting?",
    "SerialNumber": "1481",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/owner\u003e \u003chttp://dbpedia.org/resource/Robert_Nutting\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/BaseballTeam\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Robert Nutting",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Robert_Nutting",
        "seq": "32,46"
      }
    ],
    "id": "6b7392c622bf4b9d8d89ad9e53010cb2",
    "predicate mapping": [
      {
        "label": "is owned by",
        "uri": "http://dbpedia.org/property/owner",
        "seq": "20,31",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "baseball team",
        "uri": "http://dbpedia.org/ontology/BaseballTeam",
        "seq": "6,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Which sports are played typically in private schools?",
    "SerialNumber": "1482",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/schooltype\u003e \u003chttp://dbpedia.org/resource/Private_school\u003e . ?x \u003chttp://dbpedia.org/ontology/sport\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "private school",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Private_school",
        "seq": "37,51"
      }
    ],
    "id": "e7dde5ecb2d4418f9c39988c43ddb848",
    "predicate mapping": [
      {
        "label": "schools",
        "uri": "http://dbpedia.org/property/schooltype",
        "seq": "45,52",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "sport",
        "uri": "http://dbpedia.org/ontology/sport",
        "seq": "6,11",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Was Marie Curie a doctoral student of Henri Becquerel?",
    "SerialNumber": "1484",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Henri_Becquerel\u003e \u003chttp://dbpedia.org/ontology/doctoralStudent\u003e \u003chttp://dbpedia.org/resource/Marie_Curie\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Henri Becquerel",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Henri_Becquerel",
        "seq": "38,53"
      },
      {
        "label": "Marie Curie",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Marie_Curie",
        "seq": "4,15"
      }
    ],
    "id": "c6a4fb6c10984d2494a7f6b2c3c6f6a9",
    "predicate mapping": [
      {
        "label": "doctoral student",
        "uri": "http://dbpedia.org/ontology/doctoralStudent",
        "seq": "18,34",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "List the television shows whose network\u0027s sister names is N-tv.",
    "SerialNumber": "1485",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/sisterNames\u003e \u003chttp://dbpedia.org/resource/N-tv\u003e . ?uri \u003chttp://dbpedia.org/property/network\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "N-tv",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/N-tv",
        "seq": "58,62"
      }
    ],
    "id": "ec357021bd3041b88bc21430566a7aa5",
    "predicate mapping": [
      {
        "label": "sister names",
        "uri": "http://dbpedia.org/property/sisterNames",
        "seq": "42,54",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "network",
        "uri": "http://dbpedia.org/property/network",
        "seq": "32,39",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "9,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What are some other services of the company whose service is Onedrive?",
    "SerialNumber": "1486",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/service\u003e \u003chttp://dbpedia.org/resource/OneDrive\u003e . ?x \u003chttp://dbpedia.org/property/services\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Company\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Onedrive",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/OneDrive",
        "seq": "61,69"
      }
    ],
    "id": "478436ca4cc34c0bb4f8d95e5e869be7",
    "predicate mapping": [
      {
        "label": "service",
        "uri": "http://dbpedia.org/ontology/service",
        "seq": "20,27",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "services",
        "uri": "http://dbpedia.org/property/services",
        "seq": "20,28",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company",
        "seq": "36,43",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Where does the railway tracks start, which ends in Kazan?",
    "SerialNumber": "1487",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/routeEnd\u003e \u003chttp://dbpedia.org/resource/Kazan\u003e . ?x \u003chttp://dbpedia.org/ontology/routeStart\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/RailwayLine\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Kazan",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Kazan",
        "seq": "51,56"
      }
    ],
    "id": "ddc9605fad1340cfa17fe46efa3d5516",
    "predicate mapping": [
      {
        "label": "ends",
        "uri": "http://dbpedia.org/ontology/routeEnd",
        "seq": "43,47",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "start,",
        "uri": "http://dbpedia.org/ontology/routeStart",
        "seq": "30,36",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "railway",
        "uri": "http://dbpedia.org/ontology/RailwayLine",
        "seq": "15,22",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "406",
    "question": "Give me a count of all ice hockey players whose teams are headcoached by John Tortorella?",
    "SerialNumber": "1488",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/headCoach\u003e \u003chttp://dbpedia.org/resource/John_Tortorella\u003e . ?uri \u003chttp://dbpedia.org/ontology/team\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/IceHockeyPlayer\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "John Tortorella",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/John_Tortorella",
        "seq": "73,88"
      }
    ],
    "id": "f3a7adce77844beb83973ad768b686b0",
    "predicate mapping": [
      {
        "label": "headcoached",
        "uri": "http://dbpedia.org/property/headCoach",
        "seq": "58,69",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/team",
        "seq": "48,52",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "ice hockey player",
        "uri": "http://dbpedia.org/ontology/IceHockeyPlayer",
        "seq": "23,40",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "11",
    "question": "Name all the venues of the convention which has also been hosted in San Diego Convention ?",
    "SerialNumber": "1490",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/venue\u003e \u003chttp://dbpedia.org/resource/San_Diego_Convention_Center\u003e . ?x \u003chttp://dbpedia.org/property/venue\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "San Diego Convention",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/San_Diego_Convention_Center",
        "seq": "68,88"
      }
    ],
    "id": "1243d7724dc846eea4a227142bb548be",
    "predicate mapping": [
      {
        "label": "venue",
        "uri": "http://dbpedia.org/property/venue",
        "seq": "13,18",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "venue",
        "uri": "http://dbpedia.org/property/venue",
        "seq": "13,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Where is the county seat of King County, Washington?",
    "SerialNumber": "1491",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/King_County,_Washington\u003e \u003chttp://dbpedia.org/ontology/countySeat\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "King County, Washington",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/King_County,_Washington",
        "seq": "28,51"
      }
    ],
    "id": "83eea7c4c71d45ec847c1410bfbdd035",
    "predicate mapping": [
      {
        "label": "county seat",
        "uri": "http://dbpedia.org/ontology/countySeat",
        "seq": "13,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "307",
    "question": "What is the river whose mouth locations are Arctic Ocean and Laptev Sea?",
    "SerialNumber": "1493",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/property/mouthLocation\u003e \u003chttp://dbpedia.org/resource/Arctic_Ocean\u003e . ?uri \u003chttp://dbpedia.org/property/mouthLocation\u003e \u003chttp://dbpedia.org/resource/Laptev_Sea\u003e . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/River\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Arctic Ocean",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Arctic_Ocean",
        "seq": "44,56"
      },
      {
        "label": "Laptev Sea",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Laptev_Sea",
        "seq": "61,71"
      }
    ],
    "id": "801fda9479a245bfba75d1f7d1881540",
    "predicate mapping": [
      {
        "label": "mouth location",
        "uri": "http://dbpedia.org/property/mouthLocation",
        "seq": "24,38",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "mouth location",
        "uri": "http://dbpedia.org/property/mouthLocation",
        "seq": "24,38",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River",
        "seq": "12,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Was Lucrezia Tornabuoni the mother of Lorenzo de\u0027 Medici?",
    "SerialNumber": "1494",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Lorenzo_de\u0027_Medici\u003e \u003chttp://dbpedia.org/property/mother\u003e \u003chttp://dbpedia.org/resource/Lucrezia_Tornabuoni\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Lorenzo de\u0027 Medici",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Lorenzo_de\u0027_Medici",
        "seq": "38,56"
      },
      {
        "label": "Lucrezia Tornabuoni",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Lucrezia_Tornabuoni",
        "seq": "4,23"
      }
    ],
    "id": "4f1a4374cc27457faacbad707a9ca72f",
    "predicate mapping": [
      {
        "label": "mother",
        "uri": "http://dbpedia.org/property/mother",
        "seq": "28,34",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "307",
    "question": "What band had  Nick Jonas and Kevin Jonas as former members ?",
    "SerialNumber": "1495",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/property/pastMembers\u003e \u003chttp://dbpedia.org/resource/Nick_Jonas\u003e . ?uri \u003chttp://dbpedia.org/property/pastMembers\u003e \u003chttp://dbpedia.org/resource/Kevin_Jonas\u003e . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Band\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Nick Jonas",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Nick_Jonas",
        "seq": "15,25"
      },
      {
        "label": "Kevin Jonas",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Kevin_Jonas",
        "seq": "30,41"
      }
    ],
    "id": "92e3b5727baf4081b7905f89e63e2785",
    "predicate mapping": [
      {
        "label": "members",
        "uri": "http://dbpedia.org/property/pastMembers",
        "seq": "52,59",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "members",
        "uri": "http://dbpedia.org/property/pastMembers",
        "seq": "52,59",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "band",
        "uri": "http://dbpedia.org/ontology/Band",
        "seq": "5,9",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the combatant of the Northwest Indian War and also the ethnic group of the Linda Hogan ",
    "SerialNumber": "1496",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Northwest_Indian_War\u003e \u003chttp://dbpedia.org/property/combatant\u003e ?uri. \u003chttp://dbpedia.org/resource/Linda_Hogan\u003e \u003chttp://dbpedia.org/property/ethnicity\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Northwest Indian War",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Northwest_Indian_War",
        "seq": "29,49"
      },
      {
        "label": "Linda Hogan",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Linda_Hogan",
        "seq": "83,94"
      }
    ],
    "id": "d6c6b1031e8a40ccabf25cc682c9eb07",
    "predicate mapping": [
      {
        "label": "combatant",
        "uri": "http://dbpedia.org/property/combatant",
        "seq": "12,21",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "ethnic",
        "uri": "http://dbpedia.org/property/ethnicity",
        "seq": "63,69",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "Give me the characters who last appeared in Star Wars Episode 3",
    "SerialNumber": "1497",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/last\u003e \u003chttp://dbpedia.org/resource/Star_Wars:_Episode_III_–_Revenge_of_the_Sith\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Star Wars Episode 3",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Star_Wars:_Episode_III_–_Revenge_of_the_Sith",
        "seq": "62,63"
      }
    ],
    "id": "5c6a09d1e72a45429f86bae07bb422e6",
    "predicate mapping": [
      {
        "label": "last",
        "uri": "http://dbpedia.org/property/last",
        "seq": "27,31",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "List of people who were the first one to ascend a mountain in the Cathedral range?",
    "SerialNumber": "1498",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/mountainRange\u003e \u003chttp://dbpedia.org/resource/Cathedral_Range\u003e . ?x \u003chttp://dbpedia.org/ontology/firstAscentPerson\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Mountain\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Cathedral range",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Cathedral_Range",
        "seq": "66,81"
      }
    ],
    "id": "19799ac99ae44c6ea599ce69e0ef0bc8",
    "predicate mapping": [
      {
        "label": "mountain range",
        "uri": "http://dbpedia.org/ontology/mountainRange",
        "seq": "-1,13",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "first",
        "uri": "http://dbpedia.org/ontology/firstAscentPerson",
        "seq": "28,33",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "mountain",
        "uri": "http://dbpedia.org/ontology/Mountain",
        "seq": "50,58",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the movie with narrator as Trevor Peacock and music composer  as Christophe Beck?",
    "SerialNumber": "1501",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/narrator\u003e \u003chttp://dbpedia.org/resource/Trevor_Peacock\u003e . ?uri \u003chttp://dbpedia.org/property/music\u003e \u003chttp://dbpedia.org/resource/Christophe_Beck\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Trevor Peacock",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Trevor_Peacock",
        "seq": "32,46"
      },
      {
        "label": "Christophe Beck",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Christophe_Beck",
        "seq": "70,85"
      }
    ],
    "id": "c7d501b648c444519cdf5fc5af8a1145",
    "predicate mapping": [
      {
        "label": "narrator",
        "uri": "http://dbpedia.org/property/narrator",
        "seq": "20,28",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "music",
        "uri": "http://dbpedia.org/property/music",
        "seq": "51,56",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "101",
    "question": "How many movies did Stanley Kubrick direct?",
    "SerialNumber": "1502",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/ontology/director\u003e \u003chttp://dbpedia.org/resource/Stanley_Kubrick\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Stanley Kubrick",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Stanley_Kubrick",
        "seq": "20,35"
      }
    ],
    "id": "b8f8719333604e9b9a5e34e7babe9e91",
    "predicate mapping": [
      {
        "label": "direct",
        "uri": "http://dbpedia.org/ontology/director",
        "seq": "36,42",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Who is the President of the United World College of Costa Rica and United World Colleges ?",
    "SerialNumber": "1506",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/United_World_College_of_Costa_Rica\u003e \u003chttp://dbpedia.org/property/president\u003e ?uri. \u003chttp://dbpedia.org/resource/United_World_Colleges\u003e \u003chttp://dbpedia.org/property/president\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "United World College of Costa Rica",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/United_World_College_of_Costa_Rica",
        "seq": "28,62"
      },
      {
        "label": "United World College ",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/United_World_Colleges",
        "seq": "28,49"
      }
    ],
    "id": "e38ad8e6192b406494e5c1a4926019e3",
    "predicate mapping": [
      {
        "label": "President",
        "uri": "http://dbpedia.org/property/president",
        "seq": "11,20",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "President",
        "uri": "http://dbpedia.org/property/president",
        "seq": "11,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which movie produced by Michael Deeley was distributed by Warner Bros ?",
    "SerialNumber": "1507",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/distributor\u003e \u003chttp://dbpedia.org/resource/Warner_Bros.\u003e . ?uri \u003chttp://dbpedia.org/property/producer\u003e \u003chttp://dbpedia.org/resource/Michael_Deeley\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Warner Bros ",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Warner_Bros.",
        "seq": "58,70"
      },
      {
        "label": "Michael Deeley",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Michael_Deeley",
        "seq": "24,38"
      }
    ],
    "id": "d0aac092bd35492b9e073efaf22ba601",
    "predicate mapping": [
      {
        "label": "distributed by",
        "uri": "http://dbpedia.org/property/distributor",
        "seq": "43,57",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "produced",
        "uri": "http://dbpedia.org/property/producer",
        "seq": "12,20",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "6,11",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who has had been the tenant of the stadium built by PCL construction firm?",
    "SerialNumber": "1509",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/builder\u003e \u003chttp://dbpedia.org/resource/PCL_Construction\u003e . ?x \u003chttp://dbpedia.org/ontology/tenant\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Stadium\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "PCL construction",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/PCL_Construction",
        "seq": "52,68"
      }
    ],
    "id": "7d987e66986840188fcae0a20722dccf",
    "predicate mapping": [
      {
        "label": "built by",
        "uri": "http://dbpedia.org/ontology/builder",
        "seq": "43,51",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "tenant",
        "uri": "http://dbpedia.org/ontology/tenant",
        "seq": "21,27",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "stadium",
        "uri": "http://dbpedia.org/ontology/Stadium",
        "seq": "35,42",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "For which team did Cam Plante and Doug Acomb both play atleast once?",
    "SerialNumber": "1510",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Cam_Plante\u003e \u003chttp://dbpedia.org/property/playedFor\u003e ?uri. \u003chttp://dbpedia.org/resource/Doug_Acomb\u003e \u003chttp://dbpedia.org/property/playedFor\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Cam Plante",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Cam_Plante",
        "seq": "19,29"
      },
      {
        "label": "Doug Acomb",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Doug_Acomb",
        "seq": "34,44"
      }
    ],
    "id": "8dc6914347504e2983925818c0616850",
    "predicate mapping": [
      {
        "label": "team",
        "uri": "http://dbpedia.org/property/playedFor",
        "seq": "10,14",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/property/playedFor",
        "seq": "10,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the type of Vesak ?",
    "SerialNumber": "1511",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Vesak\u003e \u003chttp://dbpedia.org/ontology/type\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Vesak",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Vesak",
        "seq": "20,25"
      }
    ],
    "id": "c5f6f930e7c2465d84f9347c2ed9be35",
    "predicate mapping": [
      {
        "label": "type",
        "uri": "http://dbpedia.org/ontology/type",
        "seq": "12,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "Which military personnel belong to the branch of Continental Army?",
    "SerialNumber": "1512",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/militaryBranch\u003e \u003chttp://dbpedia.org/resource/Continental_Army\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Continental Army",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Continental_Army",
        "seq": "49,65"
      }
    ],
    "id": "a407bb2b3115418b9c87072530021edb",
    "predicate mapping": [
      {
        "label": "military branch",
        "uri": "http://dbpedia.org/ontology/militaryBranch",
        "seq": "-1,14",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What is the title of the successor of Kaulahea I ?",
    "SerialNumber": "1514",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Kaulahea_I\u003e \u003chttp://dbpedia.org/property/successor\u003e ?x . ?x \u003chttp://dbpedia.org/property/title\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Kaulahea I",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Kaulahea_I",
        "seq": "38,48"
      }
    ],
    "id": "22c351d2188d4fdf9764737954766fa0",
    "predicate mapping": [
      {
        "label": "successor",
        "uri": "http://dbpedia.org/property/successor",
        "seq": "25,34",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "title",
        "uri": "http://dbpedia.org/property/title",
        "seq": "12,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "List the notable works of the writer of The Tony Randall Show ?",
    "SerialNumber": "1522",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/The_Tony_Randall_Show\u003e \u003chttp://dbpedia.org/property/writer\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/notableWork\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "The Tony Randall Show",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Tony_Randall_Show",
        "seq": "40,61"
      }
    ],
    "id": "aff5614125a14573982db28c91a123c8",
    "predicate mapping": [
      {
        "label": "writer",
        "uri": "http://dbpedia.org/property/writer",
        "seq": "30,36",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "notable work",
        "uri": "http://dbpedia.org/ontology/notableWork",
        "seq": "9,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What prizes have been awarded to the relatives of Linn Ullmann?",
    "SerialNumber": "1525",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Linn_Ullmann\u003e \u003chttp://dbpedia.org/property/relatives\u003e ?x . ?x \u003chttp://dbpedia.org/property/awards\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Linn Ullmann",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Linn_Ullmann",
        "seq": "50,62"
      }
    ],
    "id": "76979737099748f4a8ec2329b9f2a7f0",
    "predicate mapping": [
      {
        "label": "relatives",
        "uri": "http://dbpedia.org/property/relatives",
        "seq": "37,46",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "awarded",
        "uri": "http://dbpedia.org/property/awards",
        "seq": "22,29",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Who is the scientist whose academic advisor was Karl Ewald Hasse?",
    "SerialNumber": "1526",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/academicAdvisor\u003e \u003chttp://dbpedia.org/resource/Karl_Ewald_Hasse\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Scientist\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Karl Ewald Hasse",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Karl_Ewald_Hasse",
        "seq": "48,64"
      }
    ],
    "id": "212a265d6c5f4b94a59ae65ab6741cce",
    "predicate mapping": [
      {
        "label": "academic advisor",
        "uri": "http://dbpedia.org/ontology/academicAdvisor",
        "seq": "27,43",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "scientist",
        "uri": "http://dbpedia.org/ontology/Scientist",
        "seq": "11,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "11",
    "question": "List the other nicknames of city which has one of the nickname as City of Angels ?",
    "SerialNumber": "1528",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/nickname\u003e \u003chttp://dbpedia.org/resource/City_of_Angels\u003e . ?x \u003chttp://dbpedia.org/property/nickname\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "City of Angels",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/City_of_Angels",
        "seq": "66,80"
      }
    ],
    "id": "e3e252422e084971a88eab39961db3c6",
    "predicate mapping": [
      {
        "label": "nickname",
        "uri": "http://dbpedia.org/property/nickname",
        "seq": "15,23",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "nickname",
        "uri": "http://dbpedia.org/property/nickname",
        "seq": "15,23",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "Count the awards received by the ones who fought the battle of france?",
    "SerialNumber": "1531",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/battle\u003e \u003chttp://dbpedia.org/resource/Battle_of_France\u003e . ?x \u003chttp://dbpedia.org/ontology/award\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "battle of france",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Battle_of_France",
        "seq": "53,69"
      }
    ],
    "id": "11b1b9c7215d497589a3b1657936580f",
    "predicate mapping": [
      {
        "label": "battle",
        "uri": "http://dbpedia.org/ontology/battle",
        "seq": "53,59",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "awards received",
        "uri": "http://dbpedia.org/ontology/award",
        "seq": "10,25",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What is the baseball team whose club manager is Chip Hale?",
    "SerialNumber": "1532",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/manager\u003e \u003chttp://dbpedia.org/resource/Chip_Hale\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/BaseballTeam\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Chip Hale",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Chip_Hale",
        "seq": "48,57"
      }
    ],
    "id": "c2e076a790a4486b93dcd39fbd2281db",
    "predicate mapping": [
      {
        "label": "club manager",
        "uri": "http://dbpedia.org/property/manager",
        "seq": "32,44",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "baseball team",
        "uri": "http://dbpedia.org/ontology/BaseballTeam",
        "seq": "12,25",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "By what person of which political party is Balangir district led?",
    "SerialNumber": "1534",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Balangir_district\u003e \u003chttp://dbpedia.org/ontology/leaderName\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Balangir district",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Balangir_district",
        "seq": "43,60"
      }
    ],
    "id": "cb15bf7284f846b29b8e526dbe1593a5",
    "predicate mapping": [
      {
        "label": "led",
        "uri": "http://dbpedia.org/ontology/leaderName",
        "seq": "61,64",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the owner of Ivanpah Solar Power Facility and the original developer of Dart?",
    "SerialNumber": "1536",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Ivanpah_Solar_Power_Facility\u003e \u003chttp://dbpedia.org/ontology/owner\u003e ?uri. \u003chttp://dbpedia.org/resource/Dart_(programming_language)\u003e \u003chttp://dbpedia.org/ontology/developer\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ivanpah Solar",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Ivanpah_Solar_Power_Facility",
        "seq": "21,34"
      },
      {
        "label": "Dart",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Dart_(programming_language)",
        "seq": "80,84"
      }
    ],
    "id": "db8768bc59044ae58cdf6ba508873b38",
    "predicate mapping": [
      {
        "label": "owner",
        "uri": "http://dbpedia.org/ontology/owner",
        "seq": "12,17",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "developer",
        "uri": "http://dbpedia.org/ontology/developer",
        "seq": "67,76",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the movie which has music composed by Elliot Goldenthal and screenplay by Akiva Goldsman ?",
    "SerialNumber": "1541",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/music\u003e \u003chttp://dbpedia.org/resource/Elliot_Goldenthal\u003e . ?uri \u003chttp://dbpedia.org/property/screenplay\u003e \u003chttp://dbpedia.org/resource/Akiva_Goldsman\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Elliot Goldenthal",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Elliot_Goldenthal",
        "seq": "43,60"
      },
      {
        "label": "Akiva Goldsman",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Akiva_Goldsman",
        "seq": "79,93"
      }
    ],
    "id": "d3d85e553d834356807085b355f01240",
    "predicate mapping": [
      {
        "label": "music",
        "uri": "http://dbpedia.org/property/music",
        "seq": "25,30",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "screenplay",
        "uri": "http://dbpedia.org/property/screenplay",
        "seq": "65,75",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "Which shows had their painters born in England?",
    "SerialNumber": "1542",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/birthPlace\u003e \u003chttp://dbpedia.org/resource/England\u003e . ?uri \u003chttp://dbpedia.org/ontology/creator\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "England",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/England",
        "seq": "39,46"
      }
    ],
    "id": "51cbc9d885dd4b7ea69442fd1343c8c9",
    "predicate mapping": [
      {
        "label": "born in",
        "uri": "http://dbpedia.org/property/birthPlace",
        "seq": "31,38",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "painters",
        "uri": "http://dbpedia.org/ontology/creator",
        "seq": "22,30",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "6,11",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What is the former team of the american football players whose position is Running back?",
    "SerialNumber": "1544",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/position\u003e \u003chttp://dbpedia.org/resource/Running_back\u003e . ?x \u003chttp://dbpedia.org/ontology/formerTeam\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/AmericanFootballPlayer\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Running back",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Running_back",
        "seq": "75,87"
      }
    ],
    "id": "03bb0e70f8a44f4f8650ccf6d6ff03dc",
    "predicate mapping": [
      {
        "label": "position",
        "uri": "http://dbpedia.org/ontology/position",
        "seq": "63,71",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "former team",
        "uri": "http://dbpedia.org/ontology/formerTeam",
        "seq": "12,23",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "american football player",
        "uri": "http://dbpedia.org/ontology/AmericanFootballPlayer",
        "seq": "31,55",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Did Stan Lee create the Iceman comics?",
    "SerialNumber": "1550",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Iceman_(comics)\u003e \u003chttp://dbpedia.org/property/creators\u003e \u003chttp://dbpedia.org/resource/Stan_Lee\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Iceman",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Iceman_(comics)",
        "seq": "24,30"
      },
      {
        "label": "Stan Lee",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Stan_Lee",
        "seq": "4,12"
      }
    ],
    "id": "7645a46261d14d09a5d676889c29a695",
    "predicate mapping": [
      {
        "label": "create",
        "uri": "http://dbpedia.org/property/creators",
        "seq": "13,19",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "What are the movies whose director\u0027s daughter is Luke Scott?",
    "SerialNumber": "1551",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/child\u003e \u003chttp://dbpedia.org/resource/Luke_Scott_(director)\u003e . ?uri \u003chttp://dbpedia.org/property/director\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Luke Scott",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Luke_Scott_(director)",
        "seq": "49,59"
      }
    ],
    "id": "1941e1a9b0c24c018927477c05b1e5cc",
    "predicate mapping": [
      {
        "label": "daughter",
        "uri": "http://dbpedia.org/ontology/child",
        "seq": "37,45",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "director",
        "uri": "http://dbpedia.org/property/director",
        "seq": "26,34",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "13,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Whihc party of the Mizoram Legislative Assembly is the government type of kumta ?",
    "SerialNumber": "1552",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Kumta\u003e \u003chttp://dbpedia.org/ontology/governmentType\u003e ?uri. \u003chttp://dbpedia.org/resource/Mizoram_Legislative_Assembly\u003e \u003chttp://dbpedia.org/property/party\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "kumta",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Kumta",
        "seq": "74,79"
      },
      {
        "label": "Mizoram Legislative Assembly",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Mizoram_Legislative_Assembly",
        "seq": "19,47"
      }
    ],
    "id": "129712fe4ad5420f9c2c7ec7bf7b44be",
    "predicate mapping": [
      {
        "label": "government type",
        "uri": "http://dbpedia.org/ontology/governmentType",
        "seq": "55,70",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "party",
        "uri": "http://dbpedia.org/property/party",
        "seq": "6,11",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "Who is the mfr. of the engine used in Ford Transit ?",
    "SerialNumber": "1555",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Ford_Transit\u003e \u003chttp://dbpedia.org/property/engine\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/manufacturer\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Engine\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ford Transit",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ford_Transit",
        "seq": "38,50"
      }
    ],
    "id": "a3226ab632ca4954b180bdb3473e0aa4",
    "predicate mapping": [
      {
        "label": "engine",
        "uri": "http://dbpedia.org/property/engine",
        "seq": "23,29",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "mfr",
        "uri": "http://dbpedia.org/ontology/manufacturer",
        "seq": "11,14",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "engine",
        "uri": "http://dbpedia.org/ontology/Engine",
        "seq": "23,29",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the birthplace of the Ferrel Harris which is also resting palce of  Green Wix Unthank?",
    "SerialNumber": "1556",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Ferrel_Harris\u003e \u003chttp://dbpedia.org/property/birthplace\u003e ?uri. \u003chttp://dbpedia.org/resource/Green_Wix_Unthank\u003e \u003chttp://dbpedia.org/ontology/restingPlace\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ferrel Harris",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ferrel_Harris",
        "seq": "30,43"
      },
      {
        "label": "Green Wix Unthank",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Green_Wix_Unthank",
        "seq": "76,93"
      }
    ],
    "id": "4db21db33c10474689e1a77bde6e0c01",
    "predicate mapping": [
      {
        "label": "birthplace",
        "uri": "http://dbpedia.org/property/birthplace",
        "seq": "12,22",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "resting",
        "uri": "http://dbpedia.org/ontology/restingPlace",
        "seq": "58,65",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "Under which president was timothy l. woodruff a lieutenant?",
    "SerialNumber": "1564",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/lieutenant\u003e \u003chttp://dbpedia.org/resource/Timothy_L._Woodruff\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "timothy l. woodruff",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Timothy_L._Woodruff",
        "seq": "26,45"
      }
    ],
    "id": "2a4df258ebd845d6b60aa3371a5e639c",
    "predicate mapping": [
      {
        "label": "lieutenant",
        "uri": "http://dbpedia.org/property/lieutenant",
        "seq": "48,58",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "101",
    "question": "Ernest Rutherford was the advisor of how many people?",
    "SerialNumber": "1568",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/property/doctoralAdvisor\u003e \u003chttp://dbpedia.org/resource/Ernest_Rutherford\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ernest Rutherford",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ernest_Rutherford",
        "seq": "0,17"
      }
    ],
    "id": "78671ca44f6445c08adb515eb5031860",
    "predicate mapping": [
      {
        "label": "advisor",
        "uri": "http://dbpedia.org/property/doctoralAdvisor",
        "seq": "26,33",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which birthplace of Liliya Lobanova is also the location of the Snake Island ?",
    "SerialNumber": "1569",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Liliya_Lobanova\u003e \u003chttp://dbpedia.org/property/birthplace\u003e ?uri. \u003chttp://dbpedia.org/resource/Snake_Island_(Black_Sea)\u003e \u003chttp://dbpedia.org/property/locationCountry\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Liliya Lobanova",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Liliya_Lobanova",
        "seq": "20,35"
      },
      {
        "label": "Snake Island",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Snake_Island_(Black_Sea)",
        "seq": "64,76"
      }
    ],
    "id": "482ddc59c8bc469aba847456beec32d4",
    "predicate mapping": [
      {
        "label": "birthplace",
        "uri": "http://dbpedia.org/property/birthplace",
        "seq": "6,16",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "location",
        "uri": "http://dbpedia.org/property/locationCountry",
        "seq": "48,56",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the nationality of Aishath Saffa ?",
    "SerialNumber": "1571",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Aishath_Saffa\u003e \u003chttp://dbpedia.org/property/nationality\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Aishath Saffa",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Aishath_Saffa",
        "seq": "27,40"
      }
    ],
    "id": "7750fb1d95a7475ea49813b10023c2ed",
    "predicate mapping": [
      {
        "label": "nationality",
        "uri": "http://dbpedia.org/property/nationality",
        "seq": "12,23",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the currency of Kerguelen Islands ?",
    "SerialNumber": "1574",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Kerguelen_Islands\u003e \u003chttp://dbpedia.org/ontology/currency\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Kerguelen Islands",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Kerguelen_Islands",
        "seq": "24,41"
      }
    ],
    "id": "bd98b86d3b6c435aacc10d295ce6d25c",
    "predicate mapping": [
      {
        "label": "currency",
        "uri": "http://dbpedia.org/ontology/currency",
        "seq": "12,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "405",
    "question": "In how many nations is Coconut a common food ingredient?",
    "SerialNumber": "1576",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/ingredient\u003e \u003chttp://dbpedia.org/resource/Coconut\u003e . ?x \u003chttp://dbpedia.org/property/country\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Country\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Coconut",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Coconut",
        "seq": "23,30"
      }
    ],
    "id": "b3accf6c63ba441da4b7f73c93c7fc87",
    "predicate mapping": [
      {
        "label": "ingredient",
        "uri": "http://dbpedia.org/ontology/ingredient",
        "seq": "45,55",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "nation",
        "uri": "http://dbpedia.org/property/country",
        "seq": "12,18",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "nation",
        "uri": "http://dbpedia.org/ontology/Country",
        "seq": "12,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "401",
    "question": "How many games have been composed by Hirokazu Tanaka?",
    "SerialNumber": "1579",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/property/composer\u003e \u003chttp://dbpedia.org/resource/Hirokazu_Tanaka\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/VideoGame\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Hirokazu Tanaka",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Hirokazu_Tanaka",
        "seq": "37,52"
      }
    ],
    "id": "e845283de6574fc59a1cce2cc027c070",
    "predicate mapping": [
      {
        "label": "composed",
        "uri": "http://dbpedia.org/property/composer",
        "seq": "25,33",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "games",
        "uri": "http://dbpedia.org/ontology/VideoGame",
        "seq": "9,14",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Was Queen Latifah in the U.N.I.T.Y. group?",
    "SerialNumber": "1582",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/U.N.I.T.Y.\u003e \u003chttp://dbpedia.org/ontology/musicalArtist\u003e \u003chttp://dbpedia.org/resource/Queen_Latifah\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "U.N.I.T.Y.",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/U.N.I.T.Y.",
        "seq": "25,35"
      },
      {
        "label": "Queen Latifah",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Queen_Latifah",
        "seq": "4,17"
      }
    ],
    "id": "67483b164094400d9d576eccb59768bd",
    "predicate mapping": [
      {
        "label": "group",
        "uri": "http://dbpedia.org/ontology/musicalArtist",
        "seq": "36,41",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "111",
    "question": "List the total number of regions of the building whose are located in\\Grand Forks Air Force Base?",
    "SerialNumber": "1584",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/region\u003e \u003chttp://dbpedia.org/resource/Grand_Forks_Air_Force_Base\u003e . ?x \u003chttp://dbpedia.org/ontology/region\u003e ?uri }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Grand Forks Air Force Base",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Grand_Forks_Air_Force_Base",
        "seq": "70,96"
      }
    ],
    "id": "8346271fdbeb43c38d5f057dcd618d8f",
    "predicate mapping": [
      {
        "label": "region",
        "uri": "http://dbpedia.org/ontology/region",
        "seq": "25,31",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "region",
        "uri": "http://dbpedia.org/ontology/region",
        "seq": "25,31",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "Which office holder owes its allegiance to a state whose capital town is Jamestown, Virginia?",
    "SerialNumber": "1586",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/capital\u003e \u003chttp://dbpedia.org/resource/Jamestown,_Virginia\u003e . ?uri \u003chttp://dbpedia.org/property/allegiance\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/OfficeHolder\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jamestown, Virginia",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Jamestown,_Virginia",
        "seq": "73,92"
      }
    ],
    "id": "69cb6ce0352f474abab40245852c8670",
    "predicate mapping": [
      {
        "label": "capital town",
        "uri": "http://dbpedia.org/ontology/capital",
        "seq": "57,69",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "allegiance",
        "uri": "http://dbpedia.org/property/allegiance",
        "seq": "29,39",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "office holder",
        "uri": "http://dbpedia.org/ontology/OfficeHolder",
        "seq": "6,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "Count the different alma maters of people employed by the CNN",
    "SerialNumber": "1588",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/employer\u003e \u003chttp://dbpedia.org/resource/CNN\u003e . ?x \u003chttp://dbpedia.org/ontology/almaMater\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "CNN",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/CNN",
        "seq": "58,61"
      }
    ],
    "id": "432c5c5d446a4b608c1de47eac01170d",
    "predicate mapping": [
      {
        "label": "employed by",
        "uri": "http://dbpedia.org/property/employer",
        "seq": "42,53",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/ontology/almaMater",
        "seq": "20,30",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "What is the common governing body of the Naval Air Facility Adak and Oahu Railway and Land Company?",
    "SerialNumber": "1590",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Naval_Air_Facility_Adak\u003e \u003chttp://dbpedia.org/property/governingBody\u003e ?uri. \u003chttp://dbpedia.org/resource/Oahu_Railway_and_Land_Company\u003e \u003chttp://dbpedia.org/property/governingBody\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Naval Air Facility Adak",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Naval_Air_Facility_Adak",
        "seq": "41,64"
      },
      {
        "label": "Oahu Railway and Land Company",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Oahu_Railway_and_Land_Company",
        "seq": "69,98"
      }
    ],
    "id": "e204ffab3fc443009fdb2fe1076fe742",
    "predicate mapping": [
      {
        "label": "governing body",
        "uri": "http://dbpedia.org/property/governingBody",
        "seq": "19,33",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "governing body",
        "uri": "http://dbpedia.org/property/governingBody",
        "seq": "19,33",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Was the Funky Lab Rat released in North America?",
    "SerialNumber": "1592",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Funky_Lab_Rat\u003e \u003chttp://dbpedia.org/property/released\u003e \u003chttp://dbpedia.org/resource/North_America\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Funky Lab Rat",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Funky_Lab_Rat",
        "seq": "8,21"
      },
      {
        "label": "North America",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/North_America",
        "seq": "34,47"
      }
    ],
    "id": "3ea8d607953f4c308929055937b16aaa",
    "predicate mapping": [
      {
        "label": "released",
        "uri": "http://dbpedia.org/property/released",
        "seq": "22,30",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Which nation is the origin of Dornier Aerodyne ?",
    "SerialNumber": "1593",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Dornier_Aerodyne\u003e \u003chttp://dbpedia.org/property/nationalOrigin\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Dornier Aerodyne",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Dornier_Aerodyne",
        "seq": "30,46"
      }
    ],
    "id": "7852a6da015f4c208bb9f11e5e423d74",
    "predicate mapping": [
      {
        "label": "origin nation",
        "uri": "http://dbpedia.org/property/nationalOrigin",
        "seq": "-1,12",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Where is the rival school of Somerset Berkeley Regional High school?",
    "SerialNumber": "1594",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/rival\u003e \u003chttp://dbpedia.org/resource/Somerset_Berkley_Regional_High_School\u003e . ?x \u003chttp://dbpedia.org/ontology/region\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/School\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Somerset Berkeley Regional High school",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Somerset_Berkley_Regional_High_School",
        "seq": "29,67"
      }
    ],
    "id": "7b5b0c8cb0ab4bd392162a7625ee8375",
    "predicate mapping": [
      {
        "label": "rival",
        "uri": "http://dbpedia.org/ontology/rival",
        "seq": "13,18",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "Region",
        "uri": "http://dbpedia.org/ontology/region",
        "seq": "47,53",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "school",
        "uri": "http://dbpedia.org/ontology/School",
        "seq": "19,25",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What is the state of the settlement, which is the sub assembly of Mohamedia, Tunisia ?",
    "SerialNumber": "1596",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Mohamedia,_Tunisia\u003e \u003chttp://dbpedia.org/ontology/isPartOf\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/country\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Mohamedia, Tunisia",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Mohamedia,_Tunisia",
        "seq": "66,84"
      }
    ],
    "id": "06b5a80c33ba482fae7bb1d6ca6f4466",
    "predicate mapping": [
      {
        "label": "assembly of",
        "uri": "http://dbpedia.org/ontology/isPartOf",
        "seq": "54,65",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "state",
        "uri": "http://dbpedia.org/ontology/country",
        "seq": "12,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the television show whose company is HBO and Playtone?",
    "SerialNumber": "1597",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/company\u003e \u003chttp://dbpedia.org/resource/HBO\u003e . ?uri \u003chttp://dbpedia.org/property/company\u003e \u003chttp://dbpedia.org/resource/Playtone\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "HBO",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/HBO",
        "seq": "42,45"
      },
      {
        "label": "Playtone",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Playtone",
        "seq": "50,58"
      }
    ],
    "id": "6a5d40f8a52947ff8f4c0f896df790b9",
    "predicate mapping": [
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/company",
        "seq": "31,38",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/property/company",
        "seq": "31,38",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "9,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What television show are distributed by Broadcast syndication?",
    "SerialNumber": "1599",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/distributor\u003e \u003chttp://dbpedia.org/resource/Broadcast_syndication\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Broadcast syndication",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Broadcast_syndication",
        "seq": "40,61"
      }
    ],
    "id": "278c456525224d648387222246b05683",
    "predicate mapping": [
      {
        "label": "distributed by",
        "uri": "http://dbpedia.org/ontology/distributor",
        "seq": "25,39",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "5,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Who is the common parent of Gettv and hypnotize mind ?",
    "SerialNumber": "1600",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/GetTV\u003e \u003chttp://dbpedia.org/ontology/parentOrganisation\u003e ?uri. \u003chttp://dbpedia.org/resource/Hypnotize_Minds\u003e \u003chttp://dbpedia.org/property/parent\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Gettv",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/GetTV",
        "seq": "28,33"
      },
      {
        "label": "hypnotize mind ",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Hypnotize_Minds",
        "seq": "38,53"
      }
    ],
    "id": "b0d14b766ec544f7b6027a2ff2c21705",
    "predicate mapping": [
      {
        "label": "parent",
        "uri": "http://dbpedia.org/ontology/parentOrganisation",
        "seq": "18,24",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "parent",
        "uri": "http://dbpedia.org/property/parent",
        "seq": "18,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the mascot of Austin College ?",
    "SerialNumber": "1601",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Austin_College\u003e \u003chttp://dbpedia.org/property/mascot\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Austin College",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Austin_College",
        "seq": "19,33"
      }
    ],
    "id": "db8ba3e09dd14372b45c7565c2b078f7",
    "predicate mapping": [
      {
        "label": "mascot",
        "uri": "http://dbpedia.org/property/mascot",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What is the birth city of trainer of Leallah?",
    "SerialNumber": "1602",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Leallah\u003e \u003chttp://dbpedia.org/property/trainer\u003e ?x . ?x \u003chttp://dbpedia.org/property/birthPlace\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Leallah",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Leallah",
        "seq": "37,44"
      }
    ],
    "id": "e61297db8f36438f953bf3f79b912f41",
    "predicate mapping": [
      {
        "label": "trainer",
        "uri": "http://dbpedia.org/property/trainer",
        "seq": "26,33",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "birth city",
        "uri": "http://dbpedia.org/property/birthPlace",
        "seq": "12,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "307",
    "question": "Name the person with opponents Ike Clanton and Tom McLaury?",
    "SerialNumber": "1603",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/ontology/opponent\u003e \u003chttp://dbpedia.org/resource/Ike_Clanton\u003e . ?uri \u003chttp://dbpedia.org/ontology/opponent\u003e \u003chttp://dbpedia.org/resource/Tom_McLaury\u003e . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ike Clanton",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ike_Clanton",
        "seq": "31,42"
      },
      {
        "label": "Tom McLaury",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Tom_McLaury",
        "seq": "47,58"
      }
    ],
    "id": "698471b904f24b2aa626bb6426728661",
    "predicate mapping": [
      {
        "label": "opponent",
        "uri": "http://dbpedia.org/ontology/opponent",
        "seq": "21,29",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "opponent",
        "uri": "http://dbpedia.org/ontology/opponent",
        "seq": "21,29",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/Person",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which city was founded by  George Washington and John Forbes (British Army officer)?",
    "SerialNumber": "1608",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/founder\u003e \u003chttp://dbpedia.org/resource/George_Washington\u003e . ?uri \u003chttp://dbpedia.org/ontology/founder\u003e \u003chttp://dbpedia.org/resource/John_Forbes_(British_Army_officer)\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/City\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "George Washington",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/George_Washington",
        "seq": "27,44"
      },
      {
        "label": "John Forbes (British Army officer)",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/John_Forbes_(British_Army_officer)",
        "seq": "49,83"
      }
    ],
    "id": "8e8ac76792d840c9849445eb2ee65da9",
    "predicate mapping": [
      {
        "label": "was founded by",
        "uri": "http://dbpedia.org/property/founder",
        "seq": "11,25",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "was founded by",
        "uri": "http://dbpedia.org/ontology/founder",
        "seq": "11,25",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "city",
        "uri": "http://dbpedia.org/ontology/City",
        "seq": "6,10",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "List the country of Tokaj wine region ?",
    "SerialNumber": "1609",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Tokaj_wine_region\u003e \u003chttp://dbpedia.org/property/country\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Tokaj wine region",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Tokaj_wine_region",
        "seq": "20,37"
      }
    ],
    "id": "778cbddc962441b5b7e5928f7fbd4c0f",
    "predicate mapping": [
      {
        "label": "country",
        "uri": "http://dbpedia.org/property/country",
        "seq": "9,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Who are the golf players whose college is Arizona State Sun Devils?",
    "SerialNumber": "1610",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/college\u003e \u003chttp://dbpedia.org/resource/Arizona_State_Sun_Devils\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/GolfPlayer\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Arizona State Sun Devils",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Arizona_State_Sun_Devils",
        "seq": "42,66"
      }
    ],
    "id": "d291a478d5a74fb6bebdcc6c74bf55c8",
    "predicate mapping": [
      {
        "label": "college",
        "uri": "http://dbpedia.org/ontology/college",
        "seq": "31,38",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "golf player",
        "uri": "http://dbpedia.org/ontology/GolfPlayer",
        "seq": "12,23",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Which school did Robbie Diack attend?",
    "SerialNumber": "1615",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Robbie_Diack\u003e \u003chttp://dbpedia.org/property/school\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Robbie Diack",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Robbie_Diack",
        "seq": "17,29"
      }
    ],
    "id": "d6aaeb41aef44a8b8bffd1a5e90e3d16",
    "predicate mapping": [
      {
        "label": "school",
        "uri": "http://dbpedia.org/property/school",
        "seq": "6,12",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who is the film star of On Air with Ryan Seacrest ?",
    "SerialNumber": "1616",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/On_Air_with_Ryan_Seacrest\u003e \u003chttp://dbpedia.org/ontology/starring\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "On Air with Ryan Seacrest",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/On_Air_with_Ryan_Seacrest",
        "seq": "24,49"
      }
    ],
    "id": "f1036fdd007245499c769a21e5ecb88e",
    "predicate mapping": [
      {
        "label": "star",
        "uri": "http://dbpedia.org/ontology/starring",
        "seq": "16,20",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who is the builder of Atamurat-Kerkichi Bridge ?",
    "SerialNumber": "1619",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Atamurat-Kerkichi_Bridge\u003e \u003chttp://dbpedia.org/property/builder\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Atamurat-Kerkichi Bridge",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Atamurat-Kerkichi_Bridge",
        "seq": "22,46"
      }
    ],
    "id": "87745e512088474b8c15730c5bb6c4c1",
    "predicate mapping": [
      {
        "label": "builder",
        "uri": "http://dbpedia.org/property/builder",
        "seq": "11,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "To which destinations does Air 2000 fly?",
    "SerialNumber": "1622",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Air_2000\u003e \u003chttp://dbpedia.org/property/destinations\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Air 2000",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Air_2000",
        "seq": "27,35"
      }
    ],
    "id": "31f62ce6b5864c64a97f7cc543adf78e",
    "predicate mapping": [
      {
        "label": "destinations",
        "uri": "http://dbpedia.org/property/destinations",
        "seq": "9,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Did Stan Lee write the Daredevils?",
    "SerialNumber": "1625",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/The_Daredevils\u003e \u003chttp://dbpedia.org/property/writers\u003e \u003chttp://dbpedia.org/resource/Stan_Lee\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "the Daredevils",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Daredevils",
        "seq": "19,33"
      },
      {
        "label": "Stan Lee",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Stan_Lee",
        "seq": "4,12"
      }
    ],
    "id": "364f8115122d4456bd0b8b6d9667f399",
    "predicate mapping": [
      {
        "label": "write",
        "uri": "http://dbpedia.org/property/writers",
        "seq": "13,18",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "To what region is Sukhumbhand Paribatra, a leader?",
    "SerialNumber": "1628",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/leaderName\u003e \u003chttp://dbpedia.org/resource/Sukhumbhand_Paribatra\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Region\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Sukhumbhand Paribatra",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Sukhumbhand_Paribatra",
        "seq": "18,39"
      }
    ],
    "id": "37c6c9560a004182b868a8325b4125f7",
    "predicate mapping": [
      {
        "label": "leader",
        "uri": "http://dbpedia.org/ontology/leaderName",
        "seq": "43,49",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "region",
        "uri": "http://dbpedia.org/ontology/Region",
        "seq": "8,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Where was Picasso\u0027s Last Words recorded ?",
    "SerialNumber": "1629",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Picasso\u0027s_Last_Words_(Drink_to_Me)\u003e \u003chttp://dbpedia.org/property/recorded\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Picasso\u0027s Last Words",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Picasso\u0027s_Last_Words_(Drink_to_Me)",
        "seq": "10,30"
      }
    ],
    "id": "8427427253454182aca2857c9c998594",
    "predicate mapping": [
      {
        "label": "recorded",
        "uri": "http://dbpedia.org/property/recorded",
        "seq": "31,39",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What is the largest city of the birthplace of Pat Kirkwood?",
    "SerialNumber": "1630",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Pat_Kirkwood_(racing_driver)\u003e \u003chttp://dbpedia.org/property/birthplace\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/largestCity\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Pat Kirkwood",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Pat_Kirkwood_(racing_driver)",
        "seq": "46,58"
      }
    ],
    "id": "b39bd89257314e1590322c36e2473a36",
    "predicate mapping": [
      {
        "label": "birthplace",
        "uri": "http://dbpedia.org/property/birthplace",
        "seq": "32,42",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "largest city",
        "uri": "http://dbpedia.org/ontology/largestCity",
        "seq": "12,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "406",
    "question": "For how many movies have the music composer composed music, who have collaborated with Yes ?",
    "SerialNumber": "1631",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/associatedMusicalArtist\u003e \u003chttp://dbpedia.org/resource/Yes_(band)\u003e . ?uri \u003chttp://dbpedia.org/ontology/musicComposer\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Yes",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Yes_(band)",
        "seq": "87,90"
      }
    ],
    "id": "b202004bedfc47c3ab2bf3c5a1cadc48",
    "predicate mapping": [
      {
        "label": "music",
        "uri": "http://dbpedia.org/ontology/associatedMusicalArtist",
        "seq": "29,34",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "music composer",
        "uri": "http://dbpedia.org/ontology/musicComposer",
        "seq": "29,43",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "13,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the largest city of Pulau Ubin ?",
    "SerialNumber": "1632",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Pulau_Ubin\u003e \u003chttp://dbpedia.org/ontology/largestCity\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Pulau Ubin",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Pulau_Ubin",
        "seq": "28,38"
      }
    ],
    "id": "08a500572859403193faa199f742c448",
    "predicate mapping": [
      {
        "label": "largest city",
        "uri": "http://dbpedia.org/ontology/largestCity",
        "seq": "12,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which key perosn of the Elders is also the president of united World College ?",
    "SerialNumber": "1634",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/The_Elders_(organization)\u003e \u003chttp://dbpedia.org/property/keyPeople\u003e ?uri. \u003chttp://dbpedia.org/resource/United_World_Colleges\u003e \u003chttp://dbpedia.org/ontology/president\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "the Elders",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Elders_(organization)",
        "seq": "20,30"
      },
      {
        "label": "united World College",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/United_World_Colleges",
        "seq": "56,76"
      }
    ],
    "id": "ec8a5db122044505b00fd65fb461df70",
    "predicate mapping": [
      {
        "label": "key",
        "uri": "http://dbpedia.org/property/keyPeople",
        "seq": "6,9",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "president",
        "uri": "http://dbpedia.org/ontology/president",
        "seq": "43,52",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "111",
    "question": "What is the total number of other nearest countries to the lakes whose nearest countries is Uganda?",
    "SerialNumber": "1635",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/nearestCity\u003e \u003chttp://dbpedia.org/resource/Uganda\u003e . ?x \u003chttp://dbpedia.org/ontology/nearestCity\u003e ?uri }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Uganda",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Uganda",
        "seq": "92,98"
      }
    ],
    "id": "6b13f7438d6d4847b09299089889dd7e",
    "predicate mapping": [
      {
        "label": "nearest",
        "uri": "http://dbpedia.org/ontology/nearestCity",
        "seq": "34,41",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "nearest",
        "uri": "http://dbpedia.org/ontology/nearestCity",
        "seq": "34,41",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "Name the shows whose theme was composed by a band in which Jay Lane used to be?",
    "SerialNumber": "1638",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/formerBandMember\u003e \u003chttp://dbpedia.org/resource/Jay_Lane\u003e . ?uri \u003chttp://dbpedia.org/property/themeMusicComposer\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jay Lane",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Jay_Lane",
        "seq": "59,67"
      }
    ],
    "id": "379c894ed50943efa6daca5de2dba735",
    "predicate mapping": [
      {
        "label": "band",
        "uri": "http://dbpedia.org/ontology/formerBandMember",
        "seq": "45,49",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "composed",
        "uri": "http://dbpedia.org/property/themeMusicComposer",
        "seq": "31,39",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "9,14",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "401",
    "question": "How many units follow the US Navy Department\u0027s command structure?",
    "SerialNumber": "1642",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/ontology/commandStructure\u003e \u003chttp://dbpedia.org/resource/United_States_Department_of_the_Navy\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MilitaryUnit\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "US Navy Department",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/United_States_Department_of_the_Navy",
        "seq": "26,44"
      }
    ],
    "id": "d8f5b908b827406cb94b84acf46a4d08",
    "predicate mapping": [
      {
        "label": "command structure",
        "uri": "http://dbpedia.org/ontology/commandStructure",
        "seq": "47,64",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "units",
        "uri": "http://dbpedia.org/ontology/MilitaryUnit",
        "seq": "9,14",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which education institute of Duncan U. Fletcher is also the university of Vanderbilt Commodores ?",
    "SerialNumber": "1645",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Duncan_U._Fletcher\u003e \u003chttp://dbpedia.org/ontology/almaMater\u003e ?uri. \u003chttp://dbpedia.org/resource/Vanderbilt_Commodores\u003e \u003chttp://dbpedia.org/ontology/university\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Duncan U. Fletcher",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Duncan_U._Fletcher",
        "seq": "29,47"
      },
      {
        "label": "Vanderbilt Commodores",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Vanderbilt_Commodores",
        "seq": "74,95"
      }
    ],
    "id": "24b693a3d51d407081f086a373e872c9",
    "predicate mapping": [
      {
        "label": "education",
        "uri": "http://dbpedia.org/ontology/almaMater",
        "seq": "6,15",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "university",
        "uri": "http://dbpedia.org/ontology/university",
        "seq": "60,70",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which license provider of MSX basic is also the designer of Language Integrated Query ?",
    "SerialNumber": "1646",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Language_Integrated_Query\u003e \u003chttp://dbpedia.org/ontology/designer\u003e ?uri. \u003chttp://dbpedia.org/resource/MSX_BASIC\u003e \u003chttp://dbpedia.org/property/license\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Language Integrated Query",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Language_Integrated_Query",
        "seq": "60,85"
      },
      {
        "label": "MSX basic",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/MSX_BASIC",
        "seq": "26,35"
      }
    ],
    "id": "5581904287e54612991d36031d060a31",
    "predicate mapping": [
      {
        "label": "designer",
        "uri": "http://dbpedia.org/ontology/designer",
        "seq": "48,56",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "license",
        "uri": "http://dbpedia.org/property/license",
        "seq": "6,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "What are the awards received by spouse of Ellen Lundstrom?",
    "SerialNumber": "1649",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/spouse\u003e \u003chttp://dbpedia.org/resource/Ellen_Lundström\u003e . ?x \u003chttp://dbpedia.org/property/awards\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ellen Lundstrom",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Ellen_Lundström",
        "seq": "42,57"
      }
    ],
    "id": "57b3533cb2b741e1a567c34b4ff71b21",
    "predicate mapping": [
      {
        "label": "spouse",
        "uri": "http://dbpedia.org/ontology/spouse",
        "seq": "32,38",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "awards received",
        "uri": "http://dbpedia.org/property/awards",
        "seq": "13,28",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Is Plymouth High School for Girls in Devon county?",
    "SerialNumber": "1650",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Plymouth_High_School_for_Girls\u003e \u003chttp://dbpedia.org/ontology/county\u003e \u003chttp://dbpedia.org/resource/Devon\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Plymouth High School for Girls",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Plymouth_High_School_for_Girls",
        "seq": "3,33"
      },
      {
        "label": "Devon",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Devon",
        "seq": "37,42"
      }
    ],
    "id": "92a16632674c43289898624bf2cb23aa",
    "predicate mapping": [
      {
        "label": "county",
        "uri": "http://dbpedia.org/ontology/county",
        "seq": "43,49",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "In which city is the hub airport of Club One Air?",
    "SerialNumber": "1651",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Club_One_Air\u003e \u003chttp://dbpedia.org/ontology/hubAirport\u003e ?x . ?x \u003chttp://dbpedia.org/property/cityServed\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Club One Air",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Club_One_Air",
        "seq": "36,48"
      }
    ],
    "id": "b8c65342df0845babde8d67c22d0343c",
    "predicate mapping": [
      {
        "label": "hub airport",
        "uri": "http://dbpedia.org/ontology/hubAirport",
        "seq": "21,32",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "city",
        "uri": "http://dbpedia.org/property/cityServed",
        "seq": "9,13",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "List the first drivers of Grand Prixes where Mika Hakkinen was a pole driver.",
    "SerialNumber": "1652",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/poleDriver\u003e \u003chttp://dbpedia.org/resource/Mika_Häkkinen\u003e . ?x \u003chttp://dbpedia.org/ontology/firstDriver\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/GrandPrix\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Mika Hakkinen",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Mika_Häkkinen",
        "seq": "45,58"
      }
    ],
    "id": "15dd4008b74d40e89454e046b370e8f8",
    "predicate mapping": [
      {
        "label": "pole driver",
        "uri": "http://dbpedia.org/ontology/poleDriver",
        "seq": "65,76",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "first driver",
        "uri": "http://dbpedia.org/ontology/firstDriver",
        "seq": "9,21",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "Grand Prix",
        "uri": "http://dbpedia.org/ontology/GrandPrix",
        "seq": "26,36",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who is the designer of Saleen S5S Raptor ?",
    "SerialNumber": "1657",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Saleen_S5S_Raptor\u003e \u003chttp://dbpedia.org/property/designer\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Saleen S5S Raptor",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Saleen_S5S_Raptor",
        "seq": "23,40"
      }
    ],
    "id": "900865ae340c40d793d500a8d01ca479",
    "predicate mapping": [
      {
        "label": "designer",
        "uri": "http://dbpedia.org/property/designer",
        "seq": "11,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "906",
    "question": "Name some TV shows whose theme is made by a band associated with Buckethead?",
    "SerialNumber": "1658",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/associatedBand\u003e \u003chttp://dbpedia.org/resource/Buckethead\u003e . ?uri \u003chttp://dbpedia.org/property/themeMusicComposer\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Buckethead",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Buckethead",
        "seq": "65,75"
      }
    ],
    "id": "6e4a15a53aae46c98668eb591c9d4c6d",
    "predicate mapping": [
      {
        "label": "associated band",
        "uri": "http://dbpedia.org/ontology/associatedBand",
        "seq": "-1,14",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "theme",
        "uri": "http://dbpedia.org/property/themeMusicComposer",
        "seq": "25,30",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "13,18",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "How many different people hold authority over the members of Balanidae family?",
    "SerialNumber": "1659",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/family\u003e \u003chttp://dbpedia.org/resource/Balanidae\u003e . ?x \u003chttp://dbpedia.org/ontology/binomialAuthority\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Balanidae",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Balanidae",
        "seq": "61,70"
      }
    ],
    "id": "299a2517930845609e238e4349ba2e5a",
    "predicate mapping": [
      {
        "label": "family",
        "uri": "http://dbpedia.org/ontology/family",
        "seq": "71,77",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "authority",
        "uri": "http://dbpedia.org/ontology/binomialAuthority",
        "seq": "31,40",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Which fields\u0027 academic journals are found in the US?",
    "SerialNumber": "1660",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/country\u003e \u003chttp://dbpedia.org/resource/United_States\u003e . ?x \u003chttp://dbpedia.org/property/discipline\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "US",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/United_States",
        "seq": "49,51"
      }
    ],
    "id": "e97e582bdce440f9acac0f42cfa04053",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/country",
        "seq": "42,44",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "fields",
        "uri": "http://dbpedia.org/property/discipline",
        "seq": "6,12",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "Which basketball team\u0027s coach is Kurt Rambis?",
    "SerialNumber": "1662",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/coach\u003e \u003chttp://dbpedia.org/resource/Kurt_Rambis\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Kurt Rambis",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Kurt_Rambis",
        "seq": "33,44"
      }
    ],
    "id": "663ee78f1ef04f2e993a7e2bfc3a33f6",
    "predicate mapping": [
      {
        "label": "coach",
        "uri": "http://dbpedia.org/ontology/coach",
        "seq": "24,29",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "111",
    "question": "How many other region served are there of the companies which serves  Pacific Ocean ?",
    "SerialNumber": "1663",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/regionServed\u003e \u003chttp://dbpedia.org/resource/Pacific_Ocean\u003e . ?x \u003chttp://dbpedia.org/ontology/regionServed\u003e ?uri }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Pacific Ocean",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Pacific_Ocean",
        "seq": "70,83"
      }
    ],
    "id": "ef2ee51cf7824d8fa2fd0a5ab306a4dc",
    "predicate mapping": [
      {
        "label": "region served",
        "uri": "http://dbpedia.org/ontology/regionServed",
        "seq": "15,28",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "region served",
        "uri": "http://dbpedia.org/ontology/regionServed",
        "seq": "15,28",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the alma mater of Ernest de Saisset ?",
    "SerialNumber": "1665",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Ernest_de_Saisset\u003e \u003chttp://dbpedia.org/ontology/almaMater\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ernest de Saisset",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ernest_de_Saisset",
        "seq": "23,40"
      }
    ],
    "id": "ec64691c6956449cb904adfc2f248e5e",
    "predicate mapping": [
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/ontology/almaMater",
        "seq": "9,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "Whose constituency is Duboce Triangle ?",
    "SerialNumber": "1667",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/constituency\u003e \u003chttp://dbpedia.org/resource/Duboce_Triangle,_San_Francisco\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Duboce Triangle",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Duboce_Triangle,_San_Francisco",
        "seq": "22,37"
      }
    ],
    "id": "dd2c217006414f468433007e3ee89d47",
    "predicate mapping": [
      {
        "label": "constituency",
        "uri": "http://dbpedia.org/property/constituency",
        "seq": "6,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the office holder with predecessor as Mark Latham and partner Tim Mathieson ?",
    "SerialNumber": "1668",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/predecessor\u003e \u003chttp://dbpedia.org/resource/Mark_Latham\u003e . ?uri \u003chttp://dbpedia.org/ontology/partner\u003e \u003chttp://dbpedia.org/resource/Tim_Mathieson\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/OfficeHolder\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Mark Latham",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Mark_Latham",
        "seq": "43,54"
      },
      {
        "label": "Tim Mathieson",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Tim_Mathieson",
        "seq": "67,80"
      }
    ],
    "id": "df38113ac72a4b079f4b7ce32a5fab4d",
    "predicate mapping": [
      {
        "label": "predecessor",
        "uri": "http://dbpedia.org/property/predecessor",
        "seq": "28,39",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "partner",
        "uri": "http://dbpedia.org/ontology/partner",
        "seq": "59,66",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "office holder",
        "uri": "http://dbpedia.org/ontology/OfficeHolder",
        "seq": "9,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What are some party leaders of the parties which have had a seat in Berlin?",
    "SerialNumber": "1669",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/headquarter\u003e \u003chttp://dbpedia.org/resource/Berlin\u003e . ?x \u003chttp://dbpedia.org/ontology/leader\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/PoliticalParty\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Berlin",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Berlin",
        "seq": "68,74"
      }
    ],
    "id": "279603f7c94547af858759999611f14d",
    "predicate mapping": [
      {
        "label": "seat",
        "uri": "http://dbpedia.org/ontology/headquarter",
        "seq": "60,64",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "leader",
        "uri": "http://dbpedia.org/ontology/leader",
        "seq": "20,26",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "party",
        "uri": "http://dbpedia.org/ontology/PoliticalParty",
        "seq": "14,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the location city of the Denver Broncos which is also  place of birth of the William C. Cramer ?",
    "SerialNumber": "1671",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Denver_Broncos\u003e \u003chttp://dbpedia.org/ontology/locationCity\u003e ?uri. \u003chttp://dbpedia.org/resource/William_C._Cramer\u003e \u003chttp://dbpedia.org/property/placeOfBirth\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Denver Broncos",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Denver_Broncos",
        "seq": "33,47"
      },
      {
        "label": "William C. Cramer",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/William_C._Cramer",
        "seq": "85,102"
      }
    ],
    "id": "a39c0776beac448ba93918e218e263d9",
    "predicate mapping": [
      {
        "label": "location city",
        "uri": "http://dbpedia.org/ontology/locationCity",
        "seq": "12,25",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "place of birth",
        "uri": "http://dbpedia.org/property/placeOfBirth",
        "seq": "63,77",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which video game\u0027s artist is Hiroji Kiyotake and computing platform is Virtual Console?",
    "SerialNumber": "1673",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/artist\u003e \u003chttp://dbpedia.org/resource/Hiroji_Kiyotake\u003e . ?uri \u003chttp://dbpedia.org/ontology/computingPlatform\u003e \u003chttp://dbpedia.org/resource/Virtual_Console\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/VideoGame\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Hiroji Kiyotake",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Hiroji_Kiyotake",
        "seq": "29,44"
      },
      {
        "label": "Virtual Console",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Virtual_Console",
        "seq": "71,86"
      }
    ],
    "id": "a6422effde9d467e8150547dafbdb5f6",
    "predicate mapping": [
      {
        "label": "artist",
        "uri": "http://dbpedia.org/property/artist",
        "seq": "19,25",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "computing platform",
        "uri": "http://dbpedia.org/ontology/computingPlatform",
        "seq": "49,67",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "video game",
        "uri": "http://dbpedia.org/ontology/VideoGame",
        "seq": "6,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "List the characters of Lysistrata ?",
    "SerialNumber": "1676",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Lysistrata\u003e \u003chttp://dbpedia.org/property/characters\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Lysistrata",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Lysistrata",
        "seq": "23,33"
      }
    ],
    "id": "f84586d24de34750a3807a55539f8bf9",
    "predicate mapping": [
      {
        "label": "characters",
        "uri": "http://dbpedia.org/property/characters",
        "seq": "9,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Where is the office of P Elmo Futrell Jr?",
    "SerialNumber": "1677",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/P._Elmo_Futrell,_Jr.\u003e \u003chttp://dbpedia.org/property/office\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "P Elmo Futrell Jr",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/P._Elmo_Futrell,_Jr.",
        "seq": "25,40"
      }
    ],
    "id": "6165d3f09df840a0920e30b60a8a66ed",
    "predicate mapping": [
      {
        "label": "office",
        "uri": "http://dbpedia.org/property/office",
        "seq": "13,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "What is the baseball team whose club manager\u0027s debut team is Houston Astros?",
    "SerialNumber": "1679",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/debutTeam\u003e \u003chttp://dbpedia.org/resource/Houston_Astros\u003e . ?uri \u003chttp://dbpedia.org/ontology/manager\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/BaseballTeam\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Houston Astros",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Houston_Astros",
        "seq": "61,75"
      }
    ],
    "id": "9a52bd8a34ec4f4ea8936de7ddaf2d47",
    "predicate mapping": [
      {
        "label": "debut team",
        "uri": "http://dbpedia.org/ontology/debutTeam",
        "seq": "47,57",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "club manager",
        "uri": "http://dbpedia.org/ontology/manager",
        "seq": "32,44",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "baseball team",
        "uri": "http://dbpedia.org/ontology/BaseballTeam",
        "seq": "12,25",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "List the producer of the television shows distributed by FremantleMedia.",
    "SerialNumber": "1680",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/distributor\u003e \u003chttp://dbpedia.org/resource/FremantleMedia\u003e . ?x \u003chttp://dbpedia.org/ontology/producer\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "FremantleMedia",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/FremantleMedia",
        "seq": "57,71"
      }
    ],
    "id": "d9a5d02d87f1498995339381249f32ad",
    "predicate mapping": [
      {
        "label": "distributed by",
        "uri": "http://dbpedia.org/property/distributor",
        "seq": "42,56",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "producer",
        "uri": "http://dbpedia.org/ontology/producer",
        "seq": "9,17",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "25,40",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What stadium\u0027s operator is Stan Kroenke",
    "SerialNumber": "1681",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/operator\u003e \u003chttp://dbpedia.org/resource/Stan_Kroenke\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Stadium\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Stan Kroenke",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Stan_Kroenke",
        "seq": "27,39"
      }
    ],
    "id": "fdff8ccca9db497f99b8d58a8528289e",
    "predicate mapping": [
      {
        "label": "operator",
        "uri": "http://dbpedia.org/ontology/operator",
        "seq": "15,23",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "stadium",
        "uri": "http://dbpedia.org/ontology/Stadium",
        "seq": "5,12",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "11",
    "question": "List all binomial authority of the insects whose one of the  binomial authority is douard Mntries?",
    "SerialNumber": "1683",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/binomialAuthority\u003e \u003chttp://dbpedia.org/resource/Édouard_Ménétries\u003e . ?x \u003chttp://dbpedia.org/ontology/binomialAuthority\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "douard Mntries",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Édouard_Ménétries",
        "seq": "49,52"
      }
    ],
    "id": "2bb47e7a93f54b089d92f2822728eb97",
    "predicate mapping": [
      {
        "label": "binomial authority",
        "uri": "http://dbpedia.org/ontology/binomialAuthority",
        "seq": "9,27",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "binomial authority",
        "uri": "http://dbpedia.org/ontology/binomialAuthority",
        "seq": "9,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "In which state is Red Willow Creek?",
    "SerialNumber": "1684",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Red_Willow_Creek\u003e \u003chttp://dbpedia.org/ontology/state\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Red Willow Creek",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Red_Willow_Creek",
        "seq": "18,34"
      }
    ],
    "id": "d173daed7ab8420da0c8c83b7327b298",
    "predicate mapping": [
      {
        "label": "state",
        "uri": "http://dbpedia.org/ontology/state",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Where does Manu cornet work?",
    "SerialNumber": "1685",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Manu_Cornet\u003e \u003chttp://dbpedia.org/property/employer\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Manu cornet",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Manu_Cornet",
        "seq": "11,22"
      }
    ],
    "id": "6b258a86694f43419d3c78e7aec3c3a7",
    "predicate mapping": [
      {
        "label": "work",
        "uri": "http://dbpedia.org/property/employer",
        "seq": "23,27",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the resting place of Fazlur Rahman Khan ?",
    "SerialNumber": "1686",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Fazlur_Rahman_Khan\u003e \u003chttp://dbpedia.org/ontology/restingPlace\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Fazlur Rahman Khan",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Fazlur_Rahman_Khan",
        "seq": "26,44"
      }
    ],
    "id": "51c70eaba07848f2a77e752b51b5d1d4",
    "predicate mapping": [
      {
        "label": "resting place",
        "uri": "http://dbpedia.org/ontology/restingPlace",
        "seq": "9,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "What is the famous relative of Mrunalini Kunte known for?",
    "SerialNumber": "1690",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/relatives\u003e \u003chttp://dbpedia.org/resource/Mrunalini_Kunte\u003e . ?x \u003chttp://dbpedia.org/property/knownFor\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Mrunalini Kunte",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Mrunalini_Kunte",
        "seq": "31,46"
      }
    ],
    "id": "7f3a0c2887a7423eb69732bbf1208c88",
    "predicate mapping": [
      {
        "label": "relative",
        "uri": "http://dbpedia.org/property/relatives",
        "seq": "19,27",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "known for",
        "uri": "http://dbpedia.org/property/knownFor",
        "seq": "47,56",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "What is the resting place of the person who is the successor of James W. Hyatt ?",
    "SerialNumber": "1691",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/James_W._Hyatt\u003e \u003chttp://dbpedia.org/property/successor\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/restingPlace\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "James W. Hyatt",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/James_W._Hyatt",
        "seq": "64,78"
      }
    ],
    "id": "3c8f5b5976af40178208af0ac6ccae51",
    "predicate mapping": [
      {
        "label": "successor",
        "uri": "http://dbpedia.org/property/successor",
        "seq": "51,60",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "resting place",
        "uri": "http://dbpedia.org/ontology/restingPlace",
        "seq": "12,25",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/Person",
        "seq": "33,39",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What politician\u0027s partner is Diana Taylor ?",
    "SerialNumber": "1692",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/partner\u003e \u003chttp://dbpedia.org/resource/Diana_Taylor_(superintendent)\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Politician\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Diana Taylor",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Diana_Taylor_(superintendent)",
        "seq": "29,41"
      }
    ],
    "id": "e8db37fb6c5445dbbbc87de13325c056",
    "predicate mapping": [
      {
        "label": "partner",
        "uri": "http://dbpedia.org/ontology/partner",
        "seq": "18,25",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "politician",
        "uri": "http://dbpedia.org/ontology/Politician",
        "seq": "5,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the district of Methodist Central Hall Westminster ?",
    "SerialNumber": "1694",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Methodist_Central_Hall_Westminster\u003e \u003chttp://dbpedia.org/ontology/district\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Methodist Central Hall Westminster",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Methodist_Central_Hall_Westminster",
        "seq": "24,58"
      }
    ],
    "id": "04f9e85f054f4225bed1717739a1e8f9",
    "predicate mapping": [
      {
        "label": "district",
        "uri": "http://dbpedia.org/ontology/district",
        "seq": "12,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What is the academic journal whose editor is Stephen Law?",
    "SerialNumber": "1695",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/editor\u003e \u003chttp://dbpedia.org/resource/Stephen_Law\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/AcademicJournal\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Stephen Law",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Stephen_Law",
        "seq": "45,56"
      }
    ],
    "id": "dd004ede34464a0f82faca6742a25184",
    "predicate mapping": [
      {
        "label": "editor",
        "uri": "http://dbpedia.org/property/editor",
        "seq": "35,41",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "academic journal",
        "uri": "http://dbpedia.org/ontology/AcademicJournal",
        "seq": "12,28",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "List the people died in Hyderabad and are a member of political party ?",
    "SerialNumber": "1698",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/deathPlace\u003e \u003chttp://dbpedia.org/resource/Hyderabad\u003e . ?x \u003chttp://dbpedia.org/ontology/party\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Hyderabad",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Hyderabad",
        "seq": "24,33"
      }
    ],
    "id": "9eed6571d0a94fbb9a0cbca09a094a42",
    "predicate mapping": [
      {
        "label": "died in",
        "uri": "http://dbpedia.org/ontology/deathPlace",
        "seq": "16,23",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "political party",
        "uri": "http://dbpedia.org/ontology/party",
        "seq": "54,69",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Is Esther Alder the mayor of Geneva?",
    "SerialNumber": "1700",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Geneva\u003e \u003chttp://dbpedia.org/property/mayor\u003e \u003chttp://dbpedia.org/resource/Esther_Alder\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Geneva",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Geneva",
        "seq": "29,35"
      },
      {
        "label": "Esther Alder",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Esther_Alder",
        "seq": "3,15"
      }
    ],
    "id": "9e8f8ca6979d424ca40a9cad3ba2b841",
    "predicate mapping": [
      {
        "label": "mayor",
        "uri": "http://dbpedia.org/property/mayor",
        "seq": "20,25",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What are the baseball players who played for San Francisco Giants?",
    "SerialNumber": "1701",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/team\u003e \u003chttp://dbpedia.org/resource/San_Francisco_Giants\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/BaseballPlayer\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "San Francisco Giants",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/San_Francisco_Giants",
        "seq": "45,65"
      }
    ],
    "id": "4d2c398f35de4c2891ccc4c3b77e1ed6",
    "predicate mapping": [
      {
        "label": "played for",
        "uri": "http://dbpedia.org/ontology/team",
        "seq": "34,44",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "baseball player",
        "uri": "http://dbpedia.org/ontology/BaseballPlayer",
        "seq": "13,28",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which architect of Marine Corps Air Station Kaneohe Bay was also tenant of New Sanno hotel /\u0027",
    "SerialNumber": "1702",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Marine_Corps_Air_Station_Kaneohe_Bay\u003e \u003chttp://dbpedia.org/property/architect\u003e ?uri. \u003chttp://dbpedia.org/resource/New_Sanno_Hotel\u003e \u003chttp://dbpedia.org/ontology/tenant\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Marine Corps Air Station Kaneohe Bay",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Marine_Corps_Air_Station_Kaneohe_Bay",
        "seq": "19,55"
      },
      {
        "label": "New Sanno hotel",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/New_Sanno_Hotel",
        "seq": "75,90"
      }
    ],
    "id": "4a64f2d15b0b43d8a9e07d44a7be8966",
    "predicate mapping": [
      {
        "label": "architect",
        "uri": "http://dbpedia.org/property/architect",
        "seq": "6,15",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "tenant",
        "uri": "http://dbpedia.org/ontology/tenant",
        "seq": "65,71",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Where does the Jerusalem Institute of Justice render their services?",
    "SerialNumber": "1704",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Jerusalem_Institute_of_Justice\u003e \u003chttp://dbpedia.org/ontology/service\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jerusalem Institute of Justice",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Jerusalem_Institute_of_Justice",
        "seq": "15,45"
      }
    ],
    "id": "69c1b8315bfc45bc8d7001b2207bf482",
    "predicate mapping": [
      {
        "label": "service",
        "uri": "http://dbpedia.org/ontology/service",
        "seq": "59,66",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Which political party got elected in First Legislative Assembly of Uttar Pradesh ?",
    "SerialNumber": "1706",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/First_Legislative_Assembly_of_Uttar_Pradesh\u003e \u003chttp://dbpedia.org/property/party\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "First Legislative Assembly of Uttar Pradesh",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/First_Legislative_Assembly_of_Uttar_Pradesh",
        "seq": "37,80"
      }
    ],
    "id": "adb445039dba499fb87254b5db15cf1d",
    "predicate mapping": [
      {
        "label": "political party",
        "uri": "http://dbpedia.org/property/party",
        "seq": "6,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "401",
    "question": "How many companies were founded in Menlo Park, California?",
    "SerialNumber": "1707",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/property/foundation\u003e \u003chttp://dbpedia.org/resource/Menlo_Park,_California\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Company\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Menlo Park, California",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Menlo_Park,_California",
        "seq": "35,57"
      }
    ],
    "id": "5e35e8af2b984b51b235bbe13703c939",
    "predicate mapping": [
      {
        "label": "founded",
        "uri": "http://dbpedia.org/property/foundation",
        "seq": "24,31",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "companies",
        "uri": "http://dbpedia.org/ontology/Company",
        "seq": "9,18",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "What is the television show whose channel\u0027s parent organisation is Fox Sports?",
    "SerialNumber": "1708",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/parentOrganisation\u003e \u003chttp://dbpedia.org/resource/Fox_Sports_(United_States)\u003e . ?uri \u003chttp://dbpedia.org/ontology/channel\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Fox Sports",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Fox_Sports_(United_States)",
        "seq": "67,77"
      }
    ],
    "id": "ccb09f2a248b46a6bbc34abf3022e4f2",
    "predicate mapping": [
      {
        "label": "parent organisation",
        "uri": "http://dbpedia.org/ontology/parentOrganisation",
        "seq": "44,63",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "channel",
        "uri": "http://dbpedia.org/ontology/channel",
        "seq": "34,41",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "12,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Which bands are associated to David Paton?",
    "SerialNumber": "1709",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/David_Paton\u003e \u003chttp://dbpedia.org/ontology/associatedBand\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "David Paton",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/David_Paton",
        "seq": "30,41"
      }
    ],
    "id": "bed5afa37566420489106a8f8da38bb0",
    "predicate mapping": [
      {
        "label": "associated",
        "uri": "http://dbpedia.org/ontology/associatedBand",
        "seq": "16,26",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who wrote a streetcar named desire?",
    "SerialNumber": "1710",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/A_Streetcar_Named_Desire_(play)\u003e \u003chttp://dbpedia.org/property/writer\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "a streetcar named desire",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/A_Streetcar_Named_Desire_(play)",
        "seq": "10,34"
      }
    ],
    "id": "39c7d79acd6a4c698df99c2cf360fdee",
    "predicate mapping": [
      {
        "label": "wrote",
        "uri": "http://dbpedia.org/property/writer",
        "seq": "4,9",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who is the president when Loretta Ucelli used to work for Democratic party?",
    "SerialNumber": "1714",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Loretta_Ucelli\u003e \u003chttp://dbpedia.org/ontology/president\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Loretta Ucelli",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Loretta_Ucelli",
        "seq": "26,40"
      }
    ],
    "id": "23b82966a26e4e568066583eee6da399",
    "predicate mapping": [
      {
        "label": "president",
        "uri": "http://dbpedia.org/ontology/president",
        "seq": "11,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "7",
    "question": "What are the players whose former teams are Carolina Panthers and Indianapolis Colts?",
    "SerialNumber": "1716",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/ontology/formerTeam\u003e \u003chttp://dbpedia.org/resource/Carolina_Panthers\u003e . ?uri \u003chttp://dbpedia.org/ontology/formerTeam\u003e \u003chttp://dbpedia.org/resource/Indianapolis_Colts\u003e . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Carolina Panthers",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Carolina_Panthers",
        "seq": "44,61"
      },
      {
        "label": "Indianapolis Colts",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Indianapolis_Colts",
        "seq": "66,84"
      }
    ],
    "id": "739fbedde305453abbfed585e00e09b1",
    "predicate mapping": [
      {
        "label": "former team",
        "uri": "http://dbpedia.org/ontology/formerTeam",
        "seq": "27,38",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "former team",
        "uri": "http://dbpedia.org/ontology/formerTeam",
        "seq": "27,38",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "401",
    "question": "How many basketball players studied in the Midland College?",
    "SerialNumber": "1718",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/ontology/college\u003e \u003chttp://dbpedia.org/resource/Midland_College\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/BasketballPlayer\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Midland College",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Midland_College",
        "seq": "43,58"
      }
    ],
    "id": "a74dc03be29c445da9b7b70e054546d1",
    "predicate mapping": [
      {
        "label": "College",
        "uri": "http://dbpedia.org/ontology/college",
        "seq": "51,58",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "basketball player",
        "uri": "http://dbpedia.org/ontology/BasketballPlayer",
        "seq": "9,26",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Rickenbacker is a musical instrument played by which artists?",
    "SerialNumber": "1719",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/instrument\u003e \u003chttp://dbpedia.org/resource/Rickenbacker\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MusicalArtist\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Rickenbacker",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Rickenbacker",
        "seq": "0,12"
      }
    ],
    "id": "f40c1a2ee9c24177ad87206df71211e0",
    "predicate mapping": [
      {
        "label": "musical instrument",
        "uri": "http://dbpedia.org/ontology/instrument",
        "seq": "18,36",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "musical",
        "uri": "http://dbpedia.org/ontology/MusicalArtist",
        "seq": "18,25",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Deion sanders and Hinkey haines debuted their career with which common team?",
    "SerialNumber": "1720",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Hinkey_Haines\u003e \u003chttp://dbpedia.org/property/debutteam\u003e ?uri. \u003chttp://dbpedia.org/resource/Deion_Sanders\u003e \u003chttp://dbpedia.org/property/debutteam\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Hinkey haines",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Hinkey_Haines",
        "seq": "18,31"
      },
      {
        "label": "Deion sanders",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Deion_Sanders",
        "seq": "0,13"
      }
    ],
    "id": "b8602cf66ce54d7480a3cf07b2d2329f",
    "predicate mapping": [
      {
        "label": "debuted",
        "uri": "http://dbpedia.org/property/debutteam",
        "seq": "32,39",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "debuted",
        "uri": "http://dbpedia.org/property/debutteam",
        "seq": "32,39",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Is Liang Chow the headcoach of Shawn Johnson?",
    "SerialNumber": "1721",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Shawn_Johnson\u003e \u003chttp://dbpedia.org/property/headcoach\u003e \u003chttp://dbpedia.org/resource/Liang_Chow\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Shawn Johnson",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Shawn_Johnson",
        "seq": "31,44"
      },
      {
        "label": "Liang Chow",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Liang_Chow",
        "seq": "3,13"
      }
    ],
    "id": "1bfa3acdacdd4b798f6e8cf072d4ed54",
    "predicate mapping": [
      {
        "label": "headcoach",
        "uri": "http://dbpedia.org/property/headcoach",
        "seq": "18,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "In which television shows has Eliza Schneider given her voice?",
    "SerialNumber": "1724",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/voices\u003e \u003chttp://dbpedia.org/resource/Eliza_Schneider\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Eliza Schneider",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Eliza_Schneider",
        "seq": "30,45"
      }
    ],
    "id": "7b86db7dd4c14d2e8d914ef82ac4044e",
    "predicate mapping": [
      {
        "label": "voice",
        "uri": "http://dbpedia.org/property/voices",
        "seq": "56,61",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "9,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "From which country is Lawrence Okoye\u0027s nationality ?",
    "SerialNumber": "1726",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Lawrence_Okoye\u003e \u003chttp://dbpedia.org/property/nationality\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Lawrence Okoye",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Lawrence_Okoye",
        "seq": "22,36"
      }
    ],
    "id": "75956ea1ffb748f7b9bb48794ac65260",
    "predicate mapping": [
      {
        "label": "nationality",
        "uri": "http://dbpedia.org/property/nationality",
        "seq": "39,50",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the base currency of Benelux ?",
    "SerialNumber": "1729",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Benelux\u003e \u003chttp://dbpedia.org/property/currency\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Benelux",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Benelux",
        "seq": "29,36"
      }
    ],
    "id": "0d7b3b1e1ef24b64bb14f8a88bb3ba16",
    "predicate mapping": [
      {
        "label": "base currency",
        "uri": "http://dbpedia.org/property/currency",
        "seq": "12,25",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Where did Steve Romeo dies ?",
    "SerialNumber": "1732",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Steve_Romeo\u003e \u003chttp://dbpedia.org/ontology/deathPlace\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Steve Romeo",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Steve_Romeo",
        "seq": "10,21"
      }
    ],
    "id": "8e45bd7253a74f70beef10fbff653824",
    "predicate mapping": [
      {
        "label": "dies",
        "uri": "http://dbpedia.org/ontology/deathPlace",
        "seq": "22,26",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the government type of Ancient Rome ?",
    "SerialNumber": "1734",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Ancient_Rome\u003e \u003chttp://dbpedia.org/ontology/governmentType\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ancient Rome",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Ancient_Rome",
        "seq": "31,43"
      }
    ],
    "id": "81717b01e68a4e36876d59157b0c01d9",
    "predicate mapping": [
      {
        "label": "government type",
        "uri": "http://dbpedia.org/ontology/governmentType",
        "seq": "12,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who are the animator of The Skeleton Dance?",
    "SerialNumber": "1735",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/The_Skeleton_Dance\u003e \u003chttp://dbpedia.org/ontology/animator\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "The Skeleton Dance",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/The_Skeleton_Dance",
        "seq": "24,42"
      }
    ],
    "id": "58f1836b2739462a8eee1fb265dfabf3",
    "predicate mapping": [
      {
        "label": "animator",
        "uri": "http://dbpedia.org/ontology/animator",
        "seq": "12,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "What is the birth location of the pope who was canonized by Agatha of Sicily?",
    "SerialNumber": "1736",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Agatha_of_Sicily\u003e \u003chttp://dbpedia.org/ontology/canonizedBy\u003e ?x . ?x \u003chttp://dbpedia.org/property/birthPlace\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Pope\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Agatha of Sicily",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Agatha_of_Sicily",
        "seq": "60,76"
      }
    ],
    "id": "80b6db330714404da1f2443e719d62f4",
    "predicate mapping": [
      {
        "label": "canonized by",
        "uri": "http://dbpedia.org/ontology/canonizedBy",
        "seq": "47,59",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "birth location",
        "uri": "http://dbpedia.org/property/birthPlace",
        "seq": "12,26",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "pope",
        "uri": "http://dbpedia.org/ontology/Pope",
        "seq": "34,38",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which destination of the Novair International Airways is also the  predecessor of the Chevrolet Caprice?",
    "SerialNumber": "1741",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Novair_International_Airways\u003e \u003chttp://dbpedia.org/ontology/destination\u003e ?uri. \u003chttp://dbpedia.org/resource/Chevrolet_Caprice\u003e \u003chttp://dbpedia.org/ontology/predecessor\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Novair International Airways",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Novair_International_Airways",
        "seq": "25,53"
      },
      {
        "label": "Chevrolet Caprice",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Chevrolet_Caprice",
        "seq": "86,103"
      }
    ],
    "id": "691a84e5e7b3486aa5ff297feb1d534b",
    "predicate mapping": [
      {
        "label": "destination",
        "uri": "http://dbpedia.org/ontology/destination",
        "seq": "6,17",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "predecessor",
        "uri": "http://dbpedia.org/ontology/predecessor",
        "seq": "67,78",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What are some scientists who have stateless citizenship?",
    "SerialNumber": "1742",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/citizenship\u003e \u003chttp://dbpedia.org/resource/Statelessness\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Scientist\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "stateless",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Statelessness",
        "seq": "34,43"
      }
    ],
    "id": "11b93f9e8ea74606a3e6e0e6f6e55a21",
    "predicate mapping": [
      {
        "label": "citizenship",
        "uri": "http://dbpedia.org/ontology/citizenship",
        "seq": "44,55",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "scientist",
        "uri": "http://dbpedia.org/ontology/Scientist",
        "seq": "14,23",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "List the doctoral students of Harry Harlow ?",
    "SerialNumber": "1743",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Harry_Harlow\u003e \u003chttp://dbpedia.org/property/doctoralStudents\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Harry Harlow",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Harry_Harlow",
        "seq": "30,42"
      }
    ],
    "id": "53ed8e82e6ec49d0b9e1762d781e71d4",
    "predicate mapping": [
      {
        "label": "doctoral students",
        "uri": "http://dbpedia.org/property/doctoralStudents",
        "seq": "9,26",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "Name whose youth club was FC Barcelona ?",
    "SerialNumber": "1748",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/youthclubs\u003e \u003chttp://dbpedia.org/resource/FC_Barcelona\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "FC Barcelona",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/FC_Barcelona",
        "seq": "26,38"
      }
    ],
    "id": "444c3a8fb88747a4bce43c1d413b2b26",
    "predicate mapping": [
      {
        "label": "youth club",
        "uri": "http://dbpedia.org/property/youthclubs",
        "seq": "11,21",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Which religion does the leader of Church and Wellesley follow?",
    "SerialNumber": "1749",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Church_and_Wellesley\u003e \u003chttp://dbpedia.org/property/leaderName\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/religion\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Church and Wellesley",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Church_and_Wellesley",
        "seq": "34,54"
      }
    ],
    "id": "7991781a1984410b9f4707dd643830a3",
    "predicate mapping": [
      {
        "label": "leader",
        "uri": "http://dbpedia.org/property/leaderName",
        "seq": "24,30",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion",
        "seq": "6,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the citizenship of Erastus Wiman ?",
    "SerialNumber": "1750",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Erastus_Wiman\u003e \u003chttp://dbpedia.org/ontology/citizenship\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Erastus Wiman",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Erastus_Wiman",
        "seq": "27,40"
      }
    ],
    "id": "92dea938b59a49b88d62bed248dc6a4c",
    "predicate mapping": [
      {
        "label": "citizenship",
        "uri": "http://dbpedia.org/ontology/citizenship",
        "seq": "12,23",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Does the Amazon River start in Arequipa Region?",
    "SerialNumber": "1751",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Amazon_River\u003e \u003chttp://dbpedia.org/property/sourceRegion\u003e \u003chttp://dbpedia.org/resource/Arequipa_Region\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Amazon River",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Amazon_River",
        "seq": "9,21"
      },
      {
        "label": "Arequipa Region",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Arequipa_Region",
        "seq": "31,46"
      }
    ],
    "id": "7e9e2be8376e470bbfbe44d535fd2b65",
    "predicate mapping": [
      {
        "label": "region",
        "uri": "http://dbpedia.org/property/sourceRegion",
        "seq": "-1,5",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Which is the nearest city to Elliott Bay ?",
    "SerialNumber": "1752",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Elliott_Bay\u003e \u003chttp://dbpedia.org/ontology/nearestCity\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Elliott Bay",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Elliott_Bay",
        "seq": "29,40"
      }
    ],
    "id": "24b98ce65ef6434f9ea0fdbc61657261",
    "predicate mapping": [
      {
        "label": "nearest city",
        "uri": "http://dbpedia.org/ontology/nearestCity",
        "seq": "13,25",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What are the movies whose screenplay is done by Eric Roth?",
    "SerialNumber": "1754",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/screenplay\u003e \u003chttp://dbpedia.org/resource/Eric_Roth\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Eric Roth",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Eric_Roth",
        "seq": "48,57"
      }
    ],
    "id": "8575d9a3b2064c21985eeeeb57e60eb4",
    "predicate mapping": [
      {
        "label": "screenplay",
        "uri": "http://dbpedia.org/property/screenplay",
        "seq": "26,36",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "13,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "List the movie whose music was given by Geoffrey Burgon and distributed by Cinema International Corporation?",
    "SerialNumber": "1755",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/musicComposer\u003e \u003chttp://dbpedia.org/resource/Geoffrey_Burgon\u003e . ?uri \u003chttp://dbpedia.org/ontology/distributor\u003e \u003chttp://dbpedia.org/resource/Cinema_International_Corporation\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Geoffrey Burgon",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Geoffrey_Burgon",
        "seq": "40,55"
      },
      {
        "label": "Cinema International Corporation",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Cinema_International_Corporation",
        "seq": "75,107"
      }
    ],
    "id": "dd43bcfacc674fb8980f943492e44533",
    "predicate mapping": [
      {
        "label": "music",
        "uri": "http://dbpedia.org/ontology/musicComposer",
        "seq": "21,26",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "distributed by",
        "uri": "http://dbpedia.org/ontology/distributor",
        "seq": "60,74",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which series has an episode called The lost special and also a character named Sherlock Holmes ?",
    "SerialNumber": "1756",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/The_Lost_Special\u003e \u003chttp://dbpedia.org/property/series\u003e ?uri. \u003chttp://dbpedia.org/resource/Sherlock_Holmes_(play)\u003e \u003chttp://dbpedia.org/property/characters\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "The lost special",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/The_Lost_Special",
        "seq": "35,51"
      },
      {
        "label": "Sherlock Holmes",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Sherlock_Holmes_(play)",
        "seq": "79,94"
      }
    ],
    "id": "e8c5049fd8a743ee8d0faf76a10ae000",
    "predicate mapping": [
      {
        "label": "series",
        "uri": "http://dbpedia.org/property/series",
        "seq": "6,12",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "character",
        "uri": "http://dbpedia.org/property/characters",
        "seq": "63,72",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What cities are near to Nihoa which is also known as Bird Island ?",
    "SerialNumber": "1758",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Nihoa\u003e \u003chttp://dbpedia.org/property/nearestCity\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Nihoa",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Nihoa",
        "seq": "24,29"
      }
    ],
    "id": "ffc2d9ad79e947ae95f0e8795dad6214",
    "predicate mapping": [
      {
        "label": "near are",
        "uri": "http://dbpedia.org/property/nearestCity",
        "seq": "-1,7",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "403",
    "question": "How many cities are around the sea in which the the fig tree bay meets?",
    "SerialNumber": "1760",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { \u003chttp://dbpedia.org/resource/Fig_Tree_Bay\u003e \u003chttp://dbpedia.org/ontology/inflow\u003e ?x . ?x \u003chttp://dbpedia.org/property/cities\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Sea\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "fig tree bay",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Fig_Tree_Bay",
        "seq": "52,64"
      }
    ],
    "id": "51982b316423405bb8b05661dd691bff",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/inflow",
        "seq": "35,37",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "cities",
        "uri": "http://dbpedia.org/property/cities",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "sea",
        "uri": "http://dbpedia.org/ontology/Sea",
        "seq": "31,34",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "Count the number of families of the Animal kingdom.",
    "SerialNumber": "1762",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/kingdom\u003e \u003chttp://dbpedia.org/resource/Animal\u003e . ?x \u003chttp://dbpedia.org/ontology/family\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Animal",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Animal",
        "seq": "36,42"
      }
    ],
    "id": "002b171e559d44dab3ae234723824bac",
    "predicate mapping": [
      {
        "label": "kingdom",
        "uri": "http://dbpedia.org/ontology/kingdom",
        "seq": "43,50",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "families",
        "uri": "http://dbpedia.org/ontology/family",
        "seq": "20,28",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Which magazine has publisher as Jann Wenner?",
    "SerialNumber": "1763",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/publisher\u003e \u003chttp://dbpedia.org/resource/Jann_Wenner\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Magazine\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jann Wenner",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Jann_Wenner",
        "seq": "32,43"
      }
    ],
    "id": "da9e64c20e50473fb7df93281a4a2d44",
    "predicate mapping": [
      {
        "label": "publisher",
        "uri": "http://dbpedia.org/ontology/publisher",
        "seq": "19,28",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "magazine",
        "uri": "http://dbpedia.org/ontology/Magazine",
        "seq": "6,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What are the broadcast areas of Mauritius Broadcasting Corporation?",
    "SerialNumber": "1766",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Mauritius_Broadcasting_Corporation\u003e \u003chttp://dbpedia.org/property/broadcastArea\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Mauritius Broadcasting Corporation",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Mauritius_Broadcasting_Corporation",
        "seq": "32,66"
      }
    ],
    "id": "ca66ad5b2f544c31a6254b0ba2808274",
    "predicate mapping": [
      {
        "label": "broadcast area",
        "uri": "http://dbpedia.org/property/broadcastArea",
        "seq": "13,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "Where is the ground of the soccer club, which has Alan Kusov as a team member ?",
    "SerialNumber": "1767",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Alan_Kusov__11\u003e \u003chttp://dbpedia.org/ontology/team\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/ground\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/SoccerClub\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Alan Kusov",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Alan_Kusov__11",
        "seq": "50,60"
      }
    ],
    "id": "c4cb772e25ba433582020a0bf1bea228",
    "predicate mapping": [
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/team",
        "seq": "66,70",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "ground",
        "uri": "http://dbpedia.org/ontology/ground",
        "seq": "13,19",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "soccer club",
        "uri": "http://dbpedia.org/ontology/SoccerClub",
        "seq": "27,38",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "which president was served by Joseph Stiglitz?",
    "SerialNumber": "1768",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Joseph_Stiglitz\u003e \u003chttp://dbpedia.org/property/president\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Joseph Stiglitz",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Joseph_Stiglitz",
        "seq": "30,45"
      }
    ],
    "id": "9c91b4cd6e5341e08778831ad38a79d3",
    "predicate mapping": [
      {
        "label": "president",
        "uri": "http://dbpedia.org/property/president",
        "seq": "6,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "What is the nickname of the club managed by Piotr baron?",
    "SerialNumber": "1769",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/manager\u003e \u003chttp://dbpedia.org/resource/Piotr_Baron\u003e . ?x \u003chttp://dbpedia.org/property/nickname\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Piotr baron",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Piotr_Baron",
        "seq": "44,55"
      }
    ],
    "id": "eba614f60dae40f98002cee1a97d644a",
    "predicate mapping": [
      {
        "label": "managed",
        "uri": "http://dbpedia.org/ontology/manager",
        "seq": "33,40",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "nickname",
        "uri": "http://dbpedia.org/property/nickname",
        "seq": "12,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Did Trish Stratus train Christina Crawford?",
    "SerialNumber": "1771",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Christina_Crawford_(wrestler)\u003e \u003chttp://dbpedia.org/property/trainer\u003e \u003chttp://dbpedia.org/resource/Trish_Stratus\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Christina Crawford",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Christina_Crawford_(wrestler)",
        "seq": "24,42"
      },
      {
        "label": "Trish Stratus",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Trish_Stratus",
        "seq": "4,17"
      }
    ],
    "id": "4a61c257cb3c4649a59faec69a5bab87",
    "predicate mapping": [
      {
        "label": "train",
        "uri": "http://dbpedia.org/property/trainer",
        "seq": "18,23",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Who is the writer of the Cavalcade of America and The United States Steel Hour ?",
    "SerialNumber": "1772",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Cavalcade_of_America\u003e \u003chttp://dbpedia.org/ontology/writer\u003e ?uri. \u003chttp://dbpedia.org/resource/The_United_States_Steel_Hour\u003e \u003chttp://dbpedia.org/ontology/writer\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Cavalcade of America",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Cavalcade_of_America",
        "seq": "25,45"
      },
      {
        "label": "The United States Steel Hour",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_United_States_Steel_Hour",
        "seq": "50,78"
      }
    ],
    "id": "6abff67222f640f98134a1d608370fc0",
    "predicate mapping": [
      {
        "label": "writer",
        "uri": "http://dbpedia.org/ontology/writer",
        "seq": "11,17",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "writer",
        "uri": "http://dbpedia.org/ontology/writer",
        "seq": "11,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "To what nation do Victor Gunasekara and Anuruddha Ratwatte owe their allegiance?",
    "SerialNumber": "1773",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Victor_Gunasekara\u003e \u003chttp://dbpedia.org/property/allegiance\u003e ?uri. \u003chttp://dbpedia.org/resource/Anuruddha_Ratwatte\u003e \u003chttp://dbpedia.org/property/allegiance\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Victor Gunasekara",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Victor_Gunasekara",
        "seq": "18,35"
      },
      {
        "label": "Anuruddha Ratwatte",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Anuruddha_Ratwatte",
        "seq": "40,58"
      }
    ],
    "id": "d98921970a2643a8b9b1d8863e275faf",
    "predicate mapping": [
      {
        "label": "allegiance",
        "uri": "http://dbpedia.org/property/allegiance",
        "seq": "69,79",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "allegiance",
        "uri": "http://dbpedia.org/property/allegiance",
        "seq": "69,79",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the cover artist of the adventure of Tom sawyer ?",
    "SerialNumber": "1777",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer\u003e \u003chttp://dbpedia.org/ontology/coverArtist\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "the adventure of Tom sawyer",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer",
        "seq": "42,45"
      }
    ],
    "id": "9496ce7155814acaac417eb27fd22cc1",
    "predicate mapping": [
      {
        "label": "cover artist",
        "uri": "http://dbpedia.org/ontology/coverArtist",
        "seq": "9,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "What is the nationality of the golf player who won the  2002 Players Championship ?",
    "SerialNumber": "1779",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/2002_Players_Championship\u003e \u003chttp://dbpedia.org/ontology/champion\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/nationality\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/GolfPlayer\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "2002 Players Championship",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/2002_Players_Championship",
        "seq": "56,81"
      }
    ],
    "id": "1bbb3a798a1f410986aeee42f900f74b",
    "predicate mapping": [
      {
        "label": "Champion",
        "uri": "http://dbpedia.org/ontology/champion",
        "seq": "69,77",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "nationality",
        "uri": "http://dbpedia.org/ontology/nationality",
        "seq": "12,23",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "golf player",
        "uri": "http://dbpedia.org/ontology/GolfPlayer",
        "seq": "31,42",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "Which companies are founded in the city of which Collin County Texas is a part?",
    "SerialNumber": "1781",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/part\u003e \u003chttp://dbpedia.org/resource/Collin_County,_Texas\u003e . ?uri \u003chttp://dbpedia.org/ontology/foundationPlace\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Company\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Collin County",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Collin_County,_Texas",
        "seq": "49,62"
      }
    ],
    "id": "96886b0fa50b4ecebcc44d15c8c59b37",
    "predicate mapping": [
      {
        "label": "part",
        "uri": "http://dbpedia.org/ontology/part",
        "seq": "74,78",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "founded",
        "uri": "http://dbpedia.org/ontology/foundationPlace",
        "seq": "20,27",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "companies",
        "uri": "http://dbpedia.org/ontology/Company",
        "seq": "6,15",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who is the former partner of Chris Knierim ?",
    "SerialNumber": "1784",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Chris_Knierim\u003e \u003chttp://dbpedia.org/ontology/formerPartner\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Chris Knierim",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Chris_Knierim",
        "seq": "29,42"
      }
    ],
    "id": "d742a7e01f4c4ee48d60d542ecc2fb42",
    "predicate mapping": [
      {
        "label": "former partner",
        "uri": "http://dbpedia.org/ontology/formerPartner",
        "seq": "11,25",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the predecessor of BMW M40 ?",
    "SerialNumber": "1785",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/BMW_M40\u003e \u003chttp://dbpedia.org/property/predecessor\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "BMW M40",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/BMW_M40",
        "seq": "27,34"
      }
    ],
    "id": "443f406a43a149918fa7e12a6326a81e",
    "predicate mapping": [
      {
        "label": "predecessor",
        "uri": "http://dbpedia.org/property/predecessor",
        "seq": "12,23",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "What is the former team of the football player who is the coach of 2006 Oakland Raiders season ?",
    "SerialNumber": "1787",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/2006_Oakland_Raiders_season\u003e \u003chttp://dbpedia.org/property/coach\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/formerTeam\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/AmericanFootballPlayer\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "2006 Oakland Raiders season",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/2006_Oakland_Raiders_season",
        "seq": "67,94"
      }
    ],
    "id": "74971790782c4927ab2f8321c4e322a3",
    "predicate mapping": [
      {
        "label": "coach",
        "uri": "http://dbpedia.org/property/coach",
        "seq": "58,63",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "former team",
        "uri": "http://dbpedia.org/ontology/formerTeam",
        "seq": "12,23",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "football player",
        "uri": "http://dbpedia.org/ontology/AmericanFootballPlayer",
        "seq": "31,46",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "Who is the partner of Rob Patterson?",
    "SerialNumber": "1793",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/partner\u003e \u003chttp://dbpedia.org/resource/Rob_Patterson\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Rob Patterson",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Rob_Patterson",
        "seq": "22,35"
      }
    ],
    "id": "51484b4dd82e47e9838bd6ae4d77c67a",
    "predicate mapping": [
      {
        "label": "partner",
        "uri": "http://dbpedia.org/property/partner",
        "seq": "11,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "406",
    "question": "What are all the TV shows which are related to the ones produced by Julie Gardner?",
    "SerialNumber": "1794",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/executiveProducer\u003e \u003chttp://dbpedia.org/resource/Julie_Gardner\u003e . ?uri \u003chttp://dbpedia.org/ontology/related\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Julie Gardner",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Julie_Gardner",
        "seq": "68,81"
      }
    ],
    "id": "7e6d0482a40245e6bf7602e2ad0d65ed",
    "predicate mapping": [
      {
        "label": "produced",
        "uri": "http://dbpedia.org/ontology/executiveProducer",
        "seq": "56,64",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "related",
        "uri": "http://dbpedia.org/ontology/related",
        "seq": "36,43",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "20,25",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the parent company of  Ford Air Transport Service ?",
    "SerialNumber": "1795",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Ford_Air_Transport_Service\u003e \u003chttp://dbpedia.org/ontology/parentCompany\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ford Air Transport Service",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ford_Air_Transport_Service",
        "seq": "28,54"
      }
    ],
    "id": "d96691130f534245a4d69a4dcbc67391",
    "predicate mapping": [
      {
        "label": "parent company",
        "uri": "http://dbpedia.org/ontology/parentCompany",
        "seq": "9,23",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "Which football teams are in a city where Oakland Athletics were the tenants?",
    "SerialNumber": "1796",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/tenant\u003e \u003chttp://dbpedia.org/resource/Oakland_Athletics\u003e . ?uri \u003chttp://dbpedia.org/ontology/locationCity\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/AmericanFootballTeam\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Oakland Athletics",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Oakland_Athletics",
        "seq": "41,58"
      }
    ],
    "id": "c077c60d66924d99ad283dbd4078d564",
    "predicate mapping": [
      {
        "label": "tenant",
        "uri": "http://dbpedia.org/ontology/tenant",
        "seq": "68,74",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "city",
        "uri": "http://dbpedia.org/ontology/locationCity",
        "seq": "30,34",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "football",
        "uri": "http://dbpedia.org/ontology/AmericanFootballTeam",
        "seq": "6,14",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Which companies published Super Mario Adventures?",
    "SerialNumber": "1800",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Super_Mario_Adventures\u003e \u003chttp://dbpedia.org/property/publisher\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Super Mario Adventures",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Super_Mario_Adventures",
        "seq": "26,48"
      }
    ],
    "id": "1ef8cd8959f34ef2b16979eec3a75888",
    "predicate mapping": [
      {
        "label": "published",
        "uri": "http://dbpedia.org/property/publisher",
        "seq": "16,25",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Is william doyle the chairman of Georgetown university?",
    "SerialNumber": "1802",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Georgetown_University\u003e \u003chttp://dbpedia.org/property/chairman\u003e \u003chttp://dbpedia.org/resource/William_Doyle_(businessman)\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Georgetown university",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Georgetown_University",
        "seq": "33,54"
      },
      {
        "label": "william doyle",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/William_Doyle_(businessman)",
        "seq": "3,16"
      }
    ],
    "id": "a9081790bb784c2da0983b1fa106ab2c",
    "predicate mapping": [
      {
        "label": "chairman",
        "uri": "http://dbpedia.org/property/chairman",
        "seq": "21,29",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "who developed google videos?",
    "SerialNumber": "1803",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Google_Videos\u003e \u003chttp://dbpedia.org/property/developer\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "google videos",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Google_Videos",
        "seq": "14,27"
      }
    ],
    "id": "965e3f4581784cb492f2fe92677b9928",
    "predicate mapping": [
      {
        "label": "developed",
        "uri": "http://dbpedia.org/property/developer",
        "seq": "4,13",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "406",
    "question": "Count me all the video game distributor whose parent company is Warner Bros ?",
    "SerialNumber": "1804",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/parent\u003e \u003chttp://dbpedia.org/resource/Warner_Bros.\u003e . ?uri \u003chttp://dbpedia.org/property/distributor\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/VideoGame\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Warner Bros ",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Warner_Bros.",
        "seq": "64,76"
      }
    ],
    "id": "582f1c08834e4bbd825c551add0365e4",
    "predicate mapping": [
      {
        "label": "parent",
        "uri": "http://dbpedia.org/property/parent",
        "seq": "46,52",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "distributor",
        "uri": "http://dbpedia.org/property/distributor",
        "seq": "28,39",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "video game",
        "uri": "http://dbpedia.org/ontology/VideoGame",
        "seq": "17,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Was Elizabeth Ann Seton canonized by Pope Paul VI?",
    "SerialNumber": "1805",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Elizabeth_Ann_Seton\u003e \u003chttp://dbpedia.org/property/canonizedBy\u003e \u003chttp://dbpedia.org/resource/Pope_Paul_VI\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Elizabeth Ann Seton",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Elizabeth_Ann_Seton",
        "seq": "4,23"
      },
      {
        "label": "Paul VI",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Pope_Paul_VI",
        "seq": "42,49"
      }
    ],
    "id": "409f7fe7f1614782a7c0a3659521a50b",
    "predicate mapping": [
      {
        "label": "canonized by",
        "uri": "http://dbpedia.org/property/canonizedBy",
        "seq": "24,36",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Is Sao Paulo the largest city of Brazil?",
    "SerialNumber": "1806",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Brazil\u003e \u003chttp://dbpedia.org/property/largestCity\u003e \u003chttp://dbpedia.org/resource/São_Paulo\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Brazil",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Brazil",
        "seq": "33,39"
      },
      {
        "label": "Sao Paulo",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/São_Paulo",
        "seq": "3,12"
      }
    ],
    "id": "1d9d0611f1a341ddb067c01fc356f3dd",
    "predicate mapping": [
      {
        "label": "largest city",
        "uri": "http://dbpedia.org/property/largestCity",
        "seq": "17,29",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Was David Gilmour a former member of Pink Floyd?",
    "SerialNumber": "1809",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Pink_Floyd\u003e \u003chttp://dbpedia.org/ontology/formerBandMember\u003e \u003chttp://dbpedia.org/resource/David_Gilmour\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Pink Floyd",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Pink_Floyd",
        "seq": "37,47"
      },
      {
        "label": "David Gilmour",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/David_Gilmour",
        "seq": "4,17"
      }
    ],
    "id": "f56af3f27ab94106a92cb2337b8c73ad",
    "predicate mapping": [
      {
        "label": "member former",
        "uri": "http://dbpedia.org/ontology/formerBandMember",
        "seq": "-1,12",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the sstadium of 2015 Pro Duta FC season ?",
    "SerialNumber": "1812",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/2015_Pro_Duta_FC_season\u003e \u003chttp://dbpedia.org/property/stadium\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "2015 Pro Duta FC season",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/2015_Pro_Duta_FC_season",
        "seq": "21,44"
      }
    ],
    "id": "fc8f458df57d49c1a584f223702f336f",
    "predicate mapping": [
      {
        "label": "stadium",
        "uri": "http://dbpedia.org/property/stadium",
        "seq": "10,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the region served by Toll Global Express and also borders Siberia ?",
    "SerialNumber": "1813",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Toll_Global_Express\u003e \u003chttp://dbpedia.org/ontology/regionServed\u003e ?uri. \u003chttp://dbpedia.org/resource/Siberia\u003e \u003chttp://dbpedia.org/ontology/border\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Toll Global Express",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Toll_Global_Express",
        "seq": "29,48"
      },
      {
        "label": "Siberia",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Siberia",
        "seq": "66,73"
      }
    ],
    "id": "3d37be8adf384987ad3f198bd18908f2",
    "predicate mapping": [
      {
        "label": "region served",
        "uri": "http://dbpedia.org/ontology/regionServed",
        "seq": "12,25",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "border",
        "uri": "http://dbpedia.org/ontology/border",
        "seq": "58,64",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "Which writer is famous for works written by Neil Gaiman?",
    "SerialNumber": "1815",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/writers\u003e \u003chttp://dbpedia.org/resource/Neil_Gaiman\u003e . ?uri \u003chttp://dbpedia.org/ontology/notableWork\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Neil Gaiman",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Neil_Gaiman",
        "seq": "44,55"
      }
    ],
    "id": "536fa92bfb0c4a26bdd1546cbbbc9030",
    "predicate mapping": [
      {
        "label": "written by",
        "uri": "http://dbpedia.org/property/writers",
        "seq": "33,43",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "works",
        "uri": "http://dbpedia.org/ontology/notableWork",
        "seq": "27,32",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "What awards have been given to citizens of the Ottoman Empire?",
    "SerialNumber": "1816",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/citizenship\u003e \u003chttp://dbpedia.org/resource/Ottoman_Empire\u003e . ?x \u003chttp://dbpedia.org/ontology/award\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ottoman Empire",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Ottoman_Empire",
        "seq": "47,61"
      }
    ],
    "id": "63ed80a6c6304f309c4370cd47649349",
    "predicate mapping": [
      {
        "label": "citizens",
        "uri": "http://dbpedia.org/ontology/citizenship",
        "seq": "31,39",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/award",
        "seq": "5,11",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who are the shareholder of the broadcast networks whose owning company is Jamie Kellner?",
    "SerialNumber": "1818",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/owningCompany\u003e \u003chttp://dbpedia.org/resource/Jamie_Kellner\u003e . ?x \u003chttp://dbpedia.org/property/owner\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/BroadcastNetwork\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jamie Kellner",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Jamie_Kellner",
        "seq": "74,87"
      }
    ],
    "id": "105a1052c4e54d828a4f8b08aca03408",
    "predicate mapping": [
      {
        "label": "owning company",
        "uri": "http://dbpedia.org/ontology/owningCompany",
        "seq": "56,70",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "shareholder",
        "uri": "http://dbpedia.org/property/owner",
        "seq": "12,23",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "broadcast network",
        "uri": "http://dbpedia.org/ontology/BroadcastNetwork",
        "seq": "31,48",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "List the state of the universities whose nation is United States ?",
    "SerialNumber": "1819",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/country\u003e \u003chttp://dbpedia.org/resource/United_States\u003e . ?x \u003chttp://dbpedia.org/ontology/state\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/University\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "United States",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/United_States",
        "seq": "51,64"
      }
    ],
    "id": "9b05edb125ad445c826406a7e5bad001",
    "predicate mapping": [
      {
        "label": "nation",
        "uri": "http://dbpedia.org/ontology/country",
        "seq": "41,47",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "nation",
        "uri": "http://dbpedia.org/ontology/state",
        "seq": "41,47",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "universities",
        "uri": "http://dbpedia.org/ontology/University",
        "seq": "22,34",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which destination of Emerald Air is also the city served by houston Fort Bend Airport ?",
    "SerialNumber": "1820",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Emerald_Air_(United_States)\u003e \u003chttp://dbpedia.org/ontology/destination\u003e ?uri. \u003chttp://dbpedia.org/resource/Houston_Fort_Bend_Airport\u003e \u003chttp://dbpedia.org/property/cityServed\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Emerald Air",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Emerald_Air_(United_States)",
        "seq": "21,32"
      },
      {
        "label": "houston Fort Bend Airport",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Houston_Fort_Bend_Airport",
        "seq": "60,85"
      }
    ],
    "id": "a8ffab72a4f64753b5a7c3ff38c48057",
    "predicate mapping": [
      {
        "label": "destination",
        "uri": "http://dbpedia.org/ontology/destination",
        "seq": "6,17",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "served city",
        "uri": "http://dbpedia.org/property/cityServed",
        "seq": "-1,10",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "307",
    "question": "What are the software whose operating systems are Mac OS and Microsoft Windows?",
    "SerialNumber": "1822",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/ontology/operatingSystem\u003e \u003chttp://dbpedia.org/resource/Mac_OS\u003e . ?uri \u003chttp://dbpedia.org/ontology/operatingSystem\u003e \u003chttp://dbpedia.org/resource/Microsoft_Windows\u003e . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Software\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Mac OS",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Mac_OS",
        "seq": "50,56"
      },
      {
        "label": "Microsoft Windows",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Microsoft_Windows",
        "seq": "61,78"
      }
    ],
    "id": "a7c33137e9004883871a9e2a4a7eddb9",
    "predicate mapping": [
      {
        "label": "operating system",
        "uri": "http://dbpedia.org/ontology/operatingSystem",
        "seq": "28,44",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "operating system",
        "uri": "http://dbpedia.org/ontology/operatingSystem",
        "seq": "28,44",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "software",
        "uri": "http://dbpedia.org/ontology/Software",
        "seq": "13,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Does the Utah State Route 162 end at Colorado?",
    "SerialNumber": "1823",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Utah_State_Route_162\u003e \u003chttp://dbpedia.org/ontology/routeEnd\u003e \u003chttp://dbpedia.org/resource/Colorado\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "State Route 162",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Utah_State_Route_162",
        "seq": "14,29"
      },
      {
        "label": "Colorado",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Colorado",
        "seq": "37,45"
      }
    ],
    "id": "c18a6d5e8e5849f2b9a305dce85ad014",
    "predicate mapping": [
      {
        "label": "route end",
        "uri": "http://dbpedia.org/ontology/routeEnd",
        "seq": "-1,8",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "List the debut team of the baseball player who born in Houston.",
    "SerialNumber": "1824",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/birthPlace\u003e \u003chttp://dbpedia.org/resource/Houston\u003e . ?x \u003chttp://dbpedia.org/ontology/debutTeam\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/BaseballPlayer\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Houston",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Houston",
        "seq": "55,62"
      }
    ],
    "id": "898f2a6888704c2b843822e4e7ef60d1",
    "predicate mapping": [
      {
        "label": "born in",
        "uri": "http://dbpedia.org/property/birthPlace",
        "seq": "47,54",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "debut team",
        "uri": "http://dbpedia.org/ontology/debutTeam",
        "seq": "9,19",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "baseball player",
        "uri": "http://dbpedia.org/ontology/BaseballPlayer",
        "seq": "27,42",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Was christina crawford trained by Booker T?",
    "SerialNumber": "1829",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Christina_Crawford_(wrestler)\u003e \u003chttp://dbpedia.org/property/trainer\u003e \u003chttp://dbpedia.org/resource/Booker_T_(wrestler)\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "christina crawford",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Christina_Crawford_(wrestler)",
        "seq": "4,22"
      },
      {
        "label": "Booker T",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Booker_T_(wrestler)",
        "seq": "34,42"
      }
    ],
    "id": "da77bfa505514635bfea5b12d1f3b075",
    "predicate mapping": [
      {
        "label": "trained",
        "uri": "http://dbpedia.org/property/trainer",
        "seq": "23,30",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What award was won by executive producer of Shaun the Sheep?",
    "SerialNumber": "1831",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Shaun_the_Sheep\u003e \u003chttp://dbpedia.org/ontology/executiveProducer\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/award\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Shaun the Sheep",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Shaun_the_Sheep",
        "seq": "44,59"
      }
    ],
    "id": "5d0e2659e4b0492fb4530be48fa720db",
    "predicate mapping": [
      {
        "label": "executive producer",
        "uri": "http://dbpedia.org/ontology/executiveProducer",
        "seq": "22,40",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "award",
        "uri": "http://dbpedia.org/ontology/award",
        "seq": "5,10",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the current club of Abdelhameed Amarri ?",
    "SerialNumber": "1832",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Abdelhameed_Amarri\u003e \u003chttp://dbpedia.org/property/currentclub\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Abdelhameed Amarri",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Abdelhameed_Amarri",
        "seq": "25,43"
      }
    ],
    "id": "4c68e37c40ea4e44950037ef974d5879",
    "predicate mapping": [
      {
        "label": "current club",
        "uri": "http://dbpedia.org/property/currentclub",
        "seq": "9,21",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "What is the television show whose opening theme\u0027s album is Cheers?",
    "SerialNumber": "1838",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/album\u003e \u003chttp://dbpedia.org/resource/Cheers\u003e . ?uri \u003chttp://dbpedia.org/ontology/openingTheme\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Cheers",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Cheers",
        "seq": "59,65"
      }
    ],
    "id": "aedcce3300544a758c309617ae9a6643",
    "predicate mapping": [
      {
        "label": "album",
        "uri": "http://dbpedia.org/ontology/album",
        "seq": "50,55",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "opening theme",
        "uri": "http://dbpedia.org/ontology/openingTheme",
        "seq": "34,47",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "12,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Which driver had the pole position in 1994 Spanish Grand Prix ?",
    "SerialNumber": "1839",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/1994_Spanish_Grand_Prix\u003e \u003chttp://dbpedia.org/ontology/poleDriver\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "1994 Spanish Grand Prix",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/1994_Spanish_Grand_Prix",
        "seq": "38,61"
      }
    ],
    "id": "9869859173884cf5b5ce1628b5ff947c",
    "predicate mapping": [
      {
        "label": "driver pole",
        "uri": "http://dbpedia.org/ontology/poleDriver",
        "seq": "-1,10",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "Who is the producer of album, which has the song Eclipse ?",
    "SerialNumber": "1842",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Eclipse_(song)\u003e \u003chttp://dbpedia.org/ontology/album\u003e ?x . ?x \u003chttp://dbpedia.org/property/producer\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Album\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Eclipse",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Eclipse_(song)",
        "seq": "49,56"
      }
    ],
    "id": "077d0f48ef144f898f729892e65c7e91",
    "predicate mapping": [
      {
        "label": "album",
        "uri": "http://dbpedia.org/ontology/album",
        "seq": "23,28",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "producer",
        "uri": "http://dbpedia.org/property/producer",
        "seq": "11,19",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "album",
        "uri": "http://dbpedia.org/ontology/Album",
        "seq": "23,28",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the automobile platform of Chiva bus ?",
    "SerialNumber": "1844",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Chiva_bus\u003e \u003chttp://dbpedia.org/ontology/automobilePlatform\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Chiva bus",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Chiva_bus",
        "seq": "35,44"
      }
    ],
    "id": "7548aa9412d4455198e5c71f7383e131",
    "predicate mapping": [
      {
        "label": "automobile platform",
        "uri": "http://dbpedia.org/ontology/automobilePlatform",
        "seq": "12,31",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What borders siberia?",
    "SerialNumber": "1845",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Siberia\u003e \u003chttp://dbpedia.org/ontology/border\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "siberia",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Siberia",
        "seq": "13,20"
      }
    ],
    "id": "67b466a2660f466f99bcd5f3bb96785a",
    "predicate mapping": [
      {
        "label": "border",
        "uri": "http://dbpedia.org/ontology/border",
        "seq": "5,11",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "List the producers who produced movies starring Michael Jackson.",
    "SerialNumber": "1847",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/starring\u003e \u003chttp://dbpedia.org/resource/Michael_Jackson\u003e . ?x \u003chttp://dbpedia.org/property/producer\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Michael Jackson",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Michael_Jackson",
        "seq": "48,63"
      }
    ],
    "id": "2d8b81a320094537aa88cb937f7b7676",
    "predicate mapping": [
      {
        "label": "starring",
        "uri": "http://dbpedia.org/property/starring",
        "seq": "39,47",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "producer",
        "uri": "http://dbpedia.org/property/producer",
        "seq": "9,17",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "32,37",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Jeff Munn is the president of which basketball team ?",
    "SerialNumber": "1850",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/president\u003e \u003chttp://dbpedia.org/resource/Jeff_Munn\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/BasketballTeam\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jeff Munn",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Jeff_Munn",
        "seq": "0,9"
      }
    ],
    "id": "204a5a67d76344009f7ee3711bb79292",
    "predicate mapping": [
      {
        "label": "president",
        "uri": "http://dbpedia.org/property/president",
        "seq": "17,26",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "basketball team",
        "uri": "http://dbpedia.org/ontology/BasketballTeam",
        "seq": "36,51",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the city  of the 2015 MLS All-Star Game and birthplace of the The Okee Dokee Brothers",
    "SerialNumber": "1851",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/2015_MLS_All-Star_Game\u003e \u003chttp://dbpedia.org/property/city\u003e ?uri. \u003chttp://dbpedia.org/resource/The_Okee_Dokee_Brothers\u003e \u003chttp://dbpedia.org/ontology/birthPlace\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "2015 MLS All-Star Game",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/2015_MLS_All-Star_Game",
        "seq": "25,47"
      },
      {
        "label": "The Okee Dokee Brothers",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Okee_Dokee_Brothers",
        "seq": "70,93"
      }
    ],
    "id": "a7858c99b352427d9f96227ed65fe2bb",
    "predicate mapping": [
      {
        "label": "city",
        "uri": "http://dbpedia.org/property/city",
        "seq": "12,16",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "birthplace",
        "uri": "http://dbpedia.org/ontology/birthPlace",
        "seq": "52,62",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "106",
    "question": "How many had their debut team coached by Chip Kelly?",
    "SerialNumber": "1852",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/coach\u003e \u003chttp://dbpedia.org/resource/Chip_Kelly\u003e . ?uri \u003chttp://dbpedia.org/ontology/debutTeam\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Chip Kelly",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Chip_Kelly",
        "seq": "41,51"
      }
    ],
    "id": "4ead31ba05b240b792523ee77e1c2d85",
    "predicate mapping": [
      {
        "label": "coach",
        "uri": "http://dbpedia.org/property/coach",
        "seq": "30,35",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "debut team",
        "uri": "http://dbpedia.org/ontology/debutTeam",
        "seq": "19,29",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Did John Byrne create Emma Frost?",
    "SerialNumber": "1854",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Emma_Frost\u003e \u003chttp://dbpedia.org/property/creators\u003e \u003chttp://dbpedia.org/resource/John_Byrne_(comics)\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Emma Frost",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Emma_Frost",
        "seq": "22,32"
      },
      {
        "label": "John Byrne",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/John_Byrne_(comics)",
        "seq": "4,14"
      }
    ],
    "id": "2aec8ac28a254b8a8edbbb921aae4ef0",
    "predicate mapping": [
      {
        "label": "create",
        "uri": "http://dbpedia.org/property/creators",
        "seq": "15,21",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the champion of National League ?",
    "SerialNumber": "1856",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/National_League\u003e \u003chttp://dbpedia.org/property/champion\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "National League",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/National_League",
        "seq": "21,36"
      }
    ],
    "id": "1916515a00a74f8b951851aa671a3b0a",
    "predicate mapping": [
      {
        "label": "champion",
        "uri": "http://dbpedia.org/property/champion",
        "seq": "9,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "What is the device whose successor\u0027s CPU is by AMD?",
    "SerialNumber": "1859",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/cpu\u003e \u003chttp://dbpedia.org/resource/Advanced_Micro_Devices\u003e . ?uri \u003chttp://dbpedia.org/ontology/successor\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Device\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "AMD",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Advanced_Micro_Devices",
        "seq": "47,50"
      }
    ],
    "id": "4a31ab37401a4ef5ad33539030e1f079",
    "predicate mapping": [
      {
        "label": "CPU",
        "uri": "http://dbpedia.org/ontology/cpu",
        "seq": "37,40",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "successor",
        "uri": "http://dbpedia.org/ontology/successor",
        "seq": "25,34",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "device",
        "uri": "http://dbpedia.org/ontology/Device",
        "seq": "12,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the TV show whose producer is Stephen E. Ambrose and company is HBO ?",
    "SerialNumber": "1862",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/producer\u003e \u003chttp://dbpedia.org/resource/Stephen_E._Ambrose\u003e . ?uri \u003chttp://dbpedia.org/ontology/company\u003e \u003chttp://dbpedia.org/resource/HBO\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Stephen E. Ambrose",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Stephen_E._Ambrose",
        "seq": "35,53"
      },
      {
        "label": "HBO",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/HBO",
        "seq": "69,72"
      }
    ],
    "id": "5be47b8830304a13bc505638e513ee8e",
    "predicate mapping": [
      {
        "label": "producer",
        "uri": "http://dbpedia.org/property/producer",
        "seq": "23,31",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/company",
        "seq": "58,65",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "12,16",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "What are the movies whose musicians\u0027s home town is Volos?",
    "SerialNumber": "1863",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/hometown\u003e \u003chttp://dbpedia.org/resource/Volos\u003e . ?uri \u003chttp://dbpedia.org/property/music\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Volos",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Volos",
        "seq": "51,56"
      }
    ],
    "id": "15bff090fc0748d79b3ae1c06235f0ab",
    "predicate mapping": [
      {
        "label": "home town",
        "uri": "http://dbpedia.org/ontology/hometown",
        "seq": "38,47",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "music",
        "uri": "http://dbpedia.org/property/music",
        "seq": "26,31",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "13,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the fictional character whose relatives are Huey, Dewey, and Louie and is of species American Pekin duck?",
    "SerialNumber": "1864",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/relatives\u003e \u003chttp://dbpedia.org/resource/Huey,_Dewey,_and_Louie\u003e . ?uri \u003chttp://dbpedia.org/ontology/species\u003e \u003chttp://dbpedia.org/resource/American_Pekin_duck\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/FictionalCharacter\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Huey, Dewey, and Louie",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Huey,_Dewey,_and_Louie",
        "seq": "49,71"
      },
      {
        "label": "American Pekin duck",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/American_Pekin_duck",
        "seq": "90,109"
      }
    ],
    "id": "15578900e719497ea0e89f95818a753a",
    "predicate mapping": [
      {
        "label": "relatives",
        "uri": "http://dbpedia.org/property/relatives",
        "seq": "35,44",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "species",
        "uri": "http://dbpedia.org/ontology/species",
        "seq": "82,89",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "fictional character",
        "uri": "http://dbpedia.org/ontology/FictionalCharacter",
        "seq": "9,28",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "List the school of Bobby Skinstad?",
    "SerialNumber": "1865",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Bobby_Skinstad\u003e \u003chttp://dbpedia.org/property/school\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Bobby Skinstad",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Bobby_Skinstad",
        "seq": "19,33"
      }
    ],
    "id": "05e8ba378fa84157a0c3163e2e5a29bb",
    "predicate mapping": [
      {
        "label": "school",
        "uri": "http://dbpedia.org/property/school",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Who authored the work illustrated by Hiroyuki Takei?",
    "SerialNumber": "1867",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/illustrator\u003e \u003chttp://dbpedia.org/resource/Hiroyuki_Takei\u003e . ?x \u003chttp://dbpedia.org/property/author\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Hiroyuki Takei",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Hiroyuki_Takei",
        "seq": "37,51"
      }
    ],
    "id": "2bc92d2e97e4487786a07b6f8ae592b4",
    "predicate mapping": [
      {
        "label": "illustrated by",
        "uri": "http://dbpedia.org/ontology/illustrator",
        "seq": "22,36",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "author",
        "uri": "http://dbpedia.org/property/author",
        "seq": "4,10",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "List the saints venerated in Islam having major shrine as Tomb of Joshua ?",
    "SerialNumber": "1871",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/majorShrine\u003e \u003chttp://dbpedia.org/resource/Tomb_of_Joshua\u003e . ?uri \u003chttp://dbpedia.org/ontology/veneratedIn\u003e \u003chttp://dbpedia.org/resource/Islam\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Saint\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Tomb of Joshua",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Tomb_of_Joshua",
        "seq": "58,72"
      },
      {
        "label": "Islam",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Islam",
        "seq": "29,34"
      }
    ],
    "id": "893492c37b564d4d9e1ce129547ed023",
    "predicate mapping": [
      {
        "label": "major shrine",
        "uri": "http://dbpedia.org/property/majorShrine",
        "seq": "42,54",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "venerated in",
        "uri": "http://dbpedia.org/ontology/veneratedIn",
        "seq": "16,28",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "saint",
        "uri": "http://dbpedia.org/ontology/Saint",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "List the former team of the american football players born in Pennsylvania ?",
    "SerialNumber": "1875",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/birthPlace\u003e \u003chttp://dbpedia.org/resource/Pennsylvania\u003e . ?x \u003chttp://dbpedia.org/ontology/formerTeam\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/AmericanFootballPlayer\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Pennsylvania",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Pennsylvania",
        "seq": "62,74"
      }
    ],
    "id": "f65d311739804cc7b1db894c7af0704f",
    "predicate mapping": [
      {
        "label": "born in",
        "uri": "http://dbpedia.org/ontology/birthPlace",
        "seq": "54,61",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "former team",
        "uri": "http://dbpedia.org/ontology/formerTeam",
        "seq": "9,20",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "american football player",
        "uri": "http://dbpedia.org/ontology/AmericanFootballPlayer",
        "seq": "28,52",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "List the relatives of the children of Jon Voight ?",
    "SerialNumber": "1878",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Jon_Voight\u003e \u003chttp://dbpedia.org/property/children\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/relative\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jon Voight",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Jon_Voight",
        "seq": "38,48"
      }
    ],
    "id": "c7dbb6a48a8840779ff9be16709df500",
    "predicate mapping": [
      {
        "label": "children",
        "uri": "http://dbpedia.org/property/children",
        "seq": "26,34",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "relative",
        "uri": "http://dbpedia.org/ontology/relative",
        "seq": "9,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "who are the managers of england national under 20 football team?",
    "SerialNumber": "1879",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/managerclubs\u003e \u003chttp://dbpedia.org/resource/England_national_under-20_football_team\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "england national under 20 football team",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/England_national_under-20_football_team",
        "seq": "47,49"
      }
    ],
    "id": "56eb8602184a4434af0162a88397b937",
    "predicate mapping": [
      {
        "label": "managers",
        "uri": "http://dbpedia.org/property/managerclubs",
        "seq": "12,20",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Did Jim Kiick do his highschool in New Jersey?",
    "SerialNumber": "1881",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Jim_Kiick\u003e \u003chttp://dbpedia.org/property/highSchool\u003e \u003chttp://dbpedia.org/resource/New_Jersey\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jim Kiick",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Jim_Kiick",
        "seq": "4,13"
      },
      {
        "label": "New Jersey",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/New_Jersey",
        "seq": "35,45"
      }
    ],
    "id": "0572e71a8200411493afdbc1072f5dc1",
    "predicate mapping": [
      {
        "label": "highschool",
        "uri": "http://dbpedia.org/property/highSchool",
        "seq": "21,31",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Was the song The Boy is Mine recorded in Atlanta?",
    "SerialNumber": "1884",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/The_Boy_Is_Mine_(song)\u003e \u003chttp://dbpedia.org/property/recorded\u003e \u003chttp://dbpedia.org/resource/Atlanta\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "The Boy is Mine",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Boy_Is_Mine_(song)",
        "seq": "13,28"
      },
      {
        "label": "Atlanta",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Atlanta",
        "seq": "41,48"
      }
    ],
    "id": "b70fa433f4dd4ed88a72bdc33714a9fd",
    "predicate mapping": [
      {
        "label": "recorded",
        "uri": "http://dbpedia.org/property/recorded",
        "seq": "29,37",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "How many things do bridges designed by the UEM group go over?",
    "SerialNumber": "1886",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/designer\u003e \u003chttp://dbpedia.org/resource/UEM_Group\u003e . ?x \u003chttp://dbpedia.org/property/crosses\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "UEM group",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/UEM_Group",
        "seq": "43,52"
      }
    ],
    "id": "80e23668ba59456699b2f0017dc1d2f0",
    "predicate mapping": [
      {
        "label": "designed",
        "uri": "http://dbpedia.org/property/designer",
        "seq": "27,35",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "over",
        "uri": "http://dbpedia.org/property/crosses",
        "seq": "56,60",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Who is the fictional character who portrayed in Terminator 2: Judgment Day?",
    "SerialNumber": "1887",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/portrayer\u003e \u003chttp://dbpedia.org/resource/Terminator_2:_Judgment_Day\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/FictionalCharacter\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Terminator 2",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Terminator_2:_Judgment_Day",
        "seq": "48,60"
      }
    ],
    "id": "3938c7827542407499282f308306e854",
    "predicate mapping": [
      {
        "label": "portrayed",
        "uri": "http://dbpedia.org/ontology/portrayer",
        "seq": "35,44",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "fictional character",
        "uri": "http://dbpedia.org/ontology/FictionalCharacter",
        "seq": "11,30",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Name the river which flows through the closest city of Mount Raimer ?",
    "SerialNumber": "1888",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Mount_Raimer\u003e \u003chttp://dbpedia.org/property/nearestCity\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/river\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Mount Raimer",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Mount_Raimer",
        "seq": "55,67"
      }
    ],
    "id": "48c8905bf346458bb8aa3e01c93dce7e",
    "predicate mapping": [
      {
        "label": "city",
        "uri": "http://dbpedia.org/property/nearestCity",
        "seq": "47,51",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/river",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who composed songs in the Mr Tambourine Man album?",
    "SerialNumber": "1889",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/album\u003e \u003chttp://dbpedia.org/resource/Mr._Tambourine_Man_(album)\u003e . ?x \u003chttp://dbpedia.org/ontology/composer\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Song\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Tambourine Man album",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Mr._Tambourine_Man_(album)",
        "seq": "29,43"
      }
    ],
    "id": "a4854eb52d9844c99427d80f90751a22",
    "predicate mapping": [
      {
        "label": "album",
        "uri": "http://dbpedia.org/property/album",
        "seq": "44,49",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "composed",
        "uri": "http://dbpedia.org/ontology/composer",
        "seq": "4,12",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "song",
        "uri": "http://dbpedia.org/ontology/Song",
        "seq": "13,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "Which movies\u0027 music is composed by people associated with the band Yes?",
    "SerialNumber": "1891",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/associatedMusicalArtist\u003e \u003chttp://dbpedia.org/resource/Yes_(band)\u003e . ?uri \u003chttp://dbpedia.org/ontology/musicComposer\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Yes",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Yes_(band)",
        "seq": "67,70"
      }
    ],
    "id": "149bc5e1fd2444619dd328bac52f849b",
    "predicate mapping": [
      {
        "label": "associated music",
        "uri": "http://dbpedia.org/ontology/associatedMusicalArtist",
        "seq": "-1,15",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "composed",
        "uri": "http://dbpedia.org/ontology/musicComposer",
        "seq": "23,31",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "6,11",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "What is the death place of the Marina Pankova and Viktor Ulyanich?",
    "SerialNumber": "1892",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Marina_Pankova\u003e \u003chttp://dbpedia.org/ontology/deathPlace\u003e ?uri. \u003chttp://dbpedia.org/resource/Viktor_Ulyanich\u003e \u003chttp://dbpedia.org/ontology/deathPlace\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Marina Pankova",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Marina_Pankova",
        "seq": "31,45"
      },
      {
        "label": "Viktor Ulyanich",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Viktor_Ulyanich",
        "seq": "50,65"
      }
    ],
    "id": "d0b29d9d5808405fa11f801b8506338d",
    "predicate mapping": [
      {
        "label": "death place",
        "uri": "http://dbpedia.org/ontology/deathPlace",
        "seq": "12,23",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "death place",
        "uri": "http://dbpedia.org/ontology/deathPlace",
        "seq": "12,23",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "111",
    "question": "How many services are there of the companies whose services is Web hosting service ?",
    "SerialNumber": "1895",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/services\u003e \u003chttp://dbpedia.org/resource/Web_hosting_service\u003e . ?x \u003chttp://dbpedia.org/property/services\u003e ?uri }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Web hosting service",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Web_hosting_service",
        "seq": "63,82"
      }
    ],
    "id": "6e341f9757994d368143a578965e0a0f",
    "predicate mapping": [
      {
        "label": "services",
        "uri": "http://dbpedia.org/property/services",
        "seq": "9,17",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "services",
        "uri": "http://dbpedia.org/property/services",
        "seq": "9,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "In which region is the rival school of Somerset, Massachusetts located?",
    "SerialNumber": "1896",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/rival\u003e \u003chttp://dbpedia.org/resource/Somerset,_Massachusetts\u003e . ?x \u003chttp://dbpedia.org/ontology/region\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/School\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Somerset, Massachusetts",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Somerset,_Massachusetts",
        "seq": "39,62"
      }
    ],
    "id": "7b84eeaeb31143dba0d74b20dcc60e1c",
    "predicate mapping": [
      {
        "label": "rival",
        "uri": "http://dbpedia.org/property/rival",
        "seq": "23,28",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "region",
        "uri": "http://dbpedia.org/ontology/region",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "school",
        "uri": "http://dbpedia.org/ontology/School",
        "seq": "29,35",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the ethnicity of Linda Hogan ?",
    "SerialNumber": "1897",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Linda_Hogan\u003e \u003chttp://dbpedia.org/property/ethnicity\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Linda Hogan",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Linda_Hogan",
        "seq": "25,36"
      }
    ],
    "id": "38fa1e3c921240608e748ef6ccca70f0",
    "predicate mapping": [
      {
        "label": "ethnicity",
        "uri": "http://dbpedia.org/property/ethnicity",
        "seq": "12,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "By which university is the literary magazine named Stone Canoe published?",
    "SerialNumber": "1899",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Stone_Canoe\u003e \u003chttp://dbpedia.org/ontology/publisher\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Stone Canoe",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Stone_Canoe",
        "seq": "51,62"
      }
    ],
    "id": "ef3ade53eec84b978013bf8a36b43ddd",
    "predicate mapping": [
      {
        "label": "published",
        "uri": "http://dbpedia.org/ontology/publisher",
        "seq": "63,72",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who is the relative of Jim Farley (businessman) ?",
    "SerialNumber": "1900",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Jim_Farley_(businessman)\u003e \u003chttp://dbpedia.org/property/relatives\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jim Farley (businessman)",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Jim_Farley_(businessman)",
        "seq": "23,47"
      }
    ],
    "id": "069c73f4c6c84f3b8bed56b9f7dd229d",
    "predicate mapping": [
      {
        "label": "relative",
        "uri": "http://dbpedia.org/property/relatives",
        "seq": "11,19",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "Name the rivers whose source country\u0027s capital is Lusaka?",
    "SerialNumber": "1902",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/capital\u003e \u003chttp://dbpedia.org/resource/Lusaka\u003e . ?uri \u003chttp://dbpedia.org/ontology/sourceCountry\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/River\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Lusaka",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Lusaka",
        "seq": "50,56"
      }
    ],
    "id": "16b3d3743de342dbb6297978d57410bc",
    "predicate mapping": [
      {
        "label": "capital",
        "uri": "http://dbpedia.org/ontology/capital",
        "seq": "39,46",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "source country",
        "uri": "http://dbpedia.org/ontology/sourceCountry",
        "seq": "22,36",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "From where is Quinn Ojinnaka billed?",
    "SerialNumber": "1904",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Quinn_Ojinnaka\u003e \u003chttp://dbpedia.org/property/billed\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Quinn Ojinnaka",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Quinn_Ojinnaka",
        "seq": "14,28"
      }
    ],
    "id": "457b03f072e94856ae7b41637c9176a2",
    "predicate mapping": [
      {
        "label": "billed",
        "uri": "http://dbpedia.org/property/billed",
        "seq": "29,35",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What are the movies produced by Michael Deeley?",
    "SerialNumber": "1905",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/producer\u003e \u003chttp://dbpedia.org/resource/Michael_Deeley\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Michael Deeley",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Michael_Deeley",
        "seq": "32,46"
      }
    ],
    "id": "13935f6f7c0546b48d83d2817eeb3a84",
    "predicate mapping": [
      {
        "label": "produced",
        "uri": "http://dbpedia.org/property/producer",
        "seq": "20,28",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "13,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who is the narrator of The Price of Beauty ?",
    "SerialNumber": "1907",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/The_Price_of_Beauty\u003e \u003chttp://dbpedia.org/ontology/narrator\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "The Price of Beauty",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Price_of_Beauty",
        "seq": "23,42"
      }
    ],
    "id": "ef9ffe8b32f046acbf228229922d57c8",
    "predicate mapping": [
      {
        "label": "narrator",
        "uri": "http://dbpedia.org/ontology/narrator",
        "seq": "11,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the area of the Tar Heel Sports Network which is  official residence of the Michael Nichols (photographer) ?",
    "SerialNumber": "1909",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Tar_Heel_Sports_Network\u003e \u003chttp://dbpedia.org/property/area\u003e ?uri. \u003chttp://dbpedia.org/resource/Michael_Nichols_(photographer)\u003e \u003chttp://dbpedia.org/ontology/residence\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Tar Heel Sports Network",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Tar_Heel_Sports_Network",
        "seq": "24,47"
      },
      {
        "label": "Michael Nichols (photographer)",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Michael_Nichols_(photographer)",
        "seq": "84,114"
      }
    ],
    "id": "f5a49295f8c54b9da9ec95751c275127",
    "predicate mapping": [
      {
        "label": "area",
        "uri": "http://dbpedia.org/property/area",
        "seq": "12,16",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "residence",
        "uri": "http://dbpedia.org/ontology/residence",
        "seq": "67,76",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who are the writers of South Park: The Stick of Truth?",
    "SerialNumber": "1911",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/South_Park:_The_Stick_of_Truth\u003e \u003chttp://dbpedia.org/property/writer\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "South Park: The Stick of Truth",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/South_Park:_The_Stick_of_Truth",
        "seq": "23,53"
      }
    ],
    "id": "49882217618b4878acdbf10713ec47c8",
    "predicate mapping": [
      {
        "label": "writers",
        "uri": "http://dbpedia.org/property/writer",
        "seq": "12,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "106",
    "question": "Enumerate all those who are in the Board of companies founded in New York?",
    "SerialNumber": "1912",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/foundation\u003e \u003chttp://dbpedia.org/resource/New_York\u003e . ?uri \u003chttp://dbpedia.org/ontology/board\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "New York",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/New_York",
        "seq": "65,73"
      }
    ],
    "id": "26be0e284521464d866cfe4b6038a5fe",
    "predicate mapping": [
      {
        "label": "founded",
        "uri": "http://dbpedia.org/property/foundation",
        "seq": "54,61",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "Board",
        "uri": "http://dbpedia.org/ontology/board",
        "seq": "35,40",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the television show developed by J. Michael Straczynski and distributed by Warner Bros. Television?",
    "SerialNumber": "1913",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/developer\u003e \u003chttp://dbpedia.org/resource/J._Michael_Straczynski\u003e . ?uri \u003chttp://dbpedia.org/property/distributor\u003e \u003chttp://dbpedia.org/resource/Warner_Bros._Television\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "J. Michael Straczynski",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/J._Michael_Straczynski",
        "seq": "38,60"
      },
      {
        "label": "Warner Bros. Television",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Warner_Bros._Television",
        "seq": "80,103"
      }
    ],
    "id": "56262987cc8244aa8df969f4fb5a322e",
    "predicate mapping": [
      {
        "label": "developed by",
        "uri": "http://dbpedia.org/ontology/developer",
        "seq": "25,37",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "distributed by",
        "uri": "http://dbpedia.org/property/distributor",
        "seq": "65,79",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "9,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who did Bruce Bochy play for ? ",
    "SerialNumber": "1914",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Bruce_Bochy\u003e \u003chttp://dbpedia.org/ontology/team\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Bruce Bochy",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Bruce_Bochy",
        "seq": "8,19"
      }
    ],
    "id": "ab2e96b28d8345188ec38444b7b5d986",
    "predicate mapping": [
      {
        "label": "play",
        "uri": "http://dbpedia.org/ontology/team",
        "seq": "20,24",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who directed the albums recorded in Anaheim?",
    "SerialNumber": "1917",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/recordedIn\u003e \u003chttp://dbpedia.org/resource/Anaheim,_California\u003e . ?x \u003chttp://dbpedia.org/property/director\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Album\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Anaheim",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Anaheim,_California",
        "seq": "36,43"
      }
    ],
    "id": "ee9d772c72a44b26b65fd5441aca57f9",
    "predicate mapping": [
      {
        "label": "recorded in",
        "uri": "http://dbpedia.org/ontology/recordedIn",
        "seq": "24,35",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "directed",
        "uri": "http://dbpedia.org/property/director",
        "seq": "4,12",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "album",
        "uri": "http://dbpedia.org/ontology/Album",
        "seq": "17,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "List few Swedish language movies ?",
    "SerialNumber": "1918",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/language\u003e \u003chttp://dbpedia.org/resource/Swedish_language\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Swedish language",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Swedish_language",
        "seq": "9,25"
      }
    ],
    "id": "6deb0bfd163845caab7f56dfb4320204",
    "predicate mapping": [
      {
        "label": "language",
        "uri": "http://dbpedia.org/property/language",
        "seq": "17,25",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "26,31",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "What is the home town of the band which is the artist of Your Ice Cream\u0027s Dirty ?",
    "SerialNumber": "1919",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Your_Ice_Cream\u0027s_Dirty\u003e \u003chttp://dbpedia.org/property/artist\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/hometown\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Band\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Your Ice Cream\u0027s Dirty",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Your_Ice_Cream\u0027s_Dirty",
        "seq": "57,79"
      }
    ],
    "id": "3b09ae63d05f4be68bc5b4f1851a85b3",
    "predicate mapping": [
      {
        "label": "artist",
        "uri": "http://dbpedia.org/property/artist",
        "seq": "47,53",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "home town",
        "uri": "http://dbpedia.org/ontology/hometown",
        "seq": "12,21",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "band",
        "uri": "http://dbpedia.org/ontology/Band",
        "seq": "29,33",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "How many religion\u0027s people have died in Malaysia?",
    "SerialNumber": "1921",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/deathPlace\u003e \u003chttp://dbpedia.org/resource/Malaysia\u003e . ?x \u003chttp://dbpedia.org/ontology/religion\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Malaysia",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Malaysia",
        "seq": "40,48"
      }
    ],
    "id": "b829cf441b9c42dbb820113b2e8f0f95",
    "predicate mapping": [
      {
        "label": "died in",
        "uri": "http://dbpedia.org/ontology/deathPlace",
        "seq": "32,39",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion",
        "seq": "9,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which river\u0027s source mountain is Baikal Mountains and it\u0027s mouth is Lena Delta Wildlife Reserve?",
    "SerialNumber": "1923",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/sourceMountain\u003e \u003chttp://dbpedia.org/resource/Baikal_Mountains\u003e . ?uri \u003chttp://dbpedia.org/ontology/riverMouth\u003e \u003chttp://dbpedia.org/resource/Lena_Delta_Wildlife_Reserve\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/River\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Baikal Mountains",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Baikal_Mountains",
        "seq": "33,49"
      },
      {
        "label": "Lena Delta Wildlife Reserve",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Lena_Delta_Wildlife_Reserve",
        "seq": "68,95"
      }
    ],
    "id": "2b8a8b2d5eaf46d0b7aa820e04fefcb9",
    "predicate mapping": [
      {
        "label": "source mountain",
        "uri": "http://dbpedia.org/ontology/sourceMountain",
        "seq": "14,29",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "mouth",
        "uri": "http://dbpedia.org/ontology/riverMouth",
        "seq": "59,64",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River",
        "seq": "6,11",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the person whose daughter is Rohan Marley and also another children named Sharon Marley ?",
    "SerialNumber": "1924",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/child\u003e \u003chttp://dbpedia.org/resource/Rohan_Marley\u003e . ?uri \u003chttp://dbpedia.org/property/children\u003e \u003chttp://dbpedia.org/resource/Sharon_Marley\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Rohan Marley",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Rohan_Marley",
        "seq": "34,46"
      },
      {
        "label": "Sharon Marley",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Sharon_Marley",
        "seq": "79,92"
      }
    ],
    "id": "84a295da828b427a813fe17472240251",
    "predicate mapping": [
      {
        "label": "children",
        "uri": "http://dbpedia.org/ontology/child",
        "seq": "64,72",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "children",
        "uri": "http://dbpedia.org/property/children",
        "seq": "64,72",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/Person",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the members of European Go Federation?",
    "SerialNumber": "1925",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/European_Go_Federation\u003e \u003chttp://dbpedia.org/property/membership\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "European Go Federation",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/European_Go_Federation",
        "seq": "20,42"
      }
    ],
    "id": "a93043e0abc847e0856bff25d6507a08",
    "predicate mapping": [
      {
        "label": "members",
        "uri": "http://dbpedia.org/property/membership",
        "seq": "9,16",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "What is the state of origin of the person who is the successor of Tetsugen Bernard Glassman?",
    "SerialNumber": "1926",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Tetsugen_Bernard_Glassman\u003e \u003chttp://dbpedia.org/ontology/successor\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/stateOfOrigin\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Tetsugen Bernard Glassman",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Tetsugen_Bernard_Glassman",
        "seq": "66,91"
      }
    ],
    "id": "d1cfe025d3704ab1a2fa9008bb6ee9fa",
    "predicate mapping": [
      {
        "label": "successor",
        "uri": "http://dbpedia.org/ontology/successor",
        "seq": "53,62",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "state of origin",
        "uri": "http://dbpedia.org/ontology/stateOfOrigin",
        "seq": "12,27",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/Person",
        "seq": "35,41",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "111",
    "question": "How many other wine region are there of the grapes whose one of the wine region is Michigan ?",
    "SerialNumber": "1927",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/wineRegion\u003e \u003chttp://dbpedia.org/resource/Michigan\u003e . ?x \u003chttp://dbpedia.org/ontology/wineRegion\u003e ?uri }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Michigan",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Michigan",
        "seq": "83,91"
      }
    ],
    "id": "eb2766085bd746d89dd712c21ee272c6",
    "predicate mapping": [
      {
        "label": "wine region",
        "uri": "http://dbpedia.org/ontology/wineRegion",
        "seq": "15,26",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "wine region",
        "uri": "http://dbpedia.org/ontology/wineRegion",
        "seq": "15,26",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Where was WiZeefa founded ?",
    "SerialNumber": "1928",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/WiZeefa\u003e \u003chttp://dbpedia.org/property/foundation\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "WiZeefa",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/WiZeefa",
        "seq": "10,17"
      }
    ],
    "id": "20f92144bb5446848093e63a491a213f",
    "predicate mapping": [
      {
        "label": "founded",
        "uri": "http://dbpedia.org/property/foundation",
        "seq": "18,25",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "To which families does the Koolakamba belong ?",
    "SerialNumber": "1929",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Koolakamba\u003e \u003chttp://dbpedia.org/ontology/family\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Koolakamba",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Koolakamba",
        "seq": "27,37"
      }
    ],
    "id": "687c79c0439d4ae698063ce7d8192262",
    "predicate mapping": [
      {
        "label": "families",
        "uri": "http://dbpedia.org/ontology/family",
        "seq": "9,17",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which publisher of Lucifer\u0027s hammer is also known for Jo Garcia ?",
    "SerialNumber": "1931",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Lucifer\u0027s_Hammer\u003e \u003chttp://dbpedia.org/ontology/publisher\u003e ?uri. \u003chttp://dbpedia.org/resource/Jo_Garcia\u003e \u003chttp://dbpedia.org/ontology/knownFor\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Lucifer\u0027s hammer",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Lucifer\u0027s_Hammer",
        "seq": "19,35"
      },
      {
        "label": "Jo Garcia",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Jo_Garcia",
        "seq": "54,63"
      }
    ],
    "id": "fc2b57a997ea496fa59b59645c999611",
    "predicate mapping": [
      {
        "label": "publisher",
        "uri": "http://dbpedia.org/ontology/publisher",
        "seq": "6,15",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "known for",
        "uri": "http://dbpedia.org/ontology/knownFor",
        "seq": "44,53",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which place founded by Penobscot Island Air is also the location fo Ellei Johndro ?",
    "SerialNumber": "1935",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Penobscot_Island_Air\u003e \u003chttp://dbpedia.org/property/founded\u003e ?uri. \u003chttp://dbpedia.org/resource/Ellei_Johndro\u003e \u003chttp://dbpedia.org/ontology/birthPlace\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Penobscot Island Air",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Penobscot_Island_Air",
        "seq": "23,43"
      },
      {
        "label": "Ellei Johndro",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ellei_Johndro",
        "seq": "68,81"
      }
    ],
    "id": "a27e4cca5be64ee1a9b027ad15d8e2d9",
    "predicate mapping": [
      {
        "label": "founded by",
        "uri": "http://dbpedia.org/property/founded",
        "seq": "12,22",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "place",
        "uri": "http://dbpedia.org/ontology/birthPlace",
        "seq": "6,11",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "101",
    "question": "How many people work at the FBI?",
    "SerialNumber": "1937",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/ontology/occupation\u003e \u003chttp://dbpedia.org/resource/Federal_Bureau_of_Investigation\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "FBI",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Federal_Bureau_of_Investigation",
        "seq": "28,31"
      }
    ],
    "id": "3b5cc7aa7419456797aae6a58176eea2",
    "predicate mapping": [
      {
        "label": "work",
        "uri": "http://dbpedia.org/ontology/occupation",
        "seq": "16,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Name the hockey team whose head coach is Alain Vigneault?",
    "SerialNumber": "1938",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/headCoach\u003e \u003chttp://dbpedia.org/resource/Alain_Vigneault\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/HockeyTeam\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Alain Vigneault",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Alain_Vigneault",
        "seq": "41,56"
      }
    ],
    "id": "c83d6063d4884c32bb551e7905d704d9",
    "predicate mapping": [
      {
        "label": "head coach",
        "uri": "http://dbpedia.org/property/headCoach",
        "seq": "27,37",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "hockey team",
        "uri": "http://dbpedia.org/ontology/HockeyTeam",
        "seq": "9,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "In which state is Dorchester Bay (Boston Harbor) ?",
    "SerialNumber": "1939",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Dorchester_Bay_(Boston_Harbor)\u003e \u003chttp://dbpedia.org/property/state\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Dorchester Bay",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Dorchester_Bay_(Boston_Harbor)",
        "seq": "18,32"
      }
    ],
    "id": "fc6a428c69f44439b0c0594e95f8f2a8",
    "predicate mapping": [
      {
        "label": "state",
        "uri": "http://dbpedia.org/property/state",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "To which political party do the children of Sonia Gandhi belong?",
    "SerialNumber": "1940",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Sonia_Gandhi\u003e \u003chttp://dbpedia.org/property/children\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/party\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Sonia Gandhi",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Sonia_Gandhi",
        "seq": "44,56"
      }
    ],
    "id": "1211b3f99aab4dc185ce380c1579a8e0",
    "predicate mapping": [
      {
        "label": "children",
        "uri": "http://dbpedia.org/property/children",
        "seq": "32,40",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "political party",
        "uri": "http://dbpedia.org/ontology/party",
        "seq": "9,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Which religion followers are the members of Janata Dal?",
    "SerialNumber": "1941",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/party\u003e \u003chttp://dbpedia.org/resource/Janata_Dal\u003e . ?x \u003chttp://dbpedia.org/ontology/religion\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Janata Dal",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Janata_Dal",
        "seq": "44,54"
      }
    ],
    "id": "fe726ec84eda43a7aa4725b1811e6540",
    "predicate mapping": [
      {
        "label": "are",
        "uri": "http://dbpedia.org/property/party",
        "seq": "25,28",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion",
        "seq": "6,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "111",
    "question": "Count the nearest city to the historic palce whose one of the nearest city is Wisconsin ?",
    "SerialNumber": "1942",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/nearestCity\u003e \u003chttp://dbpedia.org/resource/Wisconsin\u003e . ?x \u003chttp://dbpedia.org/property/nearestCity\u003e ?uri }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Wisconsin",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Wisconsin",
        "seq": "78,87"
      }
    ],
    "id": "78f8aae7da294e14b5bfdff2bb35d039",
    "predicate mapping": [
      {
        "label": "nearest city",
        "uri": "http://dbpedia.org/ontology/nearestCity",
        "seq": "10,22",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "nearest city",
        "uri": "http://dbpedia.org/property/nearestCity",
        "seq": "10,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "What is the airline company has its headquarters in Dublin Airport?",
    "SerialNumber": "1943",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/headquarters\u003e \u003chttp://dbpedia.org/resource/Dublin_Airport\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Dublin Airport",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Dublin_Airport",
        "seq": "52,66"
      }
    ],
    "id": "5c04724cd502432197623d0c85e4cd8d",
    "predicate mapping": [
      {
        "label": "headquarters",
        "uri": "http://dbpedia.org/property/headquarters",
        "seq": "36,48",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What are the teams for which Wilfred McDonald played for?",
    "SerialNumber": "1944",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Wilfred_McDonald\u003e \u003chttp://dbpedia.org/property/playedFor\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Wilfred McDonald",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Wilfred_McDonald",
        "seq": "29,45"
      }
    ],
    "id": "7424ae95bf2f42f5a33391da3da194a8",
    "predicate mapping": [
      {
        "label": "played for",
        "uri": "http://dbpedia.org/property/playedFor",
        "seq": "46,56",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Is Dave Schulz a band member of Berlin?",
    "SerialNumber": "1947",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Berlin_(band)\u003e \u003chttp://dbpedia.org/ontology/bandMember\u003e \u003chttp://dbpedia.org/resource/Dave_Schulz_(musician)\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Berlin",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Berlin_(band)",
        "seq": "32,38"
      },
      {
        "label": "Dave Schulz",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Dave_Schulz_(musician)",
        "seq": "3,14"
      }
    ],
    "id": "e14a10dfcbdb4da48072fcb7256cdf88",
    "predicate mapping": [
      {
        "label": "band member",
        "uri": "http://dbpedia.org/ontology/bandMember",
        "seq": "17,28",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Does MSX BASIC have a license of microsoft?",
    "SerialNumber": "1948",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/MSX_BASIC\u003e \u003chttp://dbpedia.org/property/license\u003e \u003chttp://dbpedia.org/resource/Microsoft\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "MSX BASIC",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/MSX_BASIC",
        "seq": "5,14"
      },
      {
        "label": "microsoft",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Microsoft",
        "seq": "33,42"
      }
    ],
    "id": "d5927c0324be4e2d8fa01205bb38a09e",
    "predicate mapping": [
      {
        "label": "license",
        "uri": "http://dbpedia.org/property/license",
        "seq": "22,29",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "311",
    "question": "List the subsequent work of the albums whose one of the subsequent work is Planet Waves?",
    "SerialNumber": "1949",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/subsequentWork\u003e \u003chttp://dbpedia.org/resource/Planet_Waves\u003e . ?x \u003chttp://dbpedia.org/ontology/subsequentWork\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Album\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Planet Waves",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Planet_Waves",
        "seq": "75,87"
      }
    ],
    "id": "ed1295a0e7e74eedae807b925a9ffc34",
    "predicate mapping": [
      {
        "label": "subsequent work",
        "uri": "http://dbpedia.org/ontology/subsequentWork",
        "seq": "9,24",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "subsequent work",
        "uri": "http://dbpedia.org/ontology/subsequentWork",
        "seq": "9,24",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "album",
        "uri": "http://dbpedia.org/ontology/Album",
        "seq": "32,37",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "307",
    "question": "In which mountain Inyo National Forest and California are located?",
    "SerialNumber": "1950",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/ontology/locatedInArea\u003e \u003chttp://dbpedia.org/resource/Inyo_National_Forest\u003e . ?uri \u003chttp://dbpedia.org/ontology/locatedInArea\u003e \u003chttp://dbpedia.org/resource/California\u003e . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Mountain\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Inyo National Forest",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Inyo_National_Forest",
        "seq": "18,38"
      },
      {
        "label": "California",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/California",
        "seq": "43,53"
      }
    ],
    "id": "6e226915fc37413b8740c3a74cc977c5",
    "predicate mapping": [
      {
        "label": "Nation",
        "uri": "http://dbpedia.org/ontology/locatedInArea",
        "seq": "23,29",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "Nation",
        "uri": "http://dbpedia.org/ontology/locatedInArea",
        "seq": "23,29",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "mountain",
        "uri": "http://dbpedia.org/ontology/Mountain",
        "seq": "9,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What are some licensees of the stations playing in Nashville, Tennessee?",
    "SerialNumber": "1952",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/area\u003e \u003chttp://dbpedia.org/resource/Nashville,_Tennessee\u003e . ?x \u003chttp://dbpedia.org/property/licensee\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/RadioStation\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Nashville, Tennessee",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Nashville,_Tennessee",
        "seq": "51,71"
      }
    ],
    "id": "e486eea0f7ff4cf899bb864fd58f6f3a",
    "predicate mapping": [
      {
        "label": "are",
        "uri": "http://dbpedia.org/property/area",
        "seq": "5,8",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "licensee",
        "uri": "http://dbpedia.org/property/licensee",
        "seq": "14,22",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "stations",
        "uri": "http://dbpedia.org/ontology/RadioStation",
        "seq": "31,39",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "List the American MEditerranean Sea city is also the place of death of Laszlo Bellak ?",
    "SerialNumber": "1954",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/American_Mediterranean_Sea\u003e \u003chttp://dbpedia.org/property/cities\u003e ?uri. \u003chttp://dbpedia.org/resource/Laszlo_Bellak\u003e \u003chttp://dbpedia.org/ontology/deathPlace\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "American MEditerranean Sea",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/American_Mediterranean_Sea",
        "seq": "9,35"
      },
      {
        "label": "Laszlo Bellak",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Laszlo_Bellak",
        "seq": "71,84"
      }
    ],
    "id": "e45f92ad9a4348f4b762dff1b9350929",
    "predicate mapping": [
      {
        "label": "city",
        "uri": "http://dbpedia.org/property/cities",
        "seq": "36,40",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "place death",
        "uri": "http://dbpedia.org/ontology/deathPlace",
        "seq": "-1,10",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "Which professional fighter, who is also a politician and was elected to House of Representatives of the Philippines?",
    "SerialNumber": "1956",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/occupation\u003e \u003chttp://dbpedia.org/resource/House_of_Representatives_of_the_Philippines\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "House of Representatives of the Philippines",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/House_of_Representatives_of_the_Philippines",
        "seq": "72,115"
      }
    ],
    "id": "700bcd617886425282255b4748de26f6",
    "predicate mapping": [
      {
        "label": "profession",
        "uri": "http://dbpedia.org/property/occupation",
        "seq": "6,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Isaac Hayes has acted in which movies ?",
    "SerialNumber": "1957",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/starring\u003e \u003chttp://dbpedia.org/resource/Isaac_Hayes\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Isaac Hayes",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Isaac_Hayes",
        "seq": "0,11"
      }
    ],
    "id": "66867f2d03ca4db8b5d199cad01a7dee",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/property/starring",
        "seq": "22,24",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "31,36",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "31,36",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What is the television show whose related with  Doctor Who Confidential?",
    "SerialNumber": "1959",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/related\u003e \u003chttp://dbpedia.org/resource/Doctor_Who_Confidential\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Doctor Who Confidential",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Doctor_Who_Confidential",
        "seq": "48,71"
      }
    ],
    "id": "1c9a76e118864c9c95e250236798f5fa",
    "predicate mapping": [
      {
        "label": "related",
        "uri": "http://dbpedia.org/ontology/related",
        "seq": "34,41",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "12,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "Name all those buried in a place governed by a city council.",
    "SerialNumber": "1960",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/governingBody\u003e \u003chttp://dbpedia.org/resource/City_council\u003e . ?uri \u003chttp://dbpedia.org/property/restingPlace\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "city council",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/City_council",
        "seq": "47,59"
      }
    ],
    "id": "c155dc611cc0417fa2b5841635593617",
    "predicate mapping": [
      {
        "label": "governed",
        "uri": "http://dbpedia.org/property/governingBody",
        "seq": "33,41",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "buried in",
        "uri": "http://dbpedia.org/property/restingPlace",
        "seq": "15,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What are the last two studio albums of Moondog Matinee ?",
    "SerialNumber": "1961",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Moondog_Matinee\u003e \u003chttp://dbpedia.org/ontology/subsequentWork\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Moondog Matinee",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Moondog_Matinee",
        "seq": "39,54"
      }
    ],
    "id": "7b9e8db8a3234def93777d9786fa9db7",
    "predicate mapping": [
      {
        "label": "two",
        "uri": "http://dbpedia.org/ontology/subsequentWork",
        "seq": "18,21",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "List the battles fought by Roh Tae-woo ?",
    "SerialNumber": "1963",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Roh_Tae-woo\u003e \u003chttp://dbpedia.org/property/battles\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Roh Tae-woo",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Roh_Tae-woo",
        "seq": "27,38"
      }
    ],
    "id": "8a0781ae3e9644709d33491564bbab50",
    "predicate mapping": [
      {
        "label": "battles",
        "uri": "http://dbpedia.org/property/battles",
        "seq": "9,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Which educational institution has Kaplan, Inc as it\u0027s affiliation?",
    "SerialNumber": "1965",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/affiliations\u003e \u003chttp://dbpedia.org/resource/Kaplan,_Inc.\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/EducationalInstitution\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Kaplan, Inc ",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Kaplan,_Inc.",
        "seq": "34,46"
      }
    ],
    "id": "6224c64d6d3b40529a2999e42371cac2",
    "predicate mapping": [
      {
        "label": "affiliation",
        "uri": "http://dbpedia.org/property/affiliations",
        "seq": "54,65",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "educational institution",
        "uri": "http://dbpedia.org/ontology/EducationalInstitution",
        "seq": "6,29",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "Whose wife is a presenter at WWE?",
    "SerialNumber": "1966",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/presenter\u003e \u003chttp://dbpedia.org/resource/WWE\u003e . ?uri \u003chttp://dbpedia.org/ontology/spouse\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "WWE",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/WWE",
        "seq": "29,32"
      }
    ],
    "id": "812fb89fca9641a4a51e6bda1fec74ca",
    "predicate mapping": [
      {
        "label": "presenter",
        "uri": "http://dbpedia.org/property/presenter",
        "seq": "16,25",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "wife",
        "uri": "http://dbpedia.org/ontology/spouse",
        "seq": "6,10",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "What is the parent company of company which owns Sony Bank?",
    "SerialNumber": "1968",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Sony_Bank\u003e \u003chttp://dbpedia.org/property/parent\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/parentCompany\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Company\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Sony Bank",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Sony_Bank",
        "seq": "49,58"
      }
    ],
    "id": "541c5ade920c4308934784b55bbabc52",
    "predicate mapping": [
      {
        "label": "parent",
        "uri": "http://dbpedia.org/property/parent",
        "seq": "12,18",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "parent company",
        "uri": "http://dbpedia.org/ontology/parentCompany",
        "seq": "12,26",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company",
        "seq": "19,26",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "What is the total number of writers whose singles are recorded in Miami?",
    "SerialNumber": "1969",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/recordedIn\u003e \u003chttp://dbpedia.org/resource/Miami\u003e . ?x \u003chttp://dbpedia.org/property/writer\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Miami",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Miami",
        "seq": "66,71"
      }
    ],
    "id": "f301fa4d3e7043f0a10bcbd3b6fa41d3",
    "predicate mapping": [
      {
        "label": "recorded in",
        "uri": "http://dbpedia.org/ontology/recordedIn",
        "seq": "54,65",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "writers",
        "uri": "http://dbpedia.org/property/writer",
        "seq": "28,35",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the common nationality of Viveka Babajee anad Ronny Vencatachellum ?",
    "SerialNumber": "1971",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Viveka_Babajee\u003e \u003chttp://dbpedia.org/property/citizenship\u003e ?uri. \u003chttp://dbpedia.org/resource/Ronny_Vencatachellum\u003e \u003chttp://dbpedia.org/ontology/nationality\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Viveka Babajee",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Viveka_Babajee",
        "seq": "34,48"
      },
      {
        "label": "Ronny Vencatachellum",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Ronny_Vencatachellum",
        "seq": "54,74"
      }
    ],
    "id": "af555bca8edd4d7ba2850d9d4b99f6e1",
    "predicate mapping": [
      {
        "label": "nationality",
        "uri": "http://dbpedia.org/property/citizenship",
        "seq": "19,30",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "nationality",
        "uri": "http://dbpedia.org/ontology/nationality",
        "seq": "19,30",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What is the city nearest to the historic place whose architect is Joseph Dion?",
    "SerialNumber": "1972",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/architect\u003e \u003chttp://dbpedia.org/resource/Joseph_Dion\u003e . ?x \u003chttp://dbpedia.org/ontology/nearestCity\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/HistoricPlace\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Joseph Dion",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Joseph_Dion",
        "seq": "66,77"
      }
    ],
    "id": "7f8414559c5f475ead1ee872da7dd371",
    "predicate mapping": [
      {
        "label": "architect",
        "uri": "http://dbpedia.org/property/architect",
        "seq": "53,62",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "nearest city",
        "uri": "http://dbpedia.org/ontology/nearestCity",
        "seq": "-1,11",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "historic place",
        "uri": "http://dbpedia.org/ontology/HistoricPlace",
        "seq": "32,46",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who are the employer of Don R. Berlin?",
    "SerialNumber": "1973",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Don_R._Berlin\u003e \u003chttp://dbpedia.org/ontology/employer\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Don R. Berlin",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Don_R._Berlin",
        "seq": "24,37"
      }
    ],
    "id": "8b40533f058843bdb80b6c7f4e829f19",
    "predicate mapping": [
      {
        "label": "employer",
        "uri": "http://dbpedia.org/ontology/employer",
        "seq": "12,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Name the office holder whose constituency is Haight-Ashbury?",
    "SerialNumber": "1976",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/constituency\u003e \u003chttp://dbpedia.org/resource/Haight-Ashbury\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/OfficeHolder\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Haight-Ashbury",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Haight-Ashbury",
        "seq": "45,59"
      }
    ],
    "id": "ac389328974d4442bd2e216aa4b43812",
    "predicate mapping": [
      {
        "label": "constituency",
        "uri": "http://dbpedia.org/property/constituency",
        "seq": "29,41",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "office holder",
        "uri": "http://dbpedia.org/ontology/OfficeHolder",
        "seq": "9,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What is the river whose tributary is Zarqa River?",
    "SerialNumber": "1978",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/leftTributary\u003e \u003chttp://dbpedia.org/resource/Zarqa_River\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/River\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Zarqa River",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Zarqa_River",
        "seq": "37,48"
      }
    ],
    "id": "807d486a431f48a38d65b567d7f19374",
    "predicate mapping": [
      {
        "label": "tributary",
        "uri": "http://dbpedia.org/ontology/leftTributary",
        "seq": "24,33",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River",
        "seq": "12,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "How many home stadiums are there of the seasons whose chairman in Merritt Paulson?",
    "SerialNumber": "1979",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/chairman\u003e \u003chttp://dbpedia.org/resource/Merritt_Paulson\u003e . ?x \u003chttp://dbpedia.org/ontology/homeStadium\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Merritt Paulson",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Merritt_Paulson",
        "seq": "66,81"
      }
    ],
    "id": "4a249054ec63491c84cf76d9d1aff14e",
    "predicate mapping": [
      {
        "label": "chairman",
        "uri": "http://dbpedia.org/ontology/chairman",
        "seq": "54,62",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "home stadium",
        "uri": "http://dbpedia.org/ontology/homeStadium",
        "seq": "9,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "Give me the count of all the names of characters created by Frank Miller",
    "SerialNumber": "1982",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/creators\u003e \u003chttp://dbpedia.org/resource/Frank_Miller_(comics)\u003e . ?x \u003chttp://dbpedia.org/property/characterName\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Frank Miller",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Frank_Miller_(comics)",
        "seq": "60,72"
      }
    ],
    "id": "032949490f454dbabd4797646d3e840d",
    "predicate mapping": [
      {
        "label": "created by",
        "uri": "http://dbpedia.org/property/creators",
        "seq": "49,59",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "characters",
        "uri": "http://dbpedia.org/property/characterName",
        "seq": "38,48",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "list the founders of Bream Bay ?",
    "SerialNumber": "1983",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Bream_Bay\u003e \u003chttp://dbpedia.org/property/founder\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Bream Bay",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Bream_Bay",
        "seq": "21,30"
      }
    ],
    "id": "4af1cb3060f14095a5ac3b96593361a4",
    "predicate mapping": [
      {
        "label": "founders",
        "uri": "http://dbpedia.org/property/founder",
        "seq": "9,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "401",
    "question": "Give me a count of bridges located in California ?",
    "SerialNumber": "1984",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/ontology/locatedInArea\u003e \u003chttp://dbpedia.org/resource/California\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Bridge\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "California",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/California",
        "seq": "38,48"
      }
    ],
    "id": "e91ada2d11fb415a90f5214a4568ae9a",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/locatedInArea",
        "seq": "35,37",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "bridge",
        "uri": "http://dbpedia.org/ontology/Bridge",
        "seq": "19,25",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "Name the country whose leader\u0027s deputy is Piotr Glinski?",
    "SerialNumber": "1987",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/deputy\u003e \u003chttp://dbpedia.org/resource/Piotr_Gliński\u003e . ?uri \u003chttp://dbpedia.org/property/leaderName\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Country\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Piotr Glinski",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Piotr_Gliński",
        "seq": "42,55"
      }
    ],
    "id": "16031b0772124f5996cbdab932ed9852",
    "predicate mapping": [
      {
        "label": "deputy",
        "uri": "http://dbpedia.org/property/deputy",
        "seq": "32,38",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "leader\u0027s",
        "uri": "http://dbpedia.org/property/leaderName",
        "seq": "23,31",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/Country",
        "seq": "9,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Companies founded in Taiwan have typically which divisions?",
    "SerialNumber": "1991",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/foundationPlace\u003e \u003chttp://dbpedia.org/resource/Taiwan\u003e . ?x \u003chttp://dbpedia.org/ontology/division\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Company\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Taiwan",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Taiwan",
        "seq": "21,27"
      }
    ],
    "id": "3624e029fd0e45c29e54521e58359db5",
    "predicate mapping": [
      {
        "label": "founded",
        "uri": "http://dbpedia.org/ontology/foundationPlace",
        "seq": "10,17",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "division",
        "uri": "http://dbpedia.org/ontology/division",
        "seq": "49,57",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "companies",
        "uri": "http://dbpedia.org/ontology/Company",
        "seq": "-1,8",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the debut team of ngel Escobar ?",
    "SerialNumber": "1993",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Ángel_Escobar\u003e \u003chttp://dbpedia.org/property/debutteam\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "ngel Escobar",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Ángel_Escobar",
        "seq": "31,38"
      }
    ],
    "id": "5308076f247f416480c268da88eb6df0",
    "predicate mapping": [
      {
        "label": "debut team",
        "uri": "http://dbpedia.org/property/debutteam",
        "seq": "12,22",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the hub airport of Pawan Hans, and is also the largest city of India?",
    "SerialNumber": "1994",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Pawan_Hans\u003e \u003chttp://dbpedia.org/ontology/hubAirport\u003e ?uri. \u003chttp://dbpedia.org/resource/India\u003e \u003chttp://dbpedia.org/ontology/largestCity\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Pawan Hans",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Pawan_Hans",
        "seq": "27,37"
      },
      {
        "label": "India",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/India",
        "seq": "71,76"
      }
    ],
    "id": "70568d51ea3b40fa9b6e40baba80e4fc",
    "predicate mapping": [
      {
        "label": "hub airport",
        "uri": "http://dbpedia.org/ontology/hubAirport",
        "seq": "12,23",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "largest city",
        "uri": "http://dbpedia.org/ontology/largestCity",
        "seq": "55,67",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the mascot of Galatasaray Handball Team ?",
    "SerialNumber": "2000",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Galatasaray_Handball_Team\u003e \u003chttp://dbpedia.org/property/mascot\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Galatasaray Handball Team",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Galatasaray_Handball_Team",
        "seq": "22,47"
      }
    ],
    "id": "a2f40f5069d544e0a258bc31e4b48533",
    "predicate mapping": [
      {
        "label": "mascot",
        "uri": "http://dbpedia.org/property/mascot",
        "seq": "12,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Was Nick Jonas a member of the Jonas Brothers?",
    "SerialNumber": "2001",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Jonas_Brothers\u003e \u003chttp://dbpedia.org/property/pastMembers\u003e \u003chttp://dbpedia.org/resource/Nick_Jonas\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jonas Brothers",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Jonas_Brothers",
        "seq": "31,45"
      },
      {
        "label": "Nick Jonas",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Nick_Jonas",
        "seq": "4,14"
      }
    ],
    "id": "f64ea5a5f2dc48fd8988423ab27e5f5f",
    "predicate mapping": [
      {
        "label": "member",
        "uri": "http://dbpedia.org/property/pastMembers",
        "seq": "17,23",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "7",
    "question": "Who represent the constituencies of Noe Valley and Duboce Triangle ?",
    "SerialNumber": "2003",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/property/constituency\u003e \u003chttp://dbpedia.org/resource/Noe_Valley,_San_Francisco\u003e . ?uri \u003chttp://dbpedia.org/property/constituency\u003e \u003chttp://dbpedia.org/resource/Duboce_Triangle,_San_Francisco\u003e . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Noe Valley",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Noe_Valley,_San_Francisco",
        "seq": "36,46"
      },
      {
        "label": "Duboce Triangle",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Duboce_Triangle,_San_Francisco",
        "seq": "51,66"
      }
    ],
    "id": "609bdd6c95834ba0b808371bb01cb589",
    "predicate mapping": [
      {
        "label": "constituencies",
        "uri": "http://dbpedia.org/property/constituency",
        "seq": "18,32",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "constituencies",
        "uri": "http://dbpedia.org/property/constituency",
        "seq": "18,32",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which key person of maryland jockey club is the appointer of Joseph Clay ?",
    "SerialNumber": "2005",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Joseph_Clay_(Georgia)\u003e \u003chttp://dbpedia.org/ontology/appointer\u003e ?uri. \u003chttp://dbpedia.org/resource/Maryland_Jockey_Club\u003e \u003chttp://dbpedia.org/property/keyPeople\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Joseph Clay",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Joseph_Clay_(Georgia)",
        "seq": "61,72"
      },
      {
        "label": "maryland jockey club",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Maryland_Jockey_Club",
        "seq": "20,40"
      }
    ],
    "id": "5f874cdc5f2749c298a7a13fabc7859a",
    "predicate mapping": [
      {
        "label": "appointer",
        "uri": "http://dbpedia.org/ontology/appointer",
        "seq": "48,57",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "key",
        "uri": "http://dbpedia.org/property/keyPeople",
        "seq": "6,9",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Which cities have the river one of whose Tributary is the Missouri\u0027s big spring?",
    "SerialNumber": "2006",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/rightTributary\u003e \u003chttp://dbpedia.org/resource/Big_Spring_(Missouri)\u003e . ?x \u003chttp://dbpedia.org/ontology/city\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/River\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "big spring",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Big_Spring_(Missouri)",
        "seq": "69,79"
      }
    ],
    "id": "1c6538227a4d41fdbcdb11eda17bce21",
    "predicate mapping": [
      {
        "label": "tributary",
        "uri": "http://dbpedia.org/ontology/rightTributary",
        "seq": "-1,8",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/city",
        "seq": "76,78",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River",
        "seq": "22,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the currency of Republic of Montenegro (1992-2006) ?",
    "SerialNumber": "2008",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Republic_of_Montenegro_(1992–2006)\u003e \u003chttp://dbpedia.org/property/currency\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Republic of Montenegro",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Republic_of_Montenegro_(1992–2006)",
        "seq": "24,46"
      }
    ],
    "id": "3cade710572444c297c339d6443854ed",
    "predicate mapping": [
      {
        "label": "currency",
        "uri": "http://dbpedia.org/property/currency",
        "seq": "12,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Which band was left by Kevin Jonas?",
    "SerialNumber": "2010",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/formerBandMember\u003e \u003chttp://dbpedia.org/resource/Kevin_Jonas\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Band\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Kevin Jonas",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Kevin_Jonas",
        "seq": "23,34"
      }
    ],
    "id": "9cda2b2237914ed59d7fe4aae8bc2c1d",
    "predicate mapping": [
      {
        "label": "band",
        "uri": "http://dbpedia.org/ontology/formerBandMember",
        "seq": "6,10",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "band",
        "uri": "http://dbpedia.org/ontology/Band",
        "seq": "6,10",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "311",
    "question": "List all the presidents of the school which had atleast one of the president as Queen Noor of Jordan ?",
    "SerialNumber": "2011",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/president\u003e \u003chttp://dbpedia.org/resource/Queen_Noor_of_Jordan\u003e . ?x \u003chttp://dbpedia.org/ontology/president\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/School\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Queen Noor of Jordan",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Queen_Noor_of_Jordan",
        "seq": "80,100"
      }
    ],
    "id": "eecf29a370f5461f864f33e580e9eaaa",
    "predicate mapping": [
      {
        "label": "president",
        "uri": "http://dbpedia.org/ontology/president",
        "seq": "13,22",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "president",
        "uri": "http://dbpedia.org/ontology/president",
        "seq": "13,22",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "school",
        "uri": "http://dbpedia.org/ontology/School",
        "seq": "31,37",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the nearest city to Tennie and Laura ?",
    "SerialNumber": "2014",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Tennie_and_Laura_(schooner)\u003e \u003chttp://dbpedia.org/property/nearestCity\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Tennie and Laura",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Tennie_and_Laura_(schooner)",
        "seq": "25,41"
      }
    ],
    "id": "dc586a5d041844feb7a1d08718b05042",
    "predicate mapping": [
      {
        "label": "nearest city",
        "uri": "http://dbpedia.org/property/nearestCity",
        "seq": "9,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the home Stadium of Kenya national under-20 football team ?",
    "SerialNumber": "2015",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Kenya_national_under-20_football_team\u003e \u003chttp://dbpedia.org/property/homeStadium\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Kenya national under-20 football team",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Kenya_national_under-20_football_team",
        "seq": "25,62"
      }
    ],
    "id": "a5e0d47ce7c24a0ea619a0edcaad11e8",
    "predicate mapping": [
      {
        "label": "home Stadium",
        "uri": "http://dbpedia.org/property/homeStadium",
        "seq": "9,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "107",
    "question": "How many have been venerateds in Islam and Judaism?",
    "SerialNumber": "2016",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?uri \u003chttp://dbpedia.org/ontology/veneratedIn\u003e \u003chttp://dbpedia.org/resource/Islam\u003e . ?uri \u003chttp://dbpedia.org/ontology/veneratedIn\u003e \u003chttp://dbpedia.org/resource/Judaism\u003e} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Islam",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Islam",
        "seq": "33,38"
      },
      {
        "label": "Judaism",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Judaism",
        "seq": "43,50"
      }
    ],
    "id": "00d4f5a80a1c49a1bcf053b454f4547f",
    "predicate mapping": [
      {
        "label": "venerateds",
        "uri": "http://dbpedia.org/ontology/veneratedIn",
        "seq": "19,29",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "venerateds",
        "uri": "http://dbpedia.org/ontology/veneratedIn",
        "seq": "19,29",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Is Amharic the official language of Ethiopia?",
    "SerialNumber": "2018",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Ethiopia\u003e \u003chttp://dbpedia.org/ontology/officialLanguage\u003e \u003chttp://dbpedia.org/resource/Amharic\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ethiopia",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Ethiopia",
        "seq": "36,44"
      },
      {
        "label": "Amharic",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Amharic",
        "seq": "3,10"
      }
    ],
    "id": "297f153071e94b52b485cc7758d5bda7",
    "predicate mapping": [
      {
        "label": "official language",
        "uri": "http://dbpedia.org/ontology/officialLanguage",
        "seq": "15,32",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the river whose mouth country is Mozambique and source region is North-Western Province, Zambia?",
    "SerialNumber": "2019",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/mouthCountry\u003e \u003chttp://dbpedia.org/resource/Mozambique\u003e . ?uri \u003chttp://dbpedia.org/property/sourceRegion\u003e \u003chttp://dbpedia.org/resource/North-Western_Province,_Zambia\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/River\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Mozambique",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Mozambique",
        "seq": "38,48"
      },
      {
        "label": "North-Western Province, Zambia",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/North-Western_Province,_Zambia",
        "seq": "70,100"
      }
    ],
    "id": "0f6a8f881bad42279b23a45e3316c4e1",
    "predicate mapping": [
      {
        "label": "mouth country",
        "uri": "http://dbpedia.org/property/mouthCountry",
        "seq": "21,34",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "source region",
        "uri": "http://dbpedia.org/property/sourceRegion",
        "seq": "53,66",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "List the people who influenced the comedian who acted in Good Hair ?",
    "SerialNumber": "2020",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Good_Hair\u003e \u003chttp://dbpedia.org/property/starring\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/influencedBy\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Comedian\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Good Hair",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Good_Hair",
        "seq": "57,66"
      }
    ],
    "id": "574ba8734196413da81a96d3ec250fcc",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/property/starring",
        "seq": "20,22",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "influenced",
        "uri": "http://dbpedia.org/ontology/influencedBy",
        "seq": "20,30",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "comedian",
        "uri": "http://dbpedia.org/ontology/Comedian",
        "seq": "35,43",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Which religion did both anupong paochinda and udit raj follow?",
    "SerialNumber": "2021",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Anupong_Paochinda\u003e \u003chttp://dbpedia.org/ontology/religion\u003e ?uri. \u003chttp://dbpedia.org/resource/Udit_Raj\u003e \u003chttp://dbpedia.org/ontology/religion\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "anupong paochinda",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Anupong_Paochinda",
        "seq": "24,41"
      },
      {
        "label": "udit raj",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Udit_Raj",
        "seq": "46,54"
      }
    ],
    "id": "adc7d53883de42c6be0600b7cace1446",
    "predicate mapping": [
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion",
        "seq": "6,14",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion",
        "seq": "6,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the source country of reg Lake ?",
    "SerialNumber": "2022",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Üüreg_Lake\u003e \u003chttp://dbpedia.org/ontology/sourceCountry\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "reg Lake",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Üüreg_Lake",
        "seq": "34,38"
      }
    ],
    "id": "7b47485d6943488fa5e56c5987062679",
    "predicate mapping": [
      {
        "label": "source country",
        "uri": "http://dbpedia.org/ontology/sourceCountry",
        "seq": "12,26",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Is God Save the Queen the national anthem of United Kingdom?",
    "SerialNumber": "2027",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/United_Kingdom\u003e \u003chttp://dbpedia.org/property/nationalAnthem\u003e \u003chttp://dbpedia.org/resource/God_Save_the_Queen\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "United Kingdom",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/United_Kingdom",
        "seq": "45,59"
      },
      {
        "label": "God Save the Queen",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/God_Save_the_Queen",
        "seq": "3,21"
      }
    ],
    "id": "e408531d8dfb48d5af806122fb2e865b",
    "predicate mapping": [
      {
        "label": "national anthem",
        "uri": "http://dbpedia.org/property/nationalAnthem",
        "seq": "26,41",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "GetTV is owned by which organisation?",
    "SerialNumber": "2028",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/GetTV\u003e \u003chttp://dbpedia.org/ontology/parentOrganisation\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "GetTV",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/GetTV",
        "seq": "0,5"
      }
    ],
    "id": "e2b55df745ed48acb96b3572ab3e72e3",
    "predicate mapping": [
      {
        "label": "organisation",
        "uri": "http://dbpedia.org/ontology/parentOrganisation",
        "seq": "24,36",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "311",
    "question": "Name the commanders of military conflicts where Roundhead was one of the commander ?",
    "SerialNumber": "2030",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/commander\u003e \u003chttp://dbpedia.org/resource/Roundhead_(Wyandot)\u003e . ?x \u003chttp://dbpedia.org/ontology/commander\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MilitaryConflict\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Roundhead",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Roundhead_(Wyandot)",
        "seq": "48,57"
      }
    ],
    "id": "3e8b38a9e2204976a87534f098523f05",
    "predicate mapping": [
      {
        "label": "commander",
        "uri": "http://dbpedia.org/property/commander",
        "seq": "9,18",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "commander",
        "uri": "http://dbpedia.org/ontology/commander",
        "seq": "9,18",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "military conflict",
        "uri": "http://dbpedia.org/ontology/MilitaryConflict",
        "seq": "23,40",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Was saddam hussein at the rank of Mushir ever?",
    "SerialNumber": "2031",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Saddam_Hussein\u003e \u003chttp://dbpedia.org/property/rank\u003e \u003chttp://dbpedia.org/resource/Mushir\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "saddam hussein",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Saddam_Hussein",
        "seq": "4,18"
      },
      {
        "label": "Mushir",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Mushir",
        "seq": "34,40"
      }
    ],
    "id": "b75f8d3b6f504199a40530df99c12f74",
    "predicate mapping": [
      {
        "label": "rank",
        "uri": "http://dbpedia.org/property/rank",
        "seq": "26,30",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which mountain is located in inyo National Forest and has a parent peak named Nevado de Toluca ?",
    "SerialNumber": "2032",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/locatedInArea\u003e \u003chttp://dbpedia.org/resource/Inyo_National_Forest\u003e . ?uri \u003chttp://dbpedia.org/ontology/parentMountainPeak\u003e \u003chttp://dbpedia.org/resource/Nevado_de_Toluca\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Mountain\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "inyo National Forest",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Inyo_National_Forest",
        "seq": "29,49"
      },
      {
        "label": "Nevado de Toluca",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Nevado_de_Toluca",
        "seq": "78,94"
      }
    ],
    "id": "ae33dcf324974e5a8a97acf8260a43ec",
    "predicate mapping": [
      {
        "label": "is located in",
        "uri": "http://dbpedia.org/ontology/locatedInArea",
        "seq": "15,28",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "mountain parent",
        "uri": "http://dbpedia.org/ontology/parentMountainPeak",
        "seq": "-1,14",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "mountain",
        "uri": "http://dbpedia.org/ontology/Mountain",
        "seq": "6,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Whihc state of Timothy J. Roemer is also the location city of Dad\u0027s Root Beer ?",
    "SerialNumber": "2033",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Dad\u0027s_Root_Beer\u003e \u003chttp://dbpedia.org/property/locationCity\u003e ?uri. \u003chttp://dbpedia.org/resource/Timothy_J._Roemer\u003e \u003chttp://dbpedia.org/property/state\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Dad\u0027s Root Beer",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Dad\u0027s_Root_Beer",
        "seq": "62,77"
      },
      {
        "label": "Timothy J. Roemer",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Timothy_J._Roemer",
        "seq": "15,32"
      }
    ],
    "id": "7f0f74a296d6433abb524ea51574af2b",
    "predicate mapping": [
      {
        "label": "location city",
        "uri": "http://dbpedia.org/property/locationCity",
        "seq": "45,58",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "state",
        "uri": "http://dbpedia.org/property/state",
        "seq": "6,11",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "11",
    "question": "List borders of the admin region bordering Arctic ocean ?",
    "SerialNumber": "2035",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/border\u003e \u003chttp://dbpedia.org/resource/Arctic_Ocean\u003e . ?x \u003chttp://dbpedia.org/ontology/border\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Arctic ocean",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Arctic_Ocean",
        "seq": "43,55"
      }
    ],
    "id": "93149b69fa094becaa9a340eee7edad7",
    "predicate mapping": [
      {
        "label": "border",
        "uri": "http://dbpedia.org/ontology/border",
        "seq": "5,11",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "border",
        "uri": "http://dbpedia.org/ontology/border",
        "seq": "5,11",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who composed the music for Tonight\u0027s the Night ?",
    "SerialNumber": "2036",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Tonight\u0027s_the_Night_(2003_musical)\u003e \u003chttp://dbpedia.org/property/music\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Tonight\u0027s the Night",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Tonight\u0027s_the_Night_(2003_musical)",
        "seq": "27,46"
      }
    ],
    "id": "6138681c5c4b40edae512667d67db3cb",
    "predicate mapping": [
      {
        "label": "music",
        "uri": "http://dbpedia.org/property/music",
        "seq": "17,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Is Giorgos Kaminis the mayor of Athens?",
    "SerialNumber": "2037",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Athens\u003e \u003chttp://dbpedia.org/ontology/mayor\u003e \u003chttp://dbpedia.org/resource/Giorgos_Kaminis\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Athens",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Athens",
        "seq": "32,38"
      },
      {
        "label": "Giorgos Kaminis",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Giorgos_Kaminis",
        "seq": "3,18"
      }
    ],
    "id": "f93336205ff849d79ef737b987936d56",
    "predicate mapping": [
      {
        "label": "mayor",
        "uri": "http://dbpedia.org/ontology/mayor",
        "seq": "23,28",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Bantam Spectra is the publisher of which series?",
    "SerialNumber": "2039",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/publisher\u003e \u003chttp://dbpedia.org/resource/Bantam_Spectra\u003e . ?x \u003chttp://dbpedia.org/ontology/series\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Bantam Spectra",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Bantam_Spectra",
        "seq": "0,14"
      }
    ],
    "id": "f0d39660f1f94a2098c5ecae0c7159ff",
    "predicate mapping": [
      {
        "label": "publisher",
        "uri": "http://dbpedia.org/property/publisher",
        "seq": "22,31",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "series",
        "uri": "http://dbpedia.org/ontology/series",
        "seq": "41,47",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "List the soccer players whose current team has the ground Stoke-on-Trent.",
    "SerialNumber": "2040",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/ground\u003e \u003chttp://dbpedia.org/resource/Stoke-on-Trent\u003e . ?uri \u003chttp://dbpedia.org/property/currentclub\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/SoccerPlayer\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Stoke-on-Trent",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Stoke-on-Trent",
        "seq": "58,72"
      }
    ],
    "id": "6da84c298eee46d9bb136c460ff99bb0",
    "predicate mapping": [
      {
        "label": "ground",
        "uri": "http://dbpedia.org/property/ground",
        "seq": "51,57",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "current",
        "uri": "http://dbpedia.org/property/currentclub",
        "seq": "30,37",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "soccer player",
        "uri": "http://dbpedia.org/ontology/SoccerPlayer",
        "seq": "9,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which operator of New Sanno Hotel is also the  governing body of the Oahu Railway and Land Company ?",
    "SerialNumber": "2042",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/New_Sanno_Hotel\u003e \u003chttp://dbpedia.org/property/operator\u003e ?uri. \u003chttp://dbpedia.org/resource/Oahu_Railway_and_Land_Company\u003e \u003chttp://dbpedia.org/property/governingBody\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "New Sanno Hotel",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/New_Sanno_Hotel",
        "seq": "18,33"
      },
      {
        "label": "Oahu Railway and Land Company",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Oahu_Railway_and_Land_Company",
        "seq": "69,98"
      }
    ],
    "id": "ce5909f4af904a12a1ffea92d437ff16",
    "predicate mapping": [
      {
        "label": "operator",
        "uri": "http://dbpedia.org/property/operator",
        "seq": "6,14",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "governing body",
        "uri": "http://dbpedia.org/property/governingBody",
        "seq": "47,61",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "List the music of Open House (American Horror Story)?",
    "SerialNumber": "2045",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Open_House_(American_Horror_Story)\u003e \u003chttp://dbpedia.org/property/music\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Open House (American Horror Story)",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Open_House_(American_Horror_Story)",
        "seq": "18,52"
      }
    ],
    "id": "00691ec829834dd08cec97419d51eb4c",
    "predicate mapping": [
      {
        "label": "music",
        "uri": "http://dbpedia.org/property/music",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What movies have been written by authors of Monty Python ?",
    "SerialNumber": "2048",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/writer\u003e \u003chttp://dbpedia.org/resource/Monty_Python\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Monty Python",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Monty_Python",
        "seq": "44,56"
      }
    ],
    "id": "9199869451414c5da79221a37f5ffefd",
    "predicate mapping": [
      {
        "label": "written by",
        "uri": "http://dbpedia.org/ontology/writer",
        "seq": "22,32",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "5,10",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "List the things for which the relatives of Mrunalini Kunte are known?",
    "SerialNumber": "2049",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Mrunalini_Kunte\u003e \u003chttp://dbpedia.org/ontology/relative\u003e ?x . ?x \u003chttp://dbpedia.org/property/knownFor\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Mrunalini Kunte",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Mrunalini_Kunte",
        "seq": "43,58"
      }
    ],
    "id": "3fbefd4c3d514688b85789042b0b5376",
    "predicate mapping": [
      {
        "label": "relative",
        "uri": "http://dbpedia.org/ontology/relative",
        "seq": "30,38",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "known for",
        "uri": "http://dbpedia.org/property/knownFor",
        "seq": "-1,8",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What was founded by pina Records which has name of Geography of Puerto Rico ?",
    "SerialNumber": "2052",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Geography_of_Puerto_Rico\u003e \u003chttp://dbpedia.org/property/name\u003e ?uri. \u003chttp://dbpedia.org/resource/Pina_Records\u003e \u003chttp://dbpedia.org/property/founded\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Geography of Puerto Rico",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Geography_of_Puerto_Rico",
        "seq": "51,75"
      },
      {
        "label": "pina Records",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Pina_Records",
        "seq": "20,32"
      }
    ],
    "id": "544df16ef59d472a8e6a01d0854aa485",
    "predicate mapping": [
      {
        "label": "name",
        "uri": "http://dbpedia.org/property/name",
        "seq": "43,47",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "was founded by",
        "uri": "http://dbpedia.org/property/founded",
        "seq": "5,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "401",
    "question": "How many saints have been venerated in Judaism?",
    "SerialNumber": "2053",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/ontology/veneratedIn\u003e \u003chttp://dbpedia.org/resource/Judaism\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Saint\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Judaism",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Judaism",
        "seq": "39,46"
      }
    ],
    "id": "3faefccf7050420780e9fac0a46abe38",
    "predicate mapping": [
      {
        "label": "venerated in",
        "uri": "http://dbpedia.org/ontology/veneratedIn",
        "seq": "26,38",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "saint",
        "uri": "http://dbpedia.org/ontology/Saint",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "11",
    "question": "List the outflows of the lake which has Benu river as one of it ?",
    "SerialNumber": "2054",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/outflow\u003e \u003chttp://dbpedia.org/resource/Benué_River\u003e . ?x \u003chttp://dbpedia.org/property/outflow\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Benu river",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Benué_River",
        "seq": "54,57"
      }
    ],
    "id": "14eaf63728994ec89e6ab5dcfc7e4446",
    "predicate mapping": [
      {
        "label": "outflow",
        "uri": "http://dbpedia.org/property/outflow",
        "seq": "9,16",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "outflow",
        "uri": "http://dbpedia.org/property/outflow",
        "seq": "9,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Who is a religious figure titled superior general?",
    "SerialNumber": "2056",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/title\u003e \u003chttp://dbpedia.org/resource/Superior_general\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Religious\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "superior general",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Superior_general",
        "seq": "33,49"
      }
    ],
    "id": "a1d198db24e842999eeb72b803b34c69",
    "predicate mapping": [
      {
        "label": "title",
        "uri": "http://dbpedia.org/property/title",
        "seq": "26,31",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "religious",
        "uri": "http://dbpedia.org/ontology/Religious",
        "seq": "9,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "307",
    "question": "What is the military unit whose command structures are United States Department of the Navy and United States Department of Defense?",
    "SerialNumber": "2057",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/ontology/commandStructure\u003e \u003chttp://dbpedia.org/resource/United_States_Department_of_the_Navy\u003e . ?uri \u003chttp://dbpedia.org/ontology/commandStructure\u003e \u003chttp://dbpedia.org/resource/United_States_Department_of_Defense\u003e . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MilitaryUnit\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "United States Department of the Navy",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/United_States_Department_of_the_Navy",
        "seq": "55,91"
      },
      {
        "label": "United States Department of Defense",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/United_States_Department_of_Defense",
        "seq": "96,131"
      }
    ],
    "id": "225b40988f164cd18ab023c044dc99d0",
    "predicate mapping": [
      {
        "label": "command structure",
        "uri": "http://dbpedia.org/ontology/commandStructure",
        "seq": "32,49",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "command structure",
        "uri": "http://dbpedia.org/ontology/commandStructure",
        "seq": "32,49",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "military unit",
        "uri": "http://dbpedia.org/ontology/MilitaryUnit",
        "seq": "12,25",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Is James Wong Howe the cinematographer of Behave Yourself?",
    "SerialNumber": "2058",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Behave_Yourself!\u003e \u003chttp://dbpedia.org/property/cinematography\u003e \u003chttp://dbpedia.org/resource/James_Wong_Howe\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Behave Yourself?",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Behave_Yourself!",
        "seq": "42,58"
      },
      {
        "label": "James Wong Howe",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/James_Wong_Howe",
        "seq": "3,18"
      }
    ],
    "id": "6c551ce5e8ac471295a34da950408fa8",
    "predicate mapping": [
      {
        "label": "cinematographer",
        "uri": "http://dbpedia.org/property/cinematography",
        "seq": "23,38",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who are the children of Abigail Adams?",
    "SerialNumber": "2059",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Abigail_Adams\u003e \u003chttp://dbpedia.org/property/children\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Abigail Adams",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Abigail_Adams",
        "seq": "24,37"
      }
    ],
    "id": "4ffdaa76aa994139b18edf277f905fed",
    "predicate mapping": [
      {
        "label": "children",
        "uri": "http://dbpedia.org/property/children",
        "seq": "12,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Which are the predecessor of Chevrolet Caprice?",
    "SerialNumber": "2062",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Chevrolet_Caprice\u003e \u003chttp://dbpedia.org/ontology/predecessor\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Chevrolet Caprice",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Chevrolet_Caprice",
        "seq": "29,46"
      }
    ],
    "id": "843e418ed3c44ed7b63ee93d377e146a",
    "predicate mapping": [
      {
        "label": "predecessor",
        "uri": "http://dbpedia.org/ontology/predecessor",
        "seq": "14,25",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What was recorded by Live in Detroit, MI and also palce of birth of the Bodhin Kjolhede?",
    "SerialNumber": "2063",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Live_in_Detroit,_MI\u003e \u003chttp://dbpedia.org/ontology/recordedIn\u003e ?uri. \u003chttp://dbpedia.org/resource/Bodhin_Kjolhede\u003e \u003chttp://dbpedia.org/property/placeOfBirth\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Live in Detroit, MI",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Live_in_Detroit,_MI",
        "seq": "21,40"
      },
      {
        "label": "Bodhin Kjolhede",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Bodhin_Kjolhede",
        "seq": "72,87"
      }
    ],
    "id": "4842524c47d4401f85295095f0e9c4bf",
    "predicate mapping": [
      {
        "label": "recorded",
        "uri": "http://dbpedia.org/ontology/recordedIn",
        "seq": "9,17",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "birth",
        "uri": "http://dbpedia.org/property/placeOfBirth",
        "seq": "59,64",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "315",
    "question": "Which animal is the mascot of the 1502nd Infantry Brigade (Ready Reserve) and Galatasaray Handball Team ?",
    "SerialNumber": "2064",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/1502nd_Infantry_Brigade_(Ready_Reserve)\u003e \u003chttp://dbpedia.org/property/mascot\u003e ?uri. \u003chttp://dbpedia.org/resource/Galatasaray_Handball_Team\u003e \u003chttp://dbpedia.org/property/mascot\u003e ?uri . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Animal\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "1502nd Infantry Brigade (Ready Reserve)",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/1502nd_Infantry_Brigade_(Ready_Reserve)",
        "seq": "34,73"
      },
      {
        "label": "Galatasaray Handball Team",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Galatasaray_Handball_Team",
        "seq": "78,103"
      }
    ],
    "id": "85880ecb1ad440bf90276a657471d64b",
    "predicate mapping": [
      {
        "label": "mascot",
        "uri": "http://dbpedia.org/property/mascot",
        "seq": "20,26",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "mascot",
        "uri": "http://dbpedia.org/property/mascot",
        "seq": "20,26",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "animal",
        "uri": "http://dbpedia.org/ontology/Animal",
        "seq": "6,12",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What are other famous works of the writer who created the Sarah Jane Adventures?",
    "SerialNumber": "2065",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/notableworks\u003e \u003chttp://dbpedia.org/resource/The_Sarah_Jane_Adventures\u003e . ?x \u003chttp://dbpedia.org/ontology/notableWork\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Writer\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "the Sarah Jane Adventures",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Sarah_Jane_Adventures",
        "seq": "54,79"
      }
    ],
    "id": "2c23a7087748489bacf1940fc992f121",
    "predicate mapping": [
      {
        "label": "works",
        "uri": "http://dbpedia.org/property/notableworks",
        "seq": "22,27",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "works",
        "uri": "http://dbpedia.org/ontology/notableWork",
        "seq": "22,27",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "writer",
        "uri": "http://dbpedia.org/ontology/Writer",
        "seq": "35,41",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which key person of the Clinton Foundation is also the president of Edward J. Perkins ?",
    "SerialNumber": "2067",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Edward_J._Perkins\u003e \u003chttp://dbpedia.org/ontology/president\u003e ?uri. \u003chttp://dbpedia.org/resource/Clinton_Foundation\u003e \u003chttp://dbpedia.org/property/keyPeople\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Edward J. Perkins",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Edward_J._Perkins",
        "seq": "68,85"
      },
      {
        "label": "Clinton Foundation",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Clinton_Foundation",
        "seq": "24,42"
      }
    ],
    "id": "571ba10a407648e387c5b247b38c3175",
    "predicate mapping": [
      {
        "label": "president",
        "uri": "http://dbpedia.org/ontology/president",
        "seq": "55,64",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "key",
        "uri": "http://dbpedia.org/property/keyPeople",
        "seq": "6,9",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the sports played by Fr. Agnel Multipurpose School and Junior College?",
    "SerialNumber": "2068",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Fr._Agnel_Multipurpose_School_and_Junior_College\u003e \u003chttp://dbpedia.org/ontology/sport\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Fr. Agnel Multipurpose School and Junior College",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Fr._Agnel_Multipurpose_School_and_Junior_College",
        "seq": "26,74"
      }
    ],
    "id": "dd56b34774864c2f898e20007c193984",
    "predicate mapping": [
      {
        "label": "sport",
        "uri": "http://dbpedia.org/ontology/sport",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which are the comics characters painted by Bruce Timm and created by  Paul Dini?",
    "SerialNumber": "2070",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/creator\u003e \u003chttp://dbpedia.org/resource/Bruce_Timm\u003e . ?uri \u003chttp://dbpedia.org/property/creators\u003e \u003chttp://dbpedia.org/resource/Paul_Dini\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/ComicsCharacter\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Bruce Timm",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Bruce_Timm",
        "seq": "43,53"
      },
      {
        "label": "Paul Dini",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Paul_Dini",
        "seq": "70,79"
      }
    ],
    "id": "268bbb26a2164faf852c530fc8ae5320",
    "predicate mapping": [
      {
        "label": "created by",
        "uri": "http://dbpedia.org/ontology/creator",
        "seq": "58,68",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "created by",
        "uri": "http://dbpedia.org/property/creators",
        "seq": "58,68",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "comics character",
        "uri": "http://dbpedia.org/ontology/ComicsCharacter",
        "seq": "14,30",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "What is a common nickname given to both Lyons Township high school and the wheaton college in massachusetts?",
    "SerialNumber": "2071",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Lyons_Township_High_School\u003e \u003chttp://dbpedia.org/property/nickname\u003e ?uri. \u003chttp://dbpedia.org/resource/Wheaton_College_(Massachusetts)\u003e \u003chttp://dbpedia.org/property/nickname\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Lyons Township high school",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Lyons_Township_High_School",
        "seq": "40,66"
      },
      {
        "label": "wheaton college",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Wheaton_College_(Massachusetts)",
        "seq": "75,90"
      }
    ],
    "id": "0dbe25e3f60b4874ad6bbbde0b92db79",
    "predicate mapping": [
      {
        "label": "nickname",
        "uri": "http://dbpedia.org/property/nickname",
        "seq": "17,25",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "nickname",
        "uri": "http://dbpedia.org/property/nickname",
        "seq": "17,25",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "List the scientists whose doctoral advisor is Ernest Rutherford and are known for Manhattan Project?",
    "SerialNumber": "2074",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/doctoralAdvisor\u003e \u003chttp://dbpedia.org/resource/Ernest_Rutherford\u003e . ?uri \u003chttp://dbpedia.org/property/knownFor\u003e \u003chttp://dbpedia.org/resource/Manhattan_Project\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Scientist\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ernest Rutherford",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ernest_Rutherford",
        "seq": "46,63"
      },
      {
        "label": "Manhattan Project",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Manhattan_Project",
        "seq": "82,99"
      }
    ],
    "id": "f152c9e6bda2455781b4900277175979",
    "predicate mapping": [
      {
        "label": "doctoral advisor",
        "uri": "http://dbpedia.org/ontology/doctoralAdvisor",
        "seq": "26,42",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "known for",
        "uri": "http://dbpedia.org/property/knownFor",
        "seq": "72,81",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "scientist",
        "uri": "http://dbpedia.org/ontology/Scientist",
        "seq": "9,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What is the layout of the automobiles whose designer company is Olivier Boulay?",
    "SerialNumber": "2075",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/designCompany\u003e \u003chttp://dbpedia.org/resource/Olivier_Boulay\u003e . ?x \u003chttp://dbpedia.org/ontology/layout\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Automobile\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Olivier Boulay",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Olivier_Boulay",
        "seq": "64,78"
      }
    ],
    "id": "b109f73fd21a466b80b5e96bbd12b4a3",
    "predicate mapping": [
      {
        "label": "designer company",
        "uri": "http://dbpedia.org/ontology/designCompany",
        "seq": "44,60",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "layout",
        "uri": "http://dbpedia.org/ontology/layout",
        "seq": "12,18",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "automobile",
        "uri": "http://dbpedia.org/ontology/Automobile",
        "seq": "26,36",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "7",
    "question": "Who was on the boards of Freedom of the City and Royal Society?",
    "SerialNumber": "2078",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/ontology/board\u003e \u003chttp://dbpedia.org/resource/Freedom_of_the_City\u003e . ?uri \u003chttp://dbpedia.org/ontology/board\u003e \u003chttp://dbpedia.org/resource/Royal_Society\u003e . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Freedom of the City",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Freedom_of_the_City",
        "seq": "25,44"
      },
      {
        "label": "Royal Society",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Royal_Society",
        "seq": "49,62"
      }
    ],
    "id": "181669e0211e4d799df81237c72d9b39",
    "predicate mapping": [
      {
        "label": "board",
        "uri": "http://dbpedia.org/ontology/board",
        "seq": "15,20",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "board",
        "uri": "http://dbpedia.org/ontology/board",
        "seq": "15,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "What is the almamater of the president whose vice president was Enrique Jos Varona?",
    "SerialNumber": "2080",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/vicePresident\u003e \u003chttp://dbpedia.org/resource/Enrique_José_Varona\u003e . ?x \u003chttp://dbpedia.org/ontology/almaMater\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Enrique Jos Varona",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Enrique_José_Varona",
        "seq": "64,82"
      }
    ],
    "id": "07ac58be90694523be7a9ad593d82ef4",
    "predicate mapping": [
      {
        "label": "vice president",
        "uri": "http://dbpedia.org/ontology/vicePresident",
        "seq": "45,59",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "almamater",
        "uri": "http://dbpedia.org/ontology/almaMater",
        "seq": "12,21",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the architecture of First National Bank and Trust Building (Lima, Ohio) ?",
    "SerialNumber": "2081",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/First_National_Bank_and_Trust_Building_(Lima,_Ohio)\u003e \u003chttp://dbpedia.org/ontology/architecturalStyle\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "First National Bank and Trust Building (Lima, Ohio)",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/First_National_Bank_and_Trust_Building_(Lima,_Ohio)",
        "seq": "28,79"
      }
    ],
    "id": "d3c142c23fcd445e8acfe1320c5cddfb",
    "predicate mapping": [
      {
        "label": "architecture",
        "uri": "http://dbpedia.org/ontology/architecturalStyle",
        "seq": "12,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "Directors of which movies are buried in Ronda?",
    "SerialNumber": "2082",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/restingPlace\u003e \u003chttp://dbpedia.org/resource/Ronda\u003e . ?uri \u003chttp://dbpedia.org/property/director\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ronda",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ronda",
        "seq": "40,45"
      }
    ],
    "id": "30b207243bc34347a7cc38bb8cb88fd0",
    "predicate mapping": [
      {
        "label": "buried in",
        "uri": "http://dbpedia.org/ontology/restingPlace",
        "seq": "30,39",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "Director",
        "uri": "http://dbpedia.org/property/director",
        "seq": "0,8",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "In which states does the river flow whose left tributary is Toms Creek?",
    "SerialNumber": "2083",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Toms_Creek_(Monocacy_River)\u003e \u003chttp://dbpedia.org/ontology/leftTributary\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/state\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Toms Creek",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Toms_Creek_(Monocacy_River)",
        "seq": "60,70"
      }
    ],
    "id": "c1958e8eaa264ab58264e8dbc6849720",
    "predicate mapping": [
      {
        "label": "left tributary",
        "uri": "http://dbpedia.org/ontology/leftTributary",
        "seq": "42,56",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "state",
        "uri": "http://dbpedia.org/ontology/state",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which animator of the The Skeleton Dance is also the director of The Haunted House (1929 film) ?",
    "SerialNumber": "2084",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/The_Skeleton_Dance\u003e \u003chttp://dbpedia.org/ontology/animator\u003e ?uri. \u003chttp://dbpedia.org/resource/The_Haunted_House_(1929_film)\u003e \u003chttp://dbpedia.org/ontology/director\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "The Skeleton Dance",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/The_Skeleton_Dance",
        "seq": "22,40"
      },
      {
        "label": "The Haunted House (1929 film)",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Haunted_House_(1929_film)",
        "seq": "65,94"
      }
    ],
    "id": "093a1659d85d4b9cab08915271c4e918",
    "predicate mapping": [
      {
        "label": "animator",
        "uri": "http://dbpedia.org/ontology/animator",
        "seq": "6,14",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "director",
        "uri": "http://dbpedia.org/ontology/director",
        "seq": "53,61",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What basketball league\u0027s champion is Golden State Warriors",
    "SerialNumber": "2085",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/champion\u003e \u003chttp://dbpedia.org/resource/Golden_State_Warriors\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/BasketballLeague\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Golden State Warriors",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Golden_State_Warriors",
        "seq": "37,58"
      }
    ],
    "id": "7515efe0523a46909195354f0fb0838b",
    "predicate mapping": [
      {
        "label": "champion",
        "uri": "http://dbpedia.org/property/champion",
        "seq": "25,33",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "basketball league",
        "uri": "http://dbpedia.org/ontology/BasketballLeague",
        "seq": "5,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which high school of the Jerry Tagge also was the palce hwer Temptation Waits was recorded ?",
    "SerialNumber": "2087",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Jerry_Tagge\u003e \u003chttp://dbpedia.org/property/highSchool\u003e ?uri. \u003chttp://dbpedia.org/resource/Temptation_Waits\u003e \u003chttp://dbpedia.org/ontology/recordedIn\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jerry Tagge",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Jerry_Tagge",
        "seq": "25,36"
      },
      {
        "label": "Temptation Waits",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Temptation_Waits",
        "seq": "61,77"
      }
    ],
    "id": "09c521f0f65e49c5b02014c8d62cb12f",
    "predicate mapping": [
      {
        "label": "high school",
        "uri": "http://dbpedia.org/property/highSchool",
        "seq": "6,17",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "recorded",
        "uri": "http://dbpedia.org/ontology/recordedIn",
        "seq": "82,90",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "101",
    "question": "Stockholm is the HQ of how many things?",
    "SerialNumber": "2089",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/property/headquarters\u003e \u003chttp://dbpedia.org/resource/Stockholm\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Stockholm",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Stockholm",
        "seq": "0,9"
      }
    ],
    "id": "33984af5c01b4427b7af87f294ee0f1c",
    "predicate mapping": [
      {
        "label": "HQ",
        "uri": "http://dbpedia.org/property/headquarters",
        "seq": "17,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "Who is married to Susan Weber Soros?",
    "SerialNumber": "2091",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/spouse\u003e \u003chttp://dbpedia.org/resource/Susan_Weber_Soros\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Susan Weber Soros",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Susan_Weber_Soros",
        "seq": "18,35"
      }
    ],
    "id": "6adadd03b3254e5386b3c4bd1680b99d",
    "predicate mapping": [
      {
        "label": "married to",
        "uri": "http://dbpedia.org/property/spouse",
        "seq": "7,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the state of origin of Abbas Jafri ?",
    "SerialNumber": "2093",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Abbas_Jafri\u003e \u003chttp://dbpedia.org/ontology/stateOfOrigin\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Abbas Jafri",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Abbas_Jafri",
        "seq": "31,42"
      }
    ],
    "id": "ac851fcc762c4a0abda96bed81bef120",
    "predicate mapping": [
      {
        "label": "state of origin",
        "uri": "http://dbpedia.org/ontology/stateOfOrigin",
        "seq": "12,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "311",
    "question": "Name the battle fought by the military persons who also fought in Algeria ?",
    "SerialNumber": "2094",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/battles\u003e \u003chttp://dbpedia.org/resource/Algeria\u003e . ?x \u003chttp://dbpedia.org/property/battles\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MilitaryPerson\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Algeria",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Algeria",
        "seq": "66,73"
      }
    ],
    "id": "fe5cca52ae464cf8901728f58148bac7",
    "predicate mapping": [
      {
        "label": "battle",
        "uri": "http://dbpedia.org/property/battles",
        "seq": "9,15",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "battle",
        "uri": "http://dbpedia.org/property/battles",
        "seq": "9,15",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "military person",
        "uri": "http://dbpedia.org/ontology/MilitaryPerson",
        "seq": "30,45",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "does the journal of cancer have the creative commons license?",
    "SerialNumber": "2095",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Journal_of_Cancer\u003e \u003chttp://dbpedia.org/property/license\u003e \u003chttp://dbpedia.org/resource/Creative_Commons_license\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "journal of cancer",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Journal_of_Cancer",
        "seq": "9,26"
      },
      {
        "label": "creative commons license",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Creative_Commons_license",
        "seq": "36,60"
      }
    ],
    "id": "8a3ce84f8932457284713d13f23eae30",
    "predicate mapping": [
      {
        "label": "license",
        "uri": "http://dbpedia.org/property/license",
        "seq": "53,60",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What is debut team of the baseball players who died in Los Angeles?",
    "SerialNumber": "2097",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/deathPlace\u003e \u003chttp://dbpedia.org/resource/Los_Angeles\u003e . ?x \u003chttp://dbpedia.org/property/debutteam\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/BaseballPlayer\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Los Angeles",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Los_Angeles",
        "seq": "55,66"
      }
    ],
    "id": "43e2baff638546e2a1d68bc013f30e65",
    "predicate mapping": [
      {
        "label": "died in",
        "uri": "http://dbpedia.org/ontology/deathPlace",
        "seq": "47,54",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "debut team",
        "uri": "http://dbpedia.org/property/debutteam",
        "seq": "8,18",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "baseball player",
        "uri": "http://dbpedia.org/ontology/BaseballPlayer",
        "seq": "26,41",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Who are the associated musical artist of the  artists of band Shorty Rogers?",
    "SerialNumber": "2098",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/associatedBand\u003e \u003chttp://dbpedia.org/resource/Shorty_Rogers\u003e . ?x \u003chttp://dbpedia.org/ontology/associatedMusicalArtist\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Shorty Rogers",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Shorty_Rogers",
        "seq": "62,75"
      }
    ],
    "id": "b4ccb08854ad40d48a962e5bc8319a51",
    "predicate mapping": [
      {
        "label": "associated band",
        "uri": "http://dbpedia.org/ontology/associatedBand",
        "seq": "-1,14",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "associated musical artist",
        "uri": "http://dbpedia.org/ontology/associatedMusicalArtist",
        "seq": "12,37",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "What is the region of the ethnic group which speaks the language of Arkansas?",
    "SerialNumber": "2100",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Arkansas\u003e \u003chttp://dbpedia.org/ontology/language\u003e ?x . ?x \u003chttp://dbpedia.org/property/region\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/EthnicGroup\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Arkansas",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Arkansas",
        "seq": "68,76"
      }
    ],
    "id": "d999286c2f1b4750b667f53ecdf21be0",
    "predicate mapping": [
      {
        "label": "language",
        "uri": "http://dbpedia.org/ontology/language",
        "seq": "56,64",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "region",
        "uri": "http://dbpedia.org/property/region",
        "seq": "12,18",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "ethnic group",
        "uri": "http://dbpedia.org/ontology/EthnicGroup",
        "seq": "26,38",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Does Silver Airways have a hub at the Washington Dulles International Airport?",
    "SerialNumber": "2108",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Silver_Airways\u003e \u003chttp://dbpedia.org/ontology/hubAirport\u003e \u003chttp://dbpedia.org/resource/Washington_Dulles_International_Airport\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Silver Airways",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Silver_Airways",
        "seq": "5,19"
      },
      {
        "label": "Washington Dulles International Airport",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Washington_Dulles_International_Airport",
        "seq": "38,77"
      }
    ],
    "id": "c8eb320ce07140629b07a873aa8a1f66",
    "predicate mapping": [
      {
        "label": "airport hub",
        "uri": "http://dbpedia.org/ontology/hubAirport",
        "seq": "-1,10",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the profession of William Luther Hill ?",
    "SerialNumber": "2109",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/William_Luther_Hill\u003e \u003chttp://dbpedia.org/ontology/profession\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "William Luther Hill",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/William_Luther_Hill",
        "seq": "26,45"
      }
    ],
    "id": "07aeedead69840918b458b085e80e817",
    "predicate mapping": [
      {
        "label": "profession",
        "uri": "http://dbpedia.org/ontology/profession",
        "seq": "12,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "311",
    "question": "What are the source of the streams whose one of the source is Calera, Oklahoma?",
    "SerialNumber": "2111",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/source\u003e \u003chttp://dbpedia.org/resource/Calera,_Oklahoma\u003e . ?x \u003chttp://dbpedia.org/ontology/source\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Stream\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Calera, Oklahoma",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Calera,_Oklahoma",
        "seq": "62,78"
      }
    ],
    "id": "6050cd3ccfcc4dfdb3d70fce8b1c3c92",
    "predicate mapping": [
      {
        "label": "source",
        "uri": "http://dbpedia.org/ontology/source",
        "seq": "13,19",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "source",
        "uri": "http://dbpedia.org/ontology/source",
        "seq": "13,19",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "stream",
        "uri": "http://dbpedia.org/ontology/Stream",
        "seq": "27,33",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the serving railway line of Rostov-Glavny ?",
    "SerialNumber": "2113",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Rostov-Glavny\u003e \u003chttp://dbpedia.org/ontology/servingRailwayLine\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Rostov-Glavny",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Rostov-Glavny",
        "seq": "36,49"
      }
    ],
    "id": "176e2c67c12547b9bad7e6dff1452cb4",
    "predicate mapping": [
      {
        "label": "serving railway line",
        "uri": "http://dbpedia.org/ontology/servingRailwayLine",
        "seq": "12,32",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "What is the genre for the developer of Interplay Entertainment?",
    "SerialNumber": "2116",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/developer\u003e \u003chttp://dbpedia.org/resource/Interplay_Entertainment\u003e . ?x \u003chttp://dbpedia.org/ontology/genre\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Interplay Entertainment",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Interplay_Entertainment",
        "seq": "39,62"
      }
    ],
    "id": "9b31b9b3c89f471bafa57e35da9f566b",
    "predicate mapping": [
      {
        "label": "developer",
        "uri": "http://dbpedia.org/property/developer",
        "seq": "26,35",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "genre",
        "uri": "http://dbpedia.org/ontology/genre",
        "seq": "12,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the official residence of Sarah Kazemy ?",
    "SerialNumber": "2119",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Sarah_Kazemy\u003e \u003chttp://dbpedia.org/property/residence\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Sarah Kazemy",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Sarah_Kazemy",
        "seq": "34,46"
      }
    ],
    "id": "46b80622ce374a06a4553cc91038560a",
    "predicate mapping": [
      {
        "label": "residence",
        "uri": "http://dbpedia.org/property/residence",
        "seq": "21,30",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which state of Tendaho dam is the headquarters of Ethiopian People\u0027s revolutionary democratic Front located ?",
    "SerialNumber": "2121",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Ethiopian_People\u0027s_Revolutionary_Democratic_Front\u003e \u003chttp://dbpedia.org/property/headquarters\u003e ?uri. \u003chttp://dbpedia.org/resource/Tendaho_Dam\u003e \u003chttp://dbpedia.org/property/country\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ethiopian People\u0027s revolutionary democratic Front",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ethiopian_People\u0027s_Revolutionary_Democratic_Front",
        "seq": "50,99"
      },
      {
        "label": "Tendaho dam",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Tendaho_Dam",
        "seq": "15,26"
      }
    ],
    "id": "94437269d7074fa589ba7d6325c07e24",
    "predicate mapping": [
      {
        "label": "headquarters",
        "uri": "http://dbpedia.org/property/headquarters",
        "seq": "34,46",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "state",
        "uri": "http://dbpedia.org/property/country",
        "seq": "6,11",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Did Paul Weatherwax an editor of Behave Yourself?",
    "SerialNumber": "2124",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Behave_Yourself!\u003e \u003chttp://dbpedia.org/property/editing\u003e \u003chttp://dbpedia.org/resource/Paul_Weatherwax\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Behave Yourself?",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Behave_Yourself!",
        "seq": "33,49"
      },
      {
        "label": "Paul Weatherwax",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Paul_Weatherwax",
        "seq": "4,19"
      }
    ],
    "id": "d610ad560d0a413083759ecc7b270c9e",
    "predicate mapping": [
      {
        "label": "editor",
        "uri": "http://dbpedia.org/property/editing",
        "seq": "23,29",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What ingredients are used in preparing the dish of Ragout fin?",
    "SerialNumber": "2125",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Ragout_fin\u003e \u003chttp://dbpedia.org/ontology/ingredient\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ragout fin",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ragout_fin",
        "seq": "51,61"
      }
    ],
    "id": "f2fd76539712496f89d28c3d4448d5d8",
    "predicate mapping": [
      {
        "label": "ingredient",
        "uri": "http://dbpedia.org/ontology/ingredient",
        "seq": "5,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the order of George Frisbie Hoar?",
    "SerialNumber": "2134",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/George_Frisbie_Hoar\u003e \u003chttp://dbpedia.org/property/order\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "George Frisbie Hoar",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/George_Frisbie_Hoar",
        "seq": "21,40"
      }
    ],
    "id": "5515c31e477642508f2333e66a7124e6",
    "predicate mapping": [
      {
        "label": "order",
        "uri": "http://dbpedia.org/property/order",
        "seq": "12,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Who are the opponents of graduates of the Middle Temple?",
    "SerialNumber": "2135",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/education\u003e \u003chttp://dbpedia.org/resource/Middle_Temple\u003e . ?x \u003chttp://dbpedia.org/ontology/opponent\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Middle Temple",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Middle_Temple",
        "seq": "42,55"
      }
    ],
    "id": "db38999d5a924a30bf35df8596c3cedc",
    "predicate mapping": [
      {
        "label": "graduates",
        "uri": "http://dbpedia.org/property/education",
        "seq": "25,34",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "opponent",
        "uri": "http://dbpedia.org/ontology/opponent",
        "seq": "12,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "406",
    "question": "How many movies were directed by the graduate of Burbank High School ?",
    "SerialNumber": "2136",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/education\u003e \u003chttp://dbpedia.org/resource/Burbank_High_School_(Burbank,_California)\u003e . ?uri \u003chttp://dbpedia.org/property/director\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Burbank High School",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Burbank_High_School_(Burbank,_California)",
        "seq": "49,68"
      }
    ],
    "id": "458d42b5dd84407f9c58816fa06defdd",
    "predicate mapping": [
      {
        "label": "graduate of",
        "uri": "http://dbpedia.org/property/education",
        "seq": "37,48",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "directed",
        "uri": "http://dbpedia.org/property/director",
        "seq": "21,29",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the company whose products is Boeing F/A-18E/F Super Hornet and key person is Raymond Conner?",
    "SerialNumber": "2138",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/products\u003e \u003chttp://dbpedia.org/resource/Boeing_F/A-18E/F_Super_Hornet\u003e . ?uri \u003chttp://dbpedia.org/ontology/keyPerson\u003e \u003chttp://dbpedia.org/resource/Raymond_Conner\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Company\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Raymond Conner",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Raymond_Conner",
        "seq": "83,97"
      }
    ],
    "id": "4795bf86bb3c409aa3c9750d6092aa2f",
    "predicate mapping": [
      {
        "label": "products",
        "uri": "http://dbpedia.org/property/products",
        "seq": "23,31",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "hornet super",
        "uri": "http://dbpedia.org/resource/Boeing_F/A-18E/F_Super_Hornet",
        "seq": "-1,11",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "key person",
        "uri": "http://dbpedia.org/ontology/keyPerson",
        "seq": "69,79",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company",
        "seq": "9,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Name the common architecture of the Grand Serail of Aleppo and Shaheed Minar, Kolkata ?",
    "SerialNumber": "2140",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Grand_Serail_of_Aleppo\u003e \u003chttp://dbpedia.org/ontology/architecturalStyle\u003e ?uri. \u003chttp://dbpedia.org/resource/Shaheed_Minar,_Kolkata\u003e \u003chttp://dbpedia.org/ontology/architecturalStyle\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Grand Serail of Aleppo",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Grand_Serail_of_Aleppo",
        "seq": "36,58"
      },
      {
        "label": "Shaheed Minar, Kolkata",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Shaheed_Minar,_Kolkata",
        "seq": "63,85"
      }
    ],
    "id": "a57fac7c18cc43cf9acdec289160a3f6",
    "predicate mapping": [
      {
        "label": "architecture",
        "uri": "http://dbpedia.org/ontology/architecturalStyle",
        "seq": "16,28",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "architecture",
        "uri": "http://dbpedia.org/ontology/architecturalStyle",
        "seq": "16,28",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the company founded in New Mexico and provides Outlook.com as services ?",
    "SerialNumber": "2142",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/foundation\u003e \u003chttp://dbpedia.org/resource/New_Mexico\u003e . ?uri \u003chttp://dbpedia.org/property/services\u003e \u003chttp://dbpedia.org/resource/Outlook.com\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Company\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "New Mexico",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/New_Mexico",
        "seq": "28,38"
      },
      {
        "label": "Outlook.com",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Outlook.com",
        "seq": "52,63"
      }
    ],
    "id": "d91e9b0f8f0b4a2e8ebfa336a54bdde1",
    "predicate mapping": [
      {
        "label": "founded",
        "uri": "http://dbpedia.org/property/foundation",
        "seq": "17,24",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "services",
        "uri": "http://dbpedia.org/property/services",
        "seq": "67,75",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company",
        "seq": "9,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who edited Easy street ?",
    "SerialNumber": "2144",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Easy_Street_(film)\u003e \u003chttp://dbpedia.org/ontology/editing\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Easy street",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Easy_Street_(film)",
        "seq": "11,22"
      }
    ],
    "id": "781e6cc08f044c428d77cc3790f657eb",
    "predicate mapping": [
      {
        "label": "edited",
        "uri": "http://dbpedia.org/ontology/editing",
        "seq": "4,10",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "Name everyone working for a company owned by Roman Abramovich.",
    "SerialNumber": "2147",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/owningCompany\u003e \u003chttp://dbpedia.org/resource/Roman_Abramovich\u003e . ?uri \u003chttp://dbpedia.org/ontology/occupation\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Roman Abramovich",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Roman_Abramovich",
        "seq": "45,61"
      }
    ],
    "id": "16bea2bafce74ca2990221d956a47fa0",
    "predicate mapping": [
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/owningCompany",
        "seq": "28,35",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "work",
        "uri": "http://dbpedia.org/ontology/occupation",
        "seq": "14,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Was Robert Burns from the Romanticist School of thought?",
    "SerialNumber": "2155",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Robert_Burns\u003e \u003chttp://dbpedia.org/property/movement\u003e \u003chttp://dbpedia.org/resource/Romanticism\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Robert Burns",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Robert_Burns",
        "seq": "4,16"
      },
      {
        "label": "Romanticist",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Romanticism",
        "seq": "26,37"
      }
    ],
    "id": "fc4ee0bdf9ae4487ac6fc5f5dbdf452c",
    "predicate mapping": [
      {
        "label": "School",
        "uri": "http://dbpedia.org/property/movement",
        "seq": "38,44",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the sea whose inflow is Kemijoki and outflow is Danish straits?",
    "SerialNumber": "2156",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/inflow\u003e \u003chttp://dbpedia.org/resource/Kemijoki\u003e . ?uri \u003chttp://dbpedia.org/property/outflow\u003e \u003chttp://dbpedia.org/resource/Danish_straits\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Sea\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Kemijoki",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Kemijoki",
        "seq": "29,37"
      },
      {
        "label": "Danish straits",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Danish_straits",
        "seq": "53,67"
      }
    ],
    "id": "519d34ace38b4ea093d283425bef109e",
    "predicate mapping": [
      {
        "label": "inflow",
        "uri": "http://dbpedia.org/ontology/inflow",
        "seq": "19,25",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "outflow",
        "uri": "http://dbpedia.org/property/outflow",
        "seq": "42,49",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "sea",
        "uri": "http://dbpedia.org/ontology/Sea",
        "seq": "9,12",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "102",
    "question": "Count the number of region of AN/FSQ-7 Combat Direction Central?",
    "SerialNumber": "2157",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { \u003chttp://dbpedia.org/resource/AN/FSQ-7_Combat_Direction_Central\u003e \u003chttp://dbpedia.org/ontology/region\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [],
    "id": "2d254f44524040f49a25092be3e4f942",
    "predicate mapping": [
      {
        "label": "direction central combat",
        "uri": "http://dbpedia.org/resource/AN/FSQ-7_Combat_Direction_Central",
        "seq": "-1,23",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "region",
        "uri": "http://dbpedia.org/ontology/region",
        "seq": "20,26",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Where was Special 26 recorded ?",
    "SerialNumber": "2159",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Special_26\u003e \u003chttp://dbpedia.org/property/recorded\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Special 26",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Special_26",
        "seq": "10,20"
      }
    ],
    "id": "9e8d0173dbb749c3a9861e1887894afe",
    "predicate mapping": [
      {
        "label": "recorded",
        "uri": "http://dbpedia.org/property/recorded",
        "seq": "21,29",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "List the awards won by the wife of Ingrid von Rosen.",
    "SerialNumber": "2160",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Ingrid_von_Rosen\u003e \u003chttp://dbpedia.org/property/spouse\u003e ?x . ?x \u003chttp://dbpedia.org/property/awards\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ingrid von Rosen",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ingrid_von_Rosen",
        "seq": "35,51"
      }
    ],
    "id": "ade7e2b4ed804a43a9a124fe2f3e4efc",
    "predicate mapping": [
      {
        "label": "wife",
        "uri": "http://dbpedia.org/property/spouse",
        "seq": "27,31",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "List common systems are developed by of the Google Videos and written by of the Google Web Toolkit ?",
    "SerialNumber": "2162",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Google_Videos\u003e \u003chttp://dbpedia.org/property/developer\u003e ?uri. \u003chttp://dbpedia.org/resource/Google_Web_Toolkit\u003e \u003chttp://dbpedia.org/ontology/author\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Google Videos",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Google_Videos",
        "seq": "44,57"
      },
      {
        "label": "Google Web Toolkit",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Google_Web_Toolkit",
        "seq": "80,98"
      }
    ],
    "id": "3720d9f7161b4dbba314e15c50a74922",
    "predicate mapping": [
      {
        "label": "developed by",
        "uri": "http://dbpedia.org/property/developer",
        "seq": "24,36",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "written by",
        "uri": "http://dbpedia.org/ontology/author",
        "seq": "62,72",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name hte builder of Baku Olympic Stadium ?",
    "SerialNumber": "2164",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Baku_Olympic_Stadium_(BOS)\u003e \u003chttp://dbpedia.org/ontology/builder\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Baku Olympic Stadium",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Baku_Olympic_Stadium_(BOS)",
        "seq": "20,40"
      }
    ],
    "id": "4311e02017fd4760a06569b9821a2411",
    "predicate mapping": [
      {
        "label": "builder",
        "uri": "http://dbpedia.org/ontology/builder",
        "seq": "9,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who is the animator of Tommy Tucker\u0027s Tooth ?",
    "SerialNumber": "2165",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Tommy_Tucker\u0027s_Tooth\u003e \u003chttp://dbpedia.org/property/animator\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Tommy Tucker\u0027s Tooth",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Tommy_Tucker\u0027s_Tooth",
        "seq": "23,43"
      }
    ],
    "id": "4294fa2db28d45f1933f8c4347b84964",
    "predicate mapping": [
      {
        "label": "animator",
        "uri": "http://dbpedia.org/property/animator",
        "seq": "11,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the national origin of Focke-Wulf Fw 260 ?",
    "SerialNumber": "2167",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Focke-Wulf_Fw_260\u003e \u003chttp://dbpedia.org/property/nationalOrigin\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Focke-Wulf Fw 260",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Focke-Wulf_Fw_260",
        "seq": "31,48"
      }
    ],
    "id": "fd1f031446b74ac481667ae2904eb14f",
    "predicate mapping": [
      {
        "label": "national origin",
        "uri": "http://dbpedia.org/property/nationalOrigin",
        "seq": "12,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "7",
    "question": "Who is known for are War of 1812 and Battle of the Thames?",
    "SerialNumber": "2171",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/ontology/knownFor\u003e \u003chttp://dbpedia.org/resource/War_of_1812\u003e . ?uri \u003chttp://dbpedia.org/ontology/knownFor\u003e \u003chttp://dbpedia.org/resource/Battle_of_the_Thames\u003e . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "War of 1812",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/War_of_1812",
        "seq": "21,32"
      },
      {
        "label": "Battle of the Thames",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Battle_of_the_Thames",
        "seq": "37,57"
      }
    ],
    "id": "db906608706f4028b90fa657a76a2fce",
    "predicate mapping": [
      {
        "label": "known for",
        "uri": "http://dbpedia.org/ontology/knownFor",
        "seq": "7,16",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "known for",
        "uri": "http://dbpedia.org/ontology/knownFor",
        "seq": "7,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "101",
    "question": "Count everything garrisoned at the pentagon?",
    "SerialNumber": "2172",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/property/garrison\u003e \u003chttp://dbpedia.org/resource/The_Pentagon\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "the pentagon",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Pentagon",
        "seq": "31,43"
      }
    ],
    "id": "b5297f4033954bbebf99e83717abf862",
    "predicate mapping": [
      {
        "label": "garrison",
        "uri": "http://dbpedia.org/property/garrison",
        "seq": "17,25",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "List few schools situated in Reading, Berkshire ?",
    "SerialNumber": "2173",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/city\u003e \u003chttp://dbpedia.org/resource/Reading,_Berkshire\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/School\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Reading, Berkshire",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Reading,_Berkshire",
        "seq": "29,47"
      }
    ],
    "id": "96e065865fdc4334b92125a47b7afc00",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/property/city",
        "seq": "26,28",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "school",
        "uri": "http://dbpedia.org/ontology/School",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "401",
    "question": "How many rivers end in the Indian Ocean?",
    "SerialNumber": "2174",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/ontology/riverMouth\u003e \u003chttp://dbpedia.org/resource/Indian_Ocean\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/River\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Indian Ocean",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Indian_Ocean",
        "seq": "27,39"
      }
    ],
    "id": "2b813b2612884ca0b83b6347da69b776",
    "predicate mapping": [
      {
        "label": "rivers",
        "uri": "http://dbpedia.org/ontology/riverMouth",
        "seq": "9,15",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What non fiction subjects are covered in books by Doubleday publishers?",
    "SerialNumber": "2175",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/publisher\u003e \u003chttp://dbpedia.org/resource/Doubleday_(publisher)\u003e . ?x \u003chttp://dbpedia.org/ontology/nonFictionSubject\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Book\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Doubleday",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Doubleday_(publisher)",
        "seq": "50,59"
      }
    ],
    "id": "44f0efbc081546a0be93ab03cbed3e68",
    "predicate mapping": [
      {
        "label": "publisher",
        "uri": "http://dbpedia.org/ontology/publisher",
        "seq": "60,69",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "fiction",
        "uri": "http://dbpedia.org/ontology/nonFictionSubject",
        "seq": "9,16",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "book",
        "uri": "http://dbpedia.org/ontology/Book",
        "seq": "41,45",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "111",
    "question": "Find the total number of tenants of the stadium whose tenants was Toronto Marlies?",
    "SerialNumber": "2176",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/tenants\u003e \u003chttp://dbpedia.org/resource/Toronto_Marlies\u003e . ?x \u003chttp://dbpedia.org/property/tenants\u003e ?uri }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Toronto Marlies",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Toronto_Marlies",
        "seq": "66,81"
      }
    ],
    "id": "24853dbf6de64eb1951cbc2cb6673cf5",
    "predicate mapping": [
      {
        "label": "tenants",
        "uri": "http://dbpedia.org/property/tenants",
        "seq": "25,32",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "tenants",
        "uri": "http://dbpedia.org/property/tenants",
        "seq": "25,32",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "7",
    "question": "Who voiced in Peanuts Motion Comics and The Peanuts Movie?",
    "SerialNumber": "2177",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/ontology/voice\u003e \u003chttp://dbpedia.org/resource/Peanuts_Motion_Comics\u003e . ?uri \u003chttp://dbpedia.org/ontology/voice\u003e \u003chttp://dbpedia.org/resource/The_Peanuts_Movie\u003e . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Peanuts Motion Comics",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Peanuts_Motion_Comics",
        "seq": "14,35"
      },
      {
        "label": "The Peanuts Movie",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Peanuts_Movie",
        "seq": "40,57"
      }
    ],
    "id": "712c9dd545ed457698ecdaee86202d3e",
    "predicate mapping": [
      {
        "label": "voice",
        "uri": "http://dbpedia.org/ontology/voice",
        "seq": "4,9",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "voice",
        "uri": "http://dbpedia.org/ontology/voice",
        "seq": "4,9",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Is Rain Over me in the planet pit album?",
    "SerialNumber": "2178",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Rain_Over_Me\u003e \u003chttp://dbpedia.org/ontology/album\u003e \u003chttp://dbpedia.org/resource/Planet_Pit\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Rain Over me",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Rain_Over_Me",
        "seq": "3,15"
      },
      {
        "label": "planet pit",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Planet_Pit",
        "seq": "23,33"
      }
    ],
    "id": "a12b0138676940388abb030a095b99cf",
    "predicate mapping": [
      {
        "label": "album",
        "uri": "http://dbpedia.org/ontology/album",
        "seq": "34,39",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "List the honorary title given to the spouse of Lillian Disney ?",
    "SerialNumber": "2180",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Lillian_Disney\u003e \u003chttp://dbpedia.org/property/spouse\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/award\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Lillian Disney",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Lillian_Disney",
        "seq": "47,61"
      }
    ],
    "id": "3ab803a589804dd8b296cbe19777f8dc",
    "predicate mapping": [
      {
        "label": "spouse",
        "uri": "http://dbpedia.org/property/spouse",
        "seq": "37,43",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "honorary title",
        "uri": "http://dbpedia.org/ontology/award",
        "seq": "9,23",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "111",
    "question": "What is the total number of other restingplace of the politicians whose one of the restingplace is East Norwalk Historical Cemetery?",
    "SerialNumber": "2182",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/restingplace\u003e \u003chttp://dbpedia.org/resource/East_Norwalk_Historical_Cemetery\u003e . ?x \u003chttp://dbpedia.org/property/restingplace\u003e ?uri }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "East Norwalk Historical Cemetery",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/East_Norwalk_Historical_Cemetery",
        "seq": "99,131"
      }
    ],
    "id": "1c8cf55dda6444e69a79532b4cb471f2",
    "predicate mapping": [
      {
        "label": "restingplace",
        "uri": "http://dbpedia.org/property/restingplace",
        "seq": "34,46",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "restingplace",
        "uri": "http://dbpedia.org/property/restingplace",
        "seq": "34,46",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "Stan Van Gundy serves as a head coach and president for which basketball team?",
    "SerialNumber": "2185",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/president\u003e \u003chttp://dbpedia.org/resource/Stan_Van_Gundy\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Stan Van Gundy",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Stan_Van_Gundy",
        "seq": "0,14"
      }
    ],
    "id": "2afab07b2dac4282909806c34e40c6f5",
    "predicate mapping": [
      {
        "label": "president",
        "uri": "http://dbpedia.org/property/president",
        "seq": "42,51",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "307",
    "question": " Wringer (novel) and Maniac Magee is the notable work of which author?",
    "SerialNumber": "2186",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/property/notableworks\u003e \u003chttp://dbpedia.org/resource/Wringer_(novel)\u003e . ?uri \u003chttp://dbpedia.org/property/notableworks\u003e \u003chttp://dbpedia.org/resource/Maniac_Magee\u003e . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Writer\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Wringer (novel)",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Wringer_(novel)",
        "seq": "1,16"
      },
      {
        "label": "Maniac Magee",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Maniac_Magee",
        "seq": "21,33"
      }
    ],
    "id": "ab50944245784dce87146a8d1f1cc756",
    "predicate mapping": [
      {
        "label": "notable work",
        "uri": "http://dbpedia.org/property/notableworks",
        "seq": "41,53",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "notable work",
        "uri": "http://dbpedia.org/property/notableworks",
        "seq": "41,53",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "author",
        "uri": "http://dbpedia.org/ontology/Writer",
        "seq": "63,69",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Was Liliya Lobanova born in Ukraine?",
    "SerialNumber": "2187",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Liliya_Lobanova\u003e \u003chttp://dbpedia.org/property/birthplace\u003e \u003chttp://dbpedia.org/resource/Ukraine\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Liliya Lobanova",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Liliya_Lobanova",
        "seq": "4,19"
      },
      {
        "label": "Ukraine",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Ukraine",
        "seq": "28,35"
      }
    ],
    "id": "504cb25e8e274fb68f21b73610569d7a",
    "predicate mapping": [
      {
        "label": "born in",
        "uri": "http://dbpedia.org/property/birthplace",
        "seq": "20,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "311",
    "question": "List all the major shrines of the saints which has one of the shrines as Debre Libanos ?",
    "SerialNumber": "2190",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/majorShrine\u003e \u003chttp://dbpedia.org/resource/Debre_Libanos\u003e . ?x \u003chttp://dbpedia.org/ontology/majorShrine\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Saint\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Debre Libanos",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Debre_Libanos",
        "seq": "73,86"
      }
    ],
    "id": "b3401936fc1a491ebfa11cbeeda2c9b5",
    "predicate mapping": [
      {
        "label": "major shrine",
        "uri": "http://dbpedia.org/ontology/majorShrine",
        "seq": "13,25",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "major shrine",
        "uri": "http://dbpedia.org/ontology/majorShrine",
        "seq": "13,25",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "saint",
        "uri": "http://dbpedia.org/ontology/Saint",
        "seq": "34,39",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who is the owner of  Chelsea F.C. ?",
    "SerialNumber": "2191",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Chelsea_F.C.\u003e \u003chttp://dbpedia.org/property/owner\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Chelsea F.C.",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Chelsea_F.C.",
        "seq": "21,33"
      }
    ],
    "id": "1f6027121a154845a301780b46413756",
    "predicate mapping": [
      {
        "label": "owner",
        "uri": "http://dbpedia.org/property/owner",
        "seq": "11,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which associate musical artist of Carolyn Dennis is also the composer of Motorpsycho Nitemare ?",
    "SerialNumber": "2192",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Carolyn_Dennis\u003e \u003chttp://dbpedia.org/ontology/associatedMusicalArtist\u003e ?uri. \u003chttp://dbpedia.org/resource/Motorpsycho_Nitemare\u003e \u003chttp://dbpedia.org/property/composer\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Carolyn Dennis",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Carolyn_Dennis",
        "seq": "34,48"
      },
      {
        "label": "Motorpsycho Nitemare",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Motorpsycho_Nitemare",
        "seq": "73,93"
      }
    ],
    "id": "34f371d04a104a0d846d5cbab6231a08",
    "predicate mapping": [
      {
        "label": "associate musical artist",
        "uri": "http://dbpedia.org/ontology/associatedMusicalArtist",
        "seq": "6,30",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "composer",
        "uri": "http://dbpedia.org/property/composer",
        "seq": "61,69",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "What is the political party of Arun Chandra Guha and Indira Gandhi?",
    "SerialNumber": "2193",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Arun_Chandra_Guha\u003e \u003chttp://dbpedia.org/ontology/party\u003e ?uri. \u003chttp://dbpedia.org/resource/Indira_Gandhi\u003e \u003chttp://dbpedia.org/ontology/party\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Arun Chandra Guha",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Arun_Chandra_Guha",
        "seq": "31,48"
      },
      {
        "label": "Indira Gandhi",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Indira_Gandhi",
        "seq": "53,66"
      }
    ],
    "id": "13d323edfef5499a85c7cb144d5d4793",
    "predicate mapping": [
      {
        "label": "political party",
        "uri": "http://dbpedia.org/ontology/party",
        "seq": "12,27",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "political party",
        "uri": "http://dbpedia.org/ontology/party",
        "seq": "12,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "401",
    "question": "How many bacterias are there whose division is Firmicutes?",
    "SerialNumber": "2194",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/ontology/division\u003e \u003chttp://dbpedia.org/resource/Firmicutes\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Bacteria\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Firmicutes",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Firmicutes",
        "seq": "47,57"
      }
    ],
    "id": "f867edc1ebd04f73a619ade4c87800e0",
    "predicate mapping": [
      {
        "label": "division",
        "uri": "http://dbpedia.org/ontology/division",
        "seq": "35,43",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "bacteria",
        "uri": "http://dbpedia.org/ontology/Bacteria",
        "seq": "9,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "List things developed by Autoconf ?",
    "SerialNumber": "2196",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Autoconf\u003e \u003chttp://dbpedia.org/ontology/developer\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Autoconf",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Autoconf",
        "seq": "25,33"
      }
    ],
    "id": "d7d6a471f045411d88c97b34e458c2c9",
    "predicate mapping": [
      {
        "label": "developed by",
        "uri": "http://dbpedia.org/ontology/developer",
        "seq": "12,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Was His New Job edited by Charlie Chaplin?",
    "SerialNumber": "2198",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/His_New_Job\u003e \u003chttp://dbpedia.org/ontology/editing\u003e \u003chttp://dbpedia.org/resource/Charlie_Chaplin\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "His New Job",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/His_New_Job",
        "seq": "4,15"
      },
      {
        "label": "Charlie Chaplin",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Charlie_Chaplin",
        "seq": "26,41"
      }
    ],
    "id": "ccd7bfe91df242cba413e7b850bdff5e",
    "predicate mapping": [
      {
        "label": "edited by",
        "uri": "http://dbpedia.org/ontology/editing",
        "seq": "16,25",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Which person belongs to the board of Howard Hughes Medical Institute?",
    "SerialNumber": "2199",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/board\u003e \u003chttp://dbpedia.org/resource/Howard_Hughes_Medical_Institute\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Howard Hughes Medical Institute",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Howard_Hughes_Medical_Institute",
        "seq": "37,68"
      }
    ],
    "id": "c1a70be915f046f688328bccc9b5e78c",
    "predicate mapping": [
      {
        "label": "board",
        "uri": "http://dbpedia.org/ontology/board",
        "seq": "28,33",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/Person",
        "seq": "6,12",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Which hockey team is coached by mike babcock?",
    "SerialNumber": "2203",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/headCoach\u003e \u003chttp://dbpedia.org/resource/Mike_Babcock\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/HockeyTeam\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "mike babcock",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Mike_Babcock",
        "seq": "32,44"
      }
    ],
    "id": "e03711f1cbfc4364aed4f709337e0f46",
    "predicate mapping": [
      {
        "label": "coached",
        "uri": "http://dbpedia.org/property/headCoach",
        "seq": "21,28",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "hockey team",
        "uri": "http://dbpedia.org/ontology/HockeyTeam",
        "seq": "6,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "Name the mountain whose parent peak is located in Mexico.",
    "SerialNumber": "2205",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/locatedInArea\u003e \u003chttp://dbpedia.org/resource/State_of_Mexico\u003e . ?uri \u003chttp://dbpedia.org/ontology/parentMountainPeak\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Mountain\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Mexico",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/State_of_Mexico",
        "seq": "50,56"
      }
    ],
    "id": "66ae293ce48e42c183df4a5acf2e684c",
    "predicate mapping": [
      {
        "label": "is located in",
        "uri": "http://dbpedia.org/ontology/locatedInArea",
        "seq": "36,49",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "mountain parent peak",
        "uri": "http://dbpedia.org/ontology/parentMountainPeak",
        "seq": "-1,19",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "mountain",
        "uri": "http://dbpedia.org/ontology/Mountain",
        "seq": "9,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Where was Ne daj se, Nina first aired ?",
    "SerialNumber": "2206",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Ne_daj_se,_Nina\u003e \u003chttp://dbpedia.org/property/firstAired\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ne daj se, Nina",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Ne_daj_se,_Nina",
        "seq": "10,25"
      }
    ],
    "id": "eea1a931ec7b42c3bbcb1273d1b870cd",
    "predicate mapping": [
      {
        "label": "first aired",
        "uri": "http://dbpedia.org/property/firstAired",
        "seq": "26,37",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "In which state is Colemanville Covered Bridge located ?",
    "SerialNumber": "2209",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Colemanville_Covered_Bridge\u003e \u003chttp://dbpedia.org/ontology/state\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Colemanville Covered Bridge",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Colemanville_Covered_Bridge",
        "seq": "18,45"
      }
    ],
    "id": "85c76306bdca404d9198823c7f039b6e",
    "predicate mapping": [
      {
        "label": "state",
        "uri": "http://dbpedia.org/ontology/state",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the Team Name  of the Cristo Rey Jesuit High School (Chicago) and is also the nickname of the Lyons Township High School ?",
    "SerialNumber": "2212",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Cristo_Rey_Jesuit_High_School_(Chicago)\u003e \u003chttp://dbpedia.org/property/teamName\u003e ?uri. \u003chttp://dbpedia.org/resource/Lyons_Township_High_School\u003e \u003chttp://dbpedia.org/property/nickname\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Cristo Rey Jesuit High School (Chicago)",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Cristo_Rey_Jesuit_High_School_(Chicago)",
        "seq": "30,69"
      },
      {
        "label": "Lyons Township High School",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Lyons_Township_High_School",
        "seq": "102,128"
      }
    ],
    "id": "7402ac71f855482d9acd335dbad8e3b1",
    "predicate mapping": [
      {
        "label": "Team Name",
        "uri": "http://dbpedia.org/property/teamName",
        "seq": "12,21",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "nickname",
        "uri": "http://dbpedia.org/property/nickname",
        "seq": "86,94",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Is the song Only the Good Die Young from The Stranger?",
    "SerialNumber": "2214",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Only_the_Good_Die_Young\u003e \u003chttp://dbpedia.org/property/fromAlbum\u003e \u003chttp://dbpedia.org/resource/The_Stranger_(album)\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Only the Good Die Young",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Only_the_Good_Die_Young",
        "seq": "12,35"
      },
      {
        "label": "The Stranger",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/The_Stranger_(album)",
        "seq": "41,53"
      }
    ],
    "id": "eb019f4872c64a79b87db465172c36a8",
    "predicate mapping": [
      {
        "label": "from",
        "uri": "http://dbpedia.org/property/fromAlbum",
        "seq": "36,40",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "Name the office holders whose successor died in Morristown, New Jersey?",
    "SerialNumber": "2217",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/deathPlace\u003e \u003chttp://dbpedia.org/resource/Morristown,_New_Jersey\u003e . ?uri \u003chttp://dbpedia.org/ontology/successor\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/OfficeHolder\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Morristown, New Jersey",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Morristown,_New_Jersey",
        "seq": "48,70"
      }
    ],
    "id": "8a79a42afec446ec8c50537ada39a7f3",
    "predicate mapping": [
      {
        "label": "died in",
        "uri": "http://dbpedia.org/ontology/deathPlace",
        "seq": "40,47",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "successor",
        "uri": "http://dbpedia.org/ontology/successor",
        "seq": "30,39",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "office holder",
        "uri": "http://dbpedia.org/ontology/OfficeHolder",
        "seq": "9,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "111",
    "question": "What is the total number of other non-fiction subject of the books whose one of the subject is Racism?",
    "SerialNumber": "2218",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/nonFictionSubject\u003e \u003chttp://dbpedia.org/resource/Racism\u003e . ?x \u003chttp://dbpedia.org/ontology/nonFictionSubject\u003e ?uri }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Racism",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Racism",
        "seq": "95,101"
      }
    ],
    "id": "9c14d984d9b44eda8acb73656552d3dc",
    "predicate mapping": [
      {
        "label": "non-fiction subject",
        "uri": "http://dbpedia.org/ontology/nonFictionSubject",
        "seq": "34,53",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "non-fiction subject",
        "uri": "http://dbpedia.org/ontology/nonFictionSubject",
        "seq": "34,53",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who operates twin Cities 400 ?",
    "SerialNumber": "2220",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Twin_Cities_400\u003e \u003chttp://dbpedia.org/ontology/operatedBy\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "twin Cities 400",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Twin_Cities_400",
        "seq": "13,28"
      }
    ],
    "id": "9c2755a6ad1a44e6b2fae15bb6dda2fa",
    "predicate mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/ontology/operatedBy",
        "seq": "0,0",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the broadcast area of  Radio Philippines Network ?",
    "SerialNumber": "2221",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Radio_Philippines_Network\u003e \u003chttp://dbpedia.org/property/area\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Radio Philippines Network",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Radio_Philippines_Network",
        "seq": "28,53"
      }
    ],
    "id": "67e7b4cfd56449dd8e16839eb9d8325c",
    "predicate mapping": [
      {
        "label": "area",
        "uri": "http://dbpedia.org/property/area",
        "seq": "19,23",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is pitro Gruszka hometown ?",
    "SerialNumber": "2223",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Piotr_Gruszka\u003e \u003chttp://dbpedia.org/property/hometown\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "pitro Gruszka",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Piotr_Gruszka",
        "seq": "14,21"
      }
    ],
    "id": "30599ffcad334bcc8b320111644de813",
    "predicate mapping": [
      {
        "label": "hometown",
        "uri": "http://dbpedia.org/property/hometown",
        "seq": "22,30",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Is Angola Avante the anthem of Angola?",
    "SerialNumber": "2226",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Angola\u003e \u003chttp://dbpedia.org/ontology/anthem\u003e \u003chttp://dbpedia.org/resource/Angola_Avante\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Angola",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Angola",
        "seq": "3,9"
      },
      {
        "label": "Angola Avante",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Angola_Avante",
        "seq": "3,16"
      }
    ],
    "id": "96b3c05711324ad7b27f67b505eb0ef3",
    "predicate mapping": [
      {
        "label": "anthem",
        "uri": "http://dbpedia.org/ontology/anthem",
        "seq": "21,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What sport activities are available at Polytechnic University of the Philippines Bataan?",
    "SerialNumber": "2227",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_–_Bataan\u003e \u003chttp://dbpedia.org/ontology/sport\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Polytechnic University of the Philippines Bataan",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_–_Bataan",
        "seq": "39,87"
      }
    ],
    "id": "7b4b7b0484e344288b493a941b5ccf38",
    "predicate mapping": [
      {
        "label": "sport",
        "uri": "http://dbpedia.org/ontology/sport",
        "seq": "5,10",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Which awards have been given to both Ingmar Bergman and Charles LeMaire?",
    "SerialNumber": "2233",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Ingmar_Bergman\u003e \u003chttp://dbpedia.org/property/awards\u003e ?uri. \u003chttp://dbpedia.org/resource/Charles_LeMaire\u003e \u003chttp://dbpedia.org/property/awards\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ingmar Bergman",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ingmar_Bergman",
        "seq": "37,51"
      },
      {
        "label": "Charles LeMaire",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Charles_LeMaire",
        "seq": "56,71"
      }
    ],
    "id": "2697998cbbd64b4aa7973251dcdd3b6d",
    "predicate mapping": [
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards",
        "seq": "6,12",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards",
        "seq": "6,12",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "102",
    "question": "Count the water bodies that flow into the North Sea?",
    "SerialNumber": "2238",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { \u003chttp://dbpedia.org/resource/North_Sea\u003e \u003chttp://dbpedia.org/property/inflow\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "North Sea",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/North_Sea",
        "seq": "42,51"
      }
    ],
    "id": "daf410687a35451bbcf9909871db61f3",
    "predicate mapping": [
      {
        "label": "flow",
        "uri": "http://dbpedia.org/property/inflow",
        "seq": "28,32",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What is the television show whose theme music is by Primus?",
    "SerialNumber": "2241",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/themeMusicComposer\u003e \u003chttp://dbpedia.org/resource/Primus_(band)\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Primus",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Primus_(band)",
        "seq": "52,58"
      }
    ],
    "id": "1c9cc2c14b38405a9af09ae095be1c88",
    "predicate mapping": [
      {
        "label": "theme music",
        "uri": "http://dbpedia.org/property/themeMusicComposer",
        "seq": "34,45",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "12,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Was Ne Daj Se, Nina first aired in Croatia?",
    "SerialNumber": "2243",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Ne_daj_se,_Nina\u003e \u003chttp://dbpedia.org/property/firstAired\u003e \u003chttp://dbpedia.org/resource/Croatia\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ne Daj Se, Nina",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Ne_daj_se,_Nina",
        "seq": "4,19"
      },
      {
        "label": "Croatia",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Croatia",
        "seq": "35,42"
      }
    ],
    "id": "f3ac616f8c0643cf88335eb3083c700d",
    "predicate mapping": [
      {
        "label": "first aired",
        "uri": "http://dbpedia.org/property/firstAired",
        "seq": "20,31",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What is the military rank of the important commander of Peruvian Army?",
    "SerialNumber": "2245",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Peruvian_Army\u003e \u003chttp://dbpedia.org/ontology/notableCommander\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/militaryRank\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Peruvian Army",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Peruvian_Army",
        "seq": "56,69"
      }
    ],
    "id": "e0fcf7ea42184328aedd3b110006c43c",
    "predicate mapping": [
      {
        "label": "commander",
        "uri": "http://dbpedia.org/ontology/notableCommander",
        "seq": "43,52",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "military rank",
        "uri": "http://dbpedia.org/ontology/militaryRank",
        "seq": "12,25",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What mammals fall into the biological family Canidae?",
    "SerialNumber": "2246",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/family\u003e \u003chttp://dbpedia.org/resource/Canidae\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Mammal\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Canidae",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Canidae",
        "seq": "45,52"
      }
    ],
    "id": "2e8e7385936a4f1ab5740f608898155f",
    "predicate mapping": [
      {
        "label": "family",
        "uri": "http://dbpedia.org/ontology/family",
        "seq": "38,44",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "mammal",
        "uri": "http://dbpedia.org/ontology/Mammal",
        "seq": "5,11",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the writer of South Park: The Stick of Truth ?",
    "SerialNumber": "2247",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/South_Park:_The_Stick_of_Truth\u003e \u003chttp://dbpedia.org/ontology/writer\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "South Park: The Stick of Truth",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/South_Park:_The_Stick_of_Truth",
        "seq": "19,49"
      }
    ],
    "id": "984b82270182472b9d8f250fe7d3aafc",
    "predicate mapping": [
      {
        "label": "writer",
        "uri": "http://dbpedia.org/ontology/writer",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who is the authority of Maine School of Science and Mathematics ?",
    "SerialNumber": "2248",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Maine_School_of_Science_and_Mathematics\u003e \u003chttp://dbpedia.org/ontology/authority\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Maine School of Science and Mathematics",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Maine_School_of_Science_and_Mathematics",
        "seq": "24,63"
      }
    ],
    "id": "57ab787a271f4c28b2a0dca69d5e9068",
    "predicate mapping": [
      {
        "label": "authority",
        "uri": "http://dbpedia.org/ontology/authority",
        "seq": "11,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "How many titles have been won by the beauty queens which had brown hair?",
    "SerialNumber": "2252",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/hairColor\u003e \u003chttp://dbpedia.org/resource/Brown_hair\u003e . ?x \u003chttp://dbpedia.org/property/title\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "brown hair",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Brown_hair",
        "seq": "61,71"
      }
    ],
    "id": "0e64b5f73d5946c4b4e32140b22caf00",
    "predicate mapping": [
      {
        "label": "hair",
        "uri": "http://dbpedia.org/property/hairColor",
        "seq": "67,71",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "title",
        "uri": "http://dbpedia.org/property/title",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "7",
    "question": "Who worked at  A Goon\u0027s Deed in a Weary World and CBS?",
    "SerialNumber": "2253",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/ontology/occupation\u003e \u003chttp://dbpedia.org/resource/A_Goon\u0027s_Deed_in_a_Weary_World\u003e . ?uri \u003chttp://dbpedia.org/ontology/occupation\u003e \u003chttp://dbpedia.org/resource/CBS\u003e . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "A Goon\u0027s Deed in a Weary World",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/A_Goon\u0027s_Deed_in_a_Weary_World",
        "seq": "15,45"
      },
      {
        "label": "CBS",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/CBS",
        "seq": "50,53"
      }
    ],
    "id": "e8e40d229e4d47308482febc1c021b8d",
    "predicate mapping": [
      {
        "label": "work",
        "uri": "http://dbpedia.org/ontology/occupation",
        "seq": "4,8",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "work",
        "uri": "http://dbpedia.org/ontology/occupation",
        "seq": "4,8",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "106",
    "question": "How many things are manufactured by the company whose subsidiary is Sony Corporation shareholders and subsidiaries?",
    "SerialNumber": "2254",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/subsidiary\u003e \u003chttp://dbpedia.org/resource/Sony_Corporation_shareholders_and_subsidiaries\u003e . ?uri \u003chttp://dbpedia.org/ontology/manufacturer\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Sony Corporation shareholders and subsidiaries",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Sony_Corporation_shareholders_and_subsidiaries",
        "seq": "68,114"
      }
    ],
    "id": "2fb9c1e8780b4dd4a0c7734363590ed6",
    "predicate mapping": [
      {
        "label": "subsidiary",
        "uri": "http://dbpedia.org/ontology/subsidiary",
        "seq": "54,64",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "manufactured by",
        "uri": "http://dbpedia.org/ontology/manufacturer",
        "seq": "20,35",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Ford Air Transport Service and Falcon cobra are both owned by which company?",
    "SerialNumber": "2255",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Ford_Air_Transport_Service\u003e \u003chttp://dbpedia.org/ontology/parentCompany\u003e ?uri. \u003chttp://dbpedia.org/resource/Ford_Falcon_Cobra\u003e \u003chttp://dbpedia.org/ontology/parentCompany\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ford Air Transport Service",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Ford_Air_Transport_Service",
        "seq": "0,26"
      },
      {
        "label": "Falcon cobra",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Ford_Falcon_Cobra",
        "seq": "31,43"
      }
    ],
    "id": "a2f27d8c0508441cafed36479e7362a6",
    "predicate mapping": [
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/parentCompany",
        "seq": "68,75",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/parentCompany",
        "seq": "68,75",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the movies directed by Stanley Kubrick and edited by Anthony Harvey?",
    "SerialNumber": "2256",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/director\u003e \u003chttp://dbpedia.org/resource/Stanley_Kubrick\u003e . ?uri \u003chttp://dbpedia.org/property/editing\u003e \u003chttp://dbpedia.org/resource/Anthony_Harvey\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Stanley Kubrick",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Stanley_Kubrick",
        "seq": "28,43"
      },
      {
        "label": "Anthony Harvey",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Anthony_Harvey",
        "seq": "58,72"
      }
    ],
    "id": "e6e8ea74524445e38326aadc3d4a8c33",
    "predicate mapping": [
      {
        "label": "directed by",
        "uri": "http://dbpedia.org/ontology/director",
        "seq": "16,27",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "edited by",
        "uri": "http://dbpedia.org/property/editing",
        "seq": "48,57",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who trained the wrestlers who are billed in Wisconsin?",
    "SerialNumber": "2258",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/billed\u003e \u003chttp://dbpedia.org/resource/Wisconsin\u003e . ?x \u003chttp://dbpedia.org/ontology/trainer\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Wrestler\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Wisconsin",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Wisconsin",
        "seq": "44,53"
      }
    ],
    "id": "bf425a8b2f6146f3b9e4bbbf61dfb270",
    "predicate mapping": [
      {
        "label": "billed",
        "uri": "http://dbpedia.org/ontology/billed",
        "seq": "34,40",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "trained",
        "uri": "http://dbpedia.org/ontology/trainer",
        "seq": "4,11",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "wrestler",
        "uri": "http://dbpedia.org/ontology/Wrestler",
        "seq": "16,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "Who developed the software which is used as operating system of Magic Trackpad ?",
    "SerialNumber": "2259",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Magic_Trackpad\u003e \u003chttp://dbpedia.org/ontology/operatingSystem\u003e ?x . ?x \u003chttp://dbpedia.org/property/developer\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Software\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Magic Trackpad",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Magic_Trackpad",
        "seq": "64,78"
      }
    ],
    "id": "c5f2208531a94e90b3704d2666657f5c",
    "predicate mapping": [
      {
        "label": "operating system",
        "uri": "http://dbpedia.org/ontology/operatingSystem",
        "seq": "44,60",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "developed",
        "uri": "http://dbpedia.org/property/developer",
        "seq": "4,13",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "software",
        "uri": "http://dbpedia.org/ontology/Software",
        "seq": "18,26",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Did Umkhonto we Sizwe had Nelson Mandela as a commander?",
    "SerialNumber": "2262",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Umkhonto_we_Sizwe\u003e \u003chttp://dbpedia.org/property/notableCommanders\u003e \u003chttp://dbpedia.org/resource/Nelson_Mandela\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Umkhonto we Sizwe",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Umkhonto_we_Sizwe",
        "seq": "4,21"
      },
      {
        "label": "Nelson Mandela",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Nelson_Mandela",
        "seq": "26,40"
      }
    ],
    "id": "9f26789aeb6146feaff2e24761ec083a",
    "predicate mapping": [
      {
        "label": "commander",
        "uri": "http://dbpedia.org/property/notableCommanders",
        "seq": "46,55",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Whichlocation city of the Denver Broncos is the palce of birth of Steven Clark Cunningham ?",
    "SerialNumber": "2263",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Denver_Broncos\u003e \u003chttp://dbpedia.org/ontology/locationCity\u003e ?uri. \u003chttp://dbpedia.org/resource/Steven_Clark_Cunningham\u003e \u003chttp://dbpedia.org/ontology/birthPlace\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Denver Broncos",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Denver_Broncos",
        "seq": "26,40"
      },
      {
        "label": "Steven Clark Cunningham",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Steven_Clark_Cunningham",
        "seq": "66,89"
      }
    ],
    "id": "5dbda61a444645df948f9da412547003",
    "predicate mapping": [
      {
        "label": "location city",
        "uri": "http://dbpedia.org/ontology/locationCity",
        "seq": "5,18",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "birth",
        "uri": "http://dbpedia.org/ontology/birthPlace",
        "seq": "57,62",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the office holder whose Governor is Charles Willing Byrd and has resting place as North Bend, Ohio?",
    "SerialNumber": "2270",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/governor\u003e \u003chttp://dbpedia.org/resource/Charles_Willing_Byrd\u003e . ?uri \u003chttp://dbpedia.org/property/restingplace\u003e \u003chttp://dbpedia.org/resource/North_Bend,_Ohio\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/OfficeHolder\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Charles Willing Byrd",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Charles_Willing_Byrd",
        "seq": "41,61"
      },
      {
        "label": "North Bend, Ohio",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/North_Bend,_Ohio",
        "seq": "87,103"
      }
    ],
    "id": "b49493ba48cb4704923543e074afb5c6",
    "predicate mapping": [
      {
        "label": "Governor",
        "uri": "http://dbpedia.org/property/governor",
        "seq": "29,37",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "resting place",
        "uri": "http://dbpedia.org/property/restingplace",
        "seq": "70,83",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "office holder",
        "uri": "http://dbpedia.org/ontology/OfficeHolder",
        "seq": "9,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "307",
    "question": "Rostock and Oulu is the shore cities on which sea ?",
    "SerialNumber": "2273",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/property/cities\u003e \u003chttp://dbpedia.org/resource/Rostock\u003e . ?uri \u003chttp://dbpedia.org/property/cities\u003e \u003chttp://dbpedia.org/resource/Oulu\u003e . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Sea\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Rostock",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Rostock",
        "seq": "0,7"
      },
      {
        "label": "Oulu",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Oulu",
        "seq": "12,16"
      }
    ],
    "id": "4d7ac749c1ed4d359c857449cd3bfcd7",
    "predicate mapping": [
      {
        "label": "cities",
        "uri": "http://dbpedia.org/property/cities",
        "seq": "30,36",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "cities",
        "uri": "http://dbpedia.org/property/cities",
        "seq": "30,36",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "sea",
        "uri": "http://dbpedia.org/ontology/Sea",
        "seq": "46,49",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "111",
    "question": "Count the number of broadcast area of the TV stations which serves in Agalga ?",
    "SerialNumber": "2274",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/broadcastArea\u003e \u003chttp://dbpedia.org/resource/Agaléga\u003e . ?x \u003chttp://dbpedia.org/property/broadcastArea\u003e ?uri }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Agalga",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Agaléga",
        "seq": "70,76"
      }
    ],
    "id": "925fba8fe99f4fd68594b4e4ca58f5ba",
    "predicate mapping": [
      {
        "label": "broadcast area",
        "uri": "http://dbpedia.org/ontology/broadcastArea",
        "seq": "20,34",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "broadcast area",
        "uri": "http://dbpedia.org/property/broadcastArea",
        "seq": "20,34",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "8",
    "question": "Name the kingdom with currency Solidus (coin) and administrative headquarters in Nicomedia?",
    "SerialNumber": "2275",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/currency\u003e \u003chttp://dbpedia.org/resource/Solidus_(coin)\u003e . ?uri \u003chttp://dbpedia.org/ontology/capital\u003e \u003chttp://dbpedia.org/resource/Nicomedia\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Solidus (coin)",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Solidus_(coin)",
        "seq": "31,45"
      },
      {
        "label": "Nicomedia",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Nicomedia",
        "seq": "81,90"
      }
    ],
    "id": "f32a9202283b4b51a57f25e1e59661f4",
    "predicate mapping": [
      {
        "label": "currency",
        "uri": "http://dbpedia.org/ontology/currency",
        "seq": "22,30",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "administrative headquarters",
        "uri": "http://dbpedia.org/ontology/capital",
        "seq": "50,77",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What are the baseball teams who belongs to  Guggenheim Partners?",
    "SerialNumber": "2276",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/owner\u003e \u003chttp://dbpedia.org/resource/Guggenheim_Partners\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/BaseballTeam\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Guggenheim Partners",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Guggenheim_Partners",
        "seq": "44,63"
      }
    ],
    "id": "d80be4c2f6b7412d9bf97bfb7b793ae6",
    "predicate mapping": [
      {
        "label": "belongs to",
        "uri": "http://dbpedia.org/property/owner",
        "seq": "32,42",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "baseball team",
        "uri": "http://dbpedia.org/ontology/BaseballTeam",
        "seq": "13,26",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "What are the television shows whose network\u0027s stockholder is Warner Bros. Television?",
    "SerialNumber": "2279",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/owner\u003e \u003chttp://dbpedia.org/resource/Warner_Bros._Television\u003e . ?uri \u003chttp://dbpedia.org/ontology/network\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Warner Bros. Television",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Warner_Bros._Television",
        "seq": "61,84"
      }
    ],
    "id": "6d88e417c33d49cd85eaa5b9dc7b1174",
    "predicate mapping": [
      {
        "label": "stockholder",
        "uri": "http://dbpedia.org/property/owner",
        "seq": "46,57",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "network",
        "uri": "http://dbpedia.org/ontology/network",
        "seq": "36,43",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "13,28",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What are some music artists whose bands have signed up with Entertainment One Music?",
    "SerialNumber": "2281",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/label\u003e \u003chttp://dbpedia.org/resource/Entertainment_One_Music\u003e . ?x \u003chttp://dbpedia.org/ontology/bandMember\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Band\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Entertainment One Music",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Entertainment_One_Music",
        "seq": "60,83"
      }
    ],
    "id": "4224e0b4c1b448f3b24c6ed62d2b7575",
    "predicate mapping": [
      {
        "label": "are",
        "uri": "http://dbpedia.org/property/label",
        "seq": "5,8",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "bands",
        "uri": "http://dbpedia.org/ontology/bandMember",
        "seq": "34,39",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "band",
        "uri": "http://dbpedia.org/ontology/Band",
        "seq": "34,38",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Do Ctenochaetus Binotatus lie in the cActinopterygii class?",
    "SerialNumber": "2282",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Ctenochaetus_binotatus\u003e \u003chttp://dbpedia.org/ontology/class\u003e \u003chttp://dbpedia.org/resource/Actinopterygii\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ctenochaetus Binotatus",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ctenochaetus_binotatus",
        "seq": "3,25"
      },
      {
        "label": "Actinopterygii",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Actinopterygii",
        "seq": "38,52"
      }
    ],
    "id": "f17ff46a28de491a93859a94e3046480",
    "predicate mapping": [
      {
        "label": "class",
        "uri": "http://dbpedia.org/ontology/class",
        "seq": "53,58",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "406",
    "question": "How many movies have had a cinematographer who died in US?",
    "SerialNumber": "2284",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/deathPlace\u003e \u003chttp://dbpedia.org/resource/United_States\u003e . ?uri \u003chttp://dbpedia.org/property/cinematography\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "US",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/United_States",
        "seq": "55,57"
      }
    ],
    "id": "77b265d0903641b2b810680c1bd2bb67",
    "predicate mapping": [
      {
        "label": "died in",
        "uri": "http://dbpedia.org/property/deathPlace",
        "seq": "47,54",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "cinematographer",
        "uri": "http://dbpedia.org/property/cinematography",
        "seq": "27,42",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which owner of Chelsea F.C also owns Evraz ?",
    "SerialNumber": "2287",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Evraz\u003e \u003chttp://dbpedia.org/ontology/owningCompany\u003e ?uri. \u003chttp://dbpedia.org/resource/Chelsea_F.C.\u003e \u003chttp://dbpedia.org/property/owner\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Evraz",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Evraz",
        "seq": "37,42"
      },
      {
        "label": "Chelsea F.C",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Chelsea_F.C.",
        "seq": "15,26"
      }
    ],
    "id": "9b45f5f43c2340bf8e4670188fdf164c",
    "predicate mapping": [
      {
        "label": "owns",
        "uri": "http://dbpedia.org/ontology/owningCompany",
        "seq": "32,36",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "owner",
        "uri": "http://dbpedia.org/property/owner",
        "seq": "6,11",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "Name the largest city of the country where the body of Amit Saigal was discovered?",
    "SerialNumber": "2289",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Amit_Saigal\u003e \u003chttp://dbpedia.org/ontology/bodyDiscovered\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/largestCity\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Country\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Amit Saigal",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Amit_Saigal",
        "seq": "55,66"
      }
    ],
    "id": "635e0b878e574ae6af542fd1e1a9cdac",
    "predicate mapping": [
      {
        "label": "discovered body",
        "uri": "http://dbpedia.org/ontology/bodyDiscovered",
        "seq": "-1,14",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "largest city",
        "uri": "http://dbpedia.org/ontology/largestCity",
        "seq": "9,21",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/Country",
        "seq": "29,36",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Where is the hometown of A Bartlett Giamatti?",
    "SerialNumber": "2290",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/A._Bartlett_Giamatti\u003e \u003chttp://dbpedia.org/ontology/hometown\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Bartlett Giamatti",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/A._Bartlett_Giamatti",
        "seq": "27,44"
      }
    ],
    "id": "3f8ac10edaaa4c4cbbde422c79de3c6d",
    "predicate mapping": [
      {
        "label": "hometown",
        "uri": "http://dbpedia.org/ontology/hometown",
        "seq": "13,21",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which major shrine of Tekle haymanot is the palce of death of Haile Selassie Gugsa ?",
    "SerialNumber": "2291",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Tekle_Haymanot\u003e \u003chttp://dbpedia.org/ontology/majorShrine\u003e ?uri. \u003chttp://dbpedia.org/resource/Haile_Selassie_Gugsa\u003e \u003chttp://dbpedia.org/property/placeOfDeath\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Tekle haymanot",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Tekle_Haymanot",
        "seq": "22,36"
      },
      {
        "label": "Haile Selassie Gugsa",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Haile_Selassie_Gugsa",
        "seq": "62,82"
      }
    ],
    "id": "101dfea643e24d1483797bfb175000f1",
    "predicate mapping": [
      {
        "label": "major shrine",
        "uri": "http://dbpedia.org/ontology/majorShrine",
        "seq": "6,18",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "death",
        "uri": "http://dbpedia.org/property/placeOfDeath",
        "seq": "53,58",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "List the ethnicity of Riley Reid?",
    "SerialNumber": "2292",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Riley_Reid\u003e \u003chttp://dbpedia.org/property/ethnicity\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Riley Reid",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Riley_Reid",
        "seq": "22,32"
      }
    ],
    "id": "e63144a282cb442497406a9b189093f7",
    "predicate mapping": [
      {
        "label": "ethnicity",
        "uri": "http://dbpedia.org/property/ethnicity",
        "seq": "9,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "311",
    "question": "List the fields of the scientists with Sanskrit as one of the interest ?",
    "SerialNumber": "2293",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/fields\u003e \u003chttp://dbpedia.org/resource/Sanskrit\u003e . ?x \u003chttp://dbpedia.org/property/fields\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Scientist\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Sanskrit",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Sanskrit",
        "seq": "39,47"
      }
    ],
    "id": "09a6fbecddd347ed8eb1e9af79aa1a07",
    "predicate mapping": [
      {
        "label": "fields",
        "uri": "http://dbpedia.org/property/fields",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "fields",
        "uri": "http://dbpedia.org/property/fields",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "scientist",
        "uri": "http://dbpedia.org/ontology/Scientist",
        "seq": "23,32",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Who won the silver medal when the bronze was won by Yang Yilin?",
    "SerialNumber": "2295",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/bronzeMedalist\u003e \u003chttp://dbpedia.org/resource/Yang_Yilin\u003e . ?x \u003chttp://dbpedia.org/ontology/silverMedalist\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Yang Yilin",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Yang_Yilin",
        "seq": "52,62"
      }
    ],
    "id": "dbd52395559b4c3cbf5446916a925b89",
    "predicate mapping": [
      {
        "label": "bronze medal",
        "uri": "http://dbpedia.org/ontology/bronzeMedalist",
        "seq": "-1,11",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "silver medal",
        "uri": "http://dbpedia.org/ontology/silverMedalist",
        "seq": "12,24",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "List the work  edited by  Mark Stevens and directed by Joel Schumacher?",
    "SerialNumber": "2296",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/editing\u003e \u003chttp://dbpedia.org/resource/Mark_Stevens_(film_editor)\u003e . ?uri \u003chttp://dbpedia.org/ontology/director\u003e \u003chttp://dbpedia.org/resource/Joel_Schumacher\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Work\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Mark Stevens",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Mark_Stevens_(film_editor)",
        "seq": "26,38"
      },
      {
        "label": "Joel Schumacher",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Joel_Schumacher",
        "seq": "55,70"
      }
    ],
    "id": "6f642ee5a00048ecaeff1c0e0412e4b6",
    "predicate mapping": [
      {
        "label": "edited by",
        "uri": "http://dbpedia.org/property/editing",
        "seq": "15,24",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "directed by",
        "uri": "http://dbpedia.org/ontology/director",
        "seq": "43,54",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "work",
        "uri": "http://dbpedia.org/ontology/Work",
        "seq": "9,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the office holder with associate as Marcus Calpurnius Bibulus and has a kid named Augustus?",
    "SerialNumber": "2297",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/associate\u003e \u003chttp://dbpedia.org/resource/Marcus_Calpurnius_Bibulus\u003e . ?uri \u003chttp://dbpedia.org/ontology/child\u003e \u003chttp://dbpedia.org/resource/Augustus\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/OfficeHolder\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Marcus Calpurnius Bibulus",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Marcus_Calpurnius_Bibulus",
        "seq": "41,66"
      },
      {
        "label": "Augustus",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Augustus",
        "seq": "87,95"
      }
    ],
    "id": "f728bbb501354155898026a4cef7730c",
    "predicate mapping": [
      {
        "label": "associate",
        "uri": "http://dbpedia.org/ontology/associate",
        "seq": "28,37",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "kid",
        "uri": "http://dbpedia.org/ontology/child",
        "seq": "77,80",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "office holder",
        "uri": "http://dbpedia.org/ontology/OfficeHolder",
        "seq": "9,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "List the popular works of the author of Luther: The Calling ?",
    "SerialNumber": "2298",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Luther:_The_Calling\u003e \u003chttp://dbpedia.org/property/author\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/notableWork\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Luther: The Calling",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Luther:_The_Calling",
        "seq": "40,59"
      }
    ],
    "id": "41dbdb533af748c4968df7b35a1cb8ac",
    "predicate mapping": [
      {
        "label": "author",
        "uri": "http://dbpedia.org/property/author",
        "seq": "30,36",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "works",
        "uri": "http://dbpedia.org/ontology/notableWork",
        "seq": "17,22",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "Who are the predecessors of John Randolph of Roanoke?",
    "SerialNumber": "2299",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/predecessor\u003e \u003chttp://dbpedia.org/resource/John_Randolph_of_Roanoke\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "John Randolph",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/John_Randolph_of_Roanoke",
        "seq": "28,41"
      }
    ],
    "id": "3f758b0a0ad24d339835902878769609",
    "predicate mapping": [
      {
        "label": "predecessor",
        "uri": "http://dbpedia.org/property/predecessor",
        "seq": "12,23",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Is fox belong to the phylum of Chordate?",
    "SerialNumber": "2301",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Fox\u003e \u003chttp://dbpedia.org/ontology/phylum\u003e \u003chttp://dbpedia.org/resource/Chordate\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "fox",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Fox",
        "seq": "3,6"
      },
      {
        "label": "Chordate",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Chordate",
        "seq": "31,39"
      }
    ],
    "id": "d4b5df324bec450b833f8f4c1145992c",
    "predicate mapping": [
      {
        "label": "phylum",
        "uri": "http://dbpedia.org/ontology/phylum",
        "seq": "21,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who were the first drivers in Grand Prixes where the first team was Scuderia Ferrari?",
    "SerialNumber": "2302",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/firstTeam\u003e \u003chttp://dbpedia.org/resource/Scuderia_Ferrari\u003e . ?x \u003chttp://dbpedia.org/ontology/firstDriver\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/GrandPrix\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Scuderia Ferrari",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Scuderia_Ferrari",
        "seq": "68,84"
      }
    ],
    "id": "1ef735b540d24d54a41b5f259cd99fbd",
    "predicate mapping": [
      {
        "label": "first team",
        "uri": "http://dbpedia.org/property/firstTeam",
        "seq": "53,63",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "first driver",
        "uri": "http://dbpedia.org/ontology/firstDriver",
        "seq": "13,25",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "Grand Prix",
        "uri": "http://dbpedia.org/ontology/GrandPrix",
        "seq": "30,40",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "311",
    "question": "List the alma mater of the congressmen who attended Nashville, Tennessee ?",
    "SerialNumber": "2304",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/almaMater\u003e \u003chttp://dbpedia.org/resource/Nashville,_Tennessee\u003e . ?x \u003chttp://dbpedia.org/ontology/almaMater\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Congressman\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Nashville, Tennessee",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Nashville,_Tennessee",
        "seq": "52,72"
      }
    ],
    "id": "b9fce2f9e56242169dae47d4d9dbf91a",
    "predicate mapping": [
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/property/almaMater",
        "seq": "9,19",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/ontology/almaMater",
        "seq": "9,19",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "congressmen",
        "uri": "http://dbpedia.org/ontology/Congressman",
        "seq": "27,38",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "List TV shows with producer as Erik Bork and company is DreamWorks Television ?",
    "SerialNumber": "2306",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/company\u003e \u003chttp://dbpedia.org/resource/DreamWorks_Television\u003e . ?uri \u003chttp://dbpedia.org/ontology/producer\u003e \u003chttp://dbpedia.org/resource/Erik_Bork\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "DreamWorks Television",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/DreamWorks_Television",
        "seq": "56,77"
      },
      {
        "label": "Erik Bork",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Erik_Bork",
        "seq": "31,40"
      }
    ],
    "id": "af7cd0b6cb6a40969a0ea593539894cc",
    "predicate mapping": [
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/company",
        "seq": "45,52",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "producer",
        "uri": "http://dbpedia.org/ontology/producer",
        "seq": "19,27",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "television",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "-1,9",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Which sports are played in the alma mater of Habib Boromand Dashghapu?",
    "SerialNumber": "2310",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Habib_Boromand_Dashghapu\u003e \u003chttp://dbpedia.org/property/almaMater\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/sport\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Habib Boromand Dashghapu",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Habib_Boromand_Dashghapu",
        "seq": "45,69"
      }
    ],
    "id": "98482e0e16ea482f9030d6b2d9cb000f",
    "predicate mapping": [
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/property/almaMater",
        "seq": "31,41",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "sport",
        "uri": "http://dbpedia.org/ontology/sport",
        "seq": "6,11",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "List the television shows whose network\u0027s owning company is Turner Broadcasting System?",
    "SerialNumber": "2311",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/owningCompany\u003e \u003chttp://dbpedia.org/resource/Turner_Broadcasting_System\u003e . ?uri \u003chttp://dbpedia.org/property/network\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Turner Broadcasting System",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Turner_Broadcasting_System",
        "seq": "60,86"
      }
    ],
    "id": "4aaaa78384af465b8af13b2217f0ef66",
    "predicate mapping": [
      {
        "label": "owning company",
        "uri": "http://dbpedia.org/ontology/owningCompany",
        "seq": "42,56",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "network",
        "uri": "http://dbpedia.org/property/network",
        "seq": "32,39",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "9,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "101",
    "question": "Give me a count on associates of Johnny Cash?",
    "SerialNumber": "2312",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/property/associatedActs\u003e \u003chttp://dbpedia.org/resource/Johnny_Cash\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Johnny Cash",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Johnny_Cash",
        "seq": "33,44"
      }
    ],
    "id": "8a89ec10f625479ab78c031ce60bdb2e",
    "predicate mapping": [
      {
        "label": "associates",
        "uri": "http://dbpedia.org/property/associatedActs",
        "seq": "19,29",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What country provides a citizenship too Newin Chidchob and Seni Pramoj?",
    "SerialNumber": "2313",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Newin_Chidchob\u003e \u003chttp://dbpedia.org/property/nationality\u003e ?uri. \u003chttp://dbpedia.org/resource/Seni_Pramoj\u003e \u003chttp://dbpedia.org/ontology/nationality\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Newin Chidchob",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Newin_Chidchob",
        "seq": "40,54"
      },
      {
        "label": "Seni Pramoj",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Seni_Pramoj",
        "seq": "59,70"
      }
    ],
    "id": "0edab4967312457b82a5c2fc9c82b662",
    "predicate mapping": [
      {
        "label": "citizenship",
        "uri": "http://dbpedia.org/property/nationality",
        "seq": "24,35",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "citizenship",
        "uri": "http://dbpedia.org/ontology/nationality",
        "seq": "24,35",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who is the musician of Before I let you Go ?",
    "SerialNumber": "2316",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Before_I_Let_You_Go\u003e \u003chttp://dbpedia.org/ontology/musicalArtist\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Before I let you Go",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Before_I_Let_You_Go",
        "seq": "23,42"
      }
    ],
    "id": "146cb6a075864ab787660a7fa34af21a",
    "predicate mapping": [
      {
        "label": "musician",
        "uri": "http://dbpedia.org/ontology/musicalArtist",
        "seq": "11,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which admin center of pulau Ujong is also the largest city of Pulau Ubin ?",
    "SerialNumber": "2317",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Pulau_Ubin\u003e \u003chttp://dbpedia.org/ontology/largestCity\u003e ?uri. \u003chttp://dbpedia.org/resource/Pulau_Ujong\u003e \u003chttp://dbpedia.org/ontology/capital\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Pulau Ubin",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Pulau_Ubin",
        "seq": "62,72"
      },
      {
        "label": "pulau Ujong",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Pulau_Ujong",
        "seq": "22,33"
      }
    ],
    "id": "26fa2c8e027f4a21a5d176e264f493db",
    "predicate mapping": [
      {
        "label": "largest city",
        "uri": "http://dbpedia.org/ontology/largestCity",
        "seq": "46,58",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "city",
        "uri": "http://dbpedia.org/ontology/capital",
        "seq": "54,58",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the Ceremonial County of Port of Tilbury ?",
    "SerialNumber": "2318",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Port_of_Tilbury\u003e \u003chttp://dbpedia.org/ontology/ceremonialCounty\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Port of Tilbury",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Port_of_Tilbury",
        "seq": "33,48"
      }
    ],
    "id": "2bb0d338072d46e2b06b40c9f3b8f84d",
    "predicate mapping": [
      {
        "label": "Ceremonial County",
        "uri": "http://dbpedia.org/ontology/ceremonialCounty",
        "seq": "12,29",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the current team of John McGuinness (motorcycle racer) ?",
    "SerialNumber": "2319",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/John_McGuinness_(motorcycle_racer)\u003e \u003chttp://dbpedia.org/property/currentTeam\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "John McGuinness",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/John_McGuinness_(motorcycle_racer)",
        "seq": "28,43"
      }
    ],
    "id": "9a71167ed51b4c7da57c4724f82effdf",
    "predicate mapping": [
      {
        "label": "current team",
        "uri": "http://dbpedia.org/property/currentTeam",
        "seq": "12,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "What is the ideology of the Union of Cambodian Democrats which is also the ideology of Palang Dharma Party ?",
    "SerialNumber": "2320",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Union_of_Cambodian_Democrats\u003e \u003chttp://dbpedia.org/ontology/ideology\u003e ?uri. \u003chttp://dbpedia.org/resource/Palang_Dharma_Party\u003e \u003chttp://dbpedia.org/ontology/ideology\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Union of Cambodian Democrats",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Union_of_Cambodian_Democrats",
        "seq": "28,56"
      },
      {
        "label": "Palang Dharma Party",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Palang_Dharma_Party",
        "seq": "87,106"
      }
    ],
    "id": "1231ff04697c489994c5fa0f61486d2e",
    "predicate mapping": [
      {
        "label": "ideology",
        "uri": "http://dbpedia.org/ontology/ideology",
        "seq": "12,20",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "ideology",
        "uri": "http://dbpedia.org/ontology/ideology",
        "seq": "12,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What is the honorary title of the narrator of Everything Will Be OK?",
    "SerialNumber": "2321",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Everything_Will_Be_OK\u003e \u003chttp://dbpedia.org/ontology/narrator\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/award\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Everything Will Be OK",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Everything_Will_Be_OK",
        "seq": "46,67"
      }
    ],
    "id": "72496fef2635425da6c20915c894072f",
    "predicate mapping": [
      {
        "label": "narrator",
        "uri": "http://dbpedia.org/ontology/narrator",
        "seq": "34,42",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "honorary title",
        "uri": "http://dbpedia.org/ontology/award",
        "seq": "12,26",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "Who is the famous relative of Kelly Osbourne?",
    "SerialNumber": "2323",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/relatives\u003e \u003chttp://dbpedia.org/resource/Kelly_Osbourne\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Kelly Osbourne",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Kelly_Osbourne",
        "seq": "30,44"
      }
    ],
    "id": "d8afce1fd4aa4a2580832293b1d0d318",
    "predicate mapping": [
      {
        "label": "relative",
        "uri": "http://dbpedia.org/property/relatives",
        "seq": "18,26",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "111",
    "question": "What is the total number of other destinations of the airlines whose one of the destinations is Mediterranean Sea?",
    "SerialNumber": "2325",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/destinations\u003e \u003chttp://dbpedia.org/resource/Mediterranean_Sea\u003e . ?x \u003chttp://dbpedia.org/property/destinations\u003e ?uri }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Mediterranean Sea",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Mediterranean_Sea",
        "seq": "96,113"
      }
    ],
    "id": "c025e34523ad4f878edcceb8291c9d56",
    "predicate mapping": [
      {
        "label": "destinations",
        "uri": "http://dbpedia.org/property/destinations",
        "seq": "34,46",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "destinations",
        "uri": "http://dbpedia.org/property/destinations",
        "seq": "34,46",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "List the software developed by Shawn Fanning ?",
    "SerialNumber": "2327",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/developer\u003e \u003chttp://dbpedia.org/resource/Shawn_Fanning\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Software\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Shawn Fanning",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Shawn_Fanning",
        "seq": "31,44"
      }
    ],
    "id": "0ed54b0efa694946800d7e772920ffce",
    "predicate mapping": [
      {
        "label": "developed by",
        "uri": "http://dbpedia.org/ontology/developer",
        "seq": "18,30",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "software",
        "uri": "http://dbpedia.org/ontology/Software",
        "seq": "9,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "111",
    "question": "Count the number of things people who know linguistics are known for ?",
    "SerialNumber": "2328",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/knownFor\u003e \u003chttp://dbpedia.org/resource/Linguistics\u003e . ?x \u003chttp://dbpedia.org/ontology/knownFor\u003e ?uri }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "linguistics",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Linguistics",
        "seq": "43,54"
      }
    ],
    "id": "1b0d7ff1c88044248561bde3b1c452da",
    "predicate mapping": [
      {
        "label": "known for",
        "uri": "http://dbpedia.org/ontology/knownFor",
        "seq": "59,68",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "known for",
        "uri": "http://dbpedia.org/ontology/knownFor",
        "seq": "59,68",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who is the employer of Michael M. Sears ?",
    "SerialNumber": "2330",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Michael_M._Sears\u003e \u003chttp://dbpedia.org/property/employer\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Michael M. Sears",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Michael_M._Sears",
        "seq": "23,39"
      }
    ],
    "id": "5347e3d7e51348bb814413a5707b97f3",
    "predicate mapping": [
      {
        "label": "employer",
        "uri": "http://dbpedia.org/property/employer",
        "seq": "11,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What awards were given to the producer of Chicken Little?",
    "SerialNumber": "2336",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Chicken_Little_(1943_film)\u003e \u003chttp://dbpedia.org/ontology/producer\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/award\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Chicken Little",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Chicken_Little_(1943_film)",
        "seq": "42,56"
      }
    ],
    "id": "d966774a4f744b009b17755dbd061e11",
    "predicate mapping": [
      {
        "label": "producer",
        "uri": "http://dbpedia.org/ontology/producer",
        "seq": "30,38",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/award",
        "seq": "5,11",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What is the home stadium of the club coached by Justine Omojong?",
    "SerialNumber": "2337",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/coach\u003e \u003chttp://dbpedia.org/resource/Justine_Omojong\u003e . ?x \u003chttp://dbpedia.org/property/homeStadium\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/SoccerClub\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Justine Omojong",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Justine_Omojong",
        "seq": "48,63"
      }
    ],
    "id": "87c34662138f4e4b911440985824435c",
    "predicate mapping": [
      {
        "label": "coach",
        "uri": "http://dbpedia.org/property/coach",
        "seq": "37,42",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "home stadium",
        "uri": "http://dbpedia.org/property/homeStadium",
        "seq": "12,24",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "club",
        "uri": "http://dbpedia.org/ontology/SoccerClub",
        "seq": "32,36",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "Whose children died in North Bend, Ohio?",
    "SerialNumber": "2339",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/deathPlace\u003e \u003chttp://dbpedia.org/resource/North_Bend,_Ohio\u003e . ?uri \u003chttp://dbpedia.org/ontology/child\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "North Bend, Ohio",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/North_Bend,_Ohio",
        "seq": "23,39"
      }
    ],
    "id": "db0ceedbcf0e4e1ca708191b92dc2b59",
    "predicate mapping": [
      {
        "label": "died in",
        "uri": "http://dbpedia.org/ontology/deathPlace",
        "seq": "15,22",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "children",
        "uri": "http://dbpedia.org/ontology/child",
        "seq": "6,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the governing body of Burro Flats Painted Cave ?",
    "SerialNumber": "2340",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Burro_Flats_Painted_Cave\u003e \u003chttp://dbpedia.org/ontology/governingBody\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Burro Flats Painted Cave",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Burro_Flats_Painted_Cave",
        "seq": "30,54"
      }
    ],
    "id": "732a9efd20d74796b8805987d0bcf033",
    "predicate mapping": [
      {
        "label": "governing body",
        "uri": "http://dbpedia.org/ontology/governingBody",
        "seq": "12,26",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "7",
    "question": "whose is famous works are Maniac Magee and Wringer ?",
    "SerialNumber": "2341",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/property/notableworks\u003e \u003chttp://dbpedia.org/resource/Maniac_Magee\u003e . ?uri \u003chttp://dbpedia.org/property/notableworks\u003e \u003chttp://dbpedia.org/resource/Wringer_(novel)\u003e . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Maniac Magee",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Maniac_Magee",
        "seq": "26,38"
      },
      {
        "label": "Wringer",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Wringer_(novel)",
        "seq": "43,50"
      }
    ],
    "id": "2b1b78d738c7454dbc224bdc6ccf3ff2",
    "predicate mapping": [
      {
        "label": "works",
        "uri": "http://dbpedia.org/property/notableworks",
        "seq": "16,21",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "works",
        "uri": "http://dbpedia.org/property/notableworks",
        "seq": "16,21",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Is Lieutenant general (United States) the superintendent of United States Air Force Academy?",
    "SerialNumber": "2342",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/United_States_Air_Force_Academy\u003e \u003chttp://dbpedia.org/property/superintendent\u003e \u003chttp://dbpedia.org/resource/Lieutenant_general_(United_States)\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "United States Air Force Academy",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/United_States_Air_Force_Academy",
        "seq": "60,91"
      },
      {
        "label": "Lieutenant general (United States)",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Lieutenant_general_(United_States)",
        "seq": "3,37"
      }
    ],
    "id": "b9c19bf4a7b2452184d20d0130556a0f",
    "predicate mapping": [
      {
        "label": "superintendent",
        "uri": "http://dbpedia.org/property/superintendent",
        "seq": "42,56",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "Who is the owner of the website which has the label Seed Eight ?",
    "SerialNumber": "2344",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Seed_Eight\u003e \u003chttp://dbpedia.org/property/label\u003e ?x . ?x \u003chttp://dbpedia.org/property/owner\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Website\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Seed Eight",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Seed_Eight",
        "seq": "52,62"
      }
    ],
    "id": "5f0366cd125f4976a4b7362c81b098cd",
    "predicate mapping": [
      {
        "label": "label",
        "uri": "http://dbpedia.org/property/label",
        "seq": "46,51",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "owner",
        "uri": "http://dbpedia.org/property/owner",
        "seq": "11,16",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "website",
        "uri": "http://dbpedia.org/ontology/Website",
        "seq": "24,31",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the venerated in of the Abraham and religion of the Saima Chowdhury",
    "SerialNumber": "2345",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Abraham\u003e \u003chttp://dbpedia.org/property/veneratedIn\u003e ?uri. \u003chttp://dbpedia.org/resource/Saima_Chowdhury\u003e \u003chttp://dbpedia.org/property/religion\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Abraham",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Abraham",
        "seq": "32,39"
      },
      {
        "label": "Saima Chowdhury",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Saima_Chowdhury",
        "seq": "60,75"
      }
    ],
    "id": "2c0f7eee1b634f1895cbd246bd8c6e3c",
    "predicate mapping": [
      {
        "label": "venerated in",
        "uri": "http://dbpedia.org/property/veneratedIn",
        "seq": "12,24",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/property/religion",
        "seq": "44,52",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "To which label did The Producers and I pray on Christmas sign up?",
    "SerialNumber": "2346",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/The_Producers_(2005_film)\u003e \u003chttp://dbpedia.org/property/label\u003e ?uri. \u003chttp://dbpedia.org/resource/I_Pray_on_Christmas\u003e \u003chttp://dbpedia.org/property/label\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "The Producers",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Producers_(2005_film)",
        "seq": "19,32"
      },
      {
        "label": "I pray on Christmas",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/I_Pray_on_Christmas",
        "seq": "37,56"
      }
    ],
    "id": "6ea80116b84f49ef9ac58da5151f1fea",
    "predicate mapping": [
      {
        "label": "label",
        "uri": "http://dbpedia.org/property/label",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "label",
        "uri": "http://dbpedia.org/property/label",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "307",
    "question": "What is the organisation whose purposes are Environmentalism and Peace?",
    "SerialNumber": "2350",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/property/purpose\u003e \u003chttp://dbpedia.org/resource/Environmentalism\u003e . ?uri \u003chttp://dbpedia.org/property/purpose\u003e \u003chttp://dbpedia.org/resource/Peace\u003e . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Organisation\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Environmentalism",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Environmentalism",
        "seq": "44,60"
      },
      {
        "label": "Peace",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Peace",
        "seq": "65,70"
      }
    ],
    "id": "08b90a2d429c4706bb5362d8b58190a7",
    "predicate mapping": [
      {
        "label": "purpose",
        "uri": "http://dbpedia.org/property/purpose",
        "seq": "31,38",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "purpose",
        "uri": "http://dbpedia.org/property/purpose",
        "seq": "31,38",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "organisation",
        "uri": "http://dbpedia.org/ontology/Organisation",
        "seq": "12,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which sports by Polytechnic University of the Philippines Taguig is the discipline of The Chess Monthly ?",
    "SerialNumber": "2351",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/The_Chess_Monthly\u003e \u003chttp://dbpedia.org/property/discipline\u003e ?uri. \u003chttp://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_Taguig\u003e \u003chttp://dbpedia.org/ontology/sport\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "The Chess Monthly",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/The_Chess_Monthly",
        "seq": "86,103"
      },
      {
        "label": "Polytechnic University of the Philippines Taguig",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_Taguig",
        "seq": "16,64"
      }
    ],
    "id": "bac245d8e39a47c1829470a9261b80c3",
    "predicate mapping": [
      {
        "label": "discipline",
        "uri": "http://dbpedia.org/property/discipline",
        "seq": "72,82",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "sport",
        "uri": "http://dbpedia.org/ontology/sport",
        "seq": "6,11",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the series of Doctor Who: Evacuation Earth ?",
    "SerialNumber": "2352",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Doctor_Who:_Evacuation_Earth\u003e \u003chttp://dbpedia.org/ontology/series\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Doctor Who: Evacuation Earth",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Doctor_Who:_Evacuation_Earth",
        "seq": "19,47"
      }
    ],
    "id": "93c37c563c8b4f0f9b070340f1fa1630",
    "predicate mapping": [
      {
        "label": "series",
        "uri": "http://dbpedia.org/ontology/series",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "8",
    "question": "Name a royalty whose one of the child is Augustus  and is associated with Publius Servilius Vatia Isauricus?",
    "SerialNumber": "2354",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/children\u003e \u003chttp://dbpedia.org/resource/Augustus\u003e . ?uri \u003chttp://dbpedia.org/ontology/associate\u003e \u003chttp://dbpedia.org/resource/Publius_Servilius_Vatia_Isauricus_(consul_48_BC)\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Augustus",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Augustus",
        "seq": "41,49"
      },
      {
        "label": "Publius Servilius Vatia Isauricus",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Publius_Servilius_Vatia_Isauricus_(consul_48_BC)",
        "seq": "74,107"
      }
    ],
    "id": "daa90042f4ff4210a603ae0931b2e92d",
    "predicate mapping": [
      {
        "label": "child",
        "uri": "http://dbpedia.org/property/children",
        "seq": "32,37",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "associate",
        "uri": "http://dbpedia.org/ontology/associate",
        "seq": "58,67",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "What water bodies have primary inflows sa Kemijoki?",
    "SerialNumber": "2357",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/inflow\u003e \u003chttp://dbpedia.org/resource/Kemijoki\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Kemijoki",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Kemijoki",
        "seq": "42,50"
      }
    ],
    "id": "cc83b16990044389a146f6d649f878d8",
    "predicate mapping": [
      {
        "label": "inflows",
        "uri": "http://dbpedia.org/ontology/inflow",
        "seq": "31,38",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "In which nation does the league take place where C.D. Primeiro de Agosto play?",
    "SerialNumber": "2359",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/C.D._Primeiro_de_Agosto_(basketball)\u003e \u003chttp://dbpedia.org/ontology/league\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/country\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/SportsLeague\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "C.D. Primeiro de Agosto",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/C.D._Primeiro_de_Agosto_(basketball)",
        "seq": "49,72"
      }
    ],
    "id": "dcec37f25d32481aa9f9ed53d204e888",
    "predicate mapping": [
      {
        "label": "league",
        "uri": "http://dbpedia.org/ontology/league",
        "seq": "25,31",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "nation",
        "uri": "http://dbpedia.org/ontology/country",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "league",
        "uri": "http://dbpedia.org/ontology/SportsLeague",
        "seq": "25,31",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Colin Powell was the commander of which military conflict ?",
    "SerialNumber": "2360",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/commander\u003e \u003chttp://dbpedia.org/resource/Colin_Powell\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MilitaryConflict\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Colin Powell",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Colin_Powell",
        "seq": "0,12"
      }
    ],
    "id": "83382bb589c04cbcb6617f67fc123310",
    "predicate mapping": [
      {
        "label": "commander",
        "uri": "http://dbpedia.org/ontology/commander",
        "seq": "21,30",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "military conflict",
        "uri": "http://dbpedia.org/ontology/MilitaryConflict",
        "seq": "40,57",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Name the garrison of the Western Naval Command and line of the Vadodara Junction railway station ?",
    "SerialNumber": "2361",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Western_Naval_Command\u003e \u003chttp://dbpedia.org/property/garrison\u003e ?uri. \u003chttp://dbpedia.org/resource/Vadodara_Junction_railway_station\u003e \u003chttp://dbpedia.org/property/line\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Western Naval Command",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Western_Naval_Command",
        "seq": "25,46"
      },
      {
        "label": "Vadodara Junction railway station",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Vadodara_Junction_railway_station",
        "seq": "63,96"
      }
    ],
    "id": "3f4e1777926347a99cba52bdca19ce51",
    "predicate mapping": [
      {
        "label": "garrison",
        "uri": "http://dbpedia.org/property/garrison",
        "seq": "9,17",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "line",
        "uri": "http://dbpedia.org/property/line",
        "seq": "51,55",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which cloud platform of Google cloud connect also provides services to 21Vianet ?",
    "SerialNumber": "2363",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/21Vianet\u003e \u003chttp://dbpedia.org/property/services\u003e ?uri. \u003chttp://dbpedia.org/resource/Google_Cloud_Connect\u003e \u003chttp://dbpedia.org/ontology/computingPlatform\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "21Vianet",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/21Vianet",
        "seq": "71,79"
      },
      {
        "label": "Google cloud connect",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Google_Cloud_Connect",
        "seq": "24,44"
      }
    ],
    "id": "f05f216ef164453abedf0403b3b1eedc",
    "predicate mapping": [
      {
        "label": "services",
        "uri": "http://dbpedia.org/property/services",
        "seq": "59,67",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "platform",
        "uri": "http://dbpedia.org/ontology/computingPlatform",
        "seq": "12,20",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "311",
    "question": "List all areas served by the radio station serving South carolina ?",
    "SerialNumber": "2365",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/area\u003e \u003chttp://dbpedia.org/resource/South_Carolina\u003e . ?x \u003chttp://dbpedia.org/property/area\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/RadioStation\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "South carolina",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/South_Carolina",
        "seq": "51,65"
      }
    ],
    "id": "b880859b1271437abc4a9eb3d7e1e368",
    "predicate mapping": [
      {
        "label": "area",
        "uri": "http://dbpedia.org/property/area",
        "seq": "9,13",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "area",
        "uri": "http://dbpedia.org/property/area",
        "seq": "9,13",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "radio station",
        "uri": "http://dbpedia.org/ontology/RadioStation",
        "seq": "29,42",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Malaysian highway authority has designed bridges over what things?",
    "SerialNumber": "2366",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/designer\u003e \u003chttp://dbpedia.org/resource/Malaysian_Highway_Authority\u003e . ?x \u003chttp://dbpedia.org/property/crosses\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Bridge\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Malaysian highway authority",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Malaysian_Highway_Authority",
        "seq": "0,27"
      }
    ],
    "id": "54a6aa13eada429ab1b9d56d49a087ec",
    "predicate mapping": [
      {
        "label": "designed",
        "uri": "http://dbpedia.org/property/designer",
        "seq": "32,40",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "over",
        "uri": "http://dbpedia.org/property/crosses",
        "seq": "49,53",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "bridge",
        "uri": "http://dbpedia.org/ontology/Bridge",
        "seq": "41,47",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "What artists are associated with the members of the Catalin Maruta?",
    "SerialNumber": "2374",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/associatedBand\u003e \u003chttp://dbpedia.org/resource/Cătălin_Măruță\u003e . ?x \u003chttp://dbpedia.org/ontology/associatedMusicalArtist\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Catalin Maruta",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Cătălin_Măruță",
        "seq": "52,66"
      }
    ],
    "id": "d93f15c842c845829c54b1d588a83f82",
    "predicate mapping": [
      {
        "label": "associated",
        "uri": "http://dbpedia.org/ontology/associatedBand",
        "seq": "17,27",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "associated",
        "uri": "http://dbpedia.org/ontology/associatedMusicalArtist",
        "seq": "17,27",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "101",
    "question": "How many people are buried in the Mausoleum of Augustus?",
    "SerialNumber": "2376",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/property/placeOfBurial\u003e \u003chttp://dbpedia.org/resource/Mausoleum_of_Augustus\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Mausoleum of Augustus",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Mausoleum_of_Augustus",
        "seq": "34,55"
      }
    ],
    "id": "f3916ff99c6d498498ec98407decac8f",
    "predicate mapping": [
      {
        "label": "buried in",
        "uri": "http://dbpedia.org/property/placeOfBurial",
        "seq": "20,29",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "401",
    "question": "How many soccer manager have been in the Spain nation football team?",
    "SerialNumber": "2377",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/property/nationalteam\u003e \u003chttp://dbpedia.org/resource/Spain_national_football_team\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/SoccerManager\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Spain nation football team",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Spain_national_football_team",
        "seq": "41,46"
      }
    ],
    "id": "7f1aa7621a7b4850b65ae46159adfa1b",
    "predicate mapping": [
      {
        "label": "nation team",
        "uri": "http://dbpedia.org/property/nationalteam",
        "seq": "-1,10",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "soccer manager",
        "uri": "http://dbpedia.org/ontology/SoccerManager",
        "seq": "9,23",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "List bacteria whose order (taxonomy) is Bacillales and domain is Bacteria?",
    "SerialNumber": "2378",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/order\u003e \u003chttp://dbpedia.org/resource/Bacillales\u003e . ?uri \u003chttp://dbpedia.org/property/domain\u003e \u003chttp://dbpedia.org/resource/Bacteria\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Bacteria\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Bacillales",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Bacillales",
        "seq": "40,50"
      },
      {
        "label": "bacteria",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Bacteria",
        "seq": "5,13"
      }
    ],
    "id": "243a759bcba94cc98226ca3477da618a",
    "predicate mapping": [
      {
        "label": "order (taxonomy)",
        "uri": "http://dbpedia.org/ontology/order",
        "seq": "20,36",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "domain",
        "uri": "http://dbpedia.org/property/domain",
        "seq": "55,61",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "bacteria",
        "uri": "http://dbpedia.org/ontology/Bacteria",
        "seq": "5,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the writer whose one of the notable work is Adventures of Huckleberry Finn and died in Redding, Connecticut?",
    "SerialNumber": "2379",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/notableWork\u003e \u003chttp://dbpedia.org/resource/Adventures_of_Huckleberry_Finn\u003e . ?uri \u003chttp://dbpedia.org/ontology/deathPlace\u003e \u003chttp://dbpedia.org/resource/Redding,_Connecticut\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Writer\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Huckleberry Finn",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Adventures_of_Huckleberry_Finn",
        "seq": "63,79"
      },
      {
        "label": "Redding, Connecticut",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Redding,_Connecticut",
        "seq": "92,112"
      }
    ],
    "id": "64a685047e5d4bee91966f92474abfdf",
    "predicate mapping": [
      {
        "label": "notable work",
        "uri": "http://dbpedia.org/ontology/notableWork",
        "seq": "33,45",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "died in",
        "uri": "http://dbpedia.org/ontology/deathPlace",
        "seq": "84,91",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "writer",
        "uri": "http://dbpedia.org/ontology/Writer",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the broadcast area of ITV (Thailand) ?",
    "SerialNumber": "2380",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/ITV_(Thailand)\u003e \u003chttp://dbpedia.org/property/broadcastArea\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "ITV (Thailand)",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/ITV_(Thailand)",
        "seq": "27,41"
      }
    ],
    "id": "e6e376c1a4f14e9abe7402a8a5f35816",
    "predicate mapping": [
      {
        "label": "broadcast area",
        "uri": "http://dbpedia.org/property/broadcastArea",
        "seq": "9,23",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What sports are played in schools in Vashi?",
    "SerialNumber": "2381",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/city\u003e \u003chttp://dbpedia.org/resource/Vashi\u003e . ?x \u003chttp://dbpedia.org/ontology/sport\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/School\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Vashi",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Vashi",
        "seq": "37,42"
      }
    ],
    "id": "ef13c41037dc4f3a91ab5ec30d53ffa0",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/city",
        "seq": "23,25",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "sport",
        "uri": "http://dbpedia.org/ontology/sport",
        "seq": "5,10",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "school",
        "uri": "http://dbpedia.org/ontology/School",
        "seq": "26,32",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who owns the radio stations in Alabama?",
    "SerialNumber": "2382",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/city\u003e \u003chttp://dbpedia.org/resource/Alabama\u003e . ?x \u003chttp://dbpedia.org/ontology/owner\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/RadioStation\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Alabama",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Alabama",
        "seq": "31,38"
      }
    ],
    "id": "d9a4e4e556544ea0b794d7fbab357cef",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/city",
        "seq": "28,30",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "owns",
        "uri": "http://dbpedia.org/ontology/owner",
        "seq": "4,8",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "radio station",
        "uri": "http://dbpedia.org/ontology/RadioStation",
        "seq": "13,26",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Was Johnny Depp a member of Skull Gang?",
    "SerialNumber": "2383",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Skull_Gang\u003e \u003chttp://dbpedia.org/ontology/bandMember\u003e \u003chttp://dbpedia.org/resource/Johnny_Depp\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Skull Gang",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Skull_Gang",
        "seq": "28,38"
      },
      {
        "label": "Johnny Depp",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Johnny_Depp",
        "seq": "4,15"
      }
    ],
    "id": "c766098f1479492fb8d4e687ad9ea182",
    "predicate mapping": [
      {
        "label": "member",
        "uri": "http://dbpedia.org/ontology/bandMember",
        "seq": "18,24",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "405",
    "question": "How many sports are played at the university whose president is Emanuel de Guzman?",
    "SerialNumber": "2384",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/president\u003e \u003chttp://dbpedia.org/resource/Emanuel_de_Guzman\u003e . ?x \u003chttp://dbpedia.org/ontology/sport\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Sport\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Emanuel de Guzman",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Emanuel_de_Guzman",
        "seq": "64,81"
      }
    ],
    "id": "083343f08ded4af6b8fabe50e2600b71",
    "predicate mapping": [
      {
        "label": "president",
        "uri": "http://dbpedia.org/property/president",
        "seq": "51,60",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "sport",
        "uri": "http://dbpedia.org/ontology/sport",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "sport",
        "uri": "http://dbpedia.org/ontology/Sport",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Who is the owner of  Latvian Wikipedia and Wiktionary ?",
    "SerialNumber": "2386",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Latvian_Wikipedia\u003e \u003chttp://dbpedia.org/ontology/owner\u003e ?uri. \u003chttp://dbpedia.org/resource/Wiktionary\u003e \u003chttp://dbpedia.org/ontology/owner\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Latvian Wikipedia",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Latvian_Wikipedia",
        "seq": "21,38"
      },
      {
        "label": "Wiktionary",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Wiktionary",
        "seq": "43,53"
      }
    ],
    "id": "80c973d818ed45dfbaaaf86dd592f053",
    "predicate mapping": [
      {
        "label": "owner",
        "uri": "http://dbpedia.org/ontology/owner",
        "seq": "11,16",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "owner",
        "uri": "http://dbpedia.org/ontology/owner",
        "seq": "11,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "Philadelphia City Council is the governing body of which city?",
    "SerialNumber": "2387",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/governingBody\u003e \u003chttp://dbpedia.org/resource/Philadelphia_City_Council\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Philadelphia City Council",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Philadelphia_City_Council",
        "seq": "0,25"
      }
    ],
    "id": "3c55183d437f49039e6d568fb6623c8f",
    "predicate mapping": [
      {
        "label": "governing body",
        "uri": "http://dbpedia.org/property/governingBody",
        "seq": "33,47",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What are the television shows whose Composer is Stewart Copeland?",
    "SerialNumber": "2388",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/composer\u003e \u003chttp://dbpedia.org/resource/Stewart_Copeland\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Stewart Copeland",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Stewart_Copeland",
        "seq": "48,64"
      }
    ],
    "id": "ccfbcef8a6b643ca81124ab5f600bcdd",
    "predicate mapping": [
      {
        "label": "Composer",
        "uri": "http://dbpedia.org/property/composer",
        "seq": "36,44",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "13,28",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What is the television show whose opening theme is Where Everybody Knows Your Name?",
    "SerialNumber": "2389",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/openingTheme\u003e \u003chttp://dbpedia.org/resource/Where_Everybody_Knows_Your_Name\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Where Everybody Knows Your Name",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Where_Everybody_Knows_Your_Name",
        "seq": "51,82"
      }
    ],
    "id": "c2faa296b9ad4e5387981be381e83c53",
    "predicate mapping": [
      {
        "label": "opening theme",
        "uri": "http://dbpedia.org/ontology/openingTheme",
        "seq": "34,47",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "12,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "Who follow religions led by David Miscavige?",
    "SerialNumber": "2390",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/leaderName\u003e \u003chttp://dbpedia.org/resource/David_Miscavige\u003e . ?uri \u003chttp://dbpedia.org/ontology/religion\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "David Miscavige",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/David_Miscavige",
        "seq": "28,43"
      }
    ],
    "id": "b3cd59226f27478faeb65afb4ba0b123",
    "predicate mapping": [
      {
        "label": "led",
        "uri": "http://dbpedia.org/property/leaderName",
        "seq": "21,24",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion",
        "seq": "11,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "307",
    "question": "Which country had the county seats as History of Trier and Mediolanum?",
    "SerialNumber": "2393",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/ontology/capital\u003e \u003chttp://dbpedia.org/resource/History_of_Trier\u003e . ?uri \u003chttp://dbpedia.org/ontology/capital\u003e \u003chttp://dbpedia.org/resource/Mediolanum\u003e . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Country\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "History of Trier",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/History_of_Trier",
        "seq": "38,54"
      },
      {
        "label": "Mediolanum",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Mediolanum",
        "seq": "59,69"
      }
    ],
    "id": "0d13e24003bc48eb9d6db732d5e11931",
    "predicate mapping": [
      {
        "label": "county seat",
        "uri": "http://dbpedia.org/ontology/capital",
        "seq": "22,33",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "county seat",
        "uri": "http://dbpedia.org/ontology/capital",
        "seq": "22,33",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/Country",
        "seq": "6,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "406",
    "question": "How many shows belong to the network one of whose sister station is Cartoonite?",
    "SerialNumber": "2395",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/sisterStation\u003e \u003chttp://dbpedia.org/resource/Cartoonito\u003e . ?uri \u003chttp://dbpedia.org/property/network\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Cartoonite",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Cartoonito",
        "seq": "68,78"
      }
    ],
    "id": "7581b52f96f34e7cafd94f2af924760e",
    "predicate mapping": [
      {
        "label": "sister station",
        "uri": "http://dbpedia.org/ontology/sisterStation",
        "seq": "50,64",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "network",
        "uri": "http://dbpedia.org/property/network",
        "seq": "29,36",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "9,14",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Moscow-Kazan high speed railway starts from which station?",
    "SerialNumber": "2397",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Moscow-Kazan_high-speed_railway\u003e \u003chttp://dbpedia.org/ontology/routeStart\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Moscow-Kazan high speed railway",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Moscow-Kazan_high-speed_railway",
        "seq": "0,12"
      }
    ],
    "id": "6fea069c838141f8842dd0965d1d918c",
    "predicate mapping": [
      {
        "label": "starts",
        "uri": "http://dbpedia.org/ontology/routeStart",
        "seq": "32,38",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the common university iof vanderbilt Commodores and also the college of hubert Wiggs ?",
    "SerialNumber": "2401",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Vanderbilt_Commodores\u003e \u003chttp://dbpedia.org/ontology/university\u003e ?uri. \u003chttp://dbpedia.org/resource/Hubert_Wiggs\u003e \u003chttp://dbpedia.org/ontology/college\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "vanderbilt Commodores",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Vanderbilt_Commodores",
        "seq": "34,55"
      },
      {
        "label": "hubert Wiggs",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Hubert_Wiggs",
        "seq": "80,92"
      }
    ],
    "id": "f413c412b8084c02a0a9a82589b5c916",
    "predicate mapping": [
      {
        "label": "university",
        "uri": "http://dbpedia.org/ontology/university",
        "seq": "19,29",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "college",
        "uri": "http://dbpedia.org/ontology/college",
        "seq": "69,76",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Which royal people are buried in Rome?",
    "SerialNumber": "2402",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/placeOfBurial\u003e \u003chttp://dbpedia.org/resource/Rome\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Royalty\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Rome",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Rome",
        "seq": "33,37"
      }
    ],
    "id": "7e85b0de27ab4b60aeca0149dd793305",
    "predicate mapping": [
      {
        "label": "buried in",
        "uri": "http://dbpedia.org/property/placeOfBurial",
        "seq": "23,32",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "royal",
        "uri": "http://dbpedia.org/ontology/Royalty",
        "seq": "6,11",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "406",
    "question": "Give me a count on scientist who are known for garrison is Tennessee ?",
    "SerialNumber": "2404",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/garrison\u003e \u003chttp://dbpedia.org/resource/Tennessee\u003e . ?uri \u003chttp://dbpedia.org/property/knownFor\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Scientist\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Tennessee",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Tennessee",
        "seq": "59,68"
      }
    ],
    "id": "e53671fb7bb643e7a161cbd7560e68f6",
    "predicate mapping": [
      {
        "label": "garrison",
        "uri": "http://dbpedia.org/ontology/garrison",
        "seq": "47,55",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "known for",
        "uri": "http://dbpedia.org/property/knownFor",
        "seq": "37,46",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "scientist",
        "uri": "http://dbpedia.org/ontology/Scientist",
        "seq": "19,28",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the state of origin of Thomas Pfyl ?",
    "SerialNumber": "2407",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Thomas_Pfyl\u003e \u003chttp://dbpedia.org/ontology/stateOfOrigin\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Thomas Pfyl",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Thomas_Pfyl",
        "seq": "31,42"
      }
    ],
    "id": "524ba88720054e1081b4086303afd9db",
    "predicate mapping": [
      {
        "label": "state of origin",
        "uri": "http://dbpedia.org/ontology/stateOfOrigin",
        "seq": "12,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "401",
    "question": "How many movies have been cinematographed by Jordan Cronenweth?",
    "SerialNumber": "2408",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/property/cinematography\u003e \u003chttp://dbpedia.org/resource/Jordan_Cronenweth\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jordan Cronenweth",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Jordan_Cronenweth",
        "seq": "45,62"
      }
    ],
    "id": "e8f04ab2f1d04379945b8d384d9b4c44",
    "predicate mapping": [
      {
        "label": "cinematographed",
        "uri": "http://dbpedia.org/property/cinematography",
        "seq": "26,41",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "For what is Abhijit Kunte known ?",
    "SerialNumber": "2409",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Abhijit_Kunte\u003e \u003chttp://dbpedia.org/property/knownFor\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Abhijit Kunte",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Abhijit_Kunte",
        "seq": "12,25"
      }
    ],
    "id": "841f3a4e3ade44b1b407f7b1382dc92a",
    "predicate mapping": [
      {
        "label": "known for",
        "uri": "http://dbpedia.org/property/knownFor",
        "seq": "-1,8",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "List the language of Kunsten Museum of moder art Aalborg ?",
    "SerialNumber": "2410",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/KUNSTEN_Museum_of_Modern_Art_Aalborg\u003e \u003chttp://dbpedia.org/ontology/language\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Kunsten Museum of moder art Aalborg",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/KUNSTEN_Museum_of_Modern_Art_Aalborg",
        "seq": "21,56"
      }
    ],
    "id": "7d067f0ccaed45b9b5bcb80f169566cc",
    "predicate mapping": [
      {
        "label": "language",
        "uri": "http://dbpedia.org/ontology/language",
        "seq": "9,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name a military unit whose command structure is United States Department of the Navy and garrison is Arlington County, Virginia?",
    "SerialNumber": "2413",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/commandStructure\u003e \u003chttp://dbpedia.org/resource/United_States_Department_of_the_Navy\u003e . ?uri \u003chttp://dbpedia.org/ontology/garrison\u003e \u003chttp://dbpedia.org/resource/Arlington_County,_Virginia\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MilitaryUnit\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "United States Department of the Navy",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/United_States_Department_of_the_Navy",
        "seq": "48,84"
      },
      {
        "label": "Arlington County, Virginia",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Arlington_County,_Virginia",
        "seq": "101,127"
      }
    ],
    "id": "fc8842a830044f4c9bc255c1f3031969",
    "predicate mapping": [
      {
        "label": "command structure",
        "uri": "http://dbpedia.org/ontology/commandStructure",
        "seq": "27,44",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "garrison",
        "uri": "http://dbpedia.org/ontology/garrison",
        "seq": "89,97",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "military unit",
        "uri": "http://dbpedia.org/ontology/MilitaryUnit",
        "seq": "7,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What are the things built by Eristoff ?",
    "SerialNumber": "2415",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Eristoff\u003e \u003chttp://dbpedia.org/property/manufacturer\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Eristoff",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Eristoff",
        "seq": "29,37"
      }
    ],
    "id": "4dc12f67b9bf40f1ad3ea69a7d6ddc7f",
    "predicate mapping": [
      {
        "label": "built by",
        "uri": "http://dbpedia.org/property/manufacturer",
        "seq": "20,28",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "List the relative of Tim Nanai-Williams ?",
    "SerialNumber": "2416",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Tim_Nanai-Williams\u003e \u003chttp://dbpedia.org/ontology/relative\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Tim Nanai-Williams",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Tim_Nanai-Williams",
        "seq": "21,39"
      }
    ],
    "id": "06661ab5e6804e1c8206072e2bb02395",
    "predicate mapping": [
      {
        "label": "relative",
        "uri": "http://dbpedia.org/ontology/relative",
        "seq": "9,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Where is the station whose sister channel is the Channel 3 in Thailand?",
    "SerialNumber": "2418",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/sisterStations\u003e \u003chttp://dbpedia.org/resource/Channel_3_(Thailand)\u003e . ?x \u003chttp://dbpedia.org/property/city\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionStation\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Channel 3",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Channel_3_(Thailand)",
        "seq": "49,58"
      }
    ],
    "id": "b8b5452850cc482eb87779a8ed2c2159",
    "predicate mapping": [
      {
        "label": "station sister",
        "uri": "http://dbpedia.org/property/sisterStations",
        "seq": "-1,13",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "in",
        "uri": "http://dbpedia.org/property/city",
        "seq": "59,61",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "station",
        "uri": "http://dbpedia.org/ontology/TelevisionStation",
        "seq": "13,20",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "111",
    "question": "Count the  origin of the beverages which have been originated in england /",
    "SerialNumber": "2419",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/origin\u003e \u003chttp://dbpedia.org/resource/England\u003e . ?x \u003chttp://dbpedia.org/property/origin\u003e ?uri }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "england",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/England",
        "seq": "65,72"
      }
    ],
    "id": "9f517b6fe6cf44339df470bcabf4069d",
    "predicate mapping": [
      {
        "label": "origin",
        "uri": "http://dbpedia.org/property/origin",
        "seq": "11,17",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "origin",
        "uri": "http://dbpedia.org/property/origin",
        "seq": "11,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the alma mater of the Marshall Fletcher McCallie and has affiliation with  Vanderbilt University Medical Center ?",
    "SerialNumber": "2422",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Marshall_Fletcher_McCallie\u003e \u003chttp://dbpedia.org/property/almaMater\u003e ?uri. \u003chttp://dbpedia.org/resource/Vanderbilt_University_Medical_Center\u003e \u003chttp://dbpedia.org/property/affiliation\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Marshall Fletcher McCallie",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Marshall_Fletcher_McCallie",
        "seq": "30,56"
      },
      {
        "label": "Vanderbilt University Medical Center",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Vanderbilt_University_Medical_Center",
        "seq": "83,119"
      }
    ],
    "id": "01df09084d764ebd8875ff3b881349f7",
    "predicate mapping": [
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/property/almaMater",
        "seq": "12,22",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "affiliation",
        "uri": "http://dbpedia.org/property/affiliation",
        "seq": "65,76",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "307",
    "question": "What is the river that falls into North Sea and Thames Estuary?",
    "SerialNumber": "2424",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/ontology/riverMouth\u003e \u003chttp://dbpedia.org/resource/North_Sea\u003e . ?uri \u003chttp://dbpedia.org/ontology/riverMouth\u003e \u003chttp://dbpedia.org/resource/Thames_Estuary\u003e . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/River\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "North Sea",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/North_Sea",
        "seq": "34,43"
      },
      {
        "label": "Thames Estuary",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Thames_Estuary",
        "seq": "48,62"
      }
    ],
    "id": "90876c6682394f56ba6183425f3025ba",
    "predicate mapping": [
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/riverMouth",
        "seq": "12,17",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/riverMouth",
        "seq": "12,17",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River",
        "seq": "12,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "Name the university whose teams have been managed by Albertin Montoya?",
    "SerialNumber": "2425",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Albertin_Montoya\u003e \u003chttp://dbpedia.org/property/managerclubs\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/university\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/SportsTeam\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Albertin Montoya",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Albertin_Montoya",
        "seq": "53,69"
      }
    ],
    "id": "9dc93749dd3e4b619cbd8fc34311f6d9",
    "predicate mapping": [
      {
        "label": "managed",
        "uri": "http://dbpedia.org/property/managerclubs",
        "seq": "42,49",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "university",
        "uri": "http://dbpedia.org/ontology/university",
        "seq": "9,19",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/SportsTeam",
        "seq": "26,30",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the newspaper owned by Schibsted and headquartered at Stockholm?",
    "SerialNumber": "2426",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/owners\u003e \u003chttp://dbpedia.org/resource/Schibsted\u003e . ?uri \u003chttp://dbpedia.org/property/headquarters\u003e \u003chttp://dbpedia.org/resource/Stockholm\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Newspaper\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Schibsted",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Schibsted",
        "seq": "28,37"
      },
      {
        "label": "Stockholm",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Stockholm",
        "seq": "59,68"
      }
    ],
    "id": "6db02b173fff4b64bb309fb45500cd93",
    "predicate mapping": [
      {
        "label": "owned",
        "uri": "http://dbpedia.org/property/owners",
        "seq": "19,24",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "headquarter",
        "uri": "http://dbpedia.org/property/headquarters",
        "seq": "42,53",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "newspaper",
        "uri": "http://dbpedia.org/ontology/Newspaper",
        "seq": "9,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "State the religion of the person known for People\u0027s Bank (Sri Lanka) ?",
    "SerialNumber": "2429",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/knownFor\u003e \u003chttp://dbpedia.org/resource/People\u0027s_Bank_(Sri_Lanka)\u003e . ?x \u003chttp://dbpedia.org/ontology/religion\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "People\u0027s Bank (Sri Lanka)",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/People\u0027s_Bank_(Sri_Lanka)",
        "seq": "43,68"
      }
    ],
    "id": "6ddddbe9746248c1ad7bf21a4e745094",
    "predicate mapping": [
      {
        "label": "known for",
        "uri": "http://dbpedia.org/ontology/knownFor",
        "seq": "33,42",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion",
        "seq": "10,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the television show distributed by Broadcast syndication and voiced by Eliza Schneider?",
    "SerialNumber": "2430",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/distributor\u003e \u003chttp://dbpedia.org/resource/Broadcast_syndication\u003e . ?uri \u003chttp://dbpedia.org/property/voices\u003e \u003chttp://dbpedia.org/resource/Eliza_Schneider\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Broadcast syndication",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Broadcast_syndication",
        "seq": "40,61"
      },
      {
        "label": "Eliza Schneider",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Eliza_Schneider",
        "seq": "76,91"
      }
    ],
    "id": "f296e394f71346d8835fe88f4e572782",
    "predicate mapping": [
      {
        "label": "distributed by",
        "uri": "http://dbpedia.org/ontology/distributor",
        "seq": "25,39",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "voiced",
        "uri": "http://dbpedia.org/property/voices",
        "seq": "66,72",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "9,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Where were Justina Machado and John Englehard born?",
    "SerialNumber": "2431",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Justina_Machado\u003e \u003chttp://dbpedia.org/property/birthPlace\u003e ?uri. \u003chttp://dbpedia.org/resource/John_Englehart\u003e \u003chttp://dbpedia.org/ontology/birthPlace\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Justina Machado",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Justina_Machado",
        "seq": "11,26"
      },
      {
        "label": "John Englehard",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/John_Englehart",
        "seq": "31,45"
      }
    ],
    "id": "18b1a0fcbd154906ad63f1310bcb8356",
    "predicate mapping": [
      {
        "label": "born",
        "uri": "http://dbpedia.org/property/birthPlace",
        "seq": "46,50",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "born",
        "uri": "http://dbpedia.org/ontology/birthPlace",
        "seq": "46,50",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who is the successor of Quest Software ?",
    "SerialNumber": "2432",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Quest_Software\u003e \u003chttp://dbpedia.org/property/successor\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Quest Software",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Quest_Software",
        "seq": "24,38"
      }
    ],
    "id": "5a5f08cd19484d219d04ef85d42c4a4f",
    "predicate mapping": [
      {
        "label": "successor",
        "uri": "http://dbpedia.org/property/successor",
        "seq": "11,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which scientist\u0027s academic advisor is Georg Meissner and is known for invention of Anthrax ?",
    "SerialNumber": "2435",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/knownFor\u003e \u003chttp://dbpedia.org/resource/Anthrax\u003e . ?uri \u003chttp://dbpedia.org/property/doctoralAdvisor\u003e \u003chttp://dbpedia.org/resource/Georg_Meissner\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Scientist\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Anthrax",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Anthrax",
        "seq": "83,90"
      },
      {
        "label": "Georg Meissner",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Georg_Meissner",
        "seq": "38,52"
      }
    ],
    "id": "7b37e481b5fe4b1ea46954b65bbc9fc3",
    "predicate mapping": [
      {
        "label": "known for",
        "uri": "http://dbpedia.org/ontology/knownFor",
        "seq": "60,69",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "advisor",
        "uri": "http://dbpedia.org/property/doctoralAdvisor",
        "seq": "27,34",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "scientist",
        "uri": "http://dbpedia.org/ontology/Scientist",
        "seq": "6,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "Who is the developer of the software which distributes Batman: Arkham City Lockdown ?",
    "SerialNumber": "2437",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Batman:_Arkham_City_Lockdown\u003e \u003chttp://dbpedia.org/property/distributor\u003e ?x . ?x \u003chttp://dbpedia.org/property/developer\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Software\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Batman: Arkham City Lockdown",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Batman:_Arkham_City_Lockdown",
        "seq": "55,83"
      }
    ],
    "id": "ec9f7e686ab1438693a7da09f8164304",
    "predicate mapping": [
      {
        "label": "distributes",
        "uri": "http://dbpedia.org/property/distributor",
        "seq": "43,54",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "developer",
        "uri": "http://dbpedia.org/property/developer",
        "seq": "11,20",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "software",
        "uri": "http://dbpedia.org/ontology/Software",
        "seq": "28,36",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "what are some neighboring cities of Pregny Chambsy?",
    "SerialNumber": "2438",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/neighboringMunicipality\u003e \u003chttp://dbpedia.org/resource/Pregny-Chambésy\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Pregny",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Pregny-Chambésy",
        "seq": "36,42"
      }
    ],
    "id": "e0d7814a403041dfbdb60c84e19ff1b6",
    "predicate mapping": [
      {
        "label": "neighboring",
        "uri": "http://dbpedia.org/ontology/neighboringMunicipality",
        "seq": "14,25",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "111",
    "question": "How many honorary title are there of the scientists who has  Australian of the Year award  ?",
    "SerialNumber": "2439",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/award\u003e \u003chttp://dbpedia.org/resource/Australian_of_the_Year\u003e . ?x \u003chttp://dbpedia.org/ontology/award\u003e ?uri }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Australian of the Year",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Australian_of_the_Year",
        "seq": "61,83"
      }
    ],
    "id": "69eda413b32a4ef18311180654f38ad1",
    "predicate mapping": [
      {
        "label": "honorary title",
        "uri": "http://dbpedia.org/ontology/award",
        "seq": "9,23",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "honorary title",
        "uri": "http://dbpedia.org/ontology/award",
        "seq": "9,23",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "406",
    "question": "What is the total number of companies who use a language designed by Bjarne Stroustrup?",
    "SerialNumber": "2440",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/designer\u003e \u003chttp://dbpedia.org/resource/Bjarne_Stroustrup\u003e . ?uri \u003chttp://dbpedia.org/property/programmingLanguage\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Company\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Bjarne Stroustrup",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Bjarne_Stroustrup",
        "seq": "69,86"
      }
    ],
    "id": "959815b6184e4dd9a68135af4125df83",
    "predicate mapping": [
      {
        "label": "designed",
        "uri": "http://dbpedia.org/property/designer",
        "seq": "57,65",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "language",
        "uri": "http://dbpedia.org/property/programmingLanguage",
        "seq": "48,56",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "companies",
        "uri": "http://dbpedia.org/ontology/Company",
        "seq": "28,37",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which job of Irving Chernev is the non-fiction subject of the Thud ?",
    "SerialNumber": "2441",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Irving_Chernev\u003e \u003chttp://dbpedia.org/ontology/occupation\u003e ?uri. \u003chttp://dbpedia.org/resource/Thud!\u003e \u003chttp://dbpedia.org/ontology/nonFictionSubject\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Irving Chernev",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Irving_Chernev",
        "seq": "13,27"
      },
      {
        "label": "Thud ",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Thud!",
        "seq": "62,67"
      }
    ],
    "id": "a5e14b00bb094b6ba270285e1c075055",
    "predicate mapping": [
      {
        "label": "job",
        "uri": "http://dbpedia.org/ontology/occupation",
        "seq": "6,9",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "non-fiction subject",
        "uri": "http://dbpedia.org/ontology/nonFictionSubject",
        "seq": "35,54",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "What are the musicals of the people died in California?",
    "SerialNumber": "2442",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/deathPlace\u003e \u003chttp://dbpedia.org/resource/California\u003e . ?uri \u003chttp://dbpedia.org/property/music\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Musical\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "California",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/California",
        "seq": "44,54"
      }
    ],
    "id": "2ee5f92bf7dd42e6aa5a5c2aa1848abd",
    "predicate mapping": [
      {
        "label": "died in",
        "uri": "http://dbpedia.org/ontology/deathPlace",
        "seq": "36,43",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "music",
        "uri": "http://dbpedia.org/property/music",
        "seq": "13,18",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "musical",
        "uri": "http://dbpedia.org/ontology/Musical",
        "seq": "13,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the workplace of Christopher S. Stewart ?",
    "SerialNumber": "2443",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Christopher_S._Stewart\u003e \u003chttp://dbpedia.org/property/employer\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Christopher S. Stewart",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Christopher_S._Stewart",
        "seq": "25,47"
      }
    ],
    "id": "3b865ce9d2c64aa2bf2eea2036094742",
    "predicate mapping": [
      {
        "label": "workplace",
        "uri": "http://dbpedia.org/property/employer",
        "seq": "12,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What is the political party of the daughter of Jawaharlal Nehru ?",
    "SerialNumber": "2444",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Jawaharlal_Nehru\u003e \u003chttp://dbpedia.org/ontology/child\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/party\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jawaharlal Nehru",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Jawaharlal_Nehru",
        "seq": "47,63"
      }
    ],
    "id": "f7c7d94c2c7a4893a0ac5c5c40b26106",
    "predicate mapping": [
      {
        "label": "daughter",
        "uri": "http://dbpedia.org/ontology/child",
        "seq": "35,43",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "political party",
        "uri": "http://dbpedia.org/ontology/party",
        "seq": "12,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Where was david Scherman trained ?",
    "SerialNumber": "2445",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/David_Scherman\u003e \u003chttp://dbpedia.org/property/training\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "david Scherman",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/David_Scherman",
        "seq": "10,24"
      }
    ],
    "id": "b52d907f0f3444b1b31e1eaadb9012e3",
    "predicate mapping": [
      {
        "label": "trained",
        "uri": "http://dbpedia.org/property/training",
        "seq": "25,32",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "Which units are garrisoned at Arlington County, Virginia?",
    "SerialNumber": "2446",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/garrison\u003e \u003chttp://dbpedia.org/resource/Arlington_County,_Virginia\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Arlington County, Virginia",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Arlington_County,_Virginia",
        "seq": "30,56"
      }
    ],
    "id": "b12bebc48be04ef39ad59257df7b1387",
    "predicate mapping": [
      {
        "label": "garrison",
        "uri": "http://dbpedia.org/ontology/garrison",
        "seq": "16,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What are the mountains in the Sequoia National Park?",
    "SerialNumber": "2447",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/locatedInArea\u003e \u003chttp://dbpedia.org/resource/Sequoia_National_Park\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Mountain\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Sequoia National Park",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Sequoia_National_Park",
        "seq": "30,51"
      }
    ],
    "id": "735485ac406a44709508e55720a723fc",
    "predicate mapping": [
      {
        "label": "Nation",
        "uri": "http://dbpedia.org/ontology/locatedInArea",
        "seq": "38,44",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "mountain",
        "uri": "http://dbpedia.org/ontology/Mountain",
        "seq": "13,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the city of Duwamish River ?",
    "SerialNumber": "2448",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Duwamish_River\u003e \u003chttp://dbpedia.org/ontology/city\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Duwamish River",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Duwamish_River",
        "seq": "17,31"
      }
    ],
    "id": "2ba39b2193c84d1eaafccd6a537a338e",
    "predicate mapping": [
      {
        "label": "city",
        "uri": "http://dbpedia.org/ontology/city",
        "seq": "9,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the administrative headquarters of Pulau Ujong ?",
    "SerialNumber": "2449",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Pulau_Ujong\u003e \u003chttp://dbpedia.org/ontology/capital\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Pulau Ujong",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Pulau_Ujong",
        "seq": "43,54"
      }
    ],
    "id": "a1526eadfd4c4d5d915dee4a3c8c1dd9",
    "predicate mapping": [
      {
        "label": "administrative headquarters",
        "uri": "http://dbpedia.org/ontology/capital",
        "seq": "12,39",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "In which country is Sierra del Merendin?",
    "SerialNumber": "2450",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Sierra_del_Merendón\u003e \u003chttp://dbpedia.org/ontology/country\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Sierra del Merendin",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Sierra_del_Merendón",
        "seq": "20,39"
      }
    ],
    "id": "aaa9856758804b05ae5363e65a3bd2a7",
    "predicate mapping": [
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/country",
        "seq": "9,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What are the other band member of the Bands whose current members is Hynief?",
    "SerialNumber": "2452",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/currentMembers\u003e \u003chttp://dbpedia.org/resource/Hynief\u003e . ?x \u003chttp://dbpedia.org/ontology/bandMember\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Band\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Hynief",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Hynief",
        "seq": "69,75"
      }
    ],
    "id": "c7330887101d408296fa00ddf2262458",
    "predicate mapping": [
      {
        "label": "current members",
        "uri": "http://dbpedia.org/property/currentMembers",
        "seq": "50,65",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "band member",
        "uri": "http://dbpedia.org/ontology/bandMember",
        "seq": "19,30",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "band",
        "uri": "http://dbpedia.org/ontology/Band",
        "seq": "19,23",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who is the vice president of Jared Bernstein ?",
    "SerialNumber": "2453",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Jared_Bernstein\u003e \u003chttp://dbpedia.org/ontology/vicePresident\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jared Bernstein",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Jared_Bernstein",
        "seq": "29,44"
      }
    ],
    "id": "cc5743cc510f4eeb9cfa516a427b3d7c",
    "predicate mapping": [
      {
        "label": "vice president",
        "uri": "http://dbpedia.org/ontology/vicePresident",
        "seq": "11,25",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the birthplace of Ludovic Boi which is also the residence of Fernando Augustin?",
    "SerialNumber": "2456",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Ludovic_Boi\u003e \u003chttp://dbpedia.org/ontology/birthPlace\u003e ?uri. \u003chttp://dbpedia.org/resource/Fernando_Augustin\u003e \u003chttp://dbpedia.org/property/residence\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ludovic Boi",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ludovic_Boi",
        "seq": "26,37"
      },
      {
        "label": "Fernando Augustin",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Fernando_Augustin",
        "seq": "69,86"
      }
    ],
    "id": "82bfaafaf5d5457190f547f5a8690190",
    "predicate mapping": [
      {
        "label": "birthplace",
        "uri": "http://dbpedia.org/ontology/birthPlace",
        "seq": "12,22",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "residence",
        "uri": "http://dbpedia.org/property/residence",
        "seq": "56,65",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "111",
    "question": "How many non-fiction subject are there of the books whose one of the non-fiction subject is Ankh-Morpork City Watch ?",
    "SerialNumber": "2457",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/nonFictionSubject\u003e \u003chttp://dbpedia.org/resource/Ankh-Morpork_City_Watch\u003e . ?x \u003chttp://dbpedia.org/ontology/nonFictionSubject\u003e ?uri }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ankh-Morpork City Watch",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Ankh-Morpork_City_Watch",
        "seq": "92,115"
      }
    ],
    "id": "110683d750084bc587eb5dd36775e6ef",
    "predicate mapping": [
      {
        "label": "non-fiction subject",
        "uri": "http://dbpedia.org/ontology/nonFictionSubject",
        "seq": "9,28",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "non-fiction subject",
        "uri": "http://dbpedia.org/ontology/nonFictionSubject",
        "seq": "9,28",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "Name the show whose theme composing band previously also had Bryan Mantia?",
    "SerialNumber": "2458",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/formerBandMember\u003e \u003chttp://dbpedia.org/resource/Bryan_Mantia\u003e . ?uri \u003chttp://dbpedia.org/property/themeMusicComposer\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Bryan Mantia",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Bryan_Mantia",
        "seq": "61,73"
      }
    ],
    "id": "c8e8897629e34648b1aeb77826873038",
    "predicate mapping": [
      {
        "label": "band",
        "uri": "http://dbpedia.org/ontology/formerBandMember",
        "seq": "36,40",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "composing",
        "uri": "http://dbpedia.org/property/themeMusicComposer",
        "seq": "26,35",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "9,13",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "311",
    "question": "List all the settlements which has a part named Seguin,Texas ?",
    "SerialNumber": "2460",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/part\u003e \u003chttp://dbpedia.org/resource/Seguin,_Texas\u003e . ?x \u003chttp://dbpedia.org/ontology/part\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Settlement\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Seguin",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Seguin,_Texas",
        "seq": "48,54"
      }
    ],
    "id": "19f47e5edc444d50a2b75d0cffbf0bcb",
    "predicate mapping": [
      {
        "label": "part",
        "uri": "http://dbpedia.org/ontology/part",
        "seq": "37,41",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "part",
        "uri": "http://dbpedia.org/ontology/part",
        "seq": "37,41",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "settlement",
        "uri": "http://dbpedia.org/ontology/Settlement",
        "seq": "13,23",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "311",
    "question": "List all the wine regions of the grapes whose one of the wine region is Mississippi ?",
    "SerialNumber": "2461",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/wineRegion\u003e \u003chttp://dbpedia.org/resource/Mississippi\u003e . ?x \u003chttp://dbpedia.org/ontology/wineRegion\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Grape\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Mississippi",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Mississippi",
        "seq": "72,83"
      }
    ],
    "id": "1655c6bb438f414f8b6a6c12f3470473",
    "predicate mapping": [
      {
        "label": "wine region",
        "uri": "http://dbpedia.org/ontology/wineRegion",
        "seq": "13,24",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "wine region",
        "uri": "http://dbpedia.org/ontology/wineRegion",
        "seq": "13,24",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "grape",
        "uri": "http://dbpedia.org/ontology/Grape",
        "seq": "33,38",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "Name the university whose affiliations\u0027s foundation is in Washington, D.C.?",
    "SerialNumber": "2463",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/foundation\u003e \u003chttp://dbpedia.org/resource/Washington,_D.C.\u003e . ?uri \u003chttp://dbpedia.org/property/affiliations\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/University\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Washington, D.C.",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Washington,_D.C.",
        "seq": "58,74"
      }
    ],
    "id": "fa48e10d45b245ad97a7c3e1691f2f85",
    "predicate mapping": [
      {
        "label": "foundation",
        "uri": "http://dbpedia.org/property/foundation",
        "seq": "41,51",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "affiliations",
        "uri": "http://dbpedia.org/property/affiliations",
        "seq": "26,38",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "university",
        "uri": "http://dbpedia.org/ontology/University",
        "seq": "9,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "7",
    "question": "Who has Kelly Osbourne and Ozzy Osbourne as relatives?",
    "SerialNumber": "2467",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/ontology/relative\u003e \u003chttp://dbpedia.org/resource/Kelly_Osbourne\u003e . ?uri \u003chttp://dbpedia.org/ontology/relative\u003e \u003chttp://dbpedia.org/resource/Ozzy_Osbourne\u003e . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Kelly Osbourne",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Kelly_Osbourne",
        "seq": "8,22"
      },
      {
        "label": "Ozzy Osbourne",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ozzy_Osbourne",
        "seq": "27,40"
      }
    ],
    "id": "c29965dde83947ffa5b1a736dd8ea8bf",
    "predicate mapping": [
      {
        "label": "relative",
        "uri": "http://dbpedia.org/ontology/relative",
        "seq": "44,52",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "relative",
        "uri": "http://dbpedia.org/ontology/relative",
        "seq": "44,52",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who were the founders of Sea Gayle Music?",
    "SerialNumber": "2468",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Sea_Gayle_Music\u003e \u003chttp://dbpedia.org/property/founder\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Sea Gayle Music",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Sea_Gayle_Music",
        "seq": "25,40"
      }
    ],
    "id": "ee5bcfdd212b4f548f1556e3f2d442a8",
    "predicate mapping": [
      {
        "label": "founders",
        "uri": "http://dbpedia.org/property/founder",
        "seq": "13,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the president who has relations with Clinton family and had a lieutenant named Winston Bryant?",
    "SerialNumber": "2470",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/relation\u003e \u003chttp://dbpedia.org/resource/Clinton_family\u003e . ?uri \u003chttp://dbpedia.org/ontology/lieutenant\u003e \u003chttp://dbpedia.org/resource/Winston_Bryant\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/President\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Clinton family",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Clinton_family",
        "seq": "42,56"
      },
      {
        "label": "Winston Bryant",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Winston_Bryant",
        "seq": "84,98"
      }
    ],
    "id": "90a0886308b64939add943ce02984650",
    "predicate mapping": [
      {
        "label": "relation",
        "uri": "http://dbpedia.org/ontology/relation",
        "seq": "27,35",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "lieutenant",
        "uri": "http://dbpedia.org/ontology/lieutenant",
        "seq": "67,77",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "president",
        "uri": "http://dbpedia.org/ontology/President",
        "seq": "9,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "Who is the manager of the club whose homeground is the riverside stadium?",
    "SerialNumber": "2474",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/ground\u003e \u003chttp://dbpedia.org/resource/Riverside_Stadium\u003e . ?uri \u003chttp://dbpedia.org/ontology/managerClub\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/SportsManager\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "riverside stadium",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Riverside_Stadium",
        "seq": "55,72"
      }
    ],
    "id": "9bc2338edfc24fc7a0d8d7cfe88d0ccd",
    "predicate mapping": [
      {
        "label": "ground",
        "uri": "http://dbpedia.org/property/ground",
        "seq": "41,47",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "manager club",
        "uri": "http://dbpedia.org/ontology/managerClub",
        "seq": "-1,11",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "manager",
        "uri": "http://dbpedia.org/ontology/SportsManager",
        "seq": "11,18",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "307",
    "question": "What are the organisation founded in Texas and Dallas?",
    "SerialNumber": "2475",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/ontology/foundationPlace\u003e \u003chttp://dbpedia.org/resource/Texas\u003e . ?uri \u003chttp://dbpedia.org/ontology/foundationPlace\u003e \u003chttp://dbpedia.org/resource/Dallas\u003e . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Organisation\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Texas",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Texas",
        "seq": "37,42"
      },
      {
        "label": "Dallas",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Dallas",
        "seq": "47,53"
      }
    ],
    "id": "abe825df40f846beb07f2ad29ebe9e8a",
    "predicate mapping": [
      {
        "label": "founded",
        "uri": "http://dbpedia.org/ontology/foundationPlace",
        "seq": "26,33",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "founded",
        "uri": "http://dbpedia.org/ontology/foundationPlace",
        "seq": "26,33",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "organisation",
        "uri": "http://dbpedia.org/ontology/Organisation",
        "seq": "13,25",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "List the members of Skull Gang?",
    "SerialNumber": "2476",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Skull_Gang\u003e \u003chttp://dbpedia.org/ontology/bandMember\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Skull Gang",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Skull_Gang",
        "seq": "20,30"
      }
    ],
    "id": "3893e0c34af5499f992e3e068e2b4394",
    "predicate mapping": [
      {
        "label": "members",
        "uri": "http://dbpedia.org/ontology/bandMember",
        "seq": "9,16",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "108",
    "question": "Count the movies directed by Tim Burton and music composer Danny Elfman ?",
    "SerialNumber": "2478",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/property/music\u003e \u003chttp://dbpedia.org/resource/Danny_Elfman\u003e . ?uri \u003chttp://dbpedia.org/property/director\u003e \u003chttp://dbpedia.org/resource/Tim_Burton\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Danny Elfman",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Danny_Elfman",
        "seq": "59,71"
      },
      {
        "label": "Tim Burton",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Tim_Burton",
        "seq": "29,39"
      }
    ],
    "id": "94109f8a38244b3d8a1dc4cfb6ba55b2",
    "predicate mapping": [
      {
        "label": "music",
        "uri": "http://dbpedia.org/property/music",
        "seq": "44,49",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "directed",
        "uri": "http://dbpedia.org/property/director",
        "seq": "17,25",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "What are the american football players whose former team\u0027s coach is Jason Maas?",
    "SerialNumber": "2479",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/coach\u003e \u003chttp://dbpedia.org/resource/Jason_Maas\u003e . ?uri \u003chttp://dbpedia.org/ontology/formerTeam\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/AmericanFootballPlayer\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jason Maas",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Jason_Maas",
        "seq": "68,78"
      }
    ],
    "id": "b6c11bc5758b40768cc7bd60cbf09fd3",
    "predicate mapping": [
      {
        "label": "coach",
        "uri": "http://dbpedia.org/property/coach",
        "seq": "59,64",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "former team",
        "uri": "http://dbpedia.org/ontology/formerTeam",
        "seq": "45,56",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "american football player",
        "uri": "http://dbpedia.org/ontology/AmericanFootballPlayer",
        "seq": "13,37",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the appointer of William Clark ?",
    "SerialNumber": "2480",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/William_Clark\u003e \u003chttp://dbpedia.org/property/appointer\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "William Clark",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/William_Clark",
        "seq": "22,35"
      }
    ],
    "id": "bae14da898b343a4a0b319d75b992c2c",
    "predicate mapping": [
      {
        "label": "appointer",
        "uri": "http://dbpedia.org/property/appointer",
        "seq": "9,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What is the city  of the television station whose affiliations is LATV?",
    "SerialNumber": "2481",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/affiliations\u003e \u003chttp://dbpedia.org/resource/LATV\u003e . ?x \u003chttp://dbpedia.org/property/city\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionStation\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "LATV",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/LATV",
        "seq": "66,70"
      }
    ],
    "id": "660aad2b85ce42fdbf4dd20e86dee609",
    "predicate mapping": [
      {
        "label": "affiliations",
        "uri": "http://dbpedia.org/property/affiliations",
        "seq": "50,62",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "city",
        "uri": "http://dbpedia.org/property/city",
        "seq": "12,16",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "television station",
        "uri": "http://dbpedia.org/ontology/TelevisionStation",
        "seq": "25,43",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "Foxy Brown was associated with which band?",
    "SerialNumber": "2485",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/associatedBand\u003e \u003chttp://dbpedia.org/resource/Foxy_Brown_(rapper)\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Foxy Brown",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Foxy_Brown_(rapper)",
        "seq": "0,10"
      }
    ],
    "id": "c838dc07c8ba4000a51426ddb603d08d",
    "predicate mapping": [
      {
        "label": "associated band",
        "uri": "http://dbpedia.org/ontology/associatedBand",
        "seq": "-1,14",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "7",
    "question": "Whose military units are VMF-218 and VMF-155?",
    "SerialNumber": "2486",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/ontology/militaryUnit\u003e \u003chttp://dbpedia.org/resource/VMF-218\u003e . ?uri \u003chttp://dbpedia.org/ontology/militaryUnit\u003e \u003chttp://dbpedia.org/resource/VMF-155\u003e . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "VMF-218",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/VMF-218",
        "seq": "25,32"
      },
      {
        "label": "VMF-155",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/VMF-155",
        "seq": "37,44"
      }
    ],
    "id": "6fb72d6e48a849faa3d1dd3d45300bf7",
    "predicate mapping": [
      {
        "label": "military unit",
        "uri": "http://dbpedia.org/ontology/militaryUnit",
        "seq": "6,19",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "military unit",
        "uri": "http://dbpedia.org/ontology/militaryUnit",
        "seq": "6,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the team of Michael springer ?",
    "SerialNumber": "2487",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Michael_Springer\u003e \u003chttp://dbpedia.org/property/team\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Michael springer",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Michael_Springer",
        "seq": "17,33"
      }
    ],
    "id": "7d875a1bbc994ad68254365c69d782e6",
    "predicate mapping": [
      {
        "label": "team",
        "uri": "http://dbpedia.org/property/team",
        "seq": "9,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "102",
    "question": "How many non fiction topics does Thud! deals with?",
    "SerialNumber": "2488",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { \u003chttp://dbpedia.org/resource/Thud!\u003e \u003chttp://dbpedia.org/ontology/nonFictionSubject\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Thud!",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Thud!",
        "seq": "33,38"
      }
    ],
    "id": "4a08674a7ddd496fbbc5ad26b5aed56d",
    "predicate mapping": [
      {
        "label": "fiction",
        "uri": "http://dbpedia.org/ontology/nonFictionSubject",
        "seq": "13,20",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Is Steve Nash the chairman of Vancouver Whitecaps FC?",
    "SerialNumber": "2489",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Vancouver_Whitecaps_FC\u003e \u003chttp://dbpedia.org/property/chairman\u003e \u003chttp://dbpedia.org/resource/Steve_Nash\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Vancouver Whitecaps FC",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Vancouver_Whitecaps_FC",
        "seq": "30,52"
      },
      {
        "label": "Steve Nash",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Steve_Nash",
        "seq": "3,13"
      }
    ],
    "id": "9787a89dac1648ee8bd80857d7c4060c",
    "predicate mapping": [
      {
        "label": "chairman",
        "uri": "http://dbpedia.org/property/chairman",
        "seq": "18,26",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What is the origin of the musical artist of A Todo Romantic Style ?",
    "SerialNumber": "2490",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/A_Todo_Romantic_Style\u003e \u003chttp://dbpedia.org/property/artist\u003e ?x . ?x \u003chttp://dbpedia.org/property/origin\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "A Todo Romantic Style",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/A_Todo_Romantic_Style",
        "seq": "44,65"
      }
    ],
    "id": "62eee24679714722a6a54a0063088a1d",
    "predicate mapping": [
      {
        "label": "artist",
        "uri": "http://dbpedia.org/property/artist",
        "seq": "34,40",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "origin",
        "uri": "http://dbpedia.org/property/origin",
        "seq": "12,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "11",
    "question": "Name all the products produced by the producer of United States dollar ?",
    "SerialNumber": "2492",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/product\u003e \u003chttp://dbpedia.org/resource/United_States_dollar\u003e . ?x \u003chttp://dbpedia.org/ontology/product\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "United States dollar",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/United_States_dollar",
        "seq": "50,70"
      }
    ],
    "id": "04206d63a4654e48a0f4514cbccba82f",
    "predicate mapping": [
      {
        "label": "product",
        "uri": "http://dbpedia.org/ontology/product",
        "seq": "13,20",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "product",
        "uri": "http://dbpedia.org/ontology/product",
        "seq": "13,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What is the affiliation of the hospital where Alfred Blalock works?",
    "SerialNumber": "2493",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Alfred_Blalock\u003e \u003chttp://dbpedia.org/property/workInstitutions\u003e ?x . ?x \u003chttp://dbpedia.org/property/affiliation\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Alfred Blalock",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Alfred_Blalock",
        "seq": "46,60"
      }
    ],
    "id": "a4cb9ae6b84c4fcd846991699d10ed7f",
    "predicate mapping": [
      {
        "label": "works",
        "uri": "http://dbpedia.org/property/workInstitutions",
        "seq": "61,66",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "affiliation",
        "uri": "http://dbpedia.org/property/affiliation",
        "seq": "12,23",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Is the national anthem of Mauritius motherland?",
    "SerialNumber": "2494",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Mauritius\u003e \u003chttp://dbpedia.org/ontology/anthem\u003e \u003chttp://dbpedia.org/resource/Motherland_(anthem)\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Mauritius",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Mauritius",
        "seq": "26,35"
      },
      {
        "label": "motherland",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Motherland_(anthem)",
        "seq": "36,46"
      }
    ],
    "id": "873bd1108ced400a95d4ad3f59959e8f",
    "predicate mapping": [
      {
        "label": "national anthem",
        "uri": "http://dbpedia.org/ontology/anthem",
        "seq": "7,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What software is developed by GNOWSYS and is licensed by Frontaccounting?",
    "SerialNumber": "2496",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Frontaccounting\u003e \u003chttp://dbpedia.org/ontology/license\u003e ?uri. \u003chttp://dbpedia.org/resource/GNOWSYS\u003e \u003chttp://dbpedia.org/ontology/developer\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Frontaccounting",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Frontaccounting",
        "seq": "57,72"
      },
      {
        "label": "GNOWSYS",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/GNOWSYS",
        "seq": "30,37"
      }
    ],
    "id": "f05d4dee977d4a7292b08b8fa40d165e",
    "predicate mapping": [
      {
        "label": "license",
        "uri": "http://dbpedia.org/ontology/license",
        "seq": "45,52",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "developed by",
        "uri": "http://dbpedia.org/ontology/developer",
        "seq": "17,29",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Who was the president at the time when both Carl Stokes and Joseph Stiglitz held a position in US political framework?",
    "SerialNumber": "2497",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Carl_Stokes\u003e \u003chttp://dbpedia.org/property/president\u003e ?uri. \u003chttp://dbpedia.org/resource/Joseph_Stiglitz\u003e \u003chttp://dbpedia.org/property/president\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Carl Stokes",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Carl_Stokes",
        "seq": "44,55"
      },
      {
        "label": "Joseph Stiglitz",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Joseph_Stiglitz",
        "seq": "60,75"
      }
    ],
    "id": "b9146fbecbc9471a828508410f06ee30",
    "predicate mapping": [
      {
        "label": "president",
        "uri": "http://dbpedia.org/property/president",
        "seq": "12,21",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "president",
        "uri": "http://dbpedia.org/property/president",
        "seq": "12,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "What is the municipality of the Homestead Grays Bridge and Roberto Clemente Bridge?",
    "SerialNumber": "2498",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Homestead_Grays_Bridge\u003e \u003chttp://dbpedia.org/ontology/municipality\u003e ?uri. \u003chttp://dbpedia.org/resource/Roberto_Clemente_Bridge\u003e \u003chttp://dbpedia.org/ontology/municipality\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Homestead Grays Bridge",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Homestead_Grays_Bridge",
        "seq": "32,54"
      },
      {
        "label": "Roberto Clemente Bridge",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Roberto_Clemente_Bridge",
        "seq": "59,82"
      }
    ],
    "id": "8827a33491654d18998e17489e221cac",
    "predicate mapping": [
      {
        "label": "municipality",
        "uri": "http://dbpedia.org/ontology/municipality",
        "seq": "12,24",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "municipality",
        "uri": "http://dbpedia.org/ontology/municipality",
        "seq": "12,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the language of I Love How You Love Me ?",
    "SerialNumber": "2500",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/I_Love_How_You_Love_Me\u003e \u003chttp://dbpedia.org/property/language\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "I Love How You Love Me",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/I_Love_How_You_Love_Me",
        "seq": "21,43"
      }
    ],
    "id": "5d35202b7de94c2aa0a76efeb59ec38d",
    "predicate mapping": [
      {
        "label": "language",
        "uri": "http://dbpedia.org/property/language",
        "seq": "9,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "405",
    "question": "How many teams have someone playing at the defenceman position?",
    "SerialNumber": "2502",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/position\u003e \u003chttp://dbpedia.org/resource/Defenceman\u003e . ?x \u003chttp://dbpedia.org/ontology/team\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/SportsTeam\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "defenceman",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Defenceman",
        "seq": "43,53"
      }
    ],
    "id": "87139c01ff3a485e8daa2d80a4a8365f",
    "predicate mapping": [
      {
        "label": "position",
        "uri": "http://dbpedia.org/property/position",
        "seq": "54,62",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/team",
        "seq": "9,13",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/SportsTeam",
        "seq": "9,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What are the awards won by the person who wrote the screen play for Lost in Rio ?",
    "SerialNumber": "2505",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/OSS_117:_Lost_in_Rio\u003e \u003chttp://dbpedia.org/property/screenplay\u003e ?x . ?x \u003chttp://dbpedia.org/property/awards\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Lost in Rio",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/OSS_117:_Lost_in_Rio",
        "seq": "76,79"
      }
    ],
    "id": "fdd2ce7fef37417499ab18df58b1e86a",
    "predicate mapping": [
      {
        "label": "screen play",
        "uri": "http://dbpedia.org/property/screenplay",
        "seq": "52,63",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards",
        "seq": "13,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "List the main ingredient of Pizza-ghetti ?",
    "SerialNumber": "2506",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Pizza-ghetti\u003e \u003chttp://dbpedia.org/property/mainIngredient\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Pizza-ghetti",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Pizza-ghetti",
        "seq": "28,40"
      }
    ],
    "id": "e4e94532543f4998a1a6bd210e7ba091",
    "predicate mapping": [
      {
        "label": "main ingredient",
        "uri": "http://dbpedia.org/property/mainIngredient",
        "seq": "9,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the governing body of Fort Monroe ?",
    "SerialNumber": "2507",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Fort_Monroe\u003e \u003chttp://dbpedia.org/property/governingBody\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Fort Monroe",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Fort_Monroe",
        "seq": "30,41"
      }
    ],
    "id": "e9551dcd2cd543ddb53914df27958278",
    "predicate mapping": [
      {
        "label": "governing body",
        "uri": "http://dbpedia.org/property/governingBody",
        "seq": "12,26",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Did Annie Leibovitz do the cover of The Road Ahead?",
    "SerialNumber": "2509",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/The_Road_Ahead_(Bill_Gates_book)\u003e \u003chttp://dbpedia.org/ontology/coverArtist\u003e \u003chttp://dbpedia.org/resource/Annie_Leibovitz\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "The Road Ahead",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/The_Road_Ahead_(Bill_Gates_book)",
        "seq": "36,50"
      },
      {
        "label": "Annie Leibovitz",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Annie_Leibovitz",
        "seq": "4,19"
      }
    ],
    "id": "f3e6a145912e4850b3f93dbc9342c2b0",
    "predicate mapping": [
      {
        "label": "cover",
        "uri": "http://dbpedia.org/ontology/coverArtist",
        "seq": "27,32",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the stylistic origin of Wizard rock ?",
    "SerialNumber": "2510",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Wizard_rock\u003e \u003chttp://dbpedia.org/ontology/stylisticOrigin\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Wizard rock",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Wizard_rock",
        "seq": "32,43"
      }
    ],
    "id": "d4dd2c6ad55449e2974b79ecbbf14f2c",
    "predicate mapping": [
      {
        "label": "stylistic origin",
        "uri": "http://dbpedia.org/ontology/stylisticOrigin",
        "seq": "12,28",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "111",
    "question": "Count the  area of the radio stations whose serves in South Carolina ?",
    "SerialNumber": "2511",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/area\u003e \u003chttp://dbpedia.org/resource/South_Carolina\u003e . ?x \u003chttp://dbpedia.org/property/area\u003e ?uri }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "South Carolina",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/South_Carolina",
        "seq": "54,68"
      }
    ],
    "id": "53234a36b1e64f05834fd09948fa22bc",
    "predicate mapping": [
      {
        "label": "area",
        "uri": "http://dbpedia.org/property/area",
        "seq": "11,15",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "area",
        "uri": "http://dbpedia.org/property/area",
        "seq": "11,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "7",
    "question": "Who  has these major shrines  : Emmitsburg, Maryland and Shrine of St. Elizabeth Ann Bayley Seton?",
    "SerialNumber": "2512",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/ontology/majorShrine\u003e \u003chttp://dbpedia.org/resource/Emmitsburg,_Maryland\u003e . ?uri \u003chttp://dbpedia.org/ontology/majorShrine\u003e \u003chttp://dbpedia.org/resource/Shrine_of_St._Elizabeth_Ann_Bayley_Seton\u003e . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Emmitsburg, Maryland",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Emmitsburg,_Maryland",
        "seq": "32,52"
      },
      {
        "label": "Shrine of St. Elizabeth Ann Bayley Seton",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Shrine_of_St._Elizabeth_Ann_Bayley_Seton",
        "seq": "57,97"
      }
    ],
    "id": "444fa4b359354a5ea47e8d33ef5d0d05",
    "predicate mapping": [
      {
        "label": "major shrine",
        "uri": "http://dbpedia.org/ontology/majorShrine",
        "seq": "15,27",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "major shrine",
        "uri": "http://dbpedia.org/ontology/majorShrine",
        "seq": "15,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the constituency of Santo Versace?",
    "SerialNumber": "2514",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Santo_Versace\u003e \u003chttp://dbpedia.org/property/constituency\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Santo Versace",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Santo_Versace",
        "seq": "28,41"
      }
    ],
    "id": "9ad5c616c0cd4c3b93ceb93ad5150b11",
    "predicate mapping": [
      {
        "label": "constituency",
        "uri": "http://dbpedia.org/property/constituency",
        "seq": "12,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What is the television show whose developer is J. Michael Straczynski?",
    "SerialNumber": "2515",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/developer\u003e \u003chttp://dbpedia.org/resource/J._Michael_Straczynski\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "J. Michael Straczynski",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/J._Michael_Straczynski",
        "seq": "47,69"
      }
    ],
    "id": "7cb26f57f9304355832fe7c4e7d30a8d",
    "predicate mapping": [
      {
        "label": "developer",
        "uri": "http://dbpedia.org/ontology/developer",
        "seq": "34,43",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "12,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Name the person who died in Fair Lane ?",
    "SerialNumber": "2517",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/deathPlace\u003e \u003chttp://dbpedia.org/resource/Fair_Lane\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Fair Lane",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Fair_Lane",
        "seq": "28,37"
      }
    ],
    "id": "eae36241b9974a45a5febf554a4aac80",
    "predicate mapping": [
      {
        "label": "died in",
        "uri": "http://dbpedia.org/property/deathPlace",
        "seq": "20,27",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/Person",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "List the import people of Maryland Jockey Club ?",
    "SerialNumber": "2519",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Maryland_Jockey_Club\u003e \u003chttp://dbpedia.org/property/keyPeople\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Maryland Jockey Club",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Maryland_Jockey_Club",
        "seq": "26,46"
      }
    ],
    "id": "d3075ce3184440eaaa8b1f8728a78053",
    "predicate mapping": [
      {
        "label": "people",
        "uri": "http://dbpedia.org/property/keyPeople",
        "seq": "16,22",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "From what american football teams did Carlos Emmons play?",
    "SerialNumber": "2520",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Carlos_Emmons_(American_football)\u003e \u003chttp://dbpedia.org/ontology/formerTeam\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Carlos Emmons",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Carlos_Emmons_(American_football)",
        "seq": "38,51"
      }
    ],
    "id": "8d0f6e4862cc499e909b0bc805585305",
    "predicate mapping": [
      {
        "label": "teams",
        "uri": "http://dbpedia.org/ontology/formerTeam",
        "seq": "28,33",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the TV show whose company is Playtone and written by Graham Yost?",
    "SerialNumber": "2521",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/company\u003e \u003chttp://dbpedia.org/resource/Playtone\u003e . ?uri \u003chttp://dbpedia.org/property/writer\u003e \u003chttp://dbpedia.org/resource/Graham_Yost\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Playtone",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Playtone",
        "seq": "34,42"
      },
      {
        "label": "Graham Yost",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Graham_Yost",
        "seq": "58,69"
      }
    ],
    "id": "bb91e0c70abe4131a829b7d72b517d80",
    "predicate mapping": [
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/company",
        "seq": "23,30",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "written by",
        "uri": "http://dbpedia.org/property/writer",
        "seq": "47,57",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "12,16",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Who is the person whose alma mater is Harvard-Westlake School?",
    "SerialNumber": "2523",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/almaMater\u003e \u003chttp://dbpedia.org/resource/Harvard-Westlake_School\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Harvard-Westlake School",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Harvard-Westlake_School",
        "seq": "38,61"
      }
    ],
    "id": "8db8117a78a84ce68ab1c0b38dd505fe",
    "predicate mapping": [
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/ontology/almaMater",
        "seq": "24,34",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/Person",
        "seq": "11,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the homeport of INS Viraat (R22) ?",
    "SerialNumber": "2527",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/INS_Viraat_(R22)\u003e \u003chttp://dbpedia.org/ontology/homeport\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "INS Viraat (R22)",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/INS_Viraat_(R22)",
        "seq": "24,40"
      }
    ],
    "id": "86be3981c7d04ea6aa8aec6949f00bc4",
    "predicate mapping": [
      {
        "label": "homeport",
        "uri": "http://dbpedia.org/ontology/homeport",
        "seq": "12,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "Count the different places where the people died, who were born in England?",
    "SerialNumber": "2529",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/placeOfBirth\u003e \u003chttp://dbpedia.org/resource/England\u003e . ?x \u003chttp://dbpedia.org/property/placeOfDeath\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "England",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/England",
        "seq": "67,74"
      }
    ],
    "id": "356e419a3c3947e692e81dbbf4e09a69",
    "predicate mapping": [
      {
        "label": "places",
        "uri": "http://dbpedia.org/property/placeOfBirth",
        "seq": "20,26",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "places",
        "uri": "http://dbpedia.org/property/placeOfDeath",
        "seq": "20,26",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "What is the name of the television show whose company is Paramount Television and theme music composer is Gary Portnoy?",
    "SerialNumber": "2532",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/company\u003e \u003chttp://dbpedia.org/resource/Paramount_Television\u003e . ?uri \u003chttp://dbpedia.org/property/themeMusicComposer\u003e \u003chttp://dbpedia.org/resource/Gary_Portnoy\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Paramount Television",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Paramount_Television",
        "seq": "57,77"
      },
      {
        "label": "Gary Portnoy",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Gary_Portnoy",
        "seq": "106,118"
      }
    ],
    "id": "4e7b8e865254408aa15a2e4010eda993",
    "predicate mapping": [
      {
        "label": "company",
        "uri": "http://dbpedia.org/property/company",
        "seq": "46,53",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "theme music composer",
        "uri": "http://dbpedia.org/property/themeMusicComposer",
        "seq": "82,102",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "24,39",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What is the territory of the conflict whose commander is Feng Zicai?",
    "SerialNumber": "2534",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/commander\u003e \u003chttp://dbpedia.org/resource/Feng_Zicai\u003e . ?x \u003chttp://dbpedia.org/ontology/territory\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MilitaryConflict\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Feng Zicai",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Feng_Zicai",
        "seq": "57,67"
      }
    ],
    "id": "f6130d29a11e4614958ebca1871f33f7",
    "predicate mapping": [
      {
        "label": "commander",
        "uri": "http://dbpedia.org/ontology/commander",
        "seq": "44,53",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "territory",
        "uri": "http://dbpedia.org/ontology/territory",
        "seq": "12,21",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "conflict",
        "uri": "http://dbpedia.org/ontology/MilitaryConflict",
        "seq": "29,37",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Who influenced the author of The Shooting of Dan McGrew ?",
    "SerialNumber": "2538",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/The_Shooting_of_Dan_McGrew_(1924_film)\u003e \u003chttp://dbpedia.org/ontology/writer\u003e ?x . ?x \u003chttp://dbpedia.org/property/influences\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "The Shooting of Dan McGrew",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Shooting_of_Dan_McGrew_(1924_film)",
        "seq": "29,55"
      }
    ],
    "id": "6a768d256a514c93b3a1e2afa6908be3",
    "predicate mapping": [
      {
        "label": "author",
        "uri": "http://dbpedia.org/ontology/writer",
        "seq": "19,25",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "influenced",
        "uri": "http://dbpedia.org/property/influences",
        "seq": "4,14",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What is the parent company of the airline whose hub is in Detroit?",
    "SerialNumber": "2540",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/hubs\u003e \u003chttp://dbpedia.org/resource/Detroit\u003e . ?x \u003chttp://dbpedia.org/ontology/parentCompany\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Airline\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Detroit",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Detroit",
        "seq": "58,65"
      }
    ],
    "id": "578cf8ec42c6409aaa3c25d463a0c4e1",
    "predicate mapping": [
      {
        "label": "hub",
        "uri": "http://dbpedia.org/property/hubs",
        "seq": "48,51",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "parent company",
        "uri": "http://dbpedia.org/ontology/parentCompany",
        "seq": "12,26",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "airline",
        "uri": "http://dbpedia.org/ontology/Airline",
        "seq": "34,41",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "For which band did Dave Hollister perform in the past?",
    "SerialNumber": "2541",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/pastMembers\u003e \u003chttp://dbpedia.org/resource/Dave_Hollister\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Dave Hollister",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Dave_Hollister",
        "seq": "19,33"
      }
    ],
    "id": "1d30861aa35d4f9b8ece033370c4e15c",
    "predicate mapping": [
      {
        "label": "past",
        "uri": "http://dbpedia.org/property/pastMembers",
        "seq": "49,53",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the television show whose voice is given by  April Stewart and theme music composer is Primus (band)?",
    "SerialNumber": "2543",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/voices\u003e \u003chttp://dbpedia.org/resource/April_Stewart\u003e . ?uri \u003chttp://dbpedia.org/property/themeMusicComposer\u003e \u003chttp://dbpedia.org/resource/Primus_(band)\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "April Stewart",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/April_Stewart",
        "seq": "50,63"
      },
      {
        "label": "Primus (band)",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Primus_(band)",
        "seq": "92,105"
      }
    ],
    "id": "175487b495244a41974ebc41170631a9",
    "predicate mapping": [
      {
        "label": "voice",
        "uri": "http://dbpedia.org/property/voices",
        "seq": "31,36",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "theme music composer",
        "uri": "http://dbpedia.org/property/themeMusicComposer",
        "seq": "68,88",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "9,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Name the actor of Soylent Green to which Lydia Clarke is married ?",
    "SerialNumber": "2549",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Lydia_Clarke\u003e \u003chttp://dbpedia.org/property/spouse\u003e ?uri. \u003chttp://dbpedia.org/resource/Soylent_Green\u003e \u003chttp://dbpedia.org/ontology/starring\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Lydia Clarke",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Lydia_Clarke",
        "seq": "41,53"
      },
      {
        "label": "Soylent Green",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Soylent_Green",
        "seq": "18,31"
      }
    ],
    "id": "94ad1de3618a4ae29fd2fa2ac111f8a0",
    "predicate mapping": [
      {
        "label": "married",
        "uri": "http://dbpedia.org/property/spouse",
        "seq": "57,64",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "actor",
        "uri": "http://dbpedia.org/ontology/starring",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Name the artist who made Dream Dancing and is often associated with Joe Pass?",
    "SerialNumber": "2550",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Joe_Pass\u003e \u003chttp://dbpedia.org/ontology/associatedBand\u003e ?uri. \u003chttp://dbpedia.org/resource/Dream_Dancing_(album)\u003e \u003chttp://dbpedia.org/property/artist\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Joe Pass",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Joe_Pass",
        "seq": "68,76"
      },
      {
        "label": "Dream Dancing",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Dream_Dancing_(album)",
        "seq": "25,38"
      }
    ],
    "id": "9fdd8478c6d84d1291fb875beff000f6",
    "predicate mapping": [
      {
        "label": "associated",
        "uri": "http://dbpedia.org/ontology/associatedBand",
        "seq": "52,62",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "artist",
        "uri": "http://dbpedia.org/property/artist",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the notable commanders of Army Group Oberrhein ?",
    "SerialNumber": "2551",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Army_Group_Oberrhein_(Germany)\u003e \u003chttp://dbpedia.org/property/notableCommanders\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Army Group Oberrhein",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Army_Group_Oberrhein_(Germany)",
        "seq": "31,51"
      }
    ],
    "id": "73d747e2e00649c48cc57a5f5c1594be",
    "predicate mapping": [
      {
        "label": "notable commanders",
        "uri": "http://dbpedia.org/property/notableCommanders",
        "seq": "9,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "In which mountain range does the Rochers De Naye lie?",
    "SerialNumber": "2553",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/parentMountainPeak\u003e \u003chttp://dbpedia.org/resource/Rochers_de_Naye\u003e . ?x \u003chttp://dbpedia.org/ontology/mountainRange\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Rochers De Naye",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Rochers_de_Naye",
        "seq": "33,48"
      }
    ],
    "id": "f717accc0ab04b15bed31ee97a11045f",
    "predicate mapping": [
      {
        "label": "mountain",
        "uri": "http://dbpedia.org/ontology/parentMountainPeak",
        "seq": "9,17",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "mountain range",
        "uri": "http://dbpedia.org/ontology/mountainRange",
        "seq": "9,23",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "101",
    "question": "Murray Gold has composed music for how many things?",
    "SerialNumber": "2554",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/ontology/composer\u003e \u003chttp://dbpedia.org/resource/Murray_Gold\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Murray Gold",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Murray_Gold",
        "seq": "0,11"
      }
    ],
    "id": "1baf73ee859f4a678e907f2e806738b0",
    "predicate mapping": [
      {
        "label": "composed",
        "uri": "http://dbpedia.org/ontology/composer",
        "seq": "16,24",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "111",
    "question": "Count the number of other product of the banks whose one of the product is Wealth management ?",
    "SerialNumber": "2555",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/product\u003e \u003chttp://dbpedia.org/resource/Wealth_management\u003e . ?x \u003chttp://dbpedia.org/ontology/product\u003e ?uri }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Wealth management",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Wealth_management",
        "seq": "75,92"
      }
    ],
    "id": "33ffcadb8ef94c4893dfca8fa2e74e43",
    "predicate mapping": [
      {
        "label": "product",
        "uri": "http://dbpedia.org/ontology/product",
        "seq": "26,33",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "product",
        "uri": "http://dbpedia.org/ontology/product",
        "seq": "26,33",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the citizenship of Saima Chowdhury?",
    "SerialNumber": "2558",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Saima_Chowdhury\u003e \u003chttp://dbpedia.org/ontology/citizenship\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Saima Chowdhury",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Saima_Chowdhury",
        "seq": "27,42"
      }
    ],
    "id": "c3949eda0f05470ca1d7effadac95392",
    "predicate mapping": [
      {
        "label": "citizenship",
        "uri": "http://dbpedia.org/ontology/citizenship",
        "seq": "12,23",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who is the writer of The Sandman (Vertigo) ?",
    "SerialNumber": "2560",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/The_Sandman_(Vertigo)\u003e \u003chttp://dbpedia.org/property/writers\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "The Sandman (Vertigo)",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/The_Sandman_(Vertigo)",
        "seq": "21,42"
      }
    ],
    "id": "c365bc2a449849d4999e1836c37e7e20",
    "predicate mapping": [
      {
        "label": "writer",
        "uri": "http://dbpedia.org/property/writers",
        "seq": "11,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What religion do the politicians follow, who graduated from the Yokkohama Nationaal University?",
    "SerialNumber": "2561",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/almaMater\u003e \u003chttp://dbpedia.org/resource/Yokohama_National_University\u003e . ?x \u003chttp://dbpedia.org/ontology/religion\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Politician\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Yokkohama Nationaal University",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Yokohama_National_University",
        "seq": "64,94"
      }
    ],
    "id": "dea08c4d67c84b478d0adb5e063dd3c9",
    "predicate mapping": [
      {
        "label": "graduated from",
        "uri": "http://dbpedia.org/property/almaMater",
        "seq": "45,59",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion",
        "seq": "5,13",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "politician",
        "uri": "http://dbpedia.org/ontology/Politician",
        "seq": "21,31",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Which battles were fought under the president when Chung Won Shik was the prime minister?",
    "SerialNumber": "2564",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/primeminister\u003e \u003chttp://dbpedia.org/resource/Chung_Won-shik\u003e . ?x \u003chttp://dbpedia.org/property/battles\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/President\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Chung Won Shik",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Chung_Won-shik",
        "seq": "51,65"
      }
    ],
    "id": "add7e467bfd94a21bacd2d251e10ae2e",
    "predicate mapping": [
      {
        "label": "minister prime",
        "uri": "http://dbpedia.org/property/primeminister",
        "seq": "-1,13",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "battles",
        "uri": "http://dbpedia.org/property/battles",
        "seq": "6,13",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "prime minister",
        "uri": "http://dbpedia.org/ontology/President",
        "seq": "74,88",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "311",
    "question": "Which are the  automobile platform whose one of the automobile platform is Dodge ?",
    "SerialNumber": "2566",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/automobilePlatform\u003e \u003chttp://dbpedia.org/resource/Dodge\u003e . ?x \u003chttp://dbpedia.org/ontology/automobilePlatform\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Automobile\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Dodge",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Dodge",
        "seq": "75,80"
      }
    ],
    "id": "4a9e53dfc73f4627925582fac0d63ad5",
    "predicate mapping": [
      {
        "label": "automobile platform",
        "uri": "http://dbpedia.org/ontology/automobilePlatform",
        "seq": "15,34",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "automobile platform",
        "uri": "http://dbpedia.org/ontology/automobilePlatform",
        "seq": "15,34",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "automobile",
        "uri": "http://dbpedia.org/ontology/Automobile",
        "seq": "15,25",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which battle of  Khalid bin Sultan was also the conflict of Steve Buyer ?",
    "SerialNumber": "2567",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Khalid_bin_Sultan\u003e \u003chttp://dbpedia.org/property/battles\u003e ?uri. \u003chttp://dbpedia.org/resource/Steve_Buyer\u003e \u003chttp://dbpedia.org/ontology/battle\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Khalid bin Sultan",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Khalid_bin_Sultan",
        "seq": "17,34"
      },
      {
        "label": "Steve Buyer",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Steve_Buyer",
        "seq": "60,71"
      }
    ],
    "id": "ee822c36d62d4486b3e5bfe19c785a6d",
    "predicate mapping": [
      {
        "label": "battle",
        "uri": "http://dbpedia.org/property/battles",
        "seq": "6,12",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "battle",
        "uri": "http://dbpedia.org/ontology/battle",
        "seq": "6,12",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "107",
    "question": "How many molluscas are there whose families are Buccinidae and Buccinoidea?",
    "SerialNumber": "2568",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?uri \u003chttp://dbpedia.org/ontology/family\u003e \u003chttp://dbpedia.org/resource/Buccinidae\u003e . ?uri \u003chttp://dbpedia.org/ontology/family\u003e \u003chttp://dbpedia.org/resource/Buccinoidea\u003e} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Buccinidae",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Buccinidae",
        "seq": "48,58"
      },
      {
        "label": "Buccinoidea",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Buccinoidea",
        "seq": "63,74"
      }
    ],
    "id": "c28b4d6ba982461894b0af6413f4dae3",
    "predicate mapping": [
      {
        "label": "families",
        "uri": "http://dbpedia.org/ontology/family",
        "seq": "35,43",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "families",
        "uri": "http://dbpedia.org/ontology/family",
        "seq": "35,43",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "Name the islands that belong to the archipelago whose largest city is Papeete?",
    "SerialNumber": "2569",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/largestCity\u003e \u003chttp://dbpedia.org/resource/Papeete\u003e . ?uri \u003chttp://dbpedia.org/property/archipelago\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Papeete",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Papeete",
        "seq": "70,77"
      }
    ],
    "id": "f8b4b4e3f56d470eaa30548567ac76bc",
    "predicate mapping": [
      {
        "label": "largest city",
        "uri": "http://dbpedia.org/ontology/largestCity",
        "seq": "54,66",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "archipelago",
        "uri": "http://dbpedia.org/property/archipelago",
        "seq": "36,47",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Name the person whose parent is Pattie Mallette?",
    "SerialNumber": "2570",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/parent\u003e \u003chttp://dbpedia.org/resource/Pattie_Mallette\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Pattie Mallette",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Pattie_Mallette",
        "seq": "32,47"
      }
    ],
    "id": "d50f136d62424735841bbbaf2f071598",
    "predicate mapping": [
      {
        "label": "parent",
        "uri": "http://dbpedia.org/ontology/parent",
        "seq": "22,28",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/Person",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Was Mark Twain a character of Mark Twain Tonight?",
    "SerialNumber": "2571",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Mark_Twain_Tonight\u003e \u003chttp://dbpedia.org/property/characters\u003e \u003chttp://dbpedia.org/resource/Mark_Twain\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Mark Twain Tonight",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Mark_Twain_Tonight",
        "seq": "30,48"
      },
      {
        "label": "Mark Twain",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Mark_Twain",
        "seq": "4,14"
      }
    ],
    "id": "da7765ddd30747a8a4f9e56b2c133576",
    "predicate mapping": [
      {
        "label": "character",
        "uri": "http://dbpedia.org/property/characters",
        "seq": "17,26",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the county of Saint Lucia national cricket team ?",
    "SerialNumber": "2574",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Saint_Lucia_national_cricket_team\u003e \u003chttp://dbpedia.org/ontology/county\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Saint Lucia national cricket team",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Saint_Lucia_national_cricket_team",
        "seq": "22,55"
      }
    ],
    "id": "f0b68ec815f04f8fbcfa6fb21869435b",
    "predicate mapping": [
      {
        "label": "nation",
        "uri": "http://dbpedia.org/ontology/county",
        "seq": "34,40",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "List the destinations to which the airlines headquartered at the Gatwick Airport fly to?",
    "SerialNumber": "2576",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/headquarters\u003e \u003chttp://dbpedia.org/resource/Gatwick_Airport\u003e . ?x \u003chttp://dbpedia.org/ontology/destination\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Airline\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Gatwick Airport",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Gatwick_Airport",
        "seq": "65,80"
      }
    ],
    "id": "b69308b751094ac1abc810fdb238f53a",
    "predicate mapping": [
      {
        "label": "headquarter",
        "uri": "http://dbpedia.org/property/headquarters",
        "seq": "44,55",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "destination",
        "uri": "http://dbpedia.org/ontology/destination",
        "seq": "9,20",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "airline",
        "uri": "http://dbpedia.org/ontology/Airline",
        "seq": "35,42",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who is the publisher of The Rolling Stone Album Guide ?",
    "SerialNumber": "2579",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/The_Rolling_Stone_Album_Guide\u003e \u003chttp://dbpedia.org/ontology/publisher\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "The Rolling Stone Album Guide",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/The_Rolling_Stone_Album_Guide",
        "seq": "24,53"
      }
    ],
    "id": "738238521e7e47f79c03ba81880544ce",
    "predicate mapping": [
      {
        "label": "publisher",
        "uri": "http://dbpedia.org/ontology/publisher",
        "seq": "11,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What is the hometown of the volleyball player whose club is VC Lokomotiv Novosibirsk ?",
    "SerialNumber": "2581",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/club\u003e \u003chttp://dbpedia.org/resource/VC_Lokomotiv_Novosibirsk\u003e . ?x \u003chttp://dbpedia.org/property/hometown\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/VolleyballPlayer\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "VC Lokomotiv Novosibirsk",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/VC_Lokomotiv_Novosibirsk",
        "seq": "60,84"
      }
    ],
    "id": "8dcdd9886b0d4eb38b3a78d1d8f7bf55",
    "predicate mapping": [
      {
        "label": "club",
        "uri": "http://dbpedia.org/ontology/club",
        "seq": "52,56",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "hometown",
        "uri": "http://dbpedia.org/property/hometown",
        "seq": "12,20",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "volleyball player",
        "uri": "http://dbpedia.org/ontology/VolleyballPlayer",
        "seq": "28,45",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What are some books whose cover illustration is designed by Marshall Arisman?",
    "SerialNumber": "2582",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/coverArtist\u003e \u003chttp://dbpedia.org/resource/Marshall_Arisman\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Book\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Marshall Arisman",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Marshall_Arisman",
        "seq": "60,76"
      }
    ],
    "id": "0003a5d7358848dda07272e9779abb3b",
    "predicate mapping": [
      {
        "label": "cover",
        "uri": "http://dbpedia.org/property/coverArtist",
        "seq": "26,31",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "book",
        "uri": "http://dbpedia.org/ontology/Book",
        "seq": "14,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What religion do people of the country of Mahbuba Islam Rakhi follow?",
    "SerialNumber": "2583",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Mahbuba_Islam_Rakhi\u003e \u003chttp://dbpedia.org/ontology/nationality\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/religion\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Mahbuba Islam Rakhi",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Mahbuba_Islam_Rakhi",
        "seq": "42,61"
      }
    ],
    "id": "aef45b1c0926436fbf9066333c15dd4c",
    "predicate mapping": [
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/nationality",
        "seq": "31,38",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion",
        "seq": "5,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "Name the people who were in a youth club managed by Luis Enrique ?",
    "SerialNumber": "2584",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/manager\u003e \u003chttp://dbpedia.org/resource/Luis_Enrique_(footballer)\u003e . ?uri \u003chttp://dbpedia.org/property/youthclubs\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Luis Enrique",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Luis_Enrique_(footballer)",
        "seq": "52,64"
      }
    ],
    "id": "7bf3155c798f4ab8976ec7b18d4a3336",
    "predicate mapping": [
      {
        "label": "managed",
        "uri": "http://dbpedia.org/property/manager",
        "seq": "41,48",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "youth club",
        "uri": "http://dbpedia.org/property/youthclubs",
        "seq": "30,40",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "What is the state of the administrative region where Oscoda, Michigan is located?",
    "SerialNumber": "2585",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Oscoda,_Michigan\u003e \u003chttp://dbpedia.org/ontology/isPartOf\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/state\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/AdministrativeRegion\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Oscoda, Michigan",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Oscoda,_Michigan",
        "seq": "53,69"
      }
    ],
    "id": "1a388e6d4b5349899a856a6c6b9c322d",
    "predicate mapping": [
      {
        "label": "state",
        "uri": "http://dbpedia.org/ontology/isPartOf",
        "seq": "12,17",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "state",
        "uri": "http://dbpedia.org/ontology/state",
        "seq": "12,17",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "administrative region",
        "uri": "http://dbpedia.org/ontology/AdministrativeRegion",
        "seq": "25,46",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which  institution of the Alton Ochsner is the alma mater of the Michael Hahn ?",
    "SerialNumber": "2586",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Alton_Ochsner\u003e \u003chttp://dbpedia.org/ontology/institution\u003e ?uri. \u003chttp://dbpedia.org/resource/Michael_Hahn\u003e \u003chttp://dbpedia.org/ontology/almaMater\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Alton Ochsner",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Alton_Ochsner",
        "seq": "26,39"
      },
      {
        "label": "Michael Hahn",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Michael_Hahn",
        "seq": "65,77"
      }
    ],
    "id": "e6b415fc865449c3bf841f09716c5099",
    "predicate mapping": [
      {
        "label": "institution",
        "uri": "http://dbpedia.org/ontology/institution",
        "seq": "7,18",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/ontology/almaMater",
        "seq": "47,57",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "102",
    "question": "Kendall Jenner has how many relatives?",
    "SerialNumber": "2589",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { \u003chttp://dbpedia.org/resource/Kendall_Jenner\u003e \u003chttp://dbpedia.org/property/relatives\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Kendall Jenner",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Kendall_Jenner",
        "seq": "0,14"
      }
    ],
    "id": "0823c2c40ec44ed38548274caa96984d",
    "predicate mapping": [
      {
        "label": "relatives",
        "uri": "http://dbpedia.org/property/relatives",
        "seq": "28,37",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "List the affiliations of Wikipedia Zero ?",
    "SerialNumber": "2593",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Wikipedia_Zero\u003e \u003chttp://dbpedia.org/property/affiliations\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Wikipedia Zero",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Wikipedia_Zero",
        "seq": "25,39"
      }
    ],
    "id": "605df0ddfb63418781e9a290359006e5",
    "predicate mapping": [
      {
        "label": "affiliations",
        "uri": "http://dbpedia.org/property/affiliations",
        "seq": "9,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What is the region served by the governor of Stephen L.R. McNichols ?",
    "SerialNumber": "2594",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Stephen_L.R._McNichols\u003e \u003chttp://dbpedia.org/property/governor\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/region\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Stephen L.R. McNichols",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Stephen_L.R._McNichols",
        "seq": "45,67"
      }
    ],
    "id": "a121c71fd9734b5fad1cd2f9d8699b62",
    "predicate mapping": [
      {
        "label": "governor",
        "uri": "http://dbpedia.org/property/governor",
        "seq": "33,41",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "region",
        "uri": "http://dbpedia.org/ontology/region",
        "seq": "12,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who is the chancellor of the university whose campus is in Woodlane, New Jersey ?",
    "SerialNumber": "2598",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/campus\u003e \u003chttp://dbpedia.org/resource/Woodlane,_New_Jersey\u003e . ?x \u003chttp://dbpedia.org/property/chancellor\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/University\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Woodlane, New Jersey",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Woodlane,_New_Jersey",
        "seq": "59,79"
      }
    ],
    "id": "c714added3ea49fd8d6f4ee3d6fd96f0",
    "predicate mapping": [
      {
        "label": "campus",
        "uri": "http://dbpedia.org/ontology/campus",
        "seq": "46,52",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "chancellor",
        "uri": "http://dbpedia.org/property/chancellor",
        "seq": "11,21",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "university",
        "uri": "http://dbpedia.org/ontology/University",
        "seq": "29,39",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "What fictional character\u0027s species is American Pekin duck",
    "SerialNumber": "2600",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/species\u003e \u003chttp://dbpedia.org/resource/American_Pekin_duck\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "American Pekin duck",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/American_Pekin_duck",
        "seq": "38,57"
      }
    ],
    "id": "f1deb0821db74c36b4d4e3febc19fb74",
    "predicate mapping": [
      {
        "label": "species",
        "uri": "http://dbpedia.org/ontology/species",
        "seq": "27,34",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the television show whose creator is Simon Fuller and presented by Ryan Seacrest?",
    "SerialNumber": "2601",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/creator\u003e \u003chttp://dbpedia.org/resource/Simon_Fuller\u003e . ?uri \u003chttp://dbpedia.org/ontology/presenter\u003e \u003chttp://dbpedia.org/resource/Ryan_Seacrest\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Simon Fuller",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Simon_Fuller",
        "seq": "42,54"
      },
      {
        "label": "Ryan Seacrest",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Ryan_Seacrest",
        "seq": "72,85"
      }
    ],
    "id": "2430cb5fcc7e4de09250aa3d4cf84c00",
    "predicate mapping": [
      {
        "label": "creator",
        "uri": "http://dbpedia.org/property/creator",
        "seq": "31,38",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "presented",
        "uri": "http://dbpedia.org/ontology/presenter",
        "seq": "59,68",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "9,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "406",
    "question": "How many books are there whose author\u0027s tomb is in Madrid?",
    "SerialNumber": "2602",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/restingPlace\u003e \u003chttp://dbpedia.org/resource/Madrid\u003e . ?uri \u003chttp://dbpedia.org/ontology/author\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Book\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Madrid",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Madrid",
        "seq": "51,57"
      }
    ],
    "id": "1ae78ac410444930afaf70da6b8c4492",
    "predicate mapping": [
      {
        "label": "tomb",
        "uri": "http://dbpedia.org/ontology/restingPlace",
        "seq": "40,44",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "author",
        "uri": "http://dbpedia.org/ontology/author",
        "seq": "31,37",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "book",
        "uri": "http://dbpedia.org/ontology/Book",
        "seq": "9,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What are the bridges whose located in California?",
    "SerialNumber": "2603",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/locatedInArea\u003e \u003chttp://dbpedia.org/resource/California\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Bridge\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "California",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/California",
        "seq": "38,48"
      }
    ],
    "id": "f0a84962196f46ad8f2bff1e5ee68e33",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/locatedInArea",
        "seq": "35,37",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "bridge",
        "uri": "http://dbpedia.org/ontology/Bridge",
        "seq": "13,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Purnima Banerjee and Rishang Keishing are politicians of what party ?",
    "SerialNumber": "2606",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Rishang_Keishing\u003e \u003chttp://dbpedia.org/property/party\u003e ?uri. \u003chttp://dbpedia.org/resource/Purnima_Banerjee\u003e \u003chttp://dbpedia.org/ontology/party\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Rishang Keishing",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Rishang_Keishing",
        "seq": "21,37"
      },
      {
        "label": "Purnima Banerjee",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Purnima_Banerjee",
        "seq": "0,16"
      }
    ],
    "id": "ccb1cb5ab424424d952a58dae998bc1f",
    "predicate mapping": [
      {
        "label": "party",
        "uri": "http://dbpedia.org/property/party",
        "seq": "62,67",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "party",
        "uri": "http://dbpedia.org/ontology/party",
        "seq": "62,67",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "101",
    "question": "Ryan Seacrest has been the presenter of how many things?",
    "SerialNumber": "2607",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/ontology/presenter\u003e \u003chttp://dbpedia.org/resource/Ryan_Seacrest\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ryan Seacrest",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ryan_Seacrest",
        "seq": "0,13"
      }
    ],
    "id": "1c0073aa4e3142589ffd0e487b5742da",
    "predicate mapping": [
      {
        "label": "presenter",
        "uri": "http://dbpedia.org/ontology/presenter",
        "seq": "27,36",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Did the New Way party merge in the One Israel party?",
    "SerialNumber": "2609",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/New_Way_(Israel)\u003e \u003chttp://dbpedia.org/ontology/mergedIntoParty\u003e \u003chttp://dbpedia.org/resource/One_Israel\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "New Way",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/New_Way_(Israel)",
        "seq": "8,15"
      },
      {
        "label": "One Israel",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/One_Israel",
        "seq": "35,45"
      }
    ],
    "id": "56f14869f43647c485fa58b23d2f9c2a",
    "predicate mapping": [
      {
        "label": "party",
        "uri": "http://dbpedia.org/ontology/mergedIntoParty",
        "seq": "16,21",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Name the organization which developed iPhone OS and the XNU?",
    "SerialNumber": "2610",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/IPhone_OS_1\u003e \u003chttp://dbpedia.org/property/developer\u003e ?uri. \u003chttp://dbpedia.org/resource/XNU\u003e \u003chttp://dbpedia.org/ontology/developer\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "iPhone OS a",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/IPhone_OS_1",
        "seq": "38,49"
      },
      {
        "label": "XNU",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/XNU",
        "seq": "56,59"
      }
    ],
    "id": "67071d7bb6a641018f186b4bab9377f8",
    "predicate mapping": [
      {
        "label": "developed",
        "uri": "http://dbpedia.org/property/developer",
        "seq": "28,37",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "developed",
        "uri": "http://dbpedia.org/ontology/developer",
        "seq": "28,37",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What are the television shows whose network is BBC HD?",
    "SerialNumber": "2611",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/network\u003e \u003chttp://dbpedia.org/resource/BBC_HD\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "BBC HD",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/BBC_HD",
        "seq": "47,53"
      }
    ],
    "id": "2d0b48018f494c26a18b0026fdf92feb",
    "predicate mapping": [
      {
        "label": "network",
        "uri": "http://dbpedia.org/ontology/network",
        "seq": "36,43",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "13,28",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Which stadium is owned by the team whose manager is Dimitris Terezopoulos?",
    "SerialNumber": "2615",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/manager\u003e \u003chttp://dbpedia.org/resource/Dimitris_Terezopoulos\u003e . ?x \u003chttp://dbpedia.org/property/stadium\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Dimitris Terezopoulos",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Dimitris_Terezopoulos",
        "seq": "52,73"
      }
    ],
    "id": "3ca98ea2b8ae43d6b96d28fc67c8d9ff",
    "predicate mapping": [
      {
        "label": "manager",
        "uri": "http://dbpedia.org/property/manager",
        "seq": "41,48",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "stadium",
        "uri": "http://dbpedia.org/property/stadium",
        "seq": "6,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Was John Muir the first one to ascend one of the peaks in the cathedral peak?",
    "SerialNumber": "2617",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Cathedral_Peak_(California)\u003e \u003chttp://dbpedia.org/ontology/firstAscentPerson\u003e \u003chttp://dbpedia.org/resource/John_Muir\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "cathedral peak",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Cathedral_Peak_(California)",
        "seq": "62,76"
      },
      {
        "label": "John Muir",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/John_Muir",
        "seq": "4,13"
      }
    ],
    "id": "9b5143de94794385973ea90f3188b781",
    "predicate mapping": [
      {
        "label": "first",
        "uri": "http://dbpedia.org/ontology/firstAscentPerson",
        "seq": "18,23",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What is the television show whose previous work is The Spirit of Christmas (short film)?",
    "SerialNumber": "2618",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/previousWork\u003e \u003chttp://dbpedia.org/resource/The_Spirit_of_Christmas_(short_film)\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "The Spirit of Christmas (short film)",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Spirit_of_Christmas_(short_film)",
        "seq": "51,87"
      }
    ],
    "id": "8ebe5072325a4339b8218b2a7943e4c6",
    "predicate mapping": [
      {
        "label": "previous work",
        "uri": "http://dbpedia.org/ontology/previousWork",
        "seq": "34,47",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "12,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "List the series of the books whose author is K. W. Jeter.",
    "SerialNumber": "2619",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/author\u003e \u003chttp://dbpedia.org/resource/K._W._Jeter\u003e . ?x \u003chttp://dbpedia.org/ontology/series\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Book\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "K. W. Jeter",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/K._W._Jeter",
        "seq": "45,56"
      }
    ],
    "id": "927cae9531214d50b42aa1950baa9486",
    "predicate mapping": [
      {
        "label": "author",
        "uri": "http://dbpedia.org/property/author",
        "seq": "35,41",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "series",
        "uri": "http://dbpedia.org/ontology/series",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "book",
        "uri": "http://dbpedia.org/ontology/Book",
        "seq": "23,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "List the authors of the musicals whose songwriter is Richard M. Sherman.",
    "SerialNumber": "2620",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/musicBy\u003e \u003chttp://dbpedia.org/resource/Richard_M._Sherman\u003e . ?x \u003chttp://dbpedia.org/ontology/author\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Musical\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Richard M. Sherman",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Richard_M._Sherman",
        "seq": "53,71"
      }
    ],
    "id": "331d362a310946ae8a786c98ad75d8f4",
    "predicate mapping": [
      {
        "label": "songwriter",
        "uri": "http://dbpedia.org/ontology/musicBy",
        "seq": "39,49",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "songwriter",
        "uri": "http://dbpedia.org/ontology/author",
        "seq": "39,49",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "musical",
        "uri": "http://dbpedia.org/ontology/Musical",
        "seq": "24,31",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What musicians are signed up with colpix records?",
    "SerialNumber": "2622",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/label\u003e \u003chttp://dbpedia.org/resource/Colpix_Records\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MusicalArtist\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "colpix records",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Colpix_Records",
        "seq": "34,48"
      }
    ],
    "id": "27b52b633c2c44e280099149146f6a9d",
    "predicate mapping": [
      {
        "label": "are",
        "uri": "http://dbpedia.org/property/label",
        "seq": "15,18",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "musician",
        "uri": "http://dbpedia.org/ontology/MusicalArtist",
        "seq": "5,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "What is the river whose source region is North-Western Province, Zambia and river mouth is Indian Ocean?",
    "SerialNumber": "2626",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/sourceRegion\u003e \u003chttp://dbpedia.org/resource/North-Western_Province,_Zambia\u003e . ?uri \u003chttp://dbpedia.org/ontology/riverMouth\u003e \u003chttp://dbpedia.org/resource/Indian_Ocean\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/River\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "North-Western Province, Zambia",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/North-Western_Province,_Zambia",
        "seq": "41,71"
      },
      {
        "label": "Indian Ocean",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Indian_Ocean",
        "seq": "91,103"
      }
    ],
    "id": "1d0e592950334df5a65998987f995496",
    "predicate mapping": [
      {
        "label": "source region",
        "uri": "http://dbpedia.org/property/sourceRegion",
        "seq": "24,37",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "river mouth",
        "uri": "http://dbpedia.org/ontology/riverMouth",
        "seq": "76,87",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River",
        "seq": "12,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "How many things are people who died in St. Petersburg known for?",
    "SerialNumber": "2629",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/deathPlace\u003e \u003chttp://dbpedia.org/resource/Saint_Petersburg\u003e . ?x \u003chttp://dbpedia.org/ontology/knownFor\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Petersburg",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Saint_Petersburg",
        "seq": "43,53"
      }
    ],
    "id": "9af0ed42078645f89b794641c5bf214f",
    "predicate mapping": [
      {
        "label": "died in",
        "uri": "http://dbpedia.org/property/deathPlace",
        "seq": "31,38",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "known for",
        "uri": "http://dbpedia.org/ontology/knownFor",
        "seq": "54,63",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Where did ed podolak go to high school",
    "SerialNumber": "2630",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Ed_Podolak\u003e \u003chttp://dbpedia.org/ontology/highschool\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "ed podolak",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ed_Podolak",
        "seq": "10,20"
      }
    ],
    "id": "1088fd5c6f2948faa4ca297bf58ca3eb",
    "predicate mapping": [
      {
        "label": "school high",
        "uri": "http://dbpedia.org/ontology/highschool",
        "seq": "-1,10",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Of which countries  does Viveka Babajee have citizenship?",
    "SerialNumber": "2631",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Viveka_Babajee\u003e \u003chttp://dbpedia.org/property/citizenship\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Viveka Babajee",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Viveka_Babajee",
        "seq": "25,39"
      }
    ],
    "id": "2fe53e1ad1f348669a1f92c6c35fbb53",
    "predicate mapping": [
      {
        "label": "citizenship",
        "uri": "http://dbpedia.org/property/citizenship",
        "seq": "45,56",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which university attended by Donn Barber and education institute of Jack McGregor ?",
    "SerialNumber": "2632",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Donn_Barber\u003e \u003chttp://dbpedia.org/property/education\u003e ?uri. \u003chttp://dbpedia.org/resource/Jack_McGregor\u003e \u003chttp://dbpedia.org/ontology/education\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Donn Barber",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Donn_Barber",
        "seq": "29,40"
      },
      {
        "label": "Jack McGregor",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Jack_McGregor",
        "seq": "68,81"
      }
    ],
    "id": "e2897f4781764c61aa25fd8a527347dd",
    "predicate mapping": [
      {
        "label": "university attended",
        "uri": "http://dbpedia.org/property/education",
        "seq": "6,25",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "university attended",
        "uri": "http://dbpedia.org/ontology/education",
        "seq": "6,25",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "106",
    "question": "Count all those whose youth club was managed by Luis Enrique.",
    "SerialNumber": "2634",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/manager\u003e \u003chttp://dbpedia.org/resource/Luis_Enrique_(footballer)\u003e . ?uri \u003chttp://dbpedia.org/property/youthclubs\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Luis Enrique",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Luis_Enrique_(footballer)",
        "seq": "48,60"
      }
    ],
    "id": "c302f010d82f40b4819adce71cf9e672",
    "predicate mapping": [
      {
        "label": "managed",
        "uri": "http://dbpedia.org/property/manager",
        "seq": "37,44",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "youth club",
        "uri": "http://dbpedia.org/property/youthclubs",
        "seq": "22,32",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Which famous horserace has seen both Fergie sutherland and the illustrious War of Attrition?",
    "SerialNumber": "2638",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/War_Of_Attrition_(horse)\u003e \u003chttp://dbpedia.org/property/race\u003e ?uri. \u003chttp://dbpedia.org/resource/Fergie_Sutherland\u003e \u003chttp://dbpedia.org/property/race\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "War of Attrition",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/War_Of_Attrition_(horse)",
        "seq": "75,91"
      },
      {
        "label": "Fergie sutherland",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Fergie_Sutherland",
        "seq": "37,54"
      }
    ],
    "id": "af27fd24d40c4af69bd62323f808d37f",
    "predicate mapping": [
      {
        "label": "race",
        "uri": "http://dbpedia.org/property/race",
        "seq": "18,22",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "race",
        "uri": "http://dbpedia.org/property/race",
        "seq": "18,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "Who are in the liang chow club?",
    "SerialNumber": "2639",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/club\u003e \u003chttp://dbpedia.org/resource/Liang_Chow\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "liang chow",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Liang_Chow",
        "seq": "15,25"
      }
    ],
    "id": "42696b30838d4c98a18e0471fbda3572",
    "predicate mapping": [
      {
        "label": "club",
        "uri": "http://dbpedia.org/property/club",
        "seq": "26,30",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What are the different religions followed by presidents whose prime minister was Surayud Chulanont?",
    "SerialNumber": "2642",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/primeminister\u003e \u003chttp://dbpedia.org/resource/Surayud_Chulanont\u003e . ?x \u003chttp://dbpedia.org/ontology/religion\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/President\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Surayud Chulanont",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Surayud_Chulanont",
        "seq": "81,98"
      }
    ],
    "id": "bce6e73ad4d543ab9e13b7845aea8d94",
    "predicate mapping": [
      {
        "label": "minister prime",
        "uri": "http://dbpedia.org/property/primeminister",
        "seq": "-1,13",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion",
        "seq": "23,31",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "prime minister",
        "uri": "http://dbpedia.org/ontology/President",
        "seq": "62,76",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Does Heydar mean the same as a lion?",
    "SerialNumber": "2647",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Heydar\u003e \u003chttp://dbpedia.org/property/meaning\u003e \u003chttp://dbpedia.org/resource/Lion\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Heydar",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Heydar",
        "seq": "5,11"
      },
      {
        "label": "lion",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Lion",
        "seq": "31,35"
      }
    ],
    "id": "4543bb2bca244cacb770ea3f2277fef5",
    "predicate mapping": [
      {
        "label": "mean",
        "uri": "http://dbpedia.org/property/meaning",
        "seq": "12,16",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "List the fields of Sylvain Lvi ?",
    "SerialNumber": "2648",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Sylvain_Lévi\u003e \u003chttp://dbpedia.org/property/fields\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Sylvain Lvi",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Sylvain_Lévi",
        "seq": "19,30"
      }
    ],
    "id": "8f28ab18a0db420a9c7403df42c1e14f",
    "predicate mapping": [
      {
        "label": "fields",
        "uri": "http://dbpedia.org/property/fields",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "101",
    "question": "How many managers have managed Middlesbrough FC?",
    "SerialNumber": "2649",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/ontology/managerClub\u003e \u003chttp://dbpedia.org/resource/Middlesbrough_F.C.\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Middlesbrough FC",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Middlesbrough_F.C.",
        "seq": "31,47"
      }
    ],
    "id": "927df42625ef46c0a72657b93664568f",
    "predicate mapping": [
      {
        "label": "managers",
        "uri": "http://dbpedia.org/ontology/managerClub",
        "seq": "9,17",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "In what movies did Akira Ifukube compose the music?",
    "SerialNumber": "2652",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/music\u003e \u003chttp://dbpedia.org/resource/Akira_Ifukube\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Akira Ifukube",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Akira_Ifukube",
        "seq": "19,32"
      }
    ],
    "id": "adb59836a217439ab637233a71390377",
    "predicate mapping": [
      {
        "label": "music",
        "uri": "http://dbpedia.org/property/music",
        "seq": "45,50",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "8,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "How many awards have been awarded to people who are buried in Glendale, California?",
    "SerialNumber": "2653",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/restingPlace\u003e \u003chttp://dbpedia.org/resource/Glendale,_California\u003e . ?x \u003chttp://dbpedia.org/ontology/award\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Glendale, California",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Glendale,_California",
        "seq": "62,82"
      }
    ],
    "id": "74ba4ac20ee641e9b1373420ec67138c",
    "predicate mapping": [
      {
        "label": "buried in",
        "uri": "http://dbpedia.org/ontology/restingPlace",
        "seq": "52,61",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "awarded",
        "uri": "http://dbpedia.org/ontology/award",
        "seq": "26,33",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "List all those whose relatives\u0027 nationality is United States.",
    "SerialNumber": "2655",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/nationality\u003e \u003chttp://dbpedia.org/resource/United_States\u003e . ?uri \u003chttp://dbpedia.org/ontology/relative\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "United States",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/United_States",
        "seq": "47,60"
      }
    ],
    "id": "f24f21d65b5f4fdaa1f972261523fabd",
    "predicate mapping": [
      {
        "label": "nationality",
        "uri": "http://dbpedia.org/property/nationality",
        "seq": "32,43",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "relative",
        "uri": "http://dbpedia.org/ontology/relative",
        "seq": "21,29",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "106",
    "question": "How many people were in a youthclub which played in the Argentine Primera Division?",
    "SerialNumber": "2656",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/league\u003e \u003chttp://dbpedia.org/resource/Argentine_Primera_División\u003e . ?uri \u003chttp://dbpedia.org/property/youthclubs\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Argentine Primera Division",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Argentine_Primera_División",
        "seq": "56,82"
      }
    ],
    "id": "90b999b08b4b48b68d0ecc7def163056",
    "predicate mapping": [
      {
        "label": "Division",
        "uri": "http://dbpedia.org/property/league",
        "seq": "74,82",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "youthclub",
        "uri": "http://dbpedia.org/property/youthclubs",
        "seq": "26,35",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Did chris lebenzon edit Batman returns?",
    "SerialNumber": "2659",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Batman_Returns\u003e \u003chttp://dbpedia.org/property/editing\u003e \u003chttp://dbpedia.org/resource/Chris_Lebenzon\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Batman returns",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Batman_Returns",
        "seq": "24,38"
      },
      {
        "label": "chris lebenzon",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Chris_Lebenzon",
        "seq": "4,18"
      }
    ],
    "id": "6d98acc27b4e4a96ae51410061611f08",
    "predicate mapping": [
      {
        "label": "edit",
        "uri": "http://dbpedia.org/property/editing",
        "seq": "19,23",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the TV show with distributor as Broadcast syndication and has theme music composed by Primus ?",
    "SerialNumber": "2660",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/distributor\u003e \u003chttp://dbpedia.org/resource/Broadcast_syndication\u003e . ?uri \u003chttp://dbpedia.org/property/themeMusicComposer\u003e \u003chttp://dbpedia.org/resource/Primus_(band)\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Broadcast syndication",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Broadcast_syndication",
        "seq": "37,58"
      },
      {
        "label": "Primus",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Primus_(band)",
        "seq": "91,97"
      }
    ],
    "id": "c300cea324644ae39031003ca3d6aa2d",
    "predicate mapping": [
      {
        "label": "distributor",
        "uri": "http://dbpedia.org/ontology/distributor",
        "seq": "22,33",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "composed",
        "uri": "http://dbpedia.org/property/themeMusicComposer",
        "seq": "79,87",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "12,16",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which military unit garrison is Arlington County, Virginia and The Pentagon?",
    "SerialNumber": "2661",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/garrison\u003e \u003chttp://dbpedia.org/resource/Arlington_County,_Virginia\u003e . ?uri \u003chttp://dbpedia.org/property/garrison\u003e \u003chttp://dbpedia.org/resource/The_Pentagon\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MilitaryUnit\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Arlington County, Virginia",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Arlington_County,_Virginia",
        "seq": "32,58"
      },
      {
        "label": "The Pentagon",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Pentagon",
        "seq": "63,75"
      }
    ],
    "id": "dc7c910336e842419f8645864f6156fc",
    "predicate mapping": [
      {
        "label": "garrison",
        "uri": "http://dbpedia.org/ontology/garrison",
        "seq": "20,28",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "garrison",
        "uri": "http://dbpedia.org/property/garrison",
        "seq": "20,28",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "military unit",
        "uri": "http://dbpedia.org/ontology/MilitaryUnit",
        "seq": "6,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Was Let it Be written by Ringo Starr?",
    "SerialNumber": "2663",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Let_It_Be_(musical)\u003e \u003chttp://dbpedia.org/ontology/musicBy\u003e \u003chttp://dbpedia.org/resource/Ringo_Starr\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Let it Be",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Let_It_Be_(musical)",
        "seq": "4,13"
      },
      {
        "label": "Ringo Starr",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Ringo_Starr",
        "seq": "25,36"
      }
    ],
    "id": "24ebd4641f2a4aa9a2d94e60bf9478ec",
    "predicate mapping": [
      {
        "label": "written by",
        "uri": "http://dbpedia.org/ontology/musicBy",
        "seq": "14,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "101",
    "question": "How many artists are signed up with Celluloid Records?",
    "SerialNumber": "2664",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/property/label\u003e \u003chttp://dbpedia.org/resource/Celluloid_Records\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Celluloid Records",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Celluloid_Records",
        "seq": "36,53"
      }
    ],
    "id": "b48a6444785e448b83e9f9120e667014",
    "predicate mapping": [
      {
        "label": "are",
        "uri": "http://dbpedia.org/property/label",
        "seq": "17,20",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Which country were the associates of Hilda Duhalde from?",
    "SerialNumber": "2665",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Hilda_de_Duhalde\u003e \u003chttp://dbpedia.org/ontology/associate\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/nationality\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Hilda Duhalde",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Hilda_de_Duhalde",
        "seq": "37,50"
      }
    ],
    "id": "6bd4f6e0ff164d198b28c87bbdeb06c5",
    "predicate mapping": [
      {
        "label": "associate",
        "uri": "http://dbpedia.org/ontology/associate",
        "seq": "23,32",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/nationality",
        "seq": "6,13",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Which television shows have been produced by Erik Bork?",
    "SerialNumber": "2669",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/producer\u003e \u003chttp://dbpedia.org/resource/Erik_Bork\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Erik Bork",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Erik_Bork",
        "seq": "45,54"
      }
    ],
    "id": "6547856ca710456fbcb9872e8a03a4e2",
    "predicate mapping": [
      {
        "label": "produced",
        "uri": "http://dbpedia.org/ontology/producer",
        "seq": "33,41",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "6,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the university with mascot as Aubie and president as jay Gogue ?",
    "SerialNumber": "2671",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/mascot\u003e \u003chttp://dbpedia.org/resource/Aubie\u003e . ?uri \u003chttp://dbpedia.org/ontology/president\u003e \u003chttp://dbpedia.org/resource/Jay_Gogue\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/University\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Aubie",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Aubie",
        "seq": "35,40"
      },
      {
        "label": "jay Gogue",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Jay_Gogue",
        "seq": "58,67"
      }
    ],
    "id": "35b0181dcf4d44abbc524b41da8eb11f",
    "predicate mapping": [
      {
        "label": "mascot",
        "uri": "http://dbpedia.org/property/mascot",
        "seq": "25,31",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "president",
        "uri": "http://dbpedia.org/ontology/president",
        "seq": "45,54",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "university",
        "uri": "http://dbpedia.org/ontology/University",
        "seq": "9,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What is the alma mater of the scientist  whose PhD advisor is Jean-Claude Latombe ?",
    "SerialNumber": "2676",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/doctoralAdvisor\u003e \u003chttp://dbpedia.org/resource/Jean-Claude_Latombe\u003e . ?x \u003chttp://dbpedia.org/property/almaMater\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Scientist\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jean-Claude Latombe",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Jean-Claude_Latombe",
        "seq": "62,81"
      }
    ],
    "id": "871856be77aa4a128b9fbaaad6176bb6",
    "predicate mapping": [
      {
        "label": "PhD advisor",
        "uri": "http://dbpedia.org/ontology/doctoralAdvisor",
        "seq": "47,58",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/property/almaMater",
        "seq": "12,22",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "scientist",
        "uri": "http://dbpedia.org/ontology/Scientist",
        "seq": "30,39",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "Which magazine\u0027s editor\u0027s official residence is Playboy Mansion?",
    "SerialNumber": "2679",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/residence\u003e \u003chttp://dbpedia.org/resource/Playboy_Mansion\u003e . ?uri \u003chttp://dbpedia.org/property/editor\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Magazine\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Playboy Mansion",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Playboy_Mansion",
        "seq": "48,63"
      }
    ],
    "id": "a869f86cad31408eb7ce2f7ec9cc6fad",
    "predicate mapping": [
      {
        "label": "residence",
        "uri": "http://dbpedia.org/ontology/residence",
        "seq": "35,44",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "editor",
        "uri": "http://dbpedia.org/property/editor",
        "seq": "17,23",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "magazine",
        "uri": "http://dbpedia.org/ontology/Magazine",
        "seq": "6,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "What are the television shows telecasted on the network which has headquarters at Atlanta?",
    "SerialNumber": "2680",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/headquarters\u003e \u003chttp://dbpedia.org/resource/Atlanta\u003e . ?uri \u003chttp://dbpedia.org/property/network\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Atlanta",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Atlanta",
        "seq": "82,89"
      }
    ],
    "id": "64452a48e109452f8d7c44e99d505ae8",
    "predicate mapping": [
      {
        "label": "headquarters",
        "uri": "http://dbpedia.org/property/headquarters",
        "seq": "66,78",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "network",
        "uri": "http://dbpedia.org/property/network",
        "seq": "48,55",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "13,28",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "By whom is the broadcaster network Bounce TV founded?",
    "SerialNumber": "2683",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Bounce_TV\u003e \u003chttp://dbpedia.org/ontology/foundedBy\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Bounce TV",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Bounce_TV",
        "seq": "35,44"
      }
    ],
    "id": "1fe29c8d282c43c8ba68b809c317857b",
    "predicate mapping": [
      {
        "label": "founded",
        "uri": "http://dbpedia.org/ontology/foundedBy",
        "seq": "45,52",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Where was William anthony trained ?",
    "SerialNumber": "2684",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/William_Anthony_(artist)\u003e \u003chttp://dbpedia.org/property/training\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "William anthony",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/William_Anthony_(artist)",
        "seq": "10,25"
      }
    ],
    "id": "12a72e0ad64a48f9bac59bc42cec75b8",
    "predicate mapping": [
      {
        "label": "trained",
        "uri": "http://dbpedia.org/property/training",
        "seq": "26,33",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "111",
    "question": "How many other family of the mammals exists  whose family is also Hominidae ?",
    "SerialNumber": "2687",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/family\u003e \u003chttp://dbpedia.org/resource/Hominidae\u003e . ?x \u003chttp://dbpedia.org/ontology/family\u003e ?uri }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Hominidae",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Hominidae",
        "seq": "66,75"
      }
    ],
    "id": "f3e83f69a08e4a5183ada408fca77850",
    "predicate mapping": [
      {
        "label": "family",
        "uri": "http://dbpedia.org/ontology/family",
        "seq": "15,21",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "family",
        "uri": "http://dbpedia.org/ontology/family",
        "seq": "15,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Name the country with currency as Aureus ?",
    "SerialNumber": "2688",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/currency\u003e \u003chttp://dbpedia.org/resource/Aureus\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Country\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Aureus",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Aureus",
        "seq": "34,40"
      }
    ],
    "id": "019a5359e534491181604839d176cdff",
    "predicate mapping": [
      {
        "label": "currency",
        "uri": "http://dbpedia.org/ontology/currency",
        "seq": "22,30",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/Country",
        "seq": "9,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "405",
    "question": "How many awards have royal designers for industry awardwinners got?",
    "SerialNumber": "2690",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/awards\u003e \u003chttp://dbpedia.org/resource/Royal_Designers_for_Industry\u003e . ?x \u003chttp://dbpedia.org/ontology/award\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Award\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "royal designers for industry",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Royal_Designers_for_Industry",
        "seq": "21,49"
      }
    ],
    "id": "4ed98081a2ca43378ff4dc849b61d133",
    "predicate mapping": [
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/award",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/Award",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "Which airlines fly to Gimhae International Airport?",
    "SerialNumber": "2696",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/targetAirport\u003e \u003chttp://dbpedia.org/resource/Gimhae_International_Airport\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Gimhae International Airport",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Gimhae_International_Airport",
        "seq": "22,50"
      }
    ],
    "id": "5b45dc70c91a4476b7bfee1e7fcd372f",
    "predicate mapping": [
      {
        "label": "airport",
        "uri": "http://dbpedia.org/ontology/targetAirport",
        "seq": "-1,6",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the alma mater of K. Terry Dornbush ?",
    "SerialNumber": "2701",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/K._Terry_Dornbush\u003e \u003chttp://dbpedia.org/property/almaMater\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "K. Terry Dornbush",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/K._Terry_Dornbush",
        "seq": "26,43"
      }
    ],
    "id": "05f59024c9ca4d59bc0dd7c19ebdc90c",
    "predicate mapping": [
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/property/almaMater",
        "seq": "12,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Which country has the Carmel Winery and the Teperberg 1870 winery ?",
    "SerialNumber": "2703",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Carmel_Winery\u003e \u003chttp://dbpedia.org/property/locationCountry\u003e ?uri. \u003chttp://dbpedia.org/resource/Teperberg_1870\u003e \u003chttp://dbpedia.org/property/locationCountry\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Carmel Winery",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Carmel_Winery",
        "seq": "22,35"
      },
      {
        "label": "Teperberg 1870",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Teperberg_1870",
        "seq": "44,58"
      }
    ],
    "id": "5cbde32223b249669ebf4fdde7f3ead9",
    "predicate mapping": [
      {
        "label": "country",
        "uri": "http://dbpedia.org/property/locationCountry",
        "seq": "6,13",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/property/locationCountry",
        "seq": "6,13",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the river whose source is located in Itasca State Park and mouth is located in Pilottown, Louisiana?",
    "SerialNumber": "2705",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/sourceLocation\u003e \u003chttp://dbpedia.org/resource/Itasca_State_Park\u003e . ?uri \u003chttp://dbpedia.org/property/mouthLocation\u003e \u003chttp://dbpedia.org/resource/Pilottown,_Louisiana\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/River\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Itasca State Park",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Itasca_State_Park",
        "seq": "42,59"
      },
      {
        "label": "Pilottown, Louisiana",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Pilottown,_Louisiana",
        "seq": "84,104"
      }
    ],
    "id": "aa76b402511940a2887da5d4f704c9f3",
    "predicate mapping": [
      {
        "label": "source",
        "uri": "http://dbpedia.org/property/sourceLocation",
        "seq": "21,27",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "mouth",
        "uri": "http://dbpedia.org/property/mouthLocation",
        "seq": "64,69",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What is the river which comes from Southend-on-Sea mountain?",
    "SerialNumber": "2706",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/mouthMountain\u003e \u003chttp://dbpedia.org/resource/Southend-on-Sea\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/River\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Southend-on-Sea",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Southend-on-Sea",
        "seq": "35,50"
      }
    ],
    "id": "4c617796ad264521bad275ed96e3e71b",
    "predicate mapping": [
      {
        "label": "mountain",
        "uri": "http://dbpedia.org/ontology/mouthMountain",
        "seq": "51,59",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River",
        "seq": "12,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Where did Meg McGuffin graduated ?",
    "SerialNumber": "2707",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Meg_McGuffin\u003e \u003chttp://dbpedia.org/ontology/education\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Meg McGuffin",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Meg_McGuffin",
        "seq": "10,22"
      }
    ],
    "id": "4c49002c50c740b69b9e310bb96d4c13",
    "predicate mapping": [
      {
        "label": "graduated",
        "uri": "http://dbpedia.org/ontology/education",
        "seq": "23,32",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the movies for which music was given by  Geoffrey Burgon and distributed by  Cinema International Corporation?",
    "SerialNumber": "2709",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/music\u003e \u003chttp://dbpedia.org/resource/Geoffrey_Burgon\u003e . ?uri \u003chttp://dbpedia.org/property/distributor\u003e \u003chttp://dbpedia.org/resource/Cinema_International_Corporation\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Geoffrey Burgon",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Geoffrey_Burgon",
        "seq": "46,61"
      },
      {
        "label": "Cinema International Corporation",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Cinema_International_Corporation",
        "seq": "82,114"
      }
    ],
    "id": "cd70ac27443f476991974aca030f0ff2",
    "predicate mapping": [
      {
        "label": "music",
        "uri": "http://dbpedia.org/property/music",
        "seq": "26,31",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "distributed by",
        "uri": "http://dbpedia.org/property/distributor",
        "seq": "66,80",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "111",
    "question": "Count the total number of academic discipline of the journals whose one of the academic discipline is Neuroimaging ?",
    "SerialNumber": "2710",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/academicDiscipline\u003e \u003chttp://dbpedia.org/resource/Neuroimaging\u003e . ?x \u003chttp://dbpedia.org/ontology/academicDiscipline\u003e ?uri }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Neuroimaging",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Neuroimaging",
        "seq": "102,114"
      }
    ],
    "id": "ee4e4eda446b49beaab2d615cfcec423",
    "predicate mapping": [
      {
        "label": "academic discipline",
        "uri": "http://dbpedia.org/ontology/academicDiscipline",
        "seq": "26,45",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "academic discipline",
        "uri": "http://dbpedia.org/ontology/academicDiscipline",
        "seq": "26,45",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the faith of the Ajith Perera and religious affiliation of the Neungin High School?",
    "SerialNumber": "2714",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Ajith_Perera\u003e \u003chttp://dbpedia.org/ontology/religion\u003e ?uri. \u003chttp://dbpedia.org/resource/Neungin_High_School\u003e \u003chttp://dbpedia.org/property/religiousAffiliation\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ajith Perera",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Ajith_Perera",
        "seq": "25,37"
      },
      {
        "label": "Neungin High School",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Neungin_High_School",
        "seq": "71,90"
      }
    ],
    "id": "4d7bec0dba5d42e0982d9832d3a78971",
    "predicate mapping": [
      {
        "label": "religious affiliation",
        "uri": "http://dbpedia.org/ontology/religion",
        "seq": "42,63",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "religious affiliation",
        "uri": "http://dbpedia.org/property/religiousAffiliation",
        "seq": "42,63",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "What is the mascot of the Royal Australian Air Force and Austin College?",
    "SerialNumber": "2715",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Royal_Australian_Air_Force\u003e \u003chttp://dbpedia.org/property/mascot\u003e ?uri. \u003chttp://dbpedia.org/resource/Austin_College\u003e \u003chttp://dbpedia.org/property/mascot\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Royal Australian Air Force",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Royal_Australian_Air_Force",
        "seq": "26,52"
      },
      {
        "label": "Austin College",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Austin_College",
        "seq": "57,71"
      }
    ],
    "id": "3fa4525f3018491aa2d9184c48896159",
    "predicate mapping": [
      {
        "label": "mascot",
        "uri": "http://dbpedia.org/property/mascot",
        "seq": "12,18",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "mascot",
        "uri": "http://dbpedia.org/property/mascot",
        "seq": "12,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "8",
    "question": "Who managed England national under-20 football team and Middlesbrough F.C.?",
    "SerialNumber": "2716",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/managerclubs\u003e \u003chttp://dbpedia.org/resource/England_national_under-20_football_team\u003e . ?uri \u003chttp://dbpedia.org/ontology/managerClub\u003e \u003chttp://dbpedia.org/resource/Middlesbrough_F.C.\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "England national under-20 football team",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/England_national_under-20_football_team",
        "seq": "12,51"
      },
      {
        "label": "Middlesbrough F.C.",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Middlesbrough_F.C.",
        "seq": "56,74"
      }
    ],
    "id": "a294972b904444408a89d3e753d73332",
    "predicate mapping": [
      {
        "label": "managed",
        "uri": "http://dbpedia.org/property/managerclubs",
        "seq": "4,11",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "managed",
        "uri": "http://dbpedia.org/ontology/managerClub",
        "seq": "4,11",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "What is the religion of the ethnic group to which Clara Ng belongs?",
    "SerialNumber": "2717",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Clara_Ng\u003e \u003chttp://dbpedia.org/ontology/ethnicity\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/religion\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/EthnicGroup\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Clara Ng",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Clara_Ng",
        "seq": "50,58"
      }
    ],
    "id": "cfa6884352b444d8add91a623bbab10f",
    "predicate mapping": [
      {
        "label": "ethnic",
        "uri": "http://dbpedia.org/ontology/ethnicity",
        "seq": "28,34",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion",
        "seq": "12,20",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "ethnic group",
        "uri": "http://dbpedia.org/ontology/EthnicGroup",
        "seq": "28,40",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What are the awards won by the film director of Saraband ?",
    "SerialNumber": "2718",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Saraband\u003e \u003chttp://dbpedia.org/ontology/director\u003e ?x . ?x \u003chttp://dbpedia.org/property/awards\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Saraband",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Saraband",
        "seq": "48,56"
      }
    ],
    "id": "973615440e0f471487e7bb99d0e2084c",
    "predicate mapping": [
      {
        "label": "film director",
        "uri": "http://dbpedia.org/ontology/director",
        "seq": "31,44",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards",
        "seq": "13,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Was John of Damascus canonized by Anglican Communion?",
    "SerialNumber": "2719",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/John_of_Damascus\u003e \u003chttp://dbpedia.org/property/canonizedBy\u003e \u003chttp://dbpedia.org/resource/Anglican_Communion\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "John of Damascus",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/John_of_Damascus",
        "seq": "4,20"
      },
      {
        "label": "Anglican Communion",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Anglican_Communion",
        "seq": "34,52"
      }
    ],
    "id": "7ccf7bd3fd714601ac25679451fd3649",
    "predicate mapping": [
      {
        "label": "canonized by",
        "uri": "http://dbpedia.org/property/canonizedBy",
        "seq": "21,33",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who owns the horses which have won the Timeform award?",
    "SerialNumber": "2720",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/awards\u003e \u003chttp://dbpedia.org/resource/Timeform\u003e . ?x \u003chttp://dbpedia.org/ontology/owner\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Horse\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Timeform",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Timeform",
        "seq": "39,47"
      }
    ],
    "id": "55bc4c30a46549d99ab814a0d7c38eb0",
    "predicate mapping": [
      {
        "label": "award",
        "uri": "http://dbpedia.org/property/awards",
        "seq": "48,53",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "owns",
        "uri": "http://dbpedia.org/ontology/owner",
        "seq": "4,8",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "horse",
        "uri": "http://dbpedia.org/ontology/Horse",
        "seq": "13,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Was George Cash in the western australian parliament?",
    "SerialNumber": "2722",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/George_Cash\u003e \u003chttp://dbpedia.org/property/parliament\u003e \u003chttp://dbpedia.org/resource/Western_Australia\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "George Cash",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/George_Cash",
        "seq": "4,15"
      },
      {
        "label": "western australia",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Western_Australia",
        "seq": "23,40"
      }
    ],
    "id": "a05ef1ad73414574abe88a1bd70f5530",
    "predicate mapping": [
      {
        "label": "parliament",
        "uri": "http://dbpedia.org/property/parliament",
        "seq": "42,52",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What are the notableworks of Russell T Davies?",
    "SerialNumber": "2725",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Russell_T_Davies\u003e \u003chttp://dbpedia.org/property/notableworks\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Russell T Davies",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Russell_T_Davies",
        "seq": "29,45"
      }
    ],
    "id": "be9459f9eae64f38be49cf3573dc58c6",
    "predicate mapping": [
      {
        "label": "notableworks",
        "uri": "http://dbpedia.org/property/notableworks",
        "seq": "13,25",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Horses grandsired by Sundridge  have won which awards?",
    "SerialNumber": "2730",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/grandsire\u003e \u003chttp://dbpedia.org/resource/Sundridge_(horse)\u003e . ?x \u003chttp://dbpedia.org/ontology/honours\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Horse\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Sundridge",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Sundridge_(horse)",
        "seq": "21,30"
      }
    ],
    "id": "b1f5915a9e9043c0b787d37137909a5a",
    "predicate mapping": [
      {
        "label": "grandsire",
        "uri": "http://dbpedia.org/ontology/grandsire",
        "seq": "7,16",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/honours",
        "seq": "47,53",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "Horse",
        "uri": "http://dbpedia.org/ontology/Horse",
        "seq": "0,5",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What is the nickname of the home stadium of Angels Toru?",
    "SerialNumber": "2731",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Angels_Toruń\u003e \u003chttp://dbpedia.org/ontology/homeStadium\u003e ?x . ?x \u003chttp://dbpedia.org/property/nickname\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Angels Toru?",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Angels_Toruń",
        "seq": "44,56"
      }
    ],
    "id": "9f3ba1ac5940461a82d87b74d861d913",
    "predicate mapping": [
      {
        "label": "home stadium",
        "uri": "http://dbpedia.org/ontology/homeStadium",
        "seq": "28,40",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "nickname",
        "uri": "http://dbpedia.org/property/nickname",
        "seq": "12,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What are the bands associated with the artists of My Favorite Girl  ?",
    "SerialNumber": "2732",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/My_Favorite_Girl_(Dave_Hollister_song)\u003e \u003chttp://dbpedia.org/property/artist\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/associatedBand\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "My Favorite Girl",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/My_Favorite_Girl_(Dave_Hollister_song)",
        "seq": "50,66"
      }
    ],
    "id": "00eb2acadaaa4344a0fff0a57e7ff91f",
    "predicate mapping": [
      {
        "label": "artist",
        "uri": "http://dbpedia.org/property/artist",
        "seq": "39,45",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "associated",
        "uri": "http://dbpedia.org/ontology/associatedBand",
        "seq": "19,29",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the layout of Subaru Legacy (second generation) ?",
    "SerialNumber": "2733",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Subaru_Legacy_(second_generation)\u003e \u003chttp://dbpedia.org/ontology/layout\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Subaru Legacy (second generation)",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Subaru_Legacy_(second_generation)",
        "seq": "22,55"
      }
    ],
    "id": "0ca28cd660a3450a9c67766dfe3ce288",
    "predicate mapping": [
      {
        "label": "layout",
        "uri": "http://dbpedia.org/ontology/layout",
        "seq": "12,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name an American football player whose debuted in Chicago Bears and former team is 1998 Baltimore Ravens season?",
    "SerialNumber": "2735",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/debutteam\u003e \u003chttp://dbpedia.org/resource/Chicago_Bears\u003e . ?uri \u003chttp://dbpedia.org/ontology/formerTeam\u003e \u003chttp://dbpedia.org/resource/1998_Baltimore_Ravens_season\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/AmericanFootballPlayer\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Chicago Bears",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Chicago_Bears",
        "seq": "50,63"
      },
      {
        "label": "1998 Baltimore Ravens season",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/1998_Baltimore_Ravens_season",
        "seq": "83,111"
      }
    ],
    "id": "fb89e5eaefbd45b6abc72a2de3f1a88d",
    "predicate mapping": [
      {
        "label": "debuted",
        "uri": "http://dbpedia.org/property/debutteam",
        "seq": "39,46",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "former team",
        "uri": "http://dbpedia.org/ontology/formerTeam",
        "seq": "68,79",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "American football player",
        "uri": "http://dbpedia.org/ontology/AmericanFootballPlayer",
        "seq": "8,32",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "What is the deathplace of the Anatoly Kharlampiyev which is also the death place of  Lyudmila Buldakova?",
    "SerialNumber": "2737",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Anatoly_Kharlampiyev\u003e \u003chttp://dbpedia.org/property/deathPlace\u003e ?uri. \u003chttp://dbpedia.org/resource/Lyudmila_Buldakova\u003e \u003chttp://dbpedia.org/property/deathPlace\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Anatoly Kharlampiyev",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Anatoly_Kharlampiyev",
        "seq": "30,50"
      },
      {
        "label": "Lyudmila Buldakova",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Lyudmila_Buldakova",
        "seq": "85,103"
      }
    ],
    "id": "2151bdd827224e77930d58070e08c1c6",
    "predicate mapping": [
      {
        "label": "death place",
        "uri": "http://dbpedia.org/property/deathPlace",
        "seq": "69,80",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "death place",
        "uri": "http://dbpedia.org/property/deathPlace",
        "seq": "69,80",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What are the professions of Frederick Frelinghuysen (general) ?",
    "SerialNumber": "2741",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Frederick_Frelinghuysen_(general)\u003e \u003chttp://dbpedia.org/property/occupation\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Frederick Frelinghuysen (general)",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Frederick_Frelinghuysen_(general)",
        "seq": "28,61"
      }
    ],
    "id": "8fcd17645d854494af5b6bbf9d11cc54",
    "predicate mapping": [
      {
        "label": "profession",
        "uri": "http://dbpedia.org/property/occupation",
        "seq": "13,23",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "List the starring of the movies whose label is T-Series ?",
    "SerialNumber": "2743",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/label\u003e \u003chttp://dbpedia.org/resource/T-Series\u003e . ?x \u003chttp://dbpedia.org/property/starring\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "T-Series",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/T-Series",
        "seq": "47,55"
      }
    ],
    "id": "3d3c7cde66874980a0a5e54a7375ea1f",
    "predicate mapping": [
      {
        "label": "label",
        "uri": "http://dbpedia.org/property/label",
        "seq": "38,43",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "starring",
        "uri": "http://dbpedia.org/property/starring",
        "seq": "9,17",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "25,30",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Is Pittsburgh Steelers the former team of Marv McFadden?",
    "SerialNumber": "2746",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Marv_McFadden\u003e \u003chttp://dbpedia.org/property/pastteams\u003e \u003chttp://dbpedia.org/resource/Pittsburgh_Steelers\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Marv McFadden",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Marv_McFadden",
        "seq": "42,55"
      },
      {
        "label": "Pittsburgh Steelers",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Pittsburgh_Steelers",
        "seq": "3,22"
      }
    ],
    "id": "5771b7d643f54d72a32152580a3e246a",
    "predicate mapping": [
      {
        "label": "team",
        "uri": "http://dbpedia.org/property/pastteams",
        "seq": "34,38",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the ideology of Palang Dharma Party ?",
    "SerialNumber": "2747",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Palang_Dharma_Party\u003e \u003chttp://dbpedia.org/ontology/ideology\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Palang Dharma Party",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Palang_Dharma_Party",
        "seq": "24,43"
      }
    ],
    "id": "53b5c75907db4603977bf8ecd7de7eb9",
    "predicate mapping": [
      {
        "label": "ideology",
        "uri": "http://dbpedia.org/ontology/ideology",
        "seq": "12,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Name the common record label of I pray on Christmas and Next Thing ?",
    "SerialNumber": "2749",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/I_Pray_on_Christmas\u003e \u003chttp://dbpedia.org/property/label\u003e ?uri. \u003chttp://dbpedia.org/resource/Next_Thing\u003e \u003chttp://dbpedia.org/ontology/recordLabel\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "I pray on Christmas",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/I_Pray_on_Christmas",
        "seq": "32,51"
      },
      {
        "label": "Next Thing",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Next_Thing",
        "seq": "56,66"
      }
    ],
    "id": "9d360f44420b41f5af982a515dfc7fa6",
    "predicate mapping": [
      {
        "label": "record label",
        "uri": "http://dbpedia.org/property/label",
        "seq": "16,28",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "record label",
        "uri": "http://dbpedia.org/ontology/recordLabel",
        "seq": "16,28",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "403",
    "question": "How many cities are around the sea in which the ionian sea flows?",
    "SerialNumber": "2753",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { \u003chttp://dbpedia.org/resource/Ionian_Sea\u003e \u003chttp://dbpedia.org/ontology/outflow\u003e ?x . ?x \u003chttp://dbpedia.org/property/cities\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Sea\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "ionian sea",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ionian_Sea",
        "seq": "48,58"
      }
    ],
    "id": "7a21a6d6f21d47d0b60283006ff13a51",
    "predicate mapping": [
      {
        "label": "flows",
        "uri": "http://dbpedia.org/ontology/outflow",
        "seq": "59,64",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "cities",
        "uri": "http://dbpedia.org/property/cities",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "sea",
        "uri": "http://dbpedia.org/ontology/Sea",
        "seq": "31,34",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which television show\u0027s theme music composer is Gary Portnoy and subsequent work is Frasier?",
    "SerialNumber": "2755",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/themeMusicComposer\u003e \u003chttp://dbpedia.org/resource/Gary_Portnoy\u003e . ?uri \u003chttp://dbpedia.org/ontology/subsequentWork\u003e \u003chttp://dbpedia.org/resource/Frasier\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Gary Portnoy",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Gary_Portnoy",
        "seq": "48,60"
      },
      {
        "label": "Frasier",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Frasier",
        "seq": "84,91"
      }
    ],
    "id": "bb4e3f8507444b49894b8b309c5a3f0d",
    "predicate mapping": [
      {
        "label": "theme music composer",
        "uri": "http://dbpedia.org/property/themeMusicComposer",
        "seq": "24,44",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "subsequent work",
        "uri": "http://dbpedia.org/ontology/subsequentWork",
        "seq": "65,80",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "6,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "311",
    "question": "Name the licensee of the TV station whose one of the licensee is Incorporation ?",
    "SerialNumber": "2756",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/licensee\u003e \u003chttp://dbpedia.org/resource/Incorporation_(business)\u003e . ?x \u003chttp://dbpedia.org/property/licensee\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionStation\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Incorporation",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Incorporation_(business)",
        "seq": "65,78"
      }
    ],
    "id": "5ad1ae78dccc48cf8191cdc793ed60b5",
    "predicate mapping": [
      {
        "label": "licensee",
        "uri": "http://dbpedia.org/property/licensee",
        "seq": "9,17",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "licensee",
        "uri": "http://dbpedia.org/property/licensee",
        "seq": "9,17",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "station",
        "uri": "http://dbpedia.org/ontology/TelevisionStation",
        "seq": "28,35",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Was James maker in the band Noko?",
    "SerialNumber": "2757",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Noko\u003e \u003chttp://dbpedia.org/ontology/associatedBand\u003e \u003chttp://dbpedia.org/resource/James_Maker\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Noko",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Noko",
        "seq": "28,32"
      },
      {
        "label": "James maker",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/James_Maker",
        "seq": "4,15"
      }
    ],
    "id": "dd1825b14155469b8f2931245fe6c188",
    "predicate mapping": [
      {
        "label": "band",
        "uri": "http://dbpedia.org/ontology/associatedBand",
        "seq": "23,27",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Which awards did the parents of Anna Bergman win ?",
    "SerialNumber": "2758",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Anna_Bergman\u003e \u003chttp://dbpedia.org/ontology/parent\u003e ?x . ?x \u003chttp://dbpedia.org/property/awards\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Anna Bergman",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Anna_Bergman",
        "seq": "32,44"
      }
    ],
    "id": "baf5c96273684029beba9ba7d893203e",
    "predicate mapping": [
      {
        "label": "parent",
        "uri": "http://dbpedia.org/ontology/parent",
        "seq": "21,27",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards",
        "seq": "6,12",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Does Lionel Messi play in the Argentina National Football Team?",
    "SerialNumber": "2764",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Lionel_Messi\u003e \u003chttp://dbpedia.org/property/nationalteam\u003e \u003chttp://dbpedia.org/resource/Argentina_national_football_team\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Lionel Messi",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Lionel_Messi",
        "seq": "5,17"
      },
      {
        "label": "Argentina National Football Team",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Argentina_national_football_team",
        "seq": "30,62"
      }
    ],
    "id": "477fee2dbaf14427a27647739e512878",
    "predicate mapping": [
      {
        "label": "national team",
        "uri": "http://dbpedia.org/property/nationalteam",
        "seq": "-1,12",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Was X the Unknown edited by James needs?",
    "SerialNumber": "2766",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/X_the_Unknown\u003e \u003chttp://dbpedia.org/ontology/editing\u003e \u003chttp://dbpedia.org/resource/James_Needs\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "X the Unknown",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/X_the_Unknown",
        "seq": "4,17"
      },
      {
        "label": "James needs",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/James_Needs",
        "seq": "28,39"
      }
    ],
    "id": "959ab2e634754cfaa81e52b342c5d1c8",
    "predicate mapping": [
      {
        "label": "edited by",
        "uri": "http://dbpedia.org/ontology/editing",
        "seq": "18,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Which company owns Sony bank ?",
    "SerialNumber": "2767",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Sony_Bank\u003e \u003chttp://dbpedia.org/ontology/owningCompany\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Sony bank",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Sony_Bank",
        "seq": "19,28"
      }
    ],
    "id": "46ae4963123144699d4f6d11784e7bf9",
    "predicate mapping": [
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/owningCompany",
        "seq": "6,13",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Martin AN/GSG-5 is a part of the building in which city?",
    "SerialNumber": "2768",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/part\u003e \u003chttp://dbpedia.org/resource/Martin_AN/GSG-5_Battery_Integration_and_Radar_Display_Equipment\u003e . ?x \u003chttp://dbpedia.org/property/district\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Building\u003e}",
    "checked": "false",
    "entity mapping": [],
    "id": "bb54180751be476bb26a39120b330d55",
    "predicate mapping": [
      {
        "label": "part",
        "uri": "http://dbpedia.org/ontology/part",
        "seq": "21,25",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "an/gsg-5",
        "uri": "http://dbpedia.org/resource/Martin_AN/GSG-5_Battery_Integration_and_Radar_Display_Equipment",
        "seq": "-1,7",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "city",
        "uri": "http://dbpedia.org/property/district",
        "seq": "51,55",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "building",
        "uri": "http://dbpedia.org/ontology/Building",
        "seq": "33,41",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who is the president of United World College of Costa Rica ?",
    "SerialNumber": "2769",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/United_World_College_of_Costa_Rica\u003e \u003chttp://dbpedia.org/ontology/president\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "United World College of Costa Rica",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/United_World_College_of_Costa_Rica",
        "seq": "24,58"
      }
    ],
    "id": "a883dc6214124d909e2ec7f7cbd9729c",
    "predicate mapping": [
      {
        "label": "president",
        "uri": "http://dbpedia.org/ontology/president",
        "seq": "11,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What party was in majority of Fourth Legislative Assembly of Delhi?",
    "SerialNumber": "2770",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Fourth_Legislative_Assembly_of_Delhi\u003e \u003chttp://dbpedia.org/property/party\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Fourth Legislative Assembly of Delhi",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Fourth_Legislative_Assembly_of_Delhi",
        "seq": "30,66"
      }
    ],
    "id": "b091da8838fe41e0967e92add727c27d",
    "predicate mapping": [
      {
        "label": "party",
        "uri": "http://dbpedia.org/property/party",
        "seq": "5,10",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the venue of Indy PopCon ?",
    "SerialNumber": "2771",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Indy_PopCon\u003e \u003chttp://dbpedia.org/property/venue\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Indy PopCon",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Indy_PopCon",
        "seq": "21,32"
      }
    ],
    "id": "e0394ddbda3d42f994117e6e1ef5a131",
    "predicate mapping": [
      {
        "label": "venue",
        "uri": "http://dbpedia.org/property/venue",
        "seq": "12,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which non fictional subject of Thud is the athletics of PATTS College of Aeronautics ?",
    "SerialNumber": "2772",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Thud!\u003e \u003chttp://dbpedia.org/ontology/nonFictionSubject\u003e ?uri. \u003chttp://dbpedia.org/resource/PATTS_College_of_Aeronautics\u003e \u003chttp://dbpedia.org/property/athletics\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Thud ",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Thud!",
        "seq": "31,36"
      },
      {
        "label": "PATTS College of Aeronautics",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/PATTS_College_of_Aeronautics",
        "seq": "56,84"
      }
    ],
    "id": "a2bd883db228481cb81969ed59dc68e8",
    "predicate mapping": [
      {
        "label": "subject",
        "uri": "http://dbpedia.org/ontology/nonFictionSubject",
        "seq": "20,27",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "athletics",
        "uri": "http://dbpedia.org/property/athletics",
        "seq": "43,52",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Where is the birthplace of Ferrel Harris ?",
    "SerialNumber": "2773",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Ferrel_Harris\u003e \u003chttp://dbpedia.org/property/birthplace\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ferrel Harris",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Ferrel_Harris",
        "seq": "27,40"
      }
    ],
    "id": "39562e37dcd645e8aa5d083018173381",
    "predicate mapping": [
      {
        "label": "birthplace",
        "uri": "http://dbpedia.org/property/birthplace",
        "seq": "13,23",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "who was the president under whom winston bryant served as a lieutenant?",
    "SerialNumber": "2774",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/lieutenant\u003e \u003chttp://dbpedia.org/resource/Winston_Bryant\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "winston bryant",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Winston_Bryant",
        "seq": "33,47"
      }
    ],
    "id": "0898b1c260b643f8be620cea3ccb7bbd",
    "predicate mapping": [
      {
        "label": "lieutenant",
        "uri": "http://dbpedia.org/ontology/lieutenant",
        "seq": "60,70",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Is Essex the Ceremonial County of West Tilbury?",
    "SerialNumber": "2775",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/West_Tilbury\u003e \u003chttp://dbpedia.org/ontology/ceremonialCounty\u003e \u003chttp://dbpedia.org/resource/Essex\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "West Tilbury",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/West_Tilbury",
        "seq": "34,46"
      },
      {
        "label": "Essex",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Essex",
        "seq": "3,8"
      }
    ],
    "id": "d30babe0e611482a8158fd9a37eabe35",
    "predicate mapping": [
      {
        "label": "Ceremonial County",
        "uri": "http://dbpedia.org/ontology/ceremonialCounty",
        "seq": "13,30",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What are the airlines whose hub airport is Los Angeles International Airport?",
    "SerialNumber": "2776",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/hubAirport\u003e \u003chttp://dbpedia.org/resource/Los_Angeles_International_Airport\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Airline\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Los Angeles International Airport",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Los_Angeles_International_Airport",
        "seq": "43,76"
      }
    ],
    "id": "1635d75bc91149baba817e3b941d67db",
    "predicate mapping": [
      {
        "label": "hub airport",
        "uri": "http://dbpedia.org/ontology/hubAirport",
        "seq": "28,39",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "airline",
        "uri": "http://dbpedia.org/ontology/Airline",
        "seq": "13,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Name the common nationality of Georgina Theodora Wood and akwasi Oppong Fosu ?",
    "SerialNumber": "2780",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Georgina_Theodora_Wood\u003e \u003chttp://dbpedia.org/ontology/nationality\u003e ?uri. \u003chttp://dbpedia.org/resource/Akwasi_Oppong_Fosu\u003e \u003chttp://dbpedia.org/ontology/nationality\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Georgina Theodora Wood",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Georgina_Theodora_Wood",
        "seq": "31,53"
      },
      {
        "label": "akwasi Oppong Fosu",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Akwasi_Oppong_Fosu",
        "seq": "58,76"
      }
    ],
    "id": "0e5778a4027c4c21981d48f093bad188",
    "predicate mapping": [
      {
        "label": "nationality",
        "uri": "http://dbpedia.org/ontology/nationality",
        "seq": "16,27",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "nationality",
        "uri": "http://dbpedia.org/ontology/nationality",
        "seq": "16,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the sovereign state of the Dafydd Benfras where Jasmine Lowson is also citizen of ?",
    "SerialNumber": "2783",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Dafydd_Benfras\u003e \u003chttp://dbpedia.org/ontology/country\u003e ?uri. \u003chttp://dbpedia.org/resource/Jasmine_Lowson\u003e \u003chttp://dbpedia.org/ontology/citizenship\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Dafydd Benfras",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Dafydd_Benfras",
        "seq": "35,49"
      },
      {
        "label": "Jasmine Lowson",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Jasmine_Lowson",
        "seq": "56,70"
      }
    ],
    "id": "bdf590911bf74c79ab82b8964a16d3d2",
    "predicate mapping": [
      {
        "label": "sovereign state",
        "uri": "http://dbpedia.org/ontology/country",
        "seq": "12,27",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "citizen of",
        "uri": "http://dbpedia.org/ontology/citizenship",
        "seq": "79,89",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What are the nicknames given to the characters of The Wolves of the Mercy Falls?",
    "SerialNumber": "2784",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/List_of_The_Wolves_of_Mercy_Falls_characters\u003e \u003chttp://dbpedia.org/property/nickname\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "The Wolves of the Mercy Falls",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/List_of_The_Wolves_of_Mercy_Falls_characters",
        "seq": "74,79"
      }
    ],
    "id": "f3a26b9c5fb84504821433f49a62d31c",
    "predicate mapping": [
      {
        "label": "nickname",
        "uri": "http://dbpedia.org/property/nickname",
        "seq": "13,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "101",
    "question": "How many people are buried in the Winchester Cathedral?",
    "SerialNumber": "2785",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/ontology/restingPlace\u003e \u003chttp://dbpedia.org/resource/Winchester_Cathedral\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Winchester Cathedral",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Winchester_Cathedral",
        "seq": "34,54"
      }
    ],
    "id": "7d87576a21984b83898106db13ed5ae6",
    "predicate mapping": [
      {
        "label": "buried in",
        "uri": "http://dbpedia.org/ontology/restingPlace",
        "seq": "20,29",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the colour of Red Marauder ?",
    "SerialNumber": "2786",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Red_Marauder\u003e \u003chttp://dbpedia.org/ontology/colour\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Red Marauder",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Red_Marauder",
        "seq": "22,34"
      }
    ],
    "id": "0ca53bf56bcb4b5f8a270a98c9c1c205",
    "predicate mapping": [
      {
        "label": "colour",
        "uri": "http://dbpedia.org/ontology/colour",
        "seq": "12,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "List the territory of Tonkin Campaign ?",
    "SerialNumber": "2787",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Tonkin_Campaign\u003e \u003chttp://dbpedia.org/ontology/territory\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Tonkin Campaign",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Tonkin_Campaign",
        "seq": "22,37"
      }
    ],
    "id": "853f4ee49ca64a6394f25dbcb0998674",
    "predicate mapping": [
      {
        "label": "territory",
        "uri": "http://dbpedia.org/ontology/territory",
        "seq": "9,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the route start of Capitol 400 ?",
    "SerialNumber": "2789",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Capitol_400\u003e \u003chttp://dbpedia.org/ontology/routeStart\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Capitol 400",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Capitol_400",
        "seq": "27,38"
      }
    ],
    "id": "2578f19d55494d34b4c2cb71b5c72674",
    "predicate mapping": [
      {
        "label": "route start",
        "uri": "http://dbpedia.org/ontology/routeStart",
        "seq": "12,23",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "What other awards have been given to Golden Globe winners?",
    "SerialNumber": "2791",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/award\u003e \u003chttp://dbpedia.org/resource/Golden_Globe_Award\u003e . ?x \u003chttp://dbpedia.org/property/awards\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Golden Globe",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Golden_Globe_Award",
        "seq": "37,49"
      }
    ],
    "id": "df2c6434c7714725be5766e707866ba8",
    "predicate mapping": [
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/award",
        "seq": "11,17",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards",
        "seq": "11,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "With which musical artist is the music group which sung Mind Blowin\u0027 related to ?  ",
    "SerialNumber": "2792",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Mind_Blowin\u0027_(Smooth_song)\u003e \u003chttp://dbpedia.org/ontology/musicalArtist\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/associatedMusicalArtist\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Mind Blowin\u0027",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Mind_Blowin\u0027_(Smooth_song)",
        "seq": "56,68"
      }
    ],
    "id": "5c9545bdb6fa49c694b4e18b35e6bf8b",
    "predicate mapping": [
      {
        "label": "musical artist",
        "uri": "http://dbpedia.org/ontology/musicalArtist",
        "seq": "11,25",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "musical artist",
        "uri": "http://dbpedia.org/ontology/associatedMusicalArtist",
        "seq": "11,25",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "List the universities with athletics NCAA Division I Football Bowl Subdivision ?",
    "SerialNumber": "2794",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/athletics\u003e \u003chttp://dbpedia.org/resource/NCAA_Division_I_Football_Bowl_Subdivision\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/University\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "NCAA Division I Football Bowl Subdivision",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/NCAA_Division_I_Football_Bowl_Subdivision",
        "seq": "37,78"
      }
    ],
    "id": "4bc850d823374bc79417ccaedbc85cc5",
    "predicate mapping": [
      {
        "label": "athletics",
        "uri": "http://dbpedia.org/property/athletics",
        "seq": "27,36",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "universities",
        "uri": "http://dbpedia.org/ontology/University",
        "seq": "9,21",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "In which races does Coneygree compete?",
    "SerialNumber": "2795",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Coneygree\u003e \u003chttp://dbpedia.org/property/race\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Coneygree",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Coneygree",
        "seq": "20,29"
      }
    ],
    "id": "ef89ea65fb1e475d87bfd0d41dc3df4b",
    "predicate mapping": [
      {
        "label": "race",
        "uri": "http://dbpedia.org/property/race",
        "seq": "9,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who was the designer of john madden Football \u002792 ?",
    "SerialNumber": "2796",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/John_Madden_Football_\u002792\u003e \u003chttp://dbpedia.org/property/designer\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "john madden Football \u002792",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/John_Madden_Football_\u002792",
        "seq": "24,48"
      }
    ],
    "id": "0e401e47838c4dba988eda6a6838e8fe",
    "predicate mapping": [
      {
        "label": "designer",
        "uri": "http://dbpedia.org/property/designer",
        "seq": "12,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "307",
    "question": "Which ancient country had capital as Nicomedia and History of Trier?",
    "SerialNumber": "2797",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/ontology/capital\u003e \u003chttp://dbpedia.org/resource/Nicomedia\u003e . ?uri \u003chttp://dbpedia.org/ontology/capital\u003e \u003chttp://dbpedia.org/resource/History_of_Trier\u003e . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Country\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Nicomedia",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Nicomedia",
        "seq": "37,46"
      },
      {
        "label": "History of Trier",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/History_of_Trier",
        "seq": "51,67"
      }
    ],
    "id": "3f8912118a034abd8267bab919afc00f",
    "predicate mapping": [
      {
        "label": "capital",
        "uri": "http://dbpedia.org/ontology/capital",
        "seq": "26,33",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "capital",
        "uri": "http://dbpedia.org/ontology/capital",
        "seq": "26,33",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/Country",
        "seq": "14,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Which sports are played in schools founded by Fr Almeida?",
    "SerialNumber": "2800",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/founder\u003e \u003chttp://dbpedia.org/resource/Fr._Almeida\u003e . ?x \u003chttp://dbpedia.org/ontology/sport\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/School\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Fr Almeida",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Fr._Almeida",
        "seq": "46,56"
      }
    ],
    "id": "49a721669f7342a6babb0b2875943b45",
    "predicate mapping": [
      {
        "label": "founded by",
        "uri": "http://dbpedia.org/property/founder",
        "seq": "35,45",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "sport",
        "uri": "http://dbpedia.org/ontology/sport",
        "seq": "6,11",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "school",
        "uri": "http://dbpedia.org/ontology/School",
        "seq": "27,33",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "In which state is the alma mater of Ben Ysursa located ?",
    "SerialNumber": "2802",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Ben_Ysursa\u003e \u003chttp://dbpedia.org/property/almaMater\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/state\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ben Ysursa",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ben_Ysursa",
        "seq": "36,46"
      }
    ],
    "id": "dc720b39588c4852a3086c7b106edad0",
    "predicate mapping": [
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/property/almaMater",
        "seq": "22,32",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "state",
        "uri": "http://dbpedia.org/ontology/state",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "405",
    "question": "Players from how many teams have participated in the National Hockey League?",
    "SerialNumber": "2803",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/league\u003e \u003chttp://dbpedia.org/resource/National_Hockey_League\u003e . ?x \u003chttp://dbpedia.org/ontology/team\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/SportsTeam\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "National Hockey League",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/National_Hockey_League",
        "seq": "53,75"
      }
    ],
    "id": "c1cec6b2504746e5b9e0a84cca31840d",
    "predicate mapping": [
      {
        "label": "League",
        "uri": "http://dbpedia.org/property/league",
        "seq": "69,75",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/team",
        "seq": "22,26",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/SportsTeam",
        "seq": "22,26",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "Who is on the board of Kate Spade and company?",
    "SerialNumber": "2806",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/board\u003e \u003chttp://dbpedia.org/resource/Kate_Spade_\u0026_Company\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Kate Spade and company",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Kate_Spade_\u0026_Company",
        "seq": "23,33"
      }
    ],
    "id": "009195815bfe4b2da02ac6c1f612ce32",
    "predicate mapping": [
      {
        "label": "board",
        "uri": "http://dbpedia.org/ontology/board",
        "seq": "14,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Which awards have been given to scientists that graduated from NKU athens?",
    "SerialNumber": "2807",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/almaMater\u003e \u003chttp://dbpedia.org/resource/National_and_Kapodistrian_University_of_Athens\u003e . ?x \u003chttp://dbpedia.org/ontology/award\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Scientist\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "NKU athens",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/National_and_Kapodistrian_University_of_Athens",
        "seq": "63,66"
      }
    ],
    "id": "76434a3de4eb4e23946721c8976f33eb",
    "predicate mapping": [
      {
        "label": "graduated from",
        "uri": "http://dbpedia.org/ontology/almaMater",
        "seq": "48,62",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/award",
        "seq": "6,12",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "scientist",
        "uri": "http://dbpedia.org/ontology/Scientist",
        "seq": "32,41",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the club of Julie Hastings ?",
    "SerialNumber": "2809",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Julie_Hastings\u003e \u003chttp://dbpedia.org/ontology/club\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Julie Hastings",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Julie_Hastings",
        "seq": "17,31"
      }
    ],
    "id": "8d63fe63027947458a867a5902c1c0e0",
    "predicate mapping": [
      {
        "label": "club",
        "uri": "http://dbpedia.org/ontology/club",
        "seq": "9,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "What is the death location of the scientist who is the known authority of Hallopus ?",
    "SerialNumber": "2810",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Hallopus\u003e \u003chttp://dbpedia.org/ontology/binomialAuthority\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/deathPlace\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Scientist\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Hallopus",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Hallopus",
        "seq": "74,82"
      }
    ],
    "id": "0af37d7da2d44dad82fdc851c7e9c38f",
    "predicate mapping": [
      {
        "label": "authority",
        "uri": "http://dbpedia.org/ontology/binomialAuthority",
        "seq": "61,70",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "death location",
        "uri": "http://dbpedia.org/ontology/deathPlace",
        "seq": "12,26",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "scientist",
        "uri": "http://dbpedia.org/ontology/Scientist",
        "seq": "34,43",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "7",
    "question": "Whose creators are Jerry Seinfeld and Larry David?",
    "SerialNumber": "2812",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/ontology/creator\u003e \u003chttp://dbpedia.org/resource/Jerry_Seinfeld\u003e . ?uri \u003chttp://dbpedia.org/ontology/creator\u003e \u003chttp://dbpedia.org/resource/Larry_David\u003e . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jerry Seinfeld",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Jerry_Seinfeld",
        "seq": "19,33"
      },
      {
        "label": "Larry David",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Larry_David",
        "seq": "38,49"
      }
    ],
    "id": "536bed978e9d4db1bc5789baf5d939d0",
    "predicate mapping": [
      {
        "label": "creators",
        "uri": "http://dbpedia.org/ontology/creator",
        "seq": "6,14",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "creators",
        "uri": "http://dbpedia.org/ontology/creator",
        "seq": "6,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "Who are the people who played for San Francisco 49ers?",
    "SerialNumber": "2813",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/team\u003e \u003chttp://dbpedia.org/resource/San_Francisco_49ers\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "San Francisco 49ers",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/San_Francisco_49ers",
        "seq": "34,53"
      }
    ],
    "id": "3aab103841c348e199c10879fa2b70d5",
    "predicate mapping": [
      {
        "label": "played for",
        "uri": "http://dbpedia.org/ontology/team",
        "seq": "23,33",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "What is the Nickname of the school where Jeff Hornacek studied  ?",
    "SerialNumber": "2814",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Jeff_Hornacek\u003e \u003chttp://dbpedia.org/property/highschool\u003e ?x . ?x \u003chttp://dbpedia.org/property/nickname\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/School\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jeff Hornacek",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Jeff_Hornacek",
        "seq": "41,54"
      }
    ],
    "id": "bb90c58c414a4f819154ecb33586121d",
    "predicate mapping": [
      {
        "label": "school",
        "uri": "http://dbpedia.org/property/highschool",
        "seq": "28,34",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "Nickname",
        "uri": "http://dbpedia.org/property/nickname",
        "seq": "12,20",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "school",
        "uri": "http://dbpedia.org/ontology/School",
        "seq": "28,34",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Which artist married to Lee Krasner?",
    "SerialNumber": "2815",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/spouse\u003e \u003chttp://dbpedia.org/resource/Lee_Krasner\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Artist\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Lee Krasner",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Lee_Krasner",
        "seq": "24,35"
      }
    ],
    "id": "dc3403a37b77457aafadb0b90e8ed62a",
    "predicate mapping": [
      {
        "label": "married to",
        "uri": "http://dbpedia.org/property/spouse",
        "seq": "13,23",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "artist",
        "uri": "http://dbpedia.org/ontology/Artist",
        "seq": "6,12",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "311",
    "question": "Name all the doctoral student of the scientist who also supervised Mary Ainsworth ?",
    "SerialNumber": "2818",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/doctoralStudents\u003e \u003chttp://dbpedia.org/resource/Mary_Ainsworth\u003e . ?x \u003chttp://dbpedia.org/property/doctoralStudents\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Scientist\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Mary Ainsworth",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Mary_Ainsworth",
        "seq": "67,81"
      }
    ],
    "id": "a2bb1b6a34864a0fa79b65de6dcbe19b",
    "predicate mapping": [
      {
        "label": "doctoral student",
        "uri": "http://dbpedia.org/property/doctoralStudents",
        "seq": "13,29",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "doctoral student",
        "uri": "http://dbpedia.org/property/doctoralStudents",
        "seq": "13,29",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "scientist",
        "uri": "http://dbpedia.org/ontology/Scientist",
        "seq": "37,46",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "7",
    "question": "Who was in youth clubs of FC Barcelona and Newell\u0027s Old Boys?",
    "SerialNumber": "2819",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/property/youthclubs\u003e \u003chttp://dbpedia.org/resource/FC_Barcelona\u003e . ?uri \u003chttp://dbpedia.org/property/youthclubs\u003e \u003chttp://dbpedia.org/resource/Newell\u0027s_Old_Boys\u003e . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "FC Barcelona",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/FC_Barcelona",
        "seq": "26,38"
      },
      {
        "label": "Newell\u0027s Old Boys",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Newell\u0027s_Old_Boys",
        "seq": "43,60"
      }
    ],
    "id": "5edb220b2251465ba6759abfe2fe6e4f",
    "predicate mapping": [
      {
        "label": "youth clubs",
        "uri": "http://dbpedia.org/property/youthclubs",
        "seq": "11,22",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "youth clubs",
        "uri": "http://dbpedia.org/property/youthclubs",
        "seq": "11,22",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which river\u0027s mouth is located in Gulf of Mexico and has source location as Itasca State Park ?",
    "SerialNumber": "2820",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/riverMouth\u003e \u003chttp://dbpedia.org/resource/Gulf_of_Mexico\u003e . ?uri \u003chttp://dbpedia.org/property/sourceLocation\u003e \u003chttp://dbpedia.org/resource/Itasca_State_Park\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/River\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Gulf of Mexico",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Gulf_of_Mexico",
        "seq": "34,48"
      },
      {
        "label": "Itasca State Park",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Itasca_State_Park",
        "seq": "76,93"
      }
    ],
    "id": "288a095b6d584ca9be2d37ee510ddb4f",
    "predicate mapping": [
      {
        "label": "mouth",
        "uri": "http://dbpedia.org/ontology/riverMouth",
        "seq": "14,19",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "source location",
        "uri": "http://dbpedia.org/property/sourceLocation",
        "seq": "57,72",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River",
        "seq": "6,11",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "Whose youth clubs used to participate in Argentine Primera Division?",
    "SerialNumber": "2821",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/league\u003e \u003chttp://dbpedia.org/resource/Argentine_Primera_División\u003e . ?uri \u003chttp://dbpedia.org/property/youthclubs\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Argentine Primera Division",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Argentine_Primera_División",
        "seq": "41,50"
      }
    ],
    "id": "948bff1369c74f2e80829f55fe947179",
    "predicate mapping": [
      {
        "label": "Division",
        "uri": "http://dbpedia.org/property/league",
        "seq": "59,67",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "youth clubs",
        "uri": "http://dbpedia.org/property/youthclubs",
        "seq": "6,17",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Which prime ministers were served by the governor who appointed Murray Gleeson?",
    "SerialNumber": "2822",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Murray_Gleeson\u003e \u003chttp://dbpedia.org/ontology/appointer\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/primeMinister\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Murray Gleeson",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Murray_Gleeson",
        "seq": "64,78"
      }
    ],
    "id": "8a54f285292b4890929cead57276b9b1",
    "predicate mapping": [
      {
        "label": "appointed",
        "uri": "http://dbpedia.org/ontology/appointer",
        "seq": "54,63",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "prime minister",
        "uri": "http://dbpedia.org/ontology/primeMinister",
        "seq": "6,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What are the movies whose music composer is Akira Ifukube?",
    "SerialNumber": "2823",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/musicComposer\u003e \u003chttp://dbpedia.org/resource/Akira_Ifukube\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Akira Ifukube",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Akira_Ifukube",
        "seq": "44,57"
      }
    ],
    "id": "632fe10298ad4842bb28ca3404eec4b1",
    "predicate mapping": [
      {
        "label": "music composer",
        "uri": "http://dbpedia.org/ontology/musicComposer",
        "seq": "26,40",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "13,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which adminstrative region of Lawrence F. Cafero is also the resting place of Samuel Keeler ?",
    "SerialNumber": "2824",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Lawrence_F._Cafero\u003e \u003chttp://dbpedia.org/ontology/region\u003e ?uri. \u003chttp://dbpedia.org/resource/Samuel_Keeler\u003e \u003chttp://dbpedia.org/ontology/restingPlace\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Lawrence F. Cafero",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Lawrence_F._Cafero",
        "seq": "30,48"
      },
      {
        "label": "Samuel Keeler",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Samuel_Keeler",
        "seq": "78,91"
      }
    ],
    "id": "10e015b4b65b4de88ae622de46899157",
    "predicate mapping": [
      {
        "label": "region",
        "uri": "http://dbpedia.org/ontology/region",
        "seq": "20,26",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "resting place",
        "uri": "http://dbpedia.org/ontology/restingPlace",
        "seq": "61,74",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Who appointed both John Drayton and William Clark to their respective offices?",
    "SerialNumber": "2825",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/John_Drayton\u003e \u003chttp://dbpedia.org/property/appointer\u003e ?uri. \u003chttp://dbpedia.org/resource/William_Clark\u003e \u003chttp://dbpedia.org/property/appointer\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "John Drayton",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/John_Drayton",
        "seq": "19,31"
      },
      {
        "label": "William Clark",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/William_Clark",
        "seq": "36,49"
      }
    ],
    "id": "51652f5c18314876bfd28f3a00e53203",
    "predicate mapping": [
      {
        "label": "appointed",
        "uri": "http://dbpedia.org/property/appointer",
        "seq": "4,13",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "appointed",
        "uri": "http://dbpedia.org/property/appointer",
        "seq": "4,13",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the mouth mountain of Current River (Missouri) ?",
    "SerialNumber": "2826",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Current_River_(Missouri)\u003e \u003chttp://dbpedia.org/ontology/mouthMountain\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Current River",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Current_River_(Missouri)",
        "seq": "30,43"
      }
    ],
    "id": "0e126d0d57d94ac59b74706ee95d40ef",
    "predicate mapping": [
      {
        "label": "mouth mountain",
        "uri": "http://dbpedia.org/ontology/mouthMountain",
        "seq": "12,26",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "Who all did their high school in Denbigh high School?",
    "SerialNumber": "2827",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/highSchool\u003e \u003chttp://dbpedia.org/resource/Denbigh_High_School_(Newport_News,_Virginia)\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Denbigh high School",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Denbigh_High_School_(Newport_News,_Virginia)",
        "seq": "33,52"
      }
    ],
    "id": "dc0fc69c4c2449c4a1a5b337f699d91c",
    "predicate mapping": [
      {
        "label": "high school",
        "uri": "http://dbpedia.org/property/highSchool",
        "seq": "18,29",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Is Azerbaijan the membership of European Go Federation?",
    "SerialNumber": "2831",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/European_Go_Federation\u003e \u003chttp://dbpedia.org/property/membership\u003e \u003chttp://dbpedia.org/resource/Azerbaijan\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "European Go Federation",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/European_Go_Federation",
        "seq": "32,54"
      },
      {
        "label": "Azerbaijan",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Azerbaijan",
        "seq": "3,13"
      }
    ],
    "id": "8e279a9971084cb08ecf32bc378053d2",
    "predicate mapping": [
      {
        "label": "membership",
        "uri": "http://dbpedia.org/property/membership",
        "seq": "18,28",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "Who debuted their career in a team coached by Chip Kelly?",
    "SerialNumber": "2832",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/coach\u003e \u003chttp://dbpedia.org/resource/Chip_Kelly\u003e . ?uri \u003chttp://dbpedia.org/ontology/debutTeam\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Chip Kelly",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Chip_Kelly",
        "seq": "46,56"
      }
    ],
    "id": "00a5ab1c4748474ab4f686de85c41cb9",
    "predicate mapping": [
      {
        "label": "coach",
        "uri": "http://dbpedia.org/property/coach",
        "seq": "35,40",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "debuted",
        "uri": "http://dbpedia.org/ontology/debutTeam",
        "seq": "4,11",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the religious affiliation of Hong Kong Taoist Association Tang Hin Memorial Secondary School ?",
    "SerialNumber": "2834",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Hong_Kong_Taoist_Association_Tang_Hin_Memorial_Secondary_School\u003e \u003chttp://dbpedia.org/property/religiousAffiliation\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Hong Kong Taoist Association Tang Hin Memorial Secondary School",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Hong_Kong_Taoist_Association_Tang_Hin_Memorial_Secondary_School",
        "seq": "37,100"
      }
    ],
    "id": "b846e29b2bb74db29610cdbbbc7b1740",
    "predicate mapping": [
      {
        "label": "religious affiliation",
        "uri": "http://dbpedia.org/property/religiousAffiliation",
        "seq": "12,33",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Did Joe Namath did his highschool in Beaver Falls High School?",
    "SerialNumber": "2835",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Joe_Namath\u003e \u003chttp://dbpedia.org/property/highSchool\u003e \u003chttp://dbpedia.org/resource/Beaver_Falls_High_School\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Joe Namath",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Joe_Namath",
        "seq": "4,14"
      },
      {
        "label": "Beaver Falls High School",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Beaver_Falls_High_School",
        "seq": "37,61"
      }
    ],
    "id": "cbfdaaad592b4ef7b08d5ad4d0d0ac09",
    "predicate mapping": [
      {
        "label": "High School",
        "uri": "http://dbpedia.org/property/highSchool",
        "seq": "50,61",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Which work is both Neil Cross and Lars Pearson both known for ?",
    "SerialNumber": "2836",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Neil_Cross\u003e \u003chttp://dbpedia.org/ontology/notableWork\u003e ?uri. \u003chttp://dbpedia.org/resource/Lars_Pearson\u003e \u003chttp://dbpedia.org/ontology/notableWork\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Neil Cross",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Neil_Cross",
        "seq": "19,29"
      },
      {
        "label": "Lars Pearson",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Lars_Pearson",
        "seq": "34,46"
      }
    ],
    "id": "bedb3683384446c4af8fa5348c967363",
    "predicate mapping": [
      {
        "label": "work",
        "uri": "http://dbpedia.org/ontology/notableWork",
        "seq": "6,10",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "work",
        "uri": "http://dbpedia.org/ontology/notableWork",
        "seq": "6,10",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which predecessor of the PlayStation 4 is also the developer of Oddworld: Munch\u0027s Oddysee?",
    "SerialNumber": "2838",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/PlayStation_4\u003e \u003chttp://dbpedia.org/property/predecessor\u003e ?uri. \u003chttp://dbpedia.org/resource/Oddworld:_Munch\u0027s_Oddysee\u003e \u003chttp://dbpedia.org/ontology/developer\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "PlayStation 4",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/PlayStation_4",
        "seq": "25,38"
      },
      {
        "label": "Oddworld: Munch\u0027s Oddysee",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Oddworld:_Munch\u0027s_Oddysee",
        "seq": "64,89"
      }
    ],
    "id": "9f4d4fc45aaf46dda67ad836f45ecb66",
    "predicate mapping": [
      {
        "label": "predecessor",
        "uri": "http://dbpedia.org/property/predecessor",
        "seq": "6,17",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "developer",
        "uri": "http://dbpedia.org/ontology/developer",
        "seq": "51,60",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Name few movies directed by Tim Burton ?",
    "SerialNumber": "2839",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/director\u003e \u003chttp://dbpedia.org/resource/Tim_Burton\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Tim Burton",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Tim_Burton",
        "seq": "28,38"
      }
    ],
    "id": "d3d3ee30a3314e28bcebf4cbac9d53e8",
    "predicate mapping": [
      {
        "label": "directed",
        "uri": "http://dbpedia.org/property/director",
        "seq": "16,24",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What are the awards won by the producer of Puss in Boots (film)?",
    "SerialNumber": "2842",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Puss_in_Boots_(1922_film)\u003e \u003chttp://dbpedia.org/ontology/producer\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/award\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Puss in Boots",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Puss_in_Boots_(1922_film)",
        "seq": "43,56"
      }
    ],
    "id": "0f04c3c74476410791c8a43465ba6918",
    "predicate mapping": [
      {
        "label": "producer",
        "uri": "http://dbpedia.org/ontology/producer",
        "seq": "31,39",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/award",
        "seq": "13,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Name the college of the Allama Matthews which also has affiliation with  Monroe Carell Jr. Children\u0027s Hospital at Vanderbilt",
    "SerialNumber": "2843",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Allama_Matthews\u003e \u003chttp://dbpedia.org/ontology/college\u003e ?uri. \u003chttp://dbpedia.org/resource/Monroe_Carell_Jr._Children\u0027s_Hospital_at_Vanderbilt\u003e \u003chttp://dbpedia.org/property/affiliation\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Allama Matthews",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Allama_Matthews",
        "seq": "24,39"
      },
      {
        "label": "Monroe Carell Jr. Children\u0027s Hospital at Vanderbilt",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Monroe_Carell_Jr._Children\u0027s_Hospital_at_Vanderbilt",
        "seq": "73,124"
      }
    ],
    "id": "f0ce6eff38b647919c395acd2a7f7451",
    "predicate mapping": [
      {
        "label": "college",
        "uri": "http://dbpedia.org/ontology/college",
        "seq": "9,16",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "affiliation",
        "uri": "http://dbpedia.org/property/affiliation",
        "seq": "55,66",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the debut team of Butch Metzger ?",
    "SerialNumber": "2844",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Butch_Metzger\u003e \u003chttp://dbpedia.org/ontology/debutTeam\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Butch Metzger",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Butch_Metzger",
        "seq": "23,36"
      }
    ],
    "id": "02172a58699f46568edf1ba7690b144d",
    "predicate mapping": [
      {
        "label": "debut team",
        "uri": "http://dbpedia.org/ontology/debutTeam",
        "seq": "9,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Name the common distributing label of the Chinga Chang Records and StandBy Records ?",
    "SerialNumber": "2845",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Chinga_Chang_Records\u003e \u003chttp://dbpedia.org/ontology/distributingLabel\u003e ?uri. \u003chttp://dbpedia.org/resource/StandBy_Records\u003e \u003chttp://dbpedia.org/ontology/distributingLabel\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Chinga Chang Records",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Chinga_Chang_Records",
        "seq": "42,62"
      },
      {
        "label": "StandBy Records",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/StandBy_Records",
        "seq": "67,82"
      }
    ],
    "id": "e91032d570294b618d1f2611d193276f",
    "predicate mapping": [
      {
        "label": "distributing label",
        "uri": "http://dbpedia.org/ontology/distributingLabel",
        "seq": "16,34",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "distributing label",
        "uri": "http://dbpedia.org/ontology/distributingLabel",
        "seq": "16,34",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "What are some relatives of the spouse of Uncle henry from Oz?",
    "SerialNumber": "2846",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/spouse\u003e \u003chttp://dbpedia.org/resource/Uncle_Henry_(Oz)\u003e . ?uri \u003chttp://dbpedia.org/ontology/relative\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Uncle henry",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Uncle_Henry_(Oz)",
        "seq": "41,52"
      }
    ],
    "id": "9e78a9d215f249178b9f58cab8cb0fd5",
    "predicate mapping": [
      {
        "label": "spouse",
        "uri": "http://dbpedia.org/ontology/spouse",
        "seq": "31,37",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "relative",
        "uri": "http://dbpedia.org/ontology/relative",
        "seq": "14,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which line of the Vadodara Junction railway station is the route end of Mumbai Vadodara Expressway ?",
    "SerialNumber": "2847",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Mumbai_Vadodara_Expressway\u003e \u003chttp://dbpedia.org/ontology/routeEnd\u003e ?uri. \u003chttp://dbpedia.org/resource/Vadodara_Junction_railway_station\u003e \u003chttp://dbpedia.org/property/line\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Mumbai Vadodara Expressway",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Mumbai_Vadodara_Expressway",
        "seq": "72,98"
      },
      {
        "label": "Vadodara Junction railway station",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Vadodara_Junction_railway_station",
        "seq": "18,51"
      }
    ],
    "id": "784c77a5d9a64f6fbb7878e159ba6549",
    "predicate mapping": [
      {
        "label": "route end",
        "uri": "http://dbpedia.org/ontology/routeEnd",
        "seq": "59,68",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "line",
        "uri": "http://dbpedia.org/property/line",
        "seq": "6,10",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "In which racing championships did Bobby Beasley and Martin Molony participate?",
    "SerialNumber": "2849",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Bobby_Beasley\u003e \u003chttp://dbpedia.org/ontology/race\u003e ?uri. \u003chttp://dbpedia.org/resource/Martin_Molony\u003e \u003chttp://dbpedia.org/ontology/race\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Bobby Beasley",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Bobby_Beasley",
        "seq": "34,47"
      },
      {
        "label": "Martin Molony",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Martin_Molony",
        "seq": "52,65"
      }
    ],
    "id": "87b5dbafb34246f28c50d4db01d2f791",
    "predicate mapping": [
      {
        "label": "racing",
        "uri": "http://dbpedia.org/ontology/race",
        "seq": "9,15",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "racing",
        "uri": "http://dbpedia.org/ontology/race",
        "seq": "9,15",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the ground of Al-Rayan SC ?",
    "SerialNumber": "2853",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Al-Rayan_SC\u003e \u003chttp://dbpedia.org/ontology/ground\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Al-Rayan SC",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Al-Rayan_SC",
        "seq": "19,30"
      }
    ],
    "id": "6119ae45be054c5b8898d10978eae65d",
    "predicate mapping": [
      {
        "label": "ground",
        "uri": "http://dbpedia.org/ontology/ground",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "Who is the owner of the bank which owns Bloomberg Radio?",
    "SerialNumber": "2854",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Bloomberg_Radio\u003e \u003chttp://dbpedia.org/ontology/owner\u003e ?x . ?x \u003chttp://dbpedia.org/property/owner\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Bank\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Bloomberg Radio",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Bloomberg_Radio",
        "seq": "40,55"
      }
    ],
    "id": "9776c037c6cd401c9c3234960d164750",
    "predicate mapping": [
      {
        "label": "owner",
        "uri": "http://dbpedia.org/ontology/owner",
        "seq": "11,16",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "owner",
        "uri": "http://dbpedia.org/property/owner",
        "seq": "11,16",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "bank",
        "uri": "http://dbpedia.org/ontology/Bank",
        "seq": "24,28",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Is Another Lonely Night in New York by the musical band Robin Gibb?",
    "SerialNumber": "2856",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Another_Lonely_Night_in_New_York\u003e \u003chttp://dbpedia.org/ontology/musicalBand\u003e \u003chttp://dbpedia.org/resource/Robin_Gibb\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Another Lonely Night in New York",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Another_Lonely_Night_in_New_York",
        "seq": "3,35"
      },
      {
        "label": "Robin Gibb",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Robin_Gibb",
        "seq": "56,66"
      }
    ],
    "id": "821d1baa1d594333a5e79d50c16efcb4",
    "predicate mapping": [
      {
        "label": "musical band",
        "uri": "http://dbpedia.org/ontology/musicalBand",
        "seq": "43,55",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "List all the developers of the Oddworld series?",
    "SerialNumber": "2857",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/series\u003e \u003chttp://dbpedia.org/resource/Oddworld\u003e . ?x \u003chttp://dbpedia.org/ontology/developer\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Oddworld",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Oddworld",
        "seq": "31,39"
      }
    ],
    "id": "e60963b2ce1644e5859606046cdd4e4a",
    "predicate mapping": [
      {
        "label": "series",
        "uri": "http://dbpedia.org/ontology/series",
        "seq": "40,46",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "developer",
        "uri": "http://dbpedia.org/ontology/developer",
        "seq": "13,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "To which political party does the successor of Radhabinod Koijam belong?",
    "SerialNumber": "2858",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Radhabinod_Koijam\u003e \u003chttp://dbpedia.org/property/successor\u003e ?x . ?x \u003chttp://dbpedia.org/property/party\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Radhabinod Koijam",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Radhabinod_Koijam",
        "seq": "47,64"
      }
    ],
    "id": "7b7798e7120d496ba5b75daea48b5038",
    "predicate mapping": [
      {
        "label": "successor",
        "uri": "http://dbpedia.org/property/successor",
        "seq": "34,43",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "political party",
        "uri": "http://dbpedia.org/property/party",
        "seq": "9,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which builder of Edwin Andrews Air Base isalso place of birth of the Akinoumi Setsuo ?",
    "SerialNumber": "2859",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Edwin_Andrews_Air_Base\u003e \u003chttp://dbpedia.org/ontology/builder\u003e ?uri. \u003chttp://dbpedia.org/resource/Akinoumi_Setsuo\u003e \u003chttp://dbpedia.org/property/placeOfBirth\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Edwin Andrews Air Base",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Edwin_Andrews_Air_Base",
        "seq": "17,39"
      },
      {
        "label": "Akinoumi Setsuo",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Akinoumi_Setsuo",
        "seq": "69,84"
      }
    ],
    "id": "d9360f5cca484dbbb1187e1348211288",
    "predicate mapping": [
      {
        "label": "builder",
        "uri": "http://dbpedia.org/ontology/builder",
        "seq": "6,13",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "place of birth",
        "uri": "http://dbpedia.org/property/placeOfBirth",
        "seq": "47,61",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "is ANYway in the Quack album?",
    "SerialNumber": "2860",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/ANYway\u003e \u003chttp://dbpedia.org/ontology/album\u003e \u003chttp://dbpedia.org/resource/Quack_(album)\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "ANYway",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/ANYway",
        "seq": "3,9"
      },
      {
        "label": "Quack",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Quack_(album)",
        "seq": "17,22"
      }
    ],
    "id": "ff7902dec19b42b6b2c0de2b2ddef72c",
    "predicate mapping": [
      {
        "label": "album",
        "uri": "http://dbpedia.org/ontology/album",
        "seq": "23,28",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "What is a common ingredient used in boyt Blodpalt and Kaszanka ?",
    "SerialNumber": "2862",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Blodpalt\u003e \u003chttp://dbpedia.org/ontology/ingredient\u003e ?uri. \u003chttp://dbpedia.org/resource/Kaszanka\u003e \u003chttp://dbpedia.org/ontology/ingredient\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Blodpalt",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Blodpalt",
        "seq": "41,49"
      },
      {
        "label": "Kaszanka",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Kaszanka",
        "seq": "54,62"
      }
    ],
    "id": "0225eb44cdbd4c7891e3d609bc8534cf",
    "predicate mapping": [
      {
        "label": "ingredient",
        "uri": "http://dbpedia.org/ontology/ingredient",
        "seq": "17,27",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "ingredient",
        "uri": "http://dbpedia.org/ontology/ingredient",
        "seq": "17,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "111",
    "question": "Give me the count of tenants of the stadia whose one of the tenants is Toronto Furies?",
    "SerialNumber": "2869",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/tenants\u003e \u003chttp://dbpedia.org/resource/Toronto_Furies\u003e . ?x \u003chttp://dbpedia.org/property/tenants\u003e ?uri }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Toronto Furies",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Toronto_Furies",
        "seq": "71,85"
      }
    ],
    "id": "7901e474e8734da4b709fb1cae144d23",
    "predicate mapping": [
      {
        "label": "tenants",
        "uri": "http://dbpedia.org/property/tenants",
        "seq": "21,28",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "tenants",
        "uri": "http://dbpedia.org/property/tenants",
        "seq": "21,28",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the serving railway line of Warwick railway station, Perth ?",
    "SerialNumber": "2871",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Warwick_railway_station,_Perth\u003e \u003chttp://dbpedia.org/ontology/servingRailwayLine\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Warwick railway station",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Warwick_railway_station,_Perth",
        "seq": "36,59"
      }
    ],
    "id": "2da5041948fd42298c8b577eb241332c",
    "predicate mapping": [
      {
        "label": "serving railway line",
        "uri": "http://dbpedia.org/ontology/servingRailwayLine",
        "seq": "12,32",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Who wrote the subsequent work of One Day at a Time (Em\u0027s Version) ?",
    "SerialNumber": "2873",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/One_Day_at_a_Time_(Em\u0027s_Version)\u003e \u003chttp://dbpedia.org/ontology/subsequentWork\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/writer\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "One Day at a Time (Em\u0027s Version)",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/One_Day_at_a_Time_(Em\u0027s_Version)",
        "seq": "33,65"
      }
    ],
    "id": "f6576ee287fd4a29b03077da31e64c44",
    "predicate mapping": [
      {
        "label": "subsequent work",
        "uri": "http://dbpedia.org/ontology/subsequentWork",
        "seq": "14,29",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "wrote",
        "uri": "http://dbpedia.org/ontology/writer",
        "seq": "4,9",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who is the architect of Red House, London ?",
    "SerialNumber": "2875",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Red_House,_London\u003e \u003chttp://dbpedia.org/property/architect\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Red House, London",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Red_House,_London",
        "seq": "24,41"
      }
    ],
    "id": "9464454dd9bc489387bee11d1e7cd022",
    "predicate mapping": [
      {
        "label": "architect",
        "uri": "http://dbpedia.org/property/architect",
        "seq": "11,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "111",
    "question": "Count the number of tenants whose one of the tenant is Toronto Phantoms ?",
    "SerialNumber": "2876",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/tenant\u003e \u003chttp://dbpedia.org/resource/Toronto_Phantoms\u003e . ?x \u003chttp://dbpedia.org/ontology/tenant\u003e ?uri }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Toronto Phantoms",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Toronto_Phantoms",
        "seq": "55,71"
      }
    ],
    "id": "3dcb4c11af2d4976b986ba6a9a9c1a47",
    "predicate mapping": [
      {
        "label": "tenant",
        "uri": "http://dbpedia.org/ontology/tenant",
        "seq": "20,26",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "tenant",
        "uri": "http://dbpedia.org/ontology/tenant",
        "seq": "20,26",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Which company manufactured Delta III?",
    "SerialNumber": "2878",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Delta_III\u003e \u003chttp://dbpedia.org/ontology/manufacturer\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Delta III",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Delta_III",
        "seq": "27,36"
      }
    ],
    "id": "73d555e5b42f4fc1bb26a2e517a69e83",
    "predicate mapping": [
      {
        "label": "manufactured",
        "uri": "http://dbpedia.org/ontology/manufacturer",
        "seq": "14,26",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the river whose mouth mountain is Essex and river mouth is North Sea?",
    "SerialNumber": "2880",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/mouthMountain\u003e \u003chttp://dbpedia.org/resource/Essex\u003e . ?uri \u003chttp://dbpedia.org/ontology/riverMouth\u003e \u003chttp://dbpedia.org/resource/North_Sea\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/River\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Essex",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Essex",
        "seq": "39,44"
      },
      {
        "label": "North Sea",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/North_Sea",
        "seq": "64,73"
      }
    ],
    "id": "491d86b9710241a78858ac924c0174bb",
    "predicate mapping": [
      {
        "label": "mouth mountain",
        "uri": "http://dbpedia.org/ontology/mouthMountain",
        "seq": "21,35",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "river mouth",
        "uri": "http://dbpedia.org/ontology/riverMouth",
        "seq": "49,60",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who is the owner of Bloomberg L.P. ?",
    "SerialNumber": "2881",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Bloomberg_L.P.\u003e \u003chttp://dbpedia.org/property/owner\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Bloomberg L.P.",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Bloomberg_L.P.",
        "seq": "20,34"
      }
    ],
    "id": "dac617c2755144f597bf2de202f99777",
    "predicate mapping": [
      {
        "label": "owner",
        "uri": "http://dbpedia.org/property/owner",
        "seq": "11,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "List the houses of Parliament of India ?",
    "SerialNumber": "2882",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Parliament_of_India\u003e \u003chttp://dbpedia.org/property/houses\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Parliament of India",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Parliament_of_India",
        "seq": "19,38"
      }
    ],
    "id": "02d3e516190a49e19e0908eb2fa74bfe",
    "predicate mapping": [
      {
        "label": "houses",
        "uri": "http://dbpedia.org/property/houses",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Richard Gant did a guest appearance on which series?",
    "SerialNumber": "2883",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/guests\u003e \u003chttp://dbpedia.org/resource/Richard_Gant\u003e . ?x \u003chttp://dbpedia.org/ontology/series\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Richard Gant",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Richard_Gant",
        "seq": "0,12"
      }
    ],
    "id": "f397d4e121954f05be803892461d82f9",
    "predicate mapping": [
      {
        "label": "guest",
        "uri": "http://dbpedia.org/property/guests",
        "seq": "19,24",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "series",
        "uri": "http://dbpedia.org/ontology/series",
        "seq": "45,51",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What is the home stadium of the soccer club seasons whose chairman is Merritt Paulson?",
    "SerialNumber": "2884",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/chairman\u003e \u003chttp://dbpedia.org/resource/Merritt_Paulson\u003e . ?x \u003chttp://dbpedia.org/ontology/homeStadium\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/SoccerClubSeason\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Merritt Paulson",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Merritt_Paulson",
        "seq": "70,85"
      }
    ],
    "id": "f2231eb580854604aa08fc3651038117",
    "predicate mapping": [
      {
        "label": "chairman",
        "uri": "http://dbpedia.org/property/chairman",
        "seq": "58,66",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "home stadium",
        "uri": "http://dbpedia.org/ontology/homeStadium",
        "seq": "12,24",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "soccer club season",
        "uri": "http://dbpedia.org/ontology/SoccerClubSeason",
        "seq": "32,50",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the government type of Kumta ?",
    "SerialNumber": "2885",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Kumta\u003e \u003chttp://dbpedia.org/property/governmentType\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Kumta",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Kumta",
        "seq": "31,36"
      }
    ],
    "id": "3379d870f89c4e929e3ac6e1ab1a1301",
    "predicate mapping": [
      {
        "label": "government type",
        "uri": "http://dbpedia.org/property/governmentType",
        "seq": "12,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What is the protected area whose nearest city is Kenya?",
    "SerialNumber": "2887",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/nearestCity\u003e \u003chttp://dbpedia.org/resource/Kenya\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/ProtectedArea\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Kenya",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Kenya",
        "seq": "49,54"
      }
    ],
    "id": "dd2d9d77fea94fe9ad8bf7478cb2bc1d",
    "predicate mapping": [
      {
        "label": "nearest city",
        "uri": "http://dbpedia.org/ontology/nearestCity",
        "seq": "33,45",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "protected area",
        "uri": "http://dbpedia.org/ontology/ProtectedArea",
        "seq": "12,26",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Is Anne Hidalgo the mayor of Paris?",
    "SerialNumber": "2889",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Paris\u003e \u003chttp://dbpedia.org/ontology/mayor\u003e \u003chttp://dbpedia.org/resource/Anne_Hidalgo\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Paris",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Paris",
        "seq": "29,34"
      },
      {
        "label": "Anne Hidalgo",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Anne_Hidalgo",
        "seq": "3,15"
      }
    ],
    "id": "7c64644ddbc24062b9a8133945fb5e7f",
    "predicate mapping": [
      {
        "label": "mayor",
        "uri": "http://dbpedia.org/ontology/mayor",
        "seq": "20,25",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Name the driver who was at pole in 1997 Canadian Grand Prix and also 1994 Spanish Grand Prix ?",
    "SerialNumber": "2890",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/1997_Canadian_Grand_Prix\u003e \u003chttp://dbpedia.org/property/poleDriver\u003e ?uri. \u003chttp://dbpedia.org/resource/1994_Spanish_Grand_Prix\u003e \u003chttp://dbpedia.org/ontology/poleDriver\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "1997 Canadian Grand Prix",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/1997_Canadian_Grand_Prix",
        "seq": "35,59"
      },
      {
        "label": "1994 Spanish Grand Prix",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/1994_Spanish_Grand_Prix",
        "seq": "69,92"
      }
    ],
    "id": "0486c904f3684e70a2e91846a6e53640",
    "predicate mapping": [
      {
        "label": "driver pole",
        "uri": "http://dbpedia.org/property/poleDriver",
        "seq": "-1,10",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "driver pole",
        "uri": "http://dbpedia.org/ontology/poleDriver",
        "seq": "-1,10",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Which college has been attended  by both Mr. Hubert Wiggs and Mr. Alvin Bell?",
    "SerialNumber": "2891",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Hubert_Wiggs\u003e \u003chttp://dbpedia.org/ontology/college\u003e ?uri. \u003chttp://dbpedia.org/resource/Alvin_Bell\u003e \u003chttp://dbpedia.org/ontology/college\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Hubert Wiggs",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Hubert_Wiggs",
        "seq": "45,57"
      },
      {
        "label": "Alvin Bell",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Alvin_Bell",
        "seq": "66,76"
      }
    ],
    "id": "90502631e5e7485cb032ce25c7048d48",
    "predicate mapping": [
      {
        "label": "college",
        "uri": "http://dbpedia.org/ontology/college",
        "seq": "6,13",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "college",
        "uri": "http://dbpedia.org/ontology/college",
        "seq": "6,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the academic discipline of the Journal of Cerebral Blood Flow \u0026 Metabolism and also an ingredient of the Ragout fin ?",
    "SerialNumber": "2893",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Journal_of_Cerebral_Blood_Flow_\u0026_Metabolism\u003e \u003chttp://dbpedia.org/ontology/academicDiscipline\u003e ?uri. \u003chttp://dbpedia.org/resource/Ragout_fin\u003e \u003chttp://dbpedia.org/ontology/ingredient\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Journal of Cerebral Blood Flow \u0026 Metabolism",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Journal_of_Cerebral_Blood_Flow_\u0026_Metabolism",
        "seq": "39,82"
      },
      {
        "label": "Ragout fin",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ragout_fin",
        "seq": "113,123"
      }
    ],
    "id": "7994a53ef73c46c1bfd20f5cc8bf85c6",
    "predicate mapping": [
      {
        "label": "academic discipline",
        "uri": "http://dbpedia.org/ontology/academicDiscipline",
        "seq": "12,31",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "ingredient",
        "uri": "http://dbpedia.org/ontology/ingredient",
        "seq": "95,105",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Is Maldives a member ofof South Asia Subregional Economic Cooperation?",
    "SerialNumber": "2896",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/South_Asia_Subregional_Economic_Cooperation\u003e \u003chttp://dbpedia.org/property/membership\u003e \u003chttp://dbpedia.org/resource/Maldives\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "South Asia Subregional Economic Cooperation",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/South_Asia_Subregional_Economic_Cooperation",
        "seq": "26,69"
      },
      {
        "label": "Maldives",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Maldives",
        "seq": "3,11"
      }
    ],
    "id": "c86cb51bad5142dab46c6951545c296d",
    "predicate mapping": [
      {
        "label": "member",
        "uri": "http://dbpedia.org/property/membership",
        "seq": "14,20",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What are the settlements whose neighboring municipalities is Lancy?",
    "SerialNumber": "2897",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/neighboringMunicipalities\u003e \u003chttp://dbpedia.org/resource/Lancy\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Settlement\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Lancy",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Lancy",
        "seq": "61,66"
      }
    ],
    "id": "42cba0deb5884d97a7585b227afb2f03",
    "predicate mapping": [
      {
        "label": "neighboring municipalities",
        "uri": "http://dbpedia.org/property/neighboringMunicipalities",
        "seq": "31,57",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "settlement",
        "uri": "http://dbpedia.org/ontology/Settlement",
        "seq": "13,23",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "What currencies are used in the country whose capital is Podgorica?",
    "SerialNumber": "2899",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/capital\u003e \u003chttp://dbpedia.org/resource/Podgorica\u003e . ?x \u003chttp://dbpedia.org/property/currency\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Podgorica",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Podgorica",
        "seq": "57,66"
      }
    ],
    "id": "e7f54b79284844b194bfdd2380efe154",
    "predicate mapping": [
      {
        "label": "capital",
        "uri": "http://dbpedia.org/ontology/capital",
        "seq": "46,53",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "currencies",
        "uri": "http://dbpedia.org/property/currency",
        "seq": "5,15",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "What is the political party of the Satish Kumar Sharma which is also the political party of Manthena Venkata Raju?",
    "SerialNumber": "2900",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Satish_Kumar_Sharma\u003e \u003chttp://dbpedia.org/ontology/party\u003e ?uri. \u003chttp://dbpedia.org/resource/Manthena_Venkata_Raju\u003e \u003chttp://dbpedia.org/ontology/party\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Satish Kumar Sharma",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Satish_Kumar_Sharma",
        "seq": "35,54"
      },
      {
        "label": "Manthena Venkata Raju",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Manthena_Venkata_Raju",
        "seq": "92,113"
      }
    ],
    "id": "01e2a4fa1cc04ea397cb1d14132317a8",
    "predicate mapping": [
      {
        "label": "political party",
        "uri": "http://dbpedia.org/ontology/party",
        "seq": "12,27",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "political party",
        "uri": "http://dbpedia.org/ontology/party",
        "seq": "12,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "Which shows theme music is composed by a band which has Larry Lalonde in it?",
    "SerialNumber": "2901",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/bandMember\u003e \u003chttp://dbpedia.org/resource/Larry_LaLonde\u003e . ?uri \u003chttp://dbpedia.org/property/themeMusicComposer\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Larry Lalonde",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Larry_LaLonde",
        "seq": "56,69"
      }
    ],
    "id": "3d55c35bafda4d048cec814081b7a280",
    "predicate mapping": [
      {
        "label": "band",
        "uri": "http://dbpedia.org/ontology/bandMember",
        "seq": "41,45",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "composed",
        "uri": "http://dbpedia.org/property/themeMusicComposer",
        "seq": "27,35",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "6,11",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "Name a famous relative of barry voight",
    "SerialNumber": "2903",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/relative\u003e \u003chttp://dbpedia.org/resource/Barry_Voight\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "barry voight",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Barry_Voight",
        "seq": "26,38"
      }
    ],
    "id": "418aec71a0ad4d5594d5667a98921501",
    "predicate mapping": [
      {
        "label": "relative",
        "uri": "http://dbpedia.org/ontology/relative",
        "seq": "14,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Which company developed both Dart and Go?",
    "SerialNumber": "2904",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Dart_(programming_language)\u003e \u003chttp://dbpedia.org/ontology/developer\u003e ?uri. \u003chttp://dbpedia.org/resource/Go_(programming_language)\u003e \u003chttp://dbpedia.org/ontology/developer\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Dart",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Dart_(programming_language)",
        "seq": "29,33"
      },
      {
        "label": "Go",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Go_(programming_language)",
        "seq": "38,40"
      }
    ],
    "id": "4f48838e3be94cb18dedb19550dae9de",
    "predicate mapping": [
      {
        "label": "developed",
        "uri": "http://dbpedia.org/ontology/developer",
        "seq": "14,23",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "developed",
        "uri": "http://dbpedia.org/ontology/developer",
        "seq": "14,23",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Georg Meissner was doctoral supervisor of which scientist ?",
    "SerialNumber": "2905",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/doctoralAdvisor\u003e \u003chttp://dbpedia.org/resource/Georg_Meissner\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Scientist\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Georg Meissner",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Georg_Meissner",
        "seq": "0,14"
      }
    ],
    "id": "4b6587fe43824a6385cac583915ac1cc",
    "predicate mapping": [
      {
        "label": "doctoral supervisor",
        "uri": "http://dbpedia.org/property/doctoralAdvisor",
        "seq": "19,38",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "scientist",
        "uri": "http://dbpedia.org/ontology/Scientist",
        "seq": "48,57",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which city near Nihoa is the place of death of jim Brady ?",
    "SerialNumber": "2907",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Nihoa\u003e \u003chttp://dbpedia.org/property/nearestCity\u003e ?uri. \u003chttp://dbpedia.org/resource/Jim_Brady_(quarterback)\u003e \u003chttp://dbpedia.org/ontology/deathPlace\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Nihoa",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Nihoa",
        "seq": "16,21"
      },
      {
        "label": "jim Brady",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Jim_Brady_(quarterback)",
        "seq": "47,56"
      }
    ],
    "id": "723b13ce8be84e718d521789fae00823",
    "predicate mapping": [
      {
        "label": "near city",
        "uri": "http://dbpedia.org/property/nearestCity",
        "seq": "-1,8",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "place death",
        "uri": "http://dbpedia.org/ontology/deathPlace",
        "seq": "-1,10",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "List the people who were the first one to climb a mountain in California?",
    "SerialNumber": "2908",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/locatedInArea\u003e \u003chttp://dbpedia.org/resource/California\u003e . ?x \u003chttp://dbpedia.org/ontology/firstAscentPerson\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Mountain\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "California",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/California",
        "seq": "62,72"
      }
    ],
    "id": "f581bcd6971a4e1b85ef5da858b30163",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/locatedInArea",
        "seq": "56,58",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "first",
        "uri": "http://dbpedia.org/ontology/firstAscentPerson",
        "seq": "29,34",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "mountain",
        "uri": "http://dbpedia.org/ontology/Mountain",
        "seq": "50,58",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who are the local authority of Buckhurst Hill County High School ?",
    "SerialNumber": "2910",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Buckhurst_Hill_County_High_School\u003e \u003chttp://dbpedia.org/ontology/localAuthority\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Buckhurst Hill County High School",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Buckhurst_Hill_County_High_School",
        "seq": "31,64"
      }
    ],
    "id": "5b08973e5ea1470fb3ce5ac04de8c3d6",
    "predicate mapping": [
      {
        "label": "local authority",
        "uri": "http://dbpedia.org/ontology/localAuthority",
        "seq": "12,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "Which peak was first scaled by Krzysztof Wielicki?",
    "SerialNumber": "2911",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/firstAscentPerson\u003e \u003chttp://dbpedia.org/resource/Krzysztof_Wielicki\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Krzysztof Wielicki",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Krzysztof_Wielicki",
        "seq": "31,49"
      }
    ],
    "id": "ef0ebaaa120f45e8a4db2e06afd28d56",
    "predicate mapping": [
      {
        "label": "first",
        "uri": "http://dbpedia.org/ontology/firstAscentPerson",
        "seq": "15,20",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "What teams have Avangard Omsk\u0027s players played for?",
    "SerialNumber": "2914",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/playedFor\u003e \u003chttp://dbpedia.org/resource/Avangard_Omsk\u003e . ?x \u003chttp://dbpedia.org/ontology/formerTeam\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Avangard Omsk",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Avangard_Omsk",
        "seq": "16,29"
      }
    ],
    "id": "38d02dcbf93a42ab8f3f03c2a8c8f30b",
    "predicate mapping": [
      {
        "label": "played for",
        "uri": "http://dbpedia.org/property/playedFor",
        "seq": "40,50",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "teams",
        "uri": "http://dbpedia.org/ontology/formerTeam",
        "seq": "5,10",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the location country of Teperberg 1870 ?",
    "SerialNumber": "2915",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Teperberg_1870\u003e \u003chttp://dbpedia.org/property/locationCountry\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Teperberg 1870",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Teperberg_1870",
        "seq": "32,46"
      }
    ],
    "id": "16a0b3c7cec84354940128b8d6b555b0",
    "predicate mapping": [
      {
        "label": "location country",
        "uri": "http://dbpedia.org/property/locationCountry",
        "seq": "12,28",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the rivers in the hudson highlands state parts?",
    "SerialNumber": "2916",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Hudson_Highlands_State_Park\u003e \u003chttp://dbpedia.org/property/river\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "hudson highlands state part",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Hudson_Highlands_State_Park",
        "seq": "23,50"
      }
    ],
    "id": "d241c139de3a4bc08b233c5dcd18e3b7",
    "predicate mapping": [
      {
        "label": "river",
        "uri": "http://dbpedia.org/property/river",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Is Ingo Steuer the formercoach of Stanislav Morozov?",
    "SerialNumber": "2917",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Stanislav_Morozov\u003e \u003chttp://dbpedia.org/property/formercoach\u003e \u003chttp://dbpedia.org/resource/Ingo_Steuer\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Stanislav Morozov",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Stanislav_Morozov",
        "seq": "34,51"
      },
      {
        "label": "Ingo Steuer",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Ingo_Steuer",
        "seq": "3,14"
      }
    ],
    "id": "6e4e6be9a3bd45b187c37dd99ee4284c",
    "predicate mapping": [
      {
        "label": "formercoach",
        "uri": "http://dbpedia.org/property/formercoach",
        "seq": "19,30",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "How many cars can I find related to the cars which have a V8 engine?",
    "SerialNumber": "2918",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/engine\u003e \u003chttp://dbpedia.org/resource/V8_engine\u003e . ?x \u003chttp://dbpedia.org/property/related\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "V8 engine",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/V8_engine",
        "seq": "58,67"
      }
    ],
    "id": "4c7eac160c0d49c49f815792513f1c21",
    "predicate mapping": [
      {
        "label": "engine",
        "uri": "http://dbpedia.org/property/engine",
        "seq": "61,67",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "related",
        "uri": "http://dbpedia.org/property/related",
        "seq": "25,32",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which destinations of the Air 2000 is also the location continent of the Falken Tire ?",
    "SerialNumber": "2919",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Air_2000\u003e \u003chttp://dbpedia.org/property/destinations\u003e ?uri. \u003chttp://dbpedia.org/resource/Falken_Tire\u003e \u003chttp://dbpedia.org/ontology/locationCountry\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Air 2000",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Air_2000",
        "seq": "26,34"
      },
      {
        "label": "Falken Tire",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Falken_Tire",
        "seq": "73,84"
      }
    ],
    "id": "39c73d39a7fb4e7bbf4b1b656e76ee22",
    "predicate mapping": [
      {
        "label": "destinations",
        "uri": "http://dbpedia.org/property/destinations",
        "seq": "6,18",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "location",
        "uri": "http://dbpedia.org/ontology/locationCountry",
        "seq": "47,55",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "307",
    "question": "What show has Sirius XM Holdings and Fox Sports Radio as channels ?",
    "SerialNumber": "2922",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/ontology/channel\u003e \u003chttp://dbpedia.org/resource/Sirius_XM_Holdings\u003e . ?uri \u003chttp://dbpedia.org/ontology/channel\u003e \u003chttp://dbpedia.org/resource/Fox_Sports_Radio\u003e . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Sirius XM Holdings",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Sirius_XM_Holdings",
        "seq": "14,32"
      },
      {
        "label": "Fox Sports Radio",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Fox_Sports_Radio",
        "seq": "37,53"
      }
    ],
    "id": "b8845f4e32974bfca57abbacda4140bc",
    "predicate mapping": [
      {
        "label": "channel",
        "uri": "http://dbpedia.org/ontology/channel",
        "seq": "57,64",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "channel",
        "uri": "http://dbpedia.org/ontology/channel",
        "seq": "57,64",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "5,9",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "What are Breann McGregor and Anika Knudsen, both known for?",
    "SerialNumber": "2923",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Breann_McGregor\u003e \u003chttp://dbpedia.org/property/knownFor\u003e ?uri. \u003chttp://dbpedia.org/resource/Anika_Knudsen\u003e \u003chttp://dbpedia.org/property/knownFor\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Breann McGregor",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Breann_McGregor",
        "seq": "9,24"
      },
      {
        "label": "Anika Knudsen",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Anika_Knudsen",
        "seq": "29,42"
      }
    ],
    "id": "404f0de8f6fe44649c68a7f991618244",
    "predicate mapping": [
      {
        "label": "known for",
        "uri": "http://dbpedia.org/property/knownFor",
        "seq": "49,58",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "known for",
        "uri": "http://dbpedia.org/property/knownFor",
        "seq": "49,58",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "List the movies produced by Michael Deeley ?",
    "SerialNumber": "2925",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/producer\u003e \u003chttp://dbpedia.org/resource/Michael_Deeley\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Michael Deeley",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Michael_Deeley",
        "seq": "28,42"
      }
    ],
    "id": "ada933daf3c04f8093383e9131a06d2f",
    "predicate mapping": [
      {
        "label": "produced",
        "uri": "http://dbpedia.org/ontology/producer",
        "seq": "16,24",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "In which state is the team, which has John Roeslein?",
    "SerialNumber": "2930",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/John_Roeslein\u003e \u003chttp://dbpedia.org/ontology/team\u003e ?x . ?x \u003chttp://dbpedia.org/property/state\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "John Roeslein",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/John_Roeslein",
        "seq": "38,51"
      }
    ],
    "id": "41d0346f044a40d4b92151328c691244",
    "predicate mapping": [
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/team",
        "seq": "22,26",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "state",
        "uri": "http://dbpedia.org/property/state",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which sport at Polytechnic University of the Philippines Taguig is the field of Jon speelman ?",
    "SerialNumber": "2932",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Jon_Speelman\u003e \u003chttp://dbpedia.org/ontology/field\u003e ?uri. \u003chttp://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_Taguig\u003e \u003chttp://dbpedia.org/ontology/sport\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jon speelman",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Jon_Speelman",
        "seq": "80,92"
      },
      {
        "label": "Polytechnic University of the Philippines Taguig",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_Taguig",
        "seq": "15,63"
      }
    ],
    "id": "afe5031d98294f048dbf9373e03f719b",
    "predicate mapping": [
      {
        "label": "field",
        "uri": "http://dbpedia.org/ontology/field",
        "seq": "71,76",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "sport",
        "uri": "http://dbpedia.org/ontology/sport",
        "seq": "6,11",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "307",
    "question": "Which senator served in military units VMF-155 and VMF-218?",
    "SerialNumber": "2934",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/ontology/militaryUnit\u003e \u003chttp://dbpedia.org/resource/VMF-155\u003e . ?uri \u003chttp://dbpedia.org/ontology/militaryUnit\u003e \u003chttp://dbpedia.org/resource/VMF-218\u003e . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Senator\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "VMF-155",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/VMF-155",
        "seq": "39,46"
      },
      {
        "label": "VMF-218",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/VMF-218",
        "seq": "51,58"
      }
    ],
    "id": "8c4f8820a2574a60b70e80603a9af302",
    "predicate mapping": [
      {
        "label": "military unit",
        "uri": "http://dbpedia.org/ontology/militaryUnit",
        "seq": "24,37",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "military unit",
        "uri": "http://dbpedia.org/ontology/militaryUnit",
        "seq": "24,37",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "senator",
        "uri": "http://dbpedia.org/ontology/Senator",
        "seq": "6,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "How many members are there of the organization headquartered at Amstelveen?",
    "SerialNumber": "2935",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/headquarters\u003e \u003chttp://dbpedia.org/resource/Amstelveen\u003e . ?x \u003chttp://dbpedia.org/property/membership\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Amstelveen",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Amstelveen",
        "seq": "64,74"
      }
    ],
    "id": "b895b7cc207c4aab8ca0c0bbf388a9a2",
    "predicate mapping": [
      {
        "label": "headquarter",
        "uri": "http://dbpedia.org/property/headquarters",
        "seq": "47,58",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "members",
        "uri": "http://dbpedia.org/property/membership",
        "seq": "9,16",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Does the Ontario International Airport serve the Inland Empire?",
    "SerialNumber": "2936",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Ontario_International_Airport\u003e \u003chttp://dbpedia.org/property/cityServed\u003e \u003chttp://dbpedia.org/resource/Inland_Empire\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ontario International Airport",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Ontario_International_Airport",
        "seq": "9,38"
      },
      {
        "label": "Inland Empire",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Inland_Empire",
        "seq": "49,62"
      }
    ],
    "id": "1ac63487cbae44b6a9aa9350ab7302de",
    "predicate mapping": [
      {
        "label": "serve",
        "uri": "http://dbpedia.org/property/cityServed",
        "seq": "39,44",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who is the film director of Alice\u0027s Wonderland ?",
    "SerialNumber": "2940",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Alice\u0027s_Wonderland\u003e \u003chttp://dbpedia.org/ontology/director\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Alice\u0027s Wonderland",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Alice\u0027s_Wonderland",
        "seq": "28,46"
      }
    ],
    "id": "330a20b1b264498c86abcbd8608ab422",
    "predicate mapping": [
      {
        "label": "film director",
        "uri": "http://dbpedia.org/ontology/director",
        "seq": "11,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who is the builder of Estadio Nacional de Costa Rica (2011) ?",
    "SerialNumber": "2941",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Estadio_Nacional_de_Costa_Rica_(2011)\u003e \u003chttp://dbpedia.org/ontology/builder\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Estadio Nacional de Costa Rica",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Estadio_Nacional_de_Costa_Rica_(2011)",
        "seq": "22,52"
      }
    ],
    "id": "dbaca158d01d472baadbee2830f573d4",
    "predicate mapping": [
      {
        "label": "builder",
        "uri": "http://dbpedia.org/ontology/builder",
        "seq": "11,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the common award won by Charles LeMaire and Eric Roth",
    "SerialNumber": "2942",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Charles_LeMaire\u003e \u003chttp://dbpedia.org/property/awards\u003e ?uri. \u003chttp://dbpedia.org/resource/Eric_Roth\u003e \u003chttp://dbpedia.org/ontology/award\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Charles LeMaire",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Charles_LeMaire",
        "seq": "32,47"
      },
      {
        "label": "Eric Roth",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Eric_Roth",
        "seq": "52,61"
      }
    ],
    "id": "2e30a3d7ccb84d08a52974770eae393f",
    "predicate mapping": [
      {
        "label": "award won",
        "uri": "http://dbpedia.org/property/awards",
        "seq": "19,28",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "award won",
        "uri": "http://dbpedia.org/ontology/award",
        "seq": "19,28",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "405",
    "question": "Count the number of first drivers in all the GPs where Mika Hakkinen was a first driver?",
    "SerialNumber": "2944",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/poleDriver\u003e \u003chttp://dbpedia.org/resource/Mika_Häkkinen\u003e . ?x \u003chttp://dbpedia.org/ontology/firstDriver\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/RacingDriver\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Mika Hakkinen",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Mika_Häkkinen",
        "seq": "55,68"
      }
    ],
    "id": "10db28c2f3964aa78fae4f3291f87ec4",
    "predicate mapping": [
      {
        "label": "driver",
        "uri": "http://dbpedia.org/ontology/poleDriver",
        "seq": "26,32",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "first driver",
        "uri": "http://dbpedia.org/ontology/firstDriver",
        "seq": "20,32",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "driver",
        "uri": "http://dbpedia.org/ontology/RacingDriver",
        "seq": "26,32",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "Which river has its roots in Baikal Mountains?",
    "SerialNumber": "2946",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/sourceMountain\u003e \u003chttp://dbpedia.org/resource/Baikal_Mountains\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Baikal Mountains",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Baikal_Mountains",
        "seq": "29,45"
      }
    ],
    "id": "bfffa1add5f64e0285af31cba61b8114",
    "predicate mapping": [
      {
        "label": "mountains",
        "uri": "http://dbpedia.org/ontology/sourceMountain",
        "seq": "-1,8",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which musical artist collaborated with Tony Allen (musician) and label is Victor Entertainment?",
    "SerialNumber": "2953",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/associatedMusicalArtist\u003e \u003chttp://dbpedia.org/resource/Tony_Allen_(musician)\u003e . ?uri \u003chttp://dbpedia.org/property/label\u003e \u003chttp://dbpedia.org/resource/Victor_Entertainment\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MusicalArtist\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Tony Allen (musician)",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Tony_Allen_(musician)",
        "seq": "39,60"
      },
      {
        "label": "Victor Entertainment",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Victor_Entertainment",
        "seq": "74,94"
      }
    ],
    "id": "e776aeb7245e4e648fb5d4c4b61dbad6",
    "predicate mapping": [
      {
        "label": "musical artist",
        "uri": "http://dbpedia.org/ontology/associatedMusicalArtist",
        "seq": "6,20",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "label",
        "uri": "http://dbpedia.org/property/label",
        "seq": "65,70",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "musical artist",
        "uri": "http://dbpedia.org/ontology/MusicalArtist",
        "seq": "6,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "111",
    "question": "What is the total number of regions served by the companies which also serves Australia?",
    "SerialNumber": "2955",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/regionServed\u003e \u003chttp://dbpedia.org/resource/Australia\u003e . ?x \u003chttp://dbpedia.org/ontology/regionServed\u003e ?uri }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Australia",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Australia",
        "seq": "78,87"
      }
    ],
    "id": "fbc34fb8d1464bec93cab57479d2ee9e",
    "predicate mapping": [
      {
        "label": "regions served",
        "uri": "http://dbpedia.org/ontology/regionServed",
        "seq": "28,42",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "regions served",
        "uri": "http://dbpedia.org/ontology/regionServed",
        "seq": "28,42",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "Whose children are married to Fredric Joliot-Curie?",
    "SerialNumber": "2956",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/spouse\u003e \u003chttp://dbpedia.org/resource/Frédéric_Joliot-Curie\u003e . ?uri \u003chttp://dbpedia.org/property/children\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Fredric Joliot-Curie",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Frédéric_Joliot-Curie",
        "seq": "30,50"
      }
    ],
    "id": "57f94e194bbf47d2bc8df0b967c56d74",
    "predicate mapping": [
      {
        "label": "married to",
        "uri": "http://dbpedia.org/property/spouse",
        "seq": "19,29",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "children",
        "uri": "http://dbpedia.org/property/children",
        "seq": "6,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "103",
    "question": "Count the number of important works done by the writers of The Second Coming?",
    "SerialNumber": "2957",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { \u003chttp://dbpedia.org/resource/The_Second_Coming_(TV_serial)\u003e \u003chttp://dbpedia.org/ontology/author\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/notableWork\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "The Second Coming",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Second_Coming_(TV_serial)",
        "seq": "59,76"
      }
    ],
    "id": "e2ec831eeb1f4e64a787efc386939af6",
    "predicate mapping": [
      {
        "label": "writers",
        "uri": "http://dbpedia.org/ontology/author",
        "seq": "48,55",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "works",
        "uri": "http://dbpedia.org/ontology/notableWork",
        "seq": "30,35",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who is the composer of Girl from the North Country ?",
    "SerialNumber": "2958",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Girl_from_the_North_Country\u003e \u003chttp://dbpedia.org/ontology/composer\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Girl from the North Country",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Girl_from_the_North_Country",
        "seq": "23,50"
      }
    ],
    "id": "b82af01a7505419ea2a82b7f08f96650",
    "predicate mapping": [
      {
        "label": "composer",
        "uri": "http://dbpedia.org/ontology/composer",
        "seq": "11,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "who owns the ship Victoria?",
    "SerialNumber": "2959",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Victoria_(ship)\u003e \u003chttp://dbpedia.org/ontology/owner\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Victoria",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Victoria_(ship)",
        "seq": "18,26"
      }
    ],
    "id": "ba2effd8c834439e8eaf7dbfdf385fa5",
    "predicate mapping": [
      {
        "label": "owns",
        "uri": "http://dbpedia.org/ontology/owner",
        "seq": "4,8",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the base currency of the Benelux and is also used as money in Kerguelen Islands?",
    "SerialNumber": "2960",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Benelux\u003e \u003chttp://dbpedia.org/property/currency\u003e ?uri. \u003chttp://dbpedia.org/resource/Kerguelen_Islands\u003e \u003chttp://dbpedia.org/ontology/currency\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Benelux",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Benelux",
        "seq": "33,40"
      },
      {
        "label": "Kerguelen Islands",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Kerguelen_Islands",
        "seq": "70,87"
      }
    ],
    "id": "1c76c6e7767f4aaf90c5a8e69371517f",
    "predicate mapping": [
      {
        "label": "base currency",
        "uri": "http://dbpedia.org/property/currency",
        "seq": "12,25",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "base currency",
        "uri": "http://dbpedia.org/ontology/currency",
        "seq": "12,25",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "List the places where the relatives of Mark Donaldson died ?",
    "SerialNumber": "2962",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Mark_Donaldson_(rugby_player)\u003e \u003chttp://dbpedia.org/property/relatives\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/deathPlace\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Mark Donaldson",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Mark_Donaldson_(rugby_player)",
        "seq": "39,53"
      }
    ],
    "id": "6f35f83223854b9685bd0d658725f1a7",
    "predicate mapping": [
      {
        "label": "relatives",
        "uri": "http://dbpedia.org/property/relatives",
        "seq": "26,35",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "places",
        "uri": "http://dbpedia.org/ontology/deathPlace",
        "seq": "9,15",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which appointer of the Joseph Clay (Georgia) is also the  President of the William Carmichael (diplomat) ?",
    "SerialNumber": "2963",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Joseph_Clay_(Georgia)\u003e \u003chttp://dbpedia.org/ontology/appointer\u003e ?uri. \u003chttp://dbpedia.org/resource/William_Carmichael_(diplomat)\u003e \u003chttp://dbpedia.org/property/president\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Joseph Clay (Georgia)",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Joseph_Clay_(Georgia)",
        "seq": "23,44"
      },
      {
        "label": "William Carmichael (diplomat)",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/William_Carmichael_(diplomat)",
        "seq": "75,104"
      }
    ],
    "id": "69c43006a66746dcaf96ba9e7229912c",
    "predicate mapping": [
      {
        "label": "appointer",
        "uri": "http://dbpedia.org/ontology/appointer",
        "seq": "6,15",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "President",
        "uri": "http://dbpedia.org/property/president",
        "seq": "58,67",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "For which teams did Ryan Powell play for?",
    "SerialNumber": "2968",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Ryan_Powell_(lacrosse)\u003e \u003chttp://dbpedia.org/ontology/team\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ryan Powell",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Ryan_Powell_(lacrosse)",
        "seq": "20,31"
      }
    ],
    "id": "a08a81d7bc32418fa69f9ee7611d119c",
    "predicate mapping": [
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/team",
        "seq": "10,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "Name the military units whose command structure\u0027s headquarters is The Pentagon?",
    "SerialNumber": "2970",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/headquarters\u003e \u003chttp://dbpedia.org/resource/The_Pentagon\u003e . ?uri \u003chttp://dbpedia.org/ontology/commandStructure\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MilitaryUnit\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "The Pentagon",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/The_Pentagon",
        "seq": "66,78"
      }
    ],
    "id": "c0f5e4506a7246bd925820748e927766",
    "predicate mapping": [
      {
        "label": "headquarters",
        "uri": "http://dbpedia.org/property/headquarters",
        "seq": "50,62",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "command structure",
        "uri": "http://dbpedia.org/ontology/commandStructure",
        "seq": "30,47",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "military unit",
        "uri": "http://dbpedia.org/ontology/MilitaryUnit",
        "seq": "9,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the mascot of Celal Bayar University ?",
    "SerialNumber": "2972",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Celal_Bayar_University\u003e \u003chttp://dbpedia.org/property/mascot\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Celal Bayar University",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Celal_Bayar_University",
        "seq": "22,44"
      }
    ],
    "id": "05514a08a6864dee82dff5c0b774d1cb",
    "predicate mapping": [
      {
        "label": "mascot",
        "uri": "http://dbpedia.org/property/mascot",
        "seq": "12,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "111",
    "question": "How many other ingredient are there in the foods whihh have one of the ingredient as Potato ?",
    "SerialNumber": "2975",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/ingredient\u003e \u003chttp://dbpedia.org/resource/Potato\u003e . ?x \u003chttp://dbpedia.org/ontology/ingredient\u003e ?uri }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Potato",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Potato",
        "seq": "85,91"
      }
    ],
    "id": "6ded3670f2964a83a919b06c23de2ba6",
    "predicate mapping": [
      {
        "label": "ingredient",
        "uri": "http://dbpedia.org/ontology/ingredient",
        "seq": "15,25",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "ingredient",
        "uri": "http://dbpedia.org/ontology/ingredient",
        "seq": "15,25",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who are the founders of Iskra ?",
    "SerialNumber": "2978",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Iskra\u003e \u003chttp://dbpedia.org/ontology/foundedBy\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Iskra",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Iskra",
        "seq": "24,29"
      }
    ],
    "id": "e670b9053f4948428c08a9c6aa03f7e8",
    "predicate mapping": [
      {
        "label": "founders",
        "uri": "http://dbpedia.org/ontology/foundedBy",
        "seq": "12,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What is the location country of the bank whose successor is Mauritius Bank ?",
    "SerialNumber": "2979",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/successor\u003e \u003chttp://dbpedia.org/resource/Mauritius_Bank\u003e . ?x \u003chttp://dbpedia.org/property/locationCountry\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Bank\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Mauritius Bank",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Mauritius_Bank",
        "seq": "60,74"
      }
    ],
    "id": "67c9424bca4a4f17b443bab40503c9e8",
    "predicate mapping": [
      {
        "label": "successor",
        "uri": "http://dbpedia.org/ontology/successor",
        "seq": "47,56",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "location country",
        "uri": "http://dbpedia.org/property/locationCountry",
        "seq": "12,28",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "bank",
        "uri": "http://dbpedia.org/ontology/Bank",
        "seq": "36,40",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Who is the manufacturer of engine of Jeep Forward Control ?",
    "SerialNumber": "2980",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Jeep_Forward_Control\u003e \u003chttp://dbpedia.org/property/engine\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/manufacturer\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jeep Forward Control",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Jeep_Forward_Control",
        "seq": "37,57"
      }
    ],
    "id": "611a7b738e4741f4af9e5b803c5e3183",
    "predicate mapping": [
      {
        "label": "engine",
        "uri": "http://dbpedia.org/property/engine",
        "seq": "27,33",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "manufacturer",
        "uri": "http://dbpedia.org/ontology/manufacturer",
        "seq": "11,23",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What sports are played at Vishwajyot High School?",
    "SerialNumber": "2981",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Vishwajyot_High_School\u003e \u003chttp://dbpedia.org/ontology/sport\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Vishwajyot High School",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Vishwajyot_High_School",
        "seq": "26,48"
      }
    ],
    "id": "be173cd13f024163b5777d971acdbe58",
    "predicate mapping": [
      {
        "label": "sport",
        "uri": "http://dbpedia.org/ontology/sport",
        "seq": "5,10",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Who is the person whose parent is Ptolemy XII Auletes?",
    "SerialNumber": "2982",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/parent\u003e \u003chttp://dbpedia.org/resource/Ptolemy_XII_Auletes\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ptolemy XII Auletes",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Ptolemy_XII_Auletes",
        "seq": "34,53"
      }
    ],
    "id": "47c0b19e99344c79b588ce726af7b675",
    "predicate mapping": [
      {
        "label": "parent",
        "uri": "http://dbpedia.org/ontology/parent",
        "seq": "24,30",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/Person",
        "seq": "11,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who are in the board of Jimmy Wales ?",
    "SerialNumber": "2985",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Jimmy_Wales\u003e \u003chttp://dbpedia.org/ontology/board\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jimmy Wales",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Jimmy_Wales",
        "seq": "24,35"
      }
    ],
    "id": "7804405f8cd849a4acb60cf3df9a287c",
    "predicate mapping": [
      {
        "label": "board",
        "uri": "http://dbpedia.org/ontology/board",
        "seq": "15,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the leading party in Baraily which Chandra Shekhar too is associated with?",
    "SerialNumber": "2986",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Baraily\u003e \u003chttp://dbpedia.org/ontology/leaderName\u003e ?uri. \u003chttp://dbpedia.org/resource/Chandra_Shekhar\u003e \u003chttp://dbpedia.org/ontology/otherParty\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Baraily",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Baraily",
        "seq": "29,36"
      },
      {
        "label": "Chandra Shekhar",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Chandra_Shekhar",
        "seq": "43,58"
      }
    ],
    "id": "e3b7065032d74fe2b8b5956c42315e02",
    "predicate mapping": [
      {
        "label": "leading",
        "uri": "http://dbpedia.org/ontology/leaderName",
        "seq": "12,19",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "party",
        "uri": "http://dbpedia.org/ontology/otherParty",
        "seq": "20,25",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What are the tenants of Mercedes-Benz Superdome?",
    "SerialNumber": "2989",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Mercedes-Benz_Superdome\u003e \u003chttp://dbpedia.org/ontology/tenant\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Mercedes-Benz Superdome",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Mercedes-Benz_Superdome",
        "seq": "24,47"
      }
    ],
    "id": "a789b3608b9a427f9908d49aed80ea50",
    "predicate mapping": [
      {
        "label": "tenant",
        "uri": "http://dbpedia.org/ontology/tenant",
        "seq": "13,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Was elizabeth ann seton beatified by Pope John XXIII?",
    "SerialNumber": "2990",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Elizabeth_Ann_Seton\u003e \u003chttp://dbpedia.org/property/beatifiedBy\u003e \u003chttp://dbpedia.org/resource/Pope_John_XXIII\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "elizabeth ann seton",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Elizabeth_Ann_Seton",
        "seq": "4,23"
      },
      {
        "label": "Pope John XXIII",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Pope_John_XXIII",
        "seq": "37,52"
      }
    ],
    "id": "70f91098717e416c895d2d98eab6355c",
    "predicate mapping": [
      {
        "label": "beatified by",
        "uri": "http://dbpedia.org/property/beatifiedBy",
        "seq": "24,36",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "Give me a count of all the producers of all the movies whose music was done by James Horner?",
    "SerialNumber": "2991",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/music\u003e \u003chttp://dbpedia.org/resource/James_Horner\u003e . ?x \u003chttp://dbpedia.org/property/producer\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "James Horner",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/James_Horner",
        "seq": "79,91"
      }
    ],
    "id": "1462640075fb4176a9db74b1e76bb1eb",
    "predicate mapping": [
      {
        "label": "music",
        "uri": "http://dbpedia.org/property/music",
        "seq": "61,66",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "producer",
        "uri": "http://dbpedia.org/property/producer",
        "seq": "27,35",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Name the musical artists whose label is given by Kobalt Label Services?",
    "SerialNumber": "2992",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/label\u003e \u003chttp://dbpedia.org/resource/Kobalt_Label_Services\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MusicalArtist\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Kobalt Label Services",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Kobalt_Label_Services",
        "seq": "49,70"
      }
    ],
    "id": "316b176330564acfb5633baade63b8d7",
    "predicate mapping": [
      {
        "label": "label",
        "uri": "http://dbpedia.org/property/label",
        "seq": "31,36",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "musical artist",
        "uri": "http://dbpedia.org/ontology/MusicalArtist",
        "seq": "9,23",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "106",
    "question": "Count everyone who was in the military unit which is structured like the Marine Aircraft Group 13 ?",
    "SerialNumber": "2993",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/commandStructure\u003e \u003chttp://dbpedia.org/resource/Marine_Aircraft_Group_13\u003e . ?uri \u003chttp://dbpedia.org/ontology/militaryUnit\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Marine Aircraft Group 13",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Marine_Aircraft_Group_13",
        "seq": "73,97"
      }
    ],
    "id": "19df3475de1a4ac0acb04e6252268f44",
    "predicate mapping": [
      {
        "label": "structured",
        "uri": "http://dbpedia.org/property/commandStructure",
        "seq": "53,63",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "military unit",
        "uri": "http://dbpedia.org/ontology/militaryUnit",
        "seq": "30,43",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Which state does Jerome B. Chaffee belong ?",
    "SerialNumber": "2994",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Jerome_B._Chaffee\u003e \u003chttp://dbpedia.org/property/state\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jerome B. Chaffee",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Jerome_B._Chaffee",
        "seq": "17,34"
      }
    ],
    "id": "f848f4e81e654fe4b04988ba7a828da0",
    "predicate mapping": [
      {
        "label": "state",
        "uri": "http://dbpedia.org/property/state",
        "seq": "6,11",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who is the writer of Neverwhere (radio play) ?",
    "SerialNumber": "2997",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Neverwhere_(radio_play)\u003e \u003chttp://dbpedia.org/ontology/writer\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Neverwhere (radio play)",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Neverwhere_(radio_play)",
        "seq": "21,44"
      }
    ],
    "id": "ec1040a967d34f71a0082b96d8a3a4a1",
    "predicate mapping": [
      {
        "label": "writer",
        "uri": "http://dbpedia.org/ontology/writer",
        "seq": "11,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What is the musical whose music is by Jose Luis Narom,  based upon?",
    "SerialNumber": "2998",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/musicBy\u003e \u003chttp://dbpedia.org/resource/José_Luis_Narom\u003e . ?x \u003chttp://dbpedia.org/ontology/basedOn\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Musical\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jose Luis Narom",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/José_Luis_Narom",
        "seq": "38,53"
      }
    ],
    "id": "1715062de00d44c4aefdcff294846af4",
    "predicate mapping": [
      {
        "label": "music",
        "uri": "http://dbpedia.org/ontology/musicBy",
        "seq": "12,17",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "based upon",
        "uri": "http://dbpedia.org/ontology/basedOn",
        "seq": "56,66",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "musical",
        "uri": "http://dbpedia.org/ontology/Musical",
        "seq": "12,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "List the bacterias whose division is Firmicutes and domain is bacteria?",
    "SerialNumber": "2999",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/division\u003e \u003chttp://dbpedia.org/resource/Firmicutes\u003e . ?uri \u003chttp://dbpedia.org/property/domain\u003e \u003chttp://dbpedia.org/resource/Bacteria\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Bacteria\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Firmicutes",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Firmicutes",
        "seq": "37,47"
      },
      {
        "label": "bacteria",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Bacteria",
        "seq": "9,17"
      }
    ],
    "id": "17069693f36e48c2b403ea5ec4def682",
    "predicate mapping": [
      {
        "label": "division",
        "uri": "http://dbpedia.org/ontology/division",
        "seq": "25,33",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "domain",
        "uri": "http://dbpedia.org/property/domain",
        "seq": "52,58",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "bacteria",
        "uri": "http://dbpedia.org/ontology/Bacteria",
        "seq": "9,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "406",
    "question": "How many TV shows\u0027 networks are headquarterd in NY?",
    "SerialNumber": "3000",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/headquarters\u003e \u003chttp://dbpedia.org/resource/New_York\u003e . ?uri \u003chttp://dbpedia.org/property/network\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "NY",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/New_York",
        "seq": "48,50"
      }
    ],
    "id": "5536ce539f2548709a11af855d2ca5c5",
    "predicate mapping": [
      {
        "label": "headquarter",
        "uri": "http://dbpedia.org/property/headquarters",
        "seq": "32,43",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "network",
        "uri": "http://dbpedia.org/property/network",
        "seq": "19,26",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "shows\u0027",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "12,18",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What is the university whose affiliations is Graham Holdings Company?",
    "SerialNumber": "3001",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/affiliations\u003e \u003chttp://dbpedia.org/resource/Graham_Holdings_Company\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/University\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Graham Holdings Company",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Graham_Holdings_Company",
        "seq": "45,68"
      }
    ],
    "id": "78aa880b91524dc297c804a6d91e1682",
    "predicate mapping": [
      {
        "label": "affiliations",
        "uri": "http://dbpedia.org/property/affiliations",
        "seq": "29,41",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "university",
        "uri": "http://dbpedia.org/ontology/University",
        "seq": "12,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the basketball player who played for Phoenix Suns and Los Angeles Clippers was his draft team?",
    "SerialNumber": "3003",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/team\u003e \u003chttp://dbpedia.org/resource/Phoenix_Suns\u003e . ?uri \u003chttp://dbpedia.org/property/draftTeam\u003e \u003chttp://dbpedia.org/resource/Los_Angeles_Clippers\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/BasketballPlayer\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Phoenix Suns",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Phoenix_Suns",
        "seq": "42,54"
      },
      {
        "label": "Los Angeles Clippers",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Los_Angeles_Clippers",
        "seq": "59,79"
      }
    ],
    "id": "30c6fa7e60404d89919aadfe483c66cc",
    "predicate mapping": [
      {
        "label": "played for",
        "uri": "http://dbpedia.org/ontology/team",
        "seq": "31,41",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "draft team",
        "uri": "http://dbpedia.org/property/draftTeam",
        "seq": "88,98",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "basketball player",
        "uri": "http://dbpedia.org/ontology/BasketballPlayer",
        "seq": "9,26",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who are the key people of FWD.us?",
    "SerialNumber": "3004",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/FWD.us\u003e \u003chttp://dbpedia.org/property/keyPeople\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "FWD.us",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/FWD.us",
        "seq": "26,32"
      }
    ],
    "id": "50201a37de8648bb9cce96d0b4df557a",
    "predicate mapping": [
      {
        "label": "key people",
        "uri": "http://dbpedia.org/property/keyPeople",
        "seq": "12,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What is the birth place of the successor of Ella T. Grasso ?",
    "SerialNumber": "3005",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Ella_T._Grasso\u003e \u003chttp://dbpedia.org/property/successor\u003e ?x . ?x \u003chttp://dbpedia.org/property/birthPlace\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ella T. Grasso",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ella_T._Grasso",
        "seq": "44,58"
      }
    ],
    "id": "6780d5fc98994413b8244e37868d361f",
    "predicate mapping": [
      {
        "label": "successor",
        "uri": "http://dbpedia.org/property/successor",
        "seq": "31,40",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "birth place",
        "uri": "http://dbpedia.org/property/birthPlace",
        "seq": "12,23",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which country is the birth place of Marcus Samuelsson and Samuel of Waldebba ?",
    "SerialNumber": "3007",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Marcus_Samuelsson\u003e \u003chttp://dbpedia.org/property/birthPlace\u003e ?uri. \u003chttp://dbpedia.org/resource/Samuel_of_Waldebba\u003e \u003chttp://dbpedia.org/property/placeOfBirth\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Marcus Samuelsson",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Marcus_Samuelsson",
        "seq": "36,53"
      },
      {
        "label": "Samuel of Waldebba",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Samuel_of_Waldebba",
        "seq": "58,76"
      }
    ],
    "id": "5bf931b59fb94b8c9cf432d2911170df",
    "predicate mapping": [
      {
        "label": "birth place",
        "uri": "http://dbpedia.org/property/birthPlace",
        "seq": "21,32",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "place birth",
        "uri": "http://dbpedia.org/property/placeOfBirth",
        "seq": "-1,10",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What is the television show whose executive producer is Steven Peterman?",
    "SerialNumber": "3008",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/executiveProducer\u003e \u003chttp://dbpedia.org/resource/Steven_Peterman\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Steven Peterman",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Steven_Peterman",
        "seq": "56,71"
      }
    ],
    "id": "3e1f362c96fe4cc592bfd13bfb855659",
    "predicate mapping": [
      {
        "label": "executive producer",
        "uri": "http://dbpedia.org/property/executiveProducer",
        "seq": "34,52",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "12,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which river\u0027s source place is Gloucestershire and mouth in North Sea?",
    "SerialNumber": "3009",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/sourcePlace\u003e \u003chttp://dbpedia.org/resource/Gloucestershire\u003e . ?uri \u003chttp://dbpedia.org/ontology/riverMouth\u003e \u003chttp://dbpedia.org/resource/North_Sea\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/River\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Gloucestershire",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Gloucestershire",
        "seq": "30,45"
      },
      {
        "label": "North Sea",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/North_Sea",
        "seq": "59,68"
      }
    ],
    "id": "87a4b9a543cc448e89f2ed926a6144e1",
    "predicate mapping": [
      {
        "label": "source place",
        "uri": "http://dbpedia.org/ontology/sourcePlace",
        "seq": "14,26",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "mouth",
        "uri": "http://dbpedia.org/ontology/riverMouth",
        "seq": "50,55",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River",
        "seq": "6,11",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "401",
    "question": "How many schools have a bison as their mascot?",
    "SerialNumber": "3012",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/property/mascot\u003e \u003chttp://dbpedia.org/resource/Bison\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/School\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "bison",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Bison",
        "seq": "24,29"
      }
    ],
    "id": "0f2e35e2a21b45d1a22ba4c50b76c832",
    "predicate mapping": [
      {
        "label": "mascot",
        "uri": "http://dbpedia.org/property/mascot",
        "seq": "39,45",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "school",
        "uri": "http://dbpedia.org/ontology/School",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which institution of the Alton Ochsner is also the alma mater of John Michael Seabright ?",
    "SerialNumber": "3014",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Alton_Ochsner\u003e \u003chttp://dbpedia.org/ontology/institution\u003e ?uri. \u003chttp://dbpedia.org/resource/John_Michael_Seabright\u003e \u003chttp://dbpedia.org/ontology/almaMater\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Alton Ochsner",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Alton_Ochsner",
        "seq": "25,38"
      },
      {
        "label": "John Michael Seabright",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/John_Michael_Seabright",
        "seq": "65,87"
      }
    ],
    "id": "cb7ccfb1dddd4933883fb1176660d821",
    "predicate mapping": [
      {
        "label": "institution",
        "uri": "http://dbpedia.org/ontology/institution",
        "seq": "6,17",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/ontology/almaMater",
        "seq": "51,61",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who did the person whose predecessor is Arthur Slaght, play for?",
    "SerialNumber": "3015",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/predecessor\u003e \u003chttp://dbpedia.org/resource/Arthur_Slaght\u003e . ?x \u003chttp://dbpedia.org/property/playedFor\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Arthur Slaght",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Arthur_Slaght",
        "seq": "40,53"
      }
    ],
    "id": "176d35f9dad648dea853a6c7b831c5c9",
    "predicate mapping": [
      {
        "label": "predecessor",
        "uri": "http://dbpedia.org/ontology/predecessor",
        "seq": "25,36",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "play",
        "uri": "http://dbpedia.org/property/playedFor",
        "seq": "55,59",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/Person",
        "seq": "12,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "403",
    "question": "How many ideologies do the political party of Boonchu Rojanastien hold?",
    "SerialNumber": "3017",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { \u003chttp://dbpedia.org/resource/Boonchu_Rojanastien\u003e \u003chttp://dbpedia.org/property/party\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/ideology\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/PoliticalParty\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Boonchu Rojanastien",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Boonchu_Rojanastien",
        "seq": "46,65"
      }
    ],
    "id": "1c8b342278e246f6a44fa8f398c21094",
    "predicate mapping": [
      {
        "label": "political party",
        "uri": "http://dbpedia.org/property/party",
        "seq": "27,42",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "ideologies",
        "uri": "http://dbpedia.org/ontology/ideology",
        "seq": "9,19",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "political party",
        "uri": "http://dbpedia.org/ontology/PoliticalParty",
        "seq": "27,42",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who owns a bridge in Boston?",
    "SerialNumber": "3018",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/locatedInArea\u003e \u003chttp://dbpedia.org/resource/Boston\u003e . ?x \u003chttp://dbpedia.org/property/owner\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Bridge\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Boston",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Boston",
        "seq": "21,27"
      }
    ],
    "id": "3227b935ac2943ed9f5433d7109f816f",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/locatedInArea",
        "seq": "18,20",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "owns",
        "uri": "http://dbpedia.org/property/owner",
        "seq": "4,8",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "bridge",
        "uri": "http://dbpedia.org/ontology/Bridge",
        "seq": "11,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "101",
    "question": "Count the different types of Flatbread ?",
    "SerialNumber": "3019",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/ontology/type\u003e \u003chttp://dbpedia.org/resource/Flatbread\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Flatbread",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Flatbread",
        "seq": "29,38"
      }
    ],
    "id": "97c00c9886914a6ea5d5a811a4e1b225",
    "predicate mapping": [
      {
        "label": "type",
        "uri": "http://dbpedia.org/ontology/type",
        "seq": "20,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "Who is married to Gerard Piqu?",
    "SerialNumber": "3020",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/partner\u003e \u003chttp://dbpedia.org/resource/Gerard_Piqué\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Gerard Piqu?",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Gerard_Piqué",
        "seq": "18,30"
      }
    ],
    "id": "543d46f942c04924bcee5a4c54543c6b",
    "predicate mapping": [
      {
        "label": "married to",
        "uri": "http://dbpedia.org/property/partner",
        "seq": "7,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which city near to Elliott Bay was the death place of George F. Moore ?",
    "SerialNumber": "3021",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Elliott_Bay\u003e \u003chttp://dbpedia.org/ontology/nearestCity\u003e ?uri. \u003chttp://dbpedia.org/resource/George_F._Moore_(lieutenant_governor)\u003e \u003chttp://dbpedia.org/property/placeOfDeath\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Elliott Bay",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Elliott_Bay",
        "seq": "19,30"
      },
      {
        "label": "George F. Moore",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/George_F._Moore_(lieutenant_governor)",
        "seq": "54,69"
      }
    ],
    "id": "a2f49798a84244cd9bf1dd675795ccb7",
    "predicate mapping": [
      {
        "label": "near city",
        "uri": "http://dbpedia.org/ontology/nearestCity",
        "seq": "-1,8",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "place death",
        "uri": "http://dbpedia.org/property/placeOfDeath",
        "seq": "-1,10",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "102",
    "question": "The Other Side has hosted how many guests?",
    "SerialNumber": "3023",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { \u003chttp://dbpedia.org/resource/The_Other_Side_(The_Outer_Limits)\u003e \u003chttp://dbpedia.org/property/guests\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "The Other Side",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Other_Side_(The_Outer_Limits)",
        "seq": "0,14"
      }
    ],
    "id": "2165408d4ec94d15a8cd6d639dffcfdc",
    "predicate mapping": [
      {
        "label": "guests",
        "uri": "http://dbpedia.org/property/guests",
        "seq": "35,41",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What is the deathplace of the rugby player who is the relatives of Anton Oliver ?",
    "SerialNumber": "3024",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Anton_Oliver\u003e \u003chttp://dbpedia.org/property/relatives\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/deathPlace\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Anton Oliver",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Anton_Oliver",
        "seq": "67,79"
      }
    ],
    "id": "96c1a8fa851c4e83b2444ba219f5352b",
    "predicate mapping": [
      {
        "label": "relatives",
        "uri": "http://dbpedia.org/property/relatives",
        "seq": "54,63",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "deathplace",
        "uri": "http://dbpedia.org/ontology/deathPlace",
        "seq": "12,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "7",
    "question": "Who have children named James Roosevelt and Franklin Delano Roosevelt, Jr.?",
    "SerialNumber": "3025",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/property/children\u003e \u003chttp://dbpedia.org/resource/James_Roosevelt\u003e . ?uri \u003chttp://dbpedia.org/property/children\u003e \u003chttp://dbpedia.org/resource/Franklin_Delano_Roosevelt,_Jr.\u003e . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "James Roosevelt",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/James_Roosevelt",
        "seq": "24,39"
      },
      {
        "label": "Franklin Delano Roosevelt, Jr.",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Franklin_Delano_Roosevelt,_Jr.",
        "seq": "44,74"
      }
    ],
    "id": "73ba87c4b9fb40ee968f00a20022e04f",
    "predicate mapping": [
      {
        "label": "children",
        "uri": "http://dbpedia.org/property/children",
        "seq": "9,17",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "children",
        "uri": "http://dbpedia.org/property/children",
        "seq": "9,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Which scientist advised a doctoral student named Erban Ieica?",
    "SerialNumber": "3026",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/doctoralStudents\u003e \u003chttp://dbpedia.org/resource/Șerban_Țițeica\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Scientist\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Erban Ieica",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Șerban_Țițeica",
        "seq": "49,60"
      }
    ],
    "id": "9195104b821e430d93b815182ea75c44",
    "predicate mapping": [
      {
        "label": "doctoral student",
        "uri": "http://dbpedia.org/property/doctoralStudents",
        "seq": "26,42",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "scientist",
        "uri": "http://dbpedia.org/ontology/Scientist",
        "seq": "6,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "What are the houses of the Parliament Security Services and Parliament of India ?",
    "SerialNumber": "3028",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Parliament_Security_Services\u003e \u003chttp://dbpedia.org/property/houses\u003e ?uri. \u003chttp://dbpedia.org/resource/Parliament_of_India\u003e \u003chttp://dbpedia.org/property/houses\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Parliament Security Services",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Parliament_Security_Services",
        "seq": "27,55"
      },
      {
        "label": "Parliament of India",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Parliament_of_India",
        "seq": "60,79"
      }
    ],
    "id": "c84631401cb74a8483377f954e5989cd",
    "predicate mapping": [
      {
        "label": "houses",
        "uri": "http://dbpedia.org/property/houses",
        "seq": "13,19",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "houses",
        "uri": "http://dbpedia.org/property/houses",
        "seq": "13,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "For which team did both Butch Metzger and Brian Horwitz debuted ? ",
    "SerialNumber": "3030",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Butch_Metzger\u003e \u003chttp://dbpedia.org/ontology/debutTeam\u003e ?uri. \u003chttp://dbpedia.org/resource/Brian_Horwitz\u003e \u003chttp://dbpedia.org/ontology/debutTeam\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Butch Metzger",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Butch_Metzger",
        "seq": "24,37"
      },
      {
        "label": "Brian Horwitz",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Brian_Horwitz",
        "seq": "42,55"
      }
    ],
    "id": "2874d474d7134582be3c5ad5c4600b92",
    "predicate mapping": [
      {
        "label": "debuted",
        "uri": "http://dbpedia.org/ontology/debutTeam",
        "seq": "56,63",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "debuted",
        "uri": "http://dbpedia.org/ontology/debutTeam",
        "seq": "56,63",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the TV shows with network as NBC and company as Paramount Television ?",
    "SerialNumber": "3031",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/network\u003e \u003chttp://dbpedia.org/resource/NBC\u003e . ?uri \u003chttp://dbpedia.org/property/company\u003e \u003chttp://dbpedia.org/resource/Paramount_Television\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "NBC",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/NBC",
        "seq": "34,37"
      },
      {
        "label": "Paramount Television",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Paramount_Television",
        "seq": "53,73"
      }
    ],
    "id": "7c500d33868d4336a446b69df7d357c0",
    "predicate mapping": [
      {
        "label": "network",
        "uri": "http://dbpedia.org/ontology/network",
        "seq": "23,30",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/property/company",
        "seq": "42,49",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "television",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "-1,9",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who has composed songs produced by Terry Melcher?",
    "SerialNumber": "3032",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/producer\u003e \u003chttp://dbpedia.org/resource/Terry_Melcher\u003e . ?x \u003chttp://dbpedia.org/ontology/composer\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Song\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Terry Melcher",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Terry_Melcher",
        "seq": "35,48"
      }
    ],
    "id": "5cc4f7f24686439c9c74aa24e81b5414",
    "predicate mapping": [
      {
        "label": "produced",
        "uri": "http://dbpedia.org/property/producer",
        "seq": "23,31",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "composed",
        "uri": "http://dbpedia.org/ontology/composer",
        "seq": "8,16",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "song",
        "uri": "http://dbpedia.org/ontology/Song",
        "seq": "17,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "List down the cinematographers of Mickey\u0027s Mellerdrammer?",
    "SerialNumber": "3033",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Mickey\u0027s_Mellerdrammer\u003e \u003chttp://dbpedia.org/property/cinematography\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Mickey\u0027s Mellerdrammer",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Mickey\u0027s_Mellerdrammer",
        "seq": "34,56"
      }
    ],
    "id": "60f077d104bb416caff97689ba8b4506",
    "predicate mapping": [
      {
        "label": "cinematographer",
        "uri": "http://dbpedia.org/property/cinematography",
        "seq": "14,29",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Bridge that starts at Seberang Perai crosses over what?",
    "SerialNumber": "3037",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/routeStart\u003e \u003chttp://dbpedia.org/resource/Seberang_Perai\u003e . ?x \u003chttp://dbpedia.org/property/crosses\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Seberang Perai",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Seberang_Perai",
        "seq": "22,36"
      }
    ],
    "id": "dcb880946a53419fbc8f9ae1d09a35be",
    "predicate mapping": [
      {
        "label": "starts",
        "uri": "http://dbpedia.org/ontology/routeStart",
        "seq": "12,18",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "crosses",
        "uri": "http://dbpedia.org/property/crosses",
        "seq": "37,44",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Where was the deadbody discovered of one of the alumni of General Educational Development?",
    "SerialNumber": "3038",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/education\u003e \u003chttp://dbpedia.org/resource/General_Educational_Development\u003e . ?x \u003chttp://dbpedia.org/property/bodyDiscovered\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "General Educational Development",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/General_Educational_Development",
        "seq": "58,89"
      }
    ],
    "id": "3a4fadbc37434b5fb38032e9e21e5a9e",
    "predicate mapping": [
      {
        "label": "Education",
        "uri": "http://dbpedia.org/property/education",
        "seq": "66,75",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "body discovered",
        "uri": "http://dbpedia.org/property/bodyDiscovered",
        "seq": "18,33",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "To which senator did military unit VMF-155 belong?",
    "SerialNumber": "3039",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/militaryUnit\u003e \u003chttp://dbpedia.org/resource/VMF-155\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Senator\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "VMF-155",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/VMF-155",
        "seq": "35,42"
      }
    ],
    "id": "cf9cd4c9f5d64639ac21b712b3ead2e4",
    "predicate mapping": [
      {
        "label": "military unit",
        "uri": "http://dbpedia.org/ontology/militaryUnit",
        "seq": "21,34",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "senator",
        "uri": "http://dbpedia.org/ontology/Senator",
        "seq": "9,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What awards did Jos Rivera (playwright) win?",
    "SerialNumber": "3040",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/José_Rivera_(playwright)\u003e \u003chttp://dbpedia.org/property/awards\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jos Rivera (playwright)",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/José_Rivera_(playwright)",
        "seq": "16,26"
      }
    ],
    "id": "b063dd30941243b2836623934589c121",
    "predicate mapping": [
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards",
        "seq": "5,11",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who discovered Callisto ?",
    "SerialNumber": "3041",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Callisto_(moon)\u003e \u003chttp://dbpedia.org/ontology/discoverer\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Callisto",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Callisto_(moon)",
        "seq": "15,23"
      }
    ],
    "id": "1ec578b785684d0cbde64684ee3c7fbf",
    "predicate mapping": [
      {
        "label": "discovered",
        "uri": "http://dbpedia.org/ontology/discoverer",
        "seq": "4,14",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which musical artist associated with Tony Allen has label with Celluloid Records ?",
    "SerialNumber": "3044",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/associatedMusicalArtist\u003e \u003chttp://dbpedia.org/resource/Tony_Allen_(musician)\u003e . ?uri \u003chttp://dbpedia.org/property/label\u003e \u003chttp://dbpedia.org/resource/Celluloid_Records\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MusicalArtist\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Tony Allen",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Tony_Allen_(musician)",
        "seq": "37,47"
      },
      {
        "label": "Celluloid Records",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Celluloid_Records",
        "seq": "63,80"
      }
    ],
    "id": "fe996e9ac1574a1aa94ab07621bcc9f4",
    "predicate mapping": [
      {
        "label": "associated musical artist",
        "uri": "http://dbpedia.org/ontology/associatedMusicalArtist",
        "seq": "-1,24",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "label",
        "uri": "http://dbpedia.org/property/label",
        "seq": "52,57",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "musical artist",
        "uri": "http://dbpedia.org/ontology/MusicalArtist",
        "seq": "6,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "7",
    "question": "Whose labels are Victor Entertainment and Celluloid Records?",
    "SerialNumber": "3045",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/property/label\u003e \u003chttp://dbpedia.org/resource/Victor_Entertainment\u003e . ?uri \u003chttp://dbpedia.org/property/label\u003e \u003chttp://dbpedia.org/resource/Celluloid_Records\u003e . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Victor Entertainment",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Victor_Entertainment",
        "seq": "17,37"
      },
      {
        "label": "Celluloid Records",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Celluloid_Records",
        "seq": "42,59"
      }
    ],
    "id": "01b888b9a2c541569160d22ed502b036",
    "predicate mapping": [
      {
        "label": "label",
        "uri": "http://dbpedia.org/property/label",
        "seq": "6,11",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "label",
        "uri": "http://dbpedia.org/property/label",
        "seq": "6,11",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Where is the tombstone of the parliament members who served with James Roberts as the Vice President, US?",
    "SerialNumber": "3047",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/vicePresident\u003e \u003chttp://dbpedia.org/resource/James_Roberts_(trade_unionist)\u003e . ?x \u003chttp://dbpedia.org/ontology/restingPlace\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MemberOfParliament\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "James Roberts",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/James_Roberts_(trade_unionist)",
        "seq": "65,78"
      }
    ],
    "id": "1f6fd444f7bb47f3a2d9b177207bd93b",
    "predicate mapping": [
      {
        "label": "Vice President",
        "uri": "http://dbpedia.org/ontology/vicePresident",
        "seq": "86,100",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "tomb",
        "uri": "http://dbpedia.org/ontology/restingPlace",
        "seq": "13,17",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "parliament",
        "uri": "http://dbpedia.org/ontology/MemberOfParliament",
        "seq": "30,40",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Which school teams are there in schools of Arlington Heights, Illinois?",
    "SerialNumber": "3049",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/city\u003e \u003chttp://dbpedia.org/resource/Arlington_Heights,_Illinois\u003e . ?x \u003chttp://dbpedia.org/property/teamName\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/School\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Arlington Heights, Illinois",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Arlington_Heights,_Illinois",
        "seq": "43,70"
      }
    ],
    "id": "333d5cd5059b45d3962c5df06c13b5a8",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/property/city",
        "seq": "29,31",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "teams",
        "uri": "http://dbpedia.org/property/teamName",
        "seq": "13,18",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "school",
        "uri": "http://dbpedia.org/ontology/School",
        "seq": "6,12",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "List the academic discipline of the journals whose publisher is SAGE Publications.",
    "SerialNumber": "3053",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/publisher\u003e \u003chttp://dbpedia.org/resource/SAGE_Publications\u003e . ?x \u003chttp://dbpedia.org/ontology/academicDiscipline\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/AcademicJournal\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "SAGE Publications",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/SAGE_Publications",
        "seq": "64,81"
      }
    ],
    "id": "829a21985c7e487794927252d84f61ea",
    "predicate mapping": [
      {
        "label": "publisher",
        "uri": "http://dbpedia.org/property/publisher",
        "seq": "51,60",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "academic discipline",
        "uri": "http://dbpedia.org/ontology/academicDiscipline",
        "seq": "9,28",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "academic",
        "uri": "http://dbpedia.org/ontology/AcademicJournal",
        "seq": "9,17",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who is the producer of  Frampton\u0027s Camel ?",
    "SerialNumber": "3055",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Frampton\u0027s_Camel\u003e \u003chttp://dbpedia.org/property/producer\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Frampton\u0027s Camel",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Frampton\u0027s_Camel",
        "seq": "24,40"
      }
    ],
    "id": "66e01d57a2df4c9f85521c5217cd6e8b",
    "predicate mapping": [
      {
        "label": "producer",
        "uri": "http://dbpedia.org/property/producer",
        "seq": "11,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Who founded the city at the end of the Pittsburgh Line route?",
    "SerialNumber": "3056",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Pittsburgh_Line\u003e \u003chttp://dbpedia.org/ontology/routeEnd\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/founder\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Pittsburgh Line",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Pittsburgh_Line",
        "seq": "39,54"
      }
    ],
    "id": "77ff380ac54845299a3af128262d754e",
    "predicate mapping": [
      {
        "label": "route end",
        "uri": "http://dbpedia.org/ontology/routeEnd",
        "seq": "-1,8",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "founded",
        "uri": "http://dbpedia.org/ontology/founder",
        "seq": "4,11",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "How many developers were involved in creating games whose score is composed by Gerard Marino?",
    "SerialNumber": "3057",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/composer\u003e \u003chttp://dbpedia.org/resource/Gerard_Marino\u003e . ?x \u003chttp://dbpedia.org/ontology/developer\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Gerard Marino",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Gerard_Marino",
        "seq": "79,92"
      }
    ],
    "id": "ab9baa98e6fb4a059714923fda2f04d5",
    "predicate mapping": [
      {
        "label": "composed by",
        "uri": "http://dbpedia.org/ontology/composer",
        "seq": "67,78",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "developer",
        "uri": "http://dbpedia.org/ontology/developer",
        "seq": "9,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "102",
    "question": "Count the key people of the Clinton Foundation?",
    "SerialNumber": "3060",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { \u003chttp://dbpedia.org/resource/Clinton_Foundation\u003e \u003chttp://dbpedia.org/property/keyPeople\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Clinton Foundation",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Clinton_Foundation",
        "seq": "28,46"
      }
    ],
    "id": "7929405db86045639c914a7ee9838ebe",
    "predicate mapping": [
      {
        "label": "key people",
        "uri": "http://dbpedia.org/property/keyPeople",
        "seq": "10,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "Give me someone on the board of trinity house?",
    "SerialNumber": "3061",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/board\u003e \u003chttp://dbpedia.org/resource/Trinity_House\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "trinity house",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Trinity_House",
        "seq": "32,45"
      }
    ],
    "id": "dcf0ebac4929414587aae36086a4e6e1",
    "predicate mapping": [
      {
        "label": "board",
        "uri": "http://dbpedia.org/ontology/board",
        "seq": "23,28",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "401",
    "question": "Count  the journals in the field of Philosophy.",
    "SerialNumber": "3062",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/property/discipline\u003e \u003chttp://dbpedia.org/resource/Philosophy\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/AcademicJournal\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Philosophy",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Philosophy",
        "seq": "36,46"
      }
    ],
    "id": "b4c8a3b66e0e4e5f84d3b105133a1a76",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/property/discipline",
        "seq": "20,22",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "journals",
        "uri": "http://dbpedia.org/ontology/AcademicJournal",
        "seq": "11,19",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which former team of the Harry Parker (baseball) is the  debut team of the Carl Sitton?",
    "SerialNumber": "3063",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Harry_Parker_(baseball)\u003e \u003chttp://dbpedia.org/ontology/formerTeam\u003e ?uri. \u003chttp://dbpedia.org/resource/Carl_Sitton\u003e \u003chttp://dbpedia.org/property/debutteam\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Harry Parker (baseball)",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Harry_Parker_(baseball)",
        "seq": "25,48"
      },
      {
        "label": "Carl Sitton",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Carl_Sitton",
        "seq": "75,86"
      }
    ],
    "id": "f0b3be48f76141be802e4a2acc00e427",
    "predicate mapping": [
      {
        "label": "former team",
        "uri": "http://dbpedia.org/ontology/formerTeam",
        "seq": "6,17",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "debut team",
        "uri": "http://dbpedia.org/property/debutteam",
        "seq": "57,67",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who designed the bridge over the Valaichchenai lagoon?",
    "SerialNumber": "3064",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/crosses\u003e \u003chttp://dbpedia.org/resource/Valaichchenai_Lagoon\u003e . ?x \u003chttp://dbpedia.org/property/designer\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Bridge\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Valaichchenai lagoon",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Valaichchenai_Lagoon",
        "seq": "33,53"
      }
    ],
    "id": "8989b26f786b4644a8bd2c8d966c59a7",
    "predicate mapping": [
      {
        "label": "bridge over",
        "uri": "http://dbpedia.org/property/crosses",
        "seq": "17,28",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "designed",
        "uri": "http://dbpedia.org/property/designer",
        "seq": "4,12",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "bridge",
        "uri": "http://dbpedia.org/ontology/Bridge",
        "seq": "17,23",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "311",
    "question": "List all the artist of the TV shows which has McClain as one of the artist ?",
    "SerialNumber": "3065",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/artist\u003e \u003chttp://dbpedia.org/resource/McClain_(band)\u003e . ?x \u003chttp://dbpedia.org/property/artist\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "McClain",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/McClain_(band)",
        "seq": "46,53"
      }
    ],
    "id": "a82a76ab3a4e43b4b970a48f9341fa82",
    "predicate mapping": [
      {
        "label": "artist",
        "uri": "http://dbpedia.org/property/artist",
        "seq": "13,19",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "artist",
        "uri": "http://dbpedia.org/property/artist",
        "seq": "13,19",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "30,35",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Which fictional character is portrayed by Roger Barton (film editor)?",
    "SerialNumber": "3066",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/portrayer\u003e \u003chttp://dbpedia.org/resource/Roger_Barton_(film_editor)\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/FictionalCharacter\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Roger Barton (film editor)",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Roger_Barton_(film_editor)",
        "seq": "42,68"
      }
    ],
    "id": "8a6304978223453caa7f58e579290646",
    "predicate mapping": [
      {
        "label": "portrayed",
        "uri": "http://dbpedia.org/property/portrayer",
        "seq": "29,38",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "fictional character",
        "uri": "http://dbpedia.org/ontology/FictionalCharacter",
        "seq": "6,25",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "311",
    "question": "Name the nearest city to the historic place which has Englewood, Colorado as one of them ?",
    "SerialNumber": "3071",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/nearestCity\u003e \u003chttp://dbpedia.org/resource/Englewood,_Colorado\u003e . ?x \u003chttp://dbpedia.org/ontology/nearestCity\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/HistoricPlace\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Englewood, Colorado",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Englewood,_Colorado",
        "seq": "54,73"
      }
    ],
    "id": "14b649e758114f038de6c1dad6027728",
    "predicate mapping": [
      {
        "label": "nearest city",
        "uri": "http://dbpedia.org/property/nearestCity",
        "seq": "9,21",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "nearest city",
        "uri": "http://dbpedia.org/ontology/nearestCity",
        "seq": "9,21",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "historic place",
        "uri": "http://dbpedia.org/ontology/HistoricPlace",
        "seq": "29,43",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which area operataed by the South Side Elevated Railroad is also the palce of death of the Sakari Suzuki ?",
    "SerialNumber": "3073",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/South_Side_Elevated_Railroad\u003e \u003chttp://dbpedia.org/ontology/operatedBy\u003e ?uri. \u003chttp://dbpedia.org/resource/Sakari_Suzuki\u003e \u003chttp://dbpedia.org/property/deathPlace\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "South Side Elevated Railroad",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/South_Side_Elevated_Railroad",
        "seq": "28,56"
      },
      {
        "label": "Sakari Suzuki",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Sakari_Suzuki",
        "seq": "91,104"
      }
    ],
    "id": "91aee5e1ffe6462bac764925234764de",
    "predicate mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/ontology/operatedBy",
        "seq": "0,0",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "death",
        "uri": "http://dbpedia.org/property/deathPlace",
        "seq": "78,83",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "311",
    "question": "List all the former partners of the figure skater whose one of the former partner was Andrea poapst ?",
    "SerialNumber": "3076",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/formerPartner\u003e \u003chttp://dbpedia.org/resource/Andrea_Poapst\u003e . ?x \u003chttp://dbpedia.org/ontology/formerPartner\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/FigureSkater\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Andrea poapst",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Andrea_Poapst",
        "seq": "86,99"
      }
    ],
    "id": "6a4481eea53441dd93ec930653e08be0",
    "predicate mapping": [
      {
        "label": "former partner",
        "uri": "http://dbpedia.org/ontology/formerPartner",
        "seq": "13,27",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "former partner",
        "uri": "http://dbpedia.org/ontology/formerPartner",
        "seq": "13,27",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "figure skater",
        "uri": "http://dbpedia.org/ontology/FigureSkater",
        "seq": "36,49",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which band made the song Take me There, and has collaborated with Blayse in the past?",
    "SerialNumber": "3078",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Take_Me_There_(Blackstreet_\u0026_Mýa_song)\u003e \u003chttp://dbpedia.org/ontology/musicalBand\u003e ?uri. \u003chttp://dbpedia.org/resource/Blayse\u003e \u003chttp://dbpedia.org/ontology/associatedBand\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Take me There",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Take_Me_There_(Blackstreet_\u0026_Mýa_song)",
        "seq": "25,38"
      },
      {
        "label": "Blayse",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Blayse",
        "seq": "66,72"
      }
    ],
    "id": "9463f20554d74722b20e3d92a0afb024",
    "predicate mapping": [
      {
        "label": "band",
        "uri": "http://dbpedia.org/ontology/musicalBand",
        "seq": "6,10",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "band",
        "uri": "http://dbpedia.org/ontology/associatedBand",
        "seq": "6,10",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "108",
    "question": "How many have order (taxonomy) as Bacillales and division as Firmicutes are there?",
    "SerialNumber": "3080",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/ontology/order\u003e \u003chttp://dbpedia.org/resource/Bacillales\u003e . ?uri \u003chttp://dbpedia.org/ontology/division\u003e \u003chttp://dbpedia.org/resource/Firmicutes\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Bacillales",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Bacillales",
        "seq": "34,44"
      },
      {
        "label": "Firmicutes",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Firmicutes",
        "seq": "61,71"
      }
    ],
    "id": "b8635fcc40054be7ab13c01967f64197",
    "predicate mapping": [
      {
        "label": "order (taxonomy)",
        "uri": "http://dbpedia.org/ontology/order",
        "seq": "14,30",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "division",
        "uri": "http://dbpedia.org/ontology/division",
        "seq": "49,57",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "108",
    "question": "How many have company as Paramount Television and network as NBC are there?",
    "SerialNumber": "3082",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/property/company\u003e \u003chttp://dbpedia.org/resource/Paramount_Television\u003e . ?uri \u003chttp://dbpedia.org/ontology/network\u003e \u003chttp://dbpedia.org/resource/NBC\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Paramount Television",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Paramount_Television",
        "seq": "25,45"
      },
      {
        "label": "NBC",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/NBC",
        "seq": "61,64"
      }
    ],
    "id": "f7ac133498534de782ec5fb02ef8a8f2",
    "predicate mapping": [
      {
        "label": "company",
        "uri": "http://dbpedia.org/property/company",
        "seq": "14,21",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "network",
        "uri": "http://dbpedia.org/ontology/network",
        "seq": "50,57",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "What is the birthplace of the office holder who is the predecessor of Brian Peddle ?",
    "SerialNumber": "3083",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Brian_Peddle\u003e \u003chttp://dbpedia.org/property/predecessor\u003e ?x . ?x \u003chttp://dbpedia.org/property/birthPlace\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/OfficeHolder\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Brian Peddle",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Brian_Peddle",
        "seq": "70,82"
      }
    ],
    "id": "d73d838df73b44d0a6ddab13ae678fc9",
    "predicate mapping": [
      {
        "label": "predecessor",
        "uri": "http://dbpedia.org/property/predecessor",
        "seq": "55,66",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "birthplace",
        "uri": "http://dbpedia.org/property/birthPlace",
        "seq": "12,22",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "office holder",
        "uri": "http://dbpedia.org/ontology/OfficeHolder",
        "seq": "30,43",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the hometown of John Speraw ?",
    "SerialNumber": "3084",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/John_Speraw\u003e \u003chttp://dbpedia.org/property/hometown\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "John Speraw",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/John_Speraw",
        "seq": "24,35"
      }
    ],
    "id": "86f65bd1385144dfb07dd940f6dc77de",
    "predicate mapping": [
      {
        "label": "hometown",
        "uri": "http://dbpedia.org/property/hometown",
        "seq": "12,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the affiliation of Vanderbilt University Medical Center ?",
    "SerialNumber": "3085",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Vanderbilt_University_Medical_Center\u003e \u003chttp://dbpedia.org/property/affiliation\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Vanderbilt University Medical Center",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Vanderbilt_University_Medical_Center",
        "seq": "27,63"
      }
    ],
    "id": "53ffec1f77474312b866a1ef550836ec",
    "predicate mapping": [
      {
        "label": "affiliation",
        "uri": "http://dbpedia.org/property/affiliation",
        "seq": "12,23",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Which awards has been given to both michel hazanavicius and geoffrey rush?",
    "SerialNumber": "3086",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Michel_Hazanavicius\u003e \u003chttp://dbpedia.org/property/awards\u003e ?uri. \u003chttp://dbpedia.org/resource/Geoffrey_Rush\u003e \u003chttp://dbpedia.org/property/awards\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "michel hazanavicius",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Michel_Hazanavicius",
        "seq": "36,55"
      },
      {
        "label": "geoffrey rush",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Geoffrey_Rush",
        "seq": "60,73"
      }
    ],
    "id": "9a35da4952d244529b72c489a452b9d1",
    "predicate mapping": [
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards",
        "seq": "6,12",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards",
        "seq": "6,12",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What is the mascot of the rival school of Sullivan Central High?",
    "SerialNumber": "3087",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Sullivan_Central_High_School\u003e \u003chttp://dbpedia.org/property/rival\u003e ?x . ?x \u003chttp://dbpedia.org/property/mascot\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Sullivan Central High",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Sullivan_Central_High_School",
        "seq": "42,63"
      }
    ],
    "id": "9f0073c478fd4bf6a6bc808734ee4d21",
    "predicate mapping": [
      {
        "label": "rival",
        "uri": "http://dbpedia.org/property/rival",
        "seq": "26,31",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "mascot",
        "uri": "http://dbpedia.org/property/mascot",
        "seq": "12,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "406",
    "question": "How many airlines have a hub at an airport run by LA World Airports?",
    "SerialNumber": "3089",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/operator\u003e \u003chttp://dbpedia.org/resource/Los_Angeles_World_Airports\u003e . ?uri \u003chttp://dbpedia.org/ontology/hubAirport\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Airline\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "LA World Airports",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Los_Angeles_World_Airports",
        "seq": "50,67"
      }
    ],
    "id": "9b92048679a944be937dd4f049c925cb",
    "predicate mapping": [
      {
        "label": "at",
        "uri": "http://dbpedia.org/ontology/operator",
        "seq": "29,31",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "airport",
        "uri": "http://dbpedia.org/ontology/hubAirport",
        "seq": "35,42",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "airline",
        "uri": "http://dbpedia.org/ontology/Airline",
        "seq": "9,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What are the main interests of Timothy Morton?",
    "SerialNumber": "3090",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Timothy_Morton\u003e \u003chttp://dbpedia.org/property/mainInterests\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Timothy Morton",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Timothy_Morton",
        "seq": "31,45"
      }
    ],
    "id": "3e2e7e2477ca4d47a63eae5961eb232f",
    "predicate mapping": [
      {
        "label": "main interests",
        "uri": "http://dbpedia.org/property/mainInterests",
        "seq": "13,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "Whose network\u0027s parent organisation is Comcast?",
    "SerialNumber": "3091",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/parentOrganisation\u003e \u003chttp://dbpedia.org/resource/Comcast\u003e . ?uri \u003chttp://dbpedia.org/ontology/network\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Comcast",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Comcast",
        "seq": "39,46"
      }
    ],
    "id": "2c7b634c43f94007bee6aa23f424829c",
    "predicate mapping": [
      {
        "label": "parent organisation",
        "uri": "http://dbpedia.org/ontology/parentOrganisation",
        "seq": "16,35",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "network",
        "uri": "http://dbpedia.org/ontology/network",
        "seq": "6,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "311",
    "question": "List all the locations of the companies whose are also located in Rancho Cucamonga, California ?",
    "SerialNumber": "3092",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/locationCountry\u003e \u003chttp://dbpedia.org/resource/Rancho_Cucamonga,_California\u003e . ?x \u003chttp://dbpedia.org/ontology/locationCountry\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Company\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Rancho Cucamonga, California",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Rancho_Cucamonga,_California",
        "seq": "66,94"
      }
    ],
    "id": "186bdaf5fbc04890bd2dcb3041776050",
    "predicate mapping": [
      {
        "label": "locations",
        "uri": "http://dbpedia.org/property/locationCountry",
        "seq": "13,22",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "locations",
        "uri": "http://dbpedia.org/ontology/locationCountry",
        "seq": "13,22",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "companies",
        "uri": "http://dbpedia.org/ontology/Company",
        "seq": "30,39",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Name the common editor of Easy Street (film) and Work (film)?",
    "SerialNumber": "3093",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Easy_Street_(film)\u003e \u003chttp://dbpedia.org/ontology/editing\u003e ?uri. \u003chttp://dbpedia.org/resource/Work_(film)\u003e \u003chttp://dbpedia.org/ontology/editing\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Easy Street (film)",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Easy_Street_(film)",
        "seq": "26,44"
      },
      {
        "label": "Work (film)",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Work_(film)",
        "seq": "49,60"
      }
    ],
    "id": "4fc2bcb888944f50969d6131075914e7",
    "predicate mapping": [
      {
        "label": "editor",
        "uri": "http://dbpedia.org/ontology/editing",
        "seq": "16,22",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "editor",
        "uri": "http://dbpedia.org/ontology/editing",
        "seq": "16,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Which are the television show which have been created by Donald Wilson?",
    "SerialNumber": "3094",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/creator\u003e \u003chttp://dbpedia.org/resource/Donald_Wilson_(writer_and_producer)\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Donald Wilson",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Donald_Wilson_(writer_and_producer)",
        "seq": "57,70"
      }
    ],
    "id": "383f41d0dcfb442f8a4606d5de36ac08",
    "predicate mapping": [
      {
        "label": "created by",
        "uri": "http://dbpedia.org/ontology/creator",
        "seq": "46,56",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "14,29",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "7",
    "question": "Whose successors are Robert P. Smith and Adrian A. Basora?",
    "SerialNumber": "3095",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/property/successor\u003e \u003chttp://dbpedia.org/resource/Robert_P._Smith\u003e . ?uri \u003chttp://dbpedia.org/property/successor\u003e \u003chttp://dbpedia.org/resource/Adrian_A._Basora\u003e . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Robert P. Smith",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Robert_P._Smith",
        "seq": "21,36"
      },
      {
        "label": "Adrian A. Basora",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Adrian_A._Basora",
        "seq": "41,57"
      }
    ],
    "id": "5b273f2881264b6f9ad4004f1b82b9f4",
    "predicate mapping": [
      {
        "label": "successor",
        "uri": "http://dbpedia.org/property/successor",
        "seq": "6,15",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "successor",
        "uri": "http://dbpedia.org/property/successor",
        "seq": "6,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Did Jerry Siegel create Lois Lane?",
    "SerialNumber": "3097",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Lois_Lane\u003e \u003chttp://dbpedia.org/property/creators\u003e \u003chttp://dbpedia.org/resource/Jerry_Siegel\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Lois Lane",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Lois_Lane",
        "seq": "24,33"
      },
      {
        "label": "Jerry Siegel",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Jerry_Siegel",
        "seq": "4,16"
      }
    ],
    "id": "b7900ed86fb84fd7a7f479831e72bfcb",
    "predicate mapping": [
      {
        "label": "create",
        "uri": "http://dbpedia.org/property/creators",
        "seq": "17,23",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "Which awards did the writer, who is  the creator of Creature Comforts, won ?",
    "SerialNumber": "3098",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Creature_Comforts\u003e \u003chttp://dbpedia.org/property/creator\u003e ?x . ?x \u003chttp://dbpedia.org/property/awards\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Writer\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Creature Comforts",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Creature_Comforts",
        "seq": "52,69"
      }
    ],
    "id": "4b03656d18b848c5830c2015fa4a9cdd",
    "predicate mapping": [
      {
        "label": "creator",
        "uri": "http://dbpedia.org/property/creator",
        "seq": "41,48",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards",
        "seq": "6,12",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "writer",
        "uri": "http://dbpedia.org/ontology/Writer",
        "seq": "21,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Which team did Wilfred McDonalds and Cam Plante play for?",
    "SerialNumber": "3100",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Wilfred_McDonald\u003e \u003chttp://dbpedia.org/property/playedFor\u003e ?uri. \u003chttp://dbpedia.org/resource/Cam_Plante\u003e \u003chttp://dbpedia.org/property/playedFor\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Wilfred McDonald",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Wilfred_McDonald",
        "seq": "15,31"
      },
      {
        "label": "Cam Plante",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Cam_Plante",
        "seq": "37,47"
      }
    ],
    "id": "0ea3f7d690c9488d82d9805a2e705cdc",
    "predicate mapping": [
      {
        "label": "team",
        "uri": "http://dbpedia.org/property/playedFor",
        "seq": "6,10",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/property/playedFor",
        "seq": "6,10",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "Who is the former partner of the figure skater which was the former partner of Brynn Carman ?",
    "SerialNumber": "3101",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Brynn_Carman\u003e \u003chttp://dbpedia.org/ontology/formerPartner\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/formerPartner\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/FigureSkater\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Brynn Carman",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Brynn_Carman",
        "seq": "79,91"
      }
    ],
    "id": "74c48daf3f3e40b8b2a9075494203130",
    "predicate mapping": [
      {
        "label": "former partner",
        "uri": "http://dbpedia.org/ontology/formerPartner",
        "seq": "11,25",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "former partner",
        "uri": "http://dbpedia.org/ontology/formerPartner",
        "seq": "11,25",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "figure skater",
        "uri": "http://dbpedia.org/ontology/FigureSkater",
        "seq": "33,46",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "101",
    "question": "England is the origin of how many things?",
    "SerialNumber": "3102",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/property/origin\u003e \u003chttp://dbpedia.org/resource/England\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "England",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/England",
        "seq": "0,7"
      }
    ],
    "id": "563b1fefc10e4618a5b680d3baa31037",
    "predicate mapping": [
      {
        "label": "origin",
        "uri": "http://dbpedia.org/property/origin",
        "seq": "15,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "What is the common debut team of the Butch Metzger and Dan Otero?",
    "SerialNumber": "3103",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Butch_Metzger\u003e \u003chttp://dbpedia.org/ontology/debutTeam\u003e ?uri. \u003chttp://dbpedia.org/resource/Dan_Otero\u003e \u003chttp://dbpedia.org/ontology/debutTeam\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Butch Metzger",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Butch_Metzger",
        "seq": "37,50"
      },
      {
        "label": "Dan Otero",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Dan_Otero",
        "seq": "55,64"
      }
    ],
    "id": "2502d9f7189e473992f6091f18a256fe",
    "predicate mapping": [
      {
        "label": "debut team",
        "uri": "http://dbpedia.org/ontology/debutTeam",
        "seq": "19,29",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "debut team",
        "uri": "http://dbpedia.org/ontology/debutTeam",
        "seq": "19,29",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What religion is followed by the commander of Defense Security Command?",
    "SerialNumber": "3104",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Defense_Security_Command\u003e \u003chttp://dbpedia.org/ontology/notableCommander\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/religion\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Defense Security Command",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Defense_Security_Command",
        "seq": "46,70"
      }
    ],
    "id": "bd1de460e21d4db4bf8e5065934b8bc6",
    "predicate mapping": [
      {
        "label": "commander",
        "uri": "http://dbpedia.org/ontology/notableCommander",
        "seq": "33,42",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion",
        "seq": "5,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Where was Al-Muzaffar Umar buried ?",
    "SerialNumber": "3109",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Al-Muzaffar_Umar\u003e \u003chttp://dbpedia.org/property/placeOfBurial\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Al-Muzaffar Umar",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Al-Muzaffar_Umar",
        "seq": "10,26"
      }
    ],
    "id": "e83b9ec4abef418585e8a76f2dae15f4",
    "predicate mapping": [
      {
        "label": "buried",
        "uri": "http://dbpedia.org/property/placeOfBurial",
        "seq": "27,33",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Which musical artists have collaborated with Waylon Jennings?",
    "SerialNumber": "3113",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/associatedMusicalArtist\u003e \u003chttp://dbpedia.org/resource/Waylon_Jennings\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MusicalArtist\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Waylon Jennings",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Waylon_Jennings",
        "seq": "45,60"
      }
    ],
    "id": "004432a58e614e89a30c84e3df4164e0",
    "predicate mapping": [
      {
        "label": "musical",
        "uri": "http://dbpedia.org/ontology/associatedMusicalArtist",
        "seq": "6,13",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "musical artist",
        "uri": "http://dbpedia.org/ontology/MusicalArtist",
        "seq": "6,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "where did soccer bowl take place in 76?",
    "SerialNumber": "3114",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Soccer_Bowl_\u002776\u003e \u003chttp://dbpedia.org/ontology/city\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "soccer bowl",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Soccer_Bowl_\u002776",
        "seq": "36,38"
      }
    ],
    "id": "5bc7320186b842359a554f9fe14298dd",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/city",
        "seq": "33,35",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "401",
    "question": "How many movies were cinematographed by Jordan Cronenweth?",
    "SerialNumber": "3116",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/ontology/cinematography\u003e \u003chttp://dbpedia.org/resource/Jordan_Cronenweth\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jordan Cronenweth",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Jordan_Cronenweth",
        "seq": "40,57"
      }
    ],
    "id": "443a00fd2e584e189bc1bd31ac97b83f",
    "predicate mapping": [
      {
        "label": "cinematographed",
        "uri": "http://dbpedia.org/ontology/cinematography",
        "seq": "21,36",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Who is the producer of album which has the song Money?",
    "SerialNumber": "3118",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Money_(Pink_Floyd_song)\u003e \u003chttp://dbpedia.org/property/album\u003e ?x . ?x \u003chttp://dbpedia.org/property/producer\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Money",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Money_(Pink_Floyd_song)",
        "seq": "48,53"
      }
    ],
    "id": "19d1d7a22c4a4cbc8b813fc291a6142f",
    "predicate mapping": [
      {
        "label": "album",
        "uri": "http://dbpedia.org/property/album",
        "seq": "23,28",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "producer",
        "uri": "http://dbpedia.org/property/producer",
        "seq": "11,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "401",
    "question": "Give me a count of airlines whose hub airport is Los Angeles International Airport?",
    "SerialNumber": "3120",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/ontology/hubAirport\u003e \u003chttp://dbpedia.org/resource/Los_Angeles_International_Airport\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Airline\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Los Angeles International Airport",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Los_Angeles_International_Airport",
        "seq": "49,82"
      }
    ],
    "id": "3d5efd9583804ec4b72267a23374e76c",
    "predicate mapping": [
      {
        "label": "hub airport",
        "uri": "http://dbpedia.org/ontology/hubAirport",
        "seq": "34,45",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "airline",
        "uri": "http://dbpedia.org/ontology/Airline",
        "seq": "19,26",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Did Alexandre Tichonov study at the Moscow university?",
    "SerialNumber": "3121",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Alexandre_Tichonov\u003e \u003chttp://dbpedia.org/property/university\u003e \u003chttp://dbpedia.org/resource/Moscow\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Alexandre Tichonov",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Alexandre_Tichonov",
        "seq": "4,22"
      },
      {
        "label": "Moscow university",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Moscow",
        "seq": "36,53"
      }
    ],
    "id": "e3a008c553da49fd876ece5a7c775750",
    "predicate mapping": [
      {
        "label": "university",
        "uri": "http://dbpedia.org/property/university",
        "seq": "43,53",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the river whose source place is Gloucestershire and mouth place is Southend-on-Sea ?",
    "SerialNumber": "3122",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/sourcePlace\u003e \u003chttp://dbpedia.org/resource/Gloucestershire\u003e . ?uri \u003chttp://dbpedia.org/ontology/mouthPlace\u003e \u003chttp://dbpedia.org/resource/Southend-on-Sea\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/River\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Gloucestershire",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Gloucestershire",
        "seq": "37,52"
      },
      {
        "label": "Southend-on-Sea",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Southend-on-Sea",
        "seq": "72,87"
      }
    ],
    "id": "9909bc6ab5e94d539ff2c98c952e5800",
    "predicate mapping": [
      {
        "label": "source place",
        "uri": "http://dbpedia.org/ontology/sourcePlace",
        "seq": "21,33",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "mouth place",
        "uri": "http://dbpedia.org/ontology/mouthPlace",
        "seq": "57,68",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "102",
    "question": "How many members are there in the European Go Federation?",
    "SerialNumber": "3123",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { \u003chttp://dbpedia.org/resource/European_Go_Federation\u003e \u003chttp://dbpedia.org/property/membership\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "European Go Federation",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/European_Go_Federation",
        "seq": "34,56"
      }
    ],
    "id": "1f086bdd8ed24312b65cf9f137499a64",
    "predicate mapping": [
      {
        "label": "members",
        "uri": "http://dbpedia.org/property/membership",
        "seq": "9,16",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Momoko Kchi has acted in which movie ?",
    "SerialNumber": "3124",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/starring\u003e \u003chttp://dbpedia.org/resource/Momoko_Kōchi\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Momoko Kchi",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Momoko_Kōchi",
        "seq": "0,11"
      }
    ],
    "id": "612fd54a14cf4ea1bd327ac4ab6a3475",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/starring",
        "seq": "22,24",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "31,36",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "List all the notable works of  Russell T Davies?",
    "SerialNumber": "3125",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Russell_T_Davies\u003e \u003chttp://dbpedia.org/ontology/notableWork\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Russell T Davies",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Russell_T_Davies",
        "seq": "31,47"
      }
    ],
    "id": "2380fcd83c494a80927f6825ba436c94",
    "predicate mapping": [
      {
        "label": "notable work",
        "uri": "http://dbpedia.org/ontology/notableWork",
        "seq": "13,25",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "401",
    "question": "How many movies did Michael Deeley produce?",
    "SerialNumber": "3128",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/property/producer\u003e \u003chttp://dbpedia.org/resource/Michael_Deeley\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Michael Deeley",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Michael_Deeley",
        "seq": "20,34"
      }
    ],
    "id": "398001dda0f745a3a783b7916f2b2376",
    "predicate mapping": [
      {
        "label": "produce",
        "uri": "http://dbpedia.org/property/producer",
        "seq": "35,42",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which college of the Luke List (golfer) is the alma mater of the Park Trammell ?",
    "SerialNumber": "3129",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Luke_List_(golfer)\u003e \u003chttp://dbpedia.org/property/college\u003e ?uri. \u003chttp://dbpedia.org/resource/Park_Trammell\u003e \u003chttp://dbpedia.org/ontology/almaMater\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Luke List",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Luke_List_(golfer)",
        "seq": "21,30"
      },
      {
        "label": "Park Trammell",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Park_Trammell",
        "seq": "65,78"
      }
    ],
    "id": "f06758ad9c714bf490f784dcceb3ba90",
    "predicate mapping": [
      {
        "label": "college",
        "uri": "http://dbpedia.org/property/college",
        "seq": "6,13",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/ontology/almaMater",
        "seq": "47,57",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Spanish harlem incident was composed by whom ?",
    "SerialNumber": "3130",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Spanish_Harlem_Incident\u003e \u003chttp://dbpedia.org/ontology/composer\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Spanish harlem incident",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Spanish_Harlem_Incident",
        "seq": "0,23"
      }
    ],
    "id": "daa582dfaf1a4472bddfa0b0a4deb1e5",
    "predicate mapping": [
      {
        "label": "composed by",
        "uri": "http://dbpedia.org/ontology/composer",
        "seq": "28,39",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "108",
    "question": "Count the movies edited by  Mark Stevens (film editor) and were directed by Joel Schumacher?",
    "SerialNumber": "3132",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/property/editing\u003e \u003chttp://dbpedia.org/resource/Mark_Stevens_(film_editor)\u003e . ?uri \u003chttp://dbpedia.org/ontology/director\u003e \u003chttp://dbpedia.org/resource/Joel_Schumacher\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Mark Stevens (film editor)",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Mark_Stevens_(film_editor)",
        "seq": "28,54"
      },
      {
        "label": "Joel Schumacher",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Joel_Schumacher",
        "seq": "76,91"
      }
    ],
    "id": "ef08c3edfb5e4c85ba7a33a77a5f0119",
    "predicate mapping": [
      {
        "label": "edited by",
        "uri": "http://dbpedia.org/property/editing",
        "seq": "17,26",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "directed by",
        "uri": "http://dbpedia.org/ontology/director",
        "seq": "64,75",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "List some songwriters whose work has been recorded in Miami?",
    "SerialNumber": "3134",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/recordedIn\u003e \u003chttp://dbpedia.org/resource/Miami\u003e . ?x \u003chttp://dbpedia.org/property/writer\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Work\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Miami",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Miami",
        "seq": "54,59"
      }
    ],
    "id": "707d9bdd0d8e44a1bae79286521ce0fc",
    "predicate mapping": [
      {
        "label": "recorded in",
        "uri": "http://dbpedia.org/ontology/recordedIn",
        "seq": "42,53",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "writers",
        "uri": "http://dbpedia.org/property/writer",
        "seq": "14,21",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "work",
        "uri": "http://dbpedia.org/ontology/Work",
        "seq": "28,32",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which fictional character portrayed by Roger barton has Darth Vader as family member ?",
    "SerialNumber": "3135",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/family\u003e \u003chttp://dbpedia.org/resource/Darth_Vader\u003e . ?uri \u003chttp://dbpedia.org/property/portrayer\u003e \u003chttp://dbpedia.org/resource/Roger_Barton_(film_editor)\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/FictionalCharacter\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Darth Vader",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Darth_Vader",
        "seq": "56,67"
      },
      {
        "label": "Roger barton",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Roger_Barton_(film_editor)",
        "seq": "39,51"
      }
    ],
    "id": "d5c3a119f9f8443584725cba541904f6",
    "predicate mapping": [
      {
        "label": "family",
        "uri": "http://dbpedia.org/property/family",
        "seq": "71,77",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "portrayed",
        "uri": "http://dbpedia.org/property/portrayer",
        "seq": "26,35",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "fictional character",
        "uri": "http://dbpedia.org/ontology/FictionalCharacter",
        "seq": "6,25",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Elizabeth Alexander and Jared Bernstein served under which Vice President?",
    "SerialNumber": "3136",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Elizabeth_Alexander_(press_secretary)\u003e \u003chttp://dbpedia.org/ontology/vicePresident\u003e ?uri. \u003chttp://dbpedia.org/resource/Jared_Bernstein\u003e \u003chttp://dbpedia.org/ontology/vicePresident\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Elizabeth Alexander",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Elizabeth_Alexander_(press_secretary)",
        "seq": "0,19"
      },
      {
        "label": "Jared Bernstein",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Jared_Bernstein",
        "seq": "24,39"
      }
    ],
    "id": "3375a4f07f5548d1ae047a3fa248dd11",
    "predicate mapping": [
      {
        "label": "Vice President",
        "uri": "http://dbpedia.org/ontology/vicePresident",
        "seq": "59,73",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "Vice President",
        "uri": "http://dbpedia.org/ontology/vicePresident",
        "seq": "59,73",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "To which country does Peter Blay owe his allegiance?",
    "SerialNumber": "3137",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Peter_Blay\u003e \u003chttp://dbpedia.org/property/allegiance\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Peter Blay",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Peter_Blay",
        "seq": "22,32"
      }
    ],
    "id": "c43db2cba5e24a05bdfa5d77aa3667ed",
    "predicate mapping": [
      {
        "label": "allegiance",
        "uri": "http://dbpedia.org/property/allegiance",
        "seq": "41,51",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "Which citys mayor is anne hidalgo?",
    "SerialNumber": "3138",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/mayor\u003e \u003chttp://dbpedia.org/resource/Anne_Hidalgo\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "anne hidalgo",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Anne_Hidalgo",
        "seq": "21,33"
      }
    ],
    "id": "ce5857e30c24478bacad831b90eb559c",
    "predicate mapping": [
      {
        "label": "mayor",
        "uri": "http://dbpedia.org/ontology/mayor",
        "seq": "12,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the division of Serbia national American football team ?",
    "SerialNumber": "3140",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Serbia_national_American_football_team\u003e \u003chttp://dbpedia.org/ontology/division\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Serbia national American football team",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Serbia_national_American_football_team",
        "seq": "24,62"
      }
    ],
    "id": "90065788c32f4906aa5614759fb3917e",
    "predicate mapping": [
      {
        "label": "division",
        "uri": "http://dbpedia.org/ontology/division",
        "seq": "12,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "311",
    "question": "List the regions served by the company which serves in Pacific Ocean ?",
    "SerialNumber": "3145",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/regionServed\u003e \u003chttp://dbpedia.org/resource/Pacific_Ocean\u003e . ?x \u003chttp://dbpedia.org/ontology/regionServed\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Company\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Pacific Ocean",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Pacific_Ocean",
        "seq": "55,68"
      }
    ],
    "id": "22b3592acd354c4d99ea51f040e1cd0f",
    "predicate mapping": [
      {
        "label": "regions served",
        "uri": "http://dbpedia.org/ontology/regionServed",
        "seq": "9,23",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "regions served",
        "uri": "http://dbpedia.org/ontology/regionServed",
        "seq": "9,23",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company",
        "seq": "31,38",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who are the biological parents of Dannielynn Birkhead?",
    "SerialNumber": "3146",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Dannielynn_Birkhead\u003e \u003chttp://dbpedia.org/ontology/parent\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Dannielynn",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Dannielynn_Birkhead",
        "seq": "34,44"
      }
    ],
    "id": "320124cd584843c6908f36b25c0bb181",
    "predicate mapping": [
      {
        "label": "parent",
        "uri": "http://dbpedia.org/ontology/parent",
        "seq": "23,29",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Was Morrissey a member of the Smiths?",
    "SerialNumber": "3147",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/The_Smiths\u003e \u003chttp://dbpedia.org/ontology/formerBandMember\u003e \u003chttp://dbpedia.org/resource/Morrissey\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "the Smiths",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Smiths",
        "seq": "26,36"
      },
      {
        "label": "Morrissey",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Morrissey",
        "seq": "4,13"
      }
    ],
    "id": "10c98449b32b44b2bc010f8eb7df50b0",
    "predicate mapping": [
      {
        "label": "member",
        "uri": "http://dbpedia.org/ontology/formerBandMember",
        "seq": "16,22",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who are the producers of Marie Sisters?",
    "SerialNumber": "3148",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Marie_Sisters\u003e \u003chttp://dbpedia.org/property/producer\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Marie Sisters",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Marie_Sisters",
        "seq": "25,38"
      }
    ],
    "id": "f928abbb8f11455eb05de0b4ec4c82d0",
    "predicate mapping": [
      {
        "label": "producer",
        "uri": "http://dbpedia.org/property/producer",
        "seq": "12,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "401",
    "question": "Give me a count of movies whose music composer is Bernard Herrmann?",
    "SerialNumber": "3150",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/ontology/musicComposer\u003e \u003chttp://dbpedia.org/resource/Bernard_Herrmann\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Bernard Herrmann",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Bernard_Herrmann",
        "seq": "50,66"
      }
    ],
    "id": "587c7b022e6f43c58d30747018299a1f",
    "predicate mapping": [
      {
        "label": "music composer",
        "uri": "http://dbpedia.org/ontology/musicComposer",
        "seq": "32,46",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "19,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the common product of the Apple Productivity Experience Group and services of the 21Vianet ?",
    "SerialNumber": "3152",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Apple_Productivity_Experience_Group\u003e \u003chttp://dbpedia.org/ontology/product\u003e ?uri. \u003chttp://dbpedia.org/resource/21Vianet\u003e \u003chttp://dbpedia.org/property/services\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Apple Productivity Experience Group",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Apple_Productivity_Experience_Group",
        "seq": "34,69"
      },
      {
        "label": "21Vianet",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/21Vianet",
        "seq": "90,98"
      }
    ],
    "id": "eb14dd948f6f4df8b68c0a0f036a8957",
    "predicate mapping": [
      {
        "label": "product",
        "uri": "http://dbpedia.org/ontology/product",
        "seq": "19,26",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "services",
        "uri": "http://dbpedia.org/property/services",
        "seq": "74,82",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "List the comic characters created by Joe Shuster ?",
    "SerialNumber": "3153",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/creators\u003e \u003chttp://dbpedia.org/resource/Joe_Shuster\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/ComicsCharacter\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Joe Shuster",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Joe_Shuster",
        "seq": "37,48"
      }
    ],
    "id": "e1e158c4b3c5462c9f9254f77b33ebde",
    "predicate mapping": [
      {
        "label": "created by",
        "uri": "http://dbpedia.org/property/creators",
        "seq": "26,36",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "characters",
        "uri": "http://dbpedia.org/ontology/ComicsCharacter",
        "seq": "15,25",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the sovereign state of Wallington railway station ?",
    "SerialNumber": "3154",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Wallington_railway_station\u003e \u003chttp://dbpedia.org/ontology/country\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Wallington railway station",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Wallington_railway_station",
        "seq": "28,54"
      }
    ],
    "id": "09b5ed743c6440648ec7e00b30bbeb60",
    "predicate mapping": [
      {
        "label": "sovereign state",
        "uri": "http://dbpedia.org/ontology/country",
        "seq": "9,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "Which TV show\u0027s theme was composed by a band in which Todd Huth used to perform?",
    "SerialNumber": "3155",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/formerBandMember\u003e \u003chttp://dbpedia.org/resource/Todd_Huth\u003e . ?uri \u003chttp://dbpedia.org/property/themeMusicComposer\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Todd Huth",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Todd_Huth",
        "seq": "54,63"
      }
    ],
    "id": "295609af44de49ffadaa466cfbfbc719",
    "predicate mapping": [
      {
        "label": "band",
        "uri": "http://dbpedia.org/ontology/formerBandMember",
        "seq": "40,44",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "composed",
        "uri": "http://dbpedia.org/property/themeMusicComposer",
        "seq": "26,34",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "show\u0027s",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "9,15",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Where is the main ground of soccer seasons whose chairman is Ronaldo?",
    "SerialNumber": "3157",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/chairman\u003e \u003chttp://dbpedia.org/resource/Ronaldo\u003e . ?x \u003chttp://dbpedia.org/ontology/ground\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/SoccerClubSeason\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ronaldo",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Ronaldo",
        "seq": "61,68"
      }
    ],
    "id": "fb9f45d8a2c24892b3e90b56c7fe8b34",
    "predicate mapping": [
      {
        "label": "chairman",
        "uri": "http://dbpedia.org/ontology/chairman",
        "seq": "49,57",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "ground",
        "uri": "http://dbpedia.org/ontology/ground",
        "seq": "18,24",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "soccer",
        "uri": "http://dbpedia.org/ontology/SoccerClubSeason",
        "seq": "28,34",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which destination of the Novair International Airway is the source origin of Spaghetti squash ?",
    "SerialNumber": "3159",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Novair_International_Airways\u003e \u003chttp://dbpedia.org/ontology/destination\u003e ?uri. \u003chttp://dbpedia.org/resource/Spaghetti_squash\u003e \u003chttp://dbpedia.org/ontology/origin\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Novair International Airway ",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Novair_International_Airways",
        "seq": "25,53"
      },
      {
        "label": "Spaghetti squash",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Spaghetti_squash",
        "seq": "77,93"
      }
    ],
    "id": "63f44ae612544346aa0fe59e52be8806",
    "predicate mapping": [
      {
        "label": "destination",
        "uri": "http://dbpedia.org/ontology/destination",
        "seq": "6,17",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "origin",
        "uri": "http://dbpedia.org/ontology/origin",
        "seq": "67,73",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "Who all have been canonized by Pope Paul VI",
    "SerialNumber": "3160",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/canonizedBy\u003e \u003chttp://dbpedia.org/resource/Pope_Paul_VI\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Paul VI",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Pope_Paul_VI",
        "seq": "36,43"
      }
    ],
    "id": "86de244495ad4682bba72845f387f090",
    "predicate mapping": [
      {
        "label": "canonized by",
        "uri": "http://dbpedia.org/property/canonizedBy",
        "seq": "18,30",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Who are the parent  of the people that  has POD as Redding, Connecticut ?",
    "SerialNumber": "3161",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/deathPlace\u003e \u003chttp://dbpedia.org/resource/Redding,_Connecticut\u003e . ?x \u003chttp://dbpedia.org/ontology/parent\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Redding, Connecticut",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Redding,_Connecticut",
        "seq": "51,71"
      }
    ],
    "id": "f51a76363b8a4f4289af2e25cf5ae7c5",
    "predicate mapping": [
      {
        "label": "POD",
        "uri": "http://dbpedia.org/ontology/deathPlace",
        "seq": "44,47",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "parent",
        "uri": "http://dbpedia.org/ontology/parent",
        "seq": "12,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What religion did the spouse of Richie Aprile follow?",
    "SerialNumber": "3163",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Richie_Aprile\u003e \u003chttp://dbpedia.org/property/spouse\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/religion\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Richie Aprile",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Richie_Aprile",
        "seq": "32,45"
      }
    ],
    "id": "06cd798687b746528a43245de0c8ab00",
    "predicate mapping": [
      {
        "label": "spouse",
        "uri": "http://dbpedia.org/property/spouse",
        "seq": "22,28",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion",
        "seq": "5,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who developed games based on the Cars series?",
    "SerialNumber": "3169",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/series\u003e \u003chttp://dbpedia.org/resource/Cars_(film)\u003e . ?x \u003chttp://dbpedia.org/ontology/developer\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/VideoGame\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Cars",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Cars_(film)",
        "seq": "33,37"
      }
    ],
    "id": "ccd5a59625d24531920a585c93e208e3",
    "predicate mapping": [
      {
        "label": "series",
        "uri": "http://dbpedia.org/property/series",
        "seq": "38,44",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "developed",
        "uri": "http://dbpedia.org/ontology/developer",
        "seq": "4,13",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "games",
        "uri": "http://dbpedia.org/ontology/VideoGame",
        "seq": "14,19",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "111",
    "question": "Give me the count of artist in the company whose Artist is Jean- François Coté ?",
    "SerialNumber": "3173",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/artist\u003e \u003chttp://dbpedia.org/resource/Jean-François_Coté\u003e . ?x \u003chttp://dbpedia.org/property/artist\u003e ?uri }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jean - François Coté",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Jean-François_Coté",
        "seq": "-1,19"
      }
    ],
    "id": "e0d8fe804adf4feab999453c822c20e4",
    "predicate mapping": [
      {
        "label": "artist",
        "uri": "http://dbpedia.org/property/artist",
        "seq": "21,27",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "artist",
        "uri": "http://dbpedia.org/property/artist",
        "seq": "21,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "406",
    "question": "How many universities are located in a country led by Olemic Thommessen?",
    "SerialNumber": "3174",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/leaderName\u003e \u003chttp://dbpedia.org/resource/Olemic_Thommessen\u003e . ?uri \u003chttp://dbpedia.org/ontology/country\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/University\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Olemic Thommessen",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Olemic_Thommessen",
        "seq": "54,71"
      }
    ],
    "id": "53137c944cee49bea72f3c3542173081",
    "predicate mapping": [
      {
        "label": "led",
        "uri": "http://dbpedia.org/property/leaderName",
        "seq": "47,50",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/country",
        "seq": "39,46",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "universities",
        "uri": "http://dbpedia.org/ontology/University",
        "seq": "9,21",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "To which family does korean fox belongs to ?",
    "SerialNumber": "3177",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Korean_fox\u003e \u003chttp://dbpedia.org/ontology/family\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "korean fox",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Korean_fox",
        "seq": "21,31"
      }
    ],
    "id": "26da9117036746eaa136ee24f55908f5",
    "predicate mapping": [
      {
        "label": "family",
        "uri": "http://dbpedia.org/ontology/family",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Who is the compiler of British Gazette whose prime minister is also Peter Thorneycroft ?",
    "SerialNumber": "3179",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/British_Gazette\u003e \u003chttp://dbpedia.org/property/editor\u003e ?uri. \u003chttp://dbpedia.org/resource/Peter_Thorneycroft\u003e \u003chttp://dbpedia.org/property/primeminister\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "British Gazette",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/British_Gazette",
        "seq": "23,38"
      },
      {
        "label": "Peter Thorneycroft",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Peter_Thorneycroft",
        "seq": "68,86"
      }
    ],
    "id": "30f137f544404a14b30465f5c542a71c",
    "predicate mapping": [
      {
        "label": "compiler",
        "uri": "http://dbpedia.org/property/editor",
        "seq": "11,19",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "minister prime",
        "uri": "http://dbpedia.org/property/primeminister",
        "seq": "-1,13",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the route end of NorthSouth Transport Corridor ?",
    "SerialNumber": "3180",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/North–South_Transport_Corridor\u003e \u003chttp://dbpedia.org/ontology/routeEnd\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "NorthSouth Transport Corridor",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/North–South_Transport_Corridor",
        "seq": "25,54"
      }
    ],
    "id": "aaa9ab64e1524e34b7451782aca41736",
    "predicate mapping": [
      {
        "label": "route end",
        "uri": "http://dbpedia.org/ontology/routeEnd",
        "seq": "12,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "What are the musical performances whose label is Celluloid Records?",
    "SerialNumber": "3184",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/label\u003e \u003chttp://dbpedia.org/resource/Celluloid_Records\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Celluloid Records",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Celluloid_Records",
        "seq": "49,66"
      }
    ],
    "id": "3816603ac6fd4377a4f32806c3821255",
    "predicate mapping": [
      {
        "label": "label",
        "uri": "http://dbpedia.org/property/label",
        "seq": "40,45",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "To which company is Michael Dell a father company? ",
    "SerialNumber": "3185",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/owningCompany\u003e \u003chttp://dbpedia.org/resource/Michael_Dell\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Company\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Michael Dell",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Michael_Dell",
        "seq": "20,32"
      }
    ],
    "id": "df9d1c5e29c84fbe86c5e6135265ba82",
    "predicate mapping": [
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/owningCompany",
        "seq": "9,16",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company",
        "seq": "9,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the common region of the braod cast area of ITV and nationality of Ajahn Thate ?",
    "SerialNumber": "3187",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/ITV_(Thailand)\u003e \u003chttp://dbpedia.org/property/broadcastArea\u003e ?uri. \u003chttp://dbpedia.org/resource/Ajahn_Thate\u003e \u003chttp://dbpedia.org/ontology/nationality\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "ITV",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/ITV_(Thailand)",
        "seq": "52,55"
      },
      {
        "label": "Ajahn Thate",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Ajahn_Thate",
        "seq": "75,86"
      }
    ],
    "id": "980685643c634f59b6a8c2114e5f6b75",
    "predicate mapping": [
      {
        "label": "cast area",
        "uri": "http://dbpedia.org/property/broadcastArea",
        "seq": "39,48",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "nationality",
        "uri": "http://dbpedia.org/ontology/nationality",
        "seq": "60,71",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "What work has been directed by Orson Welles and distributed by  RKO Pictures?",
    "SerialNumber": "3191",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/director\u003e \u003chttp://dbpedia.org/resource/Orson_Welles\u003e . ?uri \u003chttp://dbpedia.org/property/distributor\u003e \u003chttp://dbpedia.org/resource/RKO_Pictures\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Work\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Orson Welles",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Orson_Welles",
        "seq": "31,43"
      },
      {
        "label": "RKO Pictures",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/RKO_Pictures",
        "seq": "64,76"
      }
    ],
    "id": "0551936fa2424f109acea056733b00bf",
    "predicate mapping": [
      {
        "label": "directed",
        "uri": "http://dbpedia.org/property/director",
        "seq": "19,27",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "distributed by",
        "uri": "http://dbpedia.org/property/distributor",
        "seq": "48,62",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "work",
        "uri": "http://dbpedia.org/ontology/Work",
        "seq": "5,9",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Was andy warhol a part of Pop Art movement?",
    "SerialNumber": "3192",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Andy_Warhol\u003e \u003chttp://dbpedia.org/property/movement\u003e \u003chttp://dbpedia.org/resource/Pop_art\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "andy warhol",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Andy_Warhol",
        "seq": "4,15"
      },
      {
        "label": "Pop Art",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Pop_art",
        "seq": "26,33"
      }
    ],
    "id": "3668ef04a8a54a4b8d0c17338d67b95a",
    "predicate mapping": [
      {
        "label": "movement",
        "uri": "http://dbpedia.org/property/movement",
        "seq": "34,42",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which nearest city of LoDaisKa Site is also the location of Oskar Blues Brewery ?",
    "SerialNumber": "3194",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/LoDaisKa_Site\u003e \u003chttp://dbpedia.org/ontology/nearestCity\u003e ?uri. \u003chttp://dbpedia.org/resource/Oskar_Blues_Brewery\u003e \u003chttp://dbpedia.org/property/location\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "LoDaisKa Site",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/LoDaisKa_Site",
        "seq": "22,35"
      },
      {
        "label": "Oskar Blues Brewery",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Oskar_Blues_Brewery",
        "seq": "60,79"
      }
    ],
    "id": "8146bc4b31d649cf8c5a1f34417b8be4",
    "predicate mapping": [
      {
        "label": "nearest city",
        "uri": "http://dbpedia.org/ontology/nearestCity",
        "seq": "6,18",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "location",
        "uri": "http://dbpedia.org/property/location",
        "seq": "48,56",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What city is the place of birth of Alexander Morozevich which is also the official residence of Dmitri Nossov ?",
    "SerialNumber": "3195",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Alexander_Morozevich\u003e \u003chttp://dbpedia.org/ontology/birthPlace\u003e ?uri. \u003chttp://dbpedia.org/resource/Dmitri_Nossov\u003e \u003chttp://dbpedia.org/property/residence\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Alexander Morozevich",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Alexander_Morozevich",
        "seq": "35,55"
      },
      {
        "label": "Dmitri Nossov",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Dmitri_Nossov",
        "seq": "96,109"
      }
    ],
    "id": "6b924d982c704745af8ea66d7f15e044",
    "predicate mapping": [
      {
        "label": "place birth",
        "uri": "http://dbpedia.org/ontology/birthPlace",
        "seq": "-1,10",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "residence",
        "uri": "http://dbpedia.org/property/residence",
        "seq": "83,92",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What is that show whose theme was composed by Joel Goodman?",
    "SerialNumber": "3198",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/themeMusicComposer\u003e \u003chttp://dbpedia.org/resource/Joel_Goodman\u003e . ?x \u003chttp://dbpedia.org/property/showName\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Joel Goodman",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Joel_Goodman",
        "seq": "46,58"
      }
    ],
    "id": "14307a9d57c5428a9076bc5d123a7434",
    "predicate mapping": [
      {
        "label": "composed",
        "uri": "http://dbpedia.org/property/themeMusicComposer",
        "seq": "34,42",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/property/showName",
        "seq": "13,17",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "show is",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "-1,6",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the academic discipline of Journal of Cerebral Blood Flow \u0026 Metabolism ?",
    "SerialNumber": "3199",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Journal_of_Cerebral_Blood_Flow_\u0026_Metabolism\u003e \u003chttp://dbpedia.org/ontology/academicDiscipline\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Journal of Cerebral Blood Flow \u0026 Metabolism",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Journal_of_Cerebral_Blood_Flow_\u0026_Metabolism",
        "seq": "35,78"
      }
    ],
    "id": "ced7ff32a8304b9f8c8ae77c3386bdc0",
    "predicate mapping": [
      {
        "label": "academic discipline",
        "uri": "http://dbpedia.org/ontology/academicDiscipline",
        "seq": "12,31",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What are some gymnasts coached by Amanda Reddin?",
    "SerialNumber": "3201",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/headcoach\u003e \u003chttp://dbpedia.org/resource/Amanda_Reddin\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Gymnast\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Amanda Reddin",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Amanda_Reddin",
        "seq": "34,47"
      }
    ],
    "id": "d33e78b19afd4676bd77c8ed990b9982",
    "predicate mapping": [
      {
        "label": "coached",
        "uri": "http://dbpedia.org/property/headcoach",
        "seq": "23,30",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "gymnast",
        "uri": "http://dbpedia.org/ontology/Gymnast",
        "seq": "14,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "Which TV show whose theme is composed by someone signed up with ATO records?",
    "SerialNumber": "3203",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/recordLabel\u003e \u003chttp://dbpedia.org/resource/ATO_Records\u003e . ?uri \u003chttp://dbpedia.org/property/themeMusicComposer\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "ATO records",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/ATO_Records",
        "seq": "64,75"
      }
    ],
    "id": "b32f0ffff06741eab6c71835a504396d",
    "predicate mapping": [
      {
        "label": "records",
        "uri": "http://dbpedia.org/ontology/recordLabel",
        "seq": "68,75",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "composed",
        "uri": "http://dbpedia.org/property/themeMusicComposer",
        "seq": "29,37",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "9,13",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "Which gadgets are made by companies of New Taipei City?",
    "SerialNumber": "3204",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/locationCity\u003e \u003chttp://dbpedia.org/resource/New_Taipei_City\u003e . ?uri \u003chttp://dbpedia.org/ontology/manufacturer\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "New Taipei City",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/New_Taipei_City",
        "seq": "39,54"
      }
    ],
    "id": "0467f0dd444c4584994587e88693f8e9",
    "predicate mapping": [
      {
        "label": "city",
        "uri": "http://dbpedia.org/property/locationCity",
        "seq": "-1,3",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "made by",
        "uri": "http://dbpedia.org/ontology/manufacturer",
        "seq": "18,25",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What are the universities where athletics is regulated by National Collegiate Athletic Association?",
    "SerialNumber": "3207",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/athletics\u003e \u003chttp://dbpedia.org/resource/National_Collegiate_Athletic_Association\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/University\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "National Collegiate Athletic Association",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/National_Collegiate_Athletic_Association",
        "seq": "58,98"
      }
    ],
    "id": "84b711ae9a0341ab8a7187c256dfcd33",
    "predicate mapping": [
      {
        "label": "athletics",
        "uri": "http://dbpedia.org/ontology/athletics",
        "seq": "32,41",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "universities",
        "uri": "http://dbpedia.org/ontology/University",
        "seq": "13,25",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Was Don\u0027t Bring Me Down recorded in West Germany?",
    "SerialNumber": "3209",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Don\u0027t_Bring_Me_Down\u003e \u003chttp://dbpedia.org/property/recorded\u003e \u003chttp://dbpedia.org/resource/West_Germany\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Don\u0027t Bring Me Down",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Don\u0027t_Bring_Me_Down",
        "seq": "4,23"
      },
      {
        "label": "West Germany",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/West_Germany",
        "seq": "36,48"
      }
    ],
    "id": "1ddd01b8170e460bb30fdd9e80c7c495",
    "predicate mapping": [
      {
        "label": "recorded",
        "uri": "http://dbpedia.org/property/recorded",
        "seq": "24,32",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Name the person whose relation is Dee Dee Warwick?",
    "SerialNumber": "3210",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/relation\u003e \u003chttp://dbpedia.org/resource/Dee_Dee_Warwick\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Dee Dee Warwick",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Dee_Dee_Warwick",
        "seq": "34,49"
      }
    ],
    "id": "38300a71b0e74bfaa7606386e0d846b5",
    "predicate mapping": [
      {
        "label": "relation",
        "uri": "http://dbpedia.org/ontology/relation",
        "seq": "22,30",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/Person",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "7",
    "question": "Give the name of the  managers of England national under-20 football team and England national under-21 football team?",
    "SerialNumber": "3213",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/property/managerclubs\u003e \u003chttp://dbpedia.org/resource/England_national_under-20_football_team\u003e . ?uri \u003chttp://dbpedia.org/property/managerclubs\u003e \u003chttp://dbpedia.org/resource/England_national_under-21_football_team\u003e . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "England national under-20 football team",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/England_national_under-20_football_team",
        "seq": "34,73"
      },
      {
        "label": "England national under-21 football team",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/England_national_under-21_football_team",
        "seq": "78,117"
      }
    ],
    "id": "aa39669014fd44328c99e0cd54b58afb",
    "predicate mapping": [
      {
        "label": "managers",
        "uri": "http://dbpedia.org/property/managerclubs",
        "seq": "22,30",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "managers",
        "uri": "http://dbpedia.org/property/managerclubs",
        "seq": "22,30",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What is the draft team of the ice hockey players whose position is Centre ?",
    "SerialNumber": "3214",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/position\u003e \u003chttp://dbpedia.org/resource/Centre_(ice_hockey)\u003e . ?x \u003chttp://dbpedia.org/ontology/draftTeam\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/IceHockeyPlayer\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Centre",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Centre_(ice_hockey)",
        "seq": "67,73"
      }
    ],
    "id": "943486aa334042229b3e66696250c698",
    "predicate mapping": [
      {
        "label": "position",
        "uri": "http://dbpedia.org/property/position",
        "seq": "55,63",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "draft team",
        "uri": "http://dbpedia.org/ontology/draftTeam",
        "seq": "12,22",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "ice hockey player",
        "uri": "http://dbpedia.org/ontology/IceHockeyPlayer",
        "seq": "30,47",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Harry Huston and Dick Spalding played their first match for which team?",
    "SerialNumber": "3215",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Harry_Huston\u003e \u003chttp://dbpedia.org/property/debutteam\u003e ?uri. \u003chttp://dbpedia.org/resource/Dick_Spalding\u003e \u003chttp://dbpedia.org/property/debutteam\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Harry Huston",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Harry_Huston",
        "seq": "0,12"
      },
      {
        "label": "Dick Spalding",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Dick_Spalding",
        "seq": "17,30"
      }
    ],
    "id": "afa75d6b6d03454f9b688dd0080985fb",
    "predicate mapping": [
      {
        "label": "team",
        "uri": "http://dbpedia.org/property/debutteam",
        "seq": "66,70",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/property/debutteam",
        "seq": "66,70",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "What are some neighboring cities of cologny?",
    "SerialNumber": "3217",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/neighboringMunicipalities\u003e \u003chttp://dbpedia.org/resource/Cologny\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "cologny",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Cologny",
        "seq": "36,43"
      }
    ],
    "id": "cab0c79d0f10458ca8a01d1facfdbced",
    "predicate mapping": [
      {
        "label": "neighboring",
        "uri": "http://dbpedia.org/property/neighboringMunicipalities",
        "seq": "14,25",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "7",
    "question": "Whose relatives are Uncle Henry (Oz) and Aunt Em?",
    "SerialNumber": "3218",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/ontology/relative\u003e \u003chttp://dbpedia.org/resource/Uncle_Henry_(Oz)\u003e . ?uri \u003chttp://dbpedia.org/ontology/relative\u003e \u003chttp://dbpedia.org/resource/Aunt_Em\u003e . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Uncle Henry (Oz)",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Uncle_Henry_(Oz)",
        "seq": "20,36"
      },
      {
        "label": "Aunt Em",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Aunt_Em",
        "seq": "41,48"
      }
    ],
    "id": "69451801bb474b41ae95ff1273c0b4d2",
    "predicate mapping": [
      {
        "label": "relative",
        "uri": "http://dbpedia.org/ontology/relative",
        "seq": "6,14",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "relative",
        "uri": "http://dbpedia.org/ontology/relative",
        "seq": "6,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "111",
    "question": "Give me the count of interests of the philosopher whose primary interest is Metaphysics ?",
    "SerialNumber": "3219",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/mainInterests\u003e \u003chttp://dbpedia.org/resource/Metaphysics\u003e . ?x \u003chttp://dbpedia.org/property/mainInterests\u003e ?uri }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Metaphysics",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Metaphysics",
        "seq": "76,87"
      }
    ],
    "id": "7aa6c46d1605414485fffc097389e224",
    "predicate mapping": [
      {
        "label": "interests",
        "uri": "http://dbpedia.org/property/mainInterests",
        "seq": "21,30",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "interests",
        "uri": "http://dbpedia.org/property/mainInterests",
        "seq": "21,30",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which ceremonial County of the East Tilbury is also the local authority of the Trinity School, Brentwood?",
    "SerialNumber": "3220",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/East_Tilbury\u003e \u003chttp://dbpedia.org/ontology/ceremonialCounty\u003e ?uri. \u003chttp://dbpedia.org/resource/Trinity_School,_Brentwood\u003e \u003chttp://dbpedia.org/ontology/localAuthority\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "East Tilbury",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/East_Tilbury",
        "seq": "31,43"
      },
      {
        "label": "Trinity School, Brentwood",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Trinity_School,_Brentwood",
        "seq": "79,104"
      }
    ],
    "id": "bf75ca76a0bf455abcdc7d52f38f4686",
    "predicate mapping": [
      {
        "label": "ceremonial County",
        "uri": "http://dbpedia.org/ontology/ceremonialCounty",
        "seq": "6,23",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "local authority",
        "uri": "http://dbpedia.org/ontology/localAuthority",
        "seq": "56,71",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "List the common prime minister of the Robert Ray and graham richardson ?",
    "SerialNumber": "3222",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Robert_Ray_(Australian_politician)\u003e \u003chttp://dbpedia.org/ontology/primeMinister\u003e ?uri. \u003chttp://dbpedia.org/resource/Graham_Richardson\u003e \u003chttp://dbpedia.org/ontology/primeMinister\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Robert Ray",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Robert_Ray_(Australian_politician)",
        "seq": "38,48"
      },
      {
        "label": "graham richardson",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Graham_Richardson",
        "seq": "53,70"
      }
    ],
    "id": "45920161e8044711a58a25da89962f81",
    "predicate mapping": [
      {
        "label": "prime minister",
        "uri": "http://dbpedia.org/ontology/primeMinister",
        "seq": "16,30",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "prime minister",
        "uri": "http://dbpedia.org/ontology/primeMinister",
        "seq": "16,30",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the television show where Mona Marshall has given voice and is distributed by Comedy Central?",
    "SerialNumber": "3223",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/voices\u003e \u003chttp://dbpedia.org/resource/Mona_Marshall\u003e . ?uri \u003chttp://dbpedia.org/property/distributor\u003e \u003chttp://dbpedia.org/resource/Comedy_Central\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Mona Marshall",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Mona_Marshall",
        "seq": "31,44"
      },
      {
        "label": "Comedy Central",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Comedy_Central",
        "seq": "83,97"
      }
    ],
    "id": "7529473b5740452abc142ddb60132ef3",
    "predicate mapping": [
      {
        "label": "voice",
        "uri": "http://dbpedia.org/property/voices",
        "seq": "55,60",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "distributed by",
        "uri": "http://dbpedia.org/property/distributor",
        "seq": "68,82",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "9,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What does the bridge go over, which is in Katima Mulilo?",
    "SerialNumber": "3225",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/locatedInArea\u003e \u003chttp://dbpedia.org/resource/Katima_Mulilo\u003e . ?x \u003chttp://dbpedia.org/property/crosses\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Bridge\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Katima Mulilo",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Katima_Mulilo",
        "seq": "42,55"
      }
    ],
    "id": "9d6f9d9b1c1e422e9a87fbf9f54e9197",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/locatedInArea",
        "seq": "39,41",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "over",
        "uri": "http://dbpedia.org/property/crosses",
        "seq": "24,28",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "bridge",
        "uri": "http://dbpedia.org/ontology/Bridge",
        "seq": "14,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "What are the television shows whose distributor is a division of Warner Bros. International TV?",
    "SerialNumber": "3226",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/divisions\u003e \u003chttp://dbpedia.org/resource/Warner_Bros._International_Television\u003e . ?uri \u003chttp://dbpedia.org/property/distributor\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Warner Bros. International TV",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Warner_Bros._International_Television",
        "seq": "65,77"
      }
    ],
    "id": "e679996aa101404d8a234c41e60c57ae",
    "predicate mapping": [
      {
        "label": "division",
        "uri": "http://dbpedia.org/property/divisions",
        "seq": "53,61",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "distributor",
        "uri": "http://dbpedia.org/property/distributor",
        "seq": "36,47",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "13,28",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which founder of sea Gayle Music is also the judge of Rising Star ?",
    "SerialNumber": "3228",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Sea_Gayle_Music\u003e \u003chttp://dbpedia.org/property/founder\u003e ?uri. \u003chttp://dbpedia.org/resource/Rising_Star_(U.S._TV_series)\u003e \u003chttp://dbpedia.org/property/judges\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "sea Gayle Music",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Sea_Gayle_Music",
        "seq": "17,32"
      },
      {
        "label": "Rising Star",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Rising_Star_(U.S._TV_series)",
        "seq": "54,65"
      }
    ],
    "id": "b7a431005ad44021a254dc1844b76d13",
    "predicate mapping": [
      {
        "label": "founder of",
        "uri": "http://dbpedia.org/property/founder",
        "seq": "6,16",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "judge",
        "uri": "http://dbpedia.org/property/judges",
        "seq": "45,50",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What city has the football team in which Lee Robinson debuted?",
    "SerialNumber": "3229",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Lee_Robinson_(American_football)\u003e \u003chttp://dbpedia.org/ontology/debutTeam\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/locationCity\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Lee Robinson",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Lee_Robinson_(American_football)",
        "seq": "41,53"
      }
    ],
    "id": "f2bd28b0ae0d4238b782d5243a20d893",
    "predicate mapping": [
      {
        "label": "debuted",
        "uri": "http://dbpedia.org/ontology/debutTeam",
        "seq": "54,61",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "city",
        "uri": "http://dbpedia.org/ontology/locationCity",
        "seq": "5,9",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the award given in Norway and presented by Swedish Academy ?",
    "SerialNumber": "3230",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/presenter\u003e \u003chttp://dbpedia.org/resource/Swedish_Academy\u003e . ?uri \u003chttp://dbpedia.org/ontology/country\u003e \u003chttp://dbpedia.org/resource/Norway\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Award\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Swedish Academy",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Swedish_Academy",
        "seq": "48,63"
      },
      {
        "label": "Norway",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Norway",
        "seq": "24,30"
      }
    ],
    "id": "f7268d056d044b5a83b553245a5e37fc",
    "predicate mapping": [
      {
        "label": "presented",
        "uri": "http://dbpedia.org/ontology/presenter",
        "seq": "35,44",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/country",
        "seq": "21,23",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "award",
        "uri": "http://dbpedia.org/ontology/Award",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "101",
    "question": "How many people have been canonized by Pope Benedict XVI?",
    "SerialNumber": "3233",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/property/canonizedBy\u003e \u003chttp://dbpedia.org/resource/Pope_Benedict_XVI\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Pope Benedict XVI",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Pope_Benedict_XVI",
        "seq": "39,56"
      }
    ],
    "id": "31834099320540148da2f04b847413ce",
    "predicate mapping": [
      {
        "label": "canonized by",
        "uri": "http://dbpedia.org/property/canonizedBy",
        "seq": "26,38",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "111",
    "question": "List the total number of awards of the musicals who have won Tony Award?",
    "SerialNumber": "3234",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/awards\u003e \u003chttp://dbpedia.org/resource/Tony_Award\u003e . ?x \u003chttp://dbpedia.org/property/awards\u003e ?uri }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Tony Award",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Tony_Award",
        "seq": "61,71"
      }
    ],
    "id": "4a746d60634147519a4030473d50732c",
    "predicate mapping": [
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards",
        "seq": "25,31",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards",
        "seq": "25,31",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who is the chancellor of Falmouth University ?",
    "SerialNumber": "3235",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Falmouth_University\u003e \u003chttp://dbpedia.org/property/chancellor\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Falmouth University",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Falmouth_University",
        "seq": "25,44"
      }
    ],
    "id": "4c46eefb71c64a1ba553158813943097",
    "predicate mapping": [
      {
        "label": "chancellor",
        "uri": "http://dbpedia.org/property/chancellor",
        "seq": "11,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What are the binomial authority of Menetries\u0027s warbler?",
    "SerialNumber": "3237",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Menetries\u0027s_warbler\u003e \u003chttp://dbpedia.org/ontology/binomialAuthority\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Menetries\u0027s warbler",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Menetries\u0027s_warbler",
        "seq": "35,54"
      }
    ],
    "id": "4f3bdd919e6d4880be68979047b407dc",
    "predicate mapping": [
      {
        "label": "binomial authority",
        "uri": "http://dbpedia.org/ontology/binomialAuthority",
        "seq": "13,31",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Does Sonny Bill Williams belong in the Canterbury Bankstown Bulldogs club?",
    "SerialNumber": "3238",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Sonny_Bill_Williams\u003e \u003chttp://dbpedia.org/property/club\u003e \u003chttp://dbpedia.org/resource/Canterbury-Bankstown_Bulldogs\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Sonny Bill Williams",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Sonny_Bill_Williams",
        "seq": "5,24"
      },
      {
        "label": "Canterbury Bankstown Bulldogs",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Canterbury-Bankstown_Bulldogs",
        "seq": "39,68"
      }
    ],
    "id": "000f216ee4234a449366505231378897",
    "predicate mapping": [
      {
        "label": "club",
        "uri": "http://dbpedia.org/property/club",
        "seq": "69,73",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Humes High School is alma mater to which person?",
    "SerialNumber": "3241",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/education\u003e \u003chttp://dbpedia.org/resource/Humes_High_School\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Humes High School",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Humes_High_School",
        "seq": "0,17"
      }
    ],
    "id": "99bb100d636f41afa90e89897f1a45f9",
    "predicate mapping": [
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/property/education",
        "seq": "21,31",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/Person",
        "seq": "41,47",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "What is the birth place of music artists which were associated with Albert Ayler ?",
    "SerialNumber": "3242",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Albert_Ayler\u003e \u003chttp://dbpedia.org/property/associatedActs\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/birthPlace\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MusicalArtist\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Albert Ayler",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Albert_Ayler",
        "seq": "68,80"
      }
    ],
    "id": "8cfa18c8ce664564a067feacf22a384e",
    "predicate mapping": [
      {
        "label": "associated",
        "uri": "http://dbpedia.org/property/associatedActs",
        "seq": "52,62",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "birth place",
        "uri": "http://dbpedia.org/ontology/birthPlace",
        "seq": "12,23",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "artists",
        "uri": "http://dbpedia.org/ontology/MusicalArtist",
        "seq": "33,40",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "List all the houses of United States Congress ?",
    "SerialNumber": "3244",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/United_States_Congress\u003e \u003chttp://dbpedia.org/property/houses\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "United States Congress",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/United_States_Congress",
        "seq": "23,45"
      }
    ],
    "id": "b03177d39e1c4d88be790e3782f841b9",
    "predicate mapping": [
      {
        "label": "houses",
        "uri": "http://dbpedia.org/property/houses",
        "seq": "13,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Mota Engil built bridges over which rivers?",
    "SerialNumber": "3246",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/builder\u003e \u003chttp://dbpedia.org/resource/Mota-Engil\u003e . ?x \u003chttp://dbpedia.org/ontology/crosses\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Bridge\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Mota Engil",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Mota-Engil",
        "seq": "0,10"
      }
    ],
    "id": "441c7a0159b046ba94bec61882574380",
    "predicate mapping": [
      {
        "label": "built",
        "uri": "http://dbpedia.org/property/builder",
        "seq": "11,16",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "over",
        "uri": "http://dbpedia.org/ontology/crosses",
        "seq": "25,29",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "bridge",
        "uri": "http://dbpedia.org/ontology/Bridge",
        "seq": "17,23",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which television show \u0027s producer is Stephen E. Ambrose and written by Erik Jendresen?",
    "SerialNumber": "3247",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/producer\u003e \u003chttp://dbpedia.org/resource/Stephen_E._Ambrose\u003e . ?uri \u003chttp://dbpedia.org/property/writer\u003e \u003chttp://dbpedia.org/resource/Erik_Jendresen\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Stephen E. Ambrose",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Stephen_E._Ambrose",
        "seq": "37,55"
      },
      {
        "label": "Erik Jendresen",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Erik_Jendresen",
        "seq": "71,85"
      }
    ],
    "id": "aa4776a47306400884ee92fe3a010fed",
    "predicate mapping": [
      {
        "label": "producer",
        "uri": "http://dbpedia.org/property/producer",
        "seq": "25,33",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "written by",
        "uri": "http://dbpedia.org/property/writer",
        "seq": "60,70",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "6,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Which university provides license for WRVU ?",
    "SerialNumber": "3248",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/WRVU\u003e \u003chttp://dbpedia.org/property/licensee\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "WRVU",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/WRVU",
        "seq": "38,42"
      }
    ],
    "id": "6912db9bbb7f4886ab6ecf4dc2bc15ed",
    "predicate mapping": [
      {
        "label": "license",
        "uri": "http://dbpedia.org/property/licensee",
        "seq": "26,33",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the area of Tar Heel Sports Network ?",
    "SerialNumber": "3251",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Tar_Heel_Sports_Network\u003e \u003chttp://dbpedia.org/property/area\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Tar Heel Sports Network",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Tar_Heel_Sports_Network",
        "seq": "20,43"
      }
    ],
    "id": "099f8973922c4781bdf4854d70c385f9",
    "predicate mapping": [
      {
        "label": "area",
        "uri": "http://dbpedia.org/property/area",
        "seq": "12,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What is the alma mater of the scientists  known for  String theory?",
    "SerialNumber": "3252",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/knownFor\u003e \u003chttp://dbpedia.org/resource/String_theory\u003e . ?x \u003chttp://dbpedia.org/property/almaMater\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Scientist\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "String theory",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/String_theory",
        "seq": "53,66"
      }
    ],
    "id": "92db7b7d272f443ab8aed456c783d7d4",
    "predicate mapping": [
      {
        "label": "known for",
        "uri": "http://dbpedia.org/ontology/knownFor",
        "seq": "42,51",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/property/almaMater",
        "seq": "12,22",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "scientist",
        "uri": "http://dbpedia.org/ontology/Scientist",
        "seq": "30,39",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "311",
    "question": "List the party of the office holder which also has the affiliation with Congress Socialist party ?",
    "SerialNumber": "3253",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/otherParty\u003e \u003chttp://dbpedia.org/resource/Congress_Socialist_Party\u003e . ?x \u003chttp://dbpedia.org/ontology/otherParty\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/OfficeHolder\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Congress Socialist party",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Congress_Socialist_Party",
        "seq": "72,96"
      }
    ],
    "id": "a3dc84be931049af977eedf2f543e0de",
    "predicate mapping": [
      {
        "label": "party",
        "uri": "http://dbpedia.org/ontology/otherParty",
        "seq": "9,14",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "party",
        "uri": "http://dbpedia.org/ontology/otherParty",
        "seq": "9,14",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "office holder",
        "uri": "http://dbpedia.org/ontology/OfficeHolder",
        "seq": "22,35",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "Whose deputy was Franz von Papen?",
    "SerialNumber": "3255",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/deputy\u003e \u003chttp://dbpedia.org/resource/Franz_von_Papen\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Franz von Papen",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Franz_von_Papen",
        "seq": "17,32"
      }
    ],
    "id": "8e0ff8947d7541bcbd888c8a301c6565",
    "predicate mapping": [
      {
        "label": "deputy",
        "uri": "http://dbpedia.org/property/deputy",
        "seq": "6,12",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Gamini Seneviratne and Katyayana are two followers of which religion?",
    "SerialNumber": "3257",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Gamini_Seneviratne\u003e \u003chttp://dbpedia.org/property/religion\u003e ?uri. \u003chttp://dbpedia.org/resource/Katyayana_(Buddhist)\u003e \u003chttp://dbpedia.org/property/religion\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Gamini Seneviratne",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Gamini_Seneviratne",
        "seq": "0,18"
      },
      {
        "label": "Katyayana",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Katyayana_(Buddhist)",
        "seq": "23,32"
      }
    ],
    "id": "9202aee754b8461bbb83aef174429e8a",
    "predicate mapping": [
      {
        "label": "religion",
        "uri": "http://dbpedia.org/property/religion",
        "seq": "60,68",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/property/religion",
        "seq": "60,68",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Whose artworks are in Sao Paulo Museum of Art?",
    "SerialNumber": "3259",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/museum\u003e \u003chttp://dbpedia.org/resource/São_Paulo_Museum_of_Art\u003e . ?x \u003chttp://dbpedia.org/property/artist\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Artwork\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Sao Paulo Museum of Art",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/São_Paulo_Museum_of_Art",
        "seq": "22,45"
      }
    ],
    "id": "a1f6a0f1f36d4e55881ef792f416db91",
    "predicate mapping": [
      {
        "label": "Museum",
        "uri": "http://dbpedia.org/property/museum",
        "seq": "32,38",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "art",
        "uri": "http://dbpedia.org/property/artist",
        "seq": "6,9",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "artwork",
        "uri": "http://dbpedia.org/ontology/Artwork",
        "seq": "6,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Through which states does the road go, which has a junction on Keningston Maryland?",
    "SerialNumber": "3260",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/routeJunction\u003e \u003chttp://dbpedia.org/resource/Kensington,_Maryland\u003e . ?x \u003chttp://dbpedia.org/ontology/state\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Road\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Keningston Maryland",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Kensington,_Maryland",
        "seq": "63,82"
      }
    ],
    "id": "fa31ddfb133a4665a135c025a534bcb1",
    "predicate mapping": [
      {
        "label": "junction",
        "uri": "http://dbpedia.org/ontology/routeJunction",
        "seq": "51,59",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "state",
        "uri": "http://dbpedia.org/ontology/state",
        "seq": "14,19",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "road",
        "uri": "http://dbpedia.org/ontology/Road",
        "seq": "30,34",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who is the music composer of Kenny Dies ?",
    "SerialNumber": "3262",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Kenny_Dies\u003e \u003chttp://dbpedia.org/ontology/musicComposer\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Kenny Dies",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Kenny_Dies",
        "seq": "29,39"
      }
    ],
    "id": "23da6d5becd34480952011dd96fec09f",
    "predicate mapping": [
      {
        "label": "music composer",
        "uri": "http://dbpedia.org/ontology/musicComposer",
        "seq": "11,25",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "By what style was Providence Chapel, Charlwood made?",
    "SerialNumber": "3268",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Providence_Chapel,_Charlwood\u003e \u003chttp://dbpedia.org/property/style\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Providence Chapel, Charlwood",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Providence_Chapel,_Charlwood",
        "seq": "18,46"
      }
    ],
    "id": "0f3429d03fd64266b8c2d76addb5c46c",
    "predicate mapping": [
      {
        "label": "style",
        "uri": "http://dbpedia.org/property/style",
        "seq": "8,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who is the stockholder of Paphos International Airport ?",
    "SerialNumber": "3270",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Paphos_International_Airport\u003e \u003chttp://dbpedia.org/property/owner\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Paphos International Airport",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Paphos_International_Airport",
        "seq": "26,54"
      }
    ],
    "id": "05c509f7775f4415b2a95b4fcc959d1a",
    "predicate mapping": [
      {
        "label": "stockholder",
        "uri": "http://dbpedia.org/property/owner",
        "seq": "11,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Did Raymond Picard take birth in Paris?",
    "SerialNumber": "3273",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Raymond_Picard\u003e \u003chttp://dbpedia.org/property/birthplace\u003e \u003chttp://dbpedia.org/resource/Paris\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Raymond Picard",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Raymond_Picard",
        "seq": "4,18"
      },
      {
        "label": "Paris",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Paris",
        "seq": "33,38"
      }
    ],
    "id": "21531e47046946809137beeadd4af94e",
    "predicate mapping": [
      {
        "label": "birth",
        "uri": "http://dbpedia.org/property/birthplace",
        "seq": "24,29",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the region of Lumberjack  ?",
    "SerialNumber": "3275",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Lumberjack_100\u003e \u003chttp://dbpedia.org/property/region\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Lumberjack",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Lumberjack_100",
        "seq": "22,32"
      }
    ],
    "id": "5e70185ec22f408795bf28e121e68522",
    "predicate mapping": [
      {
        "label": "region",
        "uri": "http://dbpedia.org/property/region",
        "seq": "12,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What were the occupations of Marcus Floyd?",
    "SerialNumber": "3278",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Marcus_Floyd\u003e \u003chttp://dbpedia.org/ontology/occupation\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Marcus Floyd",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Marcus_Floyd",
        "seq": "29,41"
      }
    ],
    "id": "a882c7c530ad4e7793896fce0ad1adef",
    "predicate mapping": [
      {
        "label": "occupation",
        "uri": "http://dbpedia.org/ontology/occupation",
        "seq": "14,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who is the Pole driver of 1997 Canadian Grand Prix ?",
    "SerialNumber": "3281",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/1997_Canadian_Grand_Prix\u003e \u003chttp://dbpedia.org/property/poleDriver\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "1997 Canadian Grand Prix",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/1997_Canadian_Grand_Prix",
        "seq": "26,50"
      }
    ],
    "id": "b65176114e5942798719100f7770c922",
    "predicate mapping": [
      {
        "label": "Pole driver",
        "uri": "http://dbpedia.org/property/poleDriver",
        "seq": "11,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "How many different things are used as ingredients in Sweden?",
    "SerialNumber": "3283",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/country\u003e \u003chttp://dbpedia.org/resource/Sweden\u003e . ?x \u003chttp://dbpedia.org/ontology/ingredient\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Sweden",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Sweden",
        "seq": "53,59"
      }
    ],
    "id": "cb572a08bfb846ecb7dc9de05f273753",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/country",
        "seq": "21,23",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "ingredient",
        "uri": "http://dbpedia.org/ontology/ingredient",
        "seq": "38,48",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who composed the lyrics of Holler If Ya Hear Me ?",
    "SerialNumber": "3286",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Holler_If_Ya_Hear_Me_(musical)\u003e \u003chttp://dbpedia.org/property/lyrics\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Holler If Ya Hear Me",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Holler_If_Ya_Hear_Me_(musical)",
        "seq": "27,47"
      }
    ],
    "id": "91074221bb864151921f52c9ff1a71cf",
    "predicate mapping": [
      {
        "label": "lyrics",
        "uri": "http://dbpedia.org/property/lyrics",
        "seq": "17,23",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which ground of 2016 Fort Lauderdale Strikers season is the palce of birth of Kaitlyn Ashley ?",
    "SerialNumber": "3287",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/2016_Fort_Lauderdale_Strikers_season\u003e \u003chttp://dbpedia.org/ontology/ground\u003e ?uri. \u003chttp://dbpedia.org/resource/Kaitlyn_Ashley\u003e \u003chttp://dbpedia.org/property/placeOfBirth\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "2016 Fort Lauderdale Strikers season",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/2016_Fort_Lauderdale_Strikers_season",
        "seq": "16,52"
      },
      {
        "label": "Kaitlyn Ashley",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Kaitlyn_Ashley",
        "seq": "78,92"
      }
    ],
    "id": "96205a1584514add8305c933034f1eda",
    "predicate mapping": [
      {
        "label": "ground",
        "uri": "http://dbpedia.org/ontology/ground",
        "seq": "6,12",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "birth",
        "uri": "http://dbpedia.org/property/placeOfBirth",
        "seq": "69,74",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Under which president did Loretta Ucelli and Ann Lewis hold an office?",
    "SerialNumber": "3289",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Loretta_Ucelli\u003e \u003chttp://dbpedia.org/ontology/president\u003e ?uri. \u003chttp://dbpedia.org/resource/Ann_Lewis\u003e \u003chttp://dbpedia.org/ontology/president\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Loretta Ucelli",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Loretta_Ucelli",
        "seq": "26,40"
      },
      {
        "label": "Ann Lewis",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Ann_Lewis",
        "seq": "45,54"
      }
    ],
    "id": "31066fe6cfb246c7915377ea543a4b7c",
    "predicate mapping": [
      {
        "label": "president",
        "uri": "http://dbpedia.org/ontology/president",
        "seq": "12,21",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "president",
        "uri": "http://dbpedia.org/ontology/president",
        "seq": "12,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "List the mountains of the range Sierra Nevada (U.S.) located in  California?",
    "SerialNumber": "3292",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/mountainRange\u003e \u003chttp://dbpedia.org/resource/Sierra_Nevada_(U.S.)\u003e . ?uri \u003chttp://dbpedia.org/ontology/locatedInArea\u003e \u003chttp://dbpedia.org/resource/California\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Mountain\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Sierra Nevada (U.S.)",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Sierra_Nevada_(U.S.)",
        "seq": "32,52"
      },
      {
        "label": "California",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/California",
        "seq": "65,75"
      }
    ],
    "id": "b6b8067555af4063906d88b2e32e1a03",
    "predicate mapping": [
      {
        "label": "mountains",
        "uri": "http://dbpedia.org/ontology/mountainRange",
        "seq": "9,18",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/locatedInArea",
        "seq": "15,17",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "mountain",
        "uri": "http://dbpedia.org/ontology/Mountain",
        "seq": "9,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Where did Marvo originate?",
    "SerialNumber": "3293",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Mavro\u003e \u003chttp://dbpedia.org/ontology/origin\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Marvo",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Mavro",
        "seq": "10,15"
      }
    ],
    "id": "5c2f6e3d47024e54af60dad2cf684419",
    "predicate mapping": [
      {
        "label": "origin",
        "uri": "http://dbpedia.org/ontology/origin",
        "seq": "16,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "Whose predecessor had Jenny Macklin as a deputy ?",
    "SerialNumber": "3295",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/deputy\u003e \u003chttp://dbpedia.org/resource/Jenny_Macklin\u003e . ?uri \u003chttp://dbpedia.org/property/predecessor\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jenny Macklin",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Jenny_Macklin",
        "seq": "22,35"
      }
    ],
    "id": "cbfd34299d434bea9171dd85e9dd79b1",
    "predicate mapping": [
      {
        "label": "deputy",
        "uri": "http://dbpedia.org/property/deputy",
        "seq": "41,47",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "predecessor",
        "uri": "http://dbpedia.org/property/predecessor",
        "seq": "6,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "In which company\u0027s boards does the founder of Bomis sit?",
    "SerialNumber": "3296",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Bomis\u003e \u003chttp://dbpedia.org/ontology/foundedBy\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/board\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Bomis",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Bomis",
        "seq": "46,51"
      }
    ],
    "id": "0d987dfafc054e8db252832df3e4a7ad",
    "predicate mapping": [
      {
        "label": "founder of",
        "uri": "http://dbpedia.org/ontology/foundedBy",
        "seq": "35,45",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "board",
        "uri": "http://dbpedia.org/ontology/board",
        "seq": "19,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "103",
    "question": "How many religion\u0027s commanders have served in the Royal Thai Army?",
    "SerialNumber": "3298",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { \u003chttp://dbpedia.org/resource/Royal_Thai_Army\u003e \u003chttp://dbpedia.org/property/notableCommanders\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/religion\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Royal Thai Army",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Royal_Thai_Army",
        "seq": "50,65"
      }
    ],
    "id": "39704553a7904c329400eabe0c954ebc",
    "predicate mapping": [
      {
        "label": "commanders",
        "uri": "http://dbpedia.org/property/notableCommanders",
        "seq": "20,30",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion",
        "seq": "9,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the hub of Wan Air ?",
    "SerialNumber": "3300",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Wan_Air\u003e \u003chttp://dbpedia.org/property/hubs\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Wan Air",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Wan_Air",
        "seq": "19,26"
      }
    ],
    "id": "eac2d5332100483581f13b166ac29e94",
    "predicate mapping": [
      {
        "label": "hub",
        "uri": "http://dbpedia.org/property/hubs",
        "seq": "12,15",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the debut team of Tom O\u0027Malley ?",
    "SerialNumber": "3301",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Tom_O\u0027Malley\u003e \u003chttp://dbpedia.org/property/debutteam\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Tom O\u0027Malley",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Tom_O\u0027Malley",
        "seq": "26,38"
      }
    ],
    "id": "573d48cf77f14483b1eb9fc6e0f73e90",
    "predicate mapping": [
      {
        "label": "debut team",
        "uri": "http://dbpedia.org/property/debutteam",
        "seq": "12,22",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name  the Pole driver of 1994 Spanish Grand Prix ?",
    "SerialNumber": "3302",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/1994_Spanish_Grand_Prix\u003e \u003chttp://dbpedia.org/property/poleDriver\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "1994 Spanish Grand Prix",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/1994_Spanish_Grand_Prix",
        "seq": "25,48"
      }
    ],
    "id": "c9b163789f6749b0b14437f707eff6da",
    "predicate mapping": [
      {
        "label": "Pole driver",
        "uri": "http://dbpedia.org/property/poleDriver",
        "seq": "10,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who was the First Driver of 1999 San Marino Grand Prix ?",
    "SerialNumber": "3303",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/1999_San_Marino_Grand_Prix\u003e \u003chttp://dbpedia.org/property/firstDriver\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "1999 San Marino Grand Prix",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/1999_San_Marino_Grand_Prix",
        "seq": "28,54"
      }
    ],
    "id": "0f0cefdb4c2e422bbbd46144cb44942e",
    "predicate mapping": [
      {
        "label": "First Driver",
        "uri": "http://dbpedia.org/property/firstDriver",
        "seq": "12,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Is Denver the largest city of Colorado?",
    "SerialNumber": "3304",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Colorado\u003e \u003chttp://dbpedia.org/ontology/largestCity\u003e \u003chttp://dbpedia.org/resource/Denver\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Colorado",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Colorado",
        "seq": "30,38"
      },
      {
        "label": "Denver",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Denver",
        "seq": "3,9"
      }
    ],
    "id": "fc528bb6de814b2ea1eac7c6438d3c57",
    "predicate mapping": [
      {
        "label": "largest city",
        "uri": "http://dbpedia.org/ontology/largestCity",
        "seq": "14,26",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Which is the largest city of Union State ?",
    "SerialNumber": "3306",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Union_State\u003e \u003chttp://dbpedia.org/property/largestCity\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Union State",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Union_State",
        "seq": "29,40"
      }
    ],
    "id": "d374ddbebf124204be7f3f2b11d9e633",
    "predicate mapping": [
      {
        "label": "largest city",
        "uri": "http://dbpedia.org/property/largestCity",
        "seq": "13,25",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the capital of Barony of Caux ?",
    "SerialNumber": "3309",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Barony_of_Caux\u003e \u003chttp://dbpedia.org/ontology/capital\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Barony of Caux",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Barony_of_Caux",
        "seq": "20,34"
      }
    ],
    "id": "6a33225c11054b9d90e85013e5e3fc02",
    "predicate mapping": [
      {
        "label": "capital",
        "uri": "http://dbpedia.org/ontology/capital",
        "seq": "9,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "311",
    "question": "List the launch site of the rockets whose one of the launch site has been Cape Canaveral Air Force Station Launch Complex 26 ?",
    "SerialNumber": "3312",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/launchSite\u003e \u003chttp://dbpedia.org/resource/Cape_Canaveral_Air_Force_Station_Launch_Complex_26\u003e . ?x \u003chttp://dbpedia.org/ontology/launchSite\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Rocket\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Cape Canaveral Air Force Station Launch Complex 26",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Cape_Canaveral_Air_Force_Station_Launch_Complex_26",
        "seq": "74,124"
      }
    ],
    "id": "f42232f5745444f2b59bd33f072d1b72",
    "predicate mapping": [
      {
        "label": "launch site",
        "uri": "http://dbpedia.org/ontology/launchSite",
        "seq": "9,20",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "launch site",
        "uri": "http://dbpedia.org/ontology/launchSite",
        "seq": "9,20",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "rocket",
        "uri": "http://dbpedia.org/ontology/Rocket",
        "seq": "28,34",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the movie whose screenplay is by Akiva Goldsman and directed by Joel Schumacher ?",
    "SerialNumber": "3315",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/screenplay\u003e \u003chttp://dbpedia.org/resource/Akiva_Goldsman\u003e . ?uri \u003chttp://dbpedia.org/ontology/director\u003e \u003chttp://dbpedia.org/resource/Joel_Schumacher\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Akiva Goldsman",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Akiva_Goldsman",
        "seq": "38,52"
      },
      {
        "label": "Joel Schumacher",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Joel_Schumacher",
        "seq": "69,84"
      }
    ],
    "id": "238c66a5b9f240c4810f764cc8ec134b",
    "predicate mapping": [
      {
        "label": "screenplay",
        "uri": "http://dbpedia.org/property/screenplay",
        "seq": "21,31",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "directed by",
        "uri": "http://dbpedia.org/ontology/director",
        "seq": "57,68",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "List the writers of Tales of Suspense ?",
    "SerialNumber": "3316",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Tales_of_Suspense\u003e \u003chttp://dbpedia.org/property/writers\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Tales of Suspense",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Tales_of_Suspense",
        "seq": "20,37"
      }
    ],
    "id": "af23ab128db046daa4567549a7470c27",
    "predicate mapping": [
      {
        "label": "writers",
        "uri": "http://dbpedia.org/property/writers",
        "seq": "9,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "In how many nations can I find people related to the feminist movement?",
    "SerialNumber": "3318",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/movement\u003e \u003chttp://dbpedia.org/resource/Feminism\u003e . ?x \u003chttp://dbpedia.org/ontology/nationality\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "feminist",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Feminism",
        "seq": "53,61"
      }
    ],
    "id": "3ad9afca7d394e1fbf9ff22d4f90c9f0",
    "predicate mapping": [
      {
        "label": "movement",
        "uri": "http://dbpedia.org/ontology/movement",
        "seq": "62,70",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "nations",
        "uri": "http://dbpedia.org/ontology/nationality",
        "seq": "12,19",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the home ground of  2015 Fort Lauderdale Strikers season ?",
    "SerialNumber": "3319",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/2015_Fort_Lauderdale_Strikers_season\u003e \u003chttp://dbpedia.org/ontology/ground\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "2015 Fort Lauderdale Strikers season",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/2015_Fort_Lauderdale_Strikers_season",
        "seq": "25,61"
      }
    ],
    "id": "deecfa268f4c4b99b10f15c85fea67b7",
    "predicate mapping": [
      {
        "label": "ground",
        "uri": "http://dbpedia.org/ontology/ground",
        "seq": "14,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "Count the awards won by the people who graduated from the National and Kapodistrian University of Athens.",
    "SerialNumber": "3321",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/almaMater\u003e \u003chttp://dbpedia.org/resource/National_and_Kapodistrian_University_of_Athens\u003e . ?x \u003chttp://dbpedia.org/ontology/award\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "National and Kapodistrian University of Athens",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/National_and_Kapodistrian_University_of_Athens",
        "seq": "58,104"
      }
    ],
    "id": "f4c678a394b842b18ef8ecce047526e5",
    "predicate mapping": [
      {
        "label": "graduated from",
        "uri": "http://dbpedia.org/ontology/almaMater",
        "seq": "39,53",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/award",
        "seq": "10,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "who was the president under which Joe Purcell is a lieutenant?",
    "SerialNumber": "3323",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/lieutenant\u003e \u003chttp://dbpedia.org/resource/Joe_Purcell\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Joe Purcell",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Joe_Purcell",
        "seq": "34,45"
      }
    ],
    "id": "357dc6f5b3b84bf398fe8ef62344373d",
    "predicate mapping": [
      {
        "label": "lieutenant",
        "uri": "http://dbpedia.org/ontology/lieutenant",
        "seq": "51,61",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "11",
    "question": "Name the narrators of the album which has been narrated by Alan Thicke ?",
    "SerialNumber": "3324",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/narrated\u003e \u003chttp://dbpedia.org/resource/Alan_Thicke\u003e . ?x \u003chttp://dbpedia.org/property/narrated\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Alan Thicke",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Alan_Thicke",
        "seq": "59,70"
      }
    ],
    "id": "f04972321b83404b87e4d7cf5de5c5a6",
    "predicate mapping": [
      {
        "label": "narrated",
        "uri": "http://dbpedia.org/property/narrated",
        "seq": "47,55",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "narrated",
        "uri": "http://dbpedia.org/property/narrated",
        "seq": "47,55",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which pole driver of 1989 Portuguese Grand Prix was also the first driver of 1993 European Grand Prix ?",
    "SerialNumber": "3327",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/1993_European_Grand_Prix\u003e \u003chttp://dbpedia.org/property/firstDriver\u003e ?uri. \u003chttp://dbpedia.org/resource/1989_Portuguese_Grand_Prix\u003e \u003chttp://dbpedia.org/ontology/poleDriver\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "1993 European Grand Prix",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/1993_European_Grand_Prix",
        "seq": "77,101"
      },
      {
        "label": "1989 Portuguese Grand Prix",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/1989_Portuguese_Grand_Prix",
        "seq": "21,47"
      }
    ],
    "id": "a92bf834ce444970965064755aec2e3e",
    "predicate mapping": [
      {
        "label": "first driver",
        "uri": "http://dbpedia.org/property/firstDriver",
        "seq": "61,73",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "pole driver",
        "uri": "http://dbpedia.org/ontology/poleDriver",
        "seq": "6,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "what is the headquarters of Juan Dalmau Ramerez?",
    "SerialNumber": "3331",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Juan_Dalmau_Ramírez\u003e \u003chttp://dbpedia.org/property/headquarters\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Juan Dalmau",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Juan_Dalmau_Ramírez",
        "seq": "28,39"
      }
    ],
    "id": "e5f9dd5ab9324d1ebbdf61c7e4403c15",
    "predicate mapping": [
      {
        "label": "headquarters",
        "uri": "http://dbpedia.org/property/headquarters",
        "seq": "12,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the wine regions of Bogdanua ?",
    "SerialNumber": "3332",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Bogdanuša\u003e \u003chttp://dbpedia.org/ontology/wineRegion\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Bogdanua",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Bogdanuša",
        "seq": "25,33"
      }
    ],
    "id": "fcf5f996614b4543a14a5ec5eaa362a1",
    "predicate mapping": [
      {
        "label": "wine region",
        "uri": "http://dbpedia.org/ontology/wineRegion",
        "seq": "9,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "In which city are the schools whose district is Mumbai Suburban?",
    "SerialNumber": "3334",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/district\u003e \u003chttp://dbpedia.org/resource/Mumbai_Suburban_district\u003e . ?x \u003chttp://dbpedia.org/ontology/city\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/School\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Mumbai Suburban",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Mumbai_Suburban_district",
        "seq": "48,54"
      }
    ],
    "id": "494baea1d2104b42a7e47d508d08648e",
    "predicate mapping": [
      {
        "label": "district",
        "uri": "http://dbpedia.org/property/district",
        "seq": "36,44",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "district",
        "uri": "http://dbpedia.org/ontology/city",
        "seq": "36,44",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "school",
        "uri": "http://dbpedia.org/ontology/School",
        "seq": "22,28",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Which military people served their allegiance to Union (American Civil War)?",
    "SerialNumber": "3335",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/allegiance\u003e \u003chttp://dbpedia.org/resource/Union_(American_Civil_War)\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MilitaryPerson\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Union (American Civil War)",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Union_(American_Civil_War)",
        "seq": "49,75"
      }
    ],
    "id": "a542749bd8ce457aa58ef76df55d1102",
    "predicate mapping": [
      {
        "label": "allegiance",
        "uri": "http://dbpedia.org/property/allegiance",
        "seq": "35,45",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "military",
        "uri": "http://dbpedia.org/ontology/MilitaryPerson",
        "seq": "6,14",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "401",
    "question": "Give me a count of movies whose film editor is Anthony Harvey?",
    "SerialNumber": "3338",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/property/editing\u003e \u003chttp://dbpedia.org/resource/Anthony_Harvey\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Anthony Harvey",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Anthony_Harvey",
        "seq": "47,61"
      }
    ],
    "id": "6f8df171b716419ba1bcf20b5e90e4b1",
    "predicate mapping": [
      {
        "label": "editor",
        "uri": "http://dbpedia.org/property/editing",
        "seq": "37,43",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "19,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Which species\u0027 members are there in the animal kingdom?",
    "SerialNumber": "3339",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/kingdom\u003e \u003chttp://dbpedia.org/resource/Animal\u003e . ?x \u003chttp://dbpedia.org/ontology/species\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "animal",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Animal",
        "seq": "40,46"
      }
    ],
    "id": "d2bdea95e8cb4e0ba89f46a1ac662d0c",
    "predicate mapping": [
      {
        "label": "kingdom",
        "uri": "http://dbpedia.org/ontology/kingdom",
        "seq": "47,54",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "species",
        "uri": "http://dbpedia.org/ontology/species",
        "seq": "6,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Is camel  of the chordate phylum?",
    "SerialNumber": "3341",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Camel\u003e \u003chttp://dbpedia.org/property/phylum\u003e \u003chttp://dbpedia.org/resource/Chordate\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "camel",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Camel",
        "seq": "3,8"
      },
      {
        "label": "chordate",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Chordate",
        "seq": "17,25"
      }
    ],
    "id": "835e3bc3c8764022b3555cb4b8175d3b",
    "predicate mapping": [
      {
        "label": "phylum",
        "uri": "http://dbpedia.org/property/phylum",
        "seq": "26,32",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who is the leader of Allgemeine SS ?",
    "SerialNumber": "3343",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Allgemeine_SS\u003e \u003chttp://dbpedia.org/ontology/leader\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Allgemeine SS",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Allgemeine_SS",
        "seq": "21,34"
      }
    ],
    "id": "19bac1217f0341eaa5cdfa082347f6b0",
    "predicate mapping": [
      {
        "label": "leader",
        "uri": "http://dbpedia.org/ontology/leader",
        "seq": "11,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "102",
    "question": "How many important works have been done by Russel Davies?",
    "SerialNumber": "3344",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { \u003chttp://dbpedia.org/resource/Russell_T_Davies\u003e \u003chttp://dbpedia.org/ontology/notableWork\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Russel Davies",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Russell_T_Davies",
        "seq": "43,56"
      }
    ],
    "id": "0dbbb933294f48bcab3c33d1298ef7e1",
    "predicate mapping": [
      {
        "label": "works",
        "uri": "http://dbpedia.org/ontology/notableWork",
        "seq": "19,24",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the birth name  of Putri Raemawasti ?",
    "SerialNumber": "3346",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Putri_Raemawasti\u003e \u003chttp://dbpedia.org/property/birthName\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Putri Raemawasti",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Putri_Raemawasti",
        "seq": "27,43"
      }
    ],
    "id": "3accaa813d154ec19e1d62b48eb60314",
    "predicate mapping": [
      {
        "label": "birth name",
        "uri": "http://dbpedia.org/property/birthName",
        "seq": "12,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "From where does the river Upper Neretva start flowing?",
    "SerialNumber": "3349",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Upper_Neretva\u003e \u003chttp://dbpedia.org/ontology/riverMouth\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Upper Neretva",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Upper_Neretva",
        "seq": "26,39"
      }
    ],
    "id": "91305aeb7cf3416f855db6b604974650",
    "predicate mapping": [
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/riverMouth",
        "seq": "20,25",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "401",
    "question": "Joe Shuster has created how many comics character ?",
    "SerialNumber": "3351",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/property/creators\u003e \u003chttp://dbpedia.org/resource/Joe_Shuster\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/ComicsCharacter\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Joe Shuster",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Joe_Shuster",
        "seq": "0,11"
      }
    ],
    "id": "d5eec8fa9c454d71af0be385eb6d2193",
    "predicate mapping": [
      {
        "label": "created",
        "uri": "http://dbpedia.org/property/creators",
        "seq": "16,23",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "comics character",
        "uri": "http://dbpedia.org/ontology/ComicsCharacter",
        "seq": "33,49",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "In which part of the world can i find Xynisteri and Mavro?",
    "SerialNumber": "3352",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Xynisteri\u003e \u003chttp://dbpedia.org/ontology/origin\u003e ?uri. \u003chttp://dbpedia.org/resource/Mavro\u003e \u003chttp://dbpedia.org/ontology/origin\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Xynisteri",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Xynisteri",
        "seq": "38,47"
      },
      {
        "label": "Mavro",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Mavro",
        "seq": "52,57"
      }
    ],
    "id": "0309871f7c564e6bbce3d3b481300bd8",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/origin",
        "seq": "34,36",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/origin",
        "seq": "34,36",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What are the awards won by the parent of Daniel Bergmans?",
    "SerialNumber": "3353",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Daniel_Bergman\u003e \u003chttp://dbpedia.org/ontology/parent\u003e ?x . ?x \u003chttp://dbpedia.org/property/awards\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Daniel Bergman",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Daniel_Bergman",
        "seq": "41,55"
      }
    ],
    "id": "84bc7466ff1a47cf86ed7bc090ba96b3",
    "predicate mapping": [
      {
        "label": "parent",
        "uri": "http://dbpedia.org/ontology/parent",
        "seq": "31,37",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards",
        "seq": "13,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "What did Steven T Mason\u0027s father die from?",
    "SerialNumber": "3355",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/child\u003e \u003chttp://dbpedia.org/resource/Stevens_T._Mason\u003e . ?x \u003chttp://dbpedia.org/ontology/deathCause\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Steven T Mason",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Stevens_T._Mason",
        "seq": "9,23"
      }
    ],
    "id": "5fc0f9b047174d33bd4225a3d24e5f30",
    "predicate mapping": [
      {
        "label": "son",
        "uri": "http://dbpedia.org/ontology/child",
        "seq": "20,23",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "die from",
        "uri": "http://dbpedia.org/ontology/deathCause",
        "seq": "33,41",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who is the founder of Pittsburgh ?",
    "SerialNumber": "3360",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Pittsburgh\u003e \u003chttp://dbpedia.org/ontology/founder\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Pittsburgh",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Pittsburgh",
        "seq": "22,32"
      }
    ],
    "id": "df77a0a57a254a339759da5845ded0cf",
    "predicate mapping": [
      {
        "label": "founder of",
        "uri": "http://dbpedia.org/ontology/founder",
        "seq": "11,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the river  whose source location is Nevado Mismi and region is Arequipa Region?",
    "SerialNumber": "3363",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/sourceLocation\u003e \u003chttp://dbpedia.org/resource/Nevado_Mismi\u003e . ?uri \u003chttp://dbpedia.org/property/sourceRegion\u003e \u003chttp://dbpedia.org/resource/Arequipa_Region\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/River\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Nevado Mismi",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Nevado_Mismi",
        "seq": "41,53"
      },
      {
        "label": "Arequipa Region",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Arequipa_Region",
        "seq": "68,83"
      }
    ],
    "id": "516925179add4b768fc74c74f434222a",
    "predicate mapping": [
      {
        "label": "source location",
        "uri": "http://dbpedia.org/property/sourceLocation",
        "seq": "22,37",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "source region",
        "uri": "http://dbpedia.org/property/sourceRegion",
        "seq": "-1,12",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the citizenship of Ren Romano ?",
    "SerialNumber": "3366",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/René_Romano\u003e \u003chttp://dbpedia.org/property/citizenship\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ren Romano",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/René_Romano",
        "seq": "27,37"
      }
    ],
    "id": "fb19f3dd1d7640a0b47e3dea68b42bb9",
    "predicate mapping": [
      {
        "label": "citizenship",
        "uri": "http://dbpedia.org/property/citizenship",
        "seq": "12,23",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "Where was the company who is the operator of Harihar Airport founded ?",
    "SerialNumber": "3367",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Harihar_Airport\u003e \u003chttp://dbpedia.org/ontology/operator\u003e ?x . ?x \u003chttp://dbpedia.org/property/foundation\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Company\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Harihar Airport",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Harihar_Airport",
        "seq": "45,60"
      }
    ],
    "id": "2e8a9d01f6f54a03ab23c1741dc25aa1",
    "predicate mapping": [
      {
        "label": "operator",
        "uri": "http://dbpedia.org/ontology/operator",
        "seq": "33,41",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "founded",
        "uri": "http://dbpedia.org/property/foundation",
        "seq": "61,68",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company",
        "seq": "14,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which architect of the Marine Corps Air Station Kaneohe Bay is the branch of the Burnet R. Maybank?",
    "SerialNumber": "3368",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Marine_Corps_Air_Station_Kaneohe_Bay\u003e \u003chttp://dbpedia.org/property/architect\u003e ?uri. \u003chttp://dbpedia.org/resource/Burnet_R._Maybank\u003e \u003chttp://dbpedia.org/property/branch\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Marine Corps Air Station Kaneohe Bay",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Marine_Corps_Air_Station_Kaneohe_Bay",
        "seq": "23,59"
      },
      {
        "label": "Burnet R. Maybank",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Burnet_R._Maybank",
        "seq": "81,98"
      }
    ],
    "id": "ffe030d0d0234e8498265e9d4826ab1b",
    "predicate mapping": [
      {
        "label": "architect",
        "uri": "http://dbpedia.org/property/architect",
        "seq": "6,15",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "branch",
        "uri": "http://dbpedia.org/property/branch",
        "seq": "67,73",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the official name of Colorado wine ?",
    "SerialNumber": "3370",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Colorado_wine\u003e \u003chttp://dbpedia.org/property/officialName\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Colorado wine",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Colorado_wine",
        "seq": "29,42"
      }
    ],
    "id": "a9c0a13767d7483590305e3413152c50",
    "predicate mapping": [
      {
        "label": "official name",
        "uri": "http://dbpedia.org/property/officialName",
        "seq": "12,25",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who wrote the US steel hour?",
    "SerialNumber": "3371",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/The_United_States_Steel_Hour\u003e \u003chttp://dbpedia.org/ontology/writer\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "US steel hour",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/The_United_States_Steel_Hour",
        "seq": "14,27"
      }
    ],
    "id": "244b1c2f6e3e4c57b2532ec5e4d15329",
    "predicate mapping": [
      {
        "label": "wrote",
        "uri": "http://dbpedia.org/ontology/writer",
        "seq": "4,9",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "111",
    "question": "Count the total number of cast member of the television shows whose actress is Joey McIntyre?",
    "SerialNumber": "3374",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/starring\u003e \u003chttp://dbpedia.org/resource/Joey_McIntyre\u003e . ?x \u003chttp://dbpedia.org/property/starring\u003e ?uri }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Joey McIntyre",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Joey_McIntyre",
        "seq": "79,92"
      }
    ],
    "id": "7472a240a44b44a69fecf3305677e72e",
    "predicate mapping": [
      {
        "label": "actress",
        "uri": "http://dbpedia.org/property/starring",
        "seq": "68,75",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "actress",
        "uri": "http://dbpedia.org/property/starring",
        "seq": "68,75",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What is the former partner of the figure skaters whose current partner is Alexa Scimeca?",
    "SerialNumber": "3376",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/currentPartner\u003e \u003chttp://dbpedia.org/resource/Alexa_Scimeca\u003e . ?x \u003chttp://dbpedia.org/ontology/formerPartner\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/FigureSkater\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Alexa Scimeca",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Alexa_Scimeca",
        "seq": "74,87"
      }
    ],
    "id": "0c0ff7a433a646868818f8629d5a0134",
    "predicate mapping": [
      {
        "label": "current partner",
        "uri": "http://dbpedia.org/ontology/currentPartner",
        "seq": "55,70",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "former partner",
        "uri": "http://dbpedia.org/ontology/formerPartner",
        "seq": "12,26",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "figure skater",
        "uri": "http://dbpedia.org/ontology/FigureSkater",
        "seq": "34,47",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "311",
    "question": "Name all the broadcast area of the TV stations which has Rodrigues as one of the broadcast area ?",
    "SerialNumber": "3378",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/broadcastArea\u003e \u003chttp://dbpedia.org/resource/Rodrigues\u003e . ?x \u003chttp://dbpedia.org/property/broadcastArea\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionStation\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Rodrigues",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Rodrigues",
        "seq": "57,66"
      }
    ],
    "id": "a188179d04e740928d43dc584501c365",
    "predicate mapping": [
      {
        "label": "broadcast area",
        "uri": "http://dbpedia.org/property/broadcastArea",
        "seq": "13,27",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "broadcast area",
        "uri": "http://dbpedia.org/property/broadcastArea",
        "seq": "13,27",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "stations",
        "uri": "http://dbpedia.org/ontology/TelevisionStation",
        "seq": "38,46",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "With which musical artist is the producer of Spotlight associated ?",
    "SerialNumber": "3381",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Spotlight_(Jennifer_Hudson_song)\u003e \u003chttp://dbpedia.org/ontology/producer\u003e ?x . ?x \u003chttp://dbpedia.org/property/associatedActs\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MusicalArtist\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Spotlight",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Spotlight_(Jennifer_Hudson_song)",
        "seq": "45,54"
      }
    ],
    "id": "95f0c14ef2194c5cb7fb4fafa947da6a",
    "predicate mapping": [
      {
        "label": "producer",
        "uri": "http://dbpedia.org/ontology/producer",
        "seq": "33,41",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "associated",
        "uri": "http://dbpedia.org/property/associatedActs",
        "seq": "55,65",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "musical artist",
        "uri": "http://dbpedia.org/ontology/MusicalArtist",
        "seq": "11,25",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the office holder whose constituency is Noe Valley, San Francisco and belongs to military unit USS Kittiwake (ASR-13)?",
    "SerialNumber": "3382",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/constituency\u003e \u003chttp://dbpedia.org/resource/Noe_Valley,_San_Francisco\u003e . ?uri \u003chttp://dbpedia.org/ontology/militaryUnit\u003e \u003chttp://dbpedia.org/resource/USS_Kittiwake_(ASR-13)\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/OfficeHolder\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Noe Valley, San Francisco",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Noe_Valley,_San_Francisco",
        "seq": "45,70"
      },
      {
        "label": "USS Kittiwake (ASR-13)",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/USS_Kittiwake_(ASR-13)",
        "seq": "100,122"
      }
    ],
    "id": "3c149a4bfbfd4fcdb7f24af562373951",
    "predicate mapping": [
      {
        "label": "constituency",
        "uri": "http://dbpedia.org/property/constituency",
        "seq": "29,41",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "military unit",
        "uri": "http://dbpedia.org/ontology/militaryUnit",
        "seq": "86,99",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "office holder",
        "uri": "http://dbpedia.org/ontology/OfficeHolder",
        "seq": "9,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the route end of Birmingham and Oxford Junction Railway ?",
    "SerialNumber": "3390",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Birmingham_and_Oxford_Junction_Railway\u003e \u003chttp://dbpedia.org/ontology/routeEnd\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Birmingham and Oxford Junction Railway",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Birmingham_and_Oxford_Junction_Railway",
        "seq": "25,63"
      }
    ],
    "id": "659e0f9700964082b127b839ca27f172",
    "predicate mapping": [
      {
        "label": "route end",
        "uri": "http://dbpedia.org/ontology/routeEnd",
        "seq": "12,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the municipality of Homestead Grays Bridge ?",
    "SerialNumber": "3392",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Homestead_Grays_Bridge\u003e \u003chttp://dbpedia.org/ontology/municipality\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Homestead Grays Bridge",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Homestead_Grays_Bridge",
        "seq": "28,50"
      }
    ],
    "id": "a1a358a3439f4fcbbc39fa25718b2ad6",
    "predicate mapping": [
      {
        "label": "municipality",
        "uri": "http://dbpedia.org/ontology/municipality",
        "seq": "12,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which region of Bannock is the origin od Spaghetti squash ?",
    "SerialNumber": "3398",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Spaghetti_squash\u003e \u003chttp://dbpedia.org/ontology/origin\u003e ?uri. \u003chttp://dbpedia.org/resource/Bannock_(food)\u003e \u003chttp://dbpedia.org/ontology/region\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Spaghetti squash",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Spaghetti_squash",
        "seq": "41,57"
      },
      {
        "label": "Bannock",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Bannock_(food)",
        "seq": "16,23"
      }
    ],
    "id": "b38e47f868494aad92a0886611fb76eb",
    "predicate mapping": [
      {
        "label": "origin",
        "uri": "http://dbpedia.org/ontology/origin",
        "seq": "31,37",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "region",
        "uri": "http://dbpedia.org/ontology/region",
        "seq": "6,12",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who is the opponent of United States House of Representatives elections in Ohio, 2010 ?",
    "SerialNumber": "3399",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/United_States_House_of_Representatives_elections_in_Ohio,_2010\u003e \u003chttp://dbpedia.org/property/opponent\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "United States House of Representatives elections in Ohio, 2010",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/United_States_House_of_Representatives_elections_in_Ohio,_2010",
        "seq": "23,85"
      }
    ],
    "id": "8d4da6021bd04b108db6150288326476",
    "predicate mapping": [
      {
        "label": "opponent",
        "uri": "http://dbpedia.org/property/opponent",
        "seq": "11,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which district of Robert William Wilcox os the place of birth of Kamaloohua ?",
    "SerialNumber": "3400",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Robert_William_Wilcox\u003e \u003chttp://dbpedia.org/property/district\u003e ?uri. \u003chttp://dbpedia.org/resource/Kamaloohua\u003e \u003chttp://dbpedia.org/property/placeOfBirth\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Robert William Wilcox",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Robert_William_Wilcox",
        "seq": "18,39"
      },
      {
        "label": "Kamaloohua",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Kamaloohua",
        "seq": "65,75"
      }
    ],
    "id": "8f807aa1160a43f18fb9f1b9b304c86b",
    "predicate mapping": [
      {
        "label": "district",
        "uri": "http://dbpedia.org/property/district",
        "seq": "6,14",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "place of birth",
        "uri": "http://dbpedia.org/property/placeOfBirth",
        "seq": "47,61",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the commander of Battle of the Thames ?",
    "SerialNumber": "3401",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Battle_of_the_Thames\u003e \u003chttp://dbpedia.org/ontology/commander\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Battle of the Thames",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Battle_of_the_Thames",
        "seq": "22,42"
      }
    ],
    "id": "c1fbd40e9d774b85994b633e277b297b",
    "predicate mapping": [
      {
        "label": "commander",
        "uri": "http://dbpedia.org/ontology/commander",
        "seq": "9,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "311",
    "question": "Name the states which have been billed by the wrestlers who has also billed Georgia ?",
    "SerialNumber": "3402",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/billed\u003e \u003chttp://dbpedia.org/resource/Georgia_(U.S._state)\u003e . ?x \u003chttp://dbpedia.org/property/billed\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Wrestler\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Georgia",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Georgia_(U.S._state)",
        "seq": "76,83"
      }
    ],
    "id": "739ec9202cac42dcb1c76c274d183b8c",
    "predicate mapping": [
      {
        "label": "billed",
        "uri": "http://dbpedia.org/property/billed",
        "seq": "32,38",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "billed",
        "uri": "http://dbpedia.org/property/billed",
        "seq": "32,38",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "wrestler",
        "uri": "http://dbpedia.org/ontology/Wrestler",
        "seq": "46,54",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "111",
    "question": "Count the number of  sport played by the school which also plays Association football ?",
    "SerialNumber": "3404",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/sport\u003e \u003chttp://dbpedia.org/resource/Association_football\u003e . ?x \u003chttp://dbpedia.org/ontology/sport\u003e ?uri }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Association football",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Association_football",
        "seq": "65,85"
      }
    ],
    "id": "01cd1e78b6be40e98f1e8db6d8b64385",
    "predicate mapping": [
      {
        "label": "sport",
        "uri": "http://dbpedia.org/ontology/sport",
        "seq": "21,26",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "sport",
        "uri": "http://dbpedia.org/ontology/sport",
        "seq": "21,26",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "111",
    "question": "Give me the total number of Guests of the television episodes whose one of the  Guests is Michael Cristofer?",
    "SerialNumber": "3406",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/guests\u003e \u003chttp://dbpedia.org/resource/Michael_Cristofer\u003e . ?x \u003chttp://dbpedia.org/property/guests\u003e ?uri }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Michael Cristofer",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Michael_Cristofer",
        "seq": "90,107"
      }
    ],
    "id": "0158182c73724ee685ea4dc4dae2b647",
    "predicate mapping": [
      {
        "label": "Guests",
        "uri": "http://dbpedia.org/property/guests",
        "seq": "28,34",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "Guests",
        "uri": "http://dbpedia.org/property/guests",
        "seq": "28,34",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Were the 1995 south pacific games hosted in tahiti?",
    "SerialNumber": "3407",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/1995_South_Pacific_Games\u003e \u003chttp://dbpedia.org/property/hostCity\u003e \u003chttp://dbpedia.org/resource/Tahiti\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "1995 south pacific games",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/1995_South_Pacific_Games",
        "seq": "9,33"
      },
      {
        "label": "tahiti",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Tahiti",
        "seq": "44,50"
      }
    ],
    "id": "0eeefb46088442158a96ecb63d79ef4b",
    "predicate mapping": [
      {
        "label": "hosted",
        "uri": "http://dbpedia.org/property/hostCity",
        "seq": "34,40",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which division of the Runewaker Entertainment is also the  destinations of the Airtours International Airways?",
    "SerialNumber": "3408",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Runewaker_Entertainment\u003e \u003chttp://dbpedia.org/ontology/division\u003e ?uri. \u003chttp://dbpedia.org/resource/Airtours_International_Airways\u003e \u003chttp://dbpedia.org/property/destinations\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Runewaker Entertainment",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Runewaker_Entertainment",
        "seq": "22,45"
      },
      {
        "label": "Airtours International Airways",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Airtours_International_Airways",
        "seq": "79,109"
      }
    ],
    "id": "a3f1e2963c0c465d966469f42cdb94a9",
    "predicate mapping": [
      {
        "label": "division",
        "uri": "http://dbpedia.org/ontology/division",
        "seq": "6,14",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "destinations",
        "uri": "http://dbpedia.org/property/destinations",
        "seq": "59,71",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "405",
    "question": "Give me an estimate number of races where horses grandsired by the Wild Risk have raced in?",
    "SerialNumber": "3409",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/grandsire\u003e \u003chttp://dbpedia.org/resource/Wild_Risk\u003e . ?x \u003chttp://dbpedia.org/property/race\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/HorseRace\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Wild Risk",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Wild_Risk",
        "seq": "67,76"
      }
    ],
    "id": "c6eee71ddd2745a6a35018dfa232f4bb",
    "predicate mapping": [
      {
        "label": "grandsire",
        "uri": "http://dbpedia.org/ontology/grandsire",
        "seq": "49,58",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "race",
        "uri": "http://dbpedia.org/property/race",
        "seq": "30,34",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "horses",
        "uri": "http://dbpedia.org/ontology/HorseRace",
        "seq": "42,48",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "List the awards won by the cinematographer of Mickey\u0027s Mellerdrammer?",
    "SerialNumber": "3410",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Mickey\u0027s_Mellerdrammer\u003e \u003chttp://dbpedia.org/property/cinematography\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/award\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Mickey\u0027s Mellerdrammer",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Mickey\u0027s_Mellerdrammer",
        "seq": "46,68"
      }
    ],
    "id": "53bf3aeac4064196845be56ed236a7f7",
    "predicate mapping": [
      {
        "label": "cinematographer",
        "uri": "http://dbpedia.org/property/cinematography",
        "seq": "27,42",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/award",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Where is the garrison of Western Naval Command ?",
    "SerialNumber": "3411",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Western_Naval_Command\u003e \u003chttp://dbpedia.org/property/garrison\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Western Naval Command",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Western_Naval_Command",
        "seq": "25,46"
      }
    ],
    "id": "53b2519492344f22a93ce9bef25dd3a5",
    "predicate mapping": [
      {
        "label": "garrison",
        "uri": "http://dbpedia.org/property/garrison",
        "seq": "13,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "406",
    "question": "Count the number of books whose author\u0027s were born in Alcal de Henares ?",
    "SerialNumber": "3412",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/birthPlace\u003e \u003chttp://dbpedia.org/resource/Alcalá_de_Henares\u003e . ?uri \u003chttp://dbpedia.org/ontology/author\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Book\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Alcal de Henares",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Alcalá_de_Henares",
        "seq": "54,70"
      }
    ],
    "id": "e698401405e74eb89c41b846351f1ff9",
    "predicate mapping": [
      {
        "label": "born in",
        "uri": "http://dbpedia.org/ontology/birthPlace",
        "seq": "46,53",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "author",
        "uri": "http://dbpedia.org/ontology/author",
        "seq": "32,38",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "book",
        "uri": "http://dbpedia.org/ontology/Book",
        "seq": "20,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "List the film starring of the movies whose editor is Harvey  Rosenstock ?",
    "SerialNumber": "3413",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/editing\u003e \u003chttp://dbpedia.org/resource/Harvey_Rosenstock\u003e . ?x \u003chttp://dbpedia.org/property/starring\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Harvey Rosenstock",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Harvey_Rosenstock",
        "seq": "-1,16"
      }
    ],
    "id": "c64b64f2cf244f4dbe7002a393771eb6",
    "predicate mapping": [
      {
        "label": "editor",
        "uri": "http://dbpedia.org/ontology/editing",
        "seq": "43,49",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "film starring",
        "uri": "http://dbpedia.org/property/starring",
        "seq": "9,22",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "30,35",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "307",
    "question": "What is the name of the person who has relations with Dionne Warwick and Gary Garland?",
    "SerialNumber": "3414",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/ontology/relation\u003e \u003chttp://dbpedia.org/resource/Dionne_Warwick\u003e . ?uri \u003chttp://dbpedia.org/ontology/relation\u003e \u003chttp://dbpedia.org/resource/Gary_Garland\u003e . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Dionne Warwick",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Dionne_Warwick",
        "seq": "54,68"
      },
      {
        "label": "Gary Garland",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Gary_Garland",
        "seq": "73,85"
      }
    ],
    "id": "981c2203e0974c06abfc3fa94b23caac",
    "predicate mapping": [
      {
        "label": "relation",
        "uri": "http://dbpedia.org/ontology/relation",
        "seq": "39,47",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "relation",
        "uri": "http://dbpedia.org/ontology/relation",
        "seq": "39,47",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/Person",
        "seq": "24,30",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which region of English American is also the palce of Death of Brent Darby ?",
    "SerialNumber": "3417",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/English_Americans\u003e \u003chttp://dbpedia.org/property/region\u003e ?uri. \u003chttp://dbpedia.org/resource/Brent_Darby\u003e \u003chttp://dbpedia.org/property/placeOfDeath\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "English American ",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/English_Americans",
        "seq": "16,33"
      },
      {
        "label": "Brent Darby",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Brent_Darby",
        "seq": "63,74"
      }
    ],
    "id": "694000fa26c74b33aa7095c7738f7179",
    "predicate mapping": [
      {
        "label": "region",
        "uri": "http://dbpedia.org/property/region",
        "seq": "6,12",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "death",
        "uri": "http://dbpedia.org/property/placeOfDeath",
        "seq": "-1,4",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "11",
    "question": "Who are the architect of the stadium whose one of the architect is louis D. Astorino ?",
    "SerialNumber": "3418",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/architect\u003e \u003chttp://dbpedia.org/resource/Louis_D._Astorino\u003e . ?x \u003chttp://dbpedia.org/property/architect\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "louis D. Astorino",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Louis_D._Astorino",
        "seq": "67,84"
      }
    ],
    "id": "3a46f9dd0ff14411b6184bbc26d354d9",
    "predicate mapping": [
      {
        "label": "architect",
        "uri": "http://dbpedia.org/property/architect",
        "seq": "12,21",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "architect",
        "uri": "http://dbpedia.org/property/architect",
        "seq": "12,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Who is the fictional character whose family member is Padme Amidala?",
    "SerialNumber": "3421",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/family\u003e \u003chttp://dbpedia.org/resource/Padmé_Amidala\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/FictionalCharacter\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Padme Amidala",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Padmé_Amidala",
        "seq": "54,67"
      }
    ],
    "id": "7152d19cc09847a59273b9425bba8dfe",
    "predicate mapping": [
      {
        "label": "family",
        "uri": "http://dbpedia.org/property/family",
        "seq": "37,43",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "fictional character",
        "uri": "http://dbpedia.org/ontology/FictionalCharacter",
        "seq": "11,30",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which notable series of Russell T Davies is also the series of Short Trips: A day in the life ?",
    "SerialNumber": "3422",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Short_Trips:_A_Day_in_the_Life\u003e \u003chttp://dbpedia.org/ontology/series\u003e ?uri. \u003chttp://dbpedia.org/resource/Russell_T_Davies\u003e \u003chttp://dbpedia.org/ontology/notableWork\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Short Trips: A day in the life",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Short_Trips:_A_Day_in_the_Life",
        "seq": "63,93"
      },
      {
        "label": "Russell T Davies",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Russell_T_Davies",
        "seq": "24,40"
      }
    ],
    "id": "9111a28178e8420b88b3124f0b714e72",
    "predicate mapping": [
      {
        "label": "series",
        "uri": "http://dbpedia.org/ontology/series",
        "seq": "14,20",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "notable",
        "uri": "http://dbpedia.org/ontology/notableWork",
        "seq": "6,13",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "List the relatives of clay Aiken ?",
    "SerialNumber": "3424",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/relatives\u003e \u003chttp://dbpedia.org/resource/Clay_Aiken\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "clay Aiken",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Clay_Aiken",
        "seq": "22,32"
      }
    ],
    "id": "f9b31b5201064d76b7f841959920c37f",
    "predicate mapping": [
      {
        "label": "relatives",
        "uri": "http://dbpedia.org/property/relatives",
        "seq": "9,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "311",
    "question": "Which are the cities on the river which also flows in Tukwila, Washington ?",
    "SerialNumber": "3426",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/city\u003e \u003chttp://dbpedia.org/resource/Tukwila,_Washington\u003e . ?x \u003chttp://dbpedia.org/ontology/city\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/River\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Tukwila, Washington",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Tukwila,_Washington",
        "seq": "54,73"
      }
    ],
    "id": "f11a115d1c814158bf1464c31ccbdba7",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/property/city",
        "seq": "51,53",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/city",
        "seq": "51,53",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River",
        "seq": "28,33",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Mazhar Ul Haq High School, Beerwah is affiliated to Islamic Religion",
    "SerialNumber": "3428",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Mazhar_Ul_Haq_High_School,_Beerwah\u003e \u003chttp://dbpedia.org/property/religiousAffiliation\u003e \u003chttp://dbpedia.org/resource/Islam\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Mazhar Ul Haq High School, Beerwah",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Mazhar_Ul_Haq_High_School,_Beerwah",
        "seq": "0,34"
      },
      {
        "label": "Islam",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Islam",
        "seq": "52,57"
      }
    ],
    "id": "565549d096324c1ca053e79d2d314691",
    "predicate mapping": [
      {
        "label": "Religion",
        "uri": "http://dbpedia.org/property/religiousAffiliation",
        "seq": "60,68",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "In which state does the university which is the alma mater of Mateusz Morawiecki lie?",
    "SerialNumber": "3429",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Mateusz_Morawiecki\u003e \u003chttp://dbpedia.org/property/almaMater\u003e ?x . ?x \u003chttp://dbpedia.org/property/state\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/University\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Mateusz Morawiecki",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Mateusz_Morawiecki",
        "seq": "62,80"
      }
    ],
    "id": "a8f9d6667ed44a89b9be3cf80a8d24c6",
    "predicate mapping": [
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/property/almaMater",
        "seq": "48,58",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "state",
        "uri": "http://dbpedia.org/property/state",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "university",
        "uri": "http://dbpedia.org/ontology/University",
        "seq": "24,34",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "311",
    "question": "List the significant buildings of the arch. whose one of the important work is Government Building, Kiev ?",
    "SerialNumber": "3435",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/significantBuilding\u003e \u003chttp://dbpedia.org/resource/Government_Building,_Kiev\u003e . ?x \u003chttp://dbpedia.org/ontology/significantBuilding\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Architect\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Government Building, Kiev",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Government_Building,_Kiev",
        "seq": "79,104"
      }
    ],
    "id": "2408eccc056c49ec8d1d6eb57ccc6b3c",
    "predicate mapping": [
      {
        "label": "significant building",
        "uri": "http://dbpedia.org/ontology/significantBuilding",
        "seq": "9,29",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "significant building",
        "uri": "http://dbpedia.org/ontology/significantBuilding",
        "seq": "9,29",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "arch.",
        "uri": "http://dbpedia.org/ontology/Architect",
        "seq": "38,43",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the alma mater of Fikret Orman?",
    "SerialNumber": "3436",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Fikret_Orman\u003e \u003chttp://dbpedia.org/property/almaMater\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Fikret Orman",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Fikret_Orman",
        "seq": "26,38"
      }
    ],
    "id": "7383239e8ece464a80a8d5422d4ed3bc",
    "predicate mapping": [
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/property/almaMater",
        "seq": "12,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "what are some players of England national football team?",
    "SerialNumber": "3439",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/nationalteam\u003e \u003chttp://dbpedia.org/resource/England_national_football_team\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "England national football team",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/England_national_football_team",
        "seq": "25,55"
      }
    ],
    "id": "627b135b1339420abd87fd83a60ba519",
    "predicate mapping": [
      {
        "label": "national team",
        "uri": "http://dbpedia.org/property/nationalteam",
        "seq": "-1,12",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What are the other notable work of the executive producer of The Runaway Bride episode of Doctor Who?",
    "SerialNumber": "3441",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/The_Runaway_Bride_(Doctor_Who)\u003e \u003chttp://dbpedia.org/ontology/executiveProducer\u003e ?x . ?x \u003chttp://dbpedia.org/property/notableworks\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "The Runaway Bride",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Runaway_Bride_(Doctor_Who)",
        "seq": "61,78"
      }
    ],
    "id": "13b91edef6f247998a11991c20d82c12",
    "predicate mapping": [
      {
        "label": "executive producer",
        "uri": "http://dbpedia.org/ontology/executiveProducer",
        "seq": "39,57",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "notable work",
        "uri": "http://dbpedia.org/property/notableworks",
        "seq": "19,31",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the subject of The Prodigal son ?",
    "SerialNumber": "3442",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/The_Prodigal_Son_(play)\u003e \u003chttp://dbpedia.org/property/subject\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "The Prodigal son",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Prodigal_Son_(play)",
        "seq": "23,39"
      }
    ],
    "id": "92cabb6122e7449fb885581d7b8e5127",
    "predicate mapping": [
      {
        "label": "subject",
        "uri": "http://dbpedia.org/property/subject",
        "seq": "12,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What water bodies are nearest to Helsinki city?",
    "SerialNumber": "3443",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/nearestCity\u003e \u003chttp://dbpedia.org/resource/Helsinki\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/BodyOfWater\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Helsinki",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Helsinki",
        "seq": "33,41"
      }
    ],
    "id": "a1bd0e085010417ba43241a478f7df55",
    "predicate mapping": [
      {
        "label": "nearest city",
        "uri": "http://dbpedia.org/ontology/nearestCity",
        "seq": "-1,11",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "water",
        "uri": "http://dbpedia.org/ontology/BodyOfWater",
        "seq": "5,10",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who is the meaning of Isa  ?",
    "SerialNumber": "3445",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Isa_(name)\u003e \u003chttp://dbpedia.org/property/meaning\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Isa",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Isa_(name)",
        "seq": "22,25"
      }
    ],
    "id": "ee7db84a309448d5abf22c529f3c8d35",
    "predicate mapping": [
      {
        "label": "meaning",
        "uri": "http://dbpedia.org/property/meaning",
        "seq": "11,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which company founded by Fusajiro Yamauchi also provides services of Nintendo eShop ?",
    "SerialNumber": "3446",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/foundedBy\u003e \u003chttp://dbpedia.org/resource/Fusajiro_Yamauchi\u003e . ?uri \u003chttp://dbpedia.org/property/services\u003e \u003chttp://dbpedia.org/resource/Nintendo_eShop\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Company\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Fusajiro Yamauchi",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Fusajiro_Yamauchi",
        "seq": "25,42"
      },
      {
        "label": "Nintendo eShop",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Nintendo_eShop",
        "seq": "69,83"
      }
    ],
    "id": "a590bd766cad404b831d5cbb85a244b8",
    "predicate mapping": [
      {
        "label": "founded by",
        "uri": "http://dbpedia.org/ontology/foundedBy",
        "seq": "14,24",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "services",
        "uri": "http://dbpedia.org/property/services",
        "seq": "57,65",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company",
        "seq": "6,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the official language of Ladonia, which is the target area of Probus Journal?",
    "SerialNumber": "3447",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Ladonia_(micronation)\u003e \u003chttp://dbpedia.org/ontology/officialLanguage\u003e ?uri. \u003chttp://dbpedia.org/resource/Probus_(journal)\u003e \u003chttp://dbpedia.org/ontology/academicDiscipline\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ladonia",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ladonia_(micronation)",
        "seq": "33,40"
      },
      {
        "label": "Probus",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Probus_(journal)",
        "seq": "70,76"
      }
    ],
    "id": "9a7c1e18a60b45f5842fffdec31b087a",
    "predicate mapping": [
      {
        "label": "official language",
        "uri": "http://dbpedia.org/ontology/officialLanguage",
        "seq": "12,29",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "area",
        "uri": "http://dbpedia.org/ontology/academicDiscipline",
        "seq": "62,66",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the movie who has screenplay by Akiva Goldsman and is edited by Mark Stevens ?",
    "SerialNumber": "3449",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/screenplay\u003e \u003chttp://dbpedia.org/resource/Akiva_Goldsman\u003e . ?uri \u003chttp://dbpedia.org/property/editing\u003e \u003chttp://dbpedia.org/resource/Mark_Stevens_(film_editor)\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Akiva Goldsman",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Akiva_Goldsman",
        "seq": "37,51"
      },
      {
        "label": "Mark Stevens",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Mark_Stevens_(film_editor)",
        "seq": "69,81"
      }
    ],
    "id": "f468633c3d9d42d6b5460e08fd7527ed",
    "predicate mapping": [
      {
        "label": "screenplay",
        "uri": "http://dbpedia.org/property/screenplay",
        "seq": "23,33",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "edited by",
        "uri": "http://dbpedia.org/property/editing",
        "seq": "59,68",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Is facebook a public company?",
    "SerialNumber": "3451",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Facebook\u003e \u003chttp://dbpedia.org/property/companyType\u003e \u003chttp://dbpedia.org/resource/Public_company\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "facebook",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Facebook",
        "seq": "3,11"
      },
      {
        "label": "public company",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Public_company",
        "seq": "14,28"
      }
    ],
    "id": "8663feba2e3b48de998772ddb3283b0f",
    "predicate mapping": [
      {
        "label": "company",
        "uri": "http://dbpedia.org/property/companyType",
        "seq": "21,28",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Was Gerald Gibbs the cinematographer of X the unknown?",
    "SerialNumber": "3454",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/X_the_Unknown\u003e \u003chttp://dbpedia.org/ontology/cinematography\u003e \u003chttp://dbpedia.org/resource/Gerald_Gibbs_(cinematographer)\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "X the unknown",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/X_the_Unknown",
        "seq": "40,53"
      },
      {
        "label": "Gerald Gibbs",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Gerald_Gibbs_(cinematographer)",
        "seq": "4,16"
      }
    ],
    "id": "efcc04cf1e59487e9a5018d7fd3412e0",
    "predicate mapping": [
      {
        "label": "cinematographer",
        "uri": "http://dbpedia.org/ontology/cinematography",
        "seq": "21,36",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "311",
    "question": "List the architect of the buildings whose one of the  architect is Philip Webb?",
    "SerialNumber": "3455",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/architect\u003e \u003chttp://dbpedia.org/resource/Philip_Webb\u003e . ?x \u003chttp://dbpedia.org/property/architect\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Building\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Philip Webb",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Philip_Webb",
        "seq": "67,78"
      }
    ],
    "id": "b70eb1cf6bbc449e8c384f3cc7c888bd",
    "predicate mapping": [
      {
        "label": "architect",
        "uri": "http://dbpedia.org/property/architect",
        "seq": "9,18",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "architect",
        "uri": "http://dbpedia.org/property/architect",
        "seq": "9,18",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "building",
        "uri": "http://dbpedia.org/ontology/Building",
        "seq": "26,34",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "List the trainers of Shinya Aoki ?",
    "SerialNumber": "3456",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Shinya_Aoki\u003e \u003chttp://dbpedia.org/ontology/trainer\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Shinya Aoki",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Shinya_Aoki",
        "seq": "21,32"
      }
    ],
    "id": "ef57d1c17ccf4f40847f6c51c1183441",
    "predicate mapping": [
      {
        "label": "trainer",
        "uri": "http://dbpedia.org/ontology/trainer",
        "seq": "9,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "401",
    "question": "How many software run on operating system is Microsoft Windows?",
    "SerialNumber": "3457",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/ontology/operatingSystem\u003e \u003chttp://dbpedia.org/resource/Microsoft_Windows\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Software\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Microsoft Windows",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Microsoft_Windows",
        "seq": "45,62"
      }
    ],
    "id": "02863512b8c141d8919dad7863c3b44e",
    "predicate mapping": [
      {
        "label": "operating system",
        "uri": "http://dbpedia.org/ontology/operatingSystem",
        "seq": "25,41",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "software",
        "uri": "http://dbpedia.org/ontology/Software",
        "seq": "9,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "Give me the mascot of the military unit in which Stewart Bovell served?",
    "SerialNumber": "3460",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Stewart_Bovell\u003e \u003chttp://dbpedia.org/ontology/militaryBranch\u003e ?x . ?x \u003chttp://dbpedia.org/property/mascot\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MilitaryUnit\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Stewart Bovell",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Stewart_Bovell",
        "seq": "49,63"
      }
    ],
    "id": "6c19a51322bb489f9b4cb12531a09d13",
    "predicate mapping": [
      {
        "label": "military",
        "uri": "http://dbpedia.org/ontology/militaryBranch",
        "seq": "26,34",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "mascot",
        "uri": "http://dbpedia.org/property/mascot",
        "seq": "12,18",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "military unit",
        "uri": "http://dbpedia.org/ontology/MilitaryUnit",
        "seq": "26,39",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which manufacturer of  Ford Y-block engine is the parent of  Ford Air Transport Service ?",
    "SerialNumber": "3463",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Ford_Y-block_engine\u003e \u003chttp://dbpedia.org/ontology/manufacturer\u003e ?uri. \u003chttp://dbpedia.org/resource/Ford_Air_Transport_Service\u003e \u003chttp://dbpedia.org/property/parent\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ford Y-block engine",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ford_Y-block_engine",
        "seq": "23,42"
      },
      {
        "label": "Ford Air Transport Service",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ford_Air_Transport_Service",
        "seq": "61,87"
      }
    ],
    "id": "9ea1f28bd342417b8859d96f88a7f775",
    "predicate mapping": [
      {
        "label": "manufacturer",
        "uri": "http://dbpedia.org/ontology/manufacturer",
        "seq": "6,18",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "parent",
        "uri": "http://dbpedia.org/property/parent",
        "seq": "50,56",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "406",
    "question": "How many games have a composer who worked for the Creatures?",
    "SerialNumber": "3464",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/occupation\u003e \u003chttp://dbpedia.org/resource/Creatures_(company)\u003e . ?uri \u003chttp://dbpedia.org/property/composer\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/VideoGame\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Creatures",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Creatures_(company)",
        "seq": "50,59"
      }
    ],
    "id": "2fd401510ca849388e708a6f0b1f2137",
    "predicate mapping": [
      {
        "label": "work",
        "uri": "http://dbpedia.org/ontology/occupation",
        "seq": "35,39",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "composer",
        "uri": "http://dbpedia.org/property/composer",
        "seq": "22,30",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "games",
        "uri": "http://dbpedia.org/ontology/VideoGame",
        "seq": "9,14",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "405",
    "question": "Total number of places where people drafted in the detroit pistons have died?",
    "SerialNumber": "3466",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/draftTeam\u003e \u003chttp://dbpedia.org/resource/Detroit_Pistons\u003e . ?x \u003chttp://dbpedia.org/property/placeOfDeath\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Location\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "detroit pistons",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Detroit_Pistons",
        "seq": "51,66"
      }
    ],
    "id": "4efbed07c60a47e3a9ef884a3f08f25c",
    "predicate mapping": [
      {
        "label": "drafted",
        "uri": "http://dbpedia.org/ontology/draftTeam",
        "seq": "36,43",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "places",
        "uri": "http://dbpedia.org/property/placeOfDeath",
        "seq": "16,22",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "",
        "uri": "http://dbpedia.org/ontology/Location",
        "seq": "0,0",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Where did Paul Jones do his highschool?",
    "SerialNumber": "3467",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Paul_Jones_(American_football)\u003e \u003chttp://dbpedia.org/property/highschool\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Paul Jones",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Paul_Jones_(American_football)",
        "seq": "10,20"
      }
    ],
    "id": "2704d889b6c741ef8e45357f8e71bbdb",
    "predicate mapping": [
      {
        "label": "highschool",
        "uri": "http://dbpedia.org/property/highschool",
        "seq": "28,38",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Which state is the birth location of Ann Monroe Gilchrist Strong? ",
    "SerialNumber": "3468",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Ann_Monroe_Gilchrist_Strong\u003e \u003chttp://dbpedia.org/ontology/birthPlace\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/country\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ann Monroe Gilchrist Strong",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ann_Monroe_Gilchrist_Strong",
        "seq": "37,64"
      }
    ],
    "id": "02704dedd802497dbd1e9e9abcd3e0da",
    "predicate mapping": [
      {
        "label": "birth location",
        "uri": "http://dbpedia.org/ontology/birthPlace",
        "seq": "19,33",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "state",
        "uri": "http://dbpedia.org/ontology/country",
        "seq": "6,11",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Bud Adams owns which american football team?",
    "SerialNumber": "3469",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/owner\u003e \u003chttp://dbpedia.org/resource/Bud_Adams\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/AmericanFootballTeam\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Bud Adams",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Bud_Adams",
        "seq": "0,9"
      }
    ],
    "id": "a1e40cc27cbe4b48b7f3d40e75c71479",
    "predicate mapping": [
      {
        "label": "owns",
        "uri": "http://dbpedia.org/ontology/owner",
        "seq": "10,14",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "american football team",
        "uri": "http://dbpedia.org/ontology/AmericanFootballTeam",
        "seq": "21,43",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Which licensee of EXXV-TV is also the licensee of WXXV-DT2 ?",
    "SerialNumber": "3470",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/EXXV-TV\u003e \u003chttp://dbpedia.org/property/licensee\u003e ?uri. \u003chttp://dbpedia.org/resource/WXXV-DT2\u003e \u003chttp://dbpedia.org/property/licensee\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "EXXV-TV",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/EXXV-TV",
        "seq": "18,25"
      },
      {
        "label": "WXXV-DT2",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/WXXV-DT2",
        "seq": "50,58"
      }
    ],
    "id": "f2e2230636684b6ab20dbd0f1c6e1a03",
    "predicate mapping": [
      {
        "label": "licensee",
        "uri": "http://dbpedia.org/property/licensee",
        "seq": "6,14",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "licensee",
        "uri": "http://dbpedia.org/property/licensee",
        "seq": "6,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Give me all martial artists trained by Joe Schilling.",
    "SerialNumber": "3471",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/trainer\u003e \u003chttp://dbpedia.org/resource/Joe_Schilling\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MartialArtist\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Joe Schilling",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Joe_Schilling",
        "seq": "39,52"
      }
    ],
    "id": "2581702c56f24e0498481ea703252cc9",
    "predicate mapping": [
      {
        "label": "trained",
        "uri": "http://dbpedia.org/ontology/trainer",
        "seq": "28,35",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "martial artist",
        "uri": "http://dbpedia.org/ontology/MartialArtist",
        "seq": "12,26",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What magazine published Allal and is the employer of Peter Bergman?",
    "SerialNumber": "3472",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Allal\u003e \u003chttp://dbpedia.org/ontology/publisher\u003e ?uri. \u003chttp://dbpedia.org/resource/Peter_Bergman_(comedian)\u003e \u003chttp://dbpedia.org/ontology/employer\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Allal",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Allal",
        "seq": "24,29"
      },
      {
        "label": "Peter Bergman",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Peter_Bergman_(comedian)",
        "seq": "53,66"
      }
    ],
    "id": "713d533b1d2a4dc08c7ccfe24d7dd58b",
    "predicate mapping": [
      {
        "label": "published",
        "uri": "http://dbpedia.org/ontology/publisher",
        "seq": "14,23",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "employer",
        "uri": "http://dbpedia.org/ontology/employer",
        "seq": "41,49",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "List few musical artist whose notable instruments are Ludwig Drums and  Remo?",
    "SerialNumber": "3473",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/notableInstruments\u003e \u003chttp://dbpedia.org/resource/Ludwig_Drums\u003e . ?uri \u003chttp://dbpedia.org/ontology/instrument\u003e \u003chttp://dbpedia.org/resource/Remo\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MusicalArtist\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ludwig Drums",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ludwig_Drums",
        "seq": "54,66"
      },
      {
        "label": "Remo",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Remo",
        "seq": "72,76"
      }
    ],
    "id": "bf11268a275f4ca090b23db4888f1ec3",
    "predicate mapping": [
      {
        "label": "notable instruments",
        "uri": "http://dbpedia.org/property/notableInstruments",
        "seq": "30,49",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "instrument",
        "uri": "http://dbpedia.org/ontology/instrument",
        "seq": "38,48",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "musical artist",
        "uri": "http://dbpedia.org/ontology/MusicalArtist",
        "seq": "9,23",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Name the common institution of the Erica Frank and Douglass North?",
    "SerialNumber": "3474",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Erica_Frank\u003e \u003chttp://dbpedia.org/ontology/institution\u003e ?uri. \u003chttp://dbpedia.org/resource/Douglass_North\u003e \u003chttp://dbpedia.org/ontology/institution\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Erica Frank",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Erica_Frank",
        "seq": "35,46"
      },
      {
        "label": "Douglass North",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Douglass_North",
        "seq": "51,65"
      }
    ],
    "id": "c1cdd10d876d429ba602f0b60fc91f53",
    "predicate mapping": [
      {
        "label": "institution",
        "uri": "http://dbpedia.org/ontology/institution",
        "seq": "16,27",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "institution",
        "uri": "http://dbpedia.org/ontology/institution",
        "seq": "16,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the county seat of Moscow Governorate ?",
    "SerialNumber": "3480",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Moscow_Governorate\u003e \u003chttp://dbpedia.org/ontology/capital\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Moscow Governorate",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Moscow_Governorate",
        "seq": "27,45"
      }
    ],
    "id": "5cbf98e72bf24912a1efb6418b082b96",
    "predicate mapping": [
      {
        "label": "county seat",
        "uri": "http://dbpedia.org/ontology/capital",
        "seq": "12,23",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "101",
    "question": "ARM Architecture acts as a game platform for how many things?",
    "SerialNumber": "3481",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/ontology/computingPlatform\u003e \u003chttp://dbpedia.org/resource/ARM_architecture\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "ARM Architecture",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/ARM_architecture",
        "seq": "0,16"
      }
    ],
    "id": "6e9fc24127eb42e2b5580784c12b6587",
    "predicate mapping": [
      {
        "label": "game platform",
        "uri": "http://dbpedia.org/ontology/computingPlatform",
        "seq": "27,40",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "What all has been created by Jerry Siegel?",
    "SerialNumber": "3482",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/creators\u003e \u003chttp://dbpedia.org/resource/Jerry_Siegel\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jerry Siegel",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Jerry_Siegel",
        "seq": "29,41"
      }
    ],
    "id": "11efb4f1e7bb4a4991a7d52f98ce78ac",
    "predicate mapping": [
      {
        "label": "created by",
        "uri": "http://dbpedia.org/property/creators",
        "seq": "18,28",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Is David Cameron the prime minister of Nick Clegg?",
    "SerialNumber": "3483",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Nick_Clegg\u003e \u003chttp://dbpedia.org/ontology/primeMinister\u003e \u003chttp://dbpedia.org/resource/David_Cameron\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Nick Clegg",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Nick_Clegg",
        "seq": "39,49"
      },
      {
        "label": "David Cameron",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/David_Cameron",
        "seq": "3,16"
      }
    ],
    "id": "a33859aa5439488798b80ada5172ff2b",
    "predicate mapping": [
      {
        "label": "prime minister",
        "uri": "http://dbpedia.org/ontology/primeMinister",
        "seq": "21,35",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "7",
    "question": "What things have founded place as United States and New Mexico?",
    "SerialNumber": "3485",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/property/foundation\u003e \u003chttp://dbpedia.org/resource/United_States\u003e . ?uri \u003chttp://dbpedia.org/property/foundation\u003e \u003chttp://dbpedia.org/resource/New_Mexico\u003e . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "United States",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/United_States",
        "seq": "34,47"
      },
      {
        "label": "New Mexico",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/New_Mexico",
        "seq": "52,62"
      }
    ],
    "id": "24be016341344144a6a482ef013bd669",
    "predicate mapping": [
      {
        "label": "founded",
        "uri": "http://dbpedia.org/property/foundation",
        "seq": "17,24",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "founded",
        "uri": "http://dbpedia.org/property/foundation",
        "seq": "17,24",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Does Saneh Lungkeaw play for the Thailand\u0027s national team?",
    "SerialNumber": "3486",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Saneh_Lungkeaw\u003e \u003chttp://dbpedia.org/property/nationalteam\u003e \u003chttp://dbpedia.org/resource/Thailand\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Saneh Lungkeaw",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Saneh_Lungkeaw",
        "seq": "5,19"
      },
      {
        "label": "Thailand",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Thailand",
        "seq": "33,41"
      }
    ],
    "id": "5a87e57658014b01807840c74c342a12",
    "predicate mapping": [
      {
        "label": "national team",
        "uri": "http://dbpedia.org/property/nationalteam",
        "seq": "44,57",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "What are the central characters in spy kids series?",
    "SerialNumber": "3491",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/series\u003e \u003chttp://dbpedia.org/resource/Spy_Kids_(franchise)\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "spy kids series",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Spy_Kids_(franchise)",
        "seq": "35,50"
      }
    ],
    "id": "94e0f81983644e299c03baa26e68409f",
    "predicate mapping": [
      {
        "label": "series",
        "uri": "http://dbpedia.org/ontology/series",
        "seq": "44,50",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Name the common former team of Marv mcFadden and Carlos Emmons ?",
    "SerialNumber": "3492",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Marv_McFadden\u003e \u003chttp://dbpedia.org/property/pastteams\u003e ?uri. \u003chttp://dbpedia.org/resource/Carlos_Emmons_(American_football)\u003e \u003chttp://dbpedia.org/ontology/formerTeam\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Marv mcFadden",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Marv_McFadden",
        "seq": "31,44"
      },
      {
        "label": "Carlos Emmons",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Carlos_Emmons_(American_football)",
        "seq": "49,62"
      }
    ],
    "id": "137b3f2da4c048b282d2f6b03106d881",
    "predicate mapping": [
      {
        "label": "team",
        "uri": "http://dbpedia.org/property/pastteams",
        "seq": "23,27",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "former team",
        "uri": "http://dbpedia.org/ontology/formerTeam",
        "seq": "16,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name a company with key person as Dennis Muilenburg and Raymond Conner ?",
    "SerialNumber": "3497",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/keyPeople\u003e \u003chttp://dbpedia.org/resource/Dennis_Muilenburg\u003e . ?uri \u003chttp://dbpedia.org/ontology/keyPerson\u003e \u003chttp://dbpedia.org/resource/Raymond_Conner\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Company\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Dennis Muilenburg",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Dennis_Muilenburg",
        "seq": "34,51"
      },
      {
        "label": "Raymond Conner",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Raymond_Conner",
        "seq": "56,70"
      }
    ],
    "id": "3a5a1af6d3f14416be651b162e0f62a4",
    "predicate mapping": [
      {
        "label": "key",
        "uri": "http://dbpedia.org/property/keyPeople",
        "seq": "20,23",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "key person",
        "uri": "http://dbpedia.org/ontology/keyPerson",
        "seq": "20,30",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company",
        "seq": "7,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "List the ideologies of the party of Boonchu Rojanastien?",
    "SerialNumber": "3501",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Boonchu_Rojanastien\u003e \u003chttp://dbpedia.org/property/party\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/ideology\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Boonchu Rojanastien",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Boonchu_Rojanastien",
        "seq": "36,55"
      }
    ],
    "id": "d9b4914b46a14c7392226eb411c3c6da",
    "predicate mapping": [
      {
        "label": "party",
        "uri": "http://dbpedia.org/property/party",
        "seq": "27,32",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "ideologies",
        "uri": "http://dbpedia.org/ontology/ideology",
        "seq": "9,19",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "How many other important work has been done by the writers of Sarah Jane Adventures?",
    "SerialNumber": "3502",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/notableworks\u003e \u003chttp://dbpedia.org/resource/The_Sarah_Jane_Adventures\u003e . ?x \u003chttp://dbpedia.org/ontology/notableWork\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Sarah Jane Adventures",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/The_Sarah_Jane_Adventures",
        "seq": "62,83"
      }
    ],
    "id": "c527bb01402d4d4db53562c4b0cc5862",
    "predicate mapping": [
      {
        "label": "work",
        "uri": "http://dbpedia.org/property/notableworks",
        "seq": "25,29",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "work",
        "uri": "http://dbpedia.org/ontology/notableWork",
        "seq": "25,29",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What are the hubs of PLUS Helicopter Services, a highway helicopter unit of PLUS Expressways?",
    "SerialNumber": "3503",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/PLUS_Expressways\u003e \u003chttp://dbpedia.org/property/hubs\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "PLUS Expressways",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/PLUS_Expressways",
        "seq": "76,92"
      }
    ],
    "id": "d5068e915d334851ae6309f58ccc82cf",
    "predicate mapping": [
      {
        "label": "hubs",
        "uri": "http://dbpedia.org/property/hubs",
        "seq": "13,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the common place where USS Camp DE-251 was built, and is one of the destinations of Emerald Air?",
    "SerialNumber": "3505",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/USS_Camp_(DE-251)\u003e \u003chttp://dbpedia.org/property/shipBuilder\u003e ?uri. \u003chttp://dbpedia.org/resource/Emerald_Air_(United_States)\u003e \u003chttp://dbpedia.org/ontology/destination\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "USS Camp",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/USS_Camp_(DE-251)",
        "seq": "31,39"
      },
      {
        "label": "Emerald Air",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Emerald_Air_(United_States)",
        "seq": "92,103"
      }
    ],
    "id": "085348492566421ba7cade102bb4e127",
    "predicate mapping": [
      {
        "label": "built,",
        "uri": "http://dbpedia.org/property/shipBuilder",
        "seq": "51,57",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "destination",
        "uri": "http://dbpedia.org/ontology/destination",
        "seq": "76,87",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "7",
    "question": "Whose families are Buccinoidea and Buccinidae?",
    "SerialNumber": "3506",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/ontology/family\u003e \u003chttp://dbpedia.org/resource/Buccinoidea\u003e . ?uri \u003chttp://dbpedia.org/ontology/family\u003e \u003chttp://dbpedia.org/resource/Buccinidae\u003e . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Buccinoidea",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Buccinoidea",
        "seq": "19,30"
      },
      {
        "label": "Buccinidae",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Buccinidae",
        "seq": "35,45"
      }
    ],
    "id": "e43ae08acd6c4d84a6f9e6c5bcb3cae6",
    "predicate mapping": [
      {
        "label": "families",
        "uri": "http://dbpedia.org/ontology/family",
        "seq": "6,14",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "families",
        "uri": "http://dbpedia.org/ontology/family",
        "seq": "6,14",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "405",
    "question": "In how many places are the tombs of people who died in Connecticut Colony?",
    "SerialNumber": "3507",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/placeOfDeath\u003e \u003chttp://dbpedia.org/resource/Connecticut_Colony\u003e . ?x \u003chttp://dbpedia.org/ontology/restingPlace\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Place\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Connecticut Colony",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Connecticut_Colony",
        "seq": "55,73"
      }
    ],
    "id": "29e146d8bbb745018652a1a3c634a737",
    "predicate mapping": [
      {
        "label": "places",
        "uri": "http://dbpedia.org/property/placeOfDeath",
        "seq": "12,18",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "tomb",
        "uri": "http://dbpedia.org/ontology/restingPlace",
        "seq": "27,31",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "place",
        "uri": "http://dbpedia.org/ontology/Place",
        "seq": "12,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Who are the shareholder of the soccer club for whom Steve Holland plays?",
    "SerialNumber": "3508",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Steve_Holland_(footballer)\u003e \u003chttp://dbpedia.org/property/currentclub\u003e ?x . ?x \u003chttp://dbpedia.org/property/owner\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Steve Holland",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Steve_Holland_(footballer)",
        "seq": "52,65"
      }
    ],
    "id": "02dde80bffd545f687faafd47c7e5afd",
    "predicate mapping": [
      {
        "label": "club",
        "uri": "http://dbpedia.org/property/currentclub",
        "seq": "38,42",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "shareholder",
        "uri": "http://dbpedia.org/property/owner",
        "seq": "12,23",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "Whose theme music is composed by the band one of whose member is Les Claypool?",
    "SerialNumber": "3510",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/bandMember\u003e \u003chttp://dbpedia.org/resource/Les_Claypool\u003e . ?uri \u003chttp://dbpedia.org/property/themeMusicComposer\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Les Claypool",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Les_Claypool",
        "seq": "65,77"
      }
    ],
    "id": "6434d90c34d141a38701354bbfbcb9ce",
    "predicate mapping": [
      {
        "label": "member band",
        "uri": "http://dbpedia.org/ontology/bandMember",
        "seq": "-1,10",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "composed",
        "uri": "http://dbpedia.org/property/themeMusicComposer",
        "seq": "21,29",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the colour of Xocolatlite ?",
    "SerialNumber": "3513",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Xocolatlite\u003e \u003chttp://dbpedia.org/ontology/colour\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Xocolatlite",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Xocolatlite",
        "seq": "22,33"
      }
    ],
    "id": "4a602d8ca5624552a796ccfefbaf8a1d",
    "predicate mapping": [
      {
        "label": "colour",
        "uri": "http://dbpedia.org/ontology/colour",
        "seq": "12,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "406",
    "question": "How many movies are directed by the spouse of Dolores del Ro?",
    "SerialNumber": "3514",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/partner\u003e \u003chttp://dbpedia.org/resource/Dolores_del_Río\u003e . ?uri \u003chttp://dbpedia.org/property/director\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Dolores del Ro",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Dolores_del_Río",
        "seq": "46,60"
      }
    ],
    "id": "a43a3581442948429aaefa12283d9aa5",
    "predicate mapping": [
      {
        "label": "spouse",
        "uri": "http://dbpedia.org/property/partner",
        "seq": "36,42",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "directed",
        "uri": "http://dbpedia.org/property/director",
        "seq": "20,28",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Which planet was first discovered by Johann Gottfried Galle?",
    "SerialNumber": "3516",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/discoverer\u003e \u003chttp://dbpedia.org/resource/Johann_Gottfried_Galle\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Planet\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Johann Gottfried Galle",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Johann_Gottfried_Galle",
        "seq": "37,59"
      }
    ],
    "id": "e84421422b534cdb8726c1863cb03f18",
    "predicate mapping": [
      {
        "label": "discovered by",
        "uri": "http://dbpedia.org/property/discoverer",
        "seq": "23,36",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "planet",
        "uri": "http://dbpedia.org/ontology/Planet",
        "seq": "6,12",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "what mountains are in sierra nevada?",
    "SerialNumber": "3517",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/mountainRange\u003e \u003chttp://dbpedia.org/resource/Sierra_Nevada_(U.S.)\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "sierra nevada",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Sierra_Nevada_(U.S.)",
        "seq": "22,35"
      }
    ],
    "id": "32aa2b3044e940e094b154d53dedd106",
    "predicate mapping": [
      {
        "label": "mountains",
        "uri": "http://dbpedia.org/ontology/mountainRange",
        "seq": "5,14",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Was True Grit a novel of the western genre?",
    "SerialNumber": "3518",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/True_Grit_(novel)\u003e \u003chttp://dbpedia.org/ontology/literaryGenre\u003e \u003chttp://dbpedia.org/resource/Western_(genre)\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "True Grit",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/True_Grit_(novel)",
        "seq": "4,13"
      },
      {
        "label": "western",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Western_(genre)",
        "seq": "29,36"
      }
    ],
    "id": "da9c3c6ffbf24f4e9335cf131e3f0907",
    "predicate mapping": [
      {
        "label": "genre",
        "uri": "http://dbpedia.org/ontology/literaryGenre",
        "seq": "37,42",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who is the nominee of Jack Ryan ?",
    "SerialNumber": "3519",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Jack_Ryan_(politician)\u003e \u003chttp://dbpedia.org/ontology/nominee\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jack Ryan",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Jack_Ryan_(politician)",
        "seq": "22,31"
      }
    ],
    "id": "f3713cd348ac4ddf884634f3a7672b0a",
    "predicate mapping": [
      {
        "label": "nominee",
        "uri": "http://dbpedia.org/ontology/nominee",
        "seq": "11,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the wine regions of Baco noir?",
    "SerialNumber": "3520",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Baco_noir\u003e \u003chttp://dbpedia.org/ontology/wineRegion\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Baco noir",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Baco_noir",
        "seq": "25,34"
      }
    ],
    "id": "a0ea55269f83451faef0afb3122b0bf3",
    "predicate mapping": [
      {
        "label": "wine region",
        "uri": "http://dbpedia.org/ontology/wineRegion",
        "seq": "9,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "What are the television shows of a company headquartered in Geneva?",
    "SerialNumber": "3522",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/headquarters\u003e \u003chttp://dbpedia.org/resource/Geneva\u003e . ?uri \u003chttp://dbpedia.org/property/company\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Geneva",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Geneva",
        "seq": "60,66"
      }
    ],
    "id": "a8ff069915554ce8b52b95787f1e84ce",
    "predicate mapping": [
      {
        "label": "headquarter",
        "uri": "http://dbpedia.org/property/headquarters",
        "seq": "43,54",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/property/company",
        "seq": "35,42",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "13,28",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the president of Wyche Fowler ?",
    "SerialNumber": "3523",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Wyche_Fowler\u003e \u003chttp://dbpedia.org/ontology/president\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Wyche Fowler",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Wyche_Fowler",
        "seq": "22,34"
      }
    ],
    "id": "9bea6db7df12415083f728032f9327a1",
    "predicate mapping": [
      {
        "label": "president",
        "uri": "http://dbpedia.org/ontology/president",
        "seq": "9,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "111",
    "question": "How many party are there of the office holders whose one of the party is Janata Dal ?",
    "SerialNumber": "3525",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/otherParty\u003e \u003chttp://dbpedia.org/resource/Janata_Dal\u003e . ?x \u003chttp://dbpedia.org/ontology/otherParty\u003e ?uri }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Janata Dal",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Janata_Dal",
        "seq": "73,83"
      }
    ],
    "id": "6d9643fb5f044ea2b9b9c29f1cc443c2",
    "predicate mapping": [
      {
        "label": "party",
        "uri": "http://dbpedia.org/ontology/otherParty",
        "seq": "9,14",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "party",
        "uri": "http://dbpedia.org/ontology/otherParty",
        "seq": "9,14",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "How many causes of death have been associated with American citizens?",
    "SerialNumber": "3528",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/citizenship\u003e \u003chttp://dbpedia.org/resource/United_States\u003e . ?x \u003chttp://dbpedia.org/ontology/deathCause\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "American",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/United_States",
        "seq": "51,59"
      }
    ],
    "id": "d4e20aa278bc4c0daee027c3c77b2377",
    "predicate mapping": [
      {
        "label": "citizens",
        "uri": "http://dbpedia.org/property/citizenship",
        "seq": "60,68",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "death",
        "uri": "http://dbpedia.org/ontology/deathCause",
        "seq": "19,24",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Is Bluebird the grandsire of Miss Potential?",
    "SerialNumber": "3530",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Miss_Potential\u003e \u003chttp://dbpedia.org/ontology/grandsire\u003e \u003chttp://dbpedia.org/resource/Bluebird\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Miss Potential",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Miss_Potential",
        "seq": "29,43"
      },
      {
        "label": "Bluebird",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Bluebird",
        "seq": "3,11"
      }
    ],
    "id": "93986b8aaf5c4a2c9d3b656860306d2a",
    "predicate mapping": [
      {
        "label": "grandsire",
        "uri": "http://dbpedia.org/ontology/grandsire",
        "seq": "16,25",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Is semnani one of the languages spoken in Iran?",
    "SerialNumber": "3532",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Iran\u003e \u003chttp://dbpedia.org/property/languages\u003e \u003chttp://dbpedia.org/resource/Semnani_languages\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Iran",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Iran",
        "seq": "42,46"
      },
      {
        "label": "semnani",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Semnani_languages",
        "seq": "3,10"
      }
    ],
    "id": "9360bc93c0e246c4a7bc4ac32f5f86c9",
    "predicate mapping": [
      {
        "label": "languages",
        "uri": "http://dbpedia.org/property/languages",
        "seq": "22,31",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "List everyone who got their training in the city of California?",
    "SerialNumber": "3533",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/city\u003e \u003chttp://dbpedia.org/resource/California\u003e . ?uri \u003chttp://dbpedia.org/property/training\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "California",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/California",
        "seq": "52,62"
      }
    ],
    "id": "2f0f958ee8884f229d32a6f90c3cb34f",
    "predicate mapping": [
      {
        "label": "city",
        "uri": "http://dbpedia.org/property/city",
        "seq": "44,48",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "training",
        "uri": "http://dbpedia.org/property/training",
        "seq": "28,36",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Which movies\u0027s screenplay is written by Akiva Goldsman",
    "SerialNumber": "3534",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/screenplay\u003e \u003chttp://dbpedia.org/resource/Akiva_Goldsman\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Akiva Goldsman",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Akiva_Goldsman",
        "seq": "40,54"
      }
    ],
    "id": "899f6fb23f3148599baf961c74ad532d",
    "predicate mapping": [
      {
        "label": "screenplay",
        "uri": "http://dbpedia.org/property/screenplay",
        "seq": "15,25",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "6,11",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who is the associate of Thomas Bryan Martin ?",
    "SerialNumber": "3536",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Thomas_Bryan_Martin\u003e \u003chttp://dbpedia.org/ontology/associate\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Thomas Bryan Martin",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Thomas_Bryan_Martin",
        "seq": "24,43"
      }
    ],
    "id": "8a3172ebec544494a91ab3f49a5376e6",
    "predicate mapping": [
      {
        "label": "associate",
        "uri": "http://dbpedia.org/ontology/associate",
        "seq": "11,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "311",
    "question": "List the academic discipline of the journals whose one of the discipline is neuro imaging ?",
    "SerialNumber": "3539",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/academicDiscipline\u003e \u003chttp://dbpedia.org/resource/Neuroimaging\u003e . ?x \u003chttp://dbpedia.org/ontology/academicDiscipline\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/AcademicJournal\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "neuro imaging",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Neuroimaging",
        "seq": "51,54"
      }
    ],
    "id": "0de77adbc13b469fb9d23dec23d37f13",
    "predicate mapping": [
      {
        "label": "academic discipline",
        "uri": "http://dbpedia.org/ontology/academicDiscipline",
        "seq": "9,28",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "academic discipline",
        "uri": "http://dbpedia.org/ontology/academicDiscipline",
        "seq": "9,28",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "academic",
        "uri": "http://dbpedia.org/ontology/AcademicJournal",
        "seq": "9,17",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Which countries were led by Pietro Parolin?",
    "SerialNumber": "3540",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/leader\u003e \u003chttp://dbpedia.org/resource/Pietro_Parolin\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Country\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Pietro Parolin",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Pietro_Parolin",
        "seq": "28,42"
      }
    ],
    "id": "70ff4d76a1bd447eb931dd8fdcdb1fc2",
    "predicate mapping": [
      {
        "label": "led",
        "uri": "http://dbpedia.org/ontology/leader",
        "seq": "21,24",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "countries",
        "uri": "http://dbpedia.org/ontology/Country",
        "seq": "6,15",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "was the first national bank and trust building architectured by Chicago?",
    "SerialNumber": "3541",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/First_National_Bank_and_Trust_Building_(Lima,_Ohio)\u003e \u003chttp://dbpedia.org/ontology/architecturalStyle\u003e \u003chttp://dbpedia.org/resource/Chicago\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "first national bank and trust building",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/First_National_Bank_and_Trust_Building_(Lima,_Ohio)",
        "seq": "8,46"
      },
      {
        "label": "Chicago",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Chicago",
        "seq": "64,71"
      }
    ],
    "id": "db1ffdbdbf064f84a06c61655ccb183a",
    "predicate mapping": [
      {
        "label": "architecture",
        "uri": "http://dbpedia.org/ontology/architecturalStyle",
        "seq": "47,59",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Where does the road starting from Madison, Wisconsin end?",
    "SerialNumber": "3542",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/routeEnd\u003e \u003chttp://dbpedia.org/resource/Madison,_Wisconsin\u003e . ?x \u003chttp://dbpedia.org/ontology/routeStart\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Road\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Madison, Wisconsin",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Madison,_Wisconsin",
        "seq": "34,52"
      }
    ],
    "id": "bce5c81618704a358d4db3d4d5497dc3",
    "predicate mapping": [
      {
        "label": "end",
        "uri": "http://dbpedia.org/ontology/routeEnd",
        "seq": "53,56",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "starting",
        "uri": "http://dbpedia.org/ontology/routeStart",
        "seq": "20,28",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "road",
        "uri": "http://dbpedia.org/ontology/Road",
        "seq": "15,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What sports are played in schools in the capital region?",
    "SerialNumber": "3544",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/region\u003e \u003chttp://dbpedia.org/resource/Capital_region\u003e . ?x \u003chttp://dbpedia.org/ontology/sport\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/School\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "capital region",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Capital_region",
        "seq": "41,55"
      }
    ],
    "id": "7847a3288f5a482388944047d3b9e4ce",
    "predicate mapping": [
      {
        "label": "region",
        "uri": "http://dbpedia.org/property/region",
        "seq": "49,55",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "sport",
        "uri": "http://dbpedia.org/ontology/sport",
        "seq": "5,10",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "school",
        "uri": "http://dbpedia.org/ontology/School",
        "seq": "26,32",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What are the movies written by Nick Castle?",
    "SerialNumber": "3547",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/writer\u003e \u003chttp://dbpedia.org/resource/Nick_Castle\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Nick Castle",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Nick_Castle",
        "seq": "31,42"
      }
    ],
    "id": "b313e3a99d844bfca33d9b8c30f75a34",
    "predicate mapping": [
      {
        "label": "written by",
        "uri": "http://dbpedia.org/ontology/writer",
        "seq": "20,30",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "13,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "401",
    "question": "How many bands began in Birmingham?",
    "SerialNumber": "3549",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/property/origin\u003e \u003chttp://dbpedia.org/resource/Birmingham\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Band\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Birmingham",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Birmingham",
        "seq": "24,34"
      }
    ],
    "id": "5e85a463cae048ce8b509e5c2d31f902",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/property/origin",
        "seq": "21,23",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "band",
        "uri": "http://dbpedia.org/ontology/Band",
        "seq": "9,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which licensee of the WRVU is also the alma mater of the Todd J. Campbell ?",
    "SerialNumber": "3551",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/WRVU\u003e \u003chttp://dbpedia.org/property/licensee\u003e ?uri. \u003chttp://dbpedia.org/resource/Todd_J._Campbell\u003e \u003chttp://dbpedia.org/ontology/almaMater\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "WRVU",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/WRVU",
        "seq": "22,26"
      },
      {
        "label": "Todd J. Campbell",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Todd_J._Campbell",
        "seq": "57,73"
      }
    ],
    "id": "0cf8b22d4530493c952e2a62d734586c",
    "predicate mapping": [
      {
        "label": "licensee",
        "uri": "http://dbpedia.org/property/licensee",
        "seq": "6,14",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/ontology/almaMater",
        "seq": "39,49",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which currency of Republic of Montenegro is also the currency of the French Southern and Antarctic Lands ?",
    "SerialNumber": "3552",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/French_Southern_and_Antarctic_Lands\u003e \u003chttp://dbpedia.org/ontology/currency\u003e ?uri. \u003chttp://dbpedia.org/resource/Republic_of_Montenegro_(1992–2006)\u003e \u003chttp://dbpedia.org/property/currency\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "French Southern and Antarctic Lands",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/French_Southern_and_Antarctic_Lands",
        "seq": "69,104"
      },
      {
        "label": "Republic of Montenegro",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Republic_of_Montenegro_(1992–2006)",
        "seq": "18,40"
      }
    ],
    "id": "4ad9c07443804ff09a9ee80a5d61dcac",
    "predicate mapping": [
      {
        "label": "currency",
        "uri": "http://dbpedia.org/ontology/currency",
        "seq": "6,14",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "currency",
        "uri": "http://dbpedia.org/property/currency",
        "seq": "6,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the Chris Marve\u0027s school ?",
    "SerialNumber": "3553",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Chris_Marve\u003e \u003chttp://dbpedia.org/ontology/school\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Chris Marve",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Chris_Marve",
        "seq": "9,20"
      }
    ],
    "id": "7acd068884a6483199c2fd7bdd37c988",
    "predicate mapping": [
      {
        "label": "school",
        "uri": "http://dbpedia.org/ontology/school",
        "seq": "23,29",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "101",
    "question": "Give me a count of movies distributed by Warner Bros?",
    "SerialNumber": "3561",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/property/distributor\u003e \u003chttp://dbpedia.org/resource/Warner_Bros.\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Warner Bros?",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Warner_Bros.",
        "seq": "41,53"
      }
    ],
    "id": "7467291024494dcd878d0a375b75d0a8",
    "predicate mapping": [
      {
        "label": "distributed by",
        "uri": "http://dbpedia.org/property/distributor",
        "seq": "26,40",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who owns the broadcast network founded by CNN?",
    "SerialNumber": "3563",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/foundedBy\u003e \u003chttp://dbpedia.org/resource/CNN\u003e . ?x \u003chttp://dbpedia.org/property/owner\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/BroadcastNetwork\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "CNN",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/CNN",
        "seq": "42,45"
      }
    ],
    "id": "1466144570d843389c2cc9e911698213",
    "predicate mapping": [
      {
        "label": "founded by",
        "uri": "http://dbpedia.org/ontology/foundedBy",
        "seq": "31,41",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "owns",
        "uri": "http://dbpedia.org/property/owner",
        "seq": "4,8",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "broadcast network",
        "uri": "http://dbpedia.org/ontology/BroadcastNetwork",
        "seq": "13,30",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the television show with opening theme as Te Deum and is composed by Marc-Antoine Charpentier?",
    "SerialNumber": "3565",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/openingTheme\u003e \u003chttp://dbpedia.org/resource/Te_Deum_(Charpentier)\u003e . ?uri \u003chttp://dbpedia.org/property/themeMusicComposer\u003e \u003chttp://dbpedia.org/resource/Marc-Antoine_Charpentier\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Te Deum",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Te_Deum_(Charpentier)",
        "seq": "47,54"
      },
      {
        "label": "Marc-Antoine Charpentier",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Marc-Antoine_Charpentier",
        "seq": "74,98"
      }
    ],
    "id": "d17b83f85f7c433e9f2c91eab0577727",
    "predicate mapping": [
      {
        "label": "opening theme",
        "uri": "http://dbpedia.org/ontology/openingTheme",
        "seq": "30,43",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "composed",
        "uri": "http://dbpedia.org/property/themeMusicComposer",
        "seq": "62,70",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "9,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "What is the name of the river whose mouth country is Mozambique and source region is North-Western Province, Zambia?",
    "SerialNumber": "3566",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/mouthCountry\u003e \u003chttp://dbpedia.org/resource/Mozambique\u003e . ?uri \u003chttp://dbpedia.org/ontology/sourceRegion\u003e \u003chttp://dbpedia.org/resource/North-Western_Province,_Zambia\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/River\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Mozambique",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Mozambique",
        "seq": "53,63"
      },
      {
        "label": "North-Western Province, Zambia",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/North-Western_Province,_Zambia",
        "seq": "85,115"
      }
    ],
    "id": "ab1dd6e665cc4025b061eb4a3e83e59f",
    "predicate mapping": [
      {
        "label": "mouth country",
        "uri": "http://dbpedia.org/property/mouthCountry",
        "seq": "36,49",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "source region",
        "uri": "http://dbpedia.org/ontology/sourceRegion",
        "seq": "68,81",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River",
        "seq": "24,29",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Did nokia 215 has the series 30+ OS?",
    "SerialNumber": "3567",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Nokia_215\u003e \u003chttp://dbpedia.org/property/os\u003e \u003chttp://dbpedia.org/resource/Series_30+\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "nokia 215",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Nokia_215",
        "seq": "4,13"
      },
      {
        "label": "series 30+",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Series_30+",
        "seq": "22,32"
      }
    ],
    "id": "d809177595bc45df9d37b6e201e2516a",
    "predicate mapping": [
      {
        "label": "OS",
        "uri": "http://dbpedia.org/property/os",
        "seq": "33,35",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Sampson Cudjoe plays for the Ghana national team?",
    "SerialNumber": "3568",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Sampson_Cudjoe\u003e \u003chttp://dbpedia.org/property/nationalteam\u003e \u003chttp://dbpedia.org/resource/Ghana\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Sampson Cudjoe",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Sampson_Cudjoe",
        "seq": "0,14"
      },
      {
        "label": "Ghana national team",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Ghana",
        "seq": "29,48"
      }
    ],
    "id": "c1a557197361403b93c245a8252279ca",
    "predicate mapping": [
      {
        "label": "national team",
        "uri": "http://dbpedia.org/property/nationalteam",
        "seq": "35,48",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What is the producer of the television shows whose channel is CBBC?",
    "SerialNumber": "3570",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/channel\u003e \u003chttp://dbpedia.org/resource/CBBC_(TV_channel)\u003e . ?x \u003chttp://dbpedia.org/ontology/producer\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "CBBC",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/CBBC_(TV_channel)",
        "seq": "62,66"
      }
    ],
    "id": "09cdda0da032441592256ac3ea5b7206",
    "predicate mapping": [
      {
        "label": "channel",
        "uri": "http://dbpedia.org/property/channel",
        "seq": "51,58",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "producer",
        "uri": "http://dbpedia.org/ontology/producer",
        "seq": "12,20",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "28,43",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "311",
    "question": "List the interest of the scientists whose one of the field is Chinese poetry ?",
    "SerialNumber": "3571",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/fields\u003e \u003chttp://dbpedia.org/resource/Chinese_poetry\u003e . ?x \u003chttp://dbpedia.org/property/fields\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Scientist\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Chinese poetry",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Chinese_poetry",
        "seq": "62,76"
      }
    ],
    "id": "c9675b3e25a74a45b74ce591e393e65c",
    "predicate mapping": [
      {
        "label": "field",
        "uri": "http://dbpedia.org/property/fields",
        "seq": "53,58",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "field",
        "uri": "http://dbpedia.org/property/fields",
        "seq": "53,58",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "scientist",
        "uri": "http://dbpedia.org/ontology/Scientist",
        "seq": "25,34",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Whihc uni did Joshua A. Siegel attend ?",
    "SerialNumber": "3573",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Joshua_A._Siegel\u003e \u003chttp://dbpedia.org/property/education\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Joshua A. Siegel",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Joshua_A._Siegel",
        "seq": "14,30"
      }
    ],
    "id": "2d2934c87b0e4eefa554db84e9abe251",
    "predicate mapping": [
      {
        "label": "attend",
        "uri": "http://dbpedia.org/property/education",
        "seq": "31,37",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "How many licensee are there, of the radio stations whose area is Nashville, Tennessee ?",
    "SerialNumber": "3574",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/area\u003e \u003chttp://dbpedia.org/resource/Nashville,_Tennessee\u003e . ?x \u003chttp://dbpedia.org/property/licensee\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Nashville, Tennessee",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Nashville,_Tennessee",
        "seq": "65,85"
      }
    ],
    "id": "e6047de588e14bb9881a1af25801803c",
    "predicate mapping": [
      {
        "label": "area",
        "uri": "http://dbpedia.org/property/area",
        "seq": "57,61",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "licensee",
        "uri": "http://dbpedia.org/property/licensee",
        "seq": "9,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "8",
    "question": "Who has a  child named Lori Black and is resting place as Palo Alto, California?",
    "SerialNumber": "3575",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/children\u003e \u003chttp://dbpedia.org/resource/Lori_Black\u003e . ?uri \u003chttp://dbpedia.org/property/restingPlace\u003e \u003chttp://dbpedia.org/resource/Palo_Alto,_California\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Lori Black",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Lori_Black",
        "seq": "23,33"
      },
      {
        "label": "Palo Alto, California",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Palo_Alto,_California",
        "seq": "58,79"
      }
    ],
    "id": "cf382df024a340a4876a4c3651d44937",
    "predicate mapping": [
      {
        "label": "child",
        "uri": "http://dbpedia.org/property/children",
        "seq": "11,16",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "resting place",
        "uri": "http://dbpedia.org/property/restingPlace",
        "seq": "41,54",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Who is the artist of the album which has the song I Can\u0027t Change the World ?",
    "SerialNumber": "3576",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/I_Can\u0027t_Change_the_World\u003e \u003chttp://dbpedia.org/property/album\u003e ?x . ?x \u003chttp://dbpedia.org/property/artist\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "I Can\u0027t Change the World",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/I_Can\u0027t_Change_the_World",
        "seq": "50,74"
      }
    ],
    "id": "62d3a91ca55d4dadbd13109a663caf4b",
    "predicate mapping": [
      {
        "label": "album",
        "uri": "http://dbpedia.org/property/album",
        "seq": "25,30",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "artist",
        "uri": "http://dbpedia.org/property/artist",
        "seq": "11,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "What is the successor of PlayStation 4",
    "SerialNumber": "3578",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/successor\u003e \u003chttp://dbpedia.org/resource/PlayStation_4\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "PlayStation 4",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/PlayStation_4",
        "seq": "25,38"
      }
    ],
    "id": "f71102a3f26440088bc3bb2f7cb2a423",
    "predicate mapping": [
      {
        "label": "successor",
        "uri": "http://dbpedia.org/property/successor",
        "seq": "12,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "In which country is the Duong river?",
    "SerialNumber": "3581",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Đuống_River\u003e \u003chttp://dbpedia.org/ontology/sourceCountry\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Duong river",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Đuống_River",
        "seq": "24,35"
      }
    ],
    "id": "a39215c00d904d629a2ea30d237281e9",
    "predicate mapping": [
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/sourceCountry",
        "seq": "9,16",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "List the awards won by the film director of Chicken Run?",
    "SerialNumber": "3582",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Chicken_Run\u003e \u003chttp://dbpedia.org/property/director\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/award\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Chicken Run",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Chicken_Run",
        "seq": "44,55"
      }
    ],
    "id": "1d5d1578a88e4fbcb0dcac66ec5eaac5",
    "predicate mapping": [
      {
        "label": "director",
        "uri": "http://dbpedia.org/property/director",
        "seq": "32,40",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/award",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "307",
    "question": "Which band\u0027s past member are Joe Jonas and Nick Jonas?",
    "SerialNumber": "3584",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/property/pastMembers\u003e \u003chttp://dbpedia.org/resource/Joe_Jonas\u003e . ?uri \u003chttp://dbpedia.org/property/pastMembers\u003e \u003chttp://dbpedia.org/resource/Nick_Jonas\u003e . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Band\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Joe Jonas",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Joe_Jonas",
        "seq": "29,38"
      },
      {
        "label": "Nick Jonas",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Nick_Jonas",
        "seq": "43,53"
      }
    ],
    "id": "f1a9ded56bf842f4bed9125161a8de0b",
    "predicate mapping": [
      {
        "label": "member past",
        "uri": "http://dbpedia.org/property/pastMembers",
        "seq": "-1,10",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "member past",
        "uri": "http://dbpedia.org/property/pastMembers",
        "seq": "-1,10",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "band",
        "uri": "http://dbpedia.org/ontology/Band",
        "seq": "6,10",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the religious affiliation of Neungin High School?",
    "SerialNumber": "3585",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Neungin_High_School\u003e \u003chttp://dbpedia.org/property/religiousAffiliation\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Neungin High School",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Neungin_High_School",
        "seq": "37,56"
      }
    ],
    "id": "e8726e19e919406eba5bbec57e2e6471",
    "predicate mapping": [
      {
        "label": "religious affiliation",
        "uri": "http://dbpedia.org/property/religiousAffiliation",
        "seq": "12,33",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "List the common official language of the ladonia and Empire of Atlantium ?",
    "SerialNumber": "3586",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Ladonia_(micronation)\u003e \u003chttp://dbpedia.org/ontology/officialLanguage\u003e ?uri. \u003chttp://dbpedia.org/resource/Empire_of_Atlantium\u003e \u003chttp://dbpedia.org/ontology/officialLanguage\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "ladonia",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Ladonia_(micronation)",
        "seq": "41,48"
      },
      {
        "label": "Empire of Atlantium",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Empire_of_Atlantium",
        "seq": "53,72"
      }
    ],
    "id": "66b48fe8be2c4bf3b2ffb8e72ab4b3ce",
    "predicate mapping": [
      {
        "label": "official language",
        "uri": "http://dbpedia.org/ontology/officialLanguage",
        "seq": "16,33",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "official language",
        "uri": "http://dbpedia.org/ontology/officialLanguage",
        "seq": "16,33",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What is the name of the characters created by Frank Miller?",
    "SerialNumber": "3587",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/creators\u003e \u003chttp://dbpedia.org/resource/Frank_Miller_(comics)\u003e . ?x \u003chttp://dbpedia.org/property/characterName\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/FictionalCharacter\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Frank Miller",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Frank_Miller_(comics)",
        "seq": "46,58"
      }
    ],
    "id": "ae769d3fce084866a06c22f70221aaa8",
    "predicate mapping": [
      {
        "label": "created by",
        "uri": "http://dbpedia.org/property/creators",
        "seq": "35,45",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "characters",
        "uri": "http://dbpedia.org/property/characterName",
        "seq": "24,34",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "characters",
        "uri": "http://dbpedia.org/ontology/FictionalCharacter",
        "seq": "24,34",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Does the stylistic origins of Plena lie in the Caribbean?",
    "SerialNumber": "3588",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Plena\u003e \u003chttp://dbpedia.org/property/stylisticOrigins\u003e \u003chttp://dbpedia.org/resource/Caribbean\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Plena",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Plena",
        "seq": "30,35"
      },
      {
        "label": "Caribbean",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Caribbean",
        "seq": "47,56"
      }
    ],
    "id": "574ac42d309a4676893b0f1e4f291a36",
    "predicate mapping": [
      {
        "label": "stylistic origins",
        "uri": "http://dbpedia.org/property/stylisticOrigins",
        "seq": "9,26",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Whci co founder of Sea gayle Music is also the artist of Brad Paisley Discography /",
    "SerialNumber": "3591",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Brad_Paisley_discography\u003e \u003chttp://dbpedia.org/property/artist\u003e ?uri. \u003chttp://dbpedia.org/resource/Sea_Gayle_Music\u003e \u003chttp://dbpedia.org/property/founder\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Brad Paisley Discography",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Brad_Paisley_discography",
        "seq": "57,81"
      },
      {
        "label": "Sea gayle Music",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Sea_Gayle_Music",
        "seq": "19,34"
      }
    ],
    "id": "ea72af60227b4132a3a71b2eefe30314",
    "predicate mapping": [
      {
        "label": "artist",
        "uri": "http://dbpedia.org/property/artist",
        "seq": "47,53",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "founder of",
        "uri": "http://dbpedia.org/property/founder",
        "seq": "8,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Whose album is Haiti, I am sorry?",
    "SerialNumber": "3592",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Haiti_I_Am_Sorry\u003e \u003chttp://dbpedia.org/ontology/album\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Haiti, I am sorry",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Haiti_I_Am_Sorry",
        "seq": "15,20"
      }
    ],
    "id": "34b9dabc67ac415fab309f50d5b45687",
    "predicate mapping": [
      {
        "label": "album",
        "uri": "http://dbpedia.org/ontology/album",
        "seq": "6,11",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "What is the american football league whose champion is from Kansas City, Missouri?",
    "SerialNumber": "3594",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/city\u003e \u003chttp://dbpedia.org/resource/Kansas_City,_Missouri\u003e . ?uri \u003chttp://dbpedia.org/property/champion\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/AmericanFootballLeague\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Kansas City, Missouri",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Kansas_City,_Missouri",
        "seq": "60,81"
      }
    ],
    "id": "b4b796c110644d17980fe538847023e5",
    "predicate mapping": [
      {
        "label": "City",
        "uri": "http://dbpedia.org/property/city",
        "seq": "67,71",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "champion",
        "uri": "http://dbpedia.org/property/champion",
        "seq": "43,51",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "american football league",
        "uri": "http://dbpedia.org/ontology/AmericanFootballLeague",
        "seq": "12,36",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "For which other teams have the past Boston Bruins members played?",
    "SerialNumber": "3596",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/formerTeam\u003e \u003chttp://dbpedia.org/resource/Boston_Bruins\u003e . ?x \u003chttp://dbpedia.org/property/playedFor\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Boston Bruins",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Boston_Bruins",
        "seq": "36,49"
      }
    ],
    "id": "3a91f21a1ee04fa5a47b2f2b97a707ec",
    "predicate mapping": [
      {
        "label": "teams",
        "uri": "http://dbpedia.org/ontology/formerTeam",
        "seq": "16,21",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/property/playedFor",
        "seq": "16,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who directed The Haunted House ?",
    "SerialNumber": "3597",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/The_Haunted_House_(1929_film)\u003e \u003chttp://dbpedia.org/ontology/director\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "The Haunted House",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Haunted_House_(1929_film)",
        "seq": "13,30"
      }
    ],
    "id": "246a4b432f5c4660a33367cb504c70d8",
    "predicate mapping": [
      {
        "label": "directed",
        "uri": "http://dbpedia.org/ontology/director",
        "seq": "4,12",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "406",
    "question": "For how many movies are there whose musicians home town is in Volos ?",
    "SerialNumber": "3598",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/hometown\u003e \u003chttp://dbpedia.org/resource/Volos\u003e . ?uri \u003chttp://dbpedia.org/property/music\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Volos",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Volos",
        "seq": "62,67"
      }
    ],
    "id": "194f4e5619af43f0a4200140d98ede3b",
    "predicate mapping": [
      {
        "label": "home town",
        "uri": "http://dbpedia.org/ontology/hometown",
        "seq": "46,55",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "music",
        "uri": "http://dbpedia.org/property/music",
        "seq": "36,41",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "13,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "what awards have been given to A. Peter Dewey?",
    "SerialNumber": "3601",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/A._Peter_Dewey\u003e \u003chttp://dbpedia.org/ontology/award\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "A. Peter Dewey",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/A._Peter_Dewey",
        "seq": "31,45"
      }
    ],
    "id": "d0da6ce614904c6f90c0c441e04f16b5",
    "predicate mapping": [
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/award",
        "seq": "5,11",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "405",
    "question": "From how many different places did the weapons used in the American Indian wars originate?",
    "SerialNumber": "3604",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/usedInWar\u003e \u003chttp://dbpedia.org/resource/American_Indian_Wars\u003e . ?x \u003chttp://dbpedia.org/property/origin\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Place\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "American Indian wars",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/American_Indian_Wars",
        "seq": "59,79"
      }
    ],
    "id": "37572c57bb164aba982b23993acc3b34",
    "predicate mapping": [
      {
        "label": "used",
        "uri": "http://dbpedia.org/ontology/usedInWar",
        "seq": "47,51",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "origin",
        "uri": "http://dbpedia.org/property/origin",
        "seq": "80,86",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "place",
        "uri": "http://dbpedia.org/ontology/Place",
        "seq": "24,29",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "406",
    "question": "Count all the shows whose music composers are in Oysterhead.",
    "SerialNumber": "3609",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/associatedMusicalArtist\u003e \u003chttp://dbpedia.org/resource/Oysterhead\u003e . ?uri \u003chttp://dbpedia.org/property/themeMusicComposer\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Oysterhead",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Oysterhead",
        "seq": "49,59"
      }
    ],
    "id": "2712e77ee9714f4e9dc75aee139c947d",
    "predicate mapping": [
      {
        "label": "music",
        "uri": "http://dbpedia.org/ontology/associatedMusicalArtist",
        "seq": "26,31",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "composers",
        "uri": "http://dbpedia.org/property/themeMusicComposer",
        "seq": "32,41",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "14,19",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Which awards have Ingmar Bergman won?",
    "SerialNumber": "3610",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Ingmar_Bergman\u003e \u003chttp://dbpedia.org/property/awards\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ingmar Bergman",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Ingmar_Bergman",
        "seq": "18,32"
      }
    ],
    "id": "f107cdaf5a3b4793ad0a9ba36ca5c01c",
    "predicate mapping": [
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards",
        "seq": "6,12",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "In which timezone does Khok Kwang lie?",
    "SerialNumber": "3611",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Khok_Kwang\u003e \u003chttp://dbpedia.org/ontology/timeZone\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Khok Kwang",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Khok_Kwang",
        "seq": "23,33"
      }
    ],
    "id": "db74d95d147e42748b823e8d8359a97a",
    "predicate mapping": [
      {
        "label": "timezone",
        "uri": "http://dbpedia.org/ontology/timeZone",
        "seq": "9,17",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "307",
    "question": "Which country has leaders  Karu Jayasuriya and Ranil Wickremesinghe?",
    "SerialNumber": "3614",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/ontology/leader\u003e \u003chttp://dbpedia.org/resource/Karu_Jayasuriya\u003e . ?uri \u003chttp://dbpedia.org/ontology/leader\u003e \u003chttp://dbpedia.org/resource/Ranil_Wickremesinghe\u003e . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Country\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Karu Jayasuriya",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Karu_Jayasuriya",
        "seq": "27,42"
      },
      {
        "label": "Ranil Wickremesinghe",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ranil_Wickremesinghe",
        "seq": "47,67"
      }
    ],
    "id": "7f16b2da9f984b398e80a3bf82fdb761",
    "predicate mapping": [
      {
        "label": "leader",
        "uri": "http://dbpedia.org/ontology/leader",
        "seq": "18,24",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "leader",
        "uri": "http://dbpedia.org/ontology/leader",
        "seq": "18,24",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/Country",
        "seq": "6,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "List the software which uses Microsoft Windows as their operating system ?",
    "SerialNumber": "3615",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/operatingSystem\u003e \u003chttp://dbpedia.org/resource/Microsoft_Windows\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Software\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Microsoft Windows",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Microsoft_Windows",
        "seq": "29,46"
      }
    ],
    "id": "3ebcace84e5747f29673314099a70674",
    "predicate mapping": [
      {
        "label": "operating system",
        "uri": "http://dbpedia.org/ontology/operatingSystem",
        "seq": "56,72",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "software",
        "uri": "http://dbpedia.org/ontology/Software",
        "seq": "9,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Where did Louis chevrolet die ?",
    "SerialNumber": "3618",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Louis_Chevrolet\u003e \u003chttp://dbpedia.org/property/deathPlace\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Louis chevrolet",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Louis_Chevrolet",
        "seq": "10,25"
      }
    ],
    "id": "32d100aad346478bbb68b3ce1b5a8520",
    "predicate mapping": [
      {
        "label": "die",
        "uri": "http://dbpedia.org/property/deathPlace",
        "seq": "26,29",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "who married crystal harris?",
    "SerialNumber": "3619",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/spouse\u003e \u003chttp://dbpedia.org/resource/Crystal_Harris\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "crystal harris",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Crystal_Harris",
        "seq": "12,26"
      }
    ],
    "id": "13fab3852bd645ef8d7c43e3d10a9d2b",
    "predicate mapping": [
      {
        "label": "married",
        "uri": "http://dbpedia.org/property/spouse",
        "seq": "4,11",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "What is the information appliance whose successor is PlayStation 4 and maker is Foxconn?",
    "SerialNumber": "3626",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/successor\u003e \u003chttp://dbpedia.org/resource/PlayStation_4\u003e . ?uri \u003chttp://dbpedia.org/property/manufacturer\u003e \u003chttp://dbpedia.org/resource/Foxconn\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/InformationAppliance\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "PlayStation 4",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/PlayStation_4",
        "seq": "53,66"
      },
      {
        "label": "Foxconn",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Foxconn",
        "seq": "80,87"
      }
    ],
    "id": "b7b4af490fc749c39bb8f1aebd991ebd",
    "predicate mapping": [
      {
        "label": "successor",
        "uri": "http://dbpedia.org/property/successor",
        "seq": "40,49",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "maker",
        "uri": "http://dbpedia.org/property/manufacturer",
        "seq": "71,76",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "information appliance",
        "uri": "http://dbpedia.org/ontology/InformationAppliance",
        "seq": "12,33",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "List all the bands which have members of the band Guy in them?",
    "SerialNumber": "3627",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Guy_(band)\u003e \u003chttp://dbpedia.org/ontology/bandMember\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/associatedBand\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Guy",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Guy_(band)",
        "seq": "50,53"
      }
    ],
    "id": "f7360f8ebf504cb5977b2fe626623fb6",
    "predicate mapping": [
      {
        "label": "members",
        "uri": "http://dbpedia.org/ontology/bandMember",
        "seq": "30,37",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "band",
        "uri": "http://dbpedia.org/ontology/associatedBand",
        "seq": "13,17",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which route junction of the Rhode Island Route 15 is the place of birth of the Michael Poulin?",
    "SerialNumber": "3629",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Rhode_Island_Route_15\u003e \u003chttp://dbpedia.org/ontology/routeJunction\u003e ?uri. \u003chttp://dbpedia.org/resource/Michael_Poulin\u003e \u003chttp://dbpedia.org/property/placeOfBirth\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Route 15",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Rhode_Island_Route_15",
        "seq": "41,49"
      },
      {
        "label": "Michael Poulin",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Michael_Poulin",
        "seq": "79,93"
      }
    ],
    "id": "98d2e418f14f4bf3ad8a396f172f6166",
    "predicate mapping": [
      {
        "label": "route junction",
        "uri": "http://dbpedia.org/ontology/routeJunction",
        "seq": "6,20",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "place of birth",
        "uri": "http://dbpedia.org/property/placeOfBirth",
        "seq": "57,71",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name a fictional character whose relative is Uncle Henry and species is Human?",
    "SerialNumber": "3630",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/relative\u003e \u003chttp://dbpedia.org/resource/Uncle_Henry_(Oz)\u003e . ?uri \u003chttp://dbpedia.org/ontology/species\u003e \u003chttp://dbpedia.org/resource/Human\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/FictionalCharacter\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Uncle Henry",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Uncle_Henry_(Oz)",
        "seq": "45,56"
      },
      {
        "label": "Human",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Human",
        "seq": "72,77"
      }
    ],
    "id": "3e991adbec6041f0a8ff29cbff44f27d",
    "predicate mapping": [
      {
        "label": "relative",
        "uri": "http://dbpedia.org/ontology/relative",
        "seq": "33,41",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "species",
        "uri": "http://dbpedia.org/ontology/species",
        "seq": "61,68",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "fictional character",
        "uri": "http://dbpedia.org/ontology/FictionalCharacter",
        "seq": "7,26",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "Which show\u0027s theme music composer\u0027s label is MapleMusic Recordings?",
    "SerialNumber": "3631",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/recordLabel\u003e \u003chttp://dbpedia.org/resource/MapleMusic_Recordings\u003e . ?uri \u003chttp://dbpedia.org/property/themeMusicComposer\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "MapleMusic Recordings",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/MapleMusic_Recordings",
        "seq": "45,66"
      }
    ],
    "id": "b7cb450c48fe451eb780f8d368eeaab9",
    "predicate mapping": [
      {
        "label": "label",
        "uri": "http://dbpedia.org/ontology/recordLabel",
        "seq": "36,41",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "theme music composer",
        "uri": "http://dbpedia.org/property/themeMusicComposer",
        "seq": "13,33",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "show\u0027s",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "6,12",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the draft team of Dale Mitchell (ice hockey) ?",
    "SerialNumber": "3633",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Dale_Mitchell_(ice_hockey)\u003e \u003chttp://dbpedia.org/ontology/draftTeam\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Dale Mitchell (ice hockey)",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Dale_Mitchell_(ice_hockey)",
        "seq": "26,52"
      }
    ],
    "id": "8f151cb3f067464695a3b7bb410d7636",
    "predicate mapping": [
      {
        "label": "draft team",
        "uri": "http://dbpedia.org/ontology/draftTeam",
        "seq": "12,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "To which educational institutions did Lesli Sanchez go for her studies?",
    "SerialNumber": "3635",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Leslie_Sanchez\u003e \u003chttp://dbpedia.org/ontology/education\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Lesli Sanchez",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Leslie_Sanchez",
        "seq": "38,51"
      }
    ],
    "id": "8533f08f0f2e439792341591e3b8d82e",
    "predicate mapping": [
      {
        "label": "education",
        "uri": "http://dbpedia.org/ontology/education",
        "seq": "9,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who was the coach of 1972 Oakland Raiders season ?",
    "SerialNumber": "3636",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/1972_Oakland_Raiders_season\u003e \u003chttp://dbpedia.org/ontology/coach\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "1972 Oakland Raiders season",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/1972_Oakland_Raiders_season",
        "seq": "21,48"
      }
    ],
    "id": "fe62a0c11f31451991b7023a4fd71fae",
    "predicate mapping": [
      {
        "label": "coach",
        "uri": "http://dbpedia.org/ontology/coach",
        "seq": "12,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What are Jerry Bock\u0027s musicals based upon?",
    "SerialNumber": "3637",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/music\u003e \u003chttp://dbpedia.org/resource/Jerry_Bock\u003e . ?x \u003chttp://dbpedia.org/ontology/basedOn\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Musical\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jerry Bock",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Jerry_Bock",
        "seq": "9,19"
      }
    ],
    "id": "2e462e329e0c4e94aae619104e268274",
    "predicate mapping": [
      {
        "label": "music",
        "uri": "http://dbpedia.org/property/music",
        "seq": "22,27",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "based upon",
        "uri": "http://dbpedia.org/ontology/basedOn",
        "seq": "31,41",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "musical",
        "uri": "http://dbpedia.org/ontology/Musical",
        "seq": "22,29",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the rive whose mouth is located in Limerick and location is Dowra?",
    "SerialNumber": "3640",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/mouthLocation\u003e \u003chttp://dbpedia.org/resource/Limerick\u003e . ?uri \u003chttp://dbpedia.org/property/sourceLocation\u003e \u003chttp://dbpedia.org/resource/Dowra\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/River\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Limerick",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Limerick",
        "seq": "40,48"
      },
      {
        "label": "Dowra",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Dowra",
        "seq": "65,70"
      }
    ],
    "id": "442be0d7fdb3489890f69cc2e0046f6c",
    "predicate mapping": [
      {
        "label": "location mouth",
        "uri": "http://dbpedia.org/property/mouthLocation",
        "seq": "-1,13",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "location",
        "uri": "http://dbpedia.org/property/sourceLocation",
        "seq": "53,61",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "rive",
        "uri": "http://dbpedia.org/ontology/River",
        "seq": "9,13",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What religion does roshan ranasinghe and nhiek tioulong follow?",
    "SerialNumber": "3641",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Roshan_Ranasinghe\u003e \u003chttp://dbpedia.org/property/religion\u003e ?uri. \u003chttp://dbpedia.org/resource/Nhiek_Tioulong\u003e \u003chttp://dbpedia.org/ontology/religion\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "roshan ranasinghe",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Roshan_Ranasinghe",
        "seq": "19,36"
      },
      {
        "label": "nhiek tioulong",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Nhiek_Tioulong",
        "seq": "41,55"
      }
    ],
    "id": "09da33e36b464a00852d478e1a46581d",
    "predicate mapping": [
      {
        "label": "religion",
        "uri": "http://dbpedia.org/property/religion",
        "seq": "5,13",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion",
        "seq": "5,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "What is the place where the mayor\u0027s wife is Jean-Marc Germain?",
    "SerialNumber": "3643",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/spouse\u003e \u003chttp://dbpedia.org/resource/Jean-Marc_Germain\u003e . ?uri \u003chttp://dbpedia.org/ontology/mayor\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Place\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jean-Marc Germain",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Jean-Marc_Germain",
        "seq": "44,61"
      }
    ],
    "id": "43d23927b3204b4c9c076cb77e98994a",
    "predicate mapping": [
      {
        "label": "wife",
        "uri": "http://dbpedia.org/property/spouse",
        "seq": "36,40",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "mayor",
        "uri": "http://dbpedia.org/ontology/mayor",
        "seq": "28,33",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "place",
        "uri": "http://dbpedia.org/ontology/Place",
        "seq": "12,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "List the employments of people who died in Tampa, Florida.",
    "SerialNumber": "3645",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/deathPlace\u003e \u003chttp://dbpedia.org/resource/Tampa,_Florida\u003e . ?x \u003chttp://dbpedia.org/ontology/occupation\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Tampa, Florida",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Tampa,_Florida",
        "seq": "43,57"
      }
    ],
    "id": "9e676dc4d1474a5681415891d46a9c4b",
    "predicate mapping": [
      {
        "label": "died in",
        "uri": "http://dbpedia.org/ontology/deathPlace",
        "seq": "35,42",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "employment",
        "uri": "http://dbpedia.org/ontology/occupation",
        "seq": "9,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "List the destination of Novair International Airways ?",
    "SerialNumber": "3647",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Novair_International_Airways\u003e \u003chttp://dbpedia.org/ontology/destination\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Novair International Airways",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Novair_International_Airways",
        "seq": "24,52"
      }
    ],
    "id": "f8a314a604de4c88b0f8ed83a5bfb2b4",
    "predicate mapping": [
      {
        "label": "destination",
        "uri": "http://dbpedia.org/ontology/destination",
        "seq": "9,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the television show whose subsequent work is Frasier and opening theme is Where Everybody Knows Your Name?",
    "SerialNumber": "3651",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/subsequentWork\u003e \u003chttp://dbpedia.org/resource/Frasier\u003e . ?uri \u003chttp://dbpedia.org/ontology/openingTheme\u003e \u003chttp://dbpedia.org/resource/Where_Everybody_Knows_Your_Name\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Frasier",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Frasier",
        "seq": "50,57"
      },
      {
        "label": "Where Everybody Knows Your Name",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Where_Everybody_Knows_Your_Name",
        "seq": "79,110"
      }
    ],
    "id": "a91c0aba4eef49c387ca0f4df2ce1ae2",
    "predicate mapping": [
      {
        "label": "subsequent work",
        "uri": "http://dbpedia.org/ontology/subsequentWork",
        "seq": "31,46",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "opening theme",
        "uri": "http://dbpedia.org/ontology/openingTheme",
        "seq": "62,75",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "9,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What things canonized John of Damascus and and also venerated the Edwin of Northumbria ?",
    "SerialNumber": "3652",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/John_of_Damascus\u003e \u003chttp://dbpedia.org/ontology/canonizedBy\u003e ?uri. \u003chttp://dbpedia.org/resource/Edwin_of_Northumbria\u003e \u003chttp://dbpedia.org/property/veneratedIn\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "John of Damascus",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/John_of_Damascus",
        "seq": "22,38"
      },
      {
        "label": "Edwin of Northumbria",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Edwin_of_Northumbria",
        "seq": "66,86"
      }
    ],
    "id": "78468cadef404a5682645a749efce5c7",
    "predicate mapping": [
      {
        "label": "canonized",
        "uri": "http://dbpedia.org/ontology/canonizedBy",
        "seq": "12,21",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "venerated",
        "uri": "http://dbpedia.org/property/veneratedIn",
        "seq": "52,61",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "7",
    "question": "Who was engaged in wars of Fort Gadsden and Fort Barrancas?",
    "SerialNumber": "3654",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/ontology/battle\u003e \u003chttp://dbpedia.org/resource/Fort_Gadsden\u003e . ?uri \u003chttp://dbpedia.org/ontology/battle\u003e \u003chttp://dbpedia.org/resource/Fort_Barrancas\u003e . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Fort Gadsden",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Fort_Gadsden",
        "seq": "27,39"
      },
      {
        "label": "Fort Barrancas",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Fort_Barrancas",
        "seq": "44,58"
      }
    ],
    "id": "d100a042da084c23a4942886d7281e88",
    "predicate mapping": [
      {
        "label": "war",
        "uri": "http://dbpedia.org/ontology/battle",
        "seq": "19,22",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "war",
        "uri": "http://dbpedia.org/ontology/battle",
        "seq": "19,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "List the religions of the commanders of Royal Thai Army.",
    "SerialNumber": "3655",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Royal_Thai_Army\u003e \u003chttp://dbpedia.org/property/notableCommanders\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/religion\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Royal Thai Army",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Royal_Thai_Army",
        "seq": "40,55"
      }
    ],
    "id": "a8f0871a3d594450b08d3676964a27ff",
    "predicate mapping": [
      {
        "label": "commanders",
        "uri": "http://dbpedia.org/property/notableCommanders",
        "seq": "26,36",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion",
        "seq": "9,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the office holder who was married to Dolley Madison and has resting palce as Montpelier ?",
    "SerialNumber": "3658",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/spouse\u003e \u003chttp://dbpedia.org/resource/Dolley_Madison\u003e . ?uri \u003chttp://dbpedia.org/property/restingplace\u003e \u003chttp://dbpedia.org/resource/Montpelier_(Orange,_Virginia)\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/OfficeHolder\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Dolley Madison",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Dolley_Madison",
        "seq": "42,56"
      },
      {
        "label": "Montpelier",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Montpelier_(Orange,_Virginia)",
        "seq": "82,92"
      }
    ],
    "id": "39a0e27d0c5e43f9816a5cea3a37ea80",
    "predicate mapping": [
      {
        "label": "married to",
        "uri": "http://dbpedia.org/property/spouse",
        "seq": "31,41",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "resting",
        "uri": "http://dbpedia.org/property/restingplace",
        "seq": "65,72",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "office holder",
        "uri": "http://dbpedia.org/ontology/OfficeHolder",
        "seq": "9,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Is Hard Candy Fitness one of the divisions of Moscow?",
    "SerialNumber": "3659",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Hard_Candy_Fitness\u003e \u003chttp://dbpedia.org/property/divisions\u003e \u003chttp://dbpedia.org/resource/Moscow\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Hard Candy Fitness",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Hard_Candy_Fitness",
        "seq": "3,21"
      },
      {
        "label": "Moscow",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Moscow",
        "seq": "46,52"
      }
    ],
    "id": "1abffd197c8c4787bef810c59eec010f",
    "predicate mapping": [
      {
        "label": "divisions",
        "uri": "http://dbpedia.org/property/divisions",
        "seq": "33,42",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "What are the awards won by the person who is an authority of Latania verschaffeltii ?",
    "SerialNumber": "3660",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Latania_verschaffeltii\u003e \u003chttp://dbpedia.org/property/binomialAuthority\u003e ?x . ?x \u003chttp://dbpedia.org/property/awards\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Latania verschaffeltii",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Latania_verschaffeltii",
        "seq": "61,83"
      }
    ],
    "id": "6ac4a7bdfb6c4d5fb1e936da0dd3818f",
    "predicate mapping": [
      {
        "label": "authority",
        "uri": "http://dbpedia.org/property/binomialAuthority",
        "seq": "48,57",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards",
        "seq": "13,19",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/Person",
        "seq": "31,37",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which parent comapny of hypnotize Minds is the label of the Producers , a 2005 film ?",
    "SerialNumber": "3662",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Hypnotize_Minds\u003e \u003chttp://dbpedia.org/property/parent\u003e ?uri. \u003chttp://dbpedia.org/resource/The_Producers_(2005_film)\u003e \u003chttp://dbpedia.org/property/label\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "hypnotize Minds",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Hypnotize_Minds",
        "seq": "24,39"
      },
      {
        "label": "the Producers",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Producers_(2005_film)",
        "seq": "56,69"
      }
    ],
    "id": "136a14b3127e45c89da289d979fa67a8",
    "predicate mapping": [
      {
        "label": "parent",
        "uri": "http://dbpedia.org/property/parent",
        "seq": "6,12",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "label",
        "uri": "http://dbpedia.org/property/label",
        "seq": "47,52",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the software whose operating system is Mac OS and programming language is C++ ?",
    "SerialNumber": "3664",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/operatingSystem\u003e \u003chttp://dbpedia.org/resource/Mac_OS\u003e . ?uri \u003chttp://dbpedia.org/property/programmingLanguage\u003e \u003chttp://dbpedia.org/resource/C++\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Software\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Mac OS",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Mac_OS",
        "seq": "44,50"
      },
      {
        "label": "C++",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/C++",
        "seq": "79,82"
      }
    ],
    "id": "fc12f11fa89b4928bf724ad752ba67f7",
    "predicate mapping": [
      {
        "label": "operating system",
        "uri": "http://dbpedia.org/ontology/operatingSystem",
        "seq": "24,40",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "programming language",
        "uri": "http://dbpedia.org/property/programmingLanguage",
        "seq": "55,75",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "software",
        "uri": "http://dbpedia.org/ontology/Software",
        "seq": "9,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Is Trevor Peacock the narrator of Fred Claus?",
    "SerialNumber": "3666",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Fred_Claus\u003e \u003chttp://dbpedia.org/property/narrator\u003e \u003chttp://dbpedia.org/resource/Trevor_Peacock\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Fred Claus",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Fred_Claus",
        "seq": "34,44"
      },
      {
        "label": "Trevor Peacock",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Trevor_Peacock",
        "seq": "3,17"
      }
    ],
    "id": "6d534a6445c944a68ed033f2e18b64a2",
    "predicate mapping": [
      {
        "label": "narrator",
        "uri": "http://dbpedia.org/property/narrator",
        "seq": "22,30",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "List few authors whose education took place in Saint Petersburg ?   ",
    "SerialNumber": "3669",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/education\u003e \u003chttp://dbpedia.org/resource/Saint_Petersburg\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Writer\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Saint Petersburg",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Saint_Petersburg",
        "seq": "47,63"
      }
    ],
    "id": "4512ce93850d4a7d9ab2ade188c279c8",
    "predicate mapping": [
      {
        "label": "education",
        "uri": "http://dbpedia.org/ontology/education",
        "seq": "23,32",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "authors",
        "uri": "http://dbpedia.org/ontology/Writer",
        "seq": "9,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "What all are written in the C programming language?",
    "SerialNumber": "3670",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/programmingLanguage\u003e \u003chttp://dbpedia.org/resource/C_(programming_language)\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "C programming language",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/C_(programming_language)",
        "seq": "28,50"
      }
    ],
    "id": "c08136b5c371483aa23d66de3825c01e",
    "predicate mapping": [
      {
        "label": "programming language",
        "uri": "http://dbpedia.org/property/programmingLanguage",
        "seq": "30,50",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "List the producer of the TV shows whose company is HBO.",
    "SerialNumber": "3671",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/company\u003e \u003chttp://dbpedia.org/resource/HBO\u003e . ?x \u003chttp://dbpedia.org/ontology/producer\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "HBO",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/HBO",
        "seq": "51,54"
      }
    ],
    "id": "e8ac868bdcc144fdaf15f23486f90d11",
    "predicate mapping": [
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/company",
        "seq": "40,47",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "producer",
        "uri": "http://dbpedia.org/ontology/producer",
        "seq": "9,17",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "28,33",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "What is the alma mater of the senator who is the successor of Warren Magnuson ?",
    "SerialNumber": "3672",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Warren_Magnuson\u003e \u003chttp://dbpedia.org/property/successor\u003e ?x . ?x \u003chttp://dbpedia.org/property/almaMater\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Senator\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Warren Magnuson",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Warren_Magnuson",
        "seq": "62,77"
      }
    ],
    "id": "e768b113972d46d2bdb465a06d6051cc",
    "predicate mapping": [
      {
        "label": "successor",
        "uri": "http://dbpedia.org/property/successor",
        "seq": "49,58",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/property/almaMater",
        "seq": "12,22",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "senator",
        "uri": "http://dbpedia.org/ontology/Senator",
        "seq": "30,37",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Is Andrew Lincoln the narrator of Million Dollar Traders?",
    "SerialNumber": "3673",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Million_Dollar_Traders\u003e \u003chttp://dbpedia.org/ontology/narrator\u003e \u003chttp://dbpedia.org/resource/Andrew_Lincoln\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Million Dollar Traders",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Million_Dollar_Traders",
        "seq": "34,56"
      },
      {
        "label": "Andrew Lincoln",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Andrew_Lincoln",
        "seq": "3,17"
      }
    ],
    "id": "2087fc4decb740e28f5e56190e001c68",
    "predicate mapping": [
      {
        "label": "narrator",
        "uri": "http://dbpedia.org/ontology/narrator",
        "seq": "22,30",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the mascot of Blytheville High School ?",
    "SerialNumber": "3674",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Blytheville_High_School\u003e \u003chttp://dbpedia.org/property/mascot\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Blytheville High School",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Blytheville_High_School",
        "seq": "22,45"
      }
    ],
    "id": "9aa8b71692cb45da98f3100dd56685da",
    "predicate mapping": [
      {
        "label": "mascot",
        "uri": "http://dbpedia.org/property/mascot",
        "seq": "12,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "311",
    "question": "List all the operators of the train who operates in Budapest ?",
    "SerialNumber": "3675",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/operator\u003e \u003chttp://dbpedia.org/resource/Budapest\u003e . ?x \u003chttp://dbpedia.org/ontology/operator\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Train\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Budapest",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Budapest",
        "seq": "52,60"
      }
    ],
    "id": "89063b059c9e4f5cb713b5e0ef36cbae",
    "predicate mapping": [
      {
        "label": "operator",
        "uri": "http://dbpedia.org/ontology/operator",
        "seq": "13,21",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "operator",
        "uri": "http://dbpedia.org/ontology/operator",
        "seq": "13,21",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "train",
        "uri": "http://dbpedia.org/ontology/Train",
        "seq": "30,35",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Is Eddie Bravo the trainer of Alan Jouban",
    "SerialNumber": "3677",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Alan_Jouban\u003e \u003chttp://dbpedia.org/ontology/trainer\u003e \u003chttp://dbpedia.org/resource/Eddie_Bravo\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Alan Jouban",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Alan_Jouban",
        "seq": "30,41"
      },
      {
        "label": "Eddie Bravo",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Eddie_Bravo",
        "seq": "3,14"
      }
    ],
    "id": "bdb4b59b7f0f4610ada06b93495ffab9",
    "predicate mapping": [
      {
        "label": "trainer",
        "uri": "http://dbpedia.org/ontology/trainer",
        "seq": "19,26",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the content licence of MSX BASIC ?",
    "SerialNumber": "3678",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/MSX_BASIC\u003e \u003chttp://dbpedia.org/property/license\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "MSX BASIC",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/MSX_BASIC",
        "seq": "31,40"
      }
    ],
    "id": "7c77b492d45c40f48e4c4c0ffeaac619",
    "predicate mapping": [
      {
        "label": "content licence",
        "uri": "http://dbpedia.org/property/license",
        "seq": "12,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "What are some common ingredients used in Swedish dishes?",
    "SerialNumber": "3679",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/country\u003e \u003chttp://dbpedia.org/resource/Sweden\u003e . ?x \u003chttp://dbpedia.org/ontology/ingredient\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Swedish",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Sweden",
        "seq": "41,48"
      }
    ],
    "id": "9e3cdcb6a0ab41209cdec09a9cecab0f",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/country",
        "seq": "21,23",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "ingredient",
        "uri": "http://dbpedia.org/ontology/ingredient",
        "seq": "21,31",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Into which water bodies does Lake Uniamsi outflow?",
    "SerialNumber": "3681",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Lake_Uniamési\u003e \u003chttp://dbpedia.org/property/outflow\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Lake Uniamsi",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Lake_Uniamési",
        "seq": "29,41"
      }
    ],
    "id": "694ed5abdd6e48908b2a1eadf548813c",
    "predicate mapping": [
      {
        "label": "outflow",
        "uri": "http://dbpedia.org/property/outflow",
        "seq": "42,49",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What is the mascot of the army unit whose commander is Peter Cosgrove ?",
    "SerialNumber": "3682",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/commander\u003e \u003chttp://dbpedia.org/resource/Peter_Cosgrove\u003e . ?x \u003chttp://dbpedia.org/property/mascot\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MilitaryUnit\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Peter Cosgrove",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Peter_Cosgrove",
        "seq": "55,69"
      }
    ],
    "id": "3a6065b0d3374ad382b91a31b16c0214",
    "predicate mapping": [
      {
        "label": "commander",
        "uri": "http://dbpedia.org/property/commander",
        "seq": "42,51",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "mascot",
        "uri": "http://dbpedia.org/property/mascot",
        "seq": "12,18",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "unit",
        "uri": "http://dbpedia.org/ontology/MilitaryUnit",
        "seq": "31,35",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "7",
    "question": "Whose former teams are Indianapolis Colts and Carolina Panthers?",
    "SerialNumber": "3683",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/ontology/formerTeam\u003e \u003chttp://dbpedia.org/resource/Indianapolis_Colts\u003e . ?uri \u003chttp://dbpedia.org/ontology/formerTeam\u003e \u003chttp://dbpedia.org/resource/Carolina_Panthers\u003e . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Indianapolis Colts",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Indianapolis_Colts",
        "seq": "23,41"
      },
      {
        "label": "Carolina Panthers",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Carolina_Panthers",
        "seq": "46,63"
      }
    ],
    "id": "ee9a79ff6f624c548c57639e0b00a2ba",
    "predicate mapping": [
      {
        "label": "former team",
        "uri": "http://dbpedia.org/ontology/formerTeam",
        "seq": "6,17",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "former team",
        "uri": "http://dbpedia.org/ontology/formerTeam",
        "seq": "6,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the river with mouth palce Essex and source place as Gloucestershire ?",
    "SerialNumber": "3684",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/mouthPlace\u003e \u003chttp://dbpedia.org/resource/Essex\u003e . ?uri \u003chttp://dbpedia.org/ontology/sourcePlace\u003e \u003chttp://dbpedia.org/resource/Gloucestershire\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/River\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Essex",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Essex",
        "seq": "32,37"
      },
      {
        "label": "Gloucestershire",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Gloucestershire",
        "seq": "58,73"
      }
    ],
    "id": "42720fe503074225907ca0ab400f8ef7",
    "predicate mapping": [
      {
        "label": "place mouth",
        "uri": "http://dbpedia.org/ontology/mouthPlace",
        "seq": "-1,10",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "source place",
        "uri": "http://dbpedia.org/ontology/sourcePlace",
        "seq": "42,54",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "11",
    "question": "What are the notable commanders of the army  whose one of the notable commanders is Paul Hausser?",
    "SerialNumber": "3688",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/notableCommanders\u003e \u003chttp://dbpedia.org/resource/Paul_Hausser\u003e . ?x \u003chttp://dbpedia.org/property/notableCommanders\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Paul Hausser",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Paul_Hausser",
        "seq": "84,96"
      }
    ],
    "id": "f2c55f3eb1904df9badfcabff21ca4df",
    "predicate mapping": [
      {
        "label": "notable commanders",
        "uri": "http://dbpedia.org/property/notableCommanders",
        "seq": "13,31",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "notable commanders",
        "uri": "http://dbpedia.org/property/notableCommanders",
        "seq": "13,31",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who are the trainersof Candice Michelle?",
    "SerialNumber": "3696",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Candice_Michelle\u003e \u003chttp://dbpedia.org/ontology/trainer\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Candice Michelle",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Candice_Michelle",
        "seq": "23,39"
      }
    ],
    "id": "1f783e93f3d8452c965e50e42f038ada",
    "predicate mapping": [
      {
        "label": "trainer",
        "uri": "http://dbpedia.org/ontology/trainer",
        "seq": "12,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Does StandBy records distribute via Sony?",
    "SerialNumber": "3697",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/StandBy_Records\u003e \u003chttp://dbpedia.org/ontology/distributingLabel\u003e \u003chttp://dbpedia.org/resource/Sony\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "StandBy records",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/StandBy_Records",
        "seq": "5,20"
      },
      {
        "label": "Sony",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Sony",
        "seq": "36,40"
      }
    ],
    "id": "936c843de8c64610be0e8c6e2bbfce06",
    "predicate mapping": [
      {
        "label": "distribute",
        "uri": "http://dbpedia.org/ontology/distributingLabel",
        "seq": "21,31",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "Name the music artist which collaborated with the spouse of Jessi Colter?",
    "SerialNumber": "3698",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/spouse\u003e \u003chttp://dbpedia.org/resource/Jessi_Colter\u003e . ?uri \u003chttp://dbpedia.org/ontology/associatedMusicalArtist\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MusicalArtist\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jessi Colter",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Jessi_Colter",
        "seq": "60,72"
      }
    ],
    "id": "de9a66a3c88149bf89b74795d1fb60b8",
    "predicate mapping": [
      {
        "label": "spouse",
        "uri": "http://dbpedia.org/ontology/spouse",
        "seq": "50,56",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "artist music",
        "uri": "http://dbpedia.org/ontology/associatedMusicalArtist",
        "seq": "-1,11",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "artist music",
        "uri": "http://dbpedia.org/ontology/MusicalArtist",
        "seq": "-1,11",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which notable commanders of the Army Group Oberrhein (Germany) is the  leader of the Kriminalpolizei?",
    "SerialNumber": "3699",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Army_Group_Oberrhein_(Germany)\u003e \u003chttp://dbpedia.org/property/notableCommanders\u003e ?uri. \u003chttp://dbpedia.org/resource/Kriminalpolizei\u003e \u003chttp://dbpedia.org/ontology/leader\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Army Group Oberrhein (Germany)",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Army_Group_Oberrhein_(Germany)",
        "seq": "32,62"
      },
      {
        "label": "Kriminalpolizei",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Kriminalpolizei",
        "seq": "85,100"
      }
    ],
    "id": "5c71304648b546e691fb6b41fbe5fa5d",
    "predicate mapping": [
      {
        "label": "notable commanders",
        "uri": "http://dbpedia.org/property/notableCommanders",
        "seq": "6,24",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "leader",
        "uri": "http://dbpedia.org/ontology/leader",
        "seq": "71,77",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Who is the prime minister of the successor of Kingsley Wood?",
    "SerialNumber": "3700",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Kingsley_Wood\u003e \u003chttp://dbpedia.org/ontology/successor\u003e ?x . ?x \u003chttp://dbpedia.org/property/primeminister\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Kingsley Wood",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Kingsley_Wood",
        "seq": "46,59"
      }
    ],
    "id": "5b0935d4611b417b8cf6c43cffce6ccc",
    "predicate mapping": [
      {
        "label": "successor",
        "uri": "http://dbpedia.org/ontology/successor",
        "seq": "33,42",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "minister prime",
        "uri": "http://dbpedia.org/property/primeminister",
        "seq": "-1,13",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "which band was Roger waters in?",
    "SerialNumber": "3701",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/formerBandMember\u003e \u003chttp://dbpedia.org/resource/Roger_Waters\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Roger waters",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Roger_Waters",
        "seq": "15,27"
      }
    ],
    "id": "b3398e30fff34e49a28ba477ae3090e9",
    "predicate mapping": [
      {
        "label": "band",
        "uri": "http://dbpedia.org/ontology/formerBandMember",
        "seq": "6,10",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Is Seattle the Ship builder of USS Marmora (IX-189)?",
    "SerialNumber": "3702",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/USS_Marmora_(IX-189)\u003e \u003chttp://dbpedia.org/property/shipBuilder\u003e \u003chttp://dbpedia.org/resource/Seattle\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "USS Marmora (IX-189)",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/USS_Marmora_(IX-189)",
        "seq": "31,51"
      },
      {
        "label": "Seattle",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Seattle",
        "seq": "3,10"
      }
    ],
    "id": "882175c3e40a4de0a704ef91c54d2371",
    "predicate mapping": [
      {
        "label": "Ship builder",
        "uri": "http://dbpedia.org/property/shipBuilder",
        "seq": "15,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the region of Kim Sawchuk ?",
    "SerialNumber": "3703",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Kim_Sawchuk\u003e \u003chttp://dbpedia.org/property/region\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Kim Sawchuk",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Kim_Sawchuk",
        "seq": "22,33"
      }
    ],
    "id": "ad99cf1513714c3ebe054b74c3f26900",
    "predicate mapping": [
      {
        "label": "region",
        "uri": "http://dbpedia.org/property/region",
        "seq": "12,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Was Beth Tweddle primarily coached by Amanda Reddin?",
    "SerialNumber": "3705",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Beth_Tweddle\u003e \u003chttp://dbpedia.org/property/headcoach\u003e \u003chttp://dbpedia.org/resource/Amanda_Reddin\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Beth Tweddle",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Beth_Tweddle",
        "seq": "4,16"
      },
      {
        "label": "Amanda Reddin",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Amanda_Reddin",
        "seq": "38,51"
      }
    ],
    "id": "ecbf7d5515694a71a3cf386bf6863cef",
    "predicate mapping": [
      {
        "label": "coached",
        "uri": "http://dbpedia.org/property/headcoach",
        "seq": "27,34",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What is the television show whose judges is Randy Jackson?",
    "SerialNumber": "3706",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/judges\u003e \u003chttp://dbpedia.org/resource/Randy_Jackson\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Randy Jackson",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Randy_Jackson",
        "seq": "44,57"
      }
    ],
    "id": "9093d0d6f2a342f4933ca945615cc566",
    "predicate mapping": [
      {
        "label": "judges",
        "uri": "http://dbpedia.org/property/judges",
        "seq": "34,40",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "12,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "What is the Band whose band member is Mark Middleton?",
    "SerialNumber": "3707",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/bandMember\u003e \u003chttp://dbpedia.org/resource/Mark_Middleton\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Mark Middleton",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Mark_Middleton",
        "seq": "38,52"
      }
    ],
    "id": "5c476257c7ae4f8c8fb4b061667cb773",
    "predicate mapping": [
      {
        "label": "band member",
        "uri": "http://dbpedia.org/ontology/bandMember",
        "seq": "23,34",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Was the cover of The adventures of Tom Sawyer designed by Mark Twain?",
    "SerialNumber": "3708",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer\u003e \u003chttp://dbpedia.org/ontology/coverArtist\u003e \u003chttp://dbpedia.org/resource/Mark_Twain\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "The adventures of Tom Sawyer",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer",
        "seq": "17,45"
      },
      {
        "label": "Mark Twain",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Mark_Twain",
        "seq": "58,68"
      }
    ],
    "id": "a47cf69b01104a72acb249b101f2746a",
    "predicate mapping": [
      {
        "label": "cover",
        "uri": "http://dbpedia.org/ontology/coverArtist",
        "seq": "8,13",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Is Charles Drummond Ellis a doctoral student of James Chadwick?",
    "SerialNumber": "3710",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/James_Chadwick\u003e \u003chttp://dbpedia.org/ontology/doctoralStudent\u003e \u003chttp://dbpedia.org/resource/Charles_Drummond_Ellis\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "James Chadwick",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/James_Chadwick",
        "seq": "48,62"
      },
      {
        "label": "Charles Drummond Ellis",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Charles_Drummond_Ellis",
        "seq": "3,25"
      }
    ],
    "id": "fd60b1d920e4435cbfbbe74a8631fde0",
    "predicate mapping": [
      {
        "label": "doctoral student",
        "uri": "http://dbpedia.org/ontology/doctoralStudent",
        "seq": "28,44",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "101",
    "question": "How many kings and queens have died in the Arabian Peninsula?",
    "SerialNumber": "3711",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/ontology/deathPlace\u003e \u003chttp://dbpedia.org/resource/Arabian_Peninsula\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Arabian Peninsula",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Arabian_Peninsula",
        "seq": "43,60"
      }
    ],
    "id": "7d16db5ff7dc4f1d820159cb7b83bff8",
    "predicate mapping": [
      {
        "label": "died in",
        "uri": "http://dbpedia.org/ontology/deathPlace",
        "seq": "31,38",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "7",
    "question": "Who are relatives of Ozzy Osbourne and Kelly Osbourne?",
    "SerialNumber": "3713",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/property/relatives\u003e \u003chttp://dbpedia.org/resource/Ozzy_Osbourne\u003e . ?uri \u003chttp://dbpedia.org/property/relatives\u003e \u003chttp://dbpedia.org/resource/Kelly_Osbourne\u003e . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ozzy Osbourne",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ozzy_Osbourne",
        "seq": "21,34"
      },
      {
        "label": "Kelly Osbourne",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Kelly_Osbourne",
        "seq": "39,53"
      }
    ],
    "id": "6cb6c4470ec840f9990494c4ecebca5f",
    "predicate mapping": [
      {
        "label": "relatives",
        "uri": "http://dbpedia.org/property/relatives",
        "seq": "8,17",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "relatives",
        "uri": "http://dbpedia.org/property/relatives",
        "seq": "8,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the purpose of New Zealand Chess Federation ?",
    "SerialNumber": "3714",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/New_Zealand_Chess_Federation\u003e \u003chttp://dbpedia.org/property/purpose\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "New Zealand Chess Federation",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/New_Zealand_Chess_Federation",
        "seq": "23,51"
      }
    ],
    "id": "090ae66d24e0419186f917e055d026fd",
    "predicate mapping": [
      {
        "label": "purpose",
        "uri": "http://dbpedia.org/property/purpose",
        "seq": "12,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What team did Joe Porter and Eddie Anderson play for?",
    "SerialNumber": "3717",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Eddie_Anderson_(safety)\u003e \u003chttp://dbpedia.org/ontology/team\u003e ?uri. \u003chttp://dbpedia.org/resource/Joe_Porter_(American_football)\u003e \u003chttp://dbpedia.org/ontology/formerTeam\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Eddie Anderson",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Eddie_Anderson_(safety)",
        "seq": "29,43"
      },
      {
        "label": "Joe Porter",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Joe_Porter_(American_football)",
        "seq": "14,24"
      }
    ],
    "id": "69daf7da0c5a44ba8f6817c0af2e11d5",
    "predicate mapping": [
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/team",
        "seq": "5,9",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/formerTeam",
        "seq": "5,9",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "Producers of what have died in Mississippi?",
    "SerialNumber": "3722",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/deathPlace\u003e \u003chttp://dbpedia.org/resource/Mississippi\u003e . ?uri \u003chttp://dbpedia.org/ontology/producer\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Mississippi",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Mississippi",
        "seq": "31,42"
      }
    ],
    "id": "774e4d5e2f154ce18749dbfff09b87aa",
    "predicate mapping": [
      {
        "label": "died in",
        "uri": "http://dbpedia.org/ontology/deathPlace",
        "seq": "23,30",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "Producer",
        "uri": "http://dbpedia.org/ontology/producer",
        "seq": "0,8",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "406",
    "question": "How many universities are there whose country\u0027s capital is Oslo?",
    "SerialNumber": "3724",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/capital\u003e \u003chttp://dbpedia.org/resource/Oslo\u003e . ?uri \u003chttp://dbpedia.org/ontology/country\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/University\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Oslo",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Oslo",
        "seq": "59,63"
      }
    ],
    "id": "f9e263fc8d484333938c1f47c1e37aef",
    "predicate mapping": [
      {
        "label": "capital",
        "uri": "http://dbpedia.org/property/capital",
        "seq": "48,55",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/country",
        "seq": "38,45",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "universities",
        "uri": "http://dbpedia.org/ontology/University",
        "seq": "9,21",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Name some sports played in institutions of Maharashtra?",
    "SerialNumber": "3725",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/state\u003e \u003chttp://dbpedia.org/resource/Maharashtra\u003e . ?x \u003chttp://dbpedia.org/ontology/sport\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Maharashtra",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Maharashtra",
        "seq": "43,54"
      }
    ],
    "id": "2d2f1781e9df41a58d97a8ebce31bb6b",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/property/state",
        "seq": "24,26",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "sport",
        "uri": "http://dbpedia.org/ontology/sport",
        "seq": "10,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "405",
    "question": "Current players of Colorado Avalanche have previously played for how many different teams?",
    "SerialNumber": "3726",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/team\u003e \u003chttp://dbpedia.org/resource/Colorado_Avalanche\u003e . ?x \u003chttp://dbpedia.org/ontology/formerTeam\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/SportsTeam\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Colorado Avalanche",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Colorado_Avalanche",
        "seq": "19,37"
      }
    ],
    "id": "05e132cfe14a4f008e5be637c21deb07",
    "predicate mapping": [
      {
        "label": "played for",
        "uri": "http://dbpedia.org/ontology/team",
        "seq": "54,64",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "teams",
        "uri": "http://dbpedia.org/ontology/formerTeam",
        "seq": "84,89",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "played for",
        "uri": "http://dbpedia.org/ontology/SportsTeam",
        "seq": "54,64",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What is the mascot of the unit whose garrison is Canberra ?",
    "SerialNumber": "3730",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/garrison\u003e \u003chttp://dbpedia.org/resource/Canberra\u003e . ?x \u003chttp://dbpedia.org/property/mascot\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MilitaryUnit\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Canberra",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Canberra",
        "seq": "49,57"
      }
    ],
    "id": "c432ff2350b742d69c0e43d801ee643a",
    "predicate mapping": [
      {
        "label": "garrison",
        "uri": "http://dbpedia.org/property/garrison",
        "seq": "37,45",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "mascot",
        "uri": "http://dbpedia.org/property/mascot",
        "seq": "12,18",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "unit",
        "uri": "http://dbpedia.org/ontology/MilitaryUnit",
        "seq": "26,30",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Horses sired by Karinga Bay have participated in which races?",
    "SerialNumber": "3731",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/sire\u003e \u003chttp://dbpedia.org/resource/Karinga_Bay\u003e . ?x \u003chttp://dbpedia.org/property/race\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Horse\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Karinga Bay",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Karinga_Bay",
        "seq": "16,27"
      }
    ],
    "id": "c5daa94158494f458cac5372dfc1da23",
    "predicate mapping": [
      {
        "label": "sire",
        "uri": "http://dbpedia.org/ontology/sire",
        "seq": "7,11",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "race",
        "uri": "http://dbpedia.org/property/race",
        "seq": "55,59",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "Horse",
        "uri": "http://dbpedia.org/ontology/Horse",
        "seq": "0,5",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Is Philosophy the academic discipline of Think (journal)?",
    "SerialNumber": "3732",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Think_(journal)\u003e \u003chttp://dbpedia.org/ontology/academicDiscipline\u003e \u003chttp://dbpedia.org/resource/Philosophy\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Think (journal)",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Think_(journal)",
        "seq": "41,56"
      },
      {
        "label": "Philosophy",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Philosophy",
        "seq": "3,13"
      }
    ],
    "id": "232b47d723104bf9af52c6a454123647",
    "predicate mapping": [
      {
        "label": "academic discipline",
        "uri": "http://dbpedia.org/ontology/academicDiscipline",
        "seq": "18,37",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What is the highschool of the american football player who joined the Robert Morris Colonials program?",
    "SerialNumber": "3733",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/school\u003e \u003chttp://dbpedia.org/resource/Robert_Morris_Colonials_football\u003e . ?x \u003chttp://dbpedia.org/property/highschool\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/AmericanFootballPlayer\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Robert Morris Colonials",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Robert_Morris_Colonials_football",
        "seq": "70,93"
      }
    ],
    "id": "a3a7404dd7e4412aa9a0da42b4e489a2",
    "predicate mapping": [
      {
        "label": "school",
        "uri": "http://dbpedia.org/ontology/school",
        "seq": "16,22",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "highschool",
        "uri": "http://dbpedia.org/property/highschool",
        "seq": "12,22",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "american football player",
        "uri": "http://dbpedia.org/ontology/AmericanFootballPlayer",
        "seq": "30,54",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "307",
    "question": "Who is associated  with the musical artists from Africa \u002770 (band) and Tony Allen ?",
    "SerialNumber": "3737",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/ontology/associatedMusicalArtist\u003e \u003chttp://dbpedia.org/resource/Africa_\u002770_(band)\u003e . ?uri \u003chttp://dbpedia.org/ontology/associatedMusicalArtist\u003e \u003chttp://dbpedia.org/resource/Tony_Allen_(musician)\u003e . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MusicalArtist\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Africa \u002770 (band)",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Africa_\u002770_(band)",
        "seq": "49,66"
      },
      {
        "label": "Tony Allen",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Tony_Allen_(musician)",
        "seq": "71,81"
      }
    ],
    "id": "6b86496784934d179425226207e28786",
    "predicate mapping": [
      {
        "label": "associated musical",
        "uri": "http://dbpedia.org/ontology/associatedMusicalArtist",
        "seq": "-1,17",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "associated musical",
        "uri": "http://dbpedia.org/ontology/associatedMusicalArtist",
        "seq": "-1,17",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "musical artist",
        "uri": "http://dbpedia.org/ontology/MusicalArtist",
        "seq": "28,42",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "403",
    "question": "How many religions are followed by the group whose architectural style can be seen on Sanggar Agung?",
    "SerialNumber": "3738",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { \u003chttp://dbpedia.org/resource/Sanggar_Agung\u003e \u003chttp://dbpedia.org/property/architecturalStyle\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/religion\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/EthnicGroup\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Sanggar Agung",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Sanggar_Agung",
        "seq": "86,99"
      }
    ],
    "id": "bdf0f42af4d0461c8f39f953143086ce",
    "predicate mapping": [
      {
        "label": "architectural style",
        "uri": "http://dbpedia.org/property/architecturalStyle",
        "seq": "51,70",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion",
        "seq": "9,17",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "group",
        "uri": "http://dbpedia.org/ontology/EthnicGroup",
        "seq": "39,44",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What are the relatives of the rugby player one of whose relatives is Nick Williams?",
    "SerialNumber": "3739",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/relatives\u003e \u003chttp://dbpedia.org/resource/Nick_Williams\u003e . ?x \u003chttp://dbpedia.org/ontology/relative\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/RugbyPlayer\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Nick Williams",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Nick_Williams",
        "seq": "69,82"
      }
    ],
    "id": "ff16998e9b6149ce8df83c8403a1295b",
    "predicate mapping": [
      {
        "label": "relatives",
        "uri": "http://dbpedia.org/property/relatives",
        "seq": "13,22",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "relative",
        "uri": "http://dbpedia.org/ontology/relative",
        "seq": "13,21",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "rugby player",
        "uri": "http://dbpedia.org/ontology/RugbyPlayer",
        "seq": "30,42",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "311",
    "question": "Name the other wine region of the grapes whose one of the wine region is Michigan?",
    "SerialNumber": "3740",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/wineRegion\u003e \u003chttp://dbpedia.org/resource/Michigan\u003e . ?x \u003chttp://dbpedia.org/ontology/wineRegion\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Grape\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Michigan",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Michigan",
        "seq": "73,81"
      }
    ],
    "id": "133932cb0d5041d89b82a8f25c8ac2fd",
    "predicate mapping": [
      {
        "label": "wine region",
        "uri": "http://dbpedia.org/ontology/wineRegion",
        "seq": "15,26",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "wine region",
        "uri": "http://dbpedia.org/ontology/wineRegion",
        "seq": "15,26",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "grape",
        "uri": "http://dbpedia.org/ontology/Grape",
        "seq": "34,39",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Who is the president of Carl Stokes nad Wyche Fowler ?",
    "SerialNumber": "3745",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Carl_Stokes\u003e \u003chttp://dbpedia.org/property/president\u003e ?uri. \u003chttp://dbpedia.org/resource/Wyche_Fowler\u003e \u003chttp://dbpedia.org/ontology/president\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Carl Stokes",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Carl_Stokes",
        "seq": "24,35"
      },
      {
        "label": "Wyche Fowler",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Wyche_Fowler",
        "seq": "40,52"
      }
    ],
    "id": "70bd3dd28bb14512abce694bb6240c86",
    "predicate mapping": [
      {
        "label": "president",
        "uri": "http://dbpedia.org/property/president",
        "seq": "11,20",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "president",
        "uri": "http://dbpedia.org/ontology/president",
        "seq": "11,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Does GeneWeb have the GPL license?",
    "SerialNumber": "3746",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/GeneWeb\u003e \u003chttp://dbpedia.org/property/license\u003e \u003chttp://dbpedia.org/resource/GNU_General_Public_License\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "GeneWeb",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/GeneWeb",
        "seq": "5,12"
      },
      {
        "label": "GPL",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/GNU_General_Public_License",
        "seq": "22,25"
      }
    ],
    "id": "97e02dcf44aa43c1b7cc7a7c155b118f",
    "predicate mapping": [
      {
        "label": "license",
        "uri": "http://dbpedia.org/property/license",
        "seq": "26,33",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Where is the headquarters of Sigma TV",
    "SerialNumber": "3749",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Sigma_TV\u003e \u003chttp://dbpedia.org/property/headquarters\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Sigma TV",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Sigma_TV",
        "seq": "29,37"
      }
    ],
    "id": "5fa7af236eac494f8047e5fd87a4c812",
    "predicate mapping": [
      {
        "label": "headquarters",
        "uri": "http://dbpedia.org/property/headquarters",
        "seq": "13,25",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the affiliation of Lumbini Bauddha University ?",
    "SerialNumber": "3750",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Lumbini_Bauddha_University\u003e \u003chttp://dbpedia.org/property/affiliation\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Lumbini Bauddha University",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Lumbini_Bauddha_University",
        "seq": "27,53"
      }
    ],
    "id": "0bac079708b34f219b751ade453305f4",
    "predicate mapping": [
      {
        "label": "affiliation",
        "uri": "http://dbpedia.org/property/affiliation",
        "seq": "12,23",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which city amongst the one which belongs to Boundary Dam was the palce for Soccer Bowl \u002776 ?",
    "SerialNumber": "3752",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Soccer_Bowl_\u002776\u003e \u003chttp://dbpedia.org/ontology/city\u003e ?uri. \u003chttp://dbpedia.org/resource/Boundary_Dam\u003e \u003chttp://dbpedia.org/property/owner\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Soccer Bowl \u002776",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Soccer_Bowl_\u002776",
        "seq": "75,90"
      },
      {
        "label": "Boundary Dam",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Boundary_Dam",
        "seq": "44,56"
      }
    ],
    "id": "32ca4c843ccc459ab2750036206e7aa0",
    "predicate mapping": [
      {
        "label": "city",
        "uri": "http://dbpedia.org/ontology/city",
        "seq": "6,10",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "belongs to",
        "uri": "http://dbpedia.org/property/owner",
        "seq": "33,43",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "What are the beverages whose origin is England?",
    "SerialNumber": "3753",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/origin\u003e \u003chttp://dbpedia.org/resource/England\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "England",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/England",
        "seq": "39,46"
      }
    ],
    "id": "9f6c919d926a4f7d953fbb687036e0df",
    "predicate mapping": [
      {
        "label": "origin",
        "uri": "http://dbpedia.org/ontology/origin",
        "seq": "29,35",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "List down the opponents of Frank Stilwell?",
    "SerialNumber": "3754",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Frank_Stilwell\u003e \u003chttp://dbpedia.org/ontology/opponent\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Frank Stilwell",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Frank_Stilwell",
        "seq": "27,41"
      }
    ],
    "id": "581ca8f786c64d5a986ef8d22049dc1f",
    "predicate mapping": [
      {
        "label": "opponent",
        "uri": "http://dbpedia.org/ontology/opponent",
        "seq": "14,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the label of I Pray on Christmas ?",
    "SerialNumber": "3755",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/I_Pray_on_Christmas\u003e \u003chttp://dbpedia.org/property/label\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "I Pray on Christmas",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/I_Pray_on_Christmas",
        "seq": "21,40"
      }
    ],
    "id": "97e6ac7f9f4e4ae4851eb5a188d00241",
    "predicate mapping": [
      {
        "label": "label",
        "uri": "http://dbpedia.org/property/label",
        "seq": "12,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Is Olyokma River the right tributary of Lena River?",
    "SerialNumber": "3759",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Lena_River\u003e \u003chttp://dbpedia.org/ontology/rightTributary\u003e \u003chttp://dbpedia.org/resource/Olyokma_River\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Lena River",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Lena_River",
        "seq": "40,50"
      },
      {
        "label": "Olyokma River",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Olyokma_River",
        "seq": "3,16"
      }
    ],
    "id": "1e980d04cc974b8bb501dffbdfd46d82",
    "predicate mapping": [
      {
        "label": "right tributary",
        "uri": "http://dbpedia.org/ontology/rightTributary",
        "seq": "21,36",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What is the debut team of the football player whose college is UCLA Bruins football?",
    "SerialNumber": "3760",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/college\u003e \u003chttp://dbpedia.org/resource/UCLA_Bruins_football\u003e . ?x \u003chttp://dbpedia.org/ontology/debutTeam\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/GridironFootballPlayer\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "UCLA Bruins football",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/UCLA_Bruins_football",
        "seq": "63,83"
      }
    ],
    "id": "1d66893d65934df1a71cb539b5a178c2",
    "predicate mapping": [
      {
        "label": "college",
        "uri": "http://dbpedia.org/ontology/college",
        "seq": "52,59",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "debut team",
        "uri": "http://dbpedia.org/ontology/debutTeam",
        "seq": "12,22",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "football",
        "uri": "http://dbpedia.org/ontology/GridironFootballPlayer",
        "seq": "30,38",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "What is the capital of the region which maintains the South Park Bridge ?",
    "SerialNumber": "3761",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/South_Park_Bridge\u003e \u003chttp://dbpedia.org/ontology/maintainedBy\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/countySeat\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Region\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "South Park Bridge",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/South_Park_Bridge",
        "seq": "54,71"
      }
    ],
    "id": "ba0406c42bb74f8994649087db84bd7f",
    "predicate mapping": [
      {
        "label": "maintains",
        "uri": "http://dbpedia.org/ontology/maintainedBy",
        "seq": "40,49",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "capital",
        "uri": "http://dbpedia.org/ontology/countySeat",
        "seq": "12,19",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "region",
        "uri": "http://dbpedia.org/ontology/Region",
        "seq": "27,33",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "7",
    "question": "Who has military branches are Colonial troops and Continental Army?",
    "SerialNumber": "3762",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/ontology/militaryBranch\u003e \u003chttp://dbpedia.org/resource/Colonial_troops\u003e . ?uri \u003chttp://dbpedia.org/ontology/militaryBranch\u003e \u003chttp://dbpedia.org/resource/Continental_Army\u003e . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Colonial troops",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Colonial_troops",
        "seq": "30,45"
      },
      {
        "label": "Continental Army",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Continental_Army",
        "seq": "50,66"
      }
    ],
    "id": "ed50cb6eb3d440e1a68c9f8eb6137382",
    "predicate mapping": [
      {
        "label": "military branch",
        "uri": "http://dbpedia.org/ontology/militaryBranch",
        "seq": "8,23",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "military branch",
        "uri": "http://dbpedia.org/ontology/militaryBranch",
        "seq": "8,23",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "102",
    "question": "In how many places has Don R. Berlin worked?",
    "SerialNumber": "3763",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { \u003chttp://dbpedia.org/resource/Don_R._Berlin\u003e \u003chttp://dbpedia.org/ontology/employer\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Don R. Berlin",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Don_R._Berlin",
        "seq": "23,36"
      }
    ],
    "id": "dc505bf849494cc0881eef0dc15f5ab4",
    "predicate mapping": [
      {
        "label": "places",
        "uri": "http://dbpedia.org/ontology/employer",
        "seq": "12,18",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Was Heinrich Himmler ever a commanders of Army Group Oberrhein?",
    "SerialNumber": "3764",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Army_Group_Oberrhein_(Germany)\u003e \u003chttp://dbpedia.org/property/notableCommanders\u003e \u003chttp://dbpedia.org/resource/Heinrich_Himmler\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Army Group Oberrhein",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Army_Group_Oberrhein_(Germany)",
        "seq": "42,62"
      },
      {
        "label": "Heinrich Himmler",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Heinrich_Himmler",
        "seq": "4,20"
      }
    ],
    "id": "cda67731753944ec9a75a63be0f893a1",
    "predicate mapping": [
      {
        "label": "commanders",
        "uri": "http://dbpedia.org/property/notableCommanders",
        "seq": "28,38",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the cause of death of Martino Martini ?",
    "SerialNumber": "3766",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Martino_Martini\u003e \u003chttp://dbpedia.org/ontology/deathCause\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Martino Martini",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Martino_Martini",
        "seq": "27,42"
      }
    ],
    "id": "278a4dae43ef4c9b888aaf3f0516d0a0",
    "predicate mapping": [
      {
        "label": "death cause",
        "uri": "http://dbpedia.org/ontology/deathCause",
        "seq": "-1,10",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the label of Next Thing ?",
    "SerialNumber": "3768",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Next_Thing\u003e \u003chttp://dbpedia.org/ontology/recordLabel\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Next Thing",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Next_Thing",
        "seq": "21,31"
      }
    ],
    "id": "c577d7b031fc49db89aed6ce9019e62b",
    "predicate mapping": [
      {
        "label": "label",
        "uri": "http://dbpedia.org/ontology/recordLabel",
        "seq": "12,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "Name the scientist whose doctoral supervisor\u0027s doctoral student is John Bowlby?",
    "SerialNumber": "3769",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/doctoralStudent\u003e \u003chttp://dbpedia.org/resource/John_Bowlby\u003e . ?uri \u003chttp://dbpedia.org/property/doctoralAdvisor\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Scientist\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "John Bowlby",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/John_Bowlby",
        "seq": "67,78"
      }
    ],
    "id": "cb2064da897547b2abcb8b409bdd0817",
    "predicate mapping": [
      {
        "label": "doctoral student",
        "uri": "http://dbpedia.org/ontology/doctoralStudent",
        "seq": "47,63",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "doctoral supervisor",
        "uri": "http://dbpedia.org/property/doctoralAdvisor",
        "seq": "25,44",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "scientist",
        "uri": "http://dbpedia.org/ontology/Scientist",
        "seq": "9,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "What are some other children of the father of Marvin Bush?",
    "SerialNumber": "3771",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/child\u003e \u003chttp://dbpedia.org/resource/Marvin_Bush\u003e . ?x \u003chttp://dbpedia.org/property/children\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Marvin Bush",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Marvin_Bush",
        "seq": "46,57"
      }
    ],
    "id": "7fbcd4b51ed446329ea96a577f9cd906",
    "predicate mapping": [
      {
        "label": "children",
        "uri": "http://dbpedia.org/ontology/child",
        "seq": "20,28",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "children",
        "uri": "http://dbpedia.org/property/children",
        "seq": "20,28",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "307",
    "question": "Which  writer has childrens named Mother Mary Alphonsa and Julian Hawthorne?",
    "SerialNumber": "3772",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/property/children\u003e \u003chttp://dbpedia.org/resource/Mother_Mary_Alphonsa\u003e . ?uri \u003chttp://dbpedia.org/property/children\u003e \u003chttp://dbpedia.org/resource/Julian_Hawthorne\u003e . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Writer\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Mother Mary Alphonsa",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Mother_Mary_Alphonsa",
        "seq": "34,54"
      },
      {
        "label": "Julian Hawthorne",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Julian_Hawthorne",
        "seq": "59,75"
      }
    ],
    "id": "62dd4ce12cbb45e781aca55e4b3b29bd",
    "predicate mapping": [
      {
        "label": "has children",
        "uri": "http://dbpedia.org/property/children",
        "seq": "14,26",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "has children",
        "uri": "http://dbpedia.org/property/children",
        "seq": "14,26",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "writer",
        "uri": "http://dbpedia.org/ontology/Writer",
        "seq": "7,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "11",
    "question": "List all the schools of the rugby player whose went to school named Pietermaritzburg ?",
    "SerialNumber": "3773",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/school\u003e \u003chttp://dbpedia.org/resource/Pietermaritzburg\u003e . ?x \u003chttp://dbpedia.org/property/school\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Pietermaritzburg",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Pietermaritzburg",
        "seq": "68,84"
      }
    ],
    "id": "d71aec977ff14634a62b74d34fb64ae1",
    "predicate mapping": [
      {
        "label": "school",
        "uri": "http://dbpedia.org/property/school",
        "seq": "13,19",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "school",
        "uri": "http://dbpedia.org/property/school",
        "seq": "13,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What are some other products of the banks which makes Postbanken?",
    "SerialNumber": "3774",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/product\u003e \u003chttp://dbpedia.org/resource/Postbanken\u003e . ?x \u003chttp://dbpedia.org/property/products\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Bank\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Postbanken",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Postbanken",
        "seq": "54,64"
      }
    ],
    "id": "b331453bfb4641c399c599377904e4a3",
    "predicate mapping": [
      {
        "label": "product",
        "uri": "http://dbpedia.org/ontology/product",
        "seq": "20,27",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "products",
        "uri": "http://dbpedia.org/property/products",
        "seq": "20,28",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "bank",
        "uri": "http://dbpedia.org/ontology/Bank",
        "seq": "36,40",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "What are the things whose mascots are from the class Eutheria?",
    "SerialNumber": "3776",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/class\u003e \u003chttp://dbpedia.org/resource/Eutheria\u003e . ?uri \u003chttp://dbpedia.org/property/mascot\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Eutheria",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Eutheria",
        "seq": "53,61"
      }
    ],
    "id": "1c337899653549fb8c5f5765a394b9bb",
    "predicate mapping": [
      {
        "label": "class",
        "uri": "http://dbpedia.org/ontology/class",
        "seq": "47,52",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "mascot",
        "uri": "http://dbpedia.org/property/mascot",
        "seq": "26,32",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "108",
    "question": "What is the total number of fictional characters whose created by  Greg Daniels and series is The Office (U.S. TV series)?",
    "SerialNumber": "3777",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/ontology/creator\u003e \u003chttp://dbpedia.org/resource/Greg_Daniels\u003e . ?uri \u003chttp://dbpedia.org/ontology/series\u003e \u003chttp://dbpedia.org/resource/The_Office_(U.S._TV_series)\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Greg Daniels",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Greg_Daniels",
        "seq": "67,79"
      },
      {
        "label": "The Office (U.S. TV series)",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Office_(U.S._TV_series)",
        "seq": "94,121"
      }
    ],
    "id": "b06e3b9df6474551b29eda51267fbaca",
    "predicate mapping": [
      {
        "label": "created by",
        "uri": "http://dbpedia.org/ontology/creator",
        "seq": "55,65",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "series",
        "uri": "http://dbpedia.org/ontology/series",
        "seq": "84,90",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Name the are where South side Elevated Railroad operate and has place of birth as Arthur A. Ross ?",
    "SerialNumber": "3778",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/South_Side_Elevated_Railroad\u003e \u003chttp://dbpedia.org/ontology/operatedBy\u003e ?uri. \u003chttp://dbpedia.org/resource/Arthur_A._Ross\u003e \u003chttp://dbpedia.org/property/placeOfBirth\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "South side Elevated Railroad",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/South_Side_Elevated_Railroad",
        "seq": "19,47"
      },
      {
        "label": "Arthur A. Ross",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Arthur_A._Ross",
        "seq": "82,96"
      }
    ],
    "id": "277ae34827a94a64bfda52a29b80431f",
    "predicate mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/ontology/operatedBy",
        "seq": "0,0",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "place of birth",
        "uri": "http://dbpedia.org/property/placeOfBirth",
        "seq": "64,78",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Fairfield, Connecticut is hometown to which persons?",
    "SerialNumber": "3779",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/hometown\u003e \u003chttp://dbpedia.org/resource/Fairfield,_Connecticut\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Fairfield, Connecticut",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Fairfield,_Connecticut",
        "seq": "0,22"
      }
    ],
    "id": "d9c86b00d0404514a18fd6635d8b893d",
    "predicate mapping": [
      {
        "label": "hometown",
        "uri": "http://dbpedia.org/ontology/hometown",
        "seq": "26,34",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/Person",
        "seq": "44,50",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which borough of the Corringham railway station is also the local authority of Buckhurst Hill County High School ?",
    "SerialNumber": "3780",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Corringham_railway_station\u003e \u003chttp://dbpedia.org/property/borough\u003e ?uri. \u003chttp://dbpedia.org/resource/Buckhurst_Hill_County_High_School\u003e \u003chttp://dbpedia.org/ontology/localAuthority\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Corringham railway station",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Corringham_railway_station",
        "seq": "21,47"
      },
      {
        "label": "Buckhurst Hill County High School",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Buckhurst_Hill_County_High_School",
        "seq": "79,112"
      }
    ],
    "id": "3b75c4aabe0748088571682a0168ab4e",
    "predicate mapping": [
      {
        "label": "borough",
        "uri": "http://dbpedia.org/property/borough",
        "seq": "6,13",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "local authority",
        "uri": "http://dbpedia.org/ontology/localAuthority",
        "seq": "60,75",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which administrative region leader is Sukhumbhand Paribatra and was founded by  Rama I?",
    "SerialNumber": "3782",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/leaderName\u003e \u003chttp://dbpedia.org/resource/Sukhumbhand_Paribatra\u003e . ?uri \u003chttp://dbpedia.org/ontology/founder\u003e \u003chttp://dbpedia.org/resource/Rama_I\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/AdministrativeRegion\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Sukhumbhand Paribatra",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Sukhumbhand_Paribatra",
        "seq": "38,59"
      },
      {
        "label": "Rama I",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Rama_I",
        "seq": "80,86"
      }
    ],
    "id": "70a95d95a68742c9b70b365d5d2d2fa9",
    "predicate mapping": [
      {
        "label": "leader",
        "uri": "http://dbpedia.org/ontology/leaderName",
        "seq": "28,34",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "was founded by",
        "uri": "http://dbpedia.org/ontology/founder",
        "seq": "64,78",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "administrative region",
        "uri": "http://dbpedia.org/ontology/AdministrativeRegion",
        "seq": "6,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who owns the bridge which crosses the Orange Line of MBTA?",
    "SerialNumber": "3783",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/crosses\u003e \u003chttp://dbpedia.org/resource/Orange_Line_(MBTA)\u003e . ?x \u003chttp://dbpedia.org/property/owner\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Bridge\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Orange Line",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Orange_Line_(MBTA)",
        "seq": "38,49"
      }
    ],
    "id": "009f2e39c91d49f1b6d9410b3fb2b5da",
    "predicate mapping": [
      {
        "label": "crosses",
        "uri": "http://dbpedia.org/property/crosses",
        "seq": "26,33",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "owns",
        "uri": "http://dbpedia.org/property/owner",
        "seq": "4,8",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "bridge",
        "uri": "http://dbpedia.org/ontology/Bridge",
        "seq": "13,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who designed Oddamavadi Bridge?",
    "SerialNumber": "3784",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Oddamavadi_Bridge\u003e \u003chttp://dbpedia.org/property/designer\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Oddamavadi Bridge",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Oddamavadi_Bridge",
        "seq": "13,30"
      }
    ],
    "id": "cc67a19255ce4bf6938888a64e0c3b19",
    "predicate mapping": [
      {
        "label": "designed",
        "uri": "http://dbpedia.org/property/designer",
        "seq": "4,12",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What are the television shows whose company is European Broadcasting Union?",
    "SerialNumber": "3785",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/company\u003e \u003chttp://dbpedia.org/resource/European_Broadcasting_Union\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "European Broadcasting Union",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/European_Broadcasting_Union",
        "seq": "47,74"
      }
    ],
    "id": "026eb82f924542c5be524f0aee58ff2f",
    "predicate mapping": [
      {
        "label": "company",
        "uri": "http://dbpedia.org/property/company",
        "seq": "36,43",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "13,28",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Is Luigi Brugnaro the mayor of Venice?",
    "SerialNumber": "3786",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Venice\u003e \u003chttp://dbpedia.org/property/mayor\u003e \u003chttp://dbpedia.org/resource/Luigi_Brugnaro\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Venice",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Venice",
        "seq": "31,37"
      },
      {
        "label": "Luigi Brugnaro",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Luigi_Brugnaro",
        "seq": "3,17"
      }
    ],
    "id": "4046f69e116b4d889fcf739e394d42a9",
    "predicate mapping": [
      {
        "label": "mayor",
        "uri": "http://dbpedia.org/property/mayor",
        "seq": "22,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Is joel quenneville the main coach of Chicago Blackhawks?",
    "SerialNumber": "3791",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Chicago_Blackhawks\u003e \u003chttp://dbpedia.org/property/headCoach\u003e \u003chttp://dbpedia.org/resource/Joel_Quenneville\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Chicago Blackhawks",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Chicago_Blackhawks",
        "seq": "38,56"
      },
      {
        "label": "joel quenneville",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Joel_Quenneville",
        "seq": "3,19"
      }
    ],
    "id": "2abf11e1cda543c4af0fb7aae25e6563",
    "predicate mapping": [
      {
        "label": "coach",
        "uri": "http://dbpedia.org/property/headCoach",
        "seq": "29,34",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "Who developed the software for the operating system of Macintosh Quadra 660AV ?",
    "SerialNumber": "3796",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Macintosh_Quadra_660AV\u003e \u003chttp://dbpedia.org/ontology/operatingSystem\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/developer\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Software\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Macintosh Quadra 660AV",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Macintosh_Quadra_660AV",
        "seq": "55,77"
      }
    ],
    "id": "d50016797b5a4629bbadbde2ff37db36",
    "predicate mapping": [
      {
        "label": "operating system",
        "uri": "http://dbpedia.org/ontology/operatingSystem",
        "seq": "35,51",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "developed",
        "uri": "http://dbpedia.org/ontology/developer",
        "seq": "4,13",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "software",
        "uri": "http://dbpedia.org/ontology/Software",
        "seq": "18,26",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "307",
    "question": "Who is the writer with notable works like Adventures of Huckleberry Finn and The Adventures of Tom Sawyer?",
    "SerialNumber": "3797",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/ontology/notableWork\u003e \u003chttp://dbpedia.org/resource/Adventures_of_Huckleberry_Finn\u003e . ?uri \u003chttp://dbpedia.org/ontology/notableWork\u003e \u003chttp://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer\u003e . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Writer\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Adventures of Huckleberry Finn",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Adventures_of_Huckleberry_Finn",
        "seq": "42,72"
      },
      {
        "label": "The Adventures of Tom Sawyer",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer",
        "seq": "77,105"
      }
    ],
    "id": "7cf3cea4cd174416bb524f55c19cdcf9",
    "predicate mapping": [
      {
        "label": "notable work",
        "uri": "http://dbpedia.org/ontology/notableWork",
        "seq": "23,35",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "notable work",
        "uri": "http://dbpedia.org/ontology/notableWork",
        "seq": "23,35",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "writer",
        "uri": "http://dbpedia.org/ontology/Writer",
        "seq": "11,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who were the commanders during the events which took place in Sandusky County, Ohio?",
    "SerialNumber": "3803",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/place\u003e \u003chttp://dbpedia.org/resource/Sandusky_County,_Ohio\u003e . ?x \u003chttp://dbpedia.org/ontology/commander\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Event\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Sandusky County, Ohio",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Sandusky_County,_Ohio",
        "seq": "62,83"
      }
    ],
    "id": "d59ce804d5d8423f926b5278793e6750",
    "predicate mapping": [
      {
        "label": "place",
        "uri": "http://dbpedia.org/ontology/place",
        "seq": "53,58",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "commander",
        "uri": "http://dbpedia.org/ontology/commander",
        "seq": "13,22",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "event",
        "uri": "http://dbpedia.org/ontology/Event",
        "seq": "35,40",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What religion is practiced by Hirunika Premachandra, and many others south asians in Hong Kong?",
    "SerialNumber": "3804",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/South_Asians_in_Hong_Kong\u003e \u003chttp://dbpedia.org/ontology/religion\u003e ?uri. \u003chttp://dbpedia.org/resource/Hirunika_Premachandra\u003e \u003chttp://dbpedia.org/property/religion\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "south asians in Hong Kong",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/South_Asians_in_Hong_Kong",
        "seq": "69,94"
      },
      {
        "label": "Hirunika Premachandra",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Hirunika_Premachandra",
        "seq": "30,51"
      }
    ],
    "id": "032d3755146e42a3be21305ce7766f9a",
    "predicate mapping": [
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion",
        "seq": "5,13",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/property/religion",
        "seq": "5,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "What are the movies whose editor died in Westwood, Los Angeles?",
    "SerialNumber": "3805",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/deathPlace\u003e \u003chttp://dbpedia.org/resource/Westwood,_Los_Angeles\u003e . ?uri \u003chttp://dbpedia.org/ontology/editing\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Westwood, Los Angeles",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Westwood,_Los_Angeles",
        "seq": "41,62"
      }
    ],
    "id": "35bf7919ccd9471fb67f5bd38ff7fbc7",
    "predicate mapping": [
      {
        "label": "died in",
        "uri": "http://dbpedia.org/ontology/deathPlace",
        "seq": "33,40",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "editor",
        "uri": "http://dbpedia.org/ontology/editing",
        "seq": "26,32",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "List all that flows into the north sea?",
    "SerialNumber": "3809",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/North_Sea\u003e \u003chttp://dbpedia.org/property/inflow\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "north sea",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/North_Sea",
        "seq": "29,38"
      }
    ],
    "id": "f6e3042fcf724895aafc057cd69770c5",
    "predicate mapping": [
      {
        "label": "flows",
        "uri": "http://dbpedia.org/property/inflow",
        "seq": "14,19",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "List the relatives of Lyubov Dostoyevskaya ?",
    "SerialNumber": "3810",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Lyubov_Dostoyevskaya\u003e \u003chttp://dbpedia.org/property/relatives\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Lyubov Dostoyevskaya",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Lyubov_Dostoyevskaya",
        "seq": "22,42"
      }
    ],
    "id": "359b620b592a44929007db93e8aecd72",
    "predicate mapping": [
      {
        "label": "relatives",
        "uri": "http://dbpedia.org/property/relatives",
        "seq": "9,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "311",
    "question": "List all the record label distributed by the distributor of Zune ?",
    "SerialNumber": "3812",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/distributor\u003e \u003chttp://dbpedia.org/resource/Zune\u003e . ?x \u003chttp://dbpedia.org/property/distributor\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/RecordLabel\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Zune",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Zune",
        "seq": "60,64"
      }
    ],
    "id": "9fe4e52ceac346d898b87b58552de0de",
    "predicate mapping": [
      {
        "label": "distributed by",
        "uri": "http://dbpedia.org/property/distributor",
        "seq": "26,40",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "distributed by",
        "uri": "http://dbpedia.org/property/distributor",
        "seq": "26,40",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "record label",
        "uri": "http://dbpedia.org/ontology/RecordLabel",
        "seq": "13,25",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "401",
    "question": "Count the movies in Swedish language?",
    "SerialNumber": "3813",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/property/language\u003e \u003chttp://dbpedia.org/resource/Swedish_language\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Swedish language",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Swedish_language",
        "seq": "20,36"
      }
    ],
    "id": "6bd942c2f0cd4533bdc21957bc6bd75f",
    "predicate mapping": [
      {
        "label": "language",
        "uri": "http://dbpedia.org/property/language",
        "seq": "28,36",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "10,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the artist of Brad Paisley discography ?",
    "SerialNumber": "3814",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Brad_Paisley_discography\u003e \u003chttp://dbpedia.org/property/artist\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Brad Paisley discography",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Brad_Paisley_discography",
        "seq": "19,43"
      }
    ],
    "id": "814cd09a47ce48cea2ad776e1e753a16",
    "predicate mapping": [
      {
        "label": "artist",
        "uri": "http://dbpedia.org/property/artist",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Name the  borough of the Bordesley railway station which is also the route end of the Birmingham and Oxford Junction Railway?",
    "SerialNumber": "3817",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Bordesley_railway_station\u003e \u003chttp://dbpedia.org/property/borough\u003e ?uri. \u003chttp://dbpedia.org/resource/Birmingham_and_Oxford_Junction_Railway\u003e \u003chttp://dbpedia.org/ontology/routeEnd\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Bordesley railway station",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Bordesley_railway_station",
        "seq": "25,50"
      },
      {
        "label": "Birmingham and Oxford Junction Railway",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Birmingham_and_Oxford_Junction_Railway",
        "seq": "86,124"
      }
    ],
    "id": "b0da89aed7ff4c92808e7fc7e914f868",
    "predicate mapping": [
      {
        "label": "borough",
        "uri": "http://dbpedia.org/property/borough",
        "seq": "10,17",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "route end",
        "uri": "http://dbpedia.org/ontology/routeEnd",
        "seq": "69,78",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "311",
    "question": "List all discipline of the journals whose one of the discipline is Cerebral blood flow ?",
    "SerialNumber": "3818",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/academicDiscipline\u003e \u003chttp://dbpedia.org/resource/Cerebral_blood_flow\u003e . ?x \u003chttp://dbpedia.org/ontology/academicDiscipline\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/AcademicJournal\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Cerebral blood flow",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Cerebral_blood_flow",
        "seq": "67,86"
      }
    ],
    "id": "017a115aacc2455e86ab1e3924f75e23",
    "predicate mapping": [
      {
        "label": "discipline",
        "uri": "http://dbpedia.org/ontology/academicDiscipline",
        "seq": "9,19",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "discipline",
        "uri": "http://dbpedia.org/ontology/academicDiscipline",
        "seq": "9,19",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "journals",
        "uri": "http://dbpedia.org/ontology/AcademicJournal",
        "seq": "27,35",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Matthew kane and Park rankin are citizens of which country?",
    "SerialNumber": "3820",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Matthew_Kane_(actor)\u003e \u003chttp://dbpedia.org/ontology/citizenship\u003e ?uri. \u003chttp://dbpedia.org/resource/Park_Rankin\u003e \u003chttp://dbpedia.org/ontology/citizenship\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Matthew kane",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Matthew_Kane_(actor)",
        "seq": "0,12"
      },
      {
        "label": "Park rankin",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Park_Rankin",
        "seq": "17,28"
      }
    ],
    "id": "24dffcdf54ea418ca45309b87e1089d3",
    "predicate mapping": [
      {
        "label": "citizens",
        "uri": "http://dbpedia.org/ontology/citizenship",
        "seq": "33,41",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "citizens",
        "uri": "http://dbpedia.org/ontology/citizenship",
        "seq": "33,41",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "8",
    "question": "Whose associate is Publius Servilius Vatia Isauricus and has predecessor as Lucius Cornelius Lentulus Crus?",
    "SerialNumber": "3823",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/associate\u003e \u003chttp://dbpedia.org/resource/Publius_Servilius_Vatia_Isauricus_(consul_48_BC)\u003e . ?uri \u003chttp://dbpedia.org/ontology/predecessor\u003e \u003chttp://dbpedia.org/resource/Lucius_Cornelius_Lentulus_Crus\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Publius Servilius Vatia Isauricus",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Publius_Servilius_Vatia_Isauricus_(consul_48_BC)",
        "seq": "19,52"
      },
      {
        "label": "Lucius Cornelius Lentulus Crus",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Lucius_Cornelius_Lentulus_Crus",
        "seq": "76,106"
      }
    ],
    "id": "1f3c3fc3666b4644bccdab14b6502a1c",
    "predicate mapping": [
      {
        "label": "associate",
        "uri": "http://dbpedia.org/ontology/associate",
        "seq": "6,15",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "predecessor",
        "uri": "http://dbpedia.org/ontology/predecessor",
        "seq": "61,72",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Who is the producer of the device which is the operating system of Now TV  ?",
    "SerialNumber": "3824",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Now_TV_(UK)\u003e \u003chttp://dbpedia.org/ontology/operatingSystem\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/manufacturer\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Now TV",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Now_TV_(UK)",
        "seq": "67,73"
      }
    ],
    "id": "544710c8a2214cd9acd7c3d8f6426535",
    "predicate mapping": [
      {
        "label": "operating system",
        "uri": "http://dbpedia.org/ontology/operatingSystem",
        "seq": "47,63",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "producer",
        "uri": "http://dbpedia.org/ontology/manufacturer",
        "seq": "11,19",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Which were the philosophers whose primary interest was Natural philosophy?",
    "SerialNumber": "3829",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/mainInterests\u003e \u003chttp://dbpedia.org/resource/Natural_philosophy\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Philosopher\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Natural philosophy",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Natural_philosophy",
        "seq": "55,73"
      }
    ],
    "id": "12be635cc767416c9654991d6847a5a9",
    "predicate mapping": [
      {
        "label": "interest",
        "uri": "http://dbpedia.org/property/mainInterests",
        "seq": "42,50",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "philosopher",
        "uri": "http://dbpedia.org/ontology/Philosopher",
        "seq": "15,26",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Who is relative of the people died in Bergen-Belsen concentration camp ?",
    "SerialNumber": "3831",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/deathPlace\u003e \u003chttp://dbpedia.org/resource/Bergen-Belsen_concentration_camp\u003e . ?x \u003chttp://dbpedia.org/ontology/relative\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Bergen-Belsen concentration camp",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Bergen-Belsen_concentration_camp",
        "seq": "38,70"
      }
    ],
    "id": "fdc1a6168b3544c294fcb5c5d4bd3de5",
    "predicate mapping": [
      {
        "label": "died in",
        "uri": "http://dbpedia.org/property/deathPlace",
        "seq": "30,37",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "relative",
        "uri": "http://dbpedia.org/ontology/relative",
        "seq": "7,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Was the Lotuspool Records distributed by Napster?",
    "SerialNumber": "3834",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Lotuspool_Records\u003e \u003chttp://dbpedia.org/ontology/distributingLabel\u003e \u003chttp://dbpedia.org/resource/Napster\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Lotuspool Records",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Lotuspool_Records",
        "seq": "8,25"
      },
      {
        "label": "Napster",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Napster",
        "seq": "41,48"
      }
    ],
    "id": "0b0f5461ad2f46cca3c708ffefeac368",
    "predicate mapping": [
      {
        "label": "distributed",
        "uri": "http://dbpedia.org/ontology/distributingLabel",
        "seq": "26,37",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "List all the artist of albums which have been produced by Stephen Kozmeniuk ?",
    "SerialNumber": "3835",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/producer\u003e \u003chttp://dbpedia.org/resource/Stephen_Kozmeniuk\u003e . ?x \u003chttp://dbpedia.org/property/artist\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Album\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Stephen Kozmeniuk",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Stephen_Kozmeniuk",
        "seq": "58,75"
      }
    ],
    "id": "07124083be6249ff961e6ea104195239",
    "predicate mapping": [
      {
        "label": "produced",
        "uri": "http://dbpedia.org/property/producer",
        "seq": "46,54",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "artist",
        "uri": "http://dbpedia.org/property/artist",
        "seq": "13,19",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "album",
        "uri": "http://dbpedia.org/ontology/Album",
        "seq": "23,28",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Which sports exist in the universities whose president is Emanuel de Guzman?",
    "SerialNumber": "3838",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/president\u003e \u003chttp://dbpedia.org/resource/Emanuel_de_Guzman\u003e . ?x \u003chttp://dbpedia.org/ontology/sport\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/University\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Emanuel de Guzman",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Emanuel_de_Guzman",
        "seq": "58,75"
      }
    ],
    "id": "d3ecdd7378e84976bf9901e34d96544d",
    "predicate mapping": [
      {
        "label": "president",
        "uri": "http://dbpedia.org/ontology/president",
        "seq": "45,54",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "sport",
        "uri": "http://dbpedia.org/ontology/sport",
        "seq": "6,11",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "universities",
        "uri": "http://dbpedia.org/ontology/University",
        "seq": "26,38",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What faiths are followed by the relatives of Meadow Soprano?",
    "SerialNumber": "3841",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Meadow_Soprano\u003e \u003chttp://dbpedia.org/ontology/relative\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/religion\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Meadow Soprano",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Meadow_Soprano",
        "seq": "45,59"
      }
    ],
    "id": "6ede8437feee4a37a3076b1deb866abd",
    "predicate mapping": [
      {
        "label": "relative",
        "uri": "http://dbpedia.org/ontology/relative",
        "seq": "32,40",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "faith",
        "uri": "http://dbpedia.org/ontology/religion",
        "seq": "5,10",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the purpose of Maharashtra Chess Association ?",
    "SerialNumber": "3842",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Maharashtra_Chess_Association\u003e \u003chttp://dbpedia.org/property/purpose\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Maharashtra Chess Association",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Maharashtra_Chess_Association",
        "seq": "23,52"
      }
    ],
    "id": "1b61bd94b11c4641a1bb7d0601c0fdb5",
    "predicate mapping": [
      {
        "label": "purpose",
        "uri": "http://dbpedia.org/property/purpose",
        "seq": "12,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the address of Federal Reserve Bank Building?",
    "SerialNumber": "3843",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Federal_Reserve_Bank_Building_(Seattle)\u003e \u003chttp://dbpedia.org/property/address\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Federal Reserve Bank Building",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Federal_Reserve_Bank_Building_(Seattle)",
        "seq": "23,52"
      }
    ],
    "id": "b9b3fd57293c4776b2e52370d4d5c3be",
    "predicate mapping": [
      {
        "label": "address",
        "uri": "http://dbpedia.org/property/address",
        "seq": "12,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "What is the common official residence of Lezlee Westine and Arnold W. Braswell?",
    "SerialNumber": "3845",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Lezlee_Westine\u003e \u003chttp://dbpedia.org/property/residence\u003e ?uri. \u003chttp://dbpedia.org/resource/Arnold_W._Braswell\u003e \u003chttp://dbpedia.org/property/residence\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Lezlee Westine",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Lezlee_Westine",
        "seq": "41,55"
      },
      {
        "label": "Arnold W. Braswell",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Arnold_W._Braswell",
        "seq": "60,78"
      }
    ],
    "id": "2d38fec5592147719347d2df292f9cc2",
    "predicate mapping": [
      {
        "label": "residence",
        "uri": "http://dbpedia.org/property/residence",
        "seq": "28,37",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "residence",
        "uri": "http://dbpedia.org/property/residence",
        "seq": "28,37",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Louis Dunbar is the coach of which basketball team ?",
    "SerialNumber": "3846",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/coach\u003e \u003chttp://dbpedia.org/resource/Louis_Dunbar\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/BasketballTeam\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Louis Dunbar",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Louis_Dunbar",
        "seq": "0,12"
      }
    ],
    "id": "d6eb5633d2524379863ad29551cf0089",
    "predicate mapping": [
      {
        "label": "coach",
        "uri": "http://dbpedia.org/property/coach",
        "seq": "20,25",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "basketball team",
        "uri": "http://dbpedia.org/ontology/BasketballTeam",
        "seq": "35,50",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Do the White Plains Road lie in the Bronx county?",
    "SerialNumber": "3847",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/White_Plains_Road\u003e \u003chttp://dbpedia.org/property/counties\u003e \u003chttp://dbpedia.org/resource/The_Bronx\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "White Plains Road",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/White_Plains_Road",
        "seq": "7,24"
      },
      {
        "label": "Bronx county",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/The_Bronx",
        "seq": "36,48"
      }
    ],
    "id": "dd780a7e6bf64bb79d2fa4c410ffed93",
    "predicate mapping": [
      {
        "label": "county",
        "uri": "http://dbpedia.org/property/counties",
        "seq": "42,48",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which river flows through Hudson Highlands State park and also through Troy, New york ?",
    "SerialNumber": "3848",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Hudson_Highlands_State_Park\u003e \u003chttp://dbpedia.org/property/river\u003e ?uri. \u003chttp://dbpedia.org/resource/Troy,_New_York\u003e \u003chttp://dbpedia.org/ontology/river\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Hudson Highlands State park",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Hudson_Highlands_State_Park",
        "seq": "26,53"
      },
      {
        "label": "Troy, New york",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Troy,_New_York",
        "seq": "71,85"
      }
    ],
    "id": "126d01b992474e93bfe3b2d990e937a9",
    "predicate mapping": [
      {
        "label": "river",
        "uri": "http://dbpedia.org/property/river",
        "seq": "6,11",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/river",
        "seq": "6,11",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Is US Navy garrisoned at Arlington County, Virginia?",
    "SerialNumber": "3849",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/United_States_Navy\u003e \u003chttp://dbpedia.org/property/garrison\u003e \u003chttp://dbpedia.org/resource/Arlington_County,_Virginia\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "US Navy",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/United_States_Navy",
        "seq": "3,10"
      },
      {
        "label": "Arlington County, Virginia",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Arlington_County,_Virginia",
        "seq": "25,51"
      }
    ],
    "id": "fab4c2ac4f1446c4a58ec053f26940c8",
    "predicate mapping": [
      {
        "label": "garrison",
        "uri": "http://dbpedia.org/property/garrison",
        "seq": "11,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which university attended by Franklin W. Olin was also the alma mater of Patty Lin ?",
    "SerialNumber": "3850",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Patty_Lin\u003e \u003chttp://dbpedia.org/property/almaMater\u003e ?uri. \u003chttp://dbpedia.org/resource/Franklin_W._Olin\u003e \u003chttp://dbpedia.org/property/education\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Patty Lin",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Patty_Lin",
        "seq": "73,82"
      },
      {
        "label": "Franklin W. Olin",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Franklin_W._Olin",
        "seq": "29,45"
      }
    ],
    "id": "9bc8183073c74276b2a202d642cd74d7",
    "predicate mapping": [
      {
        "label": "university attended",
        "uri": "http://dbpedia.org/property/almaMater",
        "seq": "6,25",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "university attended",
        "uri": "http://dbpedia.org/property/education",
        "seq": "6,25",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What river is it whose source is Dowra?",
    "SerialNumber": "3851",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/sourceLocation\u003e \u003chttp://dbpedia.org/resource/Dowra\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/River\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Dowra",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Dowra",
        "seq": "33,38"
      }
    ],
    "id": "342858bf3dc442ba9b8a65d63c8ece94",
    "predicate mapping": [
      {
        "label": "source",
        "uri": "http://dbpedia.org/property/sourceLocation",
        "seq": "23,29",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River",
        "seq": "5,10",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Who was the voice actor of allen walker also gave voice to kimihiro watanuki?",
    "SerialNumber": "3852",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Allen_Walker\u003e \u003chttp://dbpedia.org/ontology/voice\u003e ?uri. \u003chttp://dbpedia.org/resource/Kimihiro_Watanuki\u003e \u003chttp://dbpedia.org/ontology/voice\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "allen walker",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Allen_Walker",
        "seq": "27,39"
      },
      {
        "label": "kimihiro watanuki",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Kimihiro_Watanuki",
        "seq": "59,76"
      }
    ],
    "id": "4e89ed7d56bd4a77bb72e76dbb6feb5c",
    "predicate mapping": [
      {
        "label": "voice",
        "uri": "http://dbpedia.org/ontology/voice",
        "seq": "12,17",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "voice",
        "uri": "http://dbpedia.org/ontology/voice",
        "seq": "12,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Name the company who owns HBO division?",
    "SerialNumber": "3854",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/divisions\u003e \u003chttp://dbpedia.org/resource/HBO\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Company\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "HBO",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/HBO",
        "seq": "26,29"
      }
    ],
    "id": "811423e6b0814c93a5bb6474579e9557",
    "predicate mapping": [
      {
        "label": "division",
        "uri": "http://dbpedia.org/property/divisions",
        "seq": "30,38",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company",
        "seq": "9,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the launch site of Aquarius (rocket) ?",
    "SerialNumber": "3855",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Aquarius_(rocket)\u003e \u003chttp://dbpedia.org/ontology/launchSite\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Aquarius (rocket)",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Aquarius_(rocket)",
        "seq": "27,44"
      }
    ],
    "id": "78fb0be825cc4440b068e0a54c769e23",
    "predicate mapping": [
      {
        "label": "launch site",
        "uri": "http://dbpedia.org/ontology/launchSite",
        "seq": "12,23",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name a writer who was educated in Saint Petersburg and had a son named Lyubov Dostoyevskaya ?",
    "SerialNumber": "3857",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/education\u003e \u003chttp://dbpedia.org/resource/Saint_Petersburg\u003e . ?uri \u003chttp://dbpedia.org/ontology/child\u003e \u003chttp://dbpedia.org/resource/Lyubov_Dostoyevskaya\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Writer\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Saint Petersburg",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Saint_Petersburg",
        "seq": "34,50"
      },
      {
        "label": "Lyubov Dostoyevskaya",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Lyubov_Dostoyevskaya",
        "seq": "71,91"
      }
    ],
    "id": "6624d8c2fb524ee1ac7268162e60b577",
    "predicate mapping": [
      {
        "label": "edu",
        "uri": "http://dbpedia.org/ontology/education",
        "seq": "22,25",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "son",
        "uri": "http://dbpedia.org/ontology/child",
        "seq": "61,64",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "writer",
        "uri": "http://dbpedia.org/ontology/Writer",
        "seq": "7,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the source location of Thornton Creek ?",
    "SerialNumber": "3858",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Thornton_Creek\u003e \u003chttp://dbpedia.org/property/sourceLocation\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Thornton Creek",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Thornton_Creek",
        "seq": "31,45"
      }
    ],
    "id": "6714d1031ae14213adee9f44469e2854",
    "predicate mapping": [
      {
        "label": "source location",
        "uri": "http://dbpedia.org/property/sourceLocation",
        "seq": "12,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "What are shows whose theme music composer\u0027s home town is New York?",
    "SerialNumber": "3859",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/hometown\u003e \u003chttp://dbpedia.org/resource/New_York\u003e . ?uri \u003chttp://dbpedia.org/property/themeMusicComposer\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "New York",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/New_York",
        "seq": "57,65"
      }
    ],
    "id": "c1c5e91af8da4014b4bcf17b0918ff88",
    "predicate mapping": [
      {
        "label": "home town",
        "uri": "http://dbpedia.org/ontology/hometown",
        "seq": "44,53",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "theme music composer",
        "uri": "http://dbpedia.org/property/themeMusicComposer",
        "seq": "21,41",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "9,14",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "List the magazines published by Playbow Enterprises ?",
    "SerialNumber": "3862",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/publisher\u003e \u003chttp://dbpedia.org/resource/Playboy_Enterprises\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Magazine\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Playbow Enterprises",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Playboy_Enterprises",
        "seq": "32,51"
      }
    ],
    "id": "a1ee8ce5878d45029ef38e6d7fbb5483",
    "predicate mapping": [
      {
        "label": "published",
        "uri": "http://dbpedia.org/ontology/publisher",
        "seq": "19,28",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "magazine",
        "uri": "http://dbpedia.org/ontology/Magazine",
        "seq": "9,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which appliance\u0027s CPU is Cell (microprocessor) and predecessor is PlayStation 2?",
    "SerialNumber": "3866",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/cpu\u003e \u003chttp://dbpedia.org/resource/Cell_(microprocessor)\u003e . ?uri \u003chttp://dbpedia.org/ontology/predecessor\u003e \u003chttp://dbpedia.org/resource/PlayStation_2\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/InformationAppliance\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Cell (microprocessor)",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Cell_(microprocessor)",
        "seq": "25,46"
      },
      {
        "label": "PlayStation 2",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/PlayStation_2",
        "seq": "66,79"
      }
    ],
    "id": "87c2b3cad3274c52bfc6f11ef62b71dc",
    "predicate mapping": [
      {
        "label": "CPU",
        "uri": "http://dbpedia.org/ontology/cpu",
        "seq": "18,21",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "predecessor",
        "uri": "http://dbpedia.org/ontology/predecessor",
        "seq": "51,62",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "appliance\u0027s",
        "uri": "http://dbpedia.org/ontology/InformationAppliance",
        "seq": "6,17",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the television show which was developed by Brian Graden and distributed by Comedy Central?",
    "SerialNumber": "3867",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/developer\u003e \u003chttp://dbpedia.org/resource/Brian_Graden\u003e . ?uri \u003chttp://dbpedia.org/property/distributor\u003e \u003chttp://dbpedia.org/resource/Comedy_Central\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Brian Graden",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Brian_Graden",
        "seq": "48,60"
      },
      {
        "label": "Comedy Central",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Comedy_Central",
        "seq": "80,94"
      }
    ],
    "id": "38c76f79fd67475680c99f38f3808b86",
    "predicate mapping": [
      {
        "label": "developed by",
        "uri": "http://dbpedia.org/property/developer",
        "seq": "35,47",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "distributed by",
        "uri": "http://dbpedia.org/property/distributor",
        "seq": "65,79",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "9,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What team had the debut of Marv Throneberry and Curt Coleman?",
    "SerialNumber": "3869",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Marv_Throneberry\u003e \u003chttp://dbpedia.org/property/debutteam\u003e ?uri. \u003chttp://dbpedia.org/resource/Curt_Coleman\u003e \u003chttp://dbpedia.org/ontology/debutTeam\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Marv Throneberry",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Marv_Throneberry",
        "seq": "27,43"
      },
      {
        "label": "Curt Coleman",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Curt_Coleman",
        "seq": "48,60"
      }
    ],
    "id": "32b2c4d11f454f249137145bca18e285",
    "predicate mapping": [
      {
        "label": "debut team",
        "uri": "http://dbpedia.org/property/debutteam",
        "seq": "-1,9",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "debut team",
        "uri": "http://dbpedia.org/ontology/debutTeam",
        "seq": "-1,9",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What is the place of death of the lieutenant of Frank Steunenberg?",
    "SerialNumber": "3873",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Frank_Steunenberg\u003e \u003chttp://dbpedia.org/property/lieutenant\u003e ?x . ?x \u003chttp://dbpedia.org/property/placeOfDeath\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Frank Steunenberg",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Frank_Steunenberg",
        "seq": "48,65"
      }
    ],
    "id": "7f714f3175684adbb9eabea7b621ab24",
    "predicate mapping": [
      {
        "label": "lieutenant",
        "uri": "http://dbpedia.org/property/lieutenant",
        "seq": "34,44",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "place of death",
        "uri": "http://dbpedia.org/property/placeOfDeath",
        "seq": "12,26",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What are the awards won by the film editor of World of Tomorrow ?",
    "SerialNumber": "3874",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/World_of_Tomorrow_(film)\u003e \u003chttp://dbpedia.org/ontology/editing\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/award\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "World of Tomorrow",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/World_of_Tomorrow_(film)",
        "seq": "46,63"
      }
    ],
    "id": "c7127b97150141d8843721bc8b9fdc6f",
    "predicate mapping": [
      {
        "label": "editor",
        "uri": "http://dbpedia.org/ontology/editing",
        "seq": "36,42",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/award",
        "seq": "13,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "307",
    "question": " Giuseppe Bertello and Pietro Parolin are leaders of which place ?",
    "SerialNumber": "3875",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/ontology/leader\u003e \u003chttp://dbpedia.org/resource/Giuseppe_Bertello\u003e . ?uri \u003chttp://dbpedia.org/ontology/leader\u003e \u003chttp://dbpedia.org/resource/Pietro_Parolin\u003e . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Place\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Giuseppe Bertello",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Giuseppe_Bertello",
        "seq": "1,18"
      },
      {
        "label": "Pietro Parolin",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Pietro_Parolin",
        "seq": "23,37"
      }
    ],
    "id": "2f402439bfbf4bb3b37b919d64f80a13",
    "predicate mapping": [
      {
        "label": "leader",
        "uri": "http://dbpedia.org/ontology/leader",
        "seq": "42,48",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "leader",
        "uri": "http://dbpedia.org/ontology/leader",
        "seq": "42,48",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "place",
        "uri": "http://dbpedia.org/ontology/Place",
        "seq": "59,64",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the faith of Kwai Chang Caine ?",
    "SerialNumber": "3878",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Kwai_Chang_Caine\u003e \u003chttp://dbpedia.org/ontology/religion\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Kwai Chang Caine",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Kwai_Chang_Caine",
        "seq": "21,37"
      }
    ],
    "id": "c66a34d84ddc42f89d6642978c5f9b1c",
    "predicate mapping": [
      {
        "label": "faith",
        "uri": "http://dbpedia.org/ontology/religion",
        "seq": "12,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Where does the river end which starts in Mazabuka?",
    "SerialNumber": "3880",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/city\u003e \u003chttp://dbpedia.org/resource/Mazabuka\u003e . ?x \u003chttp://dbpedia.org/ontology/riverMouth\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/River\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Mazabuka",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Mazabuka",
        "seq": "41,49"
      }
    ],
    "id": "2c7911e408ae48659b766c22f01fa785",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/property/city",
        "seq": "38,40",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/riverMouth",
        "seq": "15,20",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River",
        "seq": "15,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the mountain located in California and has parent peak as Nevado de Toluca ?",
    "SerialNumber": "3882",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/locatedInArea\u003e \u003chttp://dbpedia.org/resource/California\u003e . ?uri \u003chttp://dbpedia.org/ontology/parentMountainPeak\u003e \u003chttp://dbpedia.org/resource/Nevado_de_Toluca\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Mountain\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "California",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/California",
        "seq": "29,39"
      },
      {
        "label": "Nevado de Toluca",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Nevado_de_Toluca",
        "seq": "63,79"
      }
    ],
    "id": "5939910c8f974ca1bf12a412dd886263",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/locatedInArea",
        "seq": "15,17",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "mountain parent peak",
        "uri": "http://dbpedia.org/ontology/parentMountainPeak",
        "seq": "-1,19",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "mountain",
        "uri": "http://dbpedia.org/ontology/Mountain",
        "seq": "9,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "What award has been given to Roy Walker as well as Walt Disney?",
    "SerialNumber": "3883",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Roy_Walker_(production_designer)\u003e \u003chttp://dbpedia.org/ontology/award\u003e ?uri. \u003chttp://dbpedia.org/resource/Walt_Disney\u003e \u003chttp://dbpedia.org/ontology/award\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Roy Walker",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Roy_Walker_(production_designer)",
        "seq": "29,39"
      },
      {
        "label": "Walt Disney",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Walt_Disney",
        "seq": "51,62"
      }
    ],
    "id": "705980cbb32844d780617bc238043841",
    "predicate mapping": [
      {
        "label": "award",
        "uri": "http://dbpedia.org/ontology/award",
        "seq": "5,10",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "award",
        "uri": "http://dbpedia.org/ontology/award",
        "seq": "5,10",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the branch of Carroll E. Lanier ?",
    "SerialNumber": "3884",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Carroll_E._Lanier\u003e \u003chttp://dbpedia.org/property/branch\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Carroll E. Lanier",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Carroll_E._Lanier",
        "seq": "19,36"
      }
    ],
    "id": "785b260edcfd41099d8633106521b324",
    "predicate mapping": [
      {
        "label": "branch",
        "uri": "http://dbpedia.org/property/branch",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "List the settlements area whose province is Metropolitan City of Venice ?",
    "SerialNumber": "3885",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/province\u003e \u003chttp://dbpedia.org/resource/Metropolitan_City_of_Venice\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Settlement\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Metropolitan City of Venice",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Metropolitan_City_of_Venice",
        "seq": "44,71"
      }
    ],
    "id": "a8e55935b3614b769945d3b60945948d",
    "predicate mapping": [
      {
        "label": "province",
        "uri": "http://dbpedia.org/property/province",
        "seq": "32,40",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "settlement",
        "uri": "http://dbpedia.org/ontology/Settlement",
        "seq": "9,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Which magazines were founded by ann Wenner ?",
    "SerialNumber": "3887",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/founder\u003e \u003chttp://dbpedia.org/resource/Jann_Wenner\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Magazine\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "ann Wenner",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Jann_Wenner",
        "seq": "36,42"
      }
    ],
    "id": "fe3de671ec2f4322995f78f9bb33d11a",
    "predicate mapping": [
      {
        "label": "founded by",
        "uri": "http://dbpedia.org/ontology/founder",
        "seq": "21,31",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "magazine",
        "uri": "http://dbpedia.org/ontology/Magazine",
        "seq": "6,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the area of ITV (Thailand) ?",
    "SerialNumber": "3888",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/ITV_(Thailand)\u003e \u003chttp://dbpedia.org/property/area\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "ITV (Thailand)",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/ITV_(Thailand)",
        "seq": "20,34"
      }
    ],
    "id": "fa99333a084949f3b66f826593bd2652",
    "predicate mapping": [
      {
        "label": "area",
        "uri": "http://dbpedia.org/property/area",
        "seq": "12,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the presenter of Shirley Temple\u0027s Storybook ?",
    "SerialNumber": "3889",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Shirley_Temple\u0027s_Storybook\u003e \u003chttp://dbpedia.org/property/presenter\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Shirley Temple\u0027s Storybook",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Shirley_Temple\u0027s_Storybook",
        "seq": "22,48"
      }
    ],
    "id": "1c12f743208140c4899ab63ce958d5c4",
    "predicate mapping": [
      {
        "label": "presenter",
        "uri": "http://dbpedia.org/property/presenter",
        "seq": "9,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Name the common managing club of the Ivan Toplak and Bret Simon?",
    "SerialNumber": "3892",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Ivan_Toplak\u003e \u003chttp://dbpedia.org/ontology/managerClub\u003e ?uri. \u003chttp://dbpedia.org/resource/Bret_Simon\u003e \u003chttp://dbpedia.org/ontology/managerClub\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ivan Toplak",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ivan_Toplak",
        "seq": "37,48"
      },
      {
        "label": "Bret Simon",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Bret_Simon",
        "seq": "53,63"
      }
    ],
    "id": "965b4a0d6fcd45448babd3cd1a9d1850",
    "predicate mapping": [
      {
        "label": "club",
        "uri": "http://dbpedia.org/ontology/managerClub",
        "seq": "25,29",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "club",
        "uri": "http://dbpedia.org/ontology/managerClub",
        "seq": "25,29",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What are the movies whose editor is Robert Wise?",
    "SerialNumber": "3893",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/editing\u003e \u003chttp://dbpedia.org/resource/Robert_Wise\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Robert Wise",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Robert_Wise",
        "seq": "36,47"
      }
    ],
    "id": "f4dfd8294d264888896ddcc6e971ef4b",
    "predicate mapping": [
      {
        "label": "editor",
        "uri": "http://dbpedia.org/ontology/editing",
        "seq": "26,32",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "13,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the river on Batoka Gorge Hydroelectric Power Station ?",
    "SerialNumber": "3894",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Batoka_Gorge_Hydroelectric_Power_Station\u003e \u003chttp://dbpedia.org/ontology/river\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Batoka Gorge Hydroelectric Power Station",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Batoka_Gorge_Hydroelectric_Power_Station",
        "seq": "18,58"
      }
    ],
    "id": "1f82c3f52b32474d9b2a5871e9d6bab7",
    "predicate mapping": [
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/river",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Did Johann Gottfried Galle invent Neptune?",
    "SerialNumber": "3896",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Neptune\u003e \u003chttp://dbpedia.org/property/discoverer\u003e \u003chttp://dbpedia.org/resource/Johann_Gottfried_Galle\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Neptune",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Neptune",
        "seq": "34,41"
      },
      {
        "label": "Johann Gottfried Galle",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Johann_Gottfried_Galle",
        "seq": "4,26"
      }
    ],
    "id": "ddec2336ee0e4356a255236006bca1fc",
    "predicate mapping": [
      {
        "label": "invent",
        "uri": "http://dbpedia.org/property/discoverer",
        "seq": "27,33",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which office holder\u0027s military unit is USS Kittiwake  and constituency is Castro District, San Francisco ?",
    "SerialNumber": "3899",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/militaryUnit\u003e \u003chttp://dbpedia.org/resource/USS_Kittiwake_(ASR-13)\u003e . ?uri \u003chttp://dbpedia.org/property/constituency\u003e \u003chttp://dbpedia.org/resource/Castro_District,_San_Francisco\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/OfficeHolder\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "USS Kittiwake",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/USS_Kittiwake_(ASR-13)",
        "seq": "39,52"
      },
      {
        "label": "Castro District, San Francisco",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Castro_District,_San_Francisco",
        "seq": "74,104"
      }
    ],
    "id": "a2eca13767804df089a65b86bf65310d",
    "predicate mapping": [
      {
        "label": "military unit",
        "uri": "http://dbpedia.org/ontology/militaryUnit",
        "seq": "22,35",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "constituency",
        "uri": "http://dbpedia.org/property/constituency",
        "seq": "58,70",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "office holder",
        "uri": "http://dbpedia.org/ontology/OfficeHolder",
        "seq": "6,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Which driver came first in the 1993 European Grand Prix ?",
    "SerialNumber": "3900",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/1993_European_Grand_Prix\u003e \u003chttp://dbpedia.org/property/firstDriver\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "1993 European Grand Prix",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/1993_European_Grand_Prix",
        "seq": "31,55"
      }
    ],
    "id": "34fd78d2a8624f3fb9db8f301269df58",
    "predicate mapping": [
      {
        "label": "driver first",
        "uri": "http://dbpedia.org/property/firstDriver",
        "seq": "-1,11",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who is the writer of mark twain Tonight ?",
    "SerialNumber": "3901",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Mark_Twain_Tonight\u003e \u003chttp://dbpedia.org/property/writer\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "mark twain Tonight",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Mark_Twain_Tonight",
        "seq": "21,39"
      }
    ],
    "id": "0b508a68bf6f41969a26b3a4de2c0af7",
    "predicate mapping": [
      {
        "label": "writer",
        "uri": "http://dbpedia.org/property/writer",
        "seq": "11,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which office holder\u0027s  military branch is Continental Army and vice president is John Adams?",
    "SerialNumber": "3902",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/militaryBranch\u003e \u003chttp://dbpedia.org/resource/Continental_Army\u003e . ?uri \u003chttp://dbpedia.org/ontology/vicePresident\u003e \u003chttp://dbpedia.org/resource/John_Adams\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/OfficeHolder\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Continental Army",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Continental_Army",
        "seq": "42,58"
      },
      {
        "label": "John Adams",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/John_Adams",
        "seq": "81,91"
      }
    ],
    "id": "0f420e164c264763bf883eb8a2892256",
    "predicate mapping": [
      {
        "label": "military branch",
        "uri": "http://dbpedia.org/ontology/militaryBranch",
        "seq": "23,38",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "vice president",
        "uri": "http://dbpedia.org/ontology/vicePresident",
        "seq": "63,77",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "office holder",
        "uri": "http://dbpedia.org/ontology/OfficeHolder",
        "seq": "6,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Who have been the manager of national team of Spain?",
    "SerialNumber": "3904",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/nationalteam\u003e \u003chttp://dbpedia.org/resource/Spain_national_football_team\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/SoccerManager\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "national team of Spain",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Spain_national_football_team",
        "seq": "46,51"
      }
    ],
    "id": "efa1f08196ee4717bf2dc3636d758b21",
    "predicate mapping": [
      {
        "label": "national team",
        "uri": "http://dbpedia.org/property/nationalteam",
        "seq": "29,42",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "manager",
        "uri": "http://dbpedia.org/ontology/SoccerManager",
        "seq": "18,25",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Where was James McClure born ?",
    "SerialNumber": "3905",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/James_McClure_(table_tennis)\u003e \u003chttp://dbpedia.org/property/birthPlace\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "James McClure",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/James_McClure_(table_tennis)",
        "seq": "10,23"
      }
    ],
    "id": "ec741fb853924061b547cb81d63e2b94",
    "predicate mapping": [
      {
        "label": "born",
        "uri": "http://dbpedia.org/property/birthPlace",
        "seq": "24,28",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "The official residence of Sukhumbhand paribatra ?",
    "SerialNumber": "3908",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Sukhumbhand_Paribatra\u003e \u003chttp://dbpedia.org/property/residence\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Sukhumbhand paribatra",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Sukhumbhand_Paribatra",
        "seq": "26,47"
      }
    ],
    "id": "a767b3fba00d497caf4ce4a2d62a9152",
    "predicate mapping": [
      {
        "label": "residence",
        "uri": "http://dbpedia.org/property/residence",
        "seq": "13,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "What is the debut team of people born in Vargas?",
    "SerialNumber": "3909",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/birthPlace\u003e \u003chttp://dbpedia.org/resource/Vargas_(state)\u003e . ?x \u003chttp://dbpedia.org/property/debutteam\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Vargas",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Vargas_(state)",
        "seq": "41,47"
      }
    ],
    "id": "eb1852e8e379430ea29fa15c1588859e",
    "predicate mapping": [
      {
        "label": "born in",
        "uri": "http://dbpedia.org/ontology/birthPlace",
        "seq": "33,40",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "debut team",
        "uri": "http://dbpedia.org/property/debutteam",
        "seq": "12,22",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "Which companies have Kumho Asiana Group as their parent company?",
    "SerialNumber": "3910",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/parentCompany\u003e \u003chttp://dbpedia.org/resource/Kumho_Asiana_Group\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Kumho Asiana Group",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Kumho_Asiana_Group",
        "seq": "21,39"
      }
    ],
    "id": "4141231625cc43c8bc490ad565328359",
    "predicate mapping": [
      {
        "label": "parent company",
        "uri": "http://dbpedia.org/ontology/parentCompany",
        "seq": "49,63",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What is the profession of the children of Herbert Pell ?",
    "SerialNumber": "3912",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Herbert_Pell\u003e \u003chttp://dbpedia.org/property/children\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/profession\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Herbert Pell",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Herbert_Pell",
        "seq": "42,54"
      }
    ],
    "id": "affc959256ac4bc191e5dd85460f6a12",
    "predicate mapping": [
      {
        "label": "children",
        "uri": "http://dbpedia.org/property/children",
        "seq": "30,38",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "profession",
        "uri": "http://dbpedia.org/ontology/profession",
        "seq": "12,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "7",
    "question": "What product is made by Sony and Foxconn togather?",
    "SerialNumber": "3915",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/ontology/manufacturer\u003e \u003chttp://dbpedia.org/resource/Sony\u003e . ?uri \u003chttp://dbpedia.org/ontology/manufacturer\u003e \u003chttp://dbpedia.org/resource/Foxconn\u003e . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Sony",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Sony",
        "seq": "24,28"
      },
      {
        "label": "Foxconn",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Foxconn",
        "seq": "33,40"
      }
    ],
    "id": "84c4f92bbfb04638a0a619683dea1349",
    "predicate mapping": [
      {
        "label": "made by",
        "uri": "http://dbpedia.org/ontology/manufacturer",
        "seq": "16,23",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "made by",
        "uri": "http://dbpedia.org/ontology/manufacturer",
        "seq": "16,23",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the death location of Judson Huss ?",
    "SerialNumber": "3916",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Judson_Huss\u003e \u003chttp://dbpedia.org/property/deathPlace\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Judson Huss",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Judson_Huss",
        "seq": "27,38"
      }
    ],
    "id": "9f44883aeb3c401c89e1465ab2006426",
    "predicate mapping": [
      {
        "label": "death location",
        "uri": "http://dbpedia.org/property/deathPlace",
        "seq": "9,23",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "What is the country whose leader was once Valentina Matviyenko?",
    "SerialNumber": "3917",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/leader\u003e \u003chttp://dbpedia.org/resource/Valentina_Matviyenko\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Valentina Matviyenko",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Valentina_Matviyenko",
        "seq": "42,62"
      }
    ],
    "id": "6be45071f4db47d7850293932bbedfef",
    "predicate mapping": [
      {
        "label": "leader",
        "uri": "http://dbpedia.org/ontology/leader",
        "seq": "26,32",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Is Julia Gillard the prime minister of Kate Lundy?",
    "SerialNumber": "3919",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Kate_Lundy\u003e \u003chttp://dbpedia.org/ontology/primeMinister\u003e \u003chttp://dbpedia.org/resource/Julia_Gillard\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Kate Lundy",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Kate_Lundy",
        "seq": "39,49"
      },
      {
        "label": "Julia Gillard",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Julia_Gillard",
        "seq": "3,16"
      }
    ],
    "id": "459b9e3d7b684b5d9b5c423be3a4eb3f",
    "predicate mapping": [
      {
        "label": "prime minister",
        "uri": "http://dbpedia.org/ontology/primeMinister",
        "seq": "21,35",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What is the country whose leader name is Grard Larcher?",
    "SerialNumber": "3921",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/leaderName\u003e \u003chttp://dbpedia.org/resource/Gérard_Larcher\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Country\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Grard Larcher",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Gérard_Larcher",
        "seq": "41,54"
      }
    ],
    "id": "8931ff63c84b4c50b5a1b9c4be64f74b",
    "predicate mapping": [
      {
        "label": "leader name",
        "uri": "http://dbpedia.org/property/leaderName",
        "seq": "26,37",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/Country",
        "seq": "12,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "102",
    "question": "How many guests have been there on broadway?",
    "SerialNumber": "3927",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { \u003chttp://dbpedia.org/resource/On_Broadway_(Smash)\u003e \u003chttp://dbpedia.org/property/guests\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "on broadway",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/On_Broadway_(Smash)",
        "seq": "32,43"
      }
    ],
    "id": "e97f754148fd4c2f811c6bf0b04685ad",
    "predicate mapping": [
      {
        "label": "guests",
        "uri": "http://dbpedia.org/property/guests",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What is the county seat of the county which has an Evergreen High School?",
    "SerialNumber": "3928",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Evergreen_High_School_(King_County,_Washington)\u003e \u003chttp://dbpedia.org/ontology/county\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/countySeat\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Evergreen High School",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Evergreen_High_School_(King_County,_Washington)",
        "seq": "51,72"
      }
    ],
    "id": "a090fde75999468690fbe088df7369b5",
    "predicate mapping": [
      {
        "label": "county",
        "uri": "http://dbpedia.org/ontology/county",
        "seq": "12,18",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "county seat",
        "uri": "http://dbpedia.org/ontology/countySeat",
        "seq": "12,23",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What countries used Solidus as currency?",
    "SerialNumber": "3929",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/currency\u003e \u003chttp://dbpedia.org/resource/Solidus_(coin)\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Country\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Solidus",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Solidus_(coin)",
        "seq": "20,27"
      }
    ],
    "id": "07df56459b9046fa95b983ee02c029e7",
    "predicate mapping": [
      {
        "label": "currency",
        "uri": "http://dbpedia.org/ontology/currency",
        "seq": "31,39",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "countries",
        "uri": "http://dbpedia.org/ontology/Country",
        "seq": "5,14",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Who discovered Europa and Callisto?",
    "SerialNumber": "3932",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Europa_(moon)\u003e \u003chttp://dbpedia.org/property/discoverer\u003e ?uri. \u003chttp://dbpedia.org/resource/Callisto_(moon)\u003e \u003chttp://dbpedia.org/ontology/discoverer\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Europa",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Europa_(moon)",
        "seq": "15,21"
      },
      {
        "label": "Callisto",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Callisto_(moon)",
        "seq": "26,34"
      }
    ],
    "id": "a57646db0f4f42b08f80995ffb60e186",
    "predicate mapping": [
      {
        "label": "discovered",
        "uri": "http://dbpedia.org/property/discoverer",
        "seq": "4,14",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "discovered",
        "uri": "http://dbpedia.org/ontology/discoverer",
        "seq": "4,14",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "List  bacterias whose orde is Bacillales and division is Firmicutes?",
    "SerialNumber": "3933",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/order\u003e \u003chttp://dbpedia.org/resource/Bacillales\u003e . ?uri \u003chttp://dbpedia.org/ontology/division\u003e \u003chttp://dbpedia.org/resource/Firmicutes\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Bacteria\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Bacillales",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Bacillales",
        "seq": "30,40"
      },
      {
        "label": "Firmicutes",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Firmicutes",
        "seq": "57,67"
      }
    ],
    "id": "d65addb351934f16855a39cec5e7e20a",
    "predicate mapping": [
      {
        "label": "orde",
        "uri": "http://dbpedia.org/ontology/order",
        "seq": "22,26",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "division",
        "uri": "http://dbpedia.org/ontology/division",
        "seq": "45,53",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "bacteria",
        "uri": "http://dbpedia.org/ontology/Bacteria",
        "seq": "6,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which ceremonial County of the East Tilbury is also the local authority of the Buckhurst Hill County High School ?",
    "SerialNumber": "3934",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/East_Tilbury\u003e \u003chttp://dbpedia.org/ontology/ceremonialCounty\u003e ?uri. \u003chttp://dbpedia.org/resource/Buckhurst_Hill_County_High_School\u003e \u003chttp://dbpedia.org/ontology/localAuthority\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "East Tilbury",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/East_Tilbury",
        "seq": "31,43"
      },
      {
        "label": "Buckhurst Hill County High School",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Buckhurst_Hill_County_High_School",
        "seq": "79,112"
      }
    ],
    "id": "7c7114c2dd014b12b2a19352d908b472",
    "predicate mapping": [
      {
        "label": "ceremonial County",
        "uri": "http://dbpedia.org/ontology/ceremonialCounty",
        "seq": "6,23",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "local authority",
        "uri": "http://dbpedia.org/ontology/localAuthority",
        "seq": "56,71",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What are some other destinations covered by the airlines whose flights go to the Mediterranean sea?",
    "SerialNumber": "3935",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/destinations\u003e \u003chttp://dbpedia.org/resource/Mediterranean_Sea\u003e . ?x \u003chttp://dbpedia.org/ontology/destination\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Airline\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Mediterranean sea",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Mediterranean_Sea",
        "seq": "81,98"
      }
    ],
    "id": "53bb18b2b179439ea955d4300cf133ea",
    "predicate mapping": [
      {
        "label": "destinations",
        "uri": "http://dbpedia.org/property/destinations",
        "seq": "20,32",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "destination",
        "uri": "http://dbpedia.org/ontology/destination",
        "seq": "20,31",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "airline",
        "uri": "http://dbpedia.org/ontology/Airline",
        "seq": "48,55",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Was Class Conflict an interest of Karl Marx?",
    "SerialNumber": "3939",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Karl_Marx\u003e \u003chttp://dbpedia.org/ontology/mainInterest\u003e \u003chttp://dbpedia.org/resource/Class_conflict\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Karl Marx",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Karl_Marx",
        "seq": "34,43"
      },
      {
        "label": "Class Conflict",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Class_conflict",
        "seq": "4,18"
      }
    ],
    "id": "6ed720fd412748de934db0272ae0affd",
    "predicate mapping": [
      {
        "label": "interest",
        "uri": "http://dbpedia.org/ontology/mainInterest",
        "seq": "22,30",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the venue of San Diego Comic-Con International ?",
    "SerialNumber": "3944",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/San_Diego_Comic-Con_International\u003e \u003chttp://dbpedia.org/property/venue\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "San Diego Comic-Con International",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/San_Diego_Comic-Con_International",
        "seq": "21,54"
      }
    ],
    "id": "3fca4e987668497a98a4313a90ef9cbc",
    "predicate mapping": [
      {
        "label": "venue",
        "uri": "http://dbpedia.org/property/venue",
        "seq": "12,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What are some countries where companies headquartered in the Klang Valley operate?",
    "SerialNumber": "3945",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/headquarters\u003e \u003chttp://dbpedia.org/resource/Klang_Valley\u003e . ?x \u003chttp://dbpedia.org/property/country\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Company\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Klang Valley",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Klang_Valley",
        "seq": "61,73"
      }
    ],
    "id": "1010a7a0c5f44e9d94d2ad67d025ee32",
    "predicate mapping": [
      {
        "label": "headquarter",
        "uri": "http://dbpedia.org/property/headquarters",
        "seq": "40,51",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "countries",
        "uri": "http://dbpedia.org/property/country",
        "seq": "14,23",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "companies",
        "uri": "http://dbpedia.org/ontology/Company",
        "seq": "30,39",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the job of the George Arceneaux, Jr. which is also the office of the Blanche Bruce",
    "SerialNumber": "3947",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/George_Arceneaux,_Jr.\u003e \u003chttp://dbpedia.org/ontology/occupation\u003e ?uri. \u003chttp://dbpedia.org/resource/Blanche_Bruce\u003e \u003chttp://dbpedia.org/property/office\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "George Arceneaux, Jr.",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/George_Arceneaux,_Jr.",
        "seq": "23,44"
      },
      {
        "label": "Blanche Bruce",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Blanche_Bruce",
        "seq": "77,90"
      }
    ],
    "id": "fb3983a237514a2fae742694295ce1a9",
    "predicate mapping": [
      {
        "label": "job",
        "uri": "http://dbpedia.org/ontology/occupation",
        "seq": "12,15",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "office",
        "uri": "http://dbpedia.org/property/office",
        "seq": "63,69",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the street address of Rhodes-Haverty Building ?",
    "SerialNumber": "3949",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Rhodes-Haverty_Building\u003e \u003chttp://dbpedia.org/property/address\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Rhodes-Haverty Building",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Rhodes-Haverty_Building",
        "seq": "27,50"
      }
    ],
    "id": "c62aacfc9d4d436780b225eacce046cc",
    "predicate mapping": [
      {
        "label": "address",
        "uri": "http://dbpedia.org/property/address",
        "seq": "16,23",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Which royalty\u0027s spouse is Ptolemy XIV of Egypt?",
    "SerialNumber": "3950",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/spouse\u003e \u003chttp://dbpedia.org/resource/Ptolemy_XIV_of_Egypt\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Royalty\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ptolemy XIV",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Ptolemy_XIV_of_Egypt",
        "seq": "26,37"
      }
    ],
    "id": "f399c7a1da5e48e29810f8606fdfe5ec",
    "predicate mapping": [
      {
        "label": "spouse",
        "uri": "http://dbpedia.org/ontology/spouse",
        "seq": "16,22",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "royalty",
        "uri": "http://dbpedia.org/ontology/Royalty",
        "seq": "6,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which race is the  Best Mate is also the race of the Martin Molony?",
    "SerialNumber": "3951",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Best_Mate\u003e \u003chttp://dbpedia.org/property/race\u003e ?uri. \u003chttp://dbpedia.org/resource/Martin_Molony\u003e \u003chttp://dbpedia.org/ontology/race\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Best Mate",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Best_Mate",
        "seq": "19,28"
      },
      {
        "label": "Martin Molony",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Martin_Molony",
        "seq": "53,66"
      }
    ],
    "id": "549aff6f90b442e49ad5fb036aa2907c",
    "predicate mapping": [
      {
        "label": "race",
        "uri": "http://dbpedia.org/property/race",
        "seq": "6,10",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "race",
        "uri": "http://dbpedia.org/ontology/race",
        "seq": "6,10",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "List the parts of Greater San Antonio?",
    "SerialNumber": "3952",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Greater_San_Antonio\u003e \u003chttp://dbpedia.org/ontology/part\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Greater San Antonio",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Greater_San_Antonio",
        "seq": "18,37"
      }
    ],
    "id": "01e5f18baef64f089b9aeff2a5672188",
    "predicate mapping": [
      {
        "label": "part",
        "uri": "http://dbpedia.org/ontology/part",
        "seq": "9,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Was the body of Elsie Paroubek discovered in Chicago?",
    "SerialNumber": "3956",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Elsie_Paroubek\u003e \u003chttp://dbpedia.org/ontology/bodyDiscovered\u003e \u003chttp://dbpedia.org/resource/Chicago\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Elsie Paroubek",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Elsie_Paroubek",
        "seq": "16,30"
      },
      {
        "label": "Chicago",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Chicago",
        "seq": "45,52"
      }
    ],
    "id": "7753f3eb8e344fac86edce3630848439",
    "predicate mapping": [
      {
        "label": "discovered body",
        "uri": "http://dbpedia.org/ontology/bodyDiscovered",
        "seq": "-1,14",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "who operates the south side elevated railroad?",
    "SerialNumber": "3957",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/South_Side_Elevated_Railroad\u003e \u003chttp://dbpedia.org/ontology/operatedBy\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "south side elevated railroad",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/South_Side_Elevated_Railroad",
        "seq": "17,45"
      }
    ],
    "id": "9b51ba0b970d479dbc0c54c8830fcddb",
    "predicate mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/ontology/operatedBy",
        "seq": "0,0",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Did Dean Wurzberger manage a club at the santa clara university?",
    "SerialNumber": "3958",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Dean_Wurzberger\u003e \u003chttp://dbpedia.org/property/managerclubs\u003e \u003chttp://dbpedia.org/resource/Santa_Clara_University\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Dean Wurzberger",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Dean_Wurzberger",
        "seq": "4,19"
      },
      {
        "label": "santa clara university",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Santa_Clara_University",
        "seq": "41,63"
      }
    ],
    "id": "2e9acabbe693475ea85bed543e1ebef7",
    "predicate mapping": [
      {
        "label": "manage club",
        "uri": "http://dbpedia.org/property/managerclubs",
        "seq": "-1,10",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who wrote the play in which Blanche DuBois is a character?",
    "SerialNumber": "3959",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/characters\u003e \u003chttp://dbpedia.org/resource/Blanche_DuBois\u003e . ?x \u003chttp://dbpedia.org/property/writer\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Play\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Blanche DuBois",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Blanche_DuBois",
        "seq": "28,42"
      }
    ],
    "id": "530da5683a824177a5b7b23c2d8447d1",
    "predicate mapping": [
      {
        "label": "character",
        "uri": "http://dbpedia.org/property/characters",
        "seq": "48,57",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "wrote",
        "uri": "http://dbpedia.org/property/writer",
        "seq": "4,9",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "play",
        "uri": "http://dbpedia.org/ontology/Play",
        "seq": "14,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the university with affiliations as Graham Holdings Company and campus at Indiana?",
    "SerialNumber": "3962",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/affiliations\u003e \u003chttp://dbpedia.org/resource/Graham_Holdings_Company\u003e . ?uri \u003chttp://dbpedia.org/ontology/campus\u003e \u003chttp://dbpedia.org/resource/Indiana\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/University\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Graham Holdings Company",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Graham_Holdings_Company",
        "seq": "41,64"
      },
      {
        "label": "Indiana",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Indiana",
        "seq": "79,86"
      }
    ],
    "id": "1c819292a65d48ba82b5936d9d22a161",
    "predicate mapping": [
      {
        "label": "affiliations",
        "uri": "http://dbpedia.org/property/affiliations",
        "seq": "25,37",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "campus",
        "uri": "http://dbpedia.org/ontology/campus",
        "seq": "69,75",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "university",
        "uri": "http://dbpedia.org/ontology/University",
        "seq": "9,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Is the hyundai elantra related to hyundai lavita?",
    "SerialNumber": "3964",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Hyundai_Lavita\u003e \u003chttp://dbpedia.org/ontology/relatedMeanOfTransportation\u003e \u003chttp://dbpedia.org/resource/Hyundai_Elantra\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "hyundai lavita",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Hyundai_Lavita",
        "seq": "34,48"
      },
      {
        "label": "hyundai elantra",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Hyundai_Elantra",
        "seq": "7,22"
      }
    ],
    "id": "1747800b6c1342b592699c28f06154c2",
    "predicate mapping": [
      {
        "label": "related",
        "uri": "http://dbpedia.org/ontology/relatedMeanOfTransportation",
        "seq": "23,30",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Who manufactured the Delta III and the Space Shuttle?",
    "SerialNumber": "3968",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Delta_III\u003e \u003chttp://dbpedia.org/ontology/manufacturer\u003e ?uri. \u003chttp://dbpedia.org/resource/Space_Shuttle\u003e \u003chttp://dbpedia.org/ontology/manufacturer\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Delta III",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Delta_III",
        "seq": "21,30"
      },
      {
        "label": "Space Shuttle",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Space_Shuttle",
        "seq": "39,52"
      }
    ],
    "id": "40fb3a262e9b4b3ab35c33f0f8bd883e",
    "predicate mapping": [
      {
        "label": "manufactured",
        "uri": "http://dbpedia.org/ontology/manufacturer",
        "seq": "4,16",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "manufactured",
        "uri": "http://dbpedia.org/ontology/manufacturer",
        "seq": "4,16",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Which nation hosts the WTA Tour Championships?",
    "SerialNumber": "3969",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/WTA_Tour_Championships\u003e \u003chttp://dbpedia.org/property/country\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "WTA Tour Championships",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/WTA_Tour_Championships",
        "seq": "23,45"
      }
    ],
    "id": "2e7611c3b8994e6dbc15b40e020f1b9c",
    "predicate mapping": [
      {
        "label": "nation",
        "uri": "http://dbpedia.org/property/country",
        "seq": "6,12",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "111",
    "question": "Give me the total number of lines owned by owner of Mwtro-Noth Railroad ?",
    "SerialNumber": "3972",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/owner\u003e \u003chttp://dbpedia.org/resource/Metro-North_Railroad\u003e . ?x \u003chttp://dbpedia.org/property/owner\u003e ?uri }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Mwtro-Noth Railroad",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Metro-North_Railroad",
        "seq": "52,71"
      }
    ],
    "id": "f77b70866d3f440ab0e94f8839a02e38",
    "predicate mapping": [
      {
        "label": "owner",
        "uri": "http://dbpedia.org/ontology/owner",
        "seq": "43,48",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "owner",
        "uri": "http://dbpedia.org/property/owner",
        "seq": "43,48",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Where was Liliya Lobanova born?",
    "SerialNumber": "3973",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Liliya_Lobanova\u003e \u003chttp://dbpedia.org/property/birthplace\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Liliya Lobanova",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Liliya_Lobanova",
        "seq": "10,25"
      }
    ],
    "id": "5ed77f5b5ec94a8ebe4f29dad560565e",
    "predicate mapping": [
      {
        "label": "born",
        "uri": "http://dbpedia.org/property/birthplace",
        "seq": "26,30",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "Laozi authored which book?",
    "SerialNumber": "3976",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/author\u003e \u003chttp://dbpedia.org/resource/Laozi\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Laozi",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Laozi",
        "seq": "0,5"
      }
    ],
    "id": "4991e293a5df4dacb638b36ffa363faa",
    "predicate mapping": [
      {
        "label": "author",
        "uri": "http://dbpedia.org/ontology/author",
        "seq": "6,12",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who wrote the play in which a character called Stella Kowalski exists?",
    "SerialNumber": "3979",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/characters\u003e \u003chttp://dbpedia.org/resource/Stella_Kowalski\u003e . ?x \u003chttp://dbpedia.org/property/writer\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Play\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Stella Kowalski",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Stella_Kowalski",
        "seq": "47,62"
      }
    ],
    "id": "ba5faf932d46419e98e625fe00202062",
    "predicate mapping": [
      {
        "label": "character",
        "uri": "http://dbpedia.org/property/characters",
        "seq": "30,39",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "wrote",
        "uri": "http://dbpedia.org/property/writer",
        "seq": "4,9",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "play",
        "uri": "http://dbpedia.org/ontology/Play",
        "seq": "14,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Which award is presented by Downtown Athletic Club?",
    "SerialNumber": "3980",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/presenter\u003e \u003chttp://dbpedia.org/resource/Downtown_Athletic_Club\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Award\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Downtown Athletic Club",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Downtown_Athletic_Club",
        "seq": "28,50"
      }
    ],
    "id": "eb60a056d11940db85207b6c2d7dba3e",
    "predicate mapping": [
      {
        "label": "presented",
        "uri": "http://dbpedia.org/property/presenter",
        "seq": "15,24",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "award",
        "uri": "http://dbpedia.org/ontology/Award",
        "seq": "6,11",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What are the largest cities in each of the destinations of TranStar Airlines?",
    "SerialNumber": "3981",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/TranStar_Airlines\u003e \u003chttp://dbpedia.org/ontology/destination\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/largestCity\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "TranStar Airlines",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/TranStar_Airlines",
        "seq": "59,76"
      }
    ],
    "id": "9e28d32cb50c430abb9b65aa6808dbb3",
    "predicate mapping": [
      {
        "label": "destination",
        "uri": "http://dbpedia.org/ontology/destination",
        "seq": "43,54",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "largest",
        "uri": "http://dbpedia.org/ontology/largestCity",
        "seq": "13,20",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "101",
    "question": "How many things belong to phylum of Chordate?",
    "SerialNumber": "3984",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/ontology/phylum\u003e \u003chttp://dbpedia.org/resource/Chordate\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Chordate",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Chordate",
        "seq": "36,44"
      }
    ],
    "id": "40370fe27b3a4ec29366818da40b692d",
    "predicate mapping": [
      {
        "label": "phylum",
        "uri": "http://dbpedia.org/ontology/phylum",
        "seq": "26,32",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What units are garrisoned in the Pentagon?",
    "SerialNumber": "3985",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/garrison\u003e \u003chttp://dbpedia.org/resource/The_Pentagon\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MilitaryUnit\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Pentagon",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/The_Pentagon",
        "seq": "33,41"
      }
    ],
    "id": "737d63b84ad04faf9d88e0ea08e6d2a9",
    "predicate mapping": [
      {
        "label": "garrison",
        "uri": "http://dbpedia.org/property/garrison",
        "seq": "15,23",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "units",
        "uri": "http://dbpedia.org/ontology/MilitaryUnit",
        "seq": "5,10",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Was A Jitney Elopement edited by Charlie Chaplin?",
    "SerialNumber": "3989",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/A_Jitney_Elopement\u003e \u003chttp://dbpedia.org/ontology/editing\u003e \u003chttp://dbpedia.org/resource/Charlie_Chaplin\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "A Jitney Elopement",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/A_Jitney_Elopement",
        "seq": "4,22"
      },
      {
        "label": "Charlie Chaplin",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Charlie_Chaplin",
        "seq": "33,48"
      }
    ],
    "id": "2d35b5fc3d04477aad9ca12f1abfdc9c",
    "predicate mapping": [
      {
        "label": "edited by",
        "uri": "http://dbpedia.org/ontology/editing",
        "seq": "23,32",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "What is the nationality of the entomologist who is a renowned authority of Smerinthus saliceti ?",
    "SerialNumber": "3991",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Smerinthus_saliceti\u003e \u003chttp://dbpedia.org/ontology/binomialAuthority\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/citizenship\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Entomologist\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Smerinthus saliceti",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Smerinthus_saliceti",
        "seq": "75,94"
      }
    ],
    "id": "94f2d3a65f0a4e228e6ea8f5ff7a54b0",
    "predicate mapping": [
      {
        "label": "authority",
        "uri": "http://dbpedia.org/ontology/binomialAuthority",
        "seq": "62,71",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "nationality",
        "uri": "http://dbpedia.org/ontology/citizenship",
        "seq": "12,23",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "entomologist",
        "uri": "http://dbpedia.org/ontology/Entomologist",
        "seq": "31,43",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Give me the home town of all musical artists who uses Guitar as instrument ?",
    "SerialNumber": "3992",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/instrument\u003e \u003chttp://dbpedia.org/resource/Guitar\u003e . ?x \u003chttp://dbpedia.org/ontology/hometown\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MusicalArtist\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Guitar",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Guitar",
        "seq": "54,60"
      }
    ],
    "id": "cce1fd93712c40fca3adc66926bf15f6",
    "predicate mapping": [
      {
        "label": "instrument",
        "uri": "http://dbpedia.org/ontology/instrument",
        "seq": "64,74",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "home town",
        "uri": "http://dbpedia.org/ontology/hometown",
        "seq": "12,21",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "musical artist",
        "uri": "http://dbpedia.org/ontology/MusicalArtist",
        "seq": "29,43",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "List the home town of the bands whose label is Alive Naturalsound Records ?",
    "SerialNumber": "3995",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/label\u003e \u003chttp://dbpedia.org/resource/Alive_Naturalsound_Records\u003e . ?x \u003chttp://dbpedia.org/ontology/hometown\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Band\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Alive Naturalsound Records",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Alive_Naturalsound_Records",
        "seq": "47,73"
      }
    ],
    "id": "50b720c354cd4b49b16d4a0335fb3b51",
    "predicate mapping": [
      {
        "label": "label",
        "uri": "http://dbpedia.org/property/label",
        "seq": "38,43",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "home town",
        "uri": "http://dbpedia.org/ontology/hometown",
        "seq": "9,18",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "band",
        "uri": "http://dbpedia.org/ontology/Band",
        "seq": "26,30",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the draft team of the Antoine Bibeau and also has player named Nathan Dempsey ?",
    "SerialNumber": "3996",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Antoine_Bibeau\u003e \u003chttp://dbpedia.org/property/draftTeam\u003e ?uri. \u003chttp://dbpedia.org/resource/Nathan_Dempsey\u003e \u003chttp://dbpedia.org/property/playedFor\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Antoine Bibeau",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Antoine_Bibeau",
        "seq": "30,44"
      },
      {
        "label": "Nathan Dempsey",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Nathan_Dempsey",
        "seq": "71,85"
      }
    ],
    "id": "60a1f302d38442018cd7792bbeefef8a",
    "predicate mapping": [
      {
        "label": "draft team",
        "uri": "http://dbpedia.org/property/draftTeam",
        "seq": "12,22",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/property/playedFor",
        "seq": "18,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the draft team of Antoine Bibeau ?",
    "SerialNumber": "3997",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Antoine_Bibeau\u003e \u003chttp://dbpedia.org/property/draftTeam\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Antoine Bibeau",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Antoine_Bibeau",
        "seq": "26,40"
      }
    ],
    "id": "3cd70345b5cd4e35992ea594bd44a98d",
    "predicate mapping": [
      {
        "label": "draft team",
        "uri": "http://dbpedia.org/property/draftTeam",
        "seq": "12,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the location city of Burnside Distribution Corporation ?",
    "SerialNumber": "3998",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Burnside_Distribution_Corporation\u003e \u003chttp://dbpedia.org/ontology/locationCity\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Burnside Distribution Corporation",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Burnside_Distribution_Corporation",
        "seq": "29,62"
      }
    ],
    "id": "27755507bd1f447995393a4420bd86b2",
    "predicate mapping": [
      {
        "label": "location city",
        "uri": "http://dbpedia.org/ontology/locationCity",
        "seq": "12,25",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the place of Qaqun ?",
    "SerialNumber": "4000",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Qaqun\u003e \u003chttp://dbpedia.org/property/place\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Qaqun",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Qaqun",
        "seq": "18,23"
      }
    ],
    "id": "1f68b53e47e149d09907454d2b07ef22",
    "predicate mapping": [
      {
        "label": "place",
        "uri": "http://dbpedia.org/property/place",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Was Marshall Arisman the cover artist in american psycho?",
    "SerialNumber": "4001",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/American_Psycho\u003e \u003chttp://dbpedia.org/property/coverArtist\u003e \u003chttp://dbpedia.org/resource/Marshall_Arisman\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "american psycho",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/American_Psycho",
        "seq": "41,56"
      },
      {
        "label": "Marshall Arisman",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Marshall_Arisman",
        "seq": "4,20"
      }
    ],
    "id": "8bbfc3dedcd44adda33c6da9cd9eb427",
    "predicate mapping": [
      {
        "label": "cover artist",
        "uri": "http://dbpedia.org/property/coverArtist",
        "seq": "25,37",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the publisher of Lucifer\u0027s Hammer ?",
    "SerialNumber": "4002",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Lucifer\u0027s_Hammer\u003e \u003chttp://dbpedia.org/ontology/publisher\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Lucifer\u0027s Hammer",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Lucifer\u0027s_Hammer",
        "seq": "25,41"
      }
    ],
    "id": "1cb857cf079c4860a7e33220a4e6ff29",
    "predicate mapping": [
      {
        "label": "publisher",
        "uri": "http://dbpedia.org/ontology/publisher",
        "seq": "12,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "The Information: A History, a Theory, a Flood is a work of Isaac Newton?",
    "SerialNumber": "4003",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/The_Information:_A_History,_a_Theory,_a_Flood\u003e \u003chttp://dbpedia.org/ontology/previousWork\u003e \u003chttp://dbpedia.org/resource/Isaac_Newton\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "The Information: A History, a Theory, a Flood",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Information:_A_History,_a_Theory,_a_Flood",
        "seq": "0,45"
      },
      {
        "label": "Isaac Newton",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Isaac_Newton",
        "seq": "59,71"
      }
    ],
    "id": "11122ef7a8fb46d89a3d6b4d6757b990",
    "predicate mapping": [
      {
        "label": "work",
        "uri": "http://dbpedia.org/ontology/previousWork",
        "seq": "51,55",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "To which branch Edwin F. Hunter  belong ?",
    "SerialNumber": "4004",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Edwin_F._Hunter\u003e \u003chttp://dbpedia.org/property/branch\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Edwin F. Hunter",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Edwin_F._Hunter",
        "seq": "16,31"
      }
    ],
    "id": "a5f4396627fd49da96fd3f5a294e9ec2",
    "predicate mapping": [
      {
        "label": "branch",
        "uri": "http://dbpedia.org/property/branch",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who are some cofounders of record labels with Frank Rogers?",
    "SerialNumber": "4005",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/foundedBy\u003e \u003chttp://dbpedia.org/resource/Frank_Rogers_(record_producer)\u003e . ?x \u003chttp://dbpedia.org/property/founder\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/RecordLabel\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Frank Rogers",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Frank_Rogers_(record_producer)",
        "seq": "46,58"
      }
    ],
    "id": "83dd6b5f5814451baa118379ef1bed54",
    "predicate mapping": [
      {
        "label": "founders",
        "uri": "http://dbpedia.org/ontology/foundedBy",
        "seq": "15,23",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "founders",
        "uri": "http://dbpedia.org/property/founder",
        "seq": "15,23",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "record label",
        "uri": "http://dbpedia.org/ontology/RecordLabel",
        "seq": "27,39",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "7",
    "question": "Which river\u0027s mouth location is Laptev Sea and also Arctic Ocean?",
    "SerialNumber": "4006",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/property/mouthLocation\u003e \u003chttp://dbpedia.org/resource/Laptev_Sea\u003e . ?uri \u003chttp://dbpedia.org/property/mouthLocation\u003e \u003chttp://dbpedia.org/resource/Arctic_Ocean\u003e . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Laptev Sea",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Laptev_Sea",
        "seq": "32,42"
      },
      {
        "label": "Arctic Ocean",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Arctic_Ocean",
        "seq": "52,64"
      }
    ],
    "id": "65c328879d034ec780147a99b1bc4f61",
    "predicate mapping": [
      {
        "label": "mouth location",
        "uri": "http://dbpedia.org/property/mouthLocation",
        "seq": "14,28",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "mouth location",
        "uri": "http://dbpedia.org/property/mouthLocation",
        "seq": "14,28",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "7",
    "question": "Who is known for are Battle of the Thames and War of 1812?",
    "SerialNumber": "4010",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/ontology/knownFor\u003e \u003chttp://dbpedia.org/resource/Battle_of_the_Thames\u003e . ?uri \u003chttp://dbpedia.org/ontology/knownFor\u003e \u003chttp://dbpedia.org/resource/War_of_1812\u003e . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Battle of the Thames",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Battle_of_the_Thames",
        "seq": "21,41"
      },
      {
        "label": "War of 1812",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/War_of_1812",
        "seq": "46,57"
      }
    ],
    "id": "dd867c518f7546ee9a9f242d25058cb5",
    "predicate mapping": [
      {
        "label": "known for",
        "uri": "http://dbpedia.org/ontology/knownFor",
        "seq": "7,16",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "known for",
        "uri": "http://dbpedia.org/ontology/knownFor",
        "seq": "7,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "401",
    "question": "How many groups speak the English Language?",
    "SerialNumber": "4011",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/property/languages\u003e \u003chttp://dbpedia.org/resource/English_language\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/EthnicGroup\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "English Language",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/English_language",
        "seq": "26,42"
      }
    ],
    "id": "977b6f4153b04d6bada78a4b6fb29965",
    "predicate mapping": [
      {
        "label": "language",
        "uri": "http://dbpedia.org/property/languages",
        "seq": "-1,7",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "groups",
        "uri": "http://dbpedia.org/ontology/EthnicGroup",
        "seq": "9,15",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "How many owners are there of lines starting at the South Station?",
    "SerialNumber": "4012",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/routeStart\u003e \u003chttp://dbpedia.org/resource/South_Station\u003e . ?x \u003chttp://dbpedia.org/property/owner\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "South Station",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/South_Station",
        "seq": "51,64"
      }
    ],
    "id": "e1f3b680b0e145f894360fb4fde18286",
    "predicate mapping": [
      {
        "label": "starting",
        "uri": "http://dbpedia.org/ontology/routeStart",
        "seq": "35,43",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "owners",
        "uri": "http://dbpedia.org/property/owner",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Name the basketball players drafted by Los Angeles Clippers ?",
    "SerialNumber": "4014",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/draftTeam\u003e \u003chttp://dbpedia.org/resource/Los_Angeles_Clippers\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/BasketballPlayer\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Los Angeles Clippers",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Los_Angeles_Clippers",
        "seq": "39,59"
      }
    ],
    "id": "f9d09b029bdf4189b301584f3e75101c",
    "predicate mapping": [
      {
        "label": "drafted",
        "uri": "http://dbpedia.org/property/draftTeam",
        "seq": "28,35",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "basketball player",
        "uri": "http://dbpedia.org/ontology/BasketballPlayer",
        "seq": "9,26",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What city is located on the mouth of Duwamish River?",
    "SerialNumber": "4015",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Duwamish_River\u003e \u003chttp://dbpedia.org/ontology/riverMouth\u003e ?x . ?x \u003chttp://dbpedia.org/property/cities\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Duwamish River",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Duwamish_River",
        "seq": "37,51"
      }
    ],
    "id": "07b9884b55c94fbe84f471475935e466",
    "predicate mapping": [
      {
        "label": "river mouth",
        "uri": "http://dbpedia.org/ontology/riverMouth",
        "seq": "-1,10",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "city",
        "uri": "http://dbpedia.org/property/cities",
        "seq": "5,9",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Where is the mouth of the river whose tributary is Bjelimićka  Rijeka ?",
    "SerialNumber": "4016",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/rightTributary\u003e \u003chttp://dbpedia.org/resource/Bjelimićka_Rijeka\u003e . ?x \u003chttp://dbpedia.org/ontology/mouthCountry\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Bjelimićka Rijeka",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Bjelimićka_Rijeka",
        "seq": "-1,16"
      }
    ],
    "id": "61bd46182b1447fdba130dd495c98b61",
    "predicate mapping": [
      {
        "label": "tributary",
        "uri": "http://dbpedia.org/ontology/rightTributary",
        "seq": "38,47",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "mouth",
        "uri": "http://dbpedia.org/ontology/mouthCountry",
        "seq": "13,18",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Which river flows through Central Washington?",
    "SerialNumber": "4020",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Central_Washington\u003e \u003chttp://dbpedia.org/ontology/river\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Central Washington",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Central_Washington",
        "seq": "26,44"
      }
    ],
    "id": "10234f4efd8b4dd087898060000c073b",
    "predicate mapping": [
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/river",
        "seq": "6,11",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Who is the scientist whose academic advisor is Franz Brentano?",
    "SerialNumber": "4021",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/academicAdvisor\u003e \u003chttp://dbpedia.org/resource/Franz_Brentano\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Scientist\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Franz Brentano",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Franz_Brentano",
        "seq": "47,61"
      }
    ],
    "id": "b2b282ef2cd14876880434680aa25fa4",
    "predicate mapping": [
      {
        "label": "academic advisor",
        "uri": "http://dbpedia.org/ontology/academicAdvisor",
        "seq": "27,43",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "scientist",
        "uri": "http://dbpedia.org/ontology/Scientist",
        "seq": "11,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "Tandem Computers is the subsidiary of which company?",
    "SerialNumber": "4023",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/subsidiary\u003e \u003chttp://dbpedia.org/resource/Tandem_Computers\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Tandem Computers",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Tandem_Computers",
        "seq": "0,16"
      }
    ],
    "id": "8b5c756e4b4d417bb041434770f85a38",
    "predicate mapping": [
      {
        "label": "subsidiary",
        "uri": "http://dbpedia.org/ontology/subsidiary",
        "seq": "24,34",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the office holder who has a child named Lori Black and resting place is Alta Mesa Memorial Park?",
    "SerialNumber": "4025",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/child\u003e \u003chttp://dbpedia.org/resource/Lori_Black\u003e . ?uri \u003chttp://dbpedia.org/property/restingPlace\u003e \u003chttp://dbpedia.org/resource/Alta_Mesa_Memorial_Park\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/OfficeHolder\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Lori Black",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Lori_Black",
        "seq": "45,55"
      },
      {
        "label": "Alta Mesa Memorial Park",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Alta_Mesa_Memorial_Park",
        "seq": "77,100"
      }
    ],
    "id": "e362bbac4bf646538ffec9b1af997937",
    "predicate mapping": [
      {
        "label": "child",
        "uri": "http://dbpedia.org/ontology/child",
        "seq": "33,38",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "resting place",
        "uri": "http://dbpedia.org/property/restingPlace",
        "seq": "60,73",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "office holder",
        "uri": "http://dbpedia.org/ontology/OfficeHolder",
        "seq": "9,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Who appointed the successor of Thomas Bee?",
    "SerialNumber": "4026",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Thomas_Bee\u003e \u003chttp://dbpedia.org/ontology/successor\u003e ?x . ?x \u003chttp://dbpedia.org/property/appointer\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Thomas Bee",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Thomas_Bee",
        "seq": "31,41"
      }
    ],
    "id": "5662a9fee12a46c9a92783e3e54161e1",
    "predicate mapping": [
      {
        "label": "successor",
        "uri": "http://dbpedia.org/ontology/successor",
        "seq": "18,27",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "appointed",
        "uri": "http://dbpedia.org/property/appointer",
        "seq": "4,13",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "What is the home town of the Band which is the previous work of Sammy Hagar \u0026 Friends ?",
    "SerialNumber": "4027",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Sammy_Hagar_\u0026_Friends\u003e \u003chttp://dbpedia.org/ontology/previousWork\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/hometown\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Band\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Sammy Hagar \u0026 Friends",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Sammy_Hagar_\u0026_Friends",
        "seq": "64,85"
      }
    ],
    "id": "e8bec3414aec434f985546fa26880eff",
    "predicate mapping": [
      {
        "label": "previous work",
        "uri": "http://dbpedia.org/ontology/previousWork",
        "seq": "47,60",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "home town",
        "uri": "http://dbpedia.org/ontology/hometown",
        "seq": "12,21",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "Band",
        "uri": "http://dbpedia.org/ontology/Band",
        "seq": "29,33",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "VP-8 and VP-10 shares which command structure ?",
    "SerialNumber": "4028",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/VP-8\u003e \u003chttp://dbpedia.org/ontology/commandStructure\u003e ?uri. \u003chttp://dbpedia.org/resource/VP-10\u003e \u003chttp://dbpedia.org/ontology/commandStructure\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "VP-8",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/VP-8",
        "seq": "0,4"
      },
      {
        "label": "VP-10",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/VP-10",
        "seq": "9,14"
      }
    ],
    "id": "5b6e06c40cae4a26af7b0d745c9ace62",
    "predicate mapping": [
      {
        "label": "command structure",
        "uri": "http://dbpedia.org/ontology/commandStructure",
        "seq": "28,45",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "command structure",
        "uri": "http://dbpedia.org/ontology/commandStructure",
        "seq": "28,45",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which person constituency is Duboce Triangle, San Francisco and military unit is USS Kittiwake (ASR-13)?",
    "SerialNumber": "4029",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/constituency\u003e \u003chttp://dbpedia.org/resource/Duboce_Triangle,_San_Francisco\u003e . ?uri \u003chttp://dbpedia.org/ontology/militaryUnit\u003e \u003chttp://dbpedia.org/resource/USS_Kittiwake_(ASR-13)\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Duboce Triangle",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Duboce_Triangle,_San_Francisco",
        "seq": "29,44"
      },
      {
        "label": "USS Kittiwake (ASR-13)",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/USS_Kittiwake_(ASR-13)",
        "seq": "81,103"
      }
    ],
    "id": "cdcc5bd84e7145dabfc4849ac69af063",
    "predicate mapping": [
      {
        "label": "constituency",
        "uri": "http://dbpedia.org/property/constituency",
        "seq": "13,25",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "military unit",
        "uri": "http://dbpedia.org/ontology/militaryUnit",
        "seq": "64,77",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/Person",
        "seq": "6,12",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "List the people residing in Wilton, Connecticut?",
    "SerialNumber": "4030",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/residence\u003e \u003chttp://dbpedia.org/resource/Wilton,_Connecticut\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Wilton, Connecticut",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Wilton,_Connecticut",
        "seq": "28,47"
      }
    ],
    "id": "c2a0f7c7f5f54180bbca4cd712cbfc97",
    "predicate mapping": [
      {
        "label": "residing",
        "uri": "http://dbpedia.org/property/residence",
        "seq": "16,24",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Is Ethics the main interests of Henry David Thoreau?",
    "SerialNumber": "4031",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Henry_David_Thoreau\u003e \u003chttp://dbpedia.org/property/mainInterests\u003e \u003chttp://dbpedia.org/resource/Ethics\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Henry David Thoreau",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Henry_David_Thoreau",
        "seq": "32,51"
      },
      {
        "label": "Ethics",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ethics",
        "seq": "3,9"
      }
    ],
    "id": "cce9e73a34874a43a8eec33a74970392",
    "predicate mapping": [
      {
        "label": "main interests",
        "uri": "http://dbpedia.org/property/mainInterests",
        "seq": "14,28",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the other party of Chandra Shekhar ?",
    "SerialNumber": "4032",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Chandra_Shekhar\u003e \u003chttp://dbpedia.org/ontology/otherParty\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Chandra Shekhar",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Chandra_Shekhar",
        "seq": "24,39"
      }
    ],
    "id": "610c262711204bef968971cfcdf19b3f",
    "predicate mapping": [
      {
        "label": "other party",
        "uri": "http://dbpedia.org/ontology/otherParty",
        "seq": "9,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which animator of Tommy Tucker\u0027s Tooth is also the film director of Alice\u0027s Wonderland ?",
    "SerialNumber": "4035",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Alice\u0027s_Wonderland\u003e \u003chttp://dbpedia.org/ontology/director\u003e ?uri. \u003chttp://dbpedia.org/resource/Tommy_Tucker\u0027s_Tooth\u003e \u003chttp://dbpedia.org/property/animator\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Alice\u0027s Wonderland",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Alice\u0027s_Wonderland",
        "seq": "68,86"
      },
      {
        "label": "Tommy Tucker\u0027s Tooth",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Tommy_Tucker\u0027s_Tooth",
        "seq": "18,38"
      }
    ],
    "id": "d23e68c01b574ddc9271799a3081aec1",
    "predicate mapping": [
      {
        "label": "film director",
        "uri": "http://dbpedia.org/ontology/director",
        "seq": "51,64",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "animator",
        "uri": "http://dbpedia.org/property/animator",
        "seq": "6,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "7",
    "question": "What was created by Larry David and Jerry Seinfeld?",
    "SerialNumber": "4036",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/ontology/creator\u003e \u003chttp://dbpedia.org/resource/Larry_David\u003e . ?uri \u003chttp://dbpedia.org/ontology/creator\u003e \u003chttp://dbpedia.org/resource/Jerry_Seinfeld\u003e . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Larry David",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Larry_David",
        "seq": "20,31"
      },
      {
        "label": "Jerry Seinfeld",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Jerry_Seinfeld",
        "seq": "36,50"
      }
    ],
    "id": "67455a7a7dde4d828284efb85a8ab936",
    "predicate mapping": [
      {
        "label": "created by",
        "uri": "http://dbpedia.org/ontology/creator",
        "seq": "9,19",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "created by",
        "uri": "http://dbpedia.org/ontology/creator",
        "seq": "9,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which license of the Microsoft Office Picture Manager is also the  product of the Apple Productivity Experience Group ",
    "SerialNumber": "4037",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Microsoft_Office_Picture_Manager\u003e \u003chttp://dbpedia.org/ontology/license\u003e ?uri. \u003chttp://dbpedia.org/resource/Apple_Productivity_Experience_Group\u003e \u003chttp://dbpedia.org/ontology/product\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Microsoft Office Picture Manager",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Microsoft_Office_Picture_Manager",
        "seq": "21,53"
      },
      {
        "label": "Apple Productivity Experience Group",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Apple_Productivity_Experience_Group",
        "seq": "82,117"
      }
    ],
    "id": "e647f8a4abe9470d911a1b8e08445ef3",
    "predicate mapping": [
      {
        "label": "license",
        "uri": "http://dbpedia.org/ontology/license",
        "seq": "6,13",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "product",
        "uri": "http://dbpedia.org/ontology/product",
        "seq": "67,74",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who does Cam PLante plays for ?",
    "SerialNumber": "4038",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Cam_Plante\u003e \u003chttp://dbpedia.org/property/playedFor\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Cam PLante",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Cam_Plante",
        "seq": "9,19"
      }
    ],
    "id": "57c6b07e37134052a728a3def6121f55",
    "predicate mapping": [
      {
        "label": "plays for",
        "uri": "http://dbpedia.org/property/playedFor",
        "seq": "20,29",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "For everyone who died in paris, count their different fields of work.",
    "SerialNumber": "4039",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/deathPlace\u003e \u003chttp://dbpedia.org/resource/Paris\u003e . ?x \u003chttp://dbpedia.org/property/fields\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "paris",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Paris",
        "seq": "25,30"
      }
    ],
    "id": "587b373a04ab48eeb4fd4cdba4abc95d",
    "predicate mapping": [
      {
        "label": "died in",
        "uri": "http://dbpedia.org/property/deathPlace",
        "seq": "17,24",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "fields",
        "uri": "http://dbpedia.org/property/fields",
        "seq": "54,60",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "101",
    "question": "Michael Deeley produce how many movies?",
    "SerialNumber": "4041",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/ontology/producer\u003e \u003chttp://dbpedia.org/resource/Michael_Deeley\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Michael Deeley",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Michael_Deeley",
        "seq": "0,14"
      }
    ],
    "id": "74bea979df0f49f0aafba5f2d1be9297",
    "predicate mapping": [
      {
        "label": "produce",
        "uri": "http://dbpedia.org/ontology/producer",
        "seq": "15,22",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Was tupac a member of Outlawz?",
    "SerialNumber": "4042",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Outlawz\u003e \u003chttp://dbpedia.org/property/pastMembers\u003e \u003chttp://dbpedia.org/resource/Tupac_Shakur\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Outlawz",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Outlawz",
        "seq": "22,29"
      },
      {
        "label": "tupac",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Tupac_Shakur",
        "seq": "4,9"
      }
    ],
    "id": "55dc98a69d7e46bc9d0d587c20083de5",
    "predicate mapping": [
      {
        "label": "member",
        "uri": "http://dbpedia.org/property/pastMembers",
        "seq": "12,18",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "311",
    "question": "List all the hubs of the airline whose one of the hub is Subang, Indonesia ?",
    "SerialNumber": "4045",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/hubs\u003e \u003chttp://dbpedia.org/resource/Subang,_Indonesia\u003e . ?x \u003chttp://dbpedia.org/property/hubs\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Airline\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Subang, Indonesia",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Subang,_Indonesia",
        "seq": "57,74"
      }
    ],
    "id": "1c29ceb7c9044f359907d2b49a487e25",
    "predicate mapping": [
      {
        "label": "hubs",
        "uri": "http://dbpedia.org/property/hubs",
        "seq": "13,17",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "hubs",
        "uri": "http://dbpedia.org/property/hubs",
        "seq": "13,17",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "airline",
        "uri": "http://dbpedia.org/ontology/Airline",
        "seq": "25,32",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "101",
    "question": "Music of how many things has been given by Akira Ifukube?",
    "SerialNumber": "4046",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/property/music\u003e \u003chttp://dbpedia.org/resource/Akira_Ifukube\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Akira Ifukube",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Akira_Ifukube",
        "seq": "43,56"
      }
    ],
    "id": "fa117cae2bc74153aff9272ca43d4cf1",
    "predicate mapping": [
      {
        "label": "Music",
        "uri": "http://dbpedia.org/property/music",
        "seq": "0,5",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "To which counties do Jerome avenue and Tremont avenue belong?",
    "SerialNumber": "4047",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Jerome_Avenue\u003e \u003chttp://dbpedia.org/property/counties\u003e ?uri. \u003chttp://dbpedia.org/resource/Tremont_Avenue\u003e \u003chttp://dbpedia.org/property/counties\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jerome avenue",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Jerome_Avenue",
        "seq": "21,34"
      },
      {
        "label": "Tremont avenue",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Tremont_Avenue",
        "seq": "39,53"
      }
    ],
    "id": "df64ee27d66345969b11885dcb0f0d32",
    "predicate mapping": [
      {
        "label": "counties",
        "uri": "http://dbpedia.org/property/counties",
        "seq": "9,17",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "counties",
        "uri": "http://dbpedia.org/property/counties",
        "seq": "9,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Pointe d\u0027Aveneyre belongs to which mountain range?",
    "SerialNumber": "4050",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Pointe_d\u0027Aveneyre\u003e \u003chttp://dbpedia.org/ontology/mountainRange\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Pointe d\u0027Aveneyre",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Pointe_d\u0027Aveneyre",
        "seq": "0,17"
      }
    ],
    "id": "1d1199ba017a424983574e26ac9cc2bb",
    "predicate mapping": [
      {
        "label": "mountain range",
        "uri": "http://dbpedia.org/ontology/mountainRange",
        "seq": "35,49",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Which currency is used by the record label of the Way to Your Heart?",
    "SerialNumber": "4051",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/The_Way_to_Your_Heart\u003e \u003chttp://dbpedia.org/ontology/recordLabel\u003e ?x . ?x \u003chttp://dbpedia.org/property/currency\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "the Way to Your Heart",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Way_to_Your_Heart",
        "seq": "46,67"
      }
    ],
    "id": "dd559ff6b26c4bb5b8fbcc642135b6f2",
    "predicate mapping": [
      {
        "label": "record label",
        "uri": "http://dbpedia.org/ontology/recordLabel",
        "seq": "30,42",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "currency",
        "uri": "http://dbpedia.org/property/currency",
        "seq": "6,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Who is the office holder whose resting place is Monticello?",
    "SerialNumber": "4052",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/restingPlace\u003e \u003chttp://dbpedia.org/resource/Monticello\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/OfficeHolder\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Monticello",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Monticello",
        "seq": "48,58"
      }
    ],
    "id": "2516a91470b8418cb05fc66aaf9f2d9e",
    "predicate mapping": [
      {
        "label": "resting place",
        "uri": "http://dbpedia.org/ontology/restingPlace",
        "seq": "31,44",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "office holder",
        "uri": "http://dbpedia.org/ontology/OfficeHolder",
        "seq": "11,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Where is the tombstone of the successor of Edward Wolcott?",
    "SerialNumber": "4054",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Edward_O._Wolcott\u003e \u003chttp://dbpedia.org/property/successor\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/restingPlace\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Edward Wolcott",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Edward_O._Wolcott",
        "seq": "43,57"
      }
    ],
    "id": "221d800881d44522a1fbc7d81300bcb8",
    "predicate mapping": [
      {
        "label": "successor",
        "uri": "http://dbpedia.org/property/successor",
        "seq": "30,39",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "tomb",
        "uri": "http://dbpedia.org/ontology/restingPlace",
        "seq": "13,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who are the associated musical artist of Carolyn Dennis?",
    "SerialNumber": "4055",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Carolyn_Dennis\u003e \u003chttp://dbpedia.org/ontology/associatedMusicalArtist\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Carolyn Dennis",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Carolyn_Dennis",
        "seq": "41,55"
      }
    ],
    "id": "bfea3fef8cd04b65b6f6dcf3078461ec",
    "predicate mapping": [
      {
        "label": "associated musical artist",
        "uri": "http://dbpedia.org/ontology/associatedMusicalArtist",
        "seq": "12,37",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What is the resting place of the engineer who was the architect of Plaza on DeWitt?",
    "SerialNumber": "4057",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Plaza_on_DeWitt\u003e \u003chttp://dbpedia.org/ontology/architect\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/restingPlace\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Plaza on DeWitt",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Plaza_on_DeWitt",
        "seq": "67,82"
      }
    ],
    "id": "81672c09f09c4704b6188617b549a4c1",
    "predicate mapping": [
      {
        "label": "architect",
        "uri": "http://dbpedia.org/ontology/architect",
        "seq": "54,63",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "resting place",
        "uri": "http://dbpedia.org/ontology/restingPlace",
        "seq": "12,25",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Is north caucasian emirate have an islamic government?",
    "SerialNumber": "4058",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/North_Caucasian_Emirate\u003e \u003chttp://dbpedia.org/ontology/governmentType\u003e \u003chttp://dbpedia.org/resource/Islam\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "north caucasian emirate",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/North_Caucasian_Emirate",
        "seq": "3,26"
      },
      {
        "label": "islam",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Islam",
        "seq": "35,40"
      }
    ],
    "id": "139890f04c654406a0930193ff1b4264",
    "predicate mapping": [
      {
        "label": "government",
        "uri": "http://dbpedia.org/ontology/governmentType",
        "seq": "43,53",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What is the game whose genre is Mind sport?",
    "SerialNumber": "4059",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/genre\u003e \u003chttp://dbpedia.org/resource/Mind_sport\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Game\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Mind sport",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Mind_sport",
        "seq": "32,42"
      }
    ],
    "id": "a5503f4d85444a1bbe8edc89a85b5984",
    "predicate mapping": [
      {
        "label": "genre",
        "uri": "http://dbpedia.org/ontology/genre",
        "seq": "23,28",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "game",
        "uri": "http://dbpedia.org/ontology/Game",
        "seq": "12,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "How many awards have graduates from the University of Queensland earned?",
    "SerialNumber": "4060",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/almaMater\u003e \u003chttp://dbpedia.org/resource/University_of_Queensland\u003e . ?x \u003chttp://dbpedia.org/property/awards\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "University of Queensland",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/University_of_Queensland",
        "seq": "40,64"
      }
    ],
    "id": "2befeb95c8a64b9e882868baec3055f9",
    "predicate mapping": [
      {
        "label": "graduates",
        "uri": "http://dbpedia.org/ontology/almaMater",
        "seq": "21,30",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "111",
    "question": "How many other architect are there of the historic places whose architect is also Stanford White ?",
    "SerialNumber": "4061",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/architect\u003e \u003chttp://dbpedia.org/resource/Stanford_White\u003e . ?x \u003chttp://dbpedia.org/ontology/architect\u003e ?uri }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Stanford White",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Stanford_White",
        "seq": "82,96"
      }
    ],
    "id": "25e3cd095c5a460e818600f9908859d5",
    "predicate mapping": [
      {
        "label": "architect",
        "uri": "http://dbpedia.org/ontology/architect",
        "seq": "15,24",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "architect",
        "uri": "http://dbpedia.org/ontology/architect",
        "seq": "15,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What cities are around the valley bordering Lake Mead?",
    "SerialNumber": "4064",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/border\u003e \u003chttp://dbpedia.org/resource/Lake_Mead\u003e . ?x \u003chttp://dbpedia.org/ontology/city\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Valley\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Lake Mead",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Lake_Mead",
        "seq": "44,53"
      }
    ],
    "id": "85b8568d9aef45bab5f160d0fd9ad8f9",
    "predicate mapping": [
      {
        "label": "border",
        "uri": "http://dbpedia.org/ontology/border",
        "seq": "34,40",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/city",
        "seq": "40,42",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "valley",
        "uri": "http://dbpedia.org/ontology/Valley",
        "seq": "27,33",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Who wrote A house not meant to stand and Akale?",
    "SerialNumber": "4065",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/A_House_Not_Meant_to_Stand\u003e \u003chttp://dbpedia.org/property/writer\u003e ?uri. \u003chttp://dbpedia.org/resource/Akale\u003e \u003chttp://dbpedia.org/ontology/writer\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "A house not meant to stand",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/A_House_Not_Meant_to_Stand",
        "seq": "10,36"
      },
      {
        "label": "Akale",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Akale",
        "seq": "41,46"
      }
    ],
    "id": "e4faeda0920e4c5ba42aed906478d386",
    "predicate mapping": [
      {
        "label": "wrote",
        "uri": "http://dbpedia.org/property/writer",
        "seq": "4,9",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "wrote",
        "uri": "http://dbpedia.org/ontology/writer",
        "seq": "4,9",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "The fugitive Kind and the Notebook of Trigorin is written by what author?",
    "SerialNumber": "4067",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/The_Fugitive_Kind\u003e \u003chttp://dbpedia.org/property/writer\u003e ?uri. \u003chttp://dbpedia.org/resource/The_Notebook_of_Trigorin\u003e \u003chttp://dbpedia.org/ontology/author\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "The fugitive Kind",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/The_Fugitive_Kind",
        "seq": "0,17"
      },
      {
        "label": "the Notebook of Trigorin",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Notebook_of_Trigorin",
        "seq": "22,46"
      }
    ],
    "id": "835d9ccd780342e6a7509b3ca855b1d1",
    "predicate mapping": [
      {
        "label": "written by",
        "uri": "http://dbpedia.org/property/writer",
        "seq": "50,60",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "written by",
        "uri": "http://dbpedia.org/ontology/author",
        "seq": "50,60",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "What are the television shows whose company is owned by Viacom?",
    "SerialNumber": "4068",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/owningCompany\u003e \u003chttp://dbpedia.org/resource/Viacom_(original)\u003e . ?uri \u003chttp://dbpedia.org/property/company\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Viacom",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Viacom_(original)",
        "seq": "56,62"
      }
    ],
    "id": "bfb53a96bd9c48b28e143f608fb4f1f9",
    "predicate mapping": [
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/owningCompany",
        "seq": "36,43",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/property/company",
        "seq": "36,43",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "13,28",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who is the operator of AT\u0026T Park ?",
    "SerialNumber": "4070",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/AT\u0026T_Park\u003e \u003chttp://dbpedia.org/property/operator\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "AT\u0026T Park",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/AT\u0026T_Park",
        "seq": "23,32"
      }
    ],
    "id": "df298794f4bc4b8bad182adc7794db3a",
    "predicate mapping": [
      {
        "label": "operator",
        "uri": "http://dbpedia.org/property/operator",
        "seq": "11,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the origin of Xynisteri?",
    "SerialNumber": "4071",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Xynisteri\u003e \u003chttp://dbpedia.org/ontology/origin\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Xynisteri",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Xynisteri",
        "seq": "22,31"
      }
    ],
    "id": "f703a972a86f40aa9788b9324760cfa2",
    "predicate mapping": [
      {
        "label": "origin",
        "uri": "http://dbpedia.org/ontology/origin",
        "seq": "12,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who gave the musical score  of 9 to 5 (musical) ?",
    "SerialNumber": "4072",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/9_to_5_(musical)\u003e \u003chttp://dbpedia.org/ontology/musicBy\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "9 to 5 (musical)",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/9_to_5_(musical)",
        "seq": "31,47"
      }
    ],
    "id": "65165521d68f40e7a5aa5bcd34fd39b3",
    "predicate mapping": [
      {
        "label": "musical",
        "uri": "http://dbpedia.org/ontology/musicBy",
        "seq": "13,20",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "Give me the number of home stadiums of teams managed by John Spencer.",
    "SerialNumber": "4074",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/manager\u003e \u003chttp://dbpedia.org/resource/John_Spencer_(Scottish_footballer)\u003e . ?x \u003chttp://dbpedia.org/ontology/homeStadium\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "John Spencer",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/John_Spencer_(Scottish_footballer)",
        "seq": "56,68"
      }
    ],
    "id": "7cd0eadad948412c89a6e72b70ef5624",
    "predicate mapping": [
      {
        "label": "managed",
        "uri": "http://dbpedia.org/property/manager",
        "seq": "45,52",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "home stadium",
        "uri": "http://dbpedia.org/ontology/homeStadium",
        "seq": "22,34",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who is the monarch of Bertalan Szemere ?",
    "SerialNumber": "4079",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Bertalan_Szemere\u003e \u003chttp://dbpedia.org/ontology/monarch\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Bertalan Szemere",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Bertalan_Szemere",
        "seq": "22,38"
      }
    ],
    "id": "b565b9a72721499f8857765c8003b017",
    "predicate mapping": [
      {
        "label": "monarch",
        "uri": "http://dbpedia.org/ontology/monarch",
        "seq": "11,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Which awards did the children of Erik Bergman won ?",
    "SerialNumber": "4082",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Erik_Bergman_(Lutheran_minister)\u003e \u003chttp://dbpedia.org/property/children\u003e ?x . ?x \u003chttp://dbpedia.org/property/awards\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Erik Bergman",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Erik_Bergman_(Lutheran_minister)",
        "seq": "33,45"
      }
    ],
    "id": "db5d49f80c774b80beb208bc62050aca",
    "predicate mapping": [
      {
        "label": "children",
        "uri": "http://dbpedia.org/property/children",
        "seq": "21,29",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards",
        "seq": "6,12",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Was Zachary Taylor a commander of the sixth infantry regiment of US?",
    "SerialNumber": "4083",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/6th_Infantry_Regiment_(United_States)\u003e \u003chttp://dbpedia.org/ontology/notableCommander\u003e \u003chttp://dbpedia.org/resource/Zachary_Taylor\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "sixth infantry regiment",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/6th_Infantry_Regiment_(United_States)",
        "seq": "38,61"
      },
      {
        "label": "Zachary Taylor",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Zachary_Taylor",
        "seq": "4,18"
      }
    ],
    "id": "ff4af6d5452c41b6824723db767008d2",
    "predicate mapping": [
      {
        "label": "commander",
        "uri": "http://dbpedia.org/ontology/notableCommander",
        "seq": "21,30",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name a basketball player with teams as Chicago Bulls and Phoenix Suns?",
    "SerialNumber": "4084",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/team\u003e \u003chttp://dbpedia.org/resource/Chicago_Bulls\u003e . ?uri \u003chttp://dbpedia.org/ontology/team\u003e \u003chttp://dbpedia.org/resource/Phoenix_Suns\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/BasketballPlayer\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Chicago Bulls",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Chicago_Bulls",
        "seq": "39,52"
      },
      {
        "label": "Phoenix Suns",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Phoenix_Suns",
        "seq": "57,69"
      }
    ],
    "id": "93eaea9dda124dfd85c775d17d677854",
    "predicate mapping": [
      {
        "label": "team",
        "uri": "http://dbpedia.org/property/team",
        "seq": "30,34",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/team",
        "seq": "30,34",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "basketball player",
        "uri": "http://dbpedia.org/ontology/BasketballPlayer",
        "seq": "7,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "101",
    "question": "Who all were venerated in Islam?",
    "SerialNumber": "4085",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/ontology/veneratedIn\u003e \u003chttp://dbpedia.org/resource/Islam\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Islam",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Islam",
        "seq": "26,31"
      }
    ],
    "id": "8ca57812f631476bade8b48c874f0758",
    "predicate mapping": [
      {
        "label": "venerated in",
        "uri": "http://dbpedia.org/ontology/veneratedIn",
        "seq": "13,25",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the state of Timothy J. Roemer ?",
    "SerialNumber": "4086",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Timothy_J._Roemer\u003e \u003chttp://dbpedia.org/property/state\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Timothy J. Roemer",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Timothy_J._Roemer",
        "seq": "18,35"
      }
    ],
    "id": "4ad334fedc644b27b70be5eb63ee7379",
    "predicate mapping": [
      {
        "label": "state",
        "uri": "http://dbpedia.org/property/state",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "What other awards have Becket fund for religious liberty winners received?",
    "SerialNumber": "4087",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/award\u003e \u003chttp://dbpedia.org/resource/Becket_Fund_for_Religious_Liberty\u003e . ?x \u003chttp://dbpedia.org/property/awards\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Becket fund for religious liberty",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Becket_Fund_for_Religious_Liberty",
        "seq": "23,56"
      }
    ],
    "id": "8e746dc2d0ca43a5bb2b3ed8dde3da88",
    "predicate mapping": [
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/award",
        "seq": "11,17",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards",
        "seq": "11,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "List the websites which the authors of Tornado own ?",
    "SerialNumber": "4088",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Tornado_(web_server)\u003e \u003chttp://dbpedia.org/property/author\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/owner\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Tornado",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Tornado_(web_server)",
        "seq": "39,46"
      }
    ],
    "id": "c8685c50587445548f0ea1f4e315dab0",
    "predicate mapping": [
      {
        "label": "authors",
        "uri": "http://dbpedia.org/property/author",
        "seq": "28,35",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "own",
        "uri": "http://dbpedia.org/ontology/owner",
        "seq": "47,50",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What is the field of interest of the advisor of Henri Maspero ?",
    "SerialNumber": "4089",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Henri_Maspero\u003e \u003chttp://dbpedia.org/ontology/academicAdvisor\u003e ?x . ?x \u003chttp://dbpedia.org/property/fields\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Henri Maspero",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Henri_Maspero",
        "seq": "48,61"
      }
    ],
    "id": "937f389062f442449e18135bef47f3eb",
    "predicate mapping": [
      {
        "label": "advisor",
        "uri": "http://dbpedia.org/ontology/academicAdvisor",
        "seq": "37,44",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "field",
        "uri": "http://dbpedia.org/property/fields",
        "seq": "12,17",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "8",
    "question": "Who has his resting place at  Plymouth, Vermont and office at Massachusetts House of Representatives?",
    "SerialNumber": "4092",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/restingPlace\u003e \u003chttp://dbpedia.org/resource/Plymouth,_Vermont\u003e . ?uri \u003chttp://dbpedia.org/property/office\u003e \u003chttp://dbpedia.org/resource/Massachusetts_House_of_Representatives\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Plymouth, Vermont",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Plymouth,_Vermont",
        "seq": "30,47"
      },
      {
        "label": "Massachusetts House of Representatives",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Massachusetts_House_of_Representatives",
        "seq": "62,100"
      }
    ],
    "id": "fe0d90f8a0604403896d62bdec7384a4",
    "predicate mapping": [
      {
        "label": "resting place",
        "uri": "http://dbpedia.org/ontology/restingPlace",
        "seq": "12,25",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "office",
        "uri": "http://dbpedia.org/property/office",
        "seq": "52,58",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the location of Dad\u0027s Root Beer on Google maps?",
    "SerialNumber": "4094",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Dad\u0027s_Root_Beer\u003e \u003chttp://dbpedia.org/property/locationCity\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Dad\u0027s Root Beer",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Dad\u0027s_Root_Beer",
        "seq": "24,39"
      }
    ],
    "id": "9e6adf11753c4b9aaf5b447c279a2806",
    "predicate mapping": [
      {
        "label": "location",
        "uri": "http://dbpedia.org/property/locationCity",
        "seq": "12,20",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which battle is Jim Jones associated with to which Allen Boyd is also associated ?",
    "SerialNumber": "4095",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Jim_Jones_(judge)\u003e \u003chttp://dbpedia.org/ontology/battle\u003e ?uri. \u003chttp://dbpedia.org/resource/Allen_Boyd\u003e \u003chttp://dbpedia.org/property/battles\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jim Jones",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Jim_Jones_(judge)",
        "seq": "16,25"
      },
      {
        "label": "Allen Boyd",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Allen_Boyd",
        "seq": "51,61"
      }
    ],
    "id": "6ec30fe0b36547bcb0729a3ebbe32668",
    "predicate mapping": [
      {
        "label": "battle",
        "uri": "http://dbpedia.org/ontology/battle",
        "seq": "6,12",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "battle",
        "uri": "http://dbpedia.org/property/battles",
        "seq": "6,12",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "For how many teams have the league players of Czech Extraliga, previously played?",
    "SerialNumber": "4096",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/league\u003e \u003chttp://dbpedia.org/resource/Czech_Extraliga\u003e . ?x \u003chttp://dbpedia.org/ontology/formerTeam\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Czech Extraliga",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Czech_Extraliga",
        "seq": "46,61"
      }
    ],
    "id": "a7c87f40069e4564932474884de6f858",
    "predicate mapping": [
      {
        "label": "league",
        "uri": "http://dbpedia.org/property/league",
        "seq": "28,34",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "teams",
        "uri": "http://dbpedia.org/ontology/formerTeam",
        "seq": "13,18",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "307",
    "question": "What is the band with previous members  Kevin Jonas and Joe Jonas?",
    "SerialNumber": "4098",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/property/pastMembers\u003e \u003chttp://dbpedia.org/resource/Kevin_Jonas\u003e . ?uri \u003chttp://dbpedia.org/property/pastMembers\u003e \u003chttp://dbpedia.org/resource/Joe_Jonas\u003e . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Band\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Kevin Jonas",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Kevin_Jonas",
        "seq": "40,51"
      },
      {
        "label": "Joe Jonas",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Joe_Jonas",
        "seq": "56,65"
      }
    ],
    "id": "8a6a91af36574b0f862aec730fbae99a",
    "predicate mapping": [
      {
        "label": "members",
        "uri": "http://dbpedia.org/property/pastMembers",
        "seq": "31,38",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "members",
        "uri": "http://dbpedia.org/property/pastMembers",
        "seq": "31,38",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "band",
        "uri": "http://dbpedia.org/ontology/Band",
        "seq": "12,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "7",
    "question": "Who offers the services of OneDrive and Outlook.com?",
    "SerialNumber": "4099",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/property/services\u003e \u003chttp://dbpedia.org/resource/OneDrive\u003e . ?uri \u003chttp://dbpedia.org/property/services\u003e \u003chttp://dbpedia.org/resource/Outlook.com\u003e . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "OneDrive",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/OneDrive",
        "seq": "27,35"
      },
      {
        "label": "Outlook.com",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Outlook.com",
        "seq": "40,51"
      }
    ],
    "id": "5123bf218806473e8b8cb4decac4c5c1",
    "predicate mapping": [
      {
        "label": "services",
        "uri": "http://dbpedia.org/property/services",
        "seq": "15,23",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "services",
        "uri": "http://dbpedia.org/property/services",
        "seq": "15,23",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the nearest city to David W. Brown House ?",
    "SerialNumber": "4103",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/David_W._Brown_House\u003e \u003chttp://dbpedia.org/ontology/nearestCity\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "David W. Brown House",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/David_W._Brown_House",
        "seq": "25,45"
      }
    ],
    "id": "9d219753a5dd4445828a1191d8654d63",
    "predicate mapping": [
      {
        "label": "nearest city",
        "uri": "http://dbpedia.org/ontology/nearestCity",
        "seq": "9,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "11",
    "question": "List all the awards won by the artist who has won SIGGRAPH ?",
    "SerialNumber": "4108",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/award\u003e \u003chttp://dbpedia.org/resource/SIGGRAPH\u003e . ?x \u003chttp://dbpedia.org/ontology/award\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "SIGGRAPH",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/SIGGRAPH",
        "seq": "50,58"
      }
    ],
    "id": "03d1aac45ffe4ba0a49144fd00b0c7b1",
    "predicate mapping": [
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/award",
        "seq": "13,19",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/award",
        "seq": "13,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the work institutions of Andrew Schally?",
    "SerialNumber": "4109",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Andrew_Schally\u003e \u003chttp://dbpedia.org/property/workInstitutions\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Andrew Schally",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Andrew_Schally",
        "seq": "30,44"
      }
    ],
    "id": "133aa4a4648d4bb3b3f15ed06a0566cd",
    "predicate mapping": [
      {
        "label": "work institutions",
        "uri": "http://dbpedia.org/property/workInstitutions",
        "seq": "9,26",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "311",
    "question": "What are the important buildings of the architect whose one of the significant building is Krasnye Vorota?",
    "SerialNumber": "4111",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/significantBuilding\u003e \u003chttp://dbpedia.org/resource/Krasnye_Vorota_(Moscow_Metro)\u003e . ?x \u003chttp://dbpedia.org/ontology/significantBuilding\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Architect\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Krasnye Vorota",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Krasnye_Vorota_(Moscow_Metro)",
        "seq": "91,105"
      }
    ],
    "id": "ab45c23c549d43d290b260f9930c647e",
    "predicate mapping": [
      {
        "label": "significant building",
        "uri": "http://dbpedia.org/ontology/significantBuilding",
        "seq": "67,87",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "significant building",
        "uri": "http://dbpedia.org/ontology/significantBuilding",
        "seq": "67,87",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "architect",
        "uri": "http://dbpedia.org/ontology/Architect",
        "seq": "40,49",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "102",
    "question": "In how many regions is the Baco Noir made?",
    "SerialNumber": "4112",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { \u003chttp://dbpedia.org/resource/Baco_noir\u003e \u003chttp://dbpedia.org/ontology/wineRegion\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Baco Noir",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Baco_noir",
        "seq": "27,36"
      }
    ],
    "id": "ae46bb43a8ad4337abd5a034defa5266",
    "predicate mapping": [
      {
        "label": "regions",
        "uri": "http://dbpedia.org/ontology/wineRegion",
        "seq": "12,19",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "Which movies have their music composed by someone that signed up with RCA Records?",
    "SerialNumber": "4113",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/recordLabel\u003e \u003chttp://dbpedia.org/resource/RCA_Records\u003e . ?uri \u003chttp://dbpedia.org/ontology/musicComposer\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "RCA Records",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/RCA_Records",
        "seq": "70,81"
      }
    ],
    "id": "59739c63c5ec4c2d8d42e0dfefe5565a",
    "predicate mapping": [
      {
        "label": "records",
        "uri": "http://dbpedia.org/ontology/recordLabel",
        "seq": "-1,6",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "composed",
        "uri": "http://dbpedia.org/ontology/musicComposer",
        "seq": "30,38",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "6,11",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Where does the jurisdiction of European Border and Coast Guard fall?",
    "SerialNumber": "4114",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/European_Border_and_Coast_Guard\u003e \u003chttp://dbpedia.org/property/jurisdiction\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "European Border and Coast Guard",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/European_Border_and_Coast_Guard",
        "seq": "31,62"
      }
    ],
    "id": "4d4d5eb4e4af459bb778d50006a9fc0b",
    "predicate mapping": [
      {
        "label": "jurisdiction",
        "uri": "http://dbpedia.org/property/jurisdiction",
        "seq": "15,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "401",
    "question": "How many movies have been directed by Orson Welles ?",
    "SerialNumber": "4116",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/property/director\u003e \u003chttp://dbpedia.org/resource/Orson_Welles\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Orson Welles",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Orson_Welles",
        "seq": "38,50"
      }
    ],
    "id": "8f627e41b2a9414c9787d98739f906f1",
    "predicate mapping": [
      {
        "label": "directed",
        "uri": "http://dbpedia.org/property/director",
        "seq": "26,34",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Name the common home port of the Trishna (yacht) and INS Viraat (R22)?",
    "SerialNumber": "4118",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Trishna_(yacht)\u003e \u003chttp://dbpedia.org/ontology/homeport\u003e ?uri. \u003chttp://dbpedia.org/resource/INS_Viraat_(R22)\u003e \u003chttp://dbpedia.org/ontology/homeport\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Trishna (yacht)",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Trishna_(yacht)",
        "seq": "33,48"
      },
      {
        "label": "INS Viraat (R22)",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/INS_Viraat_(R22)",
        "seq": "53,69"
      }
    ],
    "id": "2ac31aab8ba340e8947ddfab3797c6d5",
    "predicate mapping": [
      {
        "label": "port home",
        "uri": "http://dbpedia.org/ontology/homeport",
        "seq": "-1,8",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "port home",
        "uri": "http://dbpedia.org/ontology/homeport",
        "seq": "-1,8",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Where is the stadium of Philadelphia Rage ?",
    "SerialNumber": "4119",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Philadelphia_Rage\u003e \u003chttp://dbpedia.org/ontology/stadium\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Philadelphia Rage",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Philadelphia_Rage",
        "seq": "24,41"
      }
    ],
    "id": "9fbc4d9d9b2b46fab68cb8a4b910c7e3",
    "predicate mapping": [
      {
        "label": "stadium",
        "uri": "http://dbpedia.org/ontology/stadium",
        "seq": "13,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "What are the television shows whose network\u0027s successor is BBC Two?",
    "SerialNumber": "4120",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/successor\u003e \u003chttp://dbpedia.org/resource/BBC_Two\u003e . ?uri \u003chttp://dbpedia.org/ontology/network\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "BBC Two",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/BBC_Two",
        "seq": "59,66"
      }
    ],
    "id": "f9e9a9d4684b4c4cbc193ca30cb7b7b6",
    "predicate mapping": [
      {
        "label": "successor",
        "uri": "http://dbpedia.org/ontology/successor",
        "seq": "46,55",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "network",
        "uri": "http://dbpedia.org/ontology/network",
        "seq": "36,43",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "13,28",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which office holder\u0027s resting place is William Henry Harrison Tomb State Memorial and has governor named Charles Willing Byrd?",
    "SerialNumber": "4121",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/restingplace\u003e \u003chttp://dbpedia.org/resource/William_Henry_Harrison_Tomb_State_Memorial\u003e . ?uri \u003chttp://dbpedia.org/ontology/governor\u003e \u003chttp://dbpedia.org/resource/Charles_Willing_Byrd\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/OfficeHolder\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "William Henry Harrison Tomb State Memorial",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/William_Henry_Harrison_Tomb_State_Memorial",
        "seq": "39,81"
      },
      {
        "label": "Charles Willing Byrd",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Charles_Willing_Byrd",
        "seq": "105,125"
      }
    ],
    "id": "0899883477a746c38524653386c91724",
    "predicate mapping": [
      {
        "label": "resting place",
        "uri": "http://dbpedia.org/property/restingplace",
        "seq": "22,35",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "governor",
        "uri": "http://dbpedia.org/ontology/governor",
        "seq": "90,98",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "office holder",
        "uri": "http://dbpedia.org/ontology/OfficeHolder",
        "seq": "6,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "In which series do I find Minbari species\u0027 characters?",
    "SerialNumber": "4123",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/species\u003e \u003chttp://dbpedia.org/resource/Minbari\u003e . ?x \u003chttp://dbpedia.org/ontology/series\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/FictionalCharacter\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Minbari",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Minbari",
        "seq": "26,33"
      }
    ],
    "id": "909f5544b90d4c97b7f4ae5e5c24b2e7",
    "predicate mapping": [
      {
        "label": "species",
        "uri": "http://dbpedia.org/property/species",
        "seq": "34,41",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "series",
        "uri": "http://dbpedia.org/ontology/series",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "characters",
        "uri": "http://dbpedia.org/ontology/FictionalCharacter",
        "seq": "43,53",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who designed the language integrated query?",
    "SerialNumber": "4124",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Language_Integrated_Query\u003e \u003chttp://dbpedia.org/ontology/designer\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "language integrated query",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Language_Integrated_Query",
        "seq": "17,42"
      }
    ],
    "id": "13dbeaf27a1e47de9803518e1c666298",
    "predicate mapping": [
      {
        "label": "designed",
        "uri": "http://dbpedia.org/ontology/designer",
        "seq": "4,12",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "List the associates of bands which have a label by Motown ?",
    "SerialNumber": "4125",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/recordLabel\u003e \u003chttp://dbpedia.org/resource/Motown\u003e . ?x \u003chttp://dbpedia.org/property/associatedActs\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Band\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Motown",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Motown",
        "seq": "51,57"
      }
    ],
    "id": "38ca63fc474a462fafe6fec5ad06b1e0",
    "predicate mapping": [
      {
        "label": "label",
        "uri": "http://dbpedia.org/ontology/recordLabel",
        "seq": "42,47",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "associates",
        "uri": "http://dbpedia.org/property/associatedActs",
        "seq": "9,19",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "band",
        "uri": "http://dbpedia.org/ontology/Band",
        "seq": "23,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "311",
    "question": "Name the partners of the models whose one of the partner is Thom Evans ?",
    "SerialNumber": "4126",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/partner\u003e \u003chttp://dbpedia.org/resource/Thom_Evans\u003e . ?x \u003chttp://dbpedia.org/ontology/partner\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Model\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Thom Evans",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Thom_Evans",
        "seq": "60,70"
      }
    ],
    "id": "eca396c7779e4ee7b71db8d671efb974",
    "predicate mapping": [
      {
        "label": "partner",
        "uri": "http://dbpedia.org/ontology/partner",
        "seq": "9,16",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "partner",
        "uri": "http://dbpedia.org/ontology/partner",
        "seq": "9,16",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "model",
        "uri": "http://dbpedia.org/ontology/Model",
        "seq": "25,30",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Is Greg Weeks the band member of Beyond the Sixth Seal?",
    "SerialNumber": "4127",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Beyond_the_Sixth_Seal\u003e \u003chttp://dbpedia.org/ontology/bandMember\u003e \u003chttp://dbpedia.org/resource/Greg_Weeks\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Beyond the Sixth Seal",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Beyond_the_Sixth_Seal",
        "seq": "33,54"
      },
      {
        "label": "Greg Weeks",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Greg_Weeks",
        "seq": "3,13"
      }
    ],
    "id": "0b2cdf195c3d45109c78f3171835c056",
    "predicate mapping": [
      {
        "label": "band member",
        "uri": "http://dbpedia.org/ontology/bandMember",
        "seq": "18,29",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who was the vice president under which elizabeth alexander served?",
    "SerialNumber": "4128",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Elizabeth_Alexander_(press_secretary)\u003e \u003chttp://dbpedia.org/ontology/vicePresident\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "elizabeth alexander",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Elizabeth_Alexander_(press_secretary)",
        "seq": "39,58"
      }
    ],
    "id": "8815d1ddfc484214b7b55c86c2793625",
    "predicate mapping": [
      {
        "label": "vice president",
        "uri": "http://dbpedia.org/ontology/vicePresident",
        "seq": "12,26",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "307",
    "question": "Name the television show voiced by April Stewart and Eliza Schneider?",
    "SerialNumber": "4129",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/property/voices\u003e \u003chttp://dbpedia.org/resource/April_Stewart\u003e . ?uri \u003chttp://dbpedia.org/property/voices\u003e \u003chttp://dbpedia.org/resource/Eliza_Schneider\u003e . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "April Stewart",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/April_Stewart",
        "seq": "35,48"
      },
      {
        "label": "Eliza Schneider",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Eliza_Schneider",
        "seq": "53,68"
      }
    ],
    "id": "fecf2980af9448768aa17425d8c48dec",
    "predicate mapping": [
      {
        "label": "voiced",
        "uri": "http://dbpedia.org/property/voices",
        "seq": "25,31",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "voiced",
        "uri": "http://dbpedia.org/property/voices",
        "seq": "25,31",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "9,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Is Robin Gibb the singer of Oh! Darling?",
    "SerialNumber": "4130",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Oh!_Darling\u003e \u003chttp://dbpedia.org/ontology/musicalArtist\u003e \u003chttp://dbpedia.org/resource/Robin_Gibb\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Oh! Darling",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Oh!_Darling",
        "seq": "28,39"
      },
      {
        "label": "Robin Gibb",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Robin_Gibb",
        "seq": "3,13"
      }
    ],
    "id": "ee5fc86d6ea147f0b4ab317a186d2083",
    "predicate mapping": [
      {
        "label": "singer",
        "uri": "http://dbpedia.org/ontology/musicalArtist",
        "seq": "18,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Name the musician who gave the music in Tonight\u0027s the night and is also wedded to Alana Stewart ?",
    "SerialNumber": "4136",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Tonight\u0027s_the_Night_(2003_musical)\u003e \u003chttp://dbpedia.org/property/music\u003e ?uri. \u003chttp://dbpedia.org/resource/Alana_Stewart\u003e \u003chttp://dbpedia.org/ontology/spouse\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Tonight\u0027s the night",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Tonight\u0027s_the_Night_(2003_musical)",
        "seq": "40,59"
      },
      {
        "label": "Alana Stewart",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Alana_Stewart",
        "seq": "82,95"
      }
    ],
    "id": "2275055777524db1a78e0856a6e2cc1b",
    "predicate mapping": [
      {
        "label": "music",
        "uri": "http://dbpedia.org/property/music",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "wedded to",
        "uri": "http://dbpedia.org/ontology/spouse",
        "seq": "72,81",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Is Roger Federer the flagbearer of Switzerland at the 2004 Summer Olympics?",
    "SerialNumber": "4138",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Switzerland_at_the_2004_Summer_Olympics\u003e \u003chttp://dbpedia.org/property/flagbearer\u003e \u003chttp://dbpedia.org/resource/Roger_Federer\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Switzerland at the 2004 Summer Olympics",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Switzerland_at_the_2004_Summer_Olympics",
        "seq": "35,74"
      },
      {
        "label": "Roger Federer",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Roger_Federer",
        "seq": "3,16"
      }
    ],
    "id": "9a61bb81243145d9a21abaa26c33e519",
    "predicate mapping": [
      {
        "label": "flagbearer",
        "uri": "http://dbpedia.org/property/flagbearer",
        "seq": "21,31",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Which US city can be said to be a part of american mediterranean sea and the biscayne bay?",
    "SerialNumber": "4140",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/American_Mediterranean_Sea\u003e \u003chttp://dbpedia.org/property/cities\u003e ?uri. \u003chttp://dbpedia.org/resource/Biscayne_Bay\u003e \u003chttp://dbpedia.org/property/cities\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "american mediterranean sea",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/American_Mediterranean_Sea",
        "seq": "42,68"
      },
      {
        "label": "biscayne bay",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Biscayne_Bay",
        "seq": "77,89"
      }
    ],
    "id": "b7df21da53144aef8f0ee3bb6dbc9e31",
    "predicate mapping": [
      {
        "label": "city",
        "uri": "http://dbpedia.org/property/cities",
        "seq": "9,13",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "city",
        "uri": "http://dbpedia.org/property/cities",
        "seq": "9,13",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the broadcast area of CFRX ?",
    "SerialNumber": "4142",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/CFRX\u003e \u003chttp://dbpedia.org/ontology/broadcastArea\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "CFRX",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/CFRX",
        "seq": "30,34"
      }
    ],
    "id": "9a955de401c24f42860fa3e6615c803a",
    "predicate mapping": [
      {
        "label": "broadcast area",
        "uri": "http://dbpedia.org/ontology/broadcastArea",
        "seq": "12,26",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the venerated in of Edwin of Northumbria ?",
    "SerialNumber": "4146",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Edwin_of_Northumbria\u003e \u003chttp://dbpedia.org/property/veneratedIn\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Edwin of Northumbria",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Edwin_of_Northumbria",
        "seq": "28,48"
      }
    ],
    "id": "a09f56627a1f4c2b81bc88acfcd1d276",
    "predicate mapping": [
      {
        "label": "venerated in",
        "uri": "http://dbpedia.org/property/veneratedIn",
        "seq": "12,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Which labels have published songs written by Harry Connick Jr?",
    "SerialNumber": "4148",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/writer\u003e \u003chttp://dbpedia.org/resource/Harry_Connick,_Jr.\u003e . ?x \u003chttp://dbpedia.org/property/label\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Song\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Harry Connick Jr",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Harry_Connick,_Jr.",
        "seq": "45,61"
      }
    ],
    "id": "02fc143c1e0e4cdfb5594f43eb88137c",
    "predicate mapping": [
      {
        "label": "written by",
        "uri": "http://dbpedia.org/ontology/writer",
        "seq": "34,44",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "label",
        "uri": "http://dbpedia.org/property/label",
        "seq": "6,11",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "song",
        "uri": "http://dbpedia.org/ontology/Song",
        "seq": "28,32",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What cities are around the sea which flows into Marmara?",
    "SerialNumber": "4149",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/inflow\u003e \u003chttp://dbpedia.org/resource/Sea_of_Marmara\u003e . ?x \u003chttp://dbpedia.org/property/cities\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Sea\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Marmara",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Sea_of_Marmara",
        "seq": "48,55"
      }
    ],
    "id": "2eb3f8a41e454021a4af658ede9f06ed",
    "predicate mapping": [
      {
        "label": "flows",
        "uri": "http://dbpedia.org/property/inflow",
        "seq": "37,42",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "cities",
        "uri": "http://dbpedia.org/property/cities",
        "seq": "5,11",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "sea",
        "uri": "http://dbpedia.org/ontology/Sea",
        "seq": "27,30",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the sea into which Danish Straits flows and has Kaliningrad as one of the city on the shore ?",
    "SerialNumber": "4150",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/cities\u003e \u003chttp://dbpedia.org/resource/Kaliningrad\u003e . ?uri \u003chttp://dbpedia.org/property/outflow\u003e \u003chttp://dbpedia.org/resource/Danish_straits\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Sea\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Kaliningrad",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Kaliningrad",
        "seq": "53,64"
      },
      {
        "label": "Danish Straits",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Danish_straits",
        "seq": "24,38"
      }
    ],
    "id": "f53a890c59d2460590398aa51119216e",
    "predicate mapping": [
      {
        "label": "city",
        "uri": "http://dbpedia.org/property/cities",
        "seq": "79,83",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "flows",
        "uri": "http://dbpedia.org/property/outflow",
        "seq": "39,44",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "sea",
        "uri": "http://dbpedia.org/ontology/Sea",
        "seq": "9,12",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What sports team\u0027s arena is The Palace of Auburn Hills",
    "SerialNumber": "4151",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/arena\u003e \u003chttp://dbpedia.org/resource/The_Palace_of_Auburn_Hills\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/SportsTeam\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "The Palace of Auburn Hills",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Palace_of_Auburn_Hills",
        "seq": "28,54"
      }
    ],
    "id": "20805a9d262743e789ad75cd118f889a",
    "predicate mapping": [
      {
        "label": "arena",
        "uri": "http://dbpedia.org/property/arena",
        "seq": "19,24",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "sports team",
        "uri": "http://dbpedia.org/ontology/SportsTeam",
        "seq": "5,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "101",
    "question": "ITV employes how many people?",
    "SerialNumber": "4152",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/property/employer\u003e \u003chttp://dbpedia.org/resource/ITV_(TV_network)\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "ITV",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/ITV_(TV_network)",
        "seq": "0,3"
      }
    ],
    "id": "e163314e98334f77af0d98ad0c754fc7",
    "predicate mapping": [
      {
        "label": "employes",
        "uri": "http://dbpedia.org/property/employer",
        "seq": "4,12",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What is the mascot of the military unit whose commander is Herbert Bautista ?",
    "SerialNumber": "4153",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/notableCommander\u003e \u003chttp://dbpedia.org/resource/Herbert_Bautista\u003e . ?x \u003chttp://dbpedia.org/property/mascot\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MilitaryUnit\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Herbert Bautista",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Herbert_Bautista",
        "seq": "59,75"
      }
    ],
    "id": "b75560b2e765458984a0419ab35147c9",
    "predicate mapping": [
      {
        "label": "commander",
        "uri": "http://dbpedia.org/ontology/notableCommander",
        "seq": "46,55",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "mascot",
        "uri": "http://dbpedia.org/property/mascot",
        "seq": "12,18",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "military unit",
        "uri": "http://dbpedia.org/ontology/MilitaryUnit",
        "seq": "26,39",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Whihc associate of THomas Bryan Martin is also the founder of Pittsburgh ?",
    "SerialNumber": "4154",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Thomas_Bryan_Martin\u003e \u003chttp://dbpedia.org/ontology/associate\u003e ?uri. \u003chttp://dbpedia.org/resource/Pittsburgh\u003e \u003chttp://dbpedia.org/ontology/founder\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "THomas Bryan Martin",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Thomas_Bryan_Martin",
        "seq": "19,38"
      },
      {
        "label": "Pittsburgh",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Pittsburgh",
        "seq": "62,72"
      }
    ],
    "id": "128fa3e3924b4f7f8f3960d994deda55",
    "predicate mapping": [
      {
        "label": "associate",
        "uri": "http://dbpedia.org/ontology/associate",
        "seq": "6,15",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "founder of",
        "uri": "http://dbpedia.org/ontology/founder",
        "seq": "51,61",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What are the awards won by the film editor of The Search?",
    "SerialNumber": "4155",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/The_Search_(2014_film)\u003e \u003chttp://dbpedia.org/ontology/editing\u003e ?x . ?x \u003chttp://dbpedia.org/property/awards\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "The Search",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Search_(2014_film)",
        "seq": "46,56"
      }
    ],
    "id": "64e38f50da46457e8bb6a34f4d6cb76f",
    "predicate mapping": [
      {
        "label": "editor",
        "uri": "http://dbpedia.org/ontology/editing",
        "seq": "36,42",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards",
        "seq": "13,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Name some schools with a bison as their mascot?",
    "SerialNumber": "4160",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/mascot\u003e \u003chttp://dbpedia.org/resource/Bison\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/School\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "bison",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Bison",
        "seq": "25,30"
      }
    ],
    "id": "66cb24d6ac6b49799c5f50a7afff386e",
    "predicate mapping": [
      {
        "label": "mascot",
        "uri": "http://dbpedia.org/property/mascot",
        "seq": "40,46",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "school",
        "uri": "http://dbpedia.org/ontology/School",
        "seq": "10,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "8",
    "question": "Which current Michigan Wolverines team member debuted in Chicago Bears ?",
    "SerialNumber": "4164",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/debutteam\u003e \u003chttp://dbpedia.org/resource/Chicago_Bears\u003e . ?uri \u003chttp://dbpedia.org/property/currentteam\u003e \u003chttp://dbpedia.org/resource/Michigan_Wolverines\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Chicago Bears",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Chicago_Bears",
        "seq": "57,70"
      },
      {
        "label": "Michigan Wolverines",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Michigan_Wolverines",
        "seq": "14,33"
      }
    ],
    "id": "1d381dc7465f4077a61b29e0787de6e6",
    "predicate mapping": [
      {
        "label": "debuted",
        "uri": "http://dbpedia.org/property/debutteam",
        "seq": "46,53",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "current team",
        "uri": "http://dbpedia.org/property/currentteam",
        "seq": "-1,11",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who operates Liverpool Playhouse ?",
    "SerialNumber": "4165",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Liverpool_Playhouse\u003e \u003chttp://dbpedia.org/ontology/operatedBy\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Liverpool Playhouse",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Liverpool_Playhouse",
        "seq": "13,32"
      }
    ],
    "id": "0bad2fab137148b9af20a97efb55fe8b",
    "predicate mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/ontology/operatedBy",
        "seq": "0,0",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who owns Torrey Pines Gliderport?",
    "SerialNumber": "4167",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Torrey_Pines_Gliderport\u003e \u003chttp://dbpedia.org/property/owner\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Torrey Pines Gliderport",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Torrey_Pines_Gliderport",
        "seq": "9,32"
      }
    ],
    "id": "832149002e9c4fbb885ab3ab42730390",
    "predicate mapping": [
      {
        "label": "owns",
        "uri": "http://dbpedia.org/property/owner",
        "seq": "4,8",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "where did Deion Sanders debut?",
    "SerialNumber": "4168",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Deion_Sanders\u003e \u003chttp://dbpedia.org/property/debutteam\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Deion Sanders",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Deion_Sanders",
        "seq": "10,23"
      }
    ],
    "id": "23972462c8c7409cb83f6a8f21f0c607",
    "predicate mapping": [
      {
        "label": "debut",
        "uri": "http://dbpedia.org/property/debutteam",
        "seq": "24,29",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which office holder\u0027s successor is Adrian A. Basora and child named Lori Black?",
    "SerialNumber": "4169",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/successor\u003e \u003chttp://dbpedia.org/resource/Adrian_A._Basora\u003e . ?uri \u003chttp://dbpedia.org/property/children\u003e \u003chttp://dbpedia.org/resource/Lori_Black\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/OfficeHolder\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Adrian A. Basora",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Adrian_A._Basora",
        "seq": "35,51"
      },
      {
        "label": "Lori Black",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Lori_Black",
        "seq": "68,78"
      }
    ],
    "id": "ce4f33c52b244261be90196bcfed8237",
    "predicate mapping": [
      {
        "label": "successor",
        "uri": "http://dbpedia.org/property/successor",
        "seq": "22,31",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "child",
        "uri": "http://dbpedia.org/property/children",
        "seq": "56,61",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "office holder",
        "uri": "http://dbpedia.org/ontology/OfficeHolder",
        "seq": "6,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "307",
    "question": "Name the tv show with judges Randy Jackson and Jennifer Lopez?",
    "SerialNumber": "4171",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/property/judges\u003e \u003chttp://dbpedia.org/resource/Randy_Jackson\u003e . ?uri \u003chttp://dbpedia.org/property/judges\u003e \u003chttp://dbpedia.org/resource/Jennifer_Lopez\u003e . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Randy Jackson",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Randy_Jackson",
        "seq": "29,42"
      },
      {
        "label": "Jennifer Lopez",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Jennifer_Lopez",
        "seq": "47,61"
      }
    ],
    "id": "218fb3f1f7bf4d3599daaf5a95885fbe",
    "predicate mapping": [
      {
        "label": "judges",
        "uri": "http://dbpedia.org/property/judges",
        "seq": "22,28",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "judges",
        "uri": "http://dbpedia.org/property/judges",
        "seq": "22,28",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "12,16",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the nationality of Sune Agerschou ?",
    "SerialNumber": "4177",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Sune_Agerschou\u003e \u003chttp://dbpedia.org/ontology/nationality\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Sune Agerschou",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Sune_Agerschou",
        "seq": "27,41"
      }
    ],
    "id": "571c9d7dbe1f4a07a655803197f286d4",
    "predicate mapping": [
      {
        "label": "nationality",
        "uri": "http://dbpedia.org/ontology/nationality",
        "seq": "12,23",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "What acts and artists are associated with people who have worked with Divertis?",
    "SerialNumber": "4179",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/associatedActs\u003e \u003chttp://dbpedia.org/resource/Divertis\u003e . ?x \u003chttp://dbpedia.org/ontology/associatedMusicalArtist\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Divertis",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Divertis",
        "seq": "70,78"
      }
    ],
    "id": "741520a75f1a4ae9bd0c91c2dcde6627",
    "predicate mapping": [
      {
        "label": "associated acts",
        "uri": "http://dbpedia.org/property/associatedActs",
        "seq": "-1,14",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "associated",
        "uri": "http://dbpedia.org/ontology/associatedMusicalArtist",
        "seq": "26,36",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "How many companies have manufactured the rockets launched from the Cape Canaveral Air Force Station?",
    "SerialNumber": "4181",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/launchSite\u003e \u003chttp://dbpedia.org/resource/Cape_Canaveral_Air_Force_Station\u003e . ?x \u003chttp://dbpedia.org/ontology/manufacturer\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Cape Canaveral Air Force Station",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Cape_Canaveral_Air_Force_Station",
        "seq": "67,99"
      }
    ],
    "id": "58d7140c8ca74c2d91c063e1e8108063",
    "predicate mapping": [
      {
        "label": "launched",
        "uri": "http://dbpedia.org/ontology/launchSite",
        "seq": "49,57",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "manufactured",
        "uri": "http://dbpedia.org/ontology/manufacturer",
        "seq": "24,36",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Name the  former broadcast network of the television station which is the sister stations of WGBC?",
    "SerialNumber": "4182",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/WGBC\u003e \u003chttp://dbpedia.org/property/sisterStations\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/formerBroadcastNetwork\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "WGBC",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/WGBC",
        "seq": "93,97"
      }
    ],
    "id": "f8d33f0a3ea5417ca2071226875c8ff9",
    "predicate mapping": [
      {
        "label": "sister stations",
        "uri": "http://dbpedia.org/property/sisterStations",
        "seq": "74,89",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "former broadcast network",
        "uri": "http://dbpedia.org/ontology/formerBroadcastNetwork",
        "seq": "10,34",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Which software uses GTK+ as programming language?",
    "SerialNumber": "4183",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/programmingLanguage\u003e \u003chttp://dbpedia.org/resource/GTK+\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Software\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "GTK+",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/GTK+",
        "seq": "20,24"
      }
    ],
    "id": "fc01eb147abb4f76a27e4ee15954b519",
    "predicate mapping": [
      {
        "label": "programming language",
        "uri": "http://dbpedia.org/property/programmingLanguage",
        "seq": "28,48",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "software",
        "uri": "http://dbpedia.org/ontology/Software",
        "seq": "6,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the distributing label of StandBy Records ?",
    "SerialNumber": "4184",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/StandBy_Records\u003e \u003chttp://dbpedia.org/ontology/distributingLabel\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "StandBy Records",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/StandBy_Records",
        "seq": "34,49"
      }
    ],
    "id": "9fd2de743eac4abf82d003f30ce832e3",
    "predicate mapping": [
      {
        "label": "distributing label",
        "uri": "http://dbpedia.org/ontology/distributingLabel",
        "seq": "12,30",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "311",
    "question": "List all the writers of the comics which has Robert Bernstein as one of the writer ?",
    "SerialNumber": "4186",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/writers\u003e \u003chttp://dbpedia.org/resource/Robert_Bernstein_(comics)\u003e . ?x \u003chttp://dbpedia.org/property/writers\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Comic\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Robert Bernstein",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Robert_Bernstein_(comics)",
        "seq": "45,61"
      }
    ],
    "id": "8f0cd88f6b6a4041bbed6b3723281f21",
    "predicate mapping": [
      {
        "label": "writers",
        "uri": "http://dbpedia.org/property/writers",
        "seq": "13,20",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "writers",
        "uri": "http://dbpedia.org/property/writers",
        "seq": "13,20",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "comic",
        "uri": "http://dbpedia.org/ontology/Comic",
        "seq": "28,33",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Is Sloth in the Chordate phylum?",
    "SerialNumber": "4192",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Sloth\u003e \u003chttp://dbpedia.org/property/phylum\u003e \u003chttp://dbpedia.org/resource/Chordate\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Sloth",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Sloth",
        "seq": "3,8"
      },
      {
        "label": "Chordate",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Chordate",
        "seq": "16,24"
      }
    ],
    "id": "7043f3a3431945138482107c7f71a3a7",
    "predicate mapping": [
      {
        "label": "phylum",
        "uri": "http://dbpedia.org/property/phylum",
        "seq": "25,31",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Is Eddie Bravo the trainer of Shinya Aoki?",
    "SerialNumber": "4194",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Shinya_Aoki\u003e \u003chttp://dbpedia.org/property/trainer\u003e \u003chttp://dbpedia.org/resource/Eddie_Bravo\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Shinya Aoki",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Shinya_Aoki",
        "seq": "30,41"
      },
      {
        "label": "Eddie Bravo",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Eddie_Bravo",
        "seq": "3,14"
      }
    ],
    "id": "0a3456b26fd7499cb6adbde077a787ab",
    "predicate mapping": [
      {
        "label": "trainer",
        "uri": "http://dbpedia.org/property/trainer",
        "seq": "19,26",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the operating system of the LG Optimus Vu and also the developer of the Dart (programming language)",
    "SerialNumber": "4196",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/LG_Optimus_Vu\u003e \u003chttp://dbpedia.org/ontology/operatingSystem\u003e ?uri. \u003chttp://dbpedia.org/resource/Dart_(programming_language)\u003e \u003chttp://dbpedia.org/property/developer\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "LG Optimus Vu",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/LG_Optimus_Vu",
        "seq": "36,49"
      },
      {
        "label": "Dart (programming language)",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Dart_(programming_language)",
        "seq": "80,107"
      }
    ],
    "id": "39f06aa4252f4be0914611ab542313a4",
    "predicate mapping": [
      {
        "label": "operating system",
        "uri": "http://dbpedia.org/ontology/operatingSystem",
        "seq": "12,28",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "developer",
        "uri": "http://dbpedia.org/property/developer",
        "seq": "63,72",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "What are some products manufactured by Sony? ",
    "SerialNumber": "4197",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/manufacturer\u003e \u003chttp://dbpedia.org/resource/Sony\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Sony",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Sony",
        "seq": "39,43"
      }
    ],
    "id": "20279be806b8412f9bc87ac6de8c50aa",
    "predicate mapping": [
      {
        "label": "manufactured by",
        "uri": "http://dbpedia.org/ontology/manufacturer",
        "seq": "23,38",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What is the almamater of the successor of F. A. Little, Jr.? ",
    "SerialNumber": "4198",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/F._A._Little,_Jr.\u003e \u003chttp://dbpedia.org/ontology/successor\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/almaMater\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "F. A. Little, Jr.",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/F._A._Little,_Jr.",
        "seq": "42,59"
      }
    ],
    "id": "6b0903f50742485485384cf6feffa59b",
    "predicate mapping": [
      {
        "label": "successor",
        "uri": "http://dbpedia.org/ontology/successor",
        "seq": "29,38",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "almamater",
        "uri": "http://dbpedia.org/ontology/almaMater",
        "seq": "12,21",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "List the alma mater of the person who is wedded to Sissela Bok.",
    "SerialNumber": "4199",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/spouse\u003e \u003chttp://dbpedia.org/resource/Sissela_Bok\u003e . ?x \u003chttp://dbpedia.org/property/almaMater\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Sissela Bok",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Sissela_Bok",
        "seq": "51,62"
      }
    ],
    "id": "888a87ee40884a92bb779b4a08e06f63",
    "predicate mapping": [
      {
        "label": "wedded to",
        "uri": "http://dbpedia.org/ontology/spouse",
        "seq": "41,50",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/property/almaMater",
        "seq": "9,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Does Chicago own the Monroe Station?",
    "SerialNumber": "4200",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Monroe_station_(CTA_Blue_Line)\u003e \u003chttp://dbpedia.org/property/owned\u003e \u003chttp://dbpedia.org/resource/Chicago\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Monroe Station",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Monroe_station_(CTA_Blue_Line)",
        "seq": "21,35"
      },
      {
        "label": "Chicago",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Chicago",
        "seq": "5,12"
      }
    ],
    "id": "7dee62b229f644b4a13aecb01ef09554",
    "predicate mapping": [
      {
        "label": "own",
        "uri": "http://dbpedia.org/property/owned",
        "seq": "13,16",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "Name the children of the person who is the star of The Weathered Underground ?",
    "SerialNumber": "4203",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/The_Weathered_Underground\u003e \u003chttp://dbpedia.org/ontology/starring\u003e ?x . ?x \u003chttp://dbpedia.org/property/children\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "The Weathered Underground",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Weathered_Underground",
        "seq": "51,76"
      }
    ],
    "id": "407e2cde683b484b86e7ee73d945f1fe",
    "predicate mapping": [
      {
        "label": "star",
        "uri": "http://dbpedia.org/ontology/starring",
        "seq": "43,47",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "children",
        "uri": "http://dbpedia.org/property/children",
        "seq": "9,17",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/Person",
        "seq": "25,31",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "Which rivers start in a country whose leader is Irene Mambilima?",
    "SerialNumber": "4205",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/leaderName\u003e \u003chttp://dbpedia.org/resource/Irene_Mambilima\u003e . ?uri \u003chttp://dbpedia.org/ontology/sourceCountry\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/River\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Irene Mambilima",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Irene_Mambilima",
        "seq": "48,63"
      }
    ],
    "id": "82e10e11c396490daac1e2ef25d844d1",
    "predicate mapping": [
      {
        "label": "leader",
        "uri": "http://dbpedia.org/property/leaderName",
        "seq": "38,44",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/sourceCountry",
        "seq": "24,31",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River",
        "seq": "6,11",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What is the nationality of the successor of Nii Okaidja Adamafio ?",
    "SerialNumber": "4206",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Nii_Okaija_Adamafio\u003e \u003chttp://dbpedia.org/property/successor\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/nationality\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Nii Okaidja Adamafio",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Nii_Okaija_Adamafio",
        "seq": "44,64"
      }
    ],
    "id": "f1f238c4994d4495a5aef3ce1795c489",
    "predicate mapping": [
      {
        "label": "successor",
        "uri": "http://dbpedia.org/property/successor",
        "seq": "31,40",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "nationality",
        "uri": "http://dbpedia.org/ontology/nationality",
        "seq": "12,23",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who are the producers of the movies  which has music by Gary Chang ?",
    "SerialNumber": "4207",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/music\u003e \u003chttp://dbpedia.org/resource/Gary_Chang\u003e . ?x \u003chttp://dbpedia.org/property/producer\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Gary Chang",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Gary_Chang",
        "seq": "56,66"
      }
    ],
    "id": "db2ca8419aed42419b8a19d1909a9c24",
    "predicate mapping": [
      {
        "label": "music",
        "uri": "http://dbpedia.org/property/music",
        "seq": "47,52",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "producer",
        "uri": "http://dbpedia.org/property/producer",
        "seq": "12,20",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "29,34",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What are the movies whose music is given by Laurie Johnson?",
    "SerialNumber": "4210",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/music\u003e \u003chttp://dbpedia.org/resource/Laurie_Johnson\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Laurie Johnson",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Laurie_Johnson",
        "seq": "44,58"
      }
    ],
    "id": "523673cddacf48099c7937f7087198bd",
    "predicate mapping": [
      {
        "label": "music",
        "uri": "http://dbpedia.org/property/music",
        "seq": "26,31",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "13,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Where common region are soylent and bannock sold?",
    "SerialNumber": "4211",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Soylent_(drink)\u003e \u003chttp://dbpedia.org/ontology/region\u003e ?uri. \u003chttp://dbpedia.org/resource/Bannock_(food)\u003e \u003chttp://dbpedia.org/ontology/region\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "soylent",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Soylent_(drink)",
        "seq": "24,31"
      },
      {
        "label": "bannock",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Bannock_(food)",
        "seq": "36,43"
      }
    ],
    "id": "417a0238264b4e97b76c982a6999dadf",
    "predicate mapping": [
      {
        "label": "region",
        "uri": "http://dbpedia.org/ontology/region",
        "seq": "13,19",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "region",
        "uri": "http://dbpedia.org/ontology/region",
        "seq": "13,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "111",
    "question": "Count the number of other services of the companies which provides the Microsoft Azure as service ?",
    "SerialNumber": "4212",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/services\u003e \u003chttp://dbpedia.org/resource/Microsoft_Azure\u003e . ?x \u003chttp://dbpedia.org/property/services\u003e ?uri }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Microsoft Azure",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Microsoft_Azure",
        "seq": "71,86"
      }
    ],
    "id": "9de419a9df914ff59ef90a5191b584bd",
    "predicate mapping": [
      {
        "label": "services",
        "uri": "http://dbpedia.org/property/services",
        "seq": "26,34",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "services",
        "uri": "http://dbpedia.org/property/services",
        "seq": "26,34",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "AH141 highway is a part of which country?",
    "SerialNumber": "4214",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/AH141\u003e \u003chttp://dbpedia.org/ontology/county\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "AH141",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/AH141",
        "seq": "0,5"
      }
    ],
    "id": "c88a014e1fb347f1aa31dc40e7c66e55",
    "predicate mapping": [
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/county",
        "seq": "33,40",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which hub of Cascade Airways is also the resting place of Brandon Lee ?",
    "SerialNumber": "4215",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Cascade_Airways\u003e \u003chttp://dbpedia.org/property/hubs\u003e ?uri. \u003chttp://dbpedia.org/resource/Brandon_Lee\u003e \u003chttp://dbpedia.org/ontology/restingPlace\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Cascade Airways",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Cascade_Airways",
        "seq": "13,28"
      },
      {
        "label": "Brandon Lee",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Brandon_Lee",
        "seq": "58,69"
      }
    ],
    "id": "a88d2ea3f531427a94ae282715f0f5f6",
    "predicate mapping": [
      {
        "label": "hub",
        "uri": "http://dbpedia.org/property/hubs",
        "seq": "6,9",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "resting place",
        "uri": "http://dbpedia.org/ontology/restingPlace",
        "seq": "41,54",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "111",
    "question": "Count the number of artist whose pone of the field is writing ?",
    "SerialNumber": "4218",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/field\u003e \u003chttp://dbpedia.org/resource/Writing\u003e . ?x \u003chttp://dbpedia.org/ontology/field\u003e ?uri }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "writing",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Writing",
        "seq": "54,61"
      }
    ],
    "id": "f5c820e865914c8589007c9008866d2a",
    "predicate mapping": [
      {
        "label": "field",
        "uri": "http://dbpedia.org/ontology/field",
        "seq": "45,50",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "field",
        "uri": "http://dbpedia.org/ontology/field",
        "seq": "45,50",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "What are some people born in NY known for?",
    "SerialNumber": "4219",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/birthPlace\u003e \u003chttp://dbpedia.org/resource/New_York_City\u003e . ?x \u003chttp://dbpedia.org/ontology/knownFor\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "NY",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/New_York_City",
        "seq": "29,31"
      }
    ],
    "id": "2bb138061a484da2b90a35b4547a639c",
    "predicate mapping": [
      {
        "label": "born in",
        "uri": "http://dbpedia.org/ontology/birthPlace",
        "seq": "21,28",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "known for",
        "uri": "http://dbpedia.org/ontology/knownFor",
        "seq": "32,41",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Who is the meaning of the name Isa which was also one of the subject of play The Prodigal Son ?",
    "SerialNumber": "4221",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Isa_(name)\u003e \u003chttp://dbpedia.org/property/meaning\u003e ?uri. \u003chttp://dbpedia.org/resource/The_Prodigal_Son_(play)\u003e \u003chttp://dbpedia.org/property/subject\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Isa",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Isa_(name)",
        "seq": "31,34"
      },
      {
        "label": "The Prodigal Son",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Prodigal_Son_(play)",
        "seq": "77,93"
      }
    ],
    "id": "c0ed2a5b62a04aa796586761a7fcc4fa",
    "predicate mapping": [
      {
        "label": "meaning",
        "uri": "http://dbpedia.org/property/meaning",
        "seq": "11,18",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "subject",
        "uri": "http://dbpedia.org/property/subject",
        "seq": "61,68",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Which US state has Dorchester Bay and the Joseph Story?",
    "SerialNumber": "4223",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Joseph_Story\u003e \u003chttp://dbpedia.org/property/state\u003e ?uri. \u003chttp://dbpedia.org/resource/Dorchester_Bay_(Boston_Harbor)\u003e \u003chttp://dbpedia.org/property/state\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Joseph Story",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Joseph_Story",
        "seq": "42,54"
      },
      {
        "label": "Dorchester Bay",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Dorchester_Bay_(Boston_Harbor)",
        "seq": "19,33"
      }
    ],
    "id": "0e26f71c288d466a84ee93662cdaf2cf",
    "predicate mapping": [
      {
        "label": "state",
        "uri": "http://dbpedia.org/property/state",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "state",
        "uri": "http://dbpedia.org/property/state",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "101",
    "question": "Mac OS is the operating system of how many things?",
    "SerialNumber": "4224",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/ontology/operatingSystem\u003e \u003chttp://dbpedia.org/resource/Mac_OS\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Mac OS",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Mac_OS",
        "seq": "0,6"
      }
    ],
    "id": "2b42a9987e584e18a5a21c9bc2476de8",
    "predicate mapping": [
      {
        "label": "operating system",
        "uri": "http://dbpedia.org/ontology/operatingSystem",
        "seq": "14,30",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Which company developed the language designed by Lars Bak?",
    "SerialNumber": "4225",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/designer\u003e \u003chttp://dbpedia.org/resource/Lars_Bak_(computer_programmer)\u003e . ?x \u003chttp://dbpedia.org/property/developer\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Language\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Lars Bak",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Lars_Bak_(computer_programmer)",
        "seq": "49,57"
      }
    ],
    "id": "78cb068f6e8f479a81e12427c92fd167",
    "predicate mapping": [
      {
        "label": "designed",
        "uri": "http://dbpedia.org/ontology/designer",
        "seq": "37,45",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "developed",
        "uri": "http://dbpedia.org/property/developer",
        "seq": "14,23",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "language",
        "uri": "http://dbpedia.org/ontology/Language",
        "seq": "28,36",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What is the birth location of the advisor of Richard Hofstadter ?",
    "SerialNumber": "4227",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Richard_Hofstadter\u003e \u003chttp://dbpedia.org/property/doctoralAdvisor\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/birthPlace\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Richard Hofstadter",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Richard_Hofstadter",
        "seq": "45,63"
      }
    ],
    "id": "3e3623c77d664a43bad66b15cbeb1d2b",
    "predicate mapping": [
      {
        "label": "advisor",
        "uri": "http://dbpedia.org/property/doctoralAdvisor",
        "seq": "34,41",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "birth location",
        "uri": "http://dbpedia.org/ontology/birthPlace",
        "seq": "12,26",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the TV shows whose developer is J. Michael Straczynski and executive producer is Douglas Netter?",
    "SerialNumber": "4229",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/developer\u003e \u003chttp://dbpedia.org/resource/J._Michael_Straczynski\u003e . ?uri \u003chttp://dbpedia.org/ontology/executiveProducer\u003e \u003chttp://dbpedia.org/resource/Douglas_Netter\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "J. Michael Straczynski",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/J._Michael_Straczynski",
        "seq": "37,59"
      },
      {
        "label": "Douglas Netter",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Douglas_Netter",
        "seq": "86,100"
      }
    ],
    "id": "fe352180bf17436ba61fb0416e17d291",
    "predicate mapping": [
      {
        "label": "developer",
        "uri": "http://dbpedia.org/ontology/developer",
        "seq": "24,33",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "executive producer",
        "uri": "http://dbpedia.org/ontology/executiveProducer",
        "seq": "64,82",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "12,17",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the first driver of 1999 San Marino Grand Prix ?",
    "SerialNumber": "4230",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/1999_San_Marino_Grand_Prix\u003e \u003chttp://dbpedia.org/ontology/firstDriver\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "1999 San Marino Grand Prix",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/1999_San_Marino_Grand_Prix",
        "seq": "25,51"
      }
    ],
    "id": "950ceddbc0c5404eabe9f4770407937b",
    "predicate mapping": [
      {
        "label": "first driver",
        "uri": "http://dbpedia.org/ontology/firstDriver",
        "seq": "9,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "List the children of the parent of Marvin Bush.",
    "SerialNumber": "4231",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Marvin_Bush\u003e \u003chttp://dbpedia.org/ontology/parent\u003e ?x . ?x \u003chttp://dbpedia.org/property/children\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Marvin Bush",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Marvin_Bush",
        "seq": "35,46"
      }
    ],
    "id": "2145991e2562420284c8984b7f845228",
    "predicate mapping": [
      {
        "label": "parent",
        "uri": "http://dbpedia.org/ontology/parent",
        "seq": "25,31",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "children",
        "uri": "http://dbpedia.org/property/children",
        "seq": "9,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Who starred in Nothing in Common and produced From the Earth to the Moon?",
    "SerialNumber": "4237",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/From_the_Earth_to_the_Moon_(miniseries)\u003e \u003chttp://dbpedia.org/ontology/executiveProducer\u003e ?uri. \u003chttp://dbpedia.org/resource/Nothing_in_Common\u003e \u003chttp://dbpedia.org/property/starring\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "From the Earth to the Moon",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/From_the_Earth_to_the_Moon_(miniseries)",
        "seq": "46,72"
      },
      {
        "label": "Nothing in Common",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Nothing_in_Common",
        "seq": "15,32"
      }
    ],
    "id": "74e6bd3b3d9f4c02948ab48ddb9851b7",
    "predicate mapping": [
      {
        "label": "produced",
        "uri": "http://dbpedia.org/ontology/executiveProducer",
        "seq": "37,45",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "starred",
        "uri": "http://dbpedia.org/property/starring",
        "seq": "4,11",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "Who is the builder of the Stadium of Costa Rica women\u0027s national football team?",
    "SerialNumber": "4239",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Costa_Rica_women\u0027s_national_football_team\u003e \u003chttp://dbpedia.org/ontology/stadium\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/builder\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Stadium\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Costa Rica women\u0027s national football team",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Costa_Rica_women\u0027s_national_football_team",
        "seq": "37,78"
      }
    ],
    "id": "3397f948c7964e35b7883557e3869187",
    "predicate mapping": [
      {
        "label": "Stadium",
        "uri": "http://dbpedia.org/ontology/stadium",
        "seq": "26,33",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "builder",
        "uri": "http://dbpedia.org/ontology/builder",
        "seq": "11,18",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "Stadium",
        "uri": "http://dbpedia.org/ontology/Stadium",
        "seq": "26,33",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which serving railway line of the Rostov-Glavny is also the  place of birth of  Nina Vislova?",
    "SerialNumber": "4240",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Rostov-Glavny\u003e \u003chttp://dbpedia.org/ontology/servingRailwayLine\u003e ?uri. \u003chttp://dbpedia.org/resource/Nina_Vislova\u003e \u003chttp://dbpedia.org/property/placeOfBirth\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Rostov-Glavny",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Rostov-Glavny",
        "seq": "34,47"
      },
      {
        "label": "Nina Vislova",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Nina_Vislova",
        "seq": "80,92"
      }
    ],
    "id": "65f4bc2159fa4581862b48f75badba9e",
    "predicate mapping": [
      {
        "label": "serving railway line",
        "uri": "http://dbpedia.org/ontology/servingRailwayLine",
        "seq": "6,26",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "place of birth",
        "uri": "http://dbpedia.org/property/placeOfBirth",
        "seq": "61,75",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What is the home town of the musician of Jack your Body ?",
    "SerialNumber": "4241",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Jack_Your_Body\u003e \u003chttp://dbpedia.org/ontology/musicalArtist\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/hometown\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jack your Body",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Jack_Your_Body",
        "seq": "41,55"
      }
    ],
    "id": "0507c04d35f64179aeb6656866465ce8",
    "predicate mapping": [
      {
        "label": "musician",
        "uri": "http://dbpedia.org/ontology/musicalArtist",
        "seq": "29,37",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "home town",
        "uri": "http://dbpedia.org/ontology/hometown",
        "seq": "12,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "What is the residence of the person, who starred in Men Will Be Men ?",
    "SerialNumber": "4243",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Men_Will_Be_Men\u003e \u003chttp://dbpedia.org/ontology/starring\u003e ?x . ?x \u003chttp://dbpedia.org/property/residence\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Men Will Be Men",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Men_Will_Be_Men",
        "seq": "52,67"
      }
    ],
    "id": "2b459a0f48bf4a798c36e64bdef395eb",
    "predicate mapping": [
      {
        "label": "starred",
        "uri": "http://dbpedia.org/ontology/starring",
        "seq": "41,48",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "residence",
        "uri": "http://dbpedia.org/property/residence",
        "seq": "12,21",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/Person",
        "seq": "29,35",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "311",
    "question": "List the border of the admin region which shares border with North Korea ?",
    "SerialNumber": "4244",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/border\u003e \u003chttp://dbpedia.org/resource/North_Korea\u003e . ?x \u003chttp://dbpedia.org/ontology/border\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/AdministrativeRegion\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "North Korea",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/North_Korea",
        "seq": "61,72"
      }
    ],
    "id": "76e3a616ef7f4776b5ac7ca0a2747aa4",
    "predicate mapping": [
      {
        "label": "border",
        "uri": "http://dbpedia.org/ontology/border",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "border",
        "uri": "http://dbpedia.org/ontology/border",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "region admin",
        "uri": "http://dbpedia.org/ontology/AdministrativeRegion",
        "seq": "-1,11",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the awards won by Elie Wiesel ?",
    "SerialNumber": "4250",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Elie_Wiesel\u003e \u003chttp://dbpedia.org/property/awards\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Elie Wiesel",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Elie_Wiesel",
        "seq": "23,34"
      }
    ],
    "id": "1c52f65be95947dab2143ce16d756039",
    "predicate mapping": [
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the home stadium of Kenya\u0027s women national football team ?",
    "SerialNumber": "4251",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Kenya_women\u0027s_national_football_team\u003e \u003chttp://dbpedia.org/property/homeStadium\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Kenya\u0027s women national football team",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Kenya_women\u0027s_national_football_team",
        "seq": "28,33"
      }
    ],
    "id": "50f4fe1ce39347729daff3f6980c6107",
    "predicate mapping": [
      {
        "label": "home stadium",
        "uri": "http://dbpedia.org/property/homeStadium",
        "seq": "12,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What artist of Charing Cross Bridge influenced Dorothea Sharp in her career?",
    "SerialNumber": "4254",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Charing_Cross_Bridge_(Monet_series)\u003e \u003chttp://dbpedia.org/property/artist\u003e ?uri. \u003chttp://dbpedia.org/resource/Dorothea_Sharp\u003e \u003chttp://dbpedia.org/property/influencedBy\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Charing Cross Bridge",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Charing_Cross_Bridge_(Monet_series)",
        "seq": "15,35"
      },
      {
        "label": "Dorothea Sharp",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Dorothea_Sharp",
        "seq": "47,61"
      }
    ],
    "id": "acd23184141840d2a1677901fd42bbd9",
    "predicate mapping": [
      {
        "label": "artist",
        "uri": "http://dbpedia.org/property/artist",
        "seq": "5,11",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "influenced",
        "uri": "http://dbpedia.org/property/influencedBy",
        "seq": "36,46",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which military conflict took place in Israel and had commander as Jaber Al-Ahmad Al-Sabah?",
    "SerialNumber": "4255",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/place\u003e \u003chttp://dbpedia.org/resource/Israel\u003e . ?uri \u003chttp://dbpedia.org/ontology/commander\u003e \u003chttp://dbpedia.org/resource/Jaber_Al-Ahmad_Al-Sabah\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MilitaryConflict\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Israel",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Israel",
        "seq": "38,44"
      },
      {
        "label": "Jaber Al-Ahmad Al-Sabah",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Jaber_Al-Ahmad_Al-Sabah",
        "seq": "66,89"
      }
    ],
    "id": "be202d448e7d4b23ae715f0fc6b8b33e",
    "predicate mapping": [
      {
        "label": "place",
        "uri": "http://dbpedia.org/ontology/place",
        "seq": "29,34",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "commander",
        "uri": "http://dbpedia.org/ontology/commander",
        "seq": "53,62",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "military conflict",
        "uri": "http://dbpedia.org/ontology/MilitaryConflict",
        "seq": "6,23",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "315",
    "question": "Which city is the resting place of the Martin Ragaway and Chuck Connors ?",
    "SerialNumber": "4256",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Martin_Ragaway\u003e \u003chttp://dbpedia.org/ontology/restingPlace\u003e ?uri. \u003chttp://dbpedia.org/resource/Chuck_Connors\u003e \u003chttp://dbpedia.org/ontology/restingPlace\u003e ?uri . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/City\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Martin Ragaway",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Martin_Ragaway",
        "seq": "39,53"
      },
      {
        "label": "Chuck Connors",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Chuck_Connors",
        "seq": "58,71"
      }
    ],
    "id": "44c48096f6e24b17a662f2bc16b0c005",
    "predicate mapping": [
      {
        "label": "resting place",
        "uri": "http://dbpedia.org/ontology/restingPlace",
        "seq": "18,31",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "resting place",
        "uri": "http://dbpedia.org/ontology/restingPlace",
        "seq": "18,31",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "city",
        "uri": "http://dbpedia.org/ontology/City",
        "seq": "6,10",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Which religion is prevalent in the schools of the Ashanti region?",
    "SerialNumber": "4257",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/region\u003e \u003chttp://dbpedia.org/resource/Ashanti_Region\u003e . ?x \u003chttp://dbpedia.org/property/denomination\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/School\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ashanti region",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ashanti_Region",
        "seq": "50,64"
      }
    ],
    "id": "3b2227b9098045048da2d706d5ff058e",
    "predicate mapping": [
      {
        "label": "region",
        "uri": "http://dbpedia.org/property/region",
        "seq": "58,64",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/property/denomination",
        "seq": "6,14",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "school",
        "uri": "http://dbpedia.org/ontology/School",
        "seq": "35,41",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "What are some characters of series produced by Ricky Grevais?",
    "SerialNumber": "4258",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/executiveProducer\u003e \u003chttp://dbpedia.org/resource/Ricky_Gervais\u003e . ?uri \u003chttp://dbpedia.org/ontology/series\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ricky Grevais",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Ricky_Gervais",
        "seq": "47,60"
      }
    ],
    "id": "00d182c2fc044872afb893ada8c680ed",
    "predicate mapping": [
      {
        "label": "produced",
        "uri": "http://dbpedia.org/ontology/executiveProducer",
        "seq": "35,43",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "series",
        "uri": "http://dbpedia.org/ontology/series",
        "seq": "28,34",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What are the television shows whose company is Playtone?",
    "SerialNumber": "4260",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/company\u003e \u003chttp://dbpedia.org/resource/Playtone\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Playtone",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Playtone",
        "seq": "47,55"
      }
    ],
    "id": "7f4f1679c83148c4839f6434ed4e3ac3",
    "predicate mapping": [
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/company",
        "seq": "36,43",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "13,28",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "In which broadcast area does the sister station of KFFG air ?",
    "SerialNumber": "4263",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/KFFG\u003e \u003chttp://dbpedia.org/ontology/sisterStation\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/broadcastNetwork\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "KFFG",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/KFFG",
        "seq": "51,55"
      }
    ],
    "id": "df9dedc7b04241719cdd1de64fab664c",
    "predicate mapping": [
      {
        "label": "sister station",
        "uri": "http://dbpedia.org/ontology/sisterStation",
        "seq": "33,47",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "broadcast",
        "uri": "http://dbpedia.org/ontology/broadcastNetwork",
        "seq": "9,18",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the river with mouth as Thames Estuary and passes through Reading Berkshire ?",
    "SerialNumber": "4265",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/riverMouth\u003e \u003chttp://dbpedia.org/resource/Thames_Estuary\u003e . ?uri \u003chttp://dbpedia.org/property/city\u003e \u003chttp://dbpedia.org/resource/Reading,_Berkshire\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/River\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Thames Estuary",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Thames_Estuary",
        "seq": "29,43"
      },
      {
        "label": "Reading",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Reading,_Berkshire",
        "seq": "63,70"
      }
    ],
    "id": "e12f7dcbeefb4be5aa7c6a75120cf399",
    "predicate mapping": [
      {
        "label": "river mouth",
        "uri": "http://dbpedia.org/ontology/riverMouth",
        "seq": "-1,10",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "in",
        "uri": "http://dbpedia.org/property/city",
        "seq": "67,69",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "What is the alma mater of the person, whose child is Samuel Moreno Rojas?",
    "SerialNumber": "4266",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/children\u003e \u003chttp://dbpedia.org/resource/Samuel_Moreno_Rojas\u003e . ?x \u003chttp://dbpedia.org/property/almaMater\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Samuel Moreno Rojas",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Samuel_Moreno_Rojas",
        "seq": "53,72"
      }
    ],
    "id": "428c921bdffa437cab0215a722628dc4",
    "predicate mapping": [
      {
        "label": "child",
        "uri": "http://dbpedia.org/property/children",
        "seq": "44,49",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/property/almaMater",
        "seq": "12,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "7",
    "question": "What provides the services of Nintendo eShop and Nintendo Network?",
    "SerialNumber": "4267",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/property/services\u003e \u003chttp://dbpedia.org/resource/Nintendo_eShop\u003e . ?uri \u003chttp://dbpedia.org/property/services\u003e \u003chttp://dbpedia.org/resource/Nintendo_Network\u003e . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Nintendo eShop",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Nintendo_eShop",
        "seq": "30,44"
      },
      {
        "label": "Nintendo Network",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Nintendo_Network",
        "seq": "49,65"
      }
    ],
    "id": "aa41549ef9984639b16d39f1e418d06e",
    "predicate mapping": [
      {
        "label": "services",
        "uri": "http://dbpedia.org/property/services",
        "seq": "18,26",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "services",
        "uri": "http://dbpedia.org/property/services",
        "seq": "18,26",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the local authority of Trinity School, Brentwood ?",
    "SerialNumber": "4269",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Trinity_School,_Brentwood\u003e \u003chttp://dbpedia.org/ontology/localAuthority\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Trinity School, Brentwood",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Trinity_School,_Brentwood",
        "seq": "28,53"
      }
    ],
    "id": "ef6dc0a3edb54f33bf874f7c5b9dae0a",
    "predicate mapping": [
      {
        "label": "local authority",
        "uri": "http://dbpedia.org/ontology/localAuthority",
        "seq": "9,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the death place of the Abiye Abebe and is the birthplace of the Amsale Aberra?",
    "SerialNumber": "4270",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Abiye_Abebe\u003e \u003chttp://dbpedia.org/property/placeOfDeath\u003e ?uri. \u003chttp://dbpedia.org/resource/Amsale_Aberra\u003e \u003chttp://dbpedia.org/ontology/birthPlace\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Abiye Abebe",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Abiye_Abebe",
        "seq": "31,42"
      },
      {
        "label": "Amsale",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Amsale_Aberra",
        "seq": "72,78"
      }
    ],
    "id": "5275df39ab1f4fea90a5740956d40966",
    "predicate mapping": [
      {
        "label": "place death",
        "uri": "http://dbpedia.org/property/placeOfDeath",
        "seq": "-1,10",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "birthplace",
        "uri": "http://dbpedia.org/ontology/birthPlace",
        "seq": "54,64",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the label of Double Diamond (album) ?",
    "SerialNumber": "4271",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Double_Diamond_(album)\u003e \u003chttp://dbpedia.org/ontology/recordLabel\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Double Diamond (album)",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Double_Diamond_(album)",
        "seq": "21,43"
      }
    ],
    "id": "e4aba45bbd7247a2849bb269cb3fc809",
    "predicate mapping": [
      {
        "label": "label",
        "uri": "http://dbpedia.org/ontology/recordLabel",
        "seq": "12,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Waddy wachtel did the music for what movies?",
    "SerialNumber": "4276",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/music\u003e \u003chttp://dbpedia.org/resource/Waddy_Wachtel\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Waddy wachtel",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Waddy_Wachtel",
        "seq": "0,13"
      }
    ],
    "id": "59686a5c59394e02a601a3632e7c72bf",
    "predicate mapping": [
      {
        "label": "music",
        "uri": "http://dbpedia.org/property/music",
        "seq": "22,27",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "37,42",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Is Baker\u0027s Dozen Donuts in the coffee industry?",
    "SerialNumber": "4277",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Baker\u0027s_Dozen_Donuts\u003e \u003chttp://dbpedia.org/ontology/industry\u003e \u003chttp://dbpedia.org/resource/Coffee\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Baker\u0027s Dozen Donuts",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Baker\u0027s_Dozen_Donuts",
        "seq": "3,23"
      },
      {
        "label": "coffee",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Coffee",
        "seq": "31,37"
      }
    ],
    "id": "b6ac0f95224a4210893252cc4b6bda4d",
    "predicate mapping": [
      {
        "label": "industry",
        "uri": "http://dbpedia.org/ontology/industry",
        "seq": "38,46",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who are the writer of the singles whose music genre is Rhythm and blues ?",
    "SerialNumber": "4278",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/genre\u003e \u003chttp://dbpedia.org/resource/Rhythm_and_blues\u003e . ?x \u003chttp://dbpedia.org/ontology/writer\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Single\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Rhythm and blues",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Rhythm_and_blues",
        "seq": "55,71"
      }
    ],
    "id": "b4e9d31ac22848ffb74a0fea9cda6353",
    "predicate mapping": [
      {
        "label": "music genre",
        "uri": "http://dbpedia.org/ontology/genre",
        "seq": "40,51",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "writer",
        "uri": "http://dbpedia.org/ontology/writer",
        "seq": "12,18",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "single",
        "uri": "http://dbpedia.org/ontology/Single",
        "seq": "26,32",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "307",
    "question": "What show has writing of Erik Jendresen and Graham Yost?",
    "SerialNumber": "4281",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/property/writer\u003e \u003chttp://dbpedia.org/resource/Erik_Jendresen\u003e . ?uri \u003chttp://dbpedia.org/property/writer\u003e \u003chttp://dbpedia.org/resource/Graham_Yost\u003e . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Erik Jendresen",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Erik_Jendresen",
        "seq": "25,39"
      },
      {
        "label": "Graham Yost",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Graham_Yost",
        "seq": "44,55"
      }
    ],
    "id": "dd8f04e29567432aa66d4872d3c8967d",
    "predicate mapping": [
      {
        "label": "writing",
        "uri": "http://dbpedia.org/property/writer",
        "seq": "14,21",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "writing",
        "uri": "http://dbpedia.org/property/writer",
        "seq": "14,21",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "5,9",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Which range of mountains are there in canton of Fribourg?",
    "SerialNumber": "4282",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/locatedInArea\u003e \u003chttp://dbpedia.org/resource/Canton_of_Fribourg\u003e . ?x \u003chttp://dbpedia.org/ontology/mountainRange\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "canton of Fribourg",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Canton_of_Fribourg",
        "seq": "38,56"
      }
    ],
    "id": "6dc74832279a48c5af2affb61a00842f",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/locatedInArea",
        "seq": "21,23",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "mountains",
        "uri": "http://dbpedia.org/ontology/mountainRange",
        "seq": "15,24",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "111",
    "question": "Count the number of ingredient of the foods which have one of the ingredient is Pork ?",
    "SerialNumber": "4284",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/ingredient\u003e \u003chttp://dbpedia.org/resource/Pork\u003e . ?x \u003chttp://dbpedia.org/ontology/ingredient\u003e ?uri }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Pork",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Pork",
        "seq": "80,84"
      }
    ],
    "id": "06a0979c7f4f45f09a242e2c9b4f9403",
    "predicate mapping": [
      {
        "label": "ingredient",
        "uri": "http://dbpedia.org/ontology/ingredient",
        "seq": "20,30",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "ingredient",
        "uri": "http://dbpedia.org/ontology/ingredient",
        "seq": "20,30",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "Who is associated to the predecessor of Dan Mica?",
    "SerialNumber": "4287",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/predecessor\u003e \u003chttp://dbpedia.org/resource/Dan_Mica\u003e . ?uri \u003chttp://dbpedia.org/ontology/associate\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Dan Mica",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Dan_Mica",
        "seq": "40,48"
      }
    ],
    "id": "6708b5842efe485a9e50e24afcbf8511",
    "predicate mapping": [
      {
        "label": "predecessor",
        "uri": "http://dbpedia.org/property/predecessor",
        "seq": "25,36",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "associate",
        "uri": "http://dbpedia.org/ontology/associate",
        "seq": "7,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "307",
    "question": "What is the show which opens with Gary Portnoy and Where Everybody Knows Your Name?",
    "SerialNumber": "4288",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/ontology/openingTheme\u003e \u003chttp://dbpedia.org/resource/Gary_Portnoy\u003e . ?uri \u003chttp://dbpedia.org/ontology/openingTheme\u003e \u003chttp://dbpedia.org/resource/Where_Everybody_Knows_Your_Name\u003e . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Gary Portnoy",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Gary_Portnoy",
        "seq": "34,46"
      },
      {
        "label": "Where Everybody Knows Your Name",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Where_Everybody_Knows_Your_Name",
        "seq": "51,82"
      }
    ],
    "id": "3c64c763bb4342f8abf5e919c69c9144",
    "predicate mapping": [
      {
        "label": "opens",
        "uri": "http://dbpedia.org/ontology/openingTheme",
        "seq": "23,28",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "opens",
        "uri": "http://dbpedia.org/ontology/openingTheme",
        "seq": "23,28",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "12,16",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "What is the birthplace of the netball player who is the relative of Rachel Rasmussen ?",
    "SerialNumber": "4289",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Rachel_Rasmussen\u003e \u003chttp://dbpedia.org/property/relatives\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/birthPlace\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/NetballPlayer\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Rachel Rasmussen",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Rachel_Rasmussen",
        "seq": "68,84"
      }
    ],
    "id": "b77c5d2495684b08978cc1e6f6efbd33",
    "predicate mapping": [
      {
        "label": "relative",
        "uri": "http://dbpedia.org/property/relatives",
        "seq": "56,64",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "birthplace",
        "uri": "http://dbpedia.org/ontology/birthPlace",
        "seq": "12,22",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "netball player",
        "uri": "http://dbpedia.org/ontology/NetballPlayer",
        "seq": "30,44",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the Location of the Dofinivka Estuary which is also the  birthplace of the Liliya Lobanova ?",
    "SerialNumber": "4290",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Dofinivka_Estuary\u003e \u003chttp://dbpedia.org/property/location\u003e ?uri. \u003chttp://dbpedia.org/resource/Liliya_Lobanova\u003e \u003chttp://dbpedia.org/property/birthplace\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Dofinivka Estuary",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Dofinivka_Estuary",
        "seq": "28,45"
      },
      {
        "label": "Liliya Lobanova",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Liliya_Lobanova",
        "seq": "83,98"
      }
    ],
    "id": "27b20d124d814d06aef418de8062f60e",
    "predicate mapping": [
      {
        "label": "Location",
        "uri": "http://dbpedia.org/property/location",
        "seq": "12,20",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "birthplace",
        "uri": "http://dbpedia.org/property/birthplace",
        "seq": "65,75",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "405",
    "question": "For how many different teams have the players debuted in Houston Astros played?",
    "SerialNumber": "4291",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/debutTeam\u003e \u003chttp://dbpedia.org/resource/Houston_Astros\u003e . ?x \u003chttp://dbpedia.org/ontology/team\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/SportsTeam\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Houston Astros",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Houston_Astros",
        "seq": "57,71"
      }
    ],
    "id": "ae6419f5a7924093b8efc0ecde37fa37",
    "predicate mapping": [
      {
        "label": "debuted",
        "uri": "http://dbpedia.org/ontology/debutTeam",
        "seq": "46,53",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/team",
        "seq": "23,27",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/SportsTeam",
        "seq": "23,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the profession of Claiborne Pell ?",
    "SerialNumber": "4293",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Claiborne_Pell\u003e \u003chttp://dbpedia.org/ontology/profession\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Claiborne Pell",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Claiborne_Pell",
        "seq": "26,40"
      }
    ],
    "id": "2ead55d30e1d4a53b7f6ef00e0fe8125",
    "predicate mapping": [
      {
        "label": "profession",
        "uri": "http://dbpedia.org/ontology/profession",
        "seq": "12,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Name few TV shows aired by Prime Time Entertainment Network?",
    "SerialNumber": "4294",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/network\u003e \u003chttp://dbpedia.org/resource/Prime_Time_Entertainment_Network\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Prime Time Entertainment Network",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Prime_Time_Entertainment_Network",
        "seq": "27,59"
      }
    ],
    "id": "faf138a401bf48698aea3948d57fb21e",
    "predicate mapping": [
      {
        "label": "Network",
        "uri": "http://dbpedia.org/ontology/network",
        "seq": "52,59",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "12,17",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the ethnicity of the Maike Evers and state of origin of the Theodor Hillenhinrichs ?",
    "SerialNumber": "4295",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Maike_Evers\u003e \u003chttp://dbpedia.org/ontology/ethnicity\u003e ?uri. \u003chttp://dbpedia.org/resource/Theodor_Hillenhinrichs\u003e \u003chttp://dbpedia.org/ontology/stateOfOrigin\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Maike Evers",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Maike_Evers",
        "seq": "29,40"
      },
      {
        "label": "Theodor Hillenhinrichs",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Theodor_Hillenhinrichs",
        "seq": "68,90"
      }
    ],
    "id": "21891c4f2ea042b18e68729561fc981e",
    "predicate mapping": [
      {
        "label": "ethnicity",
        "uri": "http://dbpedia.org/ontology/ethnicity",
        "seq": "12,21",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "state of origin",
        "uri": "http://dbpedia.org/ontology/stateOfOrigin",
        "seq": "45,60",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Is N. C. Wyeth the illustration by of The Mysterious Stranger?",
    "SerialNumber": "4296",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/The_Mysterious_Stranger\u003e \u003chttp://dbpedia.org/property/illustrator\u003e \u003chttp://dbpedia.org/resource/N._C._Wyeth\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "The Mysterious Stranger",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/The_Mysterious_Stranger",
        "seq": "38,61"
      },
      {
        "label": "N. C. Wyeth",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/N._C._Wyeth",
        "seq": "3,14"
      }
    ],
    "id": "a9898ec7205044eeb0890978e7e8c771",
    "predicate mapping": [
      {
        "label": "illustration by",
        "uri": "http://dbpedia.org/property/illustrator",
        "seq": "19,34",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "List the awards given to the key people in Pixar ?",
    "SerialNumber": "4297",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Pixar\u003e \u003chttp://dbpedia.org/property/keyPeople\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/award\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Pixar",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Pixar",
        "seq": "43,48"
      }
    ],
    "id": "1ecda4810a44415cb8a4d88b3cc10c44",
    "predicate mapping": [
      {
        "label": "key people",
        "uri": "http://dbpedia.org/property/keyPeople",
        "seq": "29,39",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/award",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "What is the common ethnicity of the Maike Evers and Francisco Lachowski ?",
    "SerialNumber": "4299",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Maike_Evers\u003e \u003chttp://dbpedia.org/ontology/ethnicity\u003e ?uri. \u003chttp://dbpedia.org/resource/Francisco_Lachowski\u003e \u003chttp://dbpedia.org/ontology/ethnicity\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Maike Evers",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Maike_Evers",
        "seq": "36,47"
      },
      {
        "label": "Francisco Lachowski",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Francisco_Lachowski",
        "seq": "52,71"
      }
    ],
    "id": "74b8aec435064e2cad30995e4949632b",
    "predicate mapping": [
      {
        "label": "ethnicity",
        "uri": "http://dbpedia.org/ontology/ethnicity",
        "seq": "19,28",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "ethnicity",
        "uri": "http://dbpedia.org/ontology/ethnicity",
        "seq": "19,28",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "Count the different religions followed by Second Lieutenants in military.",
    "SerialNumber": "4300",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/militaryRank\u003e \u003chttp://dbpedia.org/resource/Second_lieutenant\u003e . ?x \u003chttp://dbpedia.org/ontology/religion\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Second Lieutenant",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Second_lieutenant",
        "seq": "42,59"
      }
    ],
    "id": "7ebda29e423945b29162883cf737d24c",
    "predicate mapping": [
      {
        "label": "military.",
        "uri": "http://dbpedia.org/ontology/militaryRank",
        "seq": "64,73",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion",
        "seq": "20,28",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What nicknames do the universities in Norton, Massachusetts have?",
    "SerialNumber": "4303",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/city\u003e \u003chttp://dbpedia.org/resource/Norton,_Massachusetts\u003e . ?x \u003chttp://dbpedia.org/property/nickname\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/University\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Norton, Massachusetts",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Norton,_Massachusetts",
        "seq": "38,59"
      }
    ],
    "id": "1dd1b3f1468b4498bf6462c9d4d7e865",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/property/city",
        "seq": "35,37",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "nickname",
        "uri": "http://dbpedia.org/property/nickname",
        "seq": "5,13",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "universities",
        "uri": "http://dbpedia.org/ontology/University",
        "seq": "22,34",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "What is the official residence of the senator who is the deputy of Everett Dirksen?",
    "SerialNumber": "4304",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Everett_Dirksen\u003e \u003chttp://dbpedia.org/property/deputy\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/residence\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Senator\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Everett Dirksen",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Everett_Dirksen",
        "seq": "67,82"
      }
    ],
    "id": "0b921ef38ba74acbaa82a41ca8554f5c",
    "predicate mapping": [
      {
        "label": "deputy",
        "uri": "http://dbpedia.org/property/deputy",
        "seq": "57,63",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "residence",
        "uri": "http://dbpedia.org/ontology/residence",
        "seq": "21,30",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "senator",
        "uri": "http://dbpedia.org/ontology/Senator",
        "seq": "38,45",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which  office holder\u0027s resting place is Alta Mesa Memorial Park and Henry E. Catto, Jr. as predecessor ?",
    "SerialNumber": "4305",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/restingPlace\u003e \u003chttp://dbpedia.org/resource/Alta_Mesa_Memorial_Park\u003e . ?uri \u003chttp://dbpedia.org/property/predecessor\u003e \u003chttp://dbpedia.org/resource/Henry_E._Catto,_Jr.\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/OfficeHolder\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Alta Mesa Memorial Park",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Alta_Mesa_Memorial_Park",
        "seq": "40,63"
      },
      {
        "label": "Henry E. Catto, Jr.",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Henry_E._Catto,_Jr.",
        "seq": "68,87"
      }
    ],
    "id": "1e06f3b6c390495883e3b1fa35f74e6c",
    "predicate mapping": [
      {
        "label": "resting place",
        "uri": "http://dbpedia.org/property/restingPlace",
        "seq": "23,36",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "predecessor",
        "uri": "http://dbpedia.org/property/predecessor",
        "seq": "91,102",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "office holder",
        "uri": "http://dbpedia.org/ontology/OfficeHolder",
        "seq": "7,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the movie whose producer is Michael Deeley and music is given by Vangelis ?",
    "SerialNumber": "4306",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/producer\u003e \u003chttp://dbpedia.org/resource/Michael_Deeley\u003e . ?uri \u003chttp://dbpedia.org/property/music\u003e \u003chttp://dbpedia.org/resource/Vangelis\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Michael Deeley",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Michael_Deeley",
        "seq": "33,47"
      },
      {
        "label": "Vangelis",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Vangelis",
        "seq": "70,78"
      }
    ],
    "id": "0ac9e7c038dd486a87c27b58e9c6a6e4",
    "predicate mapping": [
      {
        "label": "producer",
        "uri": "http://dbpedia.org/ontology/producer",
        "seq": "21,29",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "music",
        "uri": "http://dbpedia.org/property/music",
        "seq": "52,57",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the movie whose director is Stanley Kubrick and editor is Anthony Harvey?",
    "SerialNumber": "4310",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/editing\u003e \u003chttp://dbpedia.org/resource/Anthony_Harvey\u003e . ?uri \u003chttp://dbpedia.org/ontology/director\u003e \u003chttp://dbpedia.org/resource/Stanley_Kubrick\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Anthony Harvey",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Anthony_Harvey",
        "seq": "63,77"
      },
      {
        "label": "Stanley Kubrick",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Stanley_Kubrick",
        "seq": "33,48"
      }
    ],
    "id": "588648d7ead24862a8392d2cb6b7499f",
    "predicate mapping": [
      {
        "label": "editor",
        "uri": "http://dbpedia.org/ontology/editing",
        "seq": "53,59",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "director",
        "uri": "http://dbpedia.org/ontology/director",
        "seq": "21,29",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "List all the movies whose directors were born in Kenosha, Wisconsin?",
    "SerialNumber": "4313",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/birthPlace\u003e \u003chttp://dbpedia.org/resource/Kenosha,_Wisconsin\u003e . ?uri \u003chttp://dbpedia.org/property/director\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Kenosha, Wisconsin",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Kenosha,_Wisconsin",
        "seq": "49,67"
      }
    ],
    "id": "1ceed131fbfd408f8e4aa198f167a4b4",
    "predicate mapping": [
      {
        "label": "born in",
        "uri": "http://dbpedia.org/ontology/birthPlace",
        "seq": "41,48",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "director",
        "uri": "http://dbpedia.org/property/director",
        "seq": "26,34",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "List down the TV shows whose producer is Stephen E. Ambros and writer is John Orloff ?",
    "SerialNumber": "4314",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/producer\u003e \u003chttp://dbpedia.org/resource/Stephen_E._Ambrose\u003e . ?uri \u003chttp://dbpedia.org/property/writer\u003e \u003chttp://dbpedia.org/resource/John_Orloff\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Stephen E. Ambros ",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Stephen_E._Ambrose",
        "seq": "41,59"
      },
      {
        "label": "John Orloff",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/John_Orloff",
        "seq": "73,84"
      }
    ],
    "id": "a608e83edd634349b19003da7befc70a",
    "predicate mapping": [
      {
        "label": "producer",
        "uri": "http://dbpedia.org/ontology/producer",
        "seq": "29,37",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "writer",
        "uri": "http://dbpedia.org/property/writer",
        "seq": "63,69",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "17,22",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "307",
    "question": "Which educational institutes have campuses at Iowa and Indiana ?",
    "SerialNumber": "4318",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/ontology/campus\u003e \u003chttp://dbpedia.org/resource/Iowa\u003e . ?uri \u003chttp://dbpedia.org/ontology/campus\u003e \u003chttp://dbpedia.org/resource/Indiana\u003e . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/EducationalInstitution\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Iowa",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Iowa",
        "seq": "46,50"
      },
      {
        "label": "Indiana",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Indiana",
        "seq": "55,62"
      }
    ],
    "id": "fdc1847b008e40cbb6cb07d1f3fefb7f",
    "predicate mapping": [
      {
        "label": "campus",
        "uri": "http://dbpedia.org/ontology/campus",
        "seq": "34,40",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "campus",
        "uri": "http://dbpedia.org/ontology/campus",
        "seq": "34,40",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "educational",
        "uri": "http://dbpedia.org/ontology/EducationalInstitution",
        "seq": "6,17",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What mascot of the Galatasaray Handball Team is also the team name of Cristo Rey Jesuit high School ?",
    "SerialNumber": "4319",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Cristo_Rey_Jesuit_High_School_(Chicago)\u003e \u003chttp://dbpedia.org/property/teamName\u003e ?uri. \u003chttp://dbpedia.org/resource/Galatasaray_Handball_Team\u003e \u003chttp://dbpedia.org/property/mascot\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Cristo Rey Jesuit high School",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Cristo_Rey_Jesuit_High_School_(Chicago)",
        "seq": "70,99"
      },
      {
        "label": "Galatasaray Handball Team",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Galatasaray_Handball_Team",
        "seq": "19,44"
      }
    ],
    "id": "128a2ec9d8f842be81f9bbafd1edf43b",
    "predicate mapping": [
      {
        "label": "team name",
        "uri": "http://dbpedia.org/property/teamName",
        "seq": "57,66",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "mascot",
        "uri": "http://dbpedia.org/property/mascot",
        "seq": "5,11",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "List down the associated musical artist of the writer of Rain Is a Good Thing ?",
    "SerialNumber": "4320",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Rain_Is_a_Good_Thing\u003e \u003chttp://dbpedia.org/property/writer\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/associatedMusicalArtist\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Rain Is a Good Thing",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Rain_Is_a_Good_Thing",
        "seq": "57,77"
      }
    ],
    "id": "62c0c7b3421044339478d24834c3b09d",
    "predicate mapping": [
      {
        "label": "writer",
        "uri": "http://dbpedia.org/property/writer",
        "seq": "47,53",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "associated musical artist",
        "uri": "http://dbpedia.org/ontology/associatedMusicalArtist",
        "seq": "14,39",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Which countries led by Elizabeth II?",
    "SerialNumber": "4321",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/leaderName\u003e \u003chttp://dbpedia.org/resource/Elizabeth_II\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Country\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Elizabeth II",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Elizabeth_II",
        "seq": "23,35"
      }
    ],
    "id": "6814335360244dacab4516293e186458",
    "predicate mapping": [
      {
        "label": "led",
        "uri": "http://dbpedia.org/property/leaderName",
        "seq": "16,19",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "countries",
        "uri": "http://dbpedia.org/ontology/Country",
        "seq": "6,15",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who is the developer of Dart (programming language) ?",
    "SerialNumber": "4322",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Dart_(programming_language)\u003e \u003chttp://dbpedia.org/property/developer\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Dart (programming language)",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Dart_(programming_language)",
        "seq": "24,51"
      }
    ],
    "id": "60524d1955cf4a6eba1f5eab56431ce4",
    "predicate mapping": [
      {
        "label": "developer",
        "uri": "http://dbpedia.org/property/developer",
        "seq": "11,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which official residence of hugh Scott is also the origin of Long Rifle ?",
    "SerialNumber": "4324",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Long_rifle\u003e \u003chttp://dbpedia.org/property/origin\u003e ?uri. \u003chttp://dbpedia.org/resource/Hugh_Scott\u003e \u003chttp://dbpedia.org/ontology/residence\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Long Rifle",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Long_rifle",
        "seq": "61,71"
      },
      {
        "label": "hugh Scott",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Hugh_Scott",
        "seq": "28,38"
      }
    ],
    "id": "e5211014e64e4cc3ba735304c32b59f7",
    "predicate mapping": [
      {
        "label": "origin",
        "uri": "http://dbpedia.org/property/origin",
        "seq": "51,57",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "residence",
        "uri": "http://dbpedia.org/ontology/residence",
        "seq": "15,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "What is the base currency of the Benelux which can be used in Republic of Montenegro?",
    "SerialNumber": "4325",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Benelux\u003e \u003chttp://dbpedia.org/property/currency\u003e ?uri. \u003chttp://dbpedia.org/resource/Republic_of_Montenegro_(1992–2006)\u003e \u003chttp://dbpedia.org/property/currency\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Benelux",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Benelux",
        "seq": "33,40"
      },
      {
        "label": "Republic of Montenegro",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Republic_of_Montenegro_(1992–2006)",
        "seq": "62,84"
      }
    ],
    "id": "9169f5e7e04a45c59601fa1c275255eb",
    "predicate mapping": [
      {
        "label": "base currency",
        "uri": "http://dbpedia.org/property/currency",
        "seq": "12,25",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "base currency",
        "uri": "http://dbpedia.org/property/currency",
        "seq": "12,25",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "Who is the political figure whose military branch is Colonial troops?",
    "SerialNumber": "4328",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/militaryBranch\u003e \u003chttp://dbpedia.org/resource/Colonial_troops\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Colonial troops",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Colonial_troops",
        "seq": "53,68"
      }
    ],
    "id": "b80824e9484341ffa682161fdd38a1fa",
    "predicate mapping": [
      {
        "label": "military branch",
        "uri": "http://dbpedia.org/ontology/militaryBranch",
        "seq": "34,49",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "Give me all magazines whose founder died in Berkeley, California?",
    "SerialNumber": "4331",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/deathPlace\u003e \u003chttp://dbpedia.org/resource/Berkeley,_California\u003e . ?uri \u003chttp://dbpedia.org/ontology/founder\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Magazine\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Berkeley, California",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Berkeley,_California",
        "seq": "44,64"
      }
    ],
    "id": "406cb0444b7849598998845f33cc549f",
    "predicate mapping": [
      {
        "label": "died in",
        "uri": "http://dbpedia.org/ontology/deathPlace",
        "seq": "36,43",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "founder",
        "uri": "http://dbpedia.org/ontology/founder",
        "seq": "28,35",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "magazine",
        "uri": "http://dbpedia.org/ontology/Magazine",
        "seq": "12,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "401",
    "question": "Give me a count of musical artists collaborating with Waylon Jennings?",
    "SerialNumber": "4332",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/ontology/associatedMusicalArtist\u003e \u003chttp://dbpedia.org/resource/Waylon_Jennings\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MusicalArtist\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Waylon Jennings",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Waylon_Jennings",
        "seq": "54,69"
      }
    ],
    "id": "d008d95436354994a9c920a5c4118bd4",
    "predicate mapping": [
      {
        "label": "musical",
        "uri": "http://dbpedia.org/ontology/associatedMusicalArtist",
        "seq": "19,26",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "musical artist",
        "uri": "http://dbpedia.org/ontology/MusicalArtist",
        "seq": "19,33",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "307",
    "question": "Cologny and Lancy are the neighboring municipalities of which place ?",
    "SerialNumber": "4333",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/property/neighboringMunicipalities\u003e \u003chttp://dbpedia.org/resource/Cologny\u003e . ?uri \u003chttp://dbpedia.org/property/neighboringMunicipalities\u003e \u003chttp://dbpedia.org/resource/Lancy\u003e . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Place\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Cologny",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Cologny",
        "seq": "0,7"
      },
      {
        "label": "Lancy",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Lancy",
        "seq": "12,17"
      }
    ],
    "id": "5a3c7897625247c680bee70a5841b19a",
    "predicate mapping": [
      {
        "label": "neighboring municipalities",
        "uri": "http://dbpedia.org/property/neighboringMunicipalities",
        "seq": "26,52",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "neighboring municipalities",
        "uri": "http://dbpedia.org/property/neighboringMunicipalities",
        "seq": "26,52",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "place",
        "uri": "http://dbpedia.org/ontology/Place",
        "seq": "62,67",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Who are the spouse of the actors of Wrongfully Accused?",
    "SerialNumber": "4334",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Wrongfully_Accused\u003e \u003chttp://dbpedia.org/ontology/starring\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/spouse\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Wrongfully Accused",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Wrongfully_Accused",
        "seq": "36,54"
      }
    ],
    "id": "6c664cbf0c8344ae93064a7d00fab47a",
    "predicate mapping": [
      {
        "label": "actor",
        "uri": "http://dbpedia.org/ontology/starring",
        "seq": "26,31",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "spouse",
        "uri": "http://dbpedia.org/ontology/spouse",
        "seq": "12,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "Which scientist is known for writing Philosophi Naturalis Principia Mathematica?",
    "SerialNumber": "4336",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/knownFor\u003e \u003chttp://dbpedia.org/resource/Philosophiæ_Naturalis_Principia_Mathematica\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Principia Mathematica",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Philosophiæ_Naturalis_Principia_Mathematica",
        "seq": "58,79"
      }
    ],
    "id": "b01faa87ad5d492582e9236745d1282d",
    "predicate mapping": [
      {
        "label": "known for",
        "uri": "http://dbpedia.org/property/knownFor",
        "seq": "19,28",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the profession of the William Luther Hill and also the office of the Richard Coke ?",
    "SerialNumber": "4337",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/William_Luther_Hill\u003e \u003chttp://dbpedia.org/ontology/profession\u003e ?uri. \u003chttp://dbpedia.org/resource/Richard_Coke\u003e \u003chttp://dbpedia.org/property/office\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "William Luther Hill",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/William_Luther_Hill",
        "seq": "30,49"
      },
      {
        "label": "Richard Coke",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Richard_Coke",
        "seq": "77,89"
      }
    ],
    "id": "d63aa2d8047143e494136822ba4d8766",
    "predicate mapping": [
      {
        "label": "profession",
        "uri": "http://dbpedia.org/ontology/profession",
        "seq": "12,22",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "office",
        "uri": "http://dbpedia.org/property/office",
        "seq": "63,69",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Los Angeles Lakers is the team of which basketball players?",
    "SerialNumber": "4340",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/team\u003e \u003chttp://dbpedia.org/resource/Los_Angeles_Lakers\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/BasketballPlayer\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Los Angeles Lakers",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Los_Angeles_Lakers",
        "seq": "0,18"
      }
    ],
    "id": "333d5b882d2a433abf4674b881d86b63",
    "predicate mapping": [
      {
        "label": "team",
        "uri": "http://dbpedia.org/property/team",
        "seq": "26,30",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "basketball player",
        "uri": "http://dbpedia.org/ontology/BasketballPlayer",
        "seq": "40,57",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "To which state eorge M. Chilcott  belong ?",
    "SerialNumber": "4341",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/George_M._Chilcott\u003e \u003chttp://dbpedia.org/property/state\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "eorge M. Chilcott",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/George_M._Chilcott",
        "seq": "21,32"
      }
    ],
    "id": "02be653e65e640b390467b40c75c8113",
    "predicate mapping": [
      {
        "label": "state",
        "uri": "http://dbpedia.org/property/state",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "406",
    "question": "Ricky Gervais is the executive producer of the series having how many fictional characters?",
    "SerialNumber": "4342",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/executiveProducer\u003e \u003chttp://dbpedia.org/resource/Ricky_Gervais\u003e . ?uri \u003chttp://dbpedia.org/ontology/series\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/FictionalCharacter\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ricky Gervais",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ricky_Gervais",
        "seq": "0,13"
      }
    ],
    "id": "728abc0613c4486dac29a63aa6e90537",
    "predicate mapping": [
      {
        "label": "executive producer",
        "uri": "http://dbpedia.org/ontology/executiveProducer",
        "seq": "21,39",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "series",
        "uri": "http://dbpedia.org/ontology/series",
        "seq": "47,53",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "fictional character",
        "uri": "http://dbpedia.org/ontology/FictionalCharacter",
        "seq": "70,89",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What award has been awarded to both Dion Beebe and Charles LeMaire?",
    "SerialNumber": "4346",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Dion_Beebe\u003e \u003chttp://dbpedia.org/ontology/award\u003e ?uri. \u003chttp://dbpedia.org/resource/Charles_LeMaire\u003e \u003chttp://dbpedia.org/property/awards\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Dion Beebe",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Dion_Beebe",
        "seq": "36,46"
      },
      {
        "label": "Charles LeMaire",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Charles_LeMaire",
        "seq": "51,66"
      }
    ],
    "id": "9713dcb7417545e492296544a6ea728d",
    "predicate mapping": [
      {
        "label": "awarded",
        "uri": "http://dbpedia.org/ontology/award",
        "seq": "20,27",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "awarded",
        "uri": "http://dbpedia.org/property/awards",
        "seq": "20,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What religion did the president follow which was served by Kang Young-hoon?",
    "SerialNumber": "4347",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Kang_Young-hoon\u003e \u003chttp://dbpedia.org/property/president\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/religion\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Kang Young-hoon",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Kang_Young-hoon",
        "seq": "59,74"
      }
    ],
    "id": "c2b361e703db47748197f55a513a8f91",
    "predicate mapping": [
      {
        "label": "president",
        "uri": "http://dbpedia.org/property/president",
        "seq": "22,31",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion",
        "seq": "5,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which is the common prospect team of Mikhail Pashnin and Robin kovacs ?",
    "SerialNumber": "4348",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Mikhail_Pashnin\u003e \u003chttp://dbpedia.org/property/prospectTeam\u003e ?uri. \u003chttp://dbpedia.org/resource/Robin_Kovacs\u003e \u003chttp://dbpedia.org/ontology/prospectTeam\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Mikhail Pashnin",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Mikhail_Pashnin",
        "seq": "37,52"
      },
      {
        "label": "Robin kovacs",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Robin_Kovacs",
        "seq": "57,69"
      }
    ],
    "id": "152b926438b04cc09ddbaf7259bc0d5f",
    "predicate mapping": [
      {
        "label": "prospect team",
        "uri": "http://dbpedia.org/property/prospectTeam",
        "seq": "20,33",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "prospect team",
        "uri": "http://dbpedia.org/ontology/prospectTeam",
        "seq": "20,33",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Name the person whose child is Irne Joliot-Curie?",
    "SerialNumber": "4349",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/children\u003e \u003chttp://dbpedia.org/resource/Irène_Joliot-Curie\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Irne Joliot-Curie",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Irène_Joliot-Curie",
        "seq": "31,48"
      }
    ],
    "id": "135b3e40d914466e87cc236585e5a2ea",
    "predicate mapping": [
      {
        "label": "child",
        "uri": "http://dbpedia.org/property/children",
        "seq": "22,27",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/Person",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which TV show\u0027s company is PlayTone and is produced by Stephen E. Ambrose ?",
    "SerialNumber": "4350",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/company\u003e \u003chttp://dbpedia.org/resource/Playtone\u003e . ?uri \u003chttp://dbpedia.org/property/producer\u003e \u003chttp://dbpedia.org/resource/Stephen_E._Ambrose\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "PlayTone",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Playtone",
        "seq": "27,35"
      },
      {
        "label": "Stephen E. Ambrose",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Stephen_E._Ambrose",
        "seq": "55,73"
      }
    ],
    "id": "ee40fd8fb95f42b7a50f05e872395ec7",
    "predicate mapping": [
      {
        "label": "company",
        "uri": "http://dbpedia.org/property/company",
        "seq": "16,23",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "produced",
        "uri": "http://dbpedia.org/property/producer",
        "seq": "43,51",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "show\u0027s",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "9,15",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "Count the different genres of games published by Titus Software",
    "SerialNumber": "4351",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/publisher\u003e \u003chttp://dbpedia.org/resource/Titus_Software\u003e . ?x \u003chttp://dbpedia.org/ontology/genre\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Titus Software",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Titus_Software",
        "seq": "49,63"
      }
    ],
    "id": "d7e5d2254df0467f9540e90433f7ea55",
    "predicate mapping": [
      {
        "label": "published",
        "uri": "http://dbpedia.org/property/publisher",
        "seq": "36,45",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "genre",
        "uri": "http://dbpedia.org/ontology/genre",
        "seq": "20,25",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What religions are followed by members of the societies whose architectural influences can be seen on the Sanggar Agung ?",
    "SerialNumber": "4352",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Sanggar_Agung\u003e \u003chttp://dbpedia.org/property/architecturalStyle\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/religion\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Sanggar Agung",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Sanggar_Agung",
        "seq": "106,119"
      }
    ],
    "id": "adb40156d8b943db81c77206edceffb5",
    "predicate mapping": [
      {
        "label": "architectural",
        "uri": "http://dbpedia.org/property/architecturalStyle",
        "seq": "62,75",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion",
        "seq": "5,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who is the predecessor of Voere ?",
    "SerialNumber": "4353",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Voere\u003e \u003chttp://dbpedia.org/ontology/predecessor\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Voere",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Voere",
        "seq": "26,31"
      }
    ],
    "id": "5aa7006cd15c46c2bb25952420fc9ab6",
    "predicate mapping": [
      {
        "label": "predecessor",
        "uri": "http://dbpedia.org/ontology/predecessor",
        "seq": "11,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which stockholder of yale Repertory Theatre was training center of William Anthony ?",
    "SerialNumber": "4354",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/William_Anthony_(artist)\u003e \u003chttp://dbpedia.org/ontology/training\u003e ?uri. \u003chttp://dbpedia.org/resource/Yale_Repertory_Theatre\u003e \u003chttp://dbpedia.org/property/owner\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "William Anthony",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/William_Anthony_(artist)",
        "seq": "67,82"
      },
      {
        "label": "yale Repertory Theatre",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Yale_Repertory_Theatre",
        "seq": "21,43"
      }
    ],
    "id": "a6b5eb1806b843d1af6d909735bc52b6",
    "predicate mapping": [
      {
        "label": "training",
        "uri": "http://dbpedia.org/ontology/training",
        "seq": "48,56",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "stockholder",
        "uri": "http://dbpedia.org/property/owner",
        "seq": "6,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "Where is the school which is the rival of Somerset Berkley Regional High?",
    "SerialNumber": "4356",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Somerset_Berkley_Regional_High_School\u003e \u003chttp://dbpedia.org/ontology/rival\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/region\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/School\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Somerset Berkley Regional High",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Somerset_Berkley_Regional_High_School",
        "seq": "42,72"
      }
    ],
    "id": "d851da1144a243338aa3d47e27dcab4b",
    "predicate mapping": [
      {
        "label": "rival",
        "uri": "http://dbpedia.org/ontology/rival",
        "seq": "33,38",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "Region",
        "uri": "http://dbpedia.org/ontology/region",
        "seq": "59,65",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "school",
        "uri": "http://dbpedia.org/ontology/School",
        "seq": "13,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Who were the american football players who played for Dallas Cowboys?",
    "SerialNumber": "4358",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/team\u003e \u003chttp://dbpedia.org/resource/Dallas_Cowboys\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/AmericanFootballPlayer\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Dallas Cowboys",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Dallas_Cowboys",
        "seq": "54,68"
      }
    ],
    "id": "f6301e4382644f719c3ca7d13a774aa1",
    "predicate mapping": [
      {
        "label": "played for",
        "uri": "http://dbpedia.org/ontology/team",
        "seq": "43,53",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "american football player",
        "uri": "http://dbpedia.org/ontology/AmericanFootballPlayer",
        "seq": "13,37",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the national origin of Dornier Aerodyne and Hirth Acrostar ?;",
    "SerialNumber": "4359",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Dornier_Aerodyne\u003e \u003chttp://dbpedia.org/property/nationalOrigin\u003e ?uri. \u003chttp://dbpedia.org/resource/Hirth_Acrostar\u003e \u003chttp://dbpedia.org/ontology/origin\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Dornier Aerodyne",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Dornier_Aerodyne",
        "seq": "31,47"
      },
      {
        "label": "Hirth Acrostar",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Hirth_Acrostar",
        "seq": "52,66"
      }
    ],
    "id": "f913c2429f424dccae257c7c4a5f5b83",
    "predicate mapping": [
      {
        "label": "national origin",
        "uri": "http://dbpedia.org/property/nationalOrigin",
        "seq": "12,27",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "origin",
        "uri": "http://dbpedia.org/ontology/origin",
        "seq": "21,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who is the writer of He\u0027s a Pirate ?",
    "SerialNumber": "4360",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/He\u0027s_a_Pirate\u003e \u003chttp://dbpedia.org/property/writer\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "He\u0027s a Pirate",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/He\u0027s_a_Pirate",
        "seq": "21,34"
      }
    ],
    "id": "84e39f9dfd9b421eaede863a68c7d3dd",
    "predicate mapping": [
      {
        "label": "writer",
        "uri": "http://dbpedia.org/property/writer",
        "seq": "11,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "102",
    "question": "Count the number of artists in the Cirque du Soleil discography?",
    "SerialNumber": "4363",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { \u003chttp://dbpedia.org/resource/Cirque_du_Soleil_discography\u003e \u003chttp://dbpedia.org/property/artist\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Cirque du Soleil discography",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Cirque_du_Soleil_discography",
        "seq": "35,63"
      }
    ],
    "id": "8da1f3a107bd45b2b6826f13b3e863b9",
    "predicate mapping": [
      {
        "label": "artist",
        "uri": "http://dbpedia.org/property/artist",
        "seq": "20,26",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "In which countries is coconut used as a food ingredient?",
    "SerialNumber": "4364",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/ingredient\u003e \u003chttp://dbpedia.org/resource/Coconut\u003e . ?x \u003chttp://dbpedia.org/property/country\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Food\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "coconut",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Coconut",
        "seq": "22,29"
      }
    ],
    "id": "8f70005177114907b820b6cb4ca9396e",
    "predicate mapping": [
      {
        "label": "ingredient",
        "uri": "http://dbpedia.org/ontology/ingredient",
        "seq": "45,55",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "countries",
        "uri": "http://dbpedia.org/property/country",
        "seq": "9,18",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "food",
        "uri": "http://dbpedia.org/ontology/Food",
        "seq": "40,44",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Where did anton ausserer die?",
    "SerialNumber": "4366",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Anton_Ausserer\u003e \u003chttp://dbpedia.org/property/deathPlace\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "anton ausserer",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Anton_Ausserer",
        "seq": "10,24"
      }
    ],
    "id": "249446474067450f80688ee178af8d63",
    "predicate mapping": [
      {
        "label": "die",
        "uri": "http://dbpedia.org/property/deathPlace",
        "seq": "25,28",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What is the river whose source is Lake Ontario?",
    "SerialNumber": "4367",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/source\u003e \u003chttp://dbpedia.org/resource/Lake_Ontario\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/River\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Lake Ontario",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Lake_Ontario",
        "seq": "34,46"
      }
    ],
    "id": "c46c0c8dbcbe4bf091c8b520f9fa3805",
    "predicate mapping": [
      {
        "label": "source",
        "uri": "http://dbpedia.org/ontology/source",
        "seq": "24,30",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River",
        "seq": "12,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Which rivers have source origins asnorth western, Zambia ?",
    "SerialNumber": "4368",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/sourceRegion\u003e \u003chttp://dbpedia.org/resource/North-Western_Province,_Zambia\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/River\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "north western, Zambia",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/North-Western_Province,_Zambia",
        "seq": "50,56"
      }
    ],
    "id": "f791ffa9789549f19d8f53aff0f9e369",
    "predicate mapping": [
      {
        "label": "source",
        "uri": "http://dbpedia.org/property/sourceRegion",
        "seq": "18,24",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River",
        "seq": "6,11",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "102",
    "question": "How many races has Best Mate won?",
    "SerialNumber": "4370",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { \u003chttp://dbpedia.org/resource/Best_Mate\u003e \u003chttp://dbpedia.org/property/race\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Best Mate",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Best_Mate",
        "seq": "19,28"
      }
    ],
    "id": "1dcc7c9bfae6426bb72ab84d88afa0ed",
    "predicate mapping": [
      {
        "label": "race",
        "uri": "http://dbpedia.org/property/race",
        "seq": "9,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "What has  location as Ontario?",
    "SerialNumber": "4372",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/location\u003e \u003chttp://dbpedia.org/resource/Ontario\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ontario",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ontario",
        "seq": "22,29"
      }
    ],
    "id": "846635db38f040eaa3478eac855e39e8",
    "predicate mapping": [
      {
        "label": "location",
        "uri": "http://dbpedia.org/ontology/location",
        "seq": "10,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Where was  William Anthony  trained ?",
    "SerialNumber": "4373",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/William_Anthony_(artist)\u003e \u003chttp://dbpedia.org/ontology/training\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "William Anthony",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/William_Anthony_(artist)",
        "seq": "11,26"
      }
    ],
    "id": "5bcc534759a2403ca4f0e614344dc088",
    "predicate mapping": [
      {
        "label": "trained",
        "uri": "http://dbpedia.org/ontology/training",
        "seq": "28,35",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What are some famous companies founded in the US?",
    "SerialNumber": "4374",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/foundationPlace\u003e \u003chttp://dbpedia.org/resource/United_States\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Company\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "US",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/United_States",
        "seq": "46,48"
      }
    ],
    "id": "e9d2d1d8bc8a4519b2b504c0b054b9e5",
    "predicate mapping": [
      {
        "label": "founded",
        "uri": "http://dbpedia.org/ontology/foundationPlace",
        "seq": "31,38",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "companies",
        "uri": "http://dbpedia.org/ontology/Company",
        "seq": "21,30",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "City of Miami Cemetery is the governing body of which city?",
    "SerialNumber": "4375",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/City_of_Miami_Cemetery\u003e \u003chttp://dbpedia.org/property/governingBody\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "City of Miami Cemetery",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/City_of_Miami_Cemetery",
        "seq": "0,22"
      }
    ],
    "id": "a3c789f47bd247b6be843aa13563bc36",
    "predicate mapping": [
      {
        "label": "governing body",
        "uri": "http://dbpedia.org/property/governingBody",
        "seq": "30,44",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "What is the  name of the television show whose developer is J. Michael Straczynski and actor is Jason Carter (actor)?",
    "SerialNumber": "4378",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/developer\u003e \u003chttp://dbpedia.org/resource/J._Michael_Straczynski\u003e . ?uri \u003chttp://dbpedia.org/ontology/starring\u003e \u003chttp://dbpedia.org/resource/Jason_Carter_(actor)\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "J. Michael Straczynski",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/J._Michael_Straczynski",
        "seq": "60,82"
      },
      {
        "label": "Jason Carter (actor)",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Jason_Carter_(actor)",
        "seq": "96,116"
      }
    ],
    "id": "9b7068c9ee9b45a4b38e8b7da17bc32d",
    "predicate mapping": [
      {
        "label": "developer",
        "uri": "http://dbpedia.org/ontology/developer",
        "seq": "47,56",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "actor",
        "uri": "http://dbpedia.org/ontology/starring",
        "seq": "87,92",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "25,40",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "405",
    "question": "How many artists have their works in the Sao Paolo Museum of Art?",
    "SerialNumber": "4380",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/museum\u003e \u003chttp://dbpedia.org/resource/São_Paulo_Museum_of_Art\u003e . ?x \u003chttp://dbpedia.org/property/artist\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Artist\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Sao Paolo Museum of Art",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/São_Paulo_Museum_of_Art",
        "seq": "41,64"
      }
    ],
    "id": "f1a36818194047f59c627aa4e1e8b559",
    "predicate mapping": [
      {
        "label": "Museum",
        "uri": "http://dbpedia.org/property/museum",
        "seq": "51,57",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "artist",
        "uri": "http://dbpedia.org/property/artist",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "artist",
        "uri": "http://dbpedia.org/ontology/Artist",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the university whose athletic department is called National Collegiate Athletic Association and has a chancellor named Nicholas S. Zeppos?",
    "SerialNumber": "4382",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/athletics\u003e \u003chttp://dbpedia.org/resource/National_Collegiate_Athletic_Association\u003e . ?uri \u003chttp://dbpedia.org/property/chancellor\u003e \u003chttp://dbpedia.org/resource/Nicholas_S._Zeppos\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/University\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "National Collegiate Athletic Association",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/National_Collegiate_Athletic_Association",
        "seq": "56,96"
      },
      {
        "label": "Nicholas S. Zeppos",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Nicholas_S._Zeppos",
        "seq": "124,142"
      }
    ],
    "id": "80b87ca88eaf4b569c9bcb66b3fca287",
    "predicate mapping": [
      {
        "label": "athletic",
        "uri": "http://dbpedia.org/ontology/athletics",
        "seq": "26,34",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "chancellor",
        "uri": "http://dbpedia.org/property/chancellor",
        "seq": "107,117",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "university",
        "uri": "http://dbpedia.org/ontology/University",
        "seq": "9,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the military branch of the William French Smith which is also the branch of Pierre R. Graham ?",
    "SerialNumber": "4384",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/William_French_Smith\u003e \u003chttp://dbpedia.org/ontology/militaryBranch\u003e ?uri. \u003chttp://dbpedia.org/resource/Pierre_R._Graham\u003e \u003chttp://dbpedia.org/property/branch\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "William French Smith",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/William_French_Smith",
        "seq": "35,55"
      },
      {
        "label": "Pierre R. Graham",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Pierre_R._Graham",
        "seq": "84,100"
      }
    ],
    "id": "e080bdada1b3440e8410f575e2cff662",
    "predicate mapping": [
      {
        "label": "military branch",
        "uri": "http://dbpedia.org/ontology/militaryBranch",
        "seq": "12,27",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "branch",
        "uri": "http://dbpedia.org/property/branch",
        "seq": "21,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Is Pulau Ubin the largest city of Singapore?",
    "SerialNumber": "4385",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Pulau_Ubin\u003e \u003chttp://dbpedia.org/ontology/largestCity\u003e \u003chttp://dbpedia.org/resource/Singapore\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Pulau Ubin",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Pulau_Ubin",
        "seq": "3,13"
      },
      {
        "label": "Singapore",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Singapore",
        "seq": "34,43"
      }
    ],
    "id": "8993e18e5aa946e8bbf8e70e4f8c96b5",
    "predicate mapping": [
      {
        "label": "largest city",
        "uri": "http://dbpedia.org/ontology/largestCity",
        "seq": "18,30",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Which mountains are contained in Inyo National Forest?",
    "SerialNumber": "4387",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/locatedInArea\u003e \u003chttp://dbpedia.org/resource/Inyo_National_Forest\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Mountain\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Inyo National Forest",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Inyo_National_Forest",
        "seq": "33,53"
      }
    ],
    "id": "70fbf64af7d749509853096246f02afd",
    "predicate mapping": [
      {
        "label": "Nation",
        "uri": "http://dbpedia.org/ontology/locatedInArea",
        "seq": "38,44",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "mountain",
        "uri": "http://dbpedia.org/ontology/Mountain",
        "seq": "6,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "405",
    "question": "In how many places have people canonized by John Paul II died?",
    "SerialNumber": "4388",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/canonizedBy\u003e \u003chttp://dbpedia.org/resource/Pope_John_Paul_II\u003e . ?x \u003chttp://dbpedia.org/property/deathPlace\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Place\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "John Paul II",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Pope_John_Paul_II",
        "seq": "44,56"
      }
    ],
    "id": "6aabd01fc03b4eaa966294abc7d5be2d",
    "predicate mapping": [
      {
        "label": "canonized by",
        "uri": "http://dbpedia.org/property/canonizedBy",
        "seq": "31,43",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "places",
        "uri": "http://dbpedia.org/property/deathPlace",
        "seq": "12,18",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "place",
        "uri": "http://dbpedia.org/ontology/Place",
        "seq": "12,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which arena of WPC Dynamo Moscow is the death palce of Mikhail Voronin ?",
    "SerialNumber": "4392",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/WPC_Dynamo_Moscow\u003e \u003chttp://dbpedia.org/property/arena\u003e ?uri. \u003chttp://dbpedia.org/resource/Mikhail_Voronin\u003e \u003chttp://dbpedia.org/property/deathPlace\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "WPC Dynamo Moscow",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/WPC_Dynamo_Moscow",
        "seq": "15,32"
      },
      {
        "label": "Mikhail Voronin",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Mikhail_Voronin",
        "seq": "55,70"
      }
    ],
    "id": "acd83380bc52438a913b1294a017b418",
    "predicate mapping": [
      {
        "label": "arena",
        "uri": "http://dbpedia.org/property/arena",
        "seq": "6,11",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "death",
        "uri": "http://dbpedia.org/property/deathPlace",
        "seq": "40,45",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "101",
    "question": "How many theme musics have been composed by Julian Gingell?",
    "SerialNumber": "4393",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/property/themeMusicComposer\u003e \u003chttp://dbpedia.org/resource/Julian_Gingell\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Julian Gingell",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Julian_Gingell",
        "seq": "44,58"
      }
    ],
    "id": "f6bdf603e0004a3fa20c3ab3fc071309",
    "predicate mapping": [
      {
        "label": "composed",
        "uri": "http://dbpedia.org/property/themeMusicComposer",
        "seq": "32,40",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "What are the musicals whose musicians worked under Sony Music Entertainment?",
    "SerialNumber": "4395",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/label\u003e \u003chttp://dbpedia.org/resource/Sony_Music_Entertainment\u003e . ?uri \u003chttp://dbpedia.org/property/music\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Musical\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Sony Music Entertainment",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Sony_Music_Entertainment",
        "seq": "52,76"
      }
    ],
    "id": "43525bb6aaec44c582028a0f297108ec",
    "predicate mapping": [
      {
        "label": "are",
        "uri": "http://dbpedia.org/property/label",
        "seq": "5,8",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "music",
        "uri": "http://dbpedia.org/property/music",
        "seq": "13,18",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "musical",
        "uri": "http://dbpedia.org/ontology/Musical",
        "seq": "13,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the place of the Geography Club (play) which is also the  official residence of the Scott Berkun?",
    "SerialNumber": "4396",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Geography_Club_(play)\u003e \u003chttp://dbpedia.org/property/place\u003e ?uri. \u003chttp://dbpedia.org/resource/Scott_Berkun\u003e \u003chttp://dbpedia.org/property/residence\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Geography Club (play)",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Geography_Club_(play)",
        "seq": "25,46"
      },
      {
        "label": "Scott Berkun",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Scott_Berkun",
        "seq": "92,104"
      }
    ],
    "id": "52db5fe19d374c4a99a23b55ecc4d93d",
    "predicate mapping": [
      {
        "label": "place",
        "uri": "http://dbpedia.org/property/place",
        "seq": "12,17",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "residence",
        "uri": "http://dbpedia.org/property/residence",
        "seq": "75,84",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "List the award which have been won by both Charles LeMaire and Nick Park ?",
    "SerialNumber": "4399",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Charles_LeMaire\u003e \u003chttp://dbpedia.org/ontology/award\u003e ?uri. \u003chttp://dbpedia.org/resource/Nick_Park\u003e \u003chttp://dbpedia.org/ontology/award\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Charles LeMaire",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Charles_LeMaire",
        "seq": "43,58"
      },
      {
        "label": "Nick Park",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Nick_Park",
        "seq": "63,72"
      }
    ],
    "id": "78722f141f874d3caafa82adf3d45089",
    "predicate mapping": [
      {
        "label": "award",
        "uri": "http://dbpedia.org/ontology/award",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "award",
        "uri": "http://dbpedia.org/ontology/award",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "111",
    "question": "Count the number of members of the organization which have Austria as one of the member ?",
    "SerialNumber": "4400",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/membership\u003e \u003chttp://dbpedia.org/resource/Austria\u003e . ?x \u003chttp://dbpedia.org/property/membership\u003e ?uri }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Austria",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Austria",
        "seq": "59,66"
      }
    ],
    "id": "5d8fba40bf9544c5a9a55982712ad859",
    "predicate mapping": [
      {
        "label": "members",
        "uri": "http://dbpedia.org/property/membership",
        "seq": "20,27",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "members",
        "uri": "http://dbpedia.org/property/membership",
        "seq": "20,27",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Name some relatives of the people studied in Manurewa High School?",
    "SerialNumber": "4401",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/school\u003e \u003chttp://dbpedia.org/resource/Manurewa_High_School\u003e . ?x \u003chttp://dbpedia.org/ontology/relative\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Manurewa High School",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Manurewa_High_School",
        "seq": "45,65"
      }
    ],
    "id": "56228aa5b26e4049b2a03f5745a23ed7",
    "predicate mapping": [
      {
        "label": "School",
        "uri": "http://dbpedia.org/ontology/school",
        "seq": "59,65",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "relative",
        "uri": "http://dbpedia.org/ontology/relative",
        "seq": "10,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "101",
    "question": "Gregg Toland cinematographed how many things?",
    "SerialNumber": "4402",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/ontology/cinematography\u003e \u003chttp://dbpedia.org/resource/Gregg_Toland\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Gregg Toland",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Gregg_Toland",
        "seq": "0,12"
      }
    ],
    "id": "d1087a6ae2e640ee9b0c1458c8447ee8",
    "predicate mapping": [
      {
        "label": "cinematographed",
        "uri": "http://dbpedia.org/ontology/cinematography",
        "seq": "13,28",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "Whose military unit is 39th infantry regiment in 1812?",
    "SerialNumber": "4403",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/militaryUnit\u003e \u003chttp://dbpedia.org/resource/39th_Infantry_Regiment_(War_of_1812)\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "39th infantry regiment",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/39th_Infantry_Regiment_(War_of_1812)",
        "seq": "23,45"
      }
    ],
    "id": "2ee9621573e44f3caa895a060b7ebda9",
    "predicate mapping": [
      {
        "label": "military unit",
        "uri": "http://dbpedia.org/ontology/militaryUnit",
        "seq": "6,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Is Darcs released with a GNU license?",
    "SerialNumber": "4404",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Darcs\u003e \u003chttp://dbpedia.org/ontology/license\u003e \u003chttp://dbpedia.org/resource/GNU\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Darcs",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Darcs",
        "seq": "3,8"
      },
      {
        "label": "GNU",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/GNU",
        "seq": "25,28"
      }
    ],
    "id": "3ba1c4f421364ee0be4dde8be5ba4558",
    "predicate mapping": [
      {
        "label": "license",
        "uri": "http://dbpedia.org/ontology/license",
        "seq": "29,36",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "List the current members of Metro Station (band) ?",
    "SerialNumber": "4405",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Metro_Station_(band)\u003e \u003chttp://dbpedia.org/property/currentMembers\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Metro Station (band)",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Metro_Station_(band)",
        "seq": "28,48"
      }
    ],
    "id": "74c5d0464b124cb38cdf4cd48125cf81",
    "predicate mapping": [
      {
        "label": "current members",
        "uri": "http://dbpedia.org/property/currentMembers",
        "seq": "9,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who is the builder of Presidio Santa Cruz de Terrenate ?",
    "SerialNumber": "4407",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Presidio_Santa_Cruz_de_Terrenate\u003e \u003chttp://dbpedia.org/ontology/builder\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Presidio Santa Cruz de Terrenate",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Presidio_Santa_Cruz_de_Terrenate",
        "seq": "22,54"
      }
    ],
    "id": "951936711e75498793c0cc4258ef5eb3",
    "predicate mapping": [
      {
        "label": "builder",
        "uri": "http://dbpedia.org/ontology/builder",
        "seq": "11,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What is the award which is presented by Swedish Academy?",
    "SerialNumber": "4409",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/presenter\u003e \u003chttp://dbpedia.org/resource/Swedish_Academy\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Award\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Swedish Academy",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Swedish_Academy",
        "seq": "40,55"
      }
    ],
    "id": "b9e63a276a7b43c8925247e323ca92f5",
    "predicate mapping": [
      {
        "label": "presented",
        "uri": "http://dbpedia.org/property/presenter",
        "seq": "27,36",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "award",
        "uri": "http://dbpedia.org/ontology/Award",
        "seq": "12,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the common profession of DeWitt Clinton and Claiborne Pell ?",
    "SerialNumber": "4410",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/DeWitt_Clinton\u003e \u003chttp://dbpedia.org/property/office\u003e ?uri. \u003chttp://dbpedia.org/resource/Claiborne_Pell\u003e \u003chttp://dbpedia.org/ontology/profession\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "DeWitt Clinton",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/DeWitt_Clinton",
        "seq": "33,47"
      },
      {
        "label": "Claiborne Pell",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Claiborne_Pell",
        "seq": "52,66"
      }
    ],
    "id": "3aa4bd1928004f1aa0fbb510009fc773",
    "predicate mapping": [
      {
        "label": "of",
        "uri": "http://dbpedia.org/property/office",
        "seq": "21,23",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "profession",
        "uri": "http://dbpedia.org/ontology/profession",
        "seq": "19,29",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "List the ingredients of Kaszanka?",
    "SerialNumber": "4412",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Kaszanka\u003e \u003chttp://dbpedia.org/ontology/ingredient\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Kaszanka",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Kaszanka",
        "seq": "24,32"
      }
    ],
    "id": "5a183f932ebe44a9bc2b48aa7f73e605",
    "predicate mapping": [
      {
        "label": "ingredient",
        "uri": "http://dbpedia.org/ontology/ingredient",
        "seq": "9,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What religion did Gamini Seneviratne follow?",
    "SerialNumber": "4415",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Gamini_Seneviratne\u003e \u003chttp://dbpedia.org/ontology/religion\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Gamini Seneviratne",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Gamini_Seneviratne",
        "seq": "18,36"
      }
    ],
    "id": "c73a4a3eacb742309e74d6f0c2e8e729",
    "predicate mapping": [
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion",
        "seq": "5,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Were the bodies involved in the Westroads mall shootings discovered in Nebraska?",
    "SerialNumber": "4417",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Westroads_Mall_shooting\u003e \u003chttp://dbpedia.org/property/bodyDiscovered\u003e \u003chttp://dbpedia.org/resource/Nebraska\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Westroads mall shooting",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Westroads_Mall_shooting",
        "seq": "32,55"
      },
      {
        "label": "Nebraska",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Nebraska",
        "seq": "71,79"
      }
    ],
    "id": "b2aaecfc5ca24aa0a486a847584fd884",
    "predicate mapping": [
      {
        "label": "discovered",
        "uri": "http://dbpedia.org/property/bodyDiscovered",
        "seq": "57,67",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which animator of The Skeleton Dance is also the animator of the Tommy Tucker\u0027s Tooth ?",
    "SerialNumber": "4420",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/The_Skeleton_Dance\u003e \u003chttp://dbpedia.org/ontology/animator\u003e ?uri. \u003chttp://dbpedia.org/resource/Tommy_Tucker\u0027s_Tooth\u003e \u003chttp://dbpedia.org/property/animator\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "The Skeleton Dance",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/The_Skeleton_Dance",
        "seq": "18,36"
      },
      {
        "label": "Tommy Tucker\u0027s Tooth",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Tommy_Tucker\u0027s_Tooth",
        "seq": "65,85"
      }
    ],
    "id": "04e3bd6b0c8e42cc847a95d2618c62fd",
    "predicate mapping": [
      {
        "label": "animator",
        "uri": "http://dbpedia.org/ontology/animator",
        "seq": "6,14",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "animator",
        "uri": "http://dbpedia.org/property/animator",
        "seq": "6,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Name the mountain range in which the mountain peak of Malatraix belongs?",
    "SerialNumber": "4422",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Malatraix\u003e \u003chttp://dbpedia.org/ontology/parentMountainPeak\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/mountainRange\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Malatraix",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Malatraix",
        "seq": "54,63"
      }
    ],
    "id": "75fe6c8cbf564ad5b696120959659daf",
    "predicate mapping": [
      {
        "label": "mountain",
        "uri": "http://dbpedia.org/ontology/parentMountainPeak",
        "seq": "9,17",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "mountain range",
        "uri": "http://dbpedia.org/ontology/mountainRange",
        "seq": "9,23",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "311",
    "question": "List education institute of the engineers whose alma mater is ChristChurch ?",
    "SerialNumber": "4423",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/education\u003e \u003chttp://dbpedia.org/resource/Christchurch\u003e . ?x \u003chttp://dbpedia.org/ontology/education\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Engineer\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "ChristChurch",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Christchurch",
        "seq": "62,74"
      }
    ],
    "id": "f468589935b448efb8923084dcbd1583",
    "predicate mapping": [
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/ontology/education",
        "seq": "48,58",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/ontology/education",
        "seq": "48,58",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "engineer",
        "uri": "http://dbpedia.org/ontology/Engineer",
        "seq": "32,40",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "What is the headquarters of the public transit system which is the system of Bottineau LRT ?",
    "SerialNumber": "4424",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Bottineau_LRT\u003e \u003chttp://dbpedia.org/property/system\u003e ?x . ?x \u003chttp://dbpedia.org/property/headquarters\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/PublicTransitSystem\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Bottineau LRT",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Bottineau_LRT",
        "seq": "77,90"
      }
    ],
    "id": "43a276ac67384d1fb8baebc563b6eeb9",
    "predicate mapping": [
      {
        "label": "system",
        "uri": "http://dbpedia.org/property/system",
        "seq": "47,53",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "headquarters",
        "uri": "http://dbpedia.org/property/headquarters",
        "seq": "12,24",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "public transit system",
        "uri": "http://dbpedia.org/ontology/PublicTransitSystem",
        "seq": "32,53",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "What is the place of birth of the jockey who breeded De La Rose ?",
    "SerialNumber": "4425",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/De_La_Rose\u003e \u003chttp://dbpedia.org/ontology/breeder\u003e ?x . ?x \u003chttp://dbpedia.org/property/birthPlace\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Jockey\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "De La Rose",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/De_La_Rose",
        "seq": "53,63"
      }
    ],
    "id": "daeb019f166b4919bd323ccf3b8cf03a",
    "predicate mapping": [
      {
        "label": "breeded",
        "uri": "http://dbpedia.org/ontology/breeder",
        "seq": "45,52",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "place birth",
        "uri": "http://dbpedia.org/property/birthPlace",
        "seq": "-1,10",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "jockey",
        "uri": "http://dbpedia.org/ontology/Jockey",
        "seq": "34,40",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "101",
    "question": "How many people are in the England national football team?",
    "SerialNumber": "4426",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/property/nationalteam\u003e \u003chttp://dbpedia.org/resource/England_national_football_team\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "England national football team",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/England_national_football_team",
        "seq": "27,57"
      }
    ],
    "id": "495e4973e9eb4c7f8177e3e1c774d8c7",
    "predicate mapping": [
      {
        "label": "national team",
        "uri": "http://dbpedia.org/property/nationalteam",
        "seq": "-1,12",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "7",
    "question": "Who is  venerated in  Judaism and Islam?",
    "SerialNumber": "4427",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/ontology/veneratedIn\u003e \u003chttp://dbpedia.org/resource/Judaism\u003e . ?uri \u003chttp://dbpedia.org/ontology/veneratedIn\u003e \u003chttp://dbpedia.org/resource/Islam\u003e . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Judaism",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Judaism",
        "seq": "22,29"
      },
      {
        "label": "Islam",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Islam",
        "seq": "34,39"
      }
    ],
    "id": "224dd25d50db49c89875b050e8c011a9",
    "predicate mapping": [
      {
        "label": "venerated in",
        "uri": "http://dbpedia.org/ontology/veneratedIn",
        "seq": "8,20",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "venerated in",
        "uri": "http://dbpedia.org/ontology/veneratedIn",
        "seq": "8,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Which child of Jack Ferguson became a Prime Minister?",
    "SerialNumber": "4430",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Jack_Ferguson\u003e \u003chttp://dbpedia.org/ontology/child\u003e ?x . ?x \u003chttp://dbpedia.org/property/primeminister\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jack Ferguson",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Jack_Ferguson",
        "seq": "15,28"
      }
    ],
    "id": "97e43aacfe074efa83f9fb0ba572e632",
    "predicate mapping": [
      {
        "label": "child",
        "uri": "http://dbpedia.org/ontology/child",
        "seq": "6,11",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "minister prime",
        "uri": "http://dbpedia.org/property/primeminister",
        "seq": "-1,13",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "101",
    "question": "How many members are there of the order of Bacillales?",
    "SerialNumber": "4432",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/ontology/order\u003e \u003chttp://dbpedia.org/resource/Bacillales\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Bacillales",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Bacillales",
        "seq": "43,53"
      }
    ],
    "id": "aac76b1792794e92a8495c8f380e7818",
    "predicate mapping": [
      {
        "label": "order",
        "uri": "http://dbpedia.org/ontology/order",
        "seq": "34,39",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "In which fields are the graduates of Worcester College, Oxford working?",
    "SerialNumber": "4434",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/almaMater\u003e \u003chttp://dbpedia.org/resource/Worcester_College,_Oxford\u003e . ?x \u003chttp://dbpedia.org/ontology/field\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Worcester College, Oxford",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Worcester_College,_Oxford",
        "seq": "37,62"
      }
    ],
    "id": "cb3019596f1c466a8e0aa2fab2fe9b1d",
    "predicate mapping": [
      {
        "label": "graduates",
        "uri": "http://dbpedia.org/property/almaMater",
        "seq": "24,33",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "field",
        "uri": "http://dbpedia.org/ontology/field",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "What sports can be played in institutions in Bataan?",
    "SerialNumber": "4435",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/province\u003e \u003chttp://dbpedia.org/resource/Bataan\u003e . ?x \u003chttp://dbpedia.org/ontology/sport\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Bataan",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Bataan",
        "seq": "45,51"
      }
    ],
    "id": "97488d1122824e838c6c54fae73101a3",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/property/province",
        "seq": "26,28",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "sport",
        "uri": "http://dbpedia.org/ontology/sport",
        "seq": "5,10",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Which country\u0027s national motto is \"Truth prevails\"?",
    "SerialNumber": "4441",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/nationalMotto\u003e \u003chttp://dbpedia.org/resource/Truth_prevails\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Country\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Truth prevails",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Truth_prevails",
        "seq": "35,49"
      }
    ],
    "id": "0a9d5d8da34c44869fda9580b1ed1cea",
    "predicate mapping": [
      {
        "label": "national motto",
        "uri": "http://dbpedia.org/property/nationalMotto",
        "seq": "16,30",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/Country",
        "seq": "6,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the alma mater of Andrew W. Lewis ?",
    "SerialNumber": "4442",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Andrew_W._Lewis\u003e \u003chttp://dbpedia.org/ontology/almaMater\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Andrew W. Lewis",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Andrew_W._Lewis",
        "seq": "26,41"
      }
    ],
    "id": "89e6c9790a3e43338859011415755939",
    "predicate mapping": [
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/ontology/almaMater",
        "seq": "12,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Which movies did Mark Steven edit?",
    "SerialNumber": "4444",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/editing\u003e \u003chttp://dbpedia.org/resource/Mark_Stevens_(film_editor)\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Mark Steven",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Mark_Stevens_(film_editor)",
        "seq": "17,28"
      }
    ],
    "id": "5dd00b4f9282453d994c9bacbec085e0",
    "predicate mapping": [
      {
        "label": "edit",
        "uri": "http://dbpedia.org/property/editing",
        "seq": "29,33",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "6,11",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What is the prize received by the one who wrote the screen play of The Postman  ?",
    "SerialNumber": "4446",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/The_Postman_(film)\u003e \u003chttp://dbpedia.org/property/screenplay\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/award\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "The Postman",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Postman_(film)",
        "seq": "67,78"
      }
    ],
    "id": "6fc13e0a9bc646d9ba9be4634f0ccaf0",
    "predicate mapping": [
      {
        "label": "screen play",
        "uri": "http://dbpedia.org/property/screenplay",
        "seq": "52,63",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "prize received",
        "uri": "http://dbpedia.org/ontology/award",
        "seq": "12,26",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "108",
    "question": "Count the total number of bacterias whose division is Firmicutes and domain is Bacteria?",
    "SerialNumber": "4448",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/ontology/division\u003e \u003chttp://dbpedia.org/resource/Firmicutes\u003e . ?uri \u003chttp://dbpedia.org/property/domain\u003e \u003chttp://dbpedia.org/resource/Bacteria\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Firmicutes",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Firmicutes",
        "seq": "54,64"
      },
      {
        "label": "Bacteria",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Bacteria",
        "seq": "79,87"
      }
    ],
    "id": "fd0bdcd9fabe430a9c347af0563b0d4b",
    "predicate mapping": [
      {
        "label": "division",
        "uri": "http://dbpedia.org/ontology/division",
        "seq": "42,50",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "domain",
        "uri": "http://dbpedia.org/property/domain",
        "seq": "69,75",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What is the mascot of the alma mater of Deborah Crombie?",
    "SerialNumber": "4450",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Deborah_Crombie\u003e \u003chttp://dbpedia.org/ontology/almaMater\u003e ?x . ?x \u003chttp://dbpedia.org/property/mascot\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Deborah Crombie",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Deborah_Crombie",
        "seq": "40,55"
      }
    ],
    "id": "3d2c285604e2416d8b47fe68fdf2f52c",
    "predicate mapping": [
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/ontology/almaMater",
        "seq": "26,36",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "mascot",
        "uri": "http://dbpedia.org/property/mascot",
        "seq": "12,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Where do beauty queens with brown hair reside?",
    "SerialNumber": "4453",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/hairColor\u003e \u003chttp://dbpedia.org/resource/Brown_hair\u003e . ?x \u003chttp://dbpedia.org/ontology/residence\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "brown hair",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Brown_hair",
        "seq": "28,38"
      }
    ],
    "id": "0115d9653fb44b66bb96c1af7d4296f3",
    "predicate mapping": [
      {
        "label": "hair",
        "uri": "http://dbpedia.org/property/hairColor",
        "seq": "34,38",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "reside",
        "uri": "http://dbpedia.org/ontology/residence",
        "seq": "39,45",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the mountain which belongs to Sierra Nevada range and is located in Inyo National Forest?",
    "SerialNumber": "4455",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/mountainRange\u003e \u003chttp://dbpedia.org/resource/Sierra_Nevada_(U.S.)\u003e . ?uri \u003chttp://dbpedia.org/ontology/locatedInArea\u003e \u003chttp://dbpedia.org/resource/Inyo_National_Forest\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Mountain\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Sierra Nevada",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Sierra_Nevada_(U.S.)",
        "seq": "35,48"
      },
      {
        "label": "Inyo National Forest",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Inyo_National_Forest",
        "seq": "73,93"
      }
    ],
    "id": "cf34994e9bb545c3beff7e8a04d58823",
    "predicate mapping": [
      {
        "label": "mountain range",
        "uri": "http://dbpedia.org/ontology/mountainRange",
        "seq": "-1,13",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "is located in",
        "uri": "http://dbpedia.org/ontology/locatedInArea",
        "seq": "59,72",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "mountain",
        "uri": "http://dbpedia.org/ontology/Mountain",
        "seq": "9,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "What is the company that has products with Windows RT as its OS?",
    "SerialNumber": "4456",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/os\u003e \u003chttp://dbpedia.org/resource/Windows_RT\u003e . ?uri \u003chttp://dbpedia.org/ontology/product\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Windows RT",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Windows_RT",
        "seq": "43,53"
      }
    ],
    "id": "62f222b7e3e84a6cb4ce8193b63544d6",
    "predicate mapping": [
      {
        "label": "OS",
        "uri": "http://dbpedia.org/property/os",
        "seq": "61,63",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "product",
        "uri": "http://dbpedia.org/ontology/product",
        "seq": "29,36",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Does the AMC Gremlin use an Audi engine?",
    "SerialNumber": "4458",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/AMC_Gremlin\u003e \u003chttp://dbpedia.org/property/engine\u003e \u003chttp://dbpedia.org/resource/Audi\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "AMC Gremlin",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/AMC_Gremlin",
        "seq": "9,20"
      },
      {
        "label": "Audi",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Audi",
        "seq": "28,32"
      }
    ],
    "id": "3ebfa74639fb4cb4ba3c69a23d7f89a2",
    "predicate mapping": [
      {
        "label": "engine",
        "uri": "http://dbpedia.org/property/engine",
        "seq": "33,39",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What is the resting place of the child of Linda Lee Cadwell?",
    "SerialNumber": "4459",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Linda_Lee_Cadwell\u003e \u003chttp://dbpedia.org/property/children\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/restingPlace\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Linda Lee Cadwell",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Linda_Lee_Cadwell",
        "seq": "42,59"
      }
    ],
    "id": "bcaaf472d03649a3b3fe0f04e625219d",
    "predicate mapping": [
      {
        "label": "child",
        "uri": "http://dbpedia.org/property/children",
        "seq": "33,38",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "resting place",
        "uri": "http://dbpedia.org/ontology/restingPlace",
        "seq": "12,25",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What is the religion of the relatives of Carmela Soprano ?",
    "SerialNumber": "4460",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Carmela_Soprano\u003e \u003chttp://dbpedia.org/ontology/relative\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/religion\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Carmela Soprano",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Carmela_Soprano",
        "seq": "41,56"
      }
    ],
    "id": "9c14e0afc5d44598951f1f9037822b2b",
    "predicate mapping": [
      {
        "label": "relative",
        "uri": "http://dbpedia.org/ontology/relative",
        "seq": "28,36",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion",
        "seq": "12,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What television shows\u0027s distributor is Eurovision?",
    "SerialNumber": "4461",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/distributor\u003e \u003chttp://dbpedia.org/resource/Eurovision_(network)\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Eurovision",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Eurovision_(network)",
        "seq": "39,49"
      }
    ],
    "id": "a3405b0ce1794c309e62e6db698ecfb1",
    "predicate mapping": [
      {
        "label": "distributor",
        "uri": "http://dbpedia.org/ontology/distributor",
        "seq": "24,35",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "5,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Did Stan Lee create Jean Grey?",
    "SerialNumber": "4462",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Jean_Grey\u003e \u003chttp://dbpedia.org/property/creators\u003e \u003chttp://dbpedia.org/resource/Stan_Lee\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jean Grey",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Jean_Grey",
        "seq": "20,29"
      },
      {
        "label": "Stan Lee",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Stan_Lee",
        "seq": "4,12"
      }
    ],
    "id": "c1908db186d144338bc6f399f9c6864c",
    "predicate mapping": [
      {
        "label": "create",
        "uri": "http://dbpedia.org/property/creators",
        "seq": "13,19",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the architect of Marine Corps Air Station Kaneohe Bay ?",
    "SerialNumber": "4464",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Marine_Corps_Air_Station_Kaneohe_Bay\u003e \u003chttp://dbpedia.org/property/architect\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Marine Corps Air Station Kaneohe Bay",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Marine_Corps_Air_Station_Kaneohe_Bay",
        "seq": "22,58"
      }
    ],
    "id": "81ed6105f8064c79a73b3ad0ab2f0dcd",
    "predicate mapping": [
      {
        "label": "architect",
        "uri": "http://dbpedia.org/property/architect",
        "seq": "9,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "311",
    "question": "What are the other launch site of the rockets which also have been launched from  Cape Canaveral Air Force Station Launch Complex 5 ?",
    "SerialNumber": "4467",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/launchSite\u003e \u003chttp://dbpedia.org/resource/Cape_Canaveral_Air_Force_Station_Launch_Complex_5\u003e . ?x \u003chttp://dbpedia.org/ontology/launchSite\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Rocket\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Cape Canaveral Air Force Station Launch Complex 5",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Cape_Canaveral_Air_Force_Station_Launch_Complex_5",
        "seq": "82,131"
      }
    ],
    "id": "a8f0980d732d4a9fb906625e2c72ca87",
    "predicate mapping": [
      {
        "label": "launch site",
        "uri": "http://dbpedia.org/ontology/launchSite",
        "seq": "19,30",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "launch site",
        "uri": "http://dbpedia.org/ontology/launchSite",
        "seq": "19,30",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "rocket",
        "uri": "http://dbpedia.org/ontology/Rocket",
        "seq": "38,44",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "What is the nationality of the David King-Wood and John Steed ?",
    "SerialNumber": "4468",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/David_King-Wood\u003e \u003chttp://dbpedia.org/property/nationality\u003e ?uri. \u003chttp://dbpedia.org/resource/John_Steed\u003e \u003chttp://dbpedia.org/property/nationality\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "David King-Wood",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/David_King-Wood",
        "seq": "31,46"
      },
      {
        "label": "John Steed",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/John_Steed",
        "seq": "51,61"
      }
    ],
    "id": "a66b13e59b5d46a58da7b17ae209894b",
    "predicate mapping": [
      {
        "label": "nationality",
        "uri": "http://dbpedia.org/property/nationality",
        "seq": "12,23",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "nationality",
        "uri": "http://dbpedia.org/property/nationality",
        "seq": "12,23",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Which country\u0027s leader  is Giuseppe Bertello?",
    "SerialNumber": "4470",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/leader\u003e \u003chttp://dbpedia.org/resource/Giuseppe_Bertello\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Country\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Giuseppe Bertello",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Giuseppe_Bertello",
        "seq": "27,44"
      }
    ],
    "id": "62defef353b544b88cb983a010e92992",
    "predicate mapping": [
      {
        "label": "leader",
        "uri": "http://dbpedia.org/ontology/leader",
        "seq": "16,22",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/Country",
        "seq": "6,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "From where did the son of Gustavo Rojas Pinilla graduate?",
    "SerialNumber": "4474",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Gustavo_Rojas_Pinilla\u003e \u003chttp://dbpedia.org/ontology/child\u003e ?x . ?x \u003chttp://dbpedia.org/property/almaMater\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Gustavo Rojas Pinilla",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Gustavo_Rojas_Pinilla",
        "seq": "26,47"
      }
    ],
    "id": "ee83374553104e4784b6847dc658c510",
    "predicate mapping": [
      {
        "label": "son",
        "uri": "http://dbpedia.org/ontology/child",
        "seq": "19,22",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "graduate",
        "uri": "http://dbpedia.org/property/almaMater",
        "seq": "48,56",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "108",
    "question": "What is the total number of software whose programming language is C++ and operating system is Microsoft Windows?",
    "SerialNumber": "4475",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/ontology/programmingLanguage\u003e \u003chttp://dbpedia.org/resource/C++\u003e . ?uri \u003chttp://dbpedia.org/ontology/operatingSystem\u003e \u003chttp://dbpedia.org/resource/Microsoft_Windows\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "C++",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/C++",
        "seq": "67,70"
      },
      {
        "label": "Microsoft Windows",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Microsoft_Windows",
        "seq": "95,112"
      }
    ],
    "id": "18d456becb4d4972ad3a8f8d430291d5",
    "predicate mapping": [
      {
        "label": "programming language",
        "uri": "http://dbpedia.org/ontology/programmingLanguage",
        "seq": "43,63",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "operating system",
        "uri": "http://dbpedia.org/ontology/operatingSystem",
        "seq": "75,91",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "In which races did Mouse Morris take part?",
    "SerialNumber": "4476",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Mouse_Morris\u003e \u003chttp://dbpedia.org/property/race\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Mouse Morris",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Mouse_Morris",
        "seq": "19,31"
      }
    ],
    "id": "500a1a24138f4ee68a58423b2a86132d",
    "predicate mapping": [
      {
        "label": "race",
        "uri": "http://dbpedia.org/property/race",
        "seq": "9,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the meaning of Heydar ?",
    "SerialNumber": "4480",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Heydar\u003e \u003chttp://dbpedia.org/property/meaning\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Heydar",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Heydar",
        "seq": "23,29"
      }
    ],
    "id": "43d5d1b277764d509013b0740a1134cd",
    "predicate mapping": [
      {
        "label": "meaning",
        "uri": "http://dbpedia.org/property/meaning",
        "seq": "12,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the fictional character whose species is American Pekin duck and has relatives named Ludwig Von Drake?",
    "SerialNumber": "4481",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/species\u003e \u003chttp://dbpedia.org/resource/American_Pekin_duck\u003e . ?uri \u003chttp://dbpedia.org/property/relatives\u003e \u003chttp://dbpedia.org/resource/Ludwig_Von_Drake\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/FictionalCharacter\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "American Pekin duck",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/American_Pekin_duck",
        "seq": "46,65"
      },
      {
        "label": "Ludwig Von Drake",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Ludwig_Von_Drake",
        "seq": "90,106"
      }
    ],
    "id": "76f197d00d1d4cf695613aa5f7089c3f",
    "predicate mapping": [
      {
        "label": "species",
        "uri": "http://dbpedia.org/ontology/species",
        "seq": "35,42",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "relatives",
        "uri": "http://dbpedia.org/property/relatives",
        "seq": "74,83",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "fictional character",
        "uri": "http://dbpedia.org/ontology/FictionalCharacter",
        "seq": "9,28",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "who are starring in the movies written by Mark Sandrich ?",
    "SerialNumber": "4482",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/writer\u003e \u003chttp://dbpedia.org/resource/Mark_Sandrich\u003e . ?x \u003chttp://dbpedia.org/ontology/starring\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Mark Sandrich",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Mark_Sandrich",
        "seq": "42,55"
      }
    ],
    "id": "dedf58280e9d4d9ea3379626fc434dd0",
    "predicate mapping": [
      {
        "label": "written by",
        "uri": "http://dbpedia.org/ontology/writer",
        "seq": "31,41",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "starring",
        "uri": "http://dbpedia.org/ontology/starring",
        "seq": "8,16",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "24,29",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What is the religion of the governors whose office is the Bank of Thailand?",
    "SerialNumber": "4483",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/office\u003e \u003chttp://dbpedia.org/resource/Bank_of_Thailand\u003e . ?x \u003chttp://dbpedia.org/ontology/religion\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Governor\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Bank of Thailand",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Bank_of_Thailand",
        "seq": "58,74"
      }
    ],
    "id": "9ac44261ad7c40989a2beefb39bb7b13",
    "predicate mapping": [
      {
        "label": "office",
        "uri": "http://dbpedia.org/property/office",
        "seq": "44,50",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion",
        "seq": "12,20",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "governor",
        "uri": "http://dbpedia.org/ontology/Governor",
        "seq": "28,36",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name all the junctions of U.S. Route 59?",
    "SerialNumber": "4484",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/U.S._Route_59\u003e \u003chttp://dbpedia.org/property/junction\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "U.S. Route 59",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/U.S._Route_59",
        "seq": "26,39"
      }
    ],
    "id": "34fe2288fd964273ad3d8a6c884539e7",
    "predicate mapping": [
      {
        "label": "junction",
        "uri": "http://dbpedia.org/property/junction",
        "seq": "13,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "111",
    "question": "Count the number of  fields of the scientists whose one of the fields is Sanskrit?",
    "SerialNumber": "4485",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/fields\u003e \u003chttp://dbpedia.org/resource/Sanskrit\u003e . ?x \u003chttp://dbpedia.org/property/fields\u003e ?uri }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Sanskrit",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Sanskrit",
        "seq": "73,81"
      }
    ],
    "id": "4f7bb480e41d4360a942060f68dd6654",
    "predicate mapping": [
      {
        "label": "fields",
        "uri": "http://dbpedia.org/property/fields",
        "seq": "21,27",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "fields",
        "uri": "http://dbpedia.org/property/fields",
        "seq": "21,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "In which city is the sister station of KTXY located ?",
    "SerialNumber": "4486",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/KTXY\u003e \u003chttp://dbpedia.org/ontology/sisterStation\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/city\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "KTXY",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/KTXY",
        "seq": "39,43"
      }
    ],
    "id": "0ab3de4c7c454c33ae9349c745121fa6",
    "predicate mapping": [
      {
        "label": "sister station",
        "uri": "http://dbpedia.org/ontology/sisterStation",
        "seq": "21,35",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "city",
        "uri": "http://dbpedia.org/ontology/city",
        "seq": "9,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Name the hubs of the airlines whose headquarters is in the Subang Interchange?",
    "SerialNumber": "4490",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/headquarters\u003e \u003chttp://dbpedia.org/resource/Subang_Interchange\u003e . ?x \u003chttp://dbpedia.org/property/hubs\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Airline\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Subang Interchange",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Subang_Interchange",
        "seq": "59,77"
      }
    ],
    "id": "b7793671687a4f84826d505cfe9e14f1",
    "predicate mapping": [
      {
        "label": "headquarters",
        "uri": "http://dbpedia.org/property/headquarters",
        "seq": "36,48",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "hubs",
        "uri": "http://dbpedia.org/property/hubs",
        "seq": "9,13",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "airline",
        "uri": "http://dbpedia.org/ontology/Airline",
        "seq": "21,28",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "101",
    "question": "How many people work in the Massachusetts house of Representatives?",
    "SerialNumber": "4491",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/property/office\u003e \u003chttp://dbpedia.org/resource/Massachusetts_House_of_Representatives\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Massachusetts house of Representatives",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Massachusetts_House_of_Representatives",
        "seq": "28,66"
      }
    ],
    "id": "8ba2e0250a244acdb7b868be0b3a81eb",
    "predicate mapping": [
      {
        "label": "of",
        "uri": "http://dbpedia.org/property/office",
        "seq": "48,50",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "311",
    "question": "List the services provided by the company which provides Microsoft azure as one of the service ?",
    "SerialNumber": "4493",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/services\u003e \u003chttp://dbpedia.org/resource/Microsoft_Azure\u003e . ?x \u003chttp://dbpedia.org/property/services\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Company\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Microsoft azure",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Microsoft_Azure",
        "seq": "57,72"
      }
    ],
    "id": "2fc623f7412b47e7b5f575b742471987",
    "predicate mapping": [
      {
        "label": "services",
        "uri": "http://dbpedia.org/property/services",
        "seq": "9,17",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "services",
        "uri": "http://dbpedia.org/property/services",
        "seq": "9,17",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company",
        "seq": "34,41",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "7",
    "question": "Who was member of boards at Royal Society and Trinity House?",
    "SerialNumber": "4494",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/ontology/board\u003e \u003chttp://dbpedia.org/resource/Royal_Society\u003e . ?uri \u003chttp://dbpedia.org/ontology/board\u003e \u003chttp://dbpedia.org/resource/Trinity_House\u003e . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Royal Society",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Royal_Society",
        "seq": "28,41"
      },
      {
        "label": "Trinity House",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Trinity_House",
        "seq": "46,59"
      }
    ],
    "id": "adc0e04c11b74782ba42a521d28ce3ce",
    "predicate mapping": [
      {
        "label": "board",
        "uri": "http://dbpedia.org/ontology/board",
        "seq": "18,23",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "board",
        "uri": "http://dbpedia.org/ontology/board",
        "seq": "18,23",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What is the debut team of the baseball player who was born in Williamsburg, Kansas ?",
    "SerialNumber": "4495",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/birthPlace\u003e \u003chttp://dbpedia.org/resource/Williamsburg,_Kansas\u003e . ?x \u003chttp://dbpedia.org/property/debutteam\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/BaseballPlayer\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Williamsburg, Kansas",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Williamsburg,_Kansas",
        "seq": "62,82"
      }
    ],
    "id": "53dd5747f1174fa8a6bc9eebbb9623c4",
    "predicate mapping": [
      {
        "label": "born in",
        "uri": "http://dbpedia.org/property/birthPlace",
        "seq": "54,61",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "debut team",
        "uri": "http://dbpedia.org/property/debutteam",
        "seq": "12,22",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "baseball player",
        "uri": "http://dbpedia.org/ontology/BaseballPlayer",
        "seq": "30,45",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which serving railway line of the Daund Junction railway station is the home port of INS Viraat ?",
    "SerialNumber": "4496",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/INS_Viraat_(R22)\u003e \u003chttp://dbpedia.org/ontology/homeport\u003e ?uri. \u003chttp://dbpedia.org/resource/Daund_Junction_railway_station\u003e \u003chttp://dbpedia.org/ontology/servingRailwayLine\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "INS Viraat",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/INS_Viraat_(R22)",
        "seq": "85,95"
      },
      {
        "label": "Daund Junction railway station",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Daund_Junction_railway_station",
        "seq": "34,64"
      }
    ],
    "id": "34ea4723aa304817a374f7a97e602678",
    "predicate mapping": [
      {
        "label": "port home",
        "uri": "http://dbpedia.org/ontology/homeport",
        "seq": "-1,8",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "serving railway line",
        "uri": "http://dbpedia.org/ontology/servingRailwayLine",
        "seq": "6,26",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "How many religions are followed by organizations which are internationally known as the muslim brotherhood?",
    "SerialNumber": "4497",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/international\u003e \u003chttp://dbpedia.org/resource/Muslim_Brotherhood\u003e . ?x \u003chttp://dbpedia.org/ontology/religion\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "muslim brotherhood",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Muslim_Brotherhood",
        "seq": "88,106"
      }
    ],
    "id": "1bd54f6e697a4ec58721e61e66480394",
    "predicate mapping": [
      {
        "label": "international",
        "uri": "http://dbpedia.org/property/international",
        "seq": "59,72",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion",
        "seq": "9,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the route start of Saint Petersburg  Moscow Railway ?",
    "SerialNumber": "4498",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Saint_Petersburg_–_Moscow_Railway\u003e \u003chttp://dbpedia.org/ontology/routeStart\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Saint Petersburg Moscow Railway",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Saint_Petersburg_–_Moscow_Railway",
        "seq": "-1,30"
      }
    ],
    "id": "60cca930301f44db9b136d974bf6b92e",
    "predicate mapping": [
      {
        "label": "route start",
        "uri": "http://dbpedia.org/ontology/routeStart",
        "seq": "9,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Which county seats are in the district where I can find the Hylebos Creek?",
    "SerialNumber": "4501",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Hylebos_Creek\u003e \u003chttp://dbpedia.org/ontology/district\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/countySeat\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Hylebos Creek",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Hylebos_Creek",
        "seq": "60,73"
      }
    ],
    "id": "47db1d0041e64e7da78f014fa6fd229f",
    "predicate mapping": [
      {
        "label": "district",
        "uri": "http://dbpedia.org/ontology/district",
        "seq": "30,38",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "county seat",
        "uri": "http://dbpedia.org/ontology/countySeat",
        "seq": "6,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "What other awards have been given to Goya Award Winners?",
    "SerialNumber": "4503",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/award\u003e \u003chttp://dbpedia.org/resource/Goya_Awards\u003e . ?x \u003chttp://dbpedia.org/property/awards\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Goya Award ",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Goya_Awards",
        "seq": "37,48"
      }
    ],
    "id": "cb5a9c76131d451b8570f5c627d5ef66",
    "predicate mapping": [
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/award",
        "seq": "11,17",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards",
        "seq": "11,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which river inflow of the Cahora Bassa is also Batoka Gorge Hydroelectric Power Station\u0027s river ?",
    "SerialNumber": "4504",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Cahora_Bassa\u003e \u003chttp://dbpedia.org/property/inflow\u003e ?uri. \u003chttp://dbpedia.org/resource/Batoka_Gorge_Hydroelectric_Power_Station\u003e \u003chttp://dbpedia.org/ontology/river\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Cahora Bassa",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Cahora_Bassa",
        "seq": "26,38"
      },
      {
        "label": "Batoka Gorge Hydroelectric Power Station",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Batoka_Gorge_Hydroelectric_Power_Station",
        "seq": "47,87"
      }
    ],
    "id": "2940479c5f6d439f9493a789b93b63f2",
    "predicate mapping": [
      {
        "label": "inflow",
        "uri": "http://dbpedia.org/property/inflow",
        "seq": "12,18",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/river",
        "seq": "6,11",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who owns the tunnels operated by the Massachusetts Department of Transportation?",
    "SerialNumber": "4506",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/operatedBy\u003e \u003chttp://dbpedia.org/resource/Massachusetts_Department_of_Transportation\u003e . ?x \u003chttp://dbpedia.org/property/owner\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/RoadTunnel\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Massachusetts Department of Transportation",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Massachusetts_Department_of_Transportation",
        "seq": "37,79"
      }
    ],
    "id": "3328c78b14064c5abd3109faa8975548",
    "predicate mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/ontology/operatedBy",
        "seq": "0,0",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "owns",
        "uri": "http://dbpedia.org/property/owner",
        "seq": "4,8",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "tunnels",
        "uri": "http://dbpedia.org/ontology/RoadTunnel",
        "seq": "13,20",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "In how many districts is there a borough called tendring?",
    "SerialNumber": "4507",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/borough\u003e \u003chttp://dbpedia.org/resource/Tendring\u003e . ?x \u003chttp://dbpedia.org/ontology/district\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "tendring",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Tendring",
        "seq": "48,56"
      }
    ],
    "id": "4cf188cc17a649e581603a456bda0d40",
    "predicate mapping": [
      {
        "label": "borough",
        "uri": "http://dbpedia.org/property/borough",
        "seq": "33,40",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "district",
        "uri": "http://dbpedia.org/ontology/district",
        "seq": "12,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "103",
    "question": "How many awards have been given to the founder of Grameen Bank?",
    "SerialNumber": "4509",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { \u003chttp://dbpedia.org/resource/Grameen_Bank\u003e \u003chttp://dbpedia.org/property/founder\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/award\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Grameen Bank",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Grameen_Bank",
        "seq": "50,62"
      }
    ],
    "id": "5e0acf4fd80d47b995488704002ac947",
    "predicate mapping": [
      {
        "label": "founder of",
        "uri": "http://dbpedia.org/property/founder",
        "seq": "39,49",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/award",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who is the appointer of Earl B. Ruth ?",
    "SerialNumber": "4510",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Earl_B._Ruth\u003e \u003chttp://dbpedia.org/property/appointer\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Earl B. Ruth",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Earl_B._Ruth",
        "seq": "24,36"
      }
    ],
    "id": "dbfcf2136b7344f1830bc4405769bc6d",
    "predicate mapping": [
      {
        "label": "appointer",
        "uri": "http://dbpedia.org/property/appointer",
        "seq": "11,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which partner of the Tim Mathieson is also the primeminister of the Mike Kelly (Australian politician) ?",
    "SerialNumber": "4511",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Tim_Mathieson\u003e \u003chttp://dbpedia.org/ontology/partner\u003e ?uri. \u003chttp://dbpedia.org/resource/Mike_Kelly_(Australian_politician)\u003e \u003chttp://dbpedia.org/property/primeminister\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Tim Mathieson",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Tim_Mathieson",
        "seq": "21,34"
      },
      {
        "label": "Mike Kelly (Australian politician)",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Mike_Kelly_(Australian_politician)",
        "seq": "68,102"
      }
    ],
    "id": "ba7f3c05cc5448ac90a3996feb0bd9f9",
    "predicate mapping": [
      {
        "label": "partner",
        "uri": "http://dbpedia.org/ontology/partner",
        "seq": "6,13",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "primeminister",
        "uri": "http://dbpedia.org/property/primeminister",
        "seq": "47,60",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Which river does Katima Mulilo Bridge cross?",
    "SerialNumber": "4512",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Katima_Mulilo_Bridge\u003e \u003chttp://dbpedia.org/property/crosses\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Katima Mulilo Bridge",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Katima_Mulilo_Bridge",
        "seq": "17,37"
      }
    ],
    "id": "fb2bca9718884cd19844ef5476627883",
    "predicate mapping": [
      {
        "label": "cross",
        "uri": "http://dbpedia.org/property/crosses",
        "seq": "38,43",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "To which company is the service \"Nintendo eShop\" associated with?",
    "SerialNumber": "4514",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/services\u003e \u003chttp://dbpedia.org/resource/Nintendo_eShop\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Company\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Nintendo eShop",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Nintendo_eShop",
        "seq": "33,47"
      }
    ],
    "id": "06750153a35042ba9ea9d0bd000bbf4d",
    "predicate mapping": [
      {
        "label": "service",
        "uri": "http://dbpedia.org/property/services",
        "seq": "24,31",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company",
        "seq": "9,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the city of Phil-Ellena ?",
    "SerialNumber": "4515",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Phil-Ellena\u003e \u003chttp://dbpedia.org/ontology/city\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Phil-Ellena",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Phil-Ellena",
        "seq": "17,28"
      }
    ],
    "id": "6f2c1b486fea4099ad02147fd9c090c8",
    "predicate mapping": [
      {
        "label": "city",
        "uri": "http://dbpedia.org/ontology/city",
        "seq": "9,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "To which nation did David Animle Hanses owe his allegiance?",
    "SerialNumber": "4517",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/David_Animle_Hansen\u003e \u003chttp://dbpedia.org/property/allegiance\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "David Animle Hanses",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/David_Animle_Hansen",
        "seq": "20,39"
      }
    ],
    "id": "14230056a4a745b8b5ed6e10149011b0",
    "predicate mapping": [
      {
        "label": "allegiance",
        "uri": "http://dbpedia.org/property/allegiance",
        "seq": "48,58",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "102",
    "question": "Count the tenants of MasterCard Centre?",
    "SerialNumber": "4518",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { \u003chttp://dbpedia.org/resource/MasterCard_Centre\u003e \u003chttp://dbpedia.org/property/tenants\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "MasterCard Centre",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/MasterCard_Centre",
        "seq": "21,38"
      }
    ],
    "id": "7106676e37f04720ba839ed381b3f9f4",
    "predicate mapping": [
      {
        "label": "tenants",
        "uri": "http://dbpedia.org/property/tenants",
        "seq": "10,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "11",
    "question": "Name the key people of the non-profit organisations whose one of the key person is Lesley-Anne knight ?",
    "SerialNumber": "4519",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/keyPeople\u003e \u003chttp://dbpedia.org/resource/Lesley-Anne_Knight\u003e . ?x \u003chttp://dbpedia.org/property/keyPeople\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Lesley-Anne knight",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Lesley-Anne_Knight",
        "seq": "83,101"
      }
    ],
    "id": "76d138bb81fa4ba0bcdcaadcdd68dcc9",
    "predicate mapping": [
      {
        "label": "key people",
        "uri": "http://dbpedia.org/property/keyPeople",
        "seq": "9,19",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "key people",
        "uri": "http://dbpedia.org/property/keyPeople",
        "seq": "9,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "What show had NTSC format and theme music composed by  Ron Grainer?",
    "SerialNumber": "4520",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/format\u003e \u003chttp://dbpedia.org/resource/NTSC\u003e . ?uri \u003chttp://dbpedia.org/property/themeMusicComposer\u003e \u003chttp://dbpedia.org/resource/Ron_Grainer\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "NTSC",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/NTSC",
        "seq": "14,18"
      },
      {
        "label": "Ron Grainer",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ron_Grainer",
        "seq": "55,66"
      }
    ],
    "id": "3daabcc6a5b84e3084ede2d975008388",
    "predicate mapping": [
      {
        "label": "format",
        "uri": "http://dbpedia.org/ontology/format",
        "seq": "19,25",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "composed",
        "uri": "http://dbpedia.org/property/themeMusicComposer",
        "seq": "42,50",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "5,9",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Who was once married to both Kelly Brook and Rosie Huntington-Whiteley?",
    "SerialNumber": "4521",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Kelly_Brook\u003e \u003chttp://dbpedia.org/ontology/partner\u003e ?uri. \u003chttp://dbpedia.org/resource/Rosie_Huntington-Whiteley\u003e \u003chttp://dbpedia.org/ontology/partner\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Kelly Brook",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Kelly_Brook",
        "seq": "29,40"
      },
      {
        "label": "Rosie Huntington-Whiteley",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Rosie_Huntington-Whiteley",
        "seq": "45,70"
      }
    ],
    "id": "893cf1fe221445378778ea0be0e9a571",
    "predicate mapping": [
      {
        "label": "married to",
        "uri": "http://dbpedia.org/ontology/partner",
        "seq": "13,23",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "married to",
        "uri": "http://dbpedia.org/ontology/partner",
        "seq": "13,23",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which board memeber of jimmy Wales also owns Latvian Wikipedia ?",
    "SerialNumber": "4523",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Jimmy_Wales\u003e \u003chttp://dbpedia.org/ontology/board\u003e ?uri. \u003chttp://dbpedia.org/resource/Latvian_Wikipedia\u003e \u003chttp://dbpedia.org/ontology/owner\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "jimmy Wales",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Jimmy_Wales",
        "seq": "23,34"
      },
      {
        "label": "Latvian Wikipedia",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Latvian_Wikipedia",
        "seq": "45,62"
      }
    ],
    "id": "d557c2e7c26a46f798ceb5f1f0006f57",
    "predicate mapping": [
      {
        "label": "board",
        "uri": "http://dbpedia.org/ontology/board",
        "seq": "6,11",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "owns",
        "uri": "http://dbpedia.org/ontology/owner",
        "seq": "40,44",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "Name the ones who debuted in the San Francisco 49ers.",
    "SerialNumber": "4526",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/debutTeam\u003e \u003chttp://dbpedia.org/resource/San_Francisco_49ers\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "San Francisco 49ers",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/San_Francisco_49ers",
        "seq": "33,52"
      }
    ],
    "id": "c46d642e8b374c718591fa89a18d4498",
    "predicate mapping": [
      {
        "label": "debuted",
        "uri": "http://dbpedia.org/ontology/debutTeam",
        "seq": "18,25",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What is the county of the road whose route end is Pahang ?",
    "SerialNumber": "4528",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/routeEnd\u003e \u003chttp://dbpedia.org/resource/Pahang\u003e . ?x \u003chttp://dbpedia.org/ontology/county\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Road\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Pahang",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Pahang",
        "seq": "50,56"
      }
    ],
    "id": "691fc7827d724e6e993b3a3d505254d2",
    "predicate mapping": [
      {
        "label": "route end",
        "uri": "http://dbpedia.org/ontology/routeEnd",
        "seq": "37,46",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "county",
        "uri": "http://dbpedia.org/ontology/county",
        "seq": "12,18",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "road",
        "uri": "http://dbpedia.org/ontology/Road",
        "seq": "26,30",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "What is the river one of whose left tributary\u0027s native name is Arabic?",
    "SerialNumber": "4534",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/nativeName\u003e \u003chttp://dbpedia.org/resource/Arabic\u003e . ?uri \u003chttp://dbpedia.org/ontology/leftTributary\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Arabic",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Arabic",
        "seq": "63,69"
      }
    ],
    "id": "482e34b16844488ba0c95dae74b8a6b5",
    "predicate mapping": [
      {
        "label": "native name",
        "uri": "http://dbpedia.org/property/nativeName",
        "seq": "48,59",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "left tributary",
        "uri": "http://dbpedia.org/ontology/leftTributary",
        "seq": "31,45",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the office holder whose spouse is Dolley Madison and belongs to Militia branch ?",
    "SerialNumber": "4535",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/spouse\u003e \u003chttp://dbpedia.org/resource/Dolley_Madison\u003e . ?uri \u003chttp://dbpedia.org/property/branch\u003e \u003chttp://dbpedia.org/resource/Militia\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/OfficeHolder\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Dolley Madison",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Dolley_Madison",
        "seq": "39,53"
      },
      {
        "label": "Militia",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Militia",
        "seq": "69,76"
      }
    ],
    "id": "d604b6b4ecce418c9d201f852b152ea4",
    "predicate mapping": [
      {
        "label": "spouse",
        "uri": "http://dbpedia.org/property/spouse",
        "seq": "29,35",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "branch",
        "uri": "http://dbpedia.org/property/branch",
        "seq": "77,83",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "office holder",
        "uri": "http://dbpedia.org/ontology/OfficeHolder",
        "seq": "9,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "List sports managers who managed Middlesbrough F.C. and England national under-21 football team?",
    "SerialNumber": "4536",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/managerClub\u003e \u003chttp://dbpedia.org/resource/Middlesbrough_F.C.\u003e . ?uri \u003chttp://dbpedia.org/property/managerclubs\u003e \u003chttp://dbpedia.org/resource/England_national_under-21_football_team\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/SportsManager\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Middlesbrough F.C.",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Middlesbrough_F.C.",
        "seq": "33,51"
      },
      {
        "label": "England national under-21 football team",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/England_national_under-21_football_team",
        "seq": "56,95"
      }
    ],
    "id": "3132cf51e26240e8b86c33b5c052e34a",
    "predicate mapping": [
      {
        "label": "managers",
        "uri": "http://dbpedia.org/ontology/managerClub",
        "seq": "12,20",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "managers",
        "uri": "http://dbpedia.org/property/managerclubs",
        "seq": "12,20",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "sports manager",
        "uri": "http://dbpedia.org/ontology/SportsManager",
        "seq": "5,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What is the origin of the grape whose wine region is the Troodos Mountains ?",
    "SerialNumber": "4538",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/wineRegion\u003e \u003chttp://dbpedia.org/resource/Troodos_Mountains\u003e . ?x \u003chttp://dbpedia.org/ontology/origin\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Grape\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Troodos Mountains",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Troodos_Mountains",
        "seq": "57,74"
      }
    ],
    "id": "bf20ba7973af4b2d88c57f6a9d217c8b",
    "predicate mapping": [
      {
        "label": "wine region",
        "uri": "http://dbpedia.org/ontology/wineRegion",
        "seq": "38,49",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "origin",
        "uri": "http://dbpedia.org/ontology/origin",
        "seq": "12,18",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "grape",
        "uri": "http://dbpedia.org/ontology/Grape",
        "seq": "26,31",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Where is the headquarter of Regional Transit Authority of Southeast Michigan ?",
    "SerialNumber": "4539",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Regional_Transit_Authority_of_Southeast_Michigan\u003e \u003chttp://dbpedia.org/property/headquarters\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Regional Transit Authority of Southeast Michigan",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Regional_Transit_Authority_of_Southeast_Michigan",
        "seq": "28,76"
      }
    ],
    "id": "f0d17b5fa2ce4598ae52fa5bb9b644ab",
    "predicate mapping": [
      {
        "label": "headquarter",
        "uri": "http://dbpedia.org/property/headquarters",
        "seq": "13,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who is the appointer of Charles Goodell ?",
    "SerialNumber": "4540",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Charles_Goodell\u003e \u003chttp://dbpedia.org/ontology/appointer\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Charles Goodell",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Charles_Goodell",
        "seq": "24,39"
      }
    ],
    "id": "7cecf227f82e424e953870dbd55f9a58",
    "predicate mapping": [
      {
        "label": "appointer",
        "uri": "http://dbpedia.org/ontology/appointer",
        "seq": "11,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Name the common serving line of Daund Junction railway station and Ujjain Junction railway station?",
    "SerialNumber": "4542",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Daund_Junction_railway_station\u003e \u003chttp://dbpedia.org/ontology/servingRailwayLine\u003e ?uri. \u003chttp://dbpedia.org/resource/Ujjain_Junction_railway_station\u003e \u003chttp://dbpedia.org/ontology/servingRailwayLine\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Daund Junction railway station",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Daund_Junction_railway_station",
        "seq": "32,62"
      },
      {
        "label": "Ujjain Junction railway station",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ujjain_Junction_railway_station",
        "seq": "67,98"
      }
    ],
    "id": "ca1c1caf133340b8b5806acbabd956a1",
    "predicate mapping": [
      {
        "label": "serving railway",
        "uri": "http://dbpedia.org/ontology/servingRailwayLine",
        "seq": "-1,14",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "serving railway",
        "uri": "http://dbpedia.org/ontology/servingRailwayLine",
        "seq": "-1,14",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who owns the airport in Paphos?",
    "SerialNumber": "4544",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/city\u003e \u003chttp://dbpedia.org/resource/Paphos_District\u003e . ?x \u003chttp://dbpedia.org/property/owner\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Airport\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Paphos",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Paphos_District",
        "seq": "24,30"
      }
    ],
    "id": "eafba6d3f21b45828b0ba24f542a6182",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/city",
        "seq": "21,23",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "owns",
        "uri": "http://dbpedia.org/property/owner",
        "seq": "4,8",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "airport",
        "uri": "http://dbpedia.org/ontology/Airport",
        "seq": "13,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the common branch of military of Edward Joseph Schwartz  and John Tower ?",
    "SerialNumber": "4545",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Edward_Joseph_Schwartz\u003e \u003chttp://dbpedia.org/property/branch\u003e ?uri. \u003chttp://dbpedia.org/resource/John_Tower\u003e \u003chttp://dbpedia.org/ontology/militaryBranch\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Edward Joseph Schwartz",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Edward_Joseph_Schwartz",
        "seq": "41,63"
      },
      {
        "label": "John Tower",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/John_Tower",
        "seq": "69,79"
      }
    ],
    "id": "a9342361a49049748be5ff4a25048dd9",
    "predicate mapping": [
      {
        "label": "branch",
        "uri": "http://dbpedia.org/property/branch",
        "seq": "19,25",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "military branch",
        "uri": "http://dbpedia.org/ontology/militaryBranch",
        "seq": "-1,14",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which border country of the Korean Peninsula is also the country of Krusty, a musical group ?",
    "SerialNumber": "4547",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Korean_Peninsula\u003e \u003chttp://dbpedia.org/ontology/border\u003e ?uri. \u003chttp://dbpedia.org/resource/Krusty_(music_group)\u003e \u003chttp://dbpedia.org/ontology/country\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Korean Peninsula",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Korean_Peninsula",
        "seq": "28,44"
      },
      {
        "label": "Krusty",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Krusty_(music_group)",
        "seq": "68,74"
      }
    ],
    "id": "dd65031f3d5840d791f6a197a08b2fa5",
    "predicate mapping": [
      {
        "label": "border",
        "uri": "http://dbpedia.org/ontology/border",
        "seq": "6,12",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/country",
        "seq": "13,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "List the destinations of Novair International Airways ?",
    "SerialNumber": "4548",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Novair_International_Airways\u003e \u003chttp://dbpedia.org/property/destinations\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Novair International Airways",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Novair_International_Airways",
        "seq": "25,53"
      }
    ],
    "id": "6399efe5ee3f4af7853501362f0efde3",
    "predicate mapping": [
      {
        "label": "destinations",
        "uri": "http://dbpedia.org/property/destinations",
        "seq": "9,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "List the guests of On Broadway ?",
    "SerialNumber": "4549",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/On_Broadway_(Smash)\u003e \u003chttp://dbpedia.org/property/guests\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "On Broadway",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/On_Broadway_(Smash)",
        "seq": "19,30"
      }
    ],
    "id": "9fd4114ea96b48438d0091ba51b47a86",
    "predicate mapping": [
      {
        "label": "guests",
        "uri": "http://dbpedia.org/property/guests",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "What is the home town of the musical artist who is the current members of Slapstick?",
    "SerialNumber": "4551",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Slapstick_(band)\u003e \u003chttp://dbpedia.org/property/currentMembers\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/hometown\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MusicalArtist\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Slapstick",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Slapstick_(band)",
        "seq": "74,83"
      }
    ],
    "id": "0180e8e90b484b62bf0190b66b24c52b",
    "predicate mapping": [
      {
        "label": "current members",
        "uri": "http://dbpedia.org/property/currentMembers",
        "seq": "55,70",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "home town",
        "uri": "http://dbpedia.org/ontology/hometown",
        "seq": "12,21",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "musical artist",
        "uri": "http://dbpedia.org/ontology/MusicalArtist",
        "seq": "29,43",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Is Christchurch the largest city of South Island?",
    "SerialNumber": "4552",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/South_Island\u003e \u003chttp://dbpedia.org/ontology/largestCity\u003e \u003chttp://dbpedia.org/resource/Christchurch\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "South Island",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/South_Island",
        "seq": "36,48"
      },
      {
        "label": "Christchurch",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Christchurch",
        "seq": "3,15"
      }
    ],
    "id": "d219d8cfedec450192789f8d5c969ce9",
    "predicate mapping": [
      {
        "label": "largest city",
        "uri": "http://dbpedia.org/ontology/largestCity",
        "seq": "20,32",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "What are the products of the company who published Robot Wars: Metal Mayhem ?",
    "SerialNumber": "4555",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Robot_Wars:_Metal_Mayhem\u003e \u003chttp://dbpedia.org/ontology/publisher\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/product\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Company\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Robot Wars: Metal Mayhem",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Robot_Wars:_Metal_Mayhem",
        "seq": "51,75"
      }
    ],
    "id": "6eae72f3017e4cdb932b020311f66a93",
    "predicate mapping": [
      {
        "label": "published",
        "uri": "http://dbpedia.org/ontology/publisher",
        "seq": "41,50",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "product",
        "uri": "http://dbpedia.org/ontology/product",
        "seq": "13,20",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company",
        "seq": "29,36",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name books with publisher as Francisco de Robles and writer as Miguel de Cervantes ?",
    "SerialNumber": "4556",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/publisher\u003e \u003chttp://dbpedia.org/resource/Francisco_de_Robles\u003e . ?uri \u003chttp://dbpedia.org/property/author\u003e \u003chttp://dbpedia.org/resource/Miguel_de_Cervantes\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Book\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Francisco de Robles",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Francisco_de_Robles",
        "seq": "29,48"
      },
      {
        "label": "Miguel de Cervantes",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Miguel_de_Cervantes",
        "seq": "63,82"
      }
    ],
    "id": "f4f1a62862e44955aac1cdc42a0b530f",
    "predicate mapping": [
      {
        "label": "publisher",
        "uri": "http://dbpedia.org/ontology/publisher",
        "seq": "16,25",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "writer",
        "uri": "http://dbpedia.org/property/author",
        "seq": "53,59",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "book",
        "uri": "http://dbpedia.org/ontology/Book",
        "seq": "5,9",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the political party to which Purnima Banerjee is a member of??",
    "SerialNumber": "4557",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Purnima_Banerjee\u003e \u003chttp://dbpedia.org/ontology/party\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Purnima Banerjee",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Purnima_Banerjee",
        "seq": "37,53"
      }
    ],
    "id": "42a5180e4dc54977ac1383fad51c98c2",
    "predicate mapping": [
      {
        "label": "political party",
        "uri": "http://dbpedia.org/ontology/party",
        "seq": "12,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "405",
    "question": "In how many places are the tombs of everyone who died in England?",
    "SerialNumber": "4560",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/placeOfDeath\u003e \u003chttp://dbpedia.org/resource/England\u003e . ?x \u003chttp://dbpedia.org/property/placeOfBurial\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Place\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "England",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/England",
        "seq": "57,64"
      }
    ],
    "id": "d6166b09fb8c4c46ac27fcf5ae8dbb94",
    "predicate mapping": [
      {
        "label": "places",
        "uri": "http://dbpedia.org/property/placeOfDeath",
        "seq": "12,18",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "tomb",
        "uri": "http://dbpedia.org/property/placeOfBurial",
        "seq": "27,31",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "place",
        "uri": "http://dbpedia.org/ontology/Place",
        "seq": "12,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "In all the states which have a Uniontown, where does a Keller\u0027s mill covered bridge exist too?",
    "SerialNumber": "4561",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Uniontown,_Pennsylvania\u003e \u003chttp://dbpedia.org/ontology/state\u003e ?uri. \u003chttp://dbpedia.org/resource/Keller\u0027s_Mill_Covered_Bridge\u003e \u003chttp://dbpedia.org/ontology/state\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Uniontown",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Uniontown,_Pennsylvania",
        "seq": "31,40"
      },
      {
        "label": "Keller\u0027s mill covered bridge",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Keller\u0027s_Mill_Covered_Bridge",
        "seq": "55,83"
      }
    ],
    "id": "ab4b39c73ed14299a95b7291b10d4f6c",
    "predicate mapping": [
      {
        "label": "state",
        "uri": "http://dbpedia.org/ontology/state",
        "seq": "11,16",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "state",
        "uri": "http://dbpedia.org/ontology/state",
        "seq": "11,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "The sports team which played at the American Basketball League championship (1996-1998), have which stadiums?",
    "SerialNumber": "4563",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/league\u003e \u003chttp://dbpedia.org/resource/American_Basketball_League_(1996–98)\u003e . ?x \u003chttp://dbpedia.org/ontology/stadium\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/SportsTeam\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "American Basketball League",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/American_Basketball_League_(1996–98)",
        "seq": "36,62"
      }
    ],
    "id": "75af9778518645edb1bbb6a0c7ac1f36",
    "predicate mapping": [
      {
        "label": "League",
        "uri": "http://dbpedia.org/ontology/league",
        "seq": "56,62",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "stadium",
        "uri": "http://dbpedia.org/ontology/stadium",
        "seq": "100,107",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "sports team",
        "uri": "http://dbpedia.org/ontology/SportsTeam",
        "seq": "4,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the order of the Omar D. Conger where Robert Sarvis was also the nominee ?",
    "SerialNumber": "4564",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Omar_D._Conger\u003e \u003chttp://dbpedia.org/property/order\u003e ?uri. \u003chttp://dbpedia.org/resource/Robert_Sarvis\u003e \u003chttp://dbpedia.org/ontology/nominee\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Omar D. Conger",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Omar_D._Conger",
        "seq": "25,39"
      },
      {
        "label": "Robert Sarvis",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Robert_Sarvis",
        "seq": "46,59"
      }
    ],
    "id": "2b8f54ebc176446f84b5cd9a0bf7f09a",
    "predicate mapping": [
      {
        "label": "order",
        "uri": "http://dbpedia.org/property/order",
        "seq": "12,17",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "nominee",
        "uri": "http://dbpedia.org/ontology/nominee",
        "seq": "73,80",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who wrote the musical whose composer is Emil Dean Zoghby?",
    "SerialNumber": "4565",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/musicBy\u003e \u003chttp://dbpedia.org/resource/Emil_Dean_Zoghby\u003e . ?x \u003chttp://dbpedia.org/ontology/author\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Musical\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Emil Dean Zoghby",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Emil_Dean_Zoghby",
        "seq": "40,56"
      }
    ],
    "id": "cf088542743d4f7c9471fde58a58f329",
    "predicate mapping": [
      {
        "label": "composer",
        "uri": "http://dbpedia.org/ontology/musicBy",
        "seq": "28,36",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "composer",
        "uri": "http://dbpedia.org/ontology/author",
        "seq": "28,36",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "musical",
        "uri": "http://dbpedia.org/ontology/Musical",
        "seq": "14,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "what has been developed by John Fanning?",
    "SerialNumber": "4568",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/developer\u003e \u003chttp://dbpedia.org/resource/John_Fanning_(businessman)\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "John Fanning",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/John_Fanning_(businessman)",
        "seq": "27,39"
      }
    ],
    "id": "d018211e5cad471cb48e42286b59f8bc",
    "predicate mapping": [
      {
        "label": "developed by",
        "uri": "http://dbpedia.org/ontology/developer",
        "seq": "14,26",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Who was the chairman of Fort Lauderdale Strikers and also 2015 Fort Lauderdale Strikers season ?",
    "SerialNumber": "4569",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/2015_Fort_Lauderdale_Strikers_season\u003e \u003chttp://dbpedia.org/ontology/chairman\u003e ?uri. \u003chttp://dbpedia.org/resource/Fort_Lauderdale_Strikers\u003e \u003chttp://dbpedia.org/ontology/chairman\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "2015 Fort Lauderdale Strikers season",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/2015_Fort_Lauderdale_Strikers_season",
        "seq": "58,94"
      },
      {
        "label": "Fort Lauderdale Strikers",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Fort_Lauderdale_Strikers",
        "seq": "24,48"
      }
    ],
    "id": "595fdea8ad964062b2b5fb39504fb305",
    "predicate mapping": [
      {
        "label": "chairman",
        "uri": "http://dbpedia.org/ontology/chairman",
        "seq": "12,20",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "chairman",
        "uri": "http://dbpedia.org/ontology/chairman",
        "seq": "12,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "What are the houses of the legislature where the leader is called Pullaiahgaripalli ?",
    "SerialNumber": "4570",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Pullaiahgaripalli\u003e \u003chttp://dbpedia.org/property/leaderTitle\u003e ?x . ?x \u003chttp://dbpedia.org/property/houses\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Legislature\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Pullaiahgaripalli",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Pullaiahgaripalli",
        "seq": "66,83"
      }
    ],
    "id": "b3f0e60e97234014a7f3894713c38e83",
    "predicate mapping": [
      {
        "label": "leader",
        "uri": "http://dbpedia.org/property/leaderTitle",
        "seq": "49,55",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "houses",
        "uri": "http://dbpedia.org/property/houses",
        "seq": "13,19",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "legislature",
        "uri": "http://dbpedia.org/ontology/Legislature",
        "seq": "27,38",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "List some writers which speak one of the Germanic languages.",
    "SerialNumber": "4571",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/languageFamily\u003e \u003chttp://dbpedia.org/resource/Germanic_languages\u003e . ?uri \u003chttp://dbpedia.org/property/language\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Writer\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Germanic languages",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Germanic_languages",
        "seq": "41,59"
      }
    ],
    "id": "d0ee48eed66c4af68f17410f1026c1be",
    "predicate mapping": [
      {
        "label": "languages.",
        "uri": "http://dbpedia.org/ontology/languageFamily",
        "seq": "50,60",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "language",
        "uri": "http://dbpedia.org/property/language",
        "seq": "50,58",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "writers",
        "uri": "http://dbpedia.org/ontology/Writer",
        "seq": "10,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "Give me some series whose network\u0027s owning company is Warner Bros. Television?",
    "SerialNumber": "4577",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/owningCompany\u003e \u003chttp://dbpedia.org/resource/Warner_Bros._Television\u003e . ?uri \u003chttp://dbpedia.org/ontology/network\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Warner Bros. Television",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Warner_Bros._Television",
        "seq": "54,77"
      }
    ],
    "id": "534303fe37fc4bf7b3ab0221994e27c4",
    "predicate mapping": [
      {
        "label": "owning company",
        "uri": "http://dbpedia.org/ontology/owningCompany",
        "seq": "36,50",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "network",
        "uri": "http://dbpedia.org/ontology/network",
        "seq": "26,33",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "television",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "-1,9",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the province of Egypt Nanotechnology Center ?",
    "SerialNumber": "4578",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Egypt_Nanotechnology_Center\u003e \u003chttp://dbpedia.org/property/province\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Egypt Nanotechnology Center",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Egypt_Nanotechnology_Center",
        "seq": "24,51"
      }
    ],
    "id": "a1b2a89fbda54f5aa1f4d78972f6b0ce",
    "predicate mapping": [
      {
        "label": "province",
        "uri": "http://dbpedia.org/property/province",
        "seq": "12,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "What is manufactured by a company founded by Akio Morita?",
    "SerialNumber": "4579",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/founder\u003e \u003chttp://dbpedia.org/resource/Akio_Morita\u003e . ?uri \u003chttp://dbpedia.org/ontology/manufacturer\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Akio Morita",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Akio_Morita",
        "seq": "46,57"
      }
    ],
    "id": "4a0378488d7a4e55b54af1494dd0452d",
    "predicate mapping": [
      {
        "label": "founded by",
        "uri": "http://dbpedia.org/property/founder",
        "seq": "34,44",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "manufactured by",
        "uri": "http://dbpedia.org/ontology/manufacturer",
        "seq": "8,23",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Where did Rheinmetall MG 60 originated ?",
    "SerialNumber": "4581",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Rheinmetall_MG_60\u003e \u003chttp://dbpedia.org/ontology/origin\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Rheinmetall MG 60",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Rheinmetall_MG_60",
        "seq": "10,27"
      }
    ],
    "id": "22555965f19f4a6e92729f88efea818c",
    "predicate mapping": [
      {
        "label": "origin",
        "uri": "http://dbpedia.org/ontology/origin",
        "seq": "28,34",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Is The Orator in the National Archaeological Museum of Florence?",
    "SerialNumber": "4583",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/The_Orator\u003e \u003chttp://dbpedia.org/property/museum\u003e \u003chttp://dbpedia.org/resource/National_Archaeological_Museum_(Florence)\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "The Orator",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/The_Orator",
        "seq": "3,13"
      },
      {
        "label": "National Archaeological Museum",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/National_Archaeological_Museum_(Florence)",
        "seq": "21,51"
      }
    ],
    "id": "1ac2e9ce84374f78b8e3bcae3c1dcf03",
    "predicate mapping": [
      {
        "label": "Museum",
        "uri": "http://dbpedia.org/property/museum",
        "seq": "45,51",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "311",
    "question": "List all the notable work of the screen writer who produced Frasier ?",
    "SerialNumber": "4585",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/notableWork\u003e \u003chttp://dbpedia.org/resource/Frasier\u003e . ?x \u003chttp://dbpedia.org/ontology/notableWork\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/ScreenWriter\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Frasier",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Frasier",
        "seq": "60,67"
      }
    ],
    "id": "a5f1adc3aeab47b59f5a845831b2e343",
    "predicate mapping": [
      {
        "label": "notable work",
        "uri": "http://dbpedia.org/ontology/notableWork",
        "seq": "13,25",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "notable work",
        "uri": "http://dbpedia.org/ontology/notableWork",
        "seq": "13,25",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "writer screen",
        "uri": "http://dbpedia.org/ontology/ScreenWriter",
        "seq": "-1,12",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the river mouth of Moordener Kill ?",
    "SerialNumber": "4588",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Moordener_Kill\u003e \u003chttp://dbpedia.org/ontology/riverMouth\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Moordener Kill",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Moordener_Kill",
        "seq": "24,38"
      }
    ],
    "id": "c4229602891d40e0b35e90c5f8098d4b",
    "predicate mapping": [
      {
        "label": "river mouth",
        "uri": "http://dbpedia.org/ontology/riverMouth",
        "seq": "9,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "In which series has Sean Young portrayed someone?",
    "SerialNumber": "4590",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/portrayer\u003e \u003chttp://dbpedia.org/resource/Sean_Young\u003e . ?x \u003chttp://dbpedia.org/ontology/series\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Sean Young",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Sean_Young",
        "seq": "20,30"
      }
    ],
    "id": "e5230e04554e4a35be04d647faee20bd",
    "predicate mapping": [
      {
        "label": "portrayed",
        "uri": "http://dbpedia.org/ontology/portrayer",
        "seq": "31,40",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "series",
        "uri": "http://dbpedia.org/ontology/series",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What type of engines are utilised by Purvis Eureka?",
    "SerialNumber": "4592",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Purvis_Eureka\u003e \u003chttp://dbpedia.org/property/engine\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Purvis Eureka",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Purvis_Eureka",
        "seq": "37,50"
      }
    ],
    "id": "75fa0d818e204f15beda5bf1e16d1d58",
    "predicate mapping": [
      {
        "label": "engine",
        "uri": "http://dbpedia.org/property/engine",
        "seq": "13,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Is Egyptian Arabic belong to the Central Semitic Languages family?",
    "SerialNumber": "4593",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Egyptian_Arabic\u003e \u003chttp://dbpedia.org/ontology/languageFamily\u003e \u003chttp://dbpedia.org/resource/Central_Semitic_languages\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Egyptian Arabic",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Egyptian_Arabic",
        "seq": "3,18"
      },
      {
        "label": "Central Semitic Languages",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Central_Semitic_languages",
        "seq": "33,58"
      }
    ],
    "id": "039cf22b96294857b744cfb1fa32e334",
    "predicate mapping": [
      {
        "label": "family",
        "uri": "http://dbpedia.org/ontology/languageFamily",
        "seq": "59,65",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the fictional character whose relatives are Huey, Dewey, and Louie and belongs to Duck family ?",
    "SerialNumber": "4595",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/relatives\u003e \u003chttp://dbpedia.org/resource/Huey,_Dewey,_and_Louie\u003e . ?uri \u003chttp://dbpedia.org/ontology/relative\u003e \u003chttp://dbpedia.org/resource/Duck_family_(Disney)\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/FictionalCharacter\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Huey, Dewey, and Louie",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Huey,_Dewey,_and_Louie",
        "seq": "49,71"
      },
      {
        "label": "Duck family",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Duck_family_(Disney)",
        "seq": "87,98"
      }
    ],
    "id": "65cb514fcc3148d6ba887e1d9e2d494f",
    "predicate mapping": [
      {
        "label": "relatives",
        "uri": "http://dbpedia.org/property/relatives",
        "seq": "35,44",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "relative",
        "uri": "http://dbpedia.org/ontology/relative",
        "seq": "35,43",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "fictional character",
        "uri": "http://dbpedia.org/ontology/FictionalCharacter",
        "seq": "9,28",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "111",
    "question": "What is the total number of other characters of the plays whose characters is Robin (comics)?",
    "SerialNumber": "4596",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/characters\u003e \u003chttp://dbpedia.org/resource/Robin_(comics)\u003e . ?x \u003chttp://dbpedia.org/property/characters\u003e ?uri }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Robin (comics)",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Robin_(comics)",
        "seq": "78,92"
      }
    ],
    "id": "76e88d03b8924d729700e000cb86e234",
    "predicate mapping": [
      {
        "label": "characters",
        "uri": "http://dbpedia.org/property/characters",
        "seq": "34,44",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "characters",
        "uri": "http://dbpedia.org/property/characters",
        "seq": "34,44",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Where did isabelle caro and judson huss both die?",
    "SerialNumber": "4600",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Judson_Huss\u003e \u003chttp://dbpedia.org/property/deathPlace\u003e ?uri. \u003chttp://dbpedia.org/resource/Isabelle_Caro\u003e \u003chttp://dbpedia.org/property/deathPlace\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "judson huss",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Judson_Huss",
        "seq": "28,39"
      },
      {
        "label": "isabelle caro",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Isabelle_Caro",
        "seq": "10,23"
      }
    ],
    "id": "f86382f06edd4519acfc00e730f5471e",
    "predicate mapping": [
      {
        "label": "die",
        "uri": "http://dbpedia.org/property/deathPlace",
        "seq": "45,48",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "die",
        "uri": "http://dbpedia.org/property/deathPlace",
        "seq": "45,48",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the television show whose subsequent work is Crusade and Composer is Stewart Copeland?",
    "SerialNumber": "4601",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/subsequentWork\u003e \u003chttp://dbpedia.org/resource/Crusade_(TV_series)\u003e . ?uri \u003chttp://dbpedia.org/property/composer\u003e \u003chttp://dbpedia.org/resource/Stewart_Copeland\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Crusade",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Crusade_(TV_series)",
        "seq": "50,57"
      },
      {
        "label": "Stewart Copeland",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Stewart_Copeland",
        "seq": "74,90"
      }
    ],
    "id": "38373a19e5964230aaa2329c041ad1e3",
    "predicate mapping": [
      {
        "label": "subsequent work",
        "uri": "http://dbpedia.org/ontology/subsequentWork",
        "seq": "31,46",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "Composer",
        "uri": "http://dbpedia.org/property/composer",
        "seq": "62,70",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "9,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "401",
    "question": "Count the number of artists who trained at the San Francisco Art Institute?",
    "SerialNumber": "4603",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/property/training\u003e \u003chttp://dbpedia.org/resource/San_Francisco_Art_Institute\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Artist\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "San Francisco Art Institute",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/San_Francisco_Art_Institute",
        "seq": "47,74"
      }
    ],
    "id": "1063c970689c469e81a711a634edf521",
    "predicate mapping": [
      {
        "label": "trained",
        "uri": "http://dbpedia.org/property/training",
        "seq": "32,39",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "artist",
        "uri": "http://dbpedia.org/ontology/Artist",
        "seq": "20,26",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What are the movies whose director is Orson Welles?",
    "SerialNumber": "4604",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/director\u003e \u003chttp://dbpedia.org/resource/Orson_Welles\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Orson Welles",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Orson_Welles",
        "seq": "38,50"
      }
    ],
    "id": "83f39c859fbc4eeaa715eb2c8e319759",
    "predicate mapping": [
      {
        "label": "director",
        "uri": "http://dbpedia.org/property/director",
        "seq": "26,34",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "13,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which scientist is known for anthrax and has Karl Ewald Hasse as his academic advisor ?",
    "SerialNumber": "4605",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/knownFor\u003e \u003chttp://dbpedia.org/resource/Anthrax\u003e . ?uri \u003chttp://dbpedia.org/ontology/academicAdvisor\u003e \u003chttp://dbpedia.org/resource/Karl_Ewald_Hasse\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Scientist\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "anthrax",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Anthrax",
        "seq": "29,36"
      },
      {
        "label": "Karl Ewald Hasse",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Karl_Ewald_Hasse",
        "seq": "45,61"
      }
    ],
    "id": "559339119ad341b2b9cfb630cc1bd6a0",
    "predicate mapping": [
      {
        "label": "known for",
        "uri": "http://dbpedia.org/ontology/knownFor",
        "seq": "19,28",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "academic advisor",
        "uri": "http://dbpedia.org/ontology/academicAdvisor",
        "seq": "69,85",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "scientist",
        "uri": "http://dbpedia.org/ontology/Scientist",
        "seq": "6,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "401",
    "question": "How many mountain are there in Sierra Nevada range?",
    "SerialNumber": "4606",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/ontology/mountainRange\u003e \u003chttp://dbpedia.org/resource/Sierra_Nevada_(U.S.)\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Mountain\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Sierra Nevada",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Sierra_Nevada_(U.S.)",
        "seq": "31,44"
      }
    ],
    "id": "06288af112614c6cb006b87cc6b4d88b",
    "predicate mapping": [
      {
        "label": "mountain range",
        "uri": "http://dbpedia.org/ontology/mountainRange",
        "seq": "-1,13",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "mountain",
        "uri": "http://dbpedia.org/ontology/Mountain",
        "seq": "9,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "405",
    "question": "To how many different species does the members of the Animal Kingdom belong?",
    "SerialNumber": "4607",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/kingdom\u003e \u003chttp://dbpedia.org/resource/Animal\u003e . ?x \u003chttp://dbpedia.org/ontology/species\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Species\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Animal Kingdom",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Animal",
        "seq": "54,68"
      }
    ],
    "id": "5c70e8faf9b847f3ac27fe491ccd6a65",
    "predicate mapping": [
      {
        "label": "Kingdom",
        "uri": "http://dbpedia.org/ontology/kingdom",
        "seq": "61,68",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "species",
        "uri": "http://dbpedia.org/ontology/species",
        "seq": "22,29",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "species",
        "uri": "http://dbpedia.org/ontology/Species",
        "seq": "22,29",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What are some mammals whose phylum is Chordate?",
    "SerialNumber": "4609",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/phylum\u003e \u003chttp://dbpedia.org/resource/Chordate\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Mammal\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Chordate",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Chordate",
        "seq": "38,46"
      }
    ],
    "id": "62f0ecc271674594a21cccef030cd45e",
    "predicate mapping": [
      {
        "label": "phylum",
        "uri": "http://dbpedia.org/property/phylum",
        "seq": "28,34",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "mammal",
        "uri": "http://dbpedia.org/ontology/Mammal",
        "seq": "14,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "7",
    "question": "What is manufactured by Asus and Sony togather?",
    "SerialNumber": "4610",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/ontology/manufacturer\u003e \u003chttp://dbpedia.org/resource/Asus\u003e . ?uri \u003chttp://dbpedia.org/ontology/manufacturer\u003e \u003chttp://dbpedia.org/resource/Sony\u003e . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Asus",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Asus",
        "seq": "24,28"
      },
      {
        "label": "Sony",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Sony",
        "seq": "33,37"
      }
    ],
    "id": "2a9c6af7ea724bd49c834dd371c155c8",
    "predicate mapping": [
      {
        "label": "manufactured by",
        "uri": "http://dbpedia.org/ontology/manufacturer",
        "seq": "8,23",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "manufactured by",
        "uri": "http://dbpedia.org/ontology/manufacturer",
        "seq": "8,23",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who is the Artist of the singles whose film genre is Country music ?",
    "SerialNumber": "4611",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/genre\u003e \u003chttp://dbpedia.org/resource/Country_music\u003e . ?x \u003chttp://dbpedia.org/property/artist\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Single\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Country music",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Country_music",
        "seq": "53,66"
      }
    ],
    "id": "397233307bda42d486c73b3f774b5d9d",
    "predicate mapping": [
      {
        "label": "film genre",
        "uri": "http://dbpedia.org/property/genre",
        "seq": "39,49",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "Artist",
        "uri": "http://dbpedia.org/property/artist",
        "seq": "11,17",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "single",
        "uri": "http://dbpedia.org/ontology/Single",
        "seq": "25,31",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "Who did Daniel Gibson marry?",
    "SerialNumber": "4613",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/spouse\u003e \u003chttp://dbpedia.org/resource/Daniel_Gibson\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Daniel Gibson",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Daniel_Gibson",
        "seq": "8,21"
      }
    ],
    "id": "4b249c6c2fef48e889eb99914a430034",
    "predicate mapping": [
      {
        "label": "marry",
        "uri": "http://dbpedia.org/ontology/spouse",
        "seq": "22,27",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "8",
    "question": "Who studied at  Harvard-Westlake School and has Henry E. Catto, Jr. as   predecessor ?",
    "SerialNumber": "4615",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/almaMater\u003e \u003chttp://dbpedia.org/resource/Harvard-Westlake_School\u003e . ?uri \u003chttp://dbpedia.org/ontology/predecessor\u003e \u003chttp://dbpedia.org/resource/Henry_E._Catto,_Jr.\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Harvard-Westlake School",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Harvard-Westlake_School",
        "seq": "16,39"
      },
      {
        "label": "Henry E. Catto, Jr.",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Henry_E._Catto,_Jr.",
        "seq": "48,67"
      }
    ],
    "id": "7197caeaf6804e9a9f9cb80097235c1b",
    "predicate mapping": [
      {
        "label": "studied at",
        "uri": "http://dbpedia.org/ontology/almaMater",
        "seq": "4,14",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "predecessor",
        "uri": "http://dbpedia.org/ontology/predecessor",
        "seq": "73,84",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Is Tamera Mowry the former band member of Voices?",
    "SerialNumber": "4618",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Voices_(group)\u003e \u003chttp://dbpedia.org/ontology/formerBandMember\u003e \u003chttp://dbpedia.org/resource/Tamera_Mowry\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Voices",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Voices_(group)",
        "seq": "42,48"
      },
      {
        "label": "Tamera Mowry",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Tamera_Mowry",
        "seq": "3,15"
      }
    ],
    "id": "3a1e1c8fbb3b4c09ba53450a4fd77cd7",
    "predicate mapping": [
      {
        "label": "former band member",
        "uri": "http://dbpedia.org/ontology/formerBandMember",
        "seq": "20,38",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "401",
    "question": "How many movies are distributed by Cinema International Corporation?",
    "SerialNumber": "4619",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/ontology/distributor\u003e \u003chttp://dbpedia.org/resource/Cinema_International_Corporation\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Cinema International Corporation",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Cinema_International_Corporation",
        "seq": "35,67"
      }
    ],
    "id": "6aa814339d6747cd82a103df2b4c228f",
    "predicate mapping": [
      {
        "label": "distributed by",
        "uri": "http://dbpedia.org/ontology/distributor",
        "seq": "20,34",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "List the birth city of the politicians of Democratic Party.",
    "SerialNumber": "4621",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/party\u003e \u003chttp://dbpedia.org/resource/Democratic_Party_(United_States)\u003e . ?x \u003chttp://dbpedia.org/ontology/birthPlace\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Politician\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Democratic Party",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Democratic_Party_(United_States)",
        "seq": "42,58"
      }
    ],
    "id": "3ddc996f258946418b9ae66b9d03e234",
    "predicate mapping": [
      {
        "label": "Party",
        "uri": "http://dbpedia.org/ontology/party",
        "seq": "53,58",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "birth city",
        "uri": "http://dbpedia.org/ontology/birthPlace",
        "seq": "9,19",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "politician",
        "uri": "http://dbpedia.org/ontology/Politician",
        "seq": "27,37",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which American football player is a former team player of Indianapolis Colts and current team is Michigan Wolverines?",
    "SerialNumber": "4622",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/formerTeam\u003e \u003chttp://dbpedia.org/resource/Indianapolis_Colts\u003e . ?uri \u003chttp://dbpedia.org/property/currentteam\u003e \u003chttp://dbpedia.org/resource/Michigan_Wolverines\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/AmericanFootballPlayer\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Indianapolis Colts",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Indianapolis_Colts",
        "seq": "58,76"
      },
      {
        "label": "Michigan Wolverines",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Michigan_Wolverines",
        "seq": "97,116"
      }
    ],
    "id": "43549d9a19ca408daf0fb2899e106312",
    "predicate mapping": [
      {
        "label": "former team",
        "uri": "http://dbpedia.org/ontology/formerTeam",
        "seq": "36,47",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "current team",
        "uri": "http://dbpedia.org/property/currentteam",
        "seq": "81,93",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "American football player",
        "uri": "http://dbpedia.org/ontology/AmericanFootballPlayer",
        "seq": "6,30",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which river\u0027s source country is Zambia and mouth country is Mozambique?",
    "SerialNumber": "4623",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/sourceCountry\u003e \u003chttp://dbpedia.org/resource/Zambia\u003e . ?uri \u003chttp://dbpedia.org/property/mouthCountry\u003e \u003chttp://dbpedia.org/resource/Mozambique\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/River\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Zambia",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Zambia",
        "seq": "32,38"
      },
      {
        "label": "Mozambique",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Mozambique",
        "seq": "60,70"
      }
    ],
    "id": "c82aa7a94ec5431eb6ef397da4551908",
    "predicate mapping": [
      {
        "label": "source country",
        "uri": "http://dbpedia.org/ontology/sourceCountry",
        "seq": "14,28",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "mouth country",
        "uri": "http://dbpedia.org/property/mouthCountry",
        "seq": "43,56",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River",
        "seq": "6,11",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Which person works at the American Magazine?",
    "SerialNumber": "4624",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/employer\u003e \u003chttp://dbpedia.org/resource/The_American_Magazine\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "the American Magazine",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_American_Magazine",
        "seq": "22,43"
      }
    ],
    "id": "b7492b365add45569dcbee5b3db8650d",
    "predicate mapping": [
      {
        "label": "works at",
        "uri": "http://dbpedia.org/ontology/employer",
        "seq": "13,21",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/Person",
        "seq": "6,12",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the regions served by Toll Global Express ?",
    "SerialNumber": "4625",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Toll_Global_Express\u003e \u003chttp://dbpedia.org/ontology/regionServed\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Toll Global Express",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Toll_Global_Express",
        "seq": "27,46"
      }
    ],
    "id": "0aef05bbe0154edd9c0c705a89a3c182",
    "predicate mapping": [
      {
        "label": "regions served",
        "uri": "http://dbpedia.org/ontology/regionServed",
        "seq": "9,23",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "How many mountain ranges are located in the Canton of Fribourg?",
    "SerialNumber": "4627",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/locatedInArea\u003e \u003chttp://dbpedia.org/resource/Canton_of_Fribourg\u003e . ?x \u003chttp://dbpedia.org/ontology/mountainRange\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Canton of Fribourg",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Canton_of_Fribourg",
        "seq": "44,62"
      }
    ],
    "id": "5547e2421f8e4105b3248f3b3a2c7fbf",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/locatedInArea",
        "seq": "15,17",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "mountain range",
        "uri": "http://dbpedia.org/ontology/mountainRange",
        "seq": "9,23",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Is PIAS Recordings the distributing label of Wichita Recordings?",
    "SerialNumber": "4631",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Wichita_Recordings\u003e \u003chttp://dbpedia.org/ontology/distributingLabel\u003e \u003chttp://dbpedia.org/resource/PIAS_Recordings\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Wichita Recordings",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Wichita_Recordings",
        "seq": "45,63"
      },
      {
        "label": "PIAS Recordings",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/PIAS_Recordings",
        "seq": "3,18"
      }
    ],
    "id": "47dcd274e3704296945ea9b12dd1ee6c",
    "predicate mapping": [
      {
        "label": "distributing label",
        "uri": "http://dbpedia.org/ontology/distributingLabel",
        "seq": "23,41",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "406",
    "question": "Count all american football players whose former team owns Lucas Oil Stadium ?",
    "SerialNumber": "4633",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/city\u003e \u003chttp://dbpedia.org/resource/Lucas_Oil_Stadium\u003e . ?uri \u003chttp://dbpedia.org/ontology/formerTeam\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/AmericanFootballPlayer\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Lucas Oil Stadium",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Lucas_Oil_Stadium",
        "seq": "59,76"
      }
    ],
    "id": "7246b56a6a294f789c8060bdd018db4b",
    "predicate mapping": [
      {
        "label": "count",
        "uri": "http://dbpedia.org/property/city",
        "seq": "-1,4",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "former team",
        "uri": "http://dbpedia.org/ontology/formerTeam",
        "seq": "42,53",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "american football player",
        "uri": "http://dbpedia.org/ontology/AmericanFootballPlayer",
        "seq": "10,34",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "405",
    "question": "How many cities are around the sea which flows into the Atlantic?",
    "SerialNumber": "4634",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/inflow\u003e \u003chttp://dbpedia.org/resource/Atlantic_Ocean\u003e . ?x \u003chttp://dbpedia.org/property/cities\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/City\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Atlantic",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Atlantic_Ocean",
        "seq": "56,64"
      }
    ],
    "id": "83c320a2818b4a279f69b7838f2668f8",
    "predicate mapping": [
      {
        "label": "flows",
        "uri": "http://dbpedia.org/ontology/inflow",
        "seq": "41,46",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "cities",
        "uri": "http://dbpedia.org/property/cities",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/City",
        "seq": "47,49",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "What is the occupation of the Irving Chernev and Karen Grigorian?",
    "SerialNumber": "4636",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Irving_Chernev\u003e \u003chttp://dbpedia.org/ontology/occupation\u003e ?uri. \u003chttp://dbpedia.org/resource/Karen_Grigorian\u003e \u003chttp://dbpedia.org/ontology/occupation\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Irving Chernev",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Irving_Chernev",
        "seq": "30,44"
      },
      {
        "label": "Karen Grigorian",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Karen_Grigorian",
        "seq": "49,64"
      }
    ],
    "id": "d26cda70df824bb19cc10cc4271643c3",
    "predicate mapping": [
      {
        "label": "occupation",
        "uri": "http://dbpedia.org/ontology/occupation",
        "seq": "12,22",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "occupation",
        "uri": "http://dbpedia.org/ontology/occupation",
        "seq": "12,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "102",
    "question": "How many cities are close to Lake Victoria?",
    "SerialNumber": "4637",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { \u003chttp://dbpedia.org/resource/Lake_Victoria\u003e \u003chttp://dbpedia.org/ontology/nearestCity\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Lake Victoria",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Lake_Victoria",
        "seq": "29,42"
      }
    ],
    "id": "209c460e684848fe9572d27a98ecbfea",
    "predicate mapping": [
      {
        "label": "are",
        "uri": "http://dbpedia.org/ontology/nearestCity",
        "seq": "16,19",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the ssignificant buildings of Ivan Fomin ?",
    "SerialNumber": "4638",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Ivan_Fomin\u003e \u003chttp://dbpedia.org/ontology/significantBuilding\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ivan Fomin",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Ivan_Fomin",
        "seq": "35,45"
      }
    ],
    "id": "4c026c13b12440d5b522a35a7614900a",
    "predicate mapping": [
      {
        "label": "significant building",
        "uri": "http://dbpedia.org/ontology/significantBuilding",
        "seq": "10,30",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Did Tupac write the lyrics of Holler If Ya Hear Me?",
    "SerialNumber": "4639",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Holler_If_Ya_Hear_Me_(musical)\u003e \u003chttp://dbpedia.org/property/lyrics\u003e \u003chttp://dbpedia.org/resource/Tupac_Shakur\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Holler If Ya Hear Me",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Holler_If_Ya_Hear_Me_(musical)",
        "seq": "30,50"
      },
      {
        "label": "Tupac",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Tupac_Shakur",
        "seq": "4,9"
      }
    ],
    "id": "98cf6110489945a29a7358a6ce88c7b3",
    "predicate mapping": [
      {
        "label": "lyrics",
        "uri": "http://dbpedia.org/property/lyrics",
        "seq": "20,26",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Which largest city of Salsette Island is also the largest city of India ?",
    "SerialNumber": "4641",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/India\u003e \u003chttp://dbpedia.org/ontology/largestCity\u003e ?uri. \u003chttp://dbpedia.org/resource/Salsette_Island\u003e \u003chttp://dbpedia.org/ontology/largestCity\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "India",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/India",
        "seq": "66,71"
      },
      {
        "label": "Salsette Island",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Salsette_Island",
        "seq": "22,37"
      }
    ],
    "id": "dbff72738b8a4eecaeeb1c92dd24ce41",
    "predicate mapping": [
      {
        "label": "largest city",
        "uri": "http://dbpedia.org/ontology/largestCity",
        "seq": "6,18",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "largest city",
        "uri": "http://dbpedia.org/ontology/largestCity",
        "seq": "6,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the name of the homeground of football team Panionios G.S.S.?",
    "SerialNumber": "4643",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/2013–14_Panionios_G.S.S._season\u003e \u003chttp://dbpedia.org/ontology/ground\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Panionios G.S.S.",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/2013–14_Panionios_G.S.S._season",
        "seq": "52,68"
      }
    ],
    "id": "e2c1089bbf4440f798c4e4415ab5b6c1",
    "predicate mapping": [
      {
        "label": "ground",
        "uri": "http://dbpedia.org/ontology/ground",
        "seq": "28,34",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "402",
    "question": "How many teams was Garry Unger in, previously?",
    "SerialNumber": "4645",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { \u003chttp://dbpedia.org/resource/Garry_Unger\u003e \u003chttp://dbpedia.org/ontology/formerTeam\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/SportsTeam\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Garry Unger",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Garry_Unger",
        "seq": "19,30"
      }
    ],
    "id": "0fb28604c99742c0aa2963169472cd4f",
    "predicate mapping": [
      {
        "label": "teams",
        "uri": "http://dbpedia.org/ontology/formerTeam",
        "seq": "9,14",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/SportsTeam",
        "seq": "9,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Is Mona Lisa in the Louvre museum?",
    "SerialNumber": "4648",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Mona_Lisa\u003e \u003chttp://dbpedia.org/property/museum\u003e \u003chttp://dbpedia.org/resource/Louvre\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Mona Lisa",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Mona_Lisa",
        "seq": "3,12"
      },
      {
        "label": "Louvre",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Louvre",
        "seq": "20,26"
      }
    ],
    "id": "24df8c770302477ea971c6535bda9937",
    "predicate mapping": [
      {
        "label": "museum",
        "uri": "http://dbpedia.org/property/museum",
        "seq": "27,33",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "311",
    "question": "List the judge of the TV show whose one of the judge is Ludacris ?",
    "SerialNumber": "4650",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/judges\u003e \u003chttp://dbpedia.org/resource/Ludacris\u003e . ?x \u003chttp://dbpedia.org/property/judges\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ludacris",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ludacris",
        "seq": "56,64"
      }
    ],
    "id": "84ede2491cf7408fbbb66c5db851f30a",
    "predicate mapping": [
      {
        "label": "judge",
        "uri": "http://dbpedia.org/property/judges",
        "seq": "9,14",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "judge",
        "uri": "http://dbpedia.org/property/judges",
        "seq": "9,14",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "25,29",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "List the primary  subjects of A Christian Turn\u0027d Turk?",
    "SerialNumber": "4652",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/A_Christian_Turn\u0027d_Turk\u003e \u003chttp://dbpedia.org/property/subject\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "A Christian Turn\u0027d Turk",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/A_Christian_Turn\u0027d_Turk",
        "seq": "30,53"
      }
    ],
    "id": "edcf0c29b7884073984ea20413f0eb1c",
    "predicate mapping": [
      {
        "label": "subject",
        "uri": "http://dbpedia.org/property/subject",
        "seq": "18,25",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Which awards did the writer of Persona win ?",
    "SerialNumber": "4653",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Persona_(1966_film)\u003e \u003chttp://dbpedia.org/ontology/writer\u003e ?x . ?x \u003chttp://dbpedia.org/property/awards\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Persona",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Persona_(1966_film)",
        "seq": "31,38"
      }
    ],
    "id": "a0f6a9ff04114339bf934c012ed2f0b2",
    "predicate mapping": [
      {
        "label": "writer",
        "uri": "http://dbpedia.org/ontology/writer",
        "seq": "21,27",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards",
        "seq": "6,12",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "401",
    "question": "Give me a count of movies whose editor is Mark Stevens?",
    "SerialNumber": "4654",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/property/editing\u003e \u003chttp://dbpedia.org/resource/Mark_Stevens_(film_editor)\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Mark Stevens",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Mark_Stevens_(film_editor)",
        "seq": "42,54"
      }
    ],
    "id": "eee1bb47d0ac48a0a79142e2a0ae6f48",
    "predicate mapping": [
      {
        "label": "editor",
        "uri": "http://dbpedia.org/property/editing",
        "seq": "32,38",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "19,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "List the area of radio stations whose sister station is WBCQ-FM?",
    "SerialNumber": "4657",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/WBCQ-FM\u003e \u003chttp://dbpedia.org/property/sisterStations\u003e ?x . ?x \u003chttp://dbpedia.org/property/area\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "WBCQ-FM",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/WBCQ-FM",
        "seq": "56,63"
      }
    ],
    "id": "e83f61a2a503458487940f058dbc056a",
    "predicate mapping": [
      {
        "label": "stations",
        "uri": "http://dbpedia.org/property/sisterStations",
        "seq": "23,31",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "area",
        "uri": "http://dbpedia.org/property/area",
        "seq": "9,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Is Latin the official language of Sovereign Military Order of Malta?",
    "SerialNumber": "4659",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Sovereign_Military_Order_of_Malta\u003e \u003chttp://dbpedia.org/ontology/officialLanguage\u003e \u003chttp://dbpedia.org/resource/Latin\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Sovereign Military Order of Malta",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Sovereign_Military_Order_of_Malta",
        "seq": "34,67"
      },
      {
        "label": "Latin",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Latin",
        "seq": "3,8"
      }
    ],
    "id": "561e313df8b44f6f86beb08ed0ff7314",
    "predicate mapping": [
      {
        "label": "official language",
        "uri": "http://dbpedia.org/ontology/officialLanguage",
        "seq": "13,30",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "List the  outflow of Lake Uniamsi?",
    "SerialNumber": "4660",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Lake_Uniamési\u003e \u003chttp://dbpedia.org/ontology/outflow\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Lake Uniamsi",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Lake_Uniamési",
        "seq": "21,33"
      }
    ],
    "id": "307417ba7c684e2887f17e9a33b81e3e",
    "predicate mapping": [
      {
        "label": "outflow",
        "uri": "http://dbpedia.org/ontology/outflow",
        "seq": "10,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "List the major shrines of Jovan Vladimir?",
    "SerialNumber": "4665",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Jovan_Vladimir\u003e \u003chttp://dbpedia.org/property/majorShrine\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Jovan Vladimir",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Jovan_Vladimir",
        "seq": "26,40"
      }
    ],
    "id": "de4a17ef8b2f4b39b40ef30f83c56a81",
    "predicate mapping": [
      {
        "label": "major shrine",
        "uri": "http://dbpedia.org/property/majorShrine",
        "seq": "9,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "Which shows are from a company whose subsidiary is Viacom Productions?",
    "SerialNumber": "4666",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/subsidiary\u003e \u003chttp://dbpedia.org/resource/Viacom_Productions\u003e . ?uri \u003chttp://dbpedia.org/property/company\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Viacom Productions",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Viacom_Productions",
        "seq": "51,69"
      }
    ],
    "id": "0396475ffe70439b901b07d6784e000b",
    "predicate mapping": [
      {
        "label": "subsidiary",
        "uri": "http://dbpedia.org/ontology/subsidiary",
        "seq": "37,47",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/property/company",
        "seq": "23,30",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "6,11",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What are on the borders of Shimsa Plateau?",
    "SerialNumber": "4668",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Shimōsa_Plateau\u003e \u003chttp://dbpedia.org/ontology/border\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Shimsa Plateau",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Shimōsa_Plateau",
        "seq": "27,41"
      }
    ],
    "id": "15c9ac66e1244177b01e0b4386cf5efb",
    "predicate mapping": [
      {
        "label": "border",
        "uri": "http://dbpedia.org/ontology/border",
        "seq": "16,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who edited  British Gazette ?",
    "SerialNumber": "4669",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/British_Gazette\u003e \u003chttp://dbpedia.org/property/editor\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "British Gazette",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/British_Gazette",
        "seq": "12,27"
      }
    ],
    "id": "2e7e281583534d89b40fa6de036f5439",
    "predicate mapping": [
      {
        "label": "edited",
        "uri": "http://dbpedia.org/property/editor",
        "seq": "4,10",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "Which spanish novel was published by Francisco de Robles?",
    "SerialNumber": "4670",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/publisher\u003e \u003chttp://dbpedia.org/resource/Francisco_de_Robles\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Francisco de Robles",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Francisco_de_Robles",
        "seq": "37,56"
      }
    ],
    "id": "baa53040546c4b7485dd8c3b4ecd311e",
    "predicate mapping": [
      {
        "label": "published",
        "uri": "http://dbpedia.org/property/publisher",
        "seq": "24,33",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "111",
    "question": "Count the total number  of hometown of the gymnasts whose one of the hometown in Russia ?",
    "SerialNumber": "4672",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/hometown\u003e \u003chttp://dbpedia.org/resource/Russia\u003e . ?x \u003chttp://dbpedia.org/property/hometown\u003e ?uri }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Russia",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Russia",
        "seq": "81,87"
      }
    ],
    "id": "0feb39bf1e8f453bb816ea93a2b502c4",
    "predicate mapping": [
      {
        "label": "hometown",
        "uri": "http://dbpedia.org/property/hometown",
        "seq": "27,35",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "hometown",
        "uri": "http://dbpedia.org/property/hometown",
        "seq": "27,35",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What is the resting place of the children of Bruce Lee ?",
    "SerialNumber": "4673",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Bruce_Lee\u003e \u003chttp://dbpedia.org/property/children\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/restingPlace\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Bruce Lee",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Bruce_Lee",
        "seq": "45,54"
      }
    ],
    "id": "e7550728ad6f41acb0ad81d2f95ffb96",
    "predicate mapping": [
      {
        "label": "children",
        "uri": "http://dbpedia.org/property/children",
        "seq": "33,41",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "resting place",
        "uri": "http://dbpedia.org/ontology/restingPlace",
        "seq": "12,25",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "What are the television shows whose company\u0027s predecessor is Desilu Productions?",
    "SerialNumber": "4674",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/predecessor\u003e \u003chttp://dbpedia.org/resource/Desilu_Productions\u003e . ?uri \u003chttp://dbpedia.org/property/company\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Desilu Productions",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Desilu_Productions",
        "seq": "61,79"
      }
    ],
    "id": "deea1a7029184a36887d5130ae3b7420",
    "predicate mapping": [
      {
        "label": "predecessor",
        "uri": "http://dbpedia.org/property/predecessor",
        "seq": "46,57",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/property/company",
        "seq": "36,43",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "13,28",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "List the prospect team of Robin Kovacs ?",
    "SerialNumber": "4678",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Robin_Kovacs\u003e \u003chttp://dbpedia.org/property/prospectTeam\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Robin Kovacs",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Robin_Kovacs",
        "seq": "26,38"
      }
    ],
    "id": "0f900abe071d458c8008e93f37f6c252",
    "predicate mapping": [
      {
        "label": "prospect team",
        "uri": "http://dbpedia.org/property/prospectTeam",
        "seq": "9,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Is Labor relations the main interest of Karl Marx?",
    "SerialNumber": "4680",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Karl_Marx\u003e \u003chttp://dbpedia.org/ontology/mainInterest\u003e \u003chttp://dbpedia.org/resource/Labor_relations\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Karl Marx",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Karl_Marx",
        "seq": "40,49"
      },
      {
        "label": "Labor relations",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Labor_relations",
        "seq": "3,18"
      }
    ],
    "id": "425f07694cbb4f12a161b89c5d635e62",
    "predicate mapping": [
      {
        "label": "main interest",
        "uri": "http://dbpedia.org/ontology/mainInterest",
        "seq": "23,36",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name a office holder whose predecessor is Edward Douglass White and has son named Charles Phelps Taft II?",
    "SerialNumber": "4684",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/predecessor\u003e \u003chttp://dbpedia.org/resource/Edward_Douglass_White\u003e . ?uri \u003chttp://dbpedia.org/ontology/child\u003e \u003chttp://dbpedia.org/resource/Charles_Phelps_Taft_II\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/OfficeHolder\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Edward Douglass White",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Edward_Douglass_White",
        "seq": "42,63"
      },
      {
        "label": "Charles Phelps Taft II",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Charles_Phelps_Taft_II",
        "seq": "82,104"
      }
    ],
    "id": "6429713d75f449e0852eaa9a52a8540a",
    "predicate mapping": [
      {
        "label": "predecessor",
        "uri": "http://dbpedia.org/ontology/predecessor",
        "seq": "27,38",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "has son",
        "uri": "http://dbpedia.org/ontology/child",
        "seq": "68,75",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "office holder",
        "uri": "http://dbpedia.org/ontology/OfficeHolder",
        "seq": "7,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the club of Perianne Jones ?",
    "SerialNumber": "4686",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Perianne_Jones\u003e \u003chttp://dbpedia.org/property/club\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Perianne Jones",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Perianne_Jones",
        "seq": "20,34"
      }
    ],
    "id": "0827b6115c1e42db887f851cff070db2",
    "predicate mapping": [
      {
        "label": "club",
        "uri": "http://dbpedia.org/property/club",
        "seq": "12,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "List the books by the authors buried in the Convent of the Barefoot Trinitarians?",
    "SerialNumber": "4688",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/restingPlace\u003e \u003chttp://dbpedia.org/resource/Convent_of_the_Barefoot_Trinitarians\u003e . ?uri \u003chttp://dbpedia.org/ontology/author\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Book\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Convent of the Barefoot Trinitarians",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Convent_of_the_Barefoot_Trinitarians",
        "seq": "44,80"
      }
    ],
    "id": "576e5c12a2c248b8830551d0f73df4b8",
    "predicate mapping": [
      {
        "label": "buried in",
        "uri": "http://dbpedia.org/ontology/restingPlace",
        "seq": "30,39",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "authors",
        "uri": "http://dbpedia.org/ontology/author",
        "seq": "22,29",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "book",
        "uri": "http://dbpedia.org/ontology/Book",
        "seq": "9,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Is Stephanie Rice the flagbearer of Australia at the 2008 Summer Olympics?",
    "SerialNumber": "4690",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Australia_at_the_2008_Summer_Olympics\u003e \u003chttp://dbpedia.org/property/flagbearer\u003e \u003chttp://dbpedia.org/resource/Stephanie_Rice\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Australia at the 2008 Summer Olympics",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Australia_at_the_2008_Summer_Olympics",
        "seq": "36,73"
      },
      {
        "label": "Stephanie Rice",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Stephanie_Rice",
        "seq": "3,17"
      }
    ],
    "id": "b6350d2207344671bafd1d5b4cde9b63",
    "predicate mapping": [
      {
        "label": "flagbearer",
        "uri": "http://dbpedia.org/property/flagbearer",
        "seq": "22,32",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Spanish harlem incident and girl from the north country were originally composed by whom?",
    "SerialNumber": "4691",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Spanish_Harlem_Incident\u003e \u003chttp://dbpedia.org/ontology/composer\u003e ?uri. \u003chttp://dbpedia.org/resource/Girl_from_the_North_Country\u003e \u003chttp://dbpedia.org/ontology/composer\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Spanish harlem incident",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Spanish_Harlem_Incident",
        "seq": "0,23"
      },
      {
        "label": "girl from the north country",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Girl_from_the_North_Country",
        "seq": "28,55"
      }
    ],
    "id": "04444d2be01e42628d4b68c281b03655",
    "predicate mapping": [
      {
        "label": "composed by",
        "uri": "http://dbpedia.org/ontology/composer",
        "seq": "72,83",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "composed by",
        "uri": "http://dbpedia.org/ontology/composer",
        "seq": "72,83",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who is the founder of Oprah Winfrey Network (U.S. TV channel) ?",
    "SerialNumber": "4692",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Oprah_Winfrey_Network_(U.S._TV_channel)\u003e \u003chttp://dbpedia.org/property/founder\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Oprah Winfrey Network",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Oprah_Winfrey_Network_(U.S._TV_channel)",
        "seq": "22,43"
      }
    ],
    "id": "bef4d21a7f66422c8f6b906ff1dfc6ca",
    "predicate mapping": [
      {
        "label": "founder of",
        "uri": "http://dbpedia.org/property/founder",
        "seq": "11,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which place of Geography Club is the location of Seattle Great Wheel ?",
    "SerialNumber": "4694",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Seattle_Great_Wheel\u003e \u003chttp://dbpedia.org/property/locationTown\u003e ?uri. \u003chttp://dbpedia.org/resource/Geography_Club_(play)\u003e \u003chttp://dbpedia.org/property/place\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Seattle Great Wheel",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Seattle_Great_Wheel",
        "seq": "49,68"
      },
      {
        "label": "Geography Club",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Geography_Club_(play)",
        "seq": "15,29"
      }
    ],
    "id": "e753060cd8dc4ad3bafcc132529aa7a8",
    "predicate mapping": [
      {
        "label": "location",
        "uri": "http://dbpedia.org/property/locationTown",
        "seq": "37,45",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "place",
        "uri": "http://dbpedia.org/property/place",
        "seq": "6,11",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the career of George Arceneaux, Jr. ?",
    "SerialNumber": "4696",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/George_Arceneaux,_Jr.\u003e \u003chttp://dbpedia.org/ontology/occupation\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "George Arceneaux, Jr.",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/George_Arceneaux,_Jr.",
        "seq": "22,43"
      }
    ],
    "id": "3bf7d79605ca4456a79601a892b1ce3a",
    "predicate mapping": [
      {
        "label": "career",
        "uri": "http://dbpedia.org/ontology/occupation",
        "seq": "12,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the prospect team of Mikhail Pashnin ?",
    "SerialNumber": "4697",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Mikhail_Pashnin\u003e \u003chttp://dbpedia.org/property/prospectTeam\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Mikhail Pashnin",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Mikhail_Pashnin",
        "seq": "26,41"
      }
    ],
    "id": "c762b3cd8bd848748e7d136d4b2588c3",
    "predicate mapping": [
      {
        "label": "prospect team",
        "uri": "http://dbpedia.org/property/prospectTeam",
        "seq": "9,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who are the maintainers of the bridges which cross the pandaruan river?",
    "SerialNumber": "4698",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/crosses\u003e \u003chttp://dbpedia.org/resource/Pandaruan_River\u003e . ?x \u003chttp://dbpedia.org/ontology/maintainedBy\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Bridge\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "pandaruan river",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Pandaruan_River",
        "seq": "55,70"
      }
    ],
    "id": "618bbb187ffc48cfa98b5a910a1e61fb",
    "predicate mapping": [
      {
        "label": "cross",
        "uri": "http://dbpedia.org/ontology/crosses",
        "seq": "45,50",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "maintainer",
        "uri": "http://dbpedia.org/ontology/maintainedBy",
        "seq": "12,22",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "bridge",
        "uri": "http://dbpedia.org/ontology/Bridge",
        "seq": "31,37",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "Who all held a position when Gough Whitlam was the prime minister?",
    "SerialNumber": "4699",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/primeMinister\u003e \u003chttp://dbpedia.org/resource/Gough_Whitlam\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Gough Whitlam",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Gough_Whitlam",
        "seq": "29,42"
      }
    ],
    "id": "0c72f7f8c4d549bc9c7f59b72394a598",
    "predicate mapping": [
      {
        "label": "prime minister",
        "uri": "http://dbpedia.org/ontology/primeMinister",
        "seq": "51,65",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "Which veterans served at CBS?",
    "SerialNumber": "4700",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/occupation\u003e \u003chttp://dbpedia.org/resource/CBS\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "CBS",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/CBS",
        "seq": "25,28"
      }
    ],
    "id": "af5ba5ad9b42455eab9f628eba9d1e2c",
    "predicate mapping": [
      {
        "label": "at",
        "uri": "http://dbpedia.org/ontology/occupation",
        "seq": "22,24",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "111",
    "question": "How many other battles have the military person fought whose one of the battles is World War II ?",
    "SerialNumber": "4703",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/battles\u003e \u003chttp://dbpedia.org/resource/World_War_II\u003e . ?x \u003chttp://dbpedia.org/property/battles\u003e ?uri }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "World War II",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/World_War_II",
        "seq": "83,95"
      }
    ],
    "id": "71acf91b02794986a8ac6915c483a46f",
    "predicate mapping": [
      {
        "label": "battles",
        "uri": "http://dbpedia.org/property/battles",
        "seq": "15,22",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "battles",
        "uri": "http://dbpedia.org/property/battles",
        "seq": "15,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who is the  distributor of Rev (drink) ?",
    "SerialNumber": "4704",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Rev_(drink)\u003e \u003chttp://dbpedia.org/ontology/distributor\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Rev (drink)",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Rev_(drink)",
        "seq": "27,38"
      }
    ],
    "id": "32d3e61eddc2407e87f186bc486cd36e",
    "predicate mapping": [
      {
        "label": "distributor",
        "uri": "http://dbpedia.org/ontology/distributor",
        "seq": "12,23",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Who is the scientist whose doctoral student is Erich Bagge?",
    "SerialNumber": "4705",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/doctoralStudent\u003e \u003chttp://dbpedia.org/resource/Erich_Bagge\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Scientist\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Erich Bagge",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Erich_Bagge",
        "seq": "47,58"
      }
    ],
    "id": "86ef883773c04b44a83ea4b1ec8ee7c7",
    "predicate mapping": [
      {
        "label": "doctoral student",
        "uri": "http://dbpedia.org/ontology/doctoralStudent",
        "seq": "27,43",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "scientist",
        "uri": "http://dbpedia.org/ontology/Scientist",
        "seq": "11,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "406",
    "question": "How many bands are signed up with labels which were founded in Japan?",
    "SerialNumber": "4706",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/foundation\u003e \u003chttp://dbpedia.org/resource/Japan\u003e . ?uri \u003chttp://dbpedia.org/property/label\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Band\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Japan",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Japan",
        "seq": "63,68"
      }
    ],
    "id": "2ca759d5f081472b8b48e96396caf9b4",
    "predicate mapping": [
      {
        "label": "founded",
        "uri": "http://dbpedia.org/property/foundation",
        "seq": "52,59",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "label",
        "uri": "http://dbpedia.org/property/label",
        "seq": "34,39",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "band",
        "uri": "http://dbpedia.org/ontology/Band",
        "seq": "9,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the nationalteam of Trn Vit Hng ?",
    "SerialNumber": "4707",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Trần_Việt_Hương\u003e \u003chttp://dbpedia.org/property/nationalteam\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Trn Vit Hng",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Trần_Việt_Hương",
        "seq": "25,36"
      }
    ],
    "id": "4a351ee20c4a44c3b120ab07ca56f7a7",
    "predicate mapping": [
      {
        "label": "nationalteam",
        "uri": "http://dbpedia.org/property/nationalteam",
        "seq": "9,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the allegiance of Albert Kwesi Ocran ?",
    "SerialNumber": "4708",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Albert_Kwesi_Ocran\u003e \u003chttp://dbpedia.org/property/allegiance\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Albert Kwesi Ocran",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Albert_Kwesi_Ocran",
        "seq": "26,44"
      }
    ],
    "id": "7b40ce95904c467d8f1c01dccd0ce70c",
    "predicate mapping": [
      {
        "label": "allegiance",
        "uri": "http://dbpedia.org/property/allegiance",
        "seq": "12,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What is the owning company of the bank whose parent is Sony Financial ?",
    "SerialNumber": "4709",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/parent\u003e \u003chttp://dbpedia.org/resource/Sony_Financial\u003e . ?x \u003chttp://dbpedia.org/ontology/owningCompany\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Company\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Sony Financial",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Sony_Financial",
        "seq": "55,69"
      }
    ],
    "id": "bdd487c7a42548298552ee353383a88e",
    "predicate mapping": [
      {
        "label": "parent",
        "uri": "http://dbpedia.org/property/parent",
        "seq": "45,51",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "owning company",
        "uri": "http://dbpedia.org/ontology/owningCompany",
        "seq": "12,26",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company",
        "seq": "19,26",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who appointed William L. Dayton ?",
    "SerialNumber": "4710",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/William_L._Dayton\u003e \u003chttp://dbpedia.org/ontology/appointer\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "William L. Dayton",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/William_L._Dayton",
        "seq": "14,31"
      }
    ],
    "id": "c0cf9476109b449782a8226a9ae2ae4f",
    "predicate mapping": [
      {
        "label": "appointed",
        "uri": "http://dbpedia.org/ontology/appointer",
        "seq": "4,13",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "What is the fictional character whose voice over is done by the animator of Dick Lundy ?",
    "SerialNumber": "4711",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/animator\u003e \u003chttp://dbpedia.org/resource/Dick_Lundy_(animator)\u003e . ?uri \u003chttp://dbpedia.org/ontology/voice\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/FictionalCharacter\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Dick Lundy",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Dick_Lundy_(animator)",
        "seq": "76,86"
      }
    ],
    "id": "e59b93cd1e8d40d8be26c41a243212cc",
    "predicate mapping": [
      {
        "label": "animator",
        "uri": "http://dbpedia.org/property/animator",
        "seq": "64,72",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "voice",
        "uri": "http://dbpedia.org/ontology/voice",
        "seq": "38,43",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "fictional character",
        "uri": "http://dbpedia.org/ontology/FictionalCharacter",
        "seq": "12,31",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the Artist of Madagascar: Operation Penguin ?",
    "SerialNumber": "4712",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Madagascar:_Operation_Penguin\u003e \u003chttp://dbpedia.org/property/artist\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Operation Penguin",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Madagascar:_Operation_Penguin",
        "seq": "31,48"
      }
    ],
    "id": "a2ec42a127424074b5d7bc144285dcd6",
    "predicate mapping": [
      {
        "label": "Artist",
        "uri": "http://dbpedia.org/property/artist",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "105",
    "question": "Count the tenants of the stadiums owned by toronto.",
    "SerialNumber": "4713",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/owner\u003e \u003chttp://dbpedia.org/resource/Toronto\u003e . ?x \u003chttp://dbpedia.org/property/tenants\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "toronto",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Toronto",
        "seq": "43,50"
      }
    ],
    "id": "9dc0111186b24e9c86ae66f5bd0cefcb",
    "predicate mapping": [
      {
        "label": "owned",
        "uri": "http://dbpedia.org/property/owner",
        "seq": "34,39",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "tenants",
        "uri": "http://dbpedia.org/property/tenants",
        "seq": "10,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "list all the chairman of Vancouver Whitecaps FC?",
    "SerialNumber": "4715",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Vancouver_Whitecaps_FC\u003e \u003chttp://dbpedia.org/property/chairman\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Vancouver Whitecaps FC",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Vancouver_Whitecaps_FC",
        "seq": "25,47"
      }
    ],
    "id": "047a2084681a4bc4b07d5e2e9995f2eb",
    "predicate mapping": [
      {
        "label": "chairman",
        "uri": "http://dbpedia.org/property/chairman",
        "seq": "13,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who is the label of The Producers (2005 film) ?",
    "SerialNumber": "4717",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/The_Producers_(2005_film)\u003e \u003chttp://dbpedia.org/property/label\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "The Producers (2005 film)",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Producers_(2005_film)",
        "seq": "20,45"
      }
    ],
    "id": "0d3ce4f95ac74189a54701a42dda617d",
    "predicate mapping": [
      {
        "label": "label",
        "uri": "http://dbpedia.org/property/label",
        "seq": "11,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "What is the movie whose producer is Michael Deeley and directed by  Ridley Scott?",
    "SerialNumber": "4718",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/producer\u003e \u003chttp://dbpedia.org/resource/Michael_Deeley\u003e . ?uri \u003chttp://dbpedia.org/property/director\u003e \u003chttp://dbpedia.org/resource/Ridley_Scott\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Michael Deeley",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Michael_Deeley",
        "seq": "36,50"
      },
      {
        "label": "Ridley Scott",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ridley_Scott",
        "seq": "68,80"
      }
    ],
    "id": "8788b9a42eae46a7ae9f7ac2c79a8056",
    "predicate mapping": [
      {
        "label": "producer",
        "uri": "http://dbpedia.org/property/producer",
        "seq": "24,32",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "directed",
        "uri": "http://dbpedia.org/property/director",
        "seq": "55,63",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "12,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "What is the state whose largest city is Denver?",
    "SerialNumber": "4719",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/largestCity\u003e \u003chttp://dbpedia.org/resource/Denver\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Denver",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Denver",
        "seq": "40,46"
      }
    ],
    "id": "d6b6dd1b9b1f42b2a4339f0040398eca",
    "predicate mapping": [
      {
        "label": "largest city",
        "uri": "http://dbpedia.org/ontology/largestCity",
        "seq": "24,36",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "Give me some TV stations whose network\u0027s main language is American English?",
    "SerialNumber": "4720",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/language\u003e \u003chttp://dbpedia.org/resource/American_English\u003e . ?uri \u003chttp://dbpedia.org/property/network\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionStation\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "American English",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/American_English",
        "seq": "58,74"
      }
    ],
    "id": "5405afee486944e1976b7ba7911f045d",
    "predicate mapping": [
      {
        "label": "language",
        "uri": "http://dbpedia.org/ontology/language",
        "seq": "46,54",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "network",
        "uri": "http://dbpedia.org/property/network",
        "seq": "31,38",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "stations",
        "uri": "http://dbpedia.org/ontology/TelevisionStation",
        "seq": "16,24",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who is the licensee of EXXV-TV ?",
    "SerialNumber": "4723",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/EXXV-TV\u003e \u003chttp://dbpedia.org/property/licensee\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "EXXV-TV",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/EXXV-TV",
        "seq": "23,30"
      }
    ],
    "id": "106ea7f1234e4ae29451ff12ce6e4684",
    "predicate mapping": [
      {
        "label": "licensee",
        "uri": "http://dbpedia.org/property/licensee",
        "seq": "11,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Through which states do the rivers flow which join in the republican river from the left?",
    "SerialNumber": "4724",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Republican_River\u003e \u003chttp://dbpedia.org/ontology/leftTributary\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/state\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "republican river",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Republican_River",
        "seq": "58,74"
      }
    ],
    "id": "c1514e50dd2f4538833f08a6bc8103c2",
    "predicate mapping": [
      {
        "label": "left",
        "uri": "http://dbpedia.org/ontology/leftTributary",
        "seq": "84,88",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "state",
        "uri": "http://dbpedia.org/ontology/state",
        "seq": "14,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "In which language is All I need is Your Sweet lovin written ?",
    "SerialNumber": "4725",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/All_I_Need_Is_Your_Sweet_Lovin\u0027\u003e \u003chttp://dbpedia.org/property/language\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "All I need is Your Sweet lovin ",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/All_I_Need_Is_Your_Sweet_Lovin\u0027",
        "seq": "21,52"
      }
    ],
    "id": "61cf658e0164453f858aee18ab264e25",
    "predicate mapping": [
      {
        "label": "language",
        "uri": "http://dbpedia.org/property/language",
        "seq": "9,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Who founded a company which served Mid Wales ?",
    "SerialNumber": "4727",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/regionServed\u003e \u003chttp://dbpedia.org/resource/Mid_Wales\u003e . ?x \u003chttp://dbpedia.org/ontology/foundedBy\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Mid Wales",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Mid_Wales",
        "seq": "35,44"
      }
    ],
    "id": "27b3911bc8e245c79e65ab3d86f02480",
    "predicate mapping": [
      {
        "label": "served",
        "uri": "http://dbpedia.org/ontology/regionServed",
        "seq": "28,34",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "founded",
        "uri": "http://dbpedia.org/ontology/foundedBy",
        "seq": "4,11",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "401",
    "question": "How many television shows have  Fox Broadcasting Company as their channel?",
    "SerialNumber": "4728",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/property/channel\u003e \u003chttp://dbpedia.org/resource/Fox_Broadcasting_Company\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Fox Broadcasting Company",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Fox_Broadcasting_Company",
        "seq": "32,56"
      }
    ],
    "id": "b55cd5825f3f4a4a9dda3693609c3e4b",
    "predicate mapping": [
      {
        "label": "channel",
        "uri": "http://dbpedia.org/property/channel",
        "seq": "66,73",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "9,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "List the junctions which lie on U.S. Route 59 in Texas and U.S. Route 59 ?",
    "SerialNumber": "4733",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/U.S._Route_59_in_Texas\u003e \u003chttp://dbpedia.org/property/junction\u003e ?uri. \u003chttp://dbpedia.org/resource/U.S._Route_59\u003e \u003chttp://dbpedia.org/property/junction\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "U.S. Route 59 in Texas",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/U.S._Route_59_in_Texas",
        "seq": "32,54"
      },
      {
        "label": "U.S. Route 59 in Texas",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/U.S._Route_59",
        "seq": "32,54"
      }
    ],
    "id": "87d393b402be4c22859bc21ab59a82c4",
    "predicate mapping": [
      {
        "label": "junction",
        "uri": "http://dbpedia.org/property/junction",
        "seq": "9,17",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "junction",
        "uri": "http://dbpedia.org/property/junction",
        "seq": "9,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Who are some basketball players who played for Phoenix Suns?",
    "SerialNumber": "4735",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/team\u003e \u003chttp://dbpedia.org/resource/Phoenix_Suns\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/BasketballPlayer\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Phoenix Suns",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Phoenix_Suns",
        "seq": "47,59"
      }
    ],
    "id": "6e9633d042bc4dc3abcab2f2841c1746",
    "predicate mapping": [
      {
        "label": "played for",
        "uri": "http://dbpedia.org/ontology/team",
        "seq": "36,46",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "basketball player",
        "uri": "http://dbpedia.org/ontology/BasketballPlayer",
        "seq": "13,30",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who is the child of John Tyler, Sr.?",
    "SerialNumber": "4737",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/John_Tyler,_Sr.\u003e \u003chttp://dbpedia.org/ontology/child\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "John Tyler, Sr.",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/John_Tyler,_Sr.",
        "seq": "20,35"
      }
    ],
    "id": "922da121de7d4c2b94f5704844a63b18",
    "predicate mapping": [
      {
        "label": "child",
        "uri": "http://dbpedia.org/ontology/child",
        "seq": "11,16",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What is the country with native language as Languages of Ethiopia?",
    "SerialNumber": "4738",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/language\u003e \u003chttp://dbpedia.org/resource/Languages_of_Ethiopia\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Country\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Languages of Ethiopia",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Languages_of_Ethiopia",
        "seq": "44,65"
      }
    ],
    "id": "408ee042ce504f0d9e43f239bf62a596",
    "predicate mapping": [
      {
        "label": "language",
        "uri": "http://dbpedia.org/ontology/language",
        "seq": "32,40",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/Country",
        "seq": "12,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "The successor of Ulrich II, Count of East Frisia was born in what place?",
    "SerialNumber": "4739",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Ulrich_II,_Count_of_East_Frisia\u003e \u003chttp://dbpedia.org/property/successor\u003e ?x . ?x \u003chttp://dbpedia.org/property/placeOfBirth\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ulrich II, Count of East Frisia",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ulrich_II,_Count_of_East_Frisia",
        "seq": "17,48"
      }
    ],
    "id": "bc828e38946849059989fb94ae3eb760",
    "predicate mapping": [
      {
        "label": "successor",
        "uri": "http://dbpedia.org/property/successor",
        "seq": "4,13",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "place",
        "uri": "http://dbpedia.org/property/placeOfBirth",
        "seq": "66,71",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What company is the distributor of Bombay Sapphire?",
    "SerialNumber": "4740",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Bombay_Sapphire\u003e \u003chttp://dbpedia.org/property/distributor\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Bombay Sapphire",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Bombay_Sapphire",
        "seq": "35,50"
      }
    ],
    "id": "0dd98abb1d704acbaaaf373111ec2b6f",
    "predicate mapping": [
      {
        "label": "distributor",
        "uri": "http://dbpedia.org/property/distributor",
        "seq": "20,31",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the part of Liverpool city region \u003e",
    "SerialNumber": "4742",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Liverpool_City_Region\u003e \u003chttp://dbpedia.org/ontology/part\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Liverpool city region",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Liverpool_City_Region",
        "seq": "17,38"
      }
    ],
    "id": "3fabc75aa05d4a37873532407e1f9e53",
    "predicate mapping": [
      {
        "label": "part",
        "uri": "http://dbpedia.org/ontology/part",
        "seq": "9,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Which artists trained in San Francisco Art Institute?",
    "SerialNumber": "4743",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/training\u003e \u003chttp://dbpedia.org/resource/San_Francisco_Art_Institute\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Artist\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "San Francisco Art Institute",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/San_Francisco_Art_Institute",
        "seq": "25,52"
      }
    ],
    "id": "068232e91e1c418898c1cecab28531cd",
    "predicate mapping": [
      {
        "label": "trained",
        "uri": "http://dbpedia.org/property/training",
        "seq": "14,21",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "artist",
        "uri": "http://dbpedia.org/ontology/Artist",
        "seq": "6,12",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the launch site of the Juno I which was also the ground of 2016 Fort Lauderdale Strikers season ?",
    "SerialNumber": "4745",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Juno_I\u003e \u003chttp://dbpedia.org/ontology/launchSite\u003e ?uri. \u003chttp://dbpedia.org/resource/2016_Fort_Lauderdale_Strikers_season\u003e \u003chttp://dbpedia.org/ontology/ground\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Juno I",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Juno_I",
        "seq": "31,37"
      },
      {
        "label": "2016 Fort Lauderdale Strikers season",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/2016_Fort_Lauderdale_Strikers_season",
        "seq": "67,103"
      }
    ],
    "id": "092ac4c6d6c64b58b8891809b7dd67ff",
    "predicate mapping": [
      {
        "label": "launch site",
        "uri": "http://dbpedia.org/ontology/launchSite",
        "seq": "12,23",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "ground",
        "uri": "http://dbpedia.org/ontology/ground",
        "seq": "57,63",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What is the place of birth of the Michael Marder which is also the  place of death of the Tigran Petrosian",
    "SerialNumber": "4746",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Michael_Marder\u003e \u003chttp://dbpedia.org/property/placeOfBirth\u003e ?uri. \u003chttp://dbpedia.org/resource/Tigran_Petrosian\u003e \u003chttp://dbpedia.org/ontology/deathPlace\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Michael Marder",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Michael_Marder",
        "seq": "34,48"
      },
      {
        "label": "Tigran Petrosian",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Tigran_Petrosian",
        "seq": "90,106"
      }
    ],
    "id": "0753a6cc55e24b9f8ae248cb0229faf0",
    "predicate mapping": [
      {
        "label": "place of birth",
        "uri": "http://dbpedia.org/property/placeOfBirth",
        "seq": "12,26",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "place",
        "uri": "http://dbpedia.org/ontology/deathPlace",
        "seq": "12,17",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What are the mascots of the teams participating in the Turkish Handball Super League?",
    "SerialNumber": "4748",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/league\u003e \u003chttp://dbpedia.org/resource/Turkish_Handball_Super_League\u003e . ?x \u003chttp://dbpedia.org/property/mascot\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/SportsTeam\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Turkish Handball Super League",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Turkish_Handball_Super_League",
        "seq": "55,84"
      }
    ],
    "id": "9cb5f2b9db5b436c86a97a46a5c66290",
    "predicate mapping": [
      {
        "label": "League",
        "uri": "http://dbpedia.org/property/league",
        "seq": "78,84",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "mascot",
        "uri": "http://dbpedia.org/property/mascot",
        "seq": "13,19",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/SportsTeam",
        "seq": "28,32",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "401",
    "question": "Give me a count of schools in Reading, Berkshire?",
    "SerialNumber": "4749",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/ontology/city\u003e \u003chttp://dbpedia.org/resource/Reading,_Berkshire\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/School\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Reading, Berkshire",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Reading,_Berkshire",
        "seq": "30,48"
      }
    ],
    "id": "5521a80bdcd04617a45aadea2164ffee",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/city",
        "seq": "27,29",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "school",
        "uri": "http://dbpedia.org/ontology/School",
        "seq": "19,25",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What team did Dan Daoust and Don Ashby play for?",
    "SerialNumber": "4750",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Dan_Daoust\u003e \u003chttp://dbpedia.org/ontology/formerTeam\u003e ?uri. \u003chttp://dbpedia.org/resource/Don_Ashby\u003e \u003chttp://dbpedia.org/property/playedFor\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Dan Daoust",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Dan_Daoust",
        "seq": "14,24"
      },
      {
        "label": "Don Ashby",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Don_Ashby",
        "seq": "29,38"
      }
    ],
    "id": "1b3644240f434186be027e3dc2df4afe",
    "predicate mapping": [
      {
        "label": "team for",
        "uri": "http://dbpedia.org/ontology/formerTeam",
        "seq": "-1,7",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/property/playedFor",
        "seq": "5,9",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Was the USS Tillamook built in Seattle?",
    "SerialNumber": "4751",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/USS_Tillamook_(AT-16)\u003e \u003chttp://dbpedia.org/property/shipBuilder\u003e \u003chttp://dbpedia.org/resource/Seattle\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "USS Tillamook",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/USS_Tillamook_(AT-16)",
        "seq": "8,21"
      },
      {
        "label": "Seattle",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Seattle",
        "seq": "31,38"
      }
    ],
    "id": "cb46de89eece40c6a511ae4bb909b07f",
    "predicate mapping": [
      {
        "label": "built",
        "uri": "http://dbpedia.org/property/shipBuilder",
        "seq": "22,27",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which automobile platform provider of Chiva bus is also the parent company of the Ford Falcon Cobra ?",
    "SerialNumber": "4753",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Chiva_bus\u003e \u003chttp://dbpedia.org/ontology/automobilePlatform\u003e ?uri. \u003chttp://dbpedia.org/resource/Ford_Falcon_Cobra\u003e \u003chttp://dbpedia.org/ontology/parentCompany\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Chiva bus",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Chiva_bus",
        "seq": "38,47"
      },
      {
        "label": "Ford Falcon Cobra",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Ford_Falcon_Cobra",
        "seq": "82,99"
      }
    ],
    "id": "b3189598edba497696316dbed48fd2fb",
    "predicate mapping": [
      {
        "label": "automobile platform",
        "uri": "http://dbpedia.org/ontology/automobilePlatform",
        "seq": "6,25",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "parent company",
        "uri": "http://dbpedia.org/ontology/parentCompany",
        "seq": "60,74",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "List all the children of Barbara Bush?",
    "SerialNumber": "4755",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Barbara_Bush\u003e \u003chttp://dbpedia.org/property/children\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Barbara Bush",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Barbara_Bush",
        "seq": "25,37"
      }
    ],
    "id": "7c78f74e4f404592838f82e9d563e6e0",
    "predicate mapping": [
      {
        "label": "children",
        "uri": "http://dbpedia.org/property/children",
        "seq": "13,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "who is the husband of Rosie Huntington Whiteley?",
    "SerialNumber": "4756",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Rosie_Huntington-Whiteley\u003e \u003chttp://dbpedia.org/ontology/partner\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Rosie Huntington",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Rosie_Huntington-Whiteley",
        "seq": "22,38"
      }
    ],
    "id": "6239f50c40b045fb92f0ad0b63792e7b",
    "predicate mapping": [
      {
        "label": "husband",
        "uri": "http://dbpedia.org/ontology/partner",
        "seq": "11,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the official name of Arkansas wine ?",
    "SerialNumber": "4759",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Arkansas_wine\u003e \u003chttp://dbpedia.org/property/officialName\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Arkansas wine",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Arkansas_wine",
        "seq": "29,42"
      }
    ],
    "id": "0fca46ab984148228bc912ac09c14cea",
    "predicate mapping": [
      {
        "label": "official name",
        "uri": "http://dbpedia.org/property/officialName",
        "seq": "12,25",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "What are the houses of legislature in the political leader\u0027s seat of Medininagar?",
    "SerialNumber": "4760",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Medininagar\u003e \u003chttp://dbpedia.org/property/leaderTitle\u003e ?x . ?x \u003chttp://dbpedia.org/property/houses\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Legislature\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Medininagar",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Medininagar",
        "seq": "69,80"
      }
    ],
    "id": "fb6380523dad469aa76de43877543065",
    "predicate mapping": [
      {
        "label": "leader\u0027s",
        "uri": "http://dbpedia.org/property/leaderTitle",
        "seq": "52,60",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "houses",
        "uri": "http://dbpedia.org/property/houses",
        "seq": "13,19",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "legislature",
        "uri": "http://dbpedia.org/ontology/Legislature",
        "seq": "23,34",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the alma mater of Julian Leow Beng Kim?",
    "SerialNumber": "4761",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Julian_Leow_Beng_Kim\u003e \u003chttp://dbpedia.org/property/almaMater\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Julian Leow Beng Kim",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Julian_Leow_Beng_Kim",
        "seq": "26,46"
      }
    ],
    "id": "da407b1a436f4844abc78ef45daebf4f",
    "predicate mapping": [
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/property/almaMater",
        "seq": "12,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What discipline was The Chess Monthly about ?",
    "SerialNumber": "4762",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/The_Chess_Monthly\u003e \u003chttp://dbpedia.org/property/discipline\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "The Chess Monthly",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/The_Chess_Monthly",
        "seq": "20,37"
      }
    ],
    "id": "8745414c54fd44fc805e024437bff491",
    "predicate mapping": [
      {
        "label": "discipline",
        "uri": "http://dbpedia.org/property/discipline",
        "seq": "5,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which prospect team of Robin Kovacs is the draft team of Bob MacMillan ?",
    "SerialNumber": "4764",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Bob_MacMillan\u003e \u003chttp://dbpedia.org/property/draftTeam\u003e ?uri. \u003chttp://dbpedia.org/resource/Robin_Kovacs\u003e \u003chttp://dbpedia.org/property/prospectTeam\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Bob MacMillan",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Bob_MacMillan",
        "seq": "57,70"
      },
      {
        "label": "Robin Kovacs",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Robin_Kovacs",
        "seq": "23,35"
      }
    ],
    "id": "527f030fe08c4739ae2be978d022c372",
    "predicate mapping": [
      {
        "label": "draft team",
        "uri": "http://dbpedia.org/property/draftTeam",
        "seq": "43,53",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "prospect team",
        "uri": "http://dbpedia.org/property/prospectTeam",
        "seq": "6,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "101",
    "question": "How many universities are in the National Collegiate Athletic Association?",
    "SerialNumber": "4765",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/ontology/athletics\u003e \u003chttp://dbpedia.org/resource/National_Collegiate_Athletic_Association\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "National Collegiate Athletic Association",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/National_Collegiate_Athletic_Association",
        "seq": "33,73"
      }
    ],
    "id": "eb14b1c3eb7d49fbb617c70a2c17156e",
    "predicate mapping": [
      {
        "label": "athletic",
        "uri": "http://dbpedia.org/ontology/athletics",
        "seq": "-1,7",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "111",
    "question": "List the total number of board members who share board with Creative commons ?",
    "SerialNumber": "4768",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/board\u003e \u003chttp://dbpedia.org/resource/Creative_Commons\u003e . ?x \u003chttp://dbpedia.org/ontology/board\u003e ?uri }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Creative commons",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Creative_Commons",
        "seq": "60,76"
      }
    ],
    "id": "7ef60c109b4f45cb98d7a7b6edb63e86",
    "predicate mapping": [
      {
        "label": "board",
        "uri": "http://dbpedia.org/ontology/board",
        "seq": "25,30",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "board",
        "uri": "http://dbpedia.org/ontology/board",
        "seq": "25,30",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Is Fluidinfo written in PostgreSQL language?",
    "SerialNumber": "4769",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Fluidinfo\u003e \u003chttp://dbpedia.org/property/programmingLanguage\u003e \u003chttp://dbpedia.org/resource/PostgreSQL\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Fluidinfo",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Fluidinfo",
        "seq": "3,12"
      },
      {
        "label": "PostgreSQL",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/PostgreSQL",
        "seq": "24,34"
      }
    ],
    "id": "3426ff612be940c48ddbf955846bbbfc",
    "predicate mapping": [
      {
        "label": "language",
        "uri": "http://dbpedia.org/property/programmingLanguage",
        "seq": "35,43",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What are the software which uses  platforms as ARM architecture?",
    "SerialNumber": "4777",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/computingPlatform\u003e \u003chttp://dbpedia.org/resource/ARM_architecture\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Software\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "ARM architecture",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/ARM_architecture",
        "seq": "47,63"
      }
    ],
    "id": "1c9fa236fda340f4858626790e9ed794",
    "predicate mapping": [
      {
        "label": "platforms",
        "uri": "http://dbpedia.org/ontology/computingPlatform",
        "seq": "34,43",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "software",
        "uri": "http://dbpedia.org/ontology/Software",
        "seq": "13,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which developer of  the Spider-Man: Edge of Time is the  successor of PlayStation 2 ?",
    "SerialNumber": "4779",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Spider-Man:_Edge_of_Time\u003e \u003chttp://dbpedia.org/ontology/developer\u003e ?uri. \u003chttp://dbpedia.org/resource/PlayStation_2\u003e \u003chttp://dbpedia.org/ontology/successor\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Spider-Man: Edge of Time",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Spider-Man:_Edge_of_Time",
        "seq": "24,48"
      },
      {
        "label": "PlayStation 2",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/PlayStation_2",
        "seq": "70,83"
      }
    ],
    "id": "db40ca055fe5457da9fb1e618ce07c22",
    "predicate mapping": [
      {
        "label": "developer",
        "uri": "http://dbpedia.org/ontology/developer",
        "seq": "6,15",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "successor",
        "uri": "http://dbpedia.org/ontology/successor",
        "seq": "57,66",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Is Henry Knox a commander of Continental Artillery Regiment?",
    "SerialNumber": "4781",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Continental_Artillery_Regiment\u003e \u003chttp://dbpedia.org/ontology/notableCommander\u003e \u003chttp://dbpedia.org/resource/Henry_Knox\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Continental Artillery Regiment",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Continental_Artillery_Regiment",
        "seq": "29,59"
      },
      {
        "label": "Henry Knox",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Henry_Knox",
        "seq": "3,13"
      }
    ],
    "id": "055b04c076074890acb3ea2db8886990",
    "predicate mapping": [
      {
        "label": "commander",
        "uri": "http://dbpedia.org/ontology/notableCommander",
        "seq": "16,25",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What are the video games composed by Hirokazu Tanaka?",
    "SerialNumber": "4784",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/composer\u003e \u003chttp://dbpedia.org/resource/Hirokazu_Tanaka\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/VideoGame\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Hirokazu Tanaka",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Hirokazu_Tanaka",
        "seq": "37,52"
      }
    ],
    "id": "1b05eee4a4914768b1277460023765c7",
    "predicate mapping": [
      {
        "label": "composed",
        "uri": "http://dbpedia.org/property/composer",
        "seq": "25,33",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "video game",
        "uri": "http://dbpedia.org/ontology/VideoGame",
        "seq": "13,23",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Brian Moriarty designed video games written by whom?",
    "SerialNumber": "4785",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/designer\u003e \u003chttp://dbpedia.org/resource/Brian_Moriarty\u003e . ?x \u003chttp://dbpedia.org/property/writer\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/VideoGame\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Brian Moriarty",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Brian_Moriarty",
        "seq": "0,14"
      }
    ],
    "id": "85bb180bf8e34202b4aa22716ce5071a",
    "predicate mapping": [
      {
        "label": "designed",
        "uri": "http://dbpedia.org/ontology/designer",
        "seq": "15,23",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "written by",
        "uri": "http://dbpedia.org/property/writer",
        "seq": "36,46",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "video game",
        "uri": "http://dbpedia.org/ontology/VideoGame",
        "seq": "24,34",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which workplace of the Michael M. Sears is also the  governing body of the Burro Flats Painted Cave?",
    "SerialNumber": "4786",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Michael_M._Sears\u003e \u003chttp://dbpedia.org/ontology/employer\u003e ?uri. \u003chttp://dbpedia.org/resource/Burro_Flats_Painted_Cave\u003e \u003chttp://dbpedia.org/ontology/governingBody\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Michael M. Sears",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Michael_M._Sears",
        "seq": "23,39"
      },
      {
        "label": "Burro Flats Painted Cave",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Burro_Flats_Painted_Cave",
        "seq": "75,99"
      }
    ],
    "id": "8bd39f68e84f4329a53977496d9dcc69",
    "predicate mapping": [
      {
        "label": "workplace",
        "uri": "http://dbpedia.org/ontology/employer",
        "seq": "6,15",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "governing body",
        "uri": "http://dbpedia.org/ontology/governingBody",
        "seq": "53,67",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Who is the executive producer of Into the Dalek ?",
    "SerialNumber": "4789",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Into_the_Dalek\u003e \u003chttp://dbpedia.org/property/executiveProducer\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Into the Dalek",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Into_the_Dalek",
        "seq": "33,47"
      }
    ],
    "id": "d7d45064bde94687972a63ec05a2d4a6",
    "predicate mapping": [
      {
        "label": "executive producer",
        "uri": "http://dbpedia.org/property/executiveProducer",
        "seq": "11,29",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Was Citizen Kane cinematographed by Gregg Toland?",
    "SerialNumber": "4790",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Citizen_Kane\u003e \u003chttp://dbpedia.org/property/cinematography\u003e \u003chttp://dbpedia.org/resource/Gregg_Toland\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Citizen Kane",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Citizen_Kane",
        "seq": "4,16"
      },
      {
        "label": "Gregg Toland",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Gregg_Toland",
        "seq": "36,48"
      }
    ],
    "id": "fd11cddf34d54d3c87f3d536773a9c09",
    "predicate mapping": [
      {
        "label": "cinematographed",
        "uri": "http://dbpedia.org/property/cinematography",
        "seq": "17,32",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the prize awarded to Bruce Beutler ?",
    "SerialNumber": "4791",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Bruce_Beutler\u003e \u003chttp://dbpedia.org/ontology/award\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Bruce Beutler",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Bruce_Beutler",
        "seq": "29,42"
      }
    ],
    "id": "7d0fb5e551594d689aef4adfbadcb48a",
    "predicate mapping": [
      {
        "label": "prize awarded",
        "uri": "http://dbpedia.org/ontology/award",
        "seq": "12,25",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which writer of Alan Freeman Days is also the writer of Come On over ?",
    "SerialNumber": "4794",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Alan_Freeman_Days\u003e \u003chttp://dbpedia.org/ontology/writer\u003e ?uri. \u003chttp://dbpedia.org/resource/Come_On_Over_(Bee_Gees_song)\u003e \u003chttp://dbpedia.org/property/writer\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Alan Freeman Days",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Alan_Freeman_Days",
        "seq": "16,33"
      },
      {
        "label": "Come On over",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Come_On_Over_(Bee_Gees_song)",
        "seq": "56,68"
      }
    ],
    "id": "edd76a1bcc4943bd98a488f2a226464f",
    "predicate mapping": [
      {
        "label": "writer",
        "uri": "http://dbpedia.org/ontology/writer",
        "seq": "6,12",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "writer",
        "uri": "http://dbpedia.org/property/writer",
        "seq": "6,12",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the religion of character of Janice Soprano from The Soprano television show?",
    "SerialNumber": "4795",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Janice_Soprano\u003e \u003chttp://dbpedia.org/ontology/religion\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Janice Soprano",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Janice_Soprano",
        "seq": "37,51"
      }
    ],
    "id": "70c322e322db4335be2a68becb37f2fc",
    "predicate mapping": [
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion",
        "seq": "12,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "Name some comic characters created by Bruce Timm?",
    "SerialNumber": "4798",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/creator\u003e \u003chttp://dbpedia.org/resource/Bruce_Timm\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Bruce Timm",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Bruce_Timm",
        "seq": "38,48"
      }
    ],
    "id": "9af1387628eb41aaaa7bfc96527b7dea",
    "predicate mapping": [
      {
        "label": "created by",
        "uri": "http://dbpedia.org/ontology/creator",
        "seq": "27,37",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Does AMC Gremlin have the Volkswagen engine?",
    "SerialNumber": "4799",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/AMC_Gremlin\u003e \u003chttp://dbpedia.org/property/engine\u003e \u003chttp://dbpedia.org/resource/Volkswagen\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "AMC Gremlin",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/AMC_Gremlin",
        "seq": "5,16"
      },
      {
        "label": "Volkswagen",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Volkswagen",
        "seq": "26,36"
      }
    ],
    "id": "00a4428f08104601b9070ce9d2809034",
    "predicate mapping": [
      {
        "label": "engine",
        "uri": "http://dbpedia.org/property/engine",
        "seq": "37,43",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "307",
    "question": "Which appliance has cpu from Freescale Semiconductor and Marvell Technology Group?",
    "SerialNumber": "4800",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/ontology/cpu\u003e \u003chttp://dbpedia.org/resource/Freescale_Semiconductor\u003e . ?uri \u003chttp://dbpedia.org/ontology/cpu\u003e \u003chttp://dbpedia.org/resource/Marvell_Technology_Group\u003e . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/InformationAppliance\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Freescale Semiconductor",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Freescale_Semiconductor",
        "seq": "29,52"
      },
      {
        "label": "Marvell Technology Group",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Marvell_Technology_Group",
        "seq": "57,81"
      }
    ],
    "id": "736ca71b65cb49909c3190a1deaa4d69",
    "predicate mapping": [
      {
        "label": "cpu",
        "uri": "http://dbpedia.org/ontology/cpu",
        "seq": "20,23",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "cpu",
        "uri": "http://dbpedia.org/ontology/cpu",
        "seq": "20,23",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "appliance",
        "uri": "http://dbpedia.org/ontology/InformationAppliance",
        "seq": "6,15",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "Who all have appointed governess born in Magnolia Plantation gardens?",
    "SerialNumber": "4801",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/birthPlace\u003e \u003chttp://dbpedia.org/resource/Magnolia_Plantation_and_Gardens_(Charleston,_South_Carolina)\u003e . ?x \u003chttp://dbpedia.org/property/appointer\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Magnolia Plantation gardens",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Magnolia_Plantation_and_Gardens_(Charleston,_South_Carolina)",
        "seq": "41,68"
      }
    ],
    "id": "f579975baffd4d30bae921db2f6a22a3",
    "predicate mapping": [
      {
        "label": "born in",
        "uri": "http://dbpedia.org/ontology/birthPlace",
        "seq": "33,40",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "appointed",
        "uri": "http://dbpedia.org/property/appointer",
        "seq": "13,22",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Is Judy Garland a character of End of the Rainbow?",
    "SerialNumber": "4803",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/End_of_the_Rainbow\u003e \u003chttp://dbpedia.org/property/characters\u003e \u003chttp://dbpedia.org/resource/Judy_Garland\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "End of the Rainbow",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/End_of_the_Rainbow",
        "seq": "31,49"
      },
      {
        "label": "Judy Garland",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Judy_Garland",
        "seq": "3,15"
      }
    ],
    "id": "6e87da5cf6f7420ea41d70b56af0a73a",
    "predicate mapping": [
      {
        "label": "character",
        "uri": "http://dbpedia.org/property/characters",
        "seq": "18,27",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Which constructor\u0027s team won the 1967 Mexican Grand Prix ?",
    "SerialNumber": "4805",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/1967_Mexican_Grand_Prix\u003e \u003chttp://dbpedia.org/property/firstTeam\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "1967 Mexican Grand Prix",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/1967_Mexican_Grand_Prix",
        "seq": "33,56"
      }
    ],
    "id": "a705fea63f8f4de8ba925717adbd4594",
    "predicate mapping": [
      {
        "label": "team",
        "uri": "http://dbpedia.org/property/firstTeam",
        "seq": "20,24",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What is the state of origin of the president whose alma mater is Hellenic Naval Academy ?",
    "SerialNumber": "4808",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/almaMater\u003e \u003chttp://dbpedia.org/resource/Hellenic_Naval_Academy\u003e . ?x \u003chttp://dbpedia.org/ontology/stateOfOrigin\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/President\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Hellenic Naval Academy",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Hellenic_Naval_Academy",
        "seq": "65,87"
      }
    ],
    "id": "4e3ab34be94d4669b8e12316056ff405",
    "predicate mapping": [
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/property/almaMater",
        "seq": "51,61",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "state of origin",
        "uri": "http://dbpedia.org/ontology/stateOfOrigin",
        "seq": "12,27",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "president",
        "uri": "http://dbpedia.org/ontology/President",
        "seq": "35,44",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Among which basket ball team having arena as The Palace of Auburn hills has president as Stan Van Gundy ?",
    "SerialNumber": "4811",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/arena\u003e \u003chttp://dbpedia.org/resource/The_Palace_of_Auburn_Hills\u003e . ?uri \u003chttp://dbpedia.org/property/president\u003e \u003chttp://dbpedia.org/resource/Stan_Van_Gundy\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/BasketballTeam\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "The Palace of Auburn hills",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Palace_of_Auburn_Hills",
        "seq": "45,71"
      },
      {
        "label": "Stan Van Gundy",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Stan_Van_Gundy",
        "seq": "89,103"
      }
    ],
    "id": "cd9216dbcecb43639fc1acb8f8f6e299",
    "predicate mapping": [
      {
        "label": "arena",
        "uri": "http://dbpedia.org/property/arena",
        "seq": "36,41",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "president",
        "uri": "http://dbpedia.org/property/president",
        "seq": "76,85",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "basket team ball",
        "uri": "http://dbpedia.org/ontology/BasketballTeam",
        "seq": "-1,15",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What awards were given to the screenplayer of The Motorcycle Diaries?",
    "SerialNumber": "4817",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/The_Motorcycle_Diaries_(film)\u003e \u003chttp://dbpedia.org/property/screenplay\u003e ?x . ?x \u003chttp://dbpedia.org/property/awards\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "The Motorcycle Diaries",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Motorcycle_Diaries_(film)",
        "seq": "46,68"
      }
    ],
    "id": "a939d5ed61ef4060a81ee31509198135",
    "predicate mapping": [
      {
        "label": "screenplay",
        "uri": "http://dbpedia.org/property/screenplay",
        "seq": "30,40",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards",
        "seq": "5,11",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Where was Juno I launched from ?",
    "SerialNumber": "4820",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Juno_I\u003e \u003chttp://dbpedia.org/ontology/launchSite\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Juno I",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Juno_I",
        "seq": "10,16"
      }
    ],
    "id": "98d2968030a145948b4b54314cb8aa7c",
    "predicate mapping": [
      {
        "label": "launched",
        "uri": "http://dbpedia.org/ontology/launchSite",
        "seq": "17,25",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "401",
    "question": "How many TV shows have executive producer as Steven Moffat ?",
    "SerialNumber": "4822",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/ontology/executiveProducer\u003e \u003chttp://dbpedia.org/resource/Steven_Moffat\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Steven Moffat",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Steven_Moffat",
        "seq": "45,58"
      }
    ],
    "id": "888a270512ce4866be137aa13b94cb0a",
    "predicate mapping": [
      {
        "label": "executive producer",
        "uri": "http://dbpedia.org/ontology/executiveProducer",
        "seq": "23,41",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "12,17",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "BBC Two is the sister channel of networks having which shows?",
    "SerialNumber": "4823",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/sisterNames\u003e \u003chttp://dbpedia.org/resource/BBC_Two\u003e . ?uri \u003chttp://dbpedia.org/ontology/network\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "BBC Two",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/BBC_Two",
        "seq": "0,7"
      }
    ],
    "id": "37dd8f24e04d4c9693e47be13aca643a",
    "predicate mapping": [
      {
        "label": "sister",
        "uri": "http://dbpedia.org/property/sisterNames",
        "seq": "15,21",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "network",
        "uri": "http://dbpedia.org/ontology/network",
        "seq": "33,40",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "55,60",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What were the awards won by the founder of Walt Disney Records ?",
    "SerialNumber": "4825",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Walt_Disney_Records\u003e \u003chttp://dbpedia.org/ontology/foundedBy\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/award\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Walt Disney Records",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Walt_Disney_Records",
        "seq": "43,62"
      }
    ],
    "id": "3ec897b53af44595bc48dcd851a91c4f",
    "predicate mapping": [
      {
        "label": "founder of",
        "uri": "http://dbpedia.org/ontology/foundedBy",
        "seq": "32,42",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/award",
        "seq": "14,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Which river goes through cohoes, NY",
    "SerialNumber": "4826",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Cohoes,_New_York\u003e \u003chttp://dbpedia.org/ontology/river\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "cohoes, NY",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Cohoes,_New_York",
        "seq": "33,35"
      }
    ],
    "id": "7306c480b5f0480e85dea19fd979e9c2",
    "predicate mapping": [
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/river",
        "seq": "6,11",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Is the Columbia University chaired by William Campbell?",
    "SerialNumber": "4827",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Columbia_University\u003e \u003chttp://dbpedia.org/ontology/chairman\u003e \u003chttp://dbpedia.org/resource/William_Campbell_(business_executive)\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Columbia University",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Columbia_University",
        "seq": "7,26"
      },
      {
        "label": "William Campbell",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/William_Campbell_(business_executive)",
        "seq": "38,54"
      }
    ],
    "id": "f6bfc01b9f434dde973e7e2d6f7df70e",
    "predicate mapping": [
      {
        "label": "chaired",
        "uri": "http://dbpedia.org/ontology/chairman",
        "seq": "27,34",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "In what wars was Steve Buyer involved?",
    "SerialNumber": "4832",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Steve_Buyer\u003e \u003chttp://dbpedia.org/ontology/battle\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Steve Buyer",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Steve_Buyer",
        "seq": "17,28"
      }
    ],
    "id": "e2cc5e87ec094843ad79d8b454a8eab6",
    "predicate mapping": [
      {
        "label": "war",
        "uri": "http://dbpedia.org/ontology/battle",
        "seq": "8,11",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "152",
    "question": "Was Michael Schumacher the Pole driver of 1994 Spanish Grand Prix?",
    "SerialNumber": "4834",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/1994_Spanish_Grand_Prix\u003e \u003chttp://dbpedia.org/property/poleDriver\u003e \u003chttp://dbpedia.org/resource/Michael_Schumacher\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "1994 Spanish Grand Prix",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/1994_Spanish_Grand_Prix",
        "seq": "42,65"
      },
      {
        "label": "Michael Schumacher",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Michael_Schumacher",
        "seq": "4,22"
      }
    ],
    "id": "14efdca3006e4eb28b0abc03a9ab8fb8",
    "predicate mapping": [
      {
        "label": "Pole driver",
        "uri": "http://dbpedia.org/property/poleDriver",
        "seq": "27,38",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the style of architecture of Shaheed Minar, Kolkata ?",
    "SerialNumber": "4835",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Shaheed_Minar,_Kolkata\u003e \u003chttp://dbpedia.org/ontology/architecturalStyle\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Shaheed Minar, Kolkata",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Shaheed_Minar,_Kolkata",
        "seq": "37,59"
      }
    ],
    "id": "a17ff3e0133f4d449e03ef1930da70d9",
    "predicate mapping": [
      {
        "label": "style of architecture",
        "uri": "http://dbpedia.org/ontology/architecturalStyle",
        "seq": "12,33",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "402",
    "question": "Count the number of characters in Batman Live?",
    "SerialNumber": "4837",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { \u003chttp://dbpedia.org/resource/Batman_Live\u003e \u003chttp://dbpedia.org/property/characters\u003e ?uri  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/ComicsCharacter\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Batman Live",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Batman_Live",
        "seq": "34,45"
      }
    ],
    "id": "f705b781b41d468f94a33678d84952e3",
    "predicate mapping": [
      {
        "label": "characters",
        "uri": "http://dbpedia.org/property/characters",
        "seq": "20,30",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "characters",
        "uri": "http://dbpedia.org/ontology/ComicsCharacter",
        "seq": "20,30",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "Which company\u0027s division is Audi India? Correct Question",
    "SerialNumber": "4839",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/divisions\u003e \u003chttp://dbpedia.org/resource/Audi_India\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Audi India",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Audi_India",
        "seq": "28,38"
      }
    ],
    "id": "1e9caa7262cd4fd1a51cf31d4ba704e9",
    "predicate mapping": [
      {
        "label": "division",
        "uri": "http://dbpedia.org/property/divisions",
        "seq": "16,24",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "South Side elevated railroad and twin cities 400 are operated by which city?",
    "SerialNumber": "4841",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/South_Side_Elevated_Railroad\u003e \u003chttp://dbpedia.org/ontology/operatedBy\u003e ?uri. \u003chttp://dbpedia.org/resource/Twin_Cities_400\u003e \u003chttp://dbpedia.org/ontology/operatedBy\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "South Side elevated railroad",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/South_Side_Elevated_Railroad",
        "seq": "0,28"
      },
      {
        "label": "twin cities 400",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Twin_Cities_400",
        "seq": "33,48"
      }
    ],
    "id": "a045ba882fa04930b139d902ee4b03e2",
    "predicate mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/ontology/operatedBy",
        "seq": "0,0",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "",
        "uri": "http://dbpedia.org/ontology/operatedBy",
        "seq": "0,0",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Is Michelle D. Johnson the superintendent of United States Air Force Academy?",
    "SerialNumber": "4842",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/United_States_Air_Force_Academy\u003e \u003chttp://dbpedia.org/property/superintendent\u003e \u003chttp://dbpedia.org/resource/Michelle_D._Johnson\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "United States Air Force Academy",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/United_States_Air_Force_Academy",
        "seq": "45,76"
      },
      {
        "label": "Michelle D. Johnson",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Michelle_D._Johnson",
        "seq": "3,22"
      }
    ],
    "id": "4b6f22e87e69458297229de03060b7c2",
    "predicate mapping": [
      {
        "label": "superintendent",
        "uri": "http://dbpedia.org/property/superintendent",
        "seq": "27,41",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which famous political figure appointed william cushing, and also founded Pittsburgh\u003e",
    "SerialNumber": "4843",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Pittsburgh\u003e \u003chttp://dbpedia.org/ontology/founder\u003e ?uri. \u003chttp://dbpedia.org/resource/William_Cushing\u003e \u003chttp://dbpedia.org/ontology/appointer\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Pittsburgh",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Pittsburgh",
        "seq": "74,84"
      },
      {
        "label": "william cushing",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/William_Cushing",
        "seq": "40,55"
      }
    ],
    "id": "700c843d2d27481ab61b3a05fdad96e8",
    "predicate mapping": [
      {
        "label": "founded",
        "uri": "http://dbpedia.org/ontology/founder",
        "seq": "66,73",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "appointed",
        "uri": "http://dbpedia.org/ontology/appointer",
        "seq": "30,39",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Which basketball players have played in the league of National Basketball Association?",
    "SerialNumber": "4846",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/league\u003e \u003chttp://dbpedia.org/resource/National_Basketball_Association\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/BasketballPlayer\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "National Basketball Association",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/National_Basketball_Association",
        "seq": "54,85"
      }
    ],
    "id": "70bbdbe70a4046eeb6d90a238c8fd233",
    "predicate mapping": [
      {
        "label": "league",
        "uri": "http://dbpedia.org/ontology/league",
        "seq": "44,50",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "basketball player",
        "uri": "http://dbpedia.org/ontology/BasketballPlayer",
        "seq": "6,23",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What is the award won of the scientists known for Cubic Hermite spline?",
    "SerialNumber": "4847",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/knownFor\u003e \u003chttp://dbpedia.org/resource/Cubic_Hermite_spline\u003e . ?x \u003chttp://dbpedia.org/ontology/award\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Scientist\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Cubic Hermite spline",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Cubic_Hermite_spline",
        "seq": "50,70"
      }
    ],
    "id": "2342c11d42084f99991a36ea402e5298",
    "predicate mapping": [
      {
        "label": "known for",
        "uri": "http://dbpedia.org/property/knownFor",
        "seq": "40,49",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "award won",
        "uri": "http://dbpedia.org/ontology/award",
        "seq": "12,21",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "scientist",
        "uri": "http://dbpedia.org/ontology/Scientist",
        "seq": "29,38",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "406",
    "question": "How many companies were founded in places where Dallas is the governing body ?",
    "SerialNumber": "4848",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/governingBody\u003e \u003chttp://dbpedia.org/resource/Dallas\u003e . ?uri \u003chttp://dbpedia.org/ontology/foundationPlace\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Company\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Dallas",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Dallas",
        "seq": "48,54"
      }
    ],
    "id": "61613d09dbbe40fc987b96072987dea0",
    "predicate mapping": [
      {
        "label": "governing body",
        "uri": "http://dbpedia.org/property/governingBody",
        "seq": "62,76",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "founded",
        "uri": "http://dbpedia.org/ontology/foundationPlace",
        "seq": "24,31",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "companies",
        "uri": "http://dbpedia.org/ontology/Company",
        "seq": "9,18",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the bloomington viaduct built to cross?",
    "SerialNumber": "4849",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Bloomington_Viaduct\u003e \u003chttp://dbpedia.org/property/crosses\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "bloomington viaduct",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Bloomington_Viaduct",
        "seq": "12,31"
      }
    ],
    "id": "b2a4d8fce56a4890a9e803ec33770b7c",
    "predicate mapping": [
      {
        "label": "cross",
        "uri": "http://dbpedia.org/property/crosses",
        "seq": "41,46",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "What awards were presented to the person who produced Paradise place?",
    "SerialNumber": "4850",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Paradise_Place\u003e \u003chttp://dbpedia.org/property/producer\u003e ?x . ?x \u003chttp://dbpedia.org/property/awards\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Paradise place",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Paradise_Place",
        "seq": "54,68"
      }
    ],
    "id": "f1a4a596441946deabb79234cff39587",
    "predicate mapping": [
      {
        "label": "produced",
        "uri": "http://dbpedia.org/property/producer",
        "seq": "45,53",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards",
        "seq": "5,11",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/Person",
        "seq": "34,40",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Copley Medal has been awarded to which scientists?",
    "SerialNumber": "4851",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/awards\u003e \u003chttp://dbpedia.org/resource/Copley_Medal\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Scientist\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Copley Medal",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Copley_Medal",
        "seq": "0,12"
      }
    ],
    "id": "2a59af2efcc74bec9b6f9b1d25486ae5",
    "predicate mapping": [
      {
        "label": "awarded",
        "uri": "http://dbpedia.org/property/awards",
        "seq": "22,29",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "scientist",
        "uri": "http://dbpedia.org/ontology/Scientist",
        "seq": "39,48",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "To which city does Northeast Library belong?",
    "SerialNumber": "4860",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Northeast_Library\u003e \u003chttp://dbpedia.org/ontology/city\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Northeast Library",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Northeast_Library",
        "seq": "19,36"
      }
    ],
    "id": "69ff2b75810646209568b0df3e994b16",
    "predicate mapping": [
      {
        "label": "city",
        "uri": "http://dbpedia.org/ontology/city",
        "seq": "9,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "What beverages originate in Leuven?",
    "SerialNumber": "4861",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/origin\u003e \u003chttp://dbpedia.org/resource/Leuven\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Beverage\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Leuven",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Leuven",
        "seq": "28,34"
      }
    ],
    "id": "1cad7eba242f4238ab0cece8e171f786",
    "predicate mapping": [
      {
        "label": "origin",
        "uri": "http://dbpedia.org/ontology/origin",
        "seq": "15,21",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "beverage",
        "uri": "http://dbpedia.org/ontology/Beverage",
        "seq": "5,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Which comic characters were created by Paul Dini?",
    "SerialNumber": "4865",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/creators\u003e \u003chttp://dbpedia.org/resource/Paul_Dini\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/ComicsCharacter\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Paul Dini",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Paul_Dini",
        "seq": "39,48"
      }
    ],
    "id": "1ebfba20e07d4dceb706cb7d0e02f7d5",
    "predicate mapping": [
      {
        "label": "created by",
        "uri": "http://dbpedia.org/property/creators",
        "seq": "28,38",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "characters",
        "uri": "http://dbpedia.org/ontology/ComicsCharacter",
        "seq": "12,22",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "What are the cities around the sea which flows into the Atlantic?",
    "SerialNumber": "4866",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/inflow\u003e \u003chttp://dbpedia.org/resource/Atlantic_Ocean\u003e . ?x \u003chttp://dbpedia.org/property/cities\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Sea\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Atlantic",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Atlantic_Ocean",
        "seq": "56,64"
      }
    ],
    "id": "2da4f5fb821747d58ff0f453f01748e0",
    "predicate mapping": [
      {
        "label": "flows",
        "uri": "http://dbpedia.org/ontology/inflow",
        "seq": "41,46",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "cities",
        "uri": "http://dbpedia.org/property/cities",
        "seq": "13,19",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "sea",
        "uri": "http://dbpedia.org/ontology/Sea",
        "seq": "31,34",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "Which football managers managed Middlesbrough F.C.?",
    "SerialNumber": "4868",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/managerClub\u003e \u003chttp://dbpedia.org/resource/Middlesbrough_F.C.\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Middlesbrough F.C",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Middlesbrough_F.C.",
        "seq": "32,49"
      }
    ],
    "id": "9028456938924abe93b5277af2137115",
    "predicate mapping": [
      {
        "label": "managers",
        "uri": "http://dbpedia.org/ontology/managerClub",
        "seq": "15,23",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What developed EMMS?",
    "SerialNumber": "4870",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/EMMS\u003e \u003chttp://dbpedia.org/ontology/developer\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "EMMS",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/EMMS",
        "seq": "15,19"
      }
    ],
    "id": "8cc928e4d47048b1861ea9bb7b35471e",
    "predicate mapping": [
      {
        "label": "developed",
        "uri": "http://dbpedia.org/ontology/developer",
        "seq": "5,14",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which city is the route start of the Moscow-Kazan high-speed railway and birth place of the Ilya Savelev ?",
    "SerialNumber": "4871",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Moscow-Kazan_high-speed_railway\u003e \u003chttp://dbpedia.org/ontology/routeStart\u003e ?uri. \u003chttp://dbpedia.org/resource/Ilya_Savelev\u003e \u003chttp://dbpedia.org/ontology/birthPlace\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Moscow-Kazan high-speed railway",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Moscow-Kazan_high-speed_railway",
        "seq": "37,68"
      },
      {
        "label": "Ilya Savelev",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ilya_Savelev",
        "seq": "92,104"
      }
    ],
    "id": "191f35e7fb4246f78353e02e6302361a",
    "predicate mapping": [
      {
        "label": "route start",
        "uri": "http://dbpedia.org/ontology/routeStart",
        "seq": "18,29",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "birth place",
        "uri": "http://dbpedia.org/ontology/birthPlace",
        "seq": "73,84",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Which hockey team is head coached by Bill Peters?",
    "SerialNumber": "4876",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/headCoach\u003e \u003chttp://dbpedia.org/resource/Bill_Peters_(ice_hockey)\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/HockeyTeam\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Bill Peters",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Bill_Peters_(ice_hockey)",
        "seq": "37,48"
      }
    ],
    "id": "3f12f94aa6634573be6b156f1c4db655",
    "predicate mapping": [
      {
        "label": "head coach",
        "uri": "http://dbpedia.org/property/headCoach",
        "seq": "21,31",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "hockey team",
        "uri": "http://dbpedia.org/ontology/HockeyTeam",
        "seq": "6,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the genre of Battle Chess?",
    "SerialNumber": "4878",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Battle_Chess\u003e \u003chttp://dbpedia.org/property/genre\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Battle Chess",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Battle_Chess",
        "seq": "21,33"
      }
    ],
    "id": "bed9c24aa6cd405ab16165885735645b",
    "predicate mapping": [
      {
        "label": "genre",
        "uri": "http://dbpedia.org/property/genre",
        "seq": "12,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "401",
    "question": "How many bands are signed up with Kobalt Label Services?",
    "SerialNumber": "4881",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/ontology/recordLabel\u003e \u003chttp://dbpedia.org/resource/Kobalt_Label_Services\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Band\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Kobalt Label Services",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Kobalt_Label_Services",
        "seq": "34,55"
      }
    ],
    "id": "944f7d6fd1da4f1592e9d9056d5986b7",
    "predicate mapping": [
      {
        "label": "Label",
        "uri": "http://dbpedia.org/ontology/recordLabel",
        "seq": "41,46",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "band",
        "uri": "http://dbpedia.org/ontology/Band",
        "seq": "9,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "where are the sister stations of CFRB broadcasted?",
    "SerialNumber": "4882",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/sisterStations\u003e \u003chttp://dbpedia.org/resource/CFRB\u003e . ?x \u003chttp://dbpedia.org/ontology/broadcastArea\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "CFRB",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/CFRB",
        "seq": "33,37"
      }
    ],
    "id": "1da410830ef64a70bdaf8bedfba7a0ad",
    "predicate mapping": [
      {
        "label": "sister stations",
        "uri": "http://dbpedia.org/property/sisterStations",
        "seq": "14,29",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "broadcasted",
        "uri": "http://dbpedia.org/ontology/broadcastArea",
        "seq": "38,49",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "List the television shows one of whose distributor\u0027s divisions is Warner Bros. Animation.",
    "SerialNumber": "4883",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/property/divisions\u003e \u003chttp://dbpedia.org/resource/Warner_Bros._Animation\u003e . ?uri \u003chttp://dbpedia.org/property/distributor\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Warner Bros. Animation",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Warner_Bros._Animation",
        "seq": "66,88"
      }
    ],
    "id": "c23cebef882b4a39806aaf8d5adac8ad",
    "predicate mapping": [
      {
        "label": "divisions",
        "uri": "http://dbpedia.org/property/divisions",
        "seq": "53,62",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "distributor",
        "uri": "http://dbpedia.org/property/distributor",
        "seq": "39,50",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "9,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Namt the fields of Paul Demiville ?",
    "SerialNumber": "4884",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Paul_Demiéville\u003e \u003chttp://dbpedia.org/property/fields\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Paul Demiville",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/Paul_Demiéville",
        "seq": "19,33"
      }
    ],
    "id": "3065422e5ed048afbfe5677cff2a318b",
    "predicate mapping": [
      {
        "label": "fields",
        "uri": "http://dbpedia.org/property/fields",
        "seq": "9,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which district of Thorington railway station is the location of death of  David Lewis (poet) ?",
    "SerialNumber": "4887",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Thorington_railway_station\u003e \u003chttp://dbpedia.org/ontology/district\u003e ?uri. \u003chttp://dbpedia.org/resource/David_Lewis_(poet)\u003e \u003chttp://dbpedia.org/ontology/deathPlace\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Thorington railway station",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Thorington_railway_station",
        "seq": "18,44"
      },
      {
        "label": "David Lewis (poet)",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/David_Lewis_(poet)",
        "seq": "74,92"
      }
    ],
    "id": "efdf8aa050864451b985d0ff5e49cbd0",
    "predicate mapping": [
      {
        "label": "district",
        "uri": "http://dbpedia.org/ontology/district",
        "seq": "6,14",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "location of death",
        "uri": "http://dbpedia.org/ontology/deathPlace",
        "seq": "52,69",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "406",
    "question": "Count the number of movies whose editors were born in UK?",
    "SerialNumber": "4891",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/birthPlace\u003e \u003chttp://dbpedia.org/resource/United_Kingdom\u003e . ?uri \u003chttp://dbpedia.org/property/editing\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "UK",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/United_Kingdom",
        "seq": "54,56"
      }
    ],
    "id": "c19ff6e63850447cbc240443c789c4f2",
    "predicate mapping": [
      {
        "label": "born in",
        "uri": "http://dbpedia.org/ontology/birthPlace",
        "seq": "46,53",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "editor",
        "uri": "http://dbpedia.org/property/editing",
        "seq": "33,39",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "20,25",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "What subsequent work of Moondog Matinee has the composer of Motorpsycho Nitemare ?",
    "SerialNumber": "4892",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Motorpsycho_Nitemare\u003e \u003chttp://dbpedia.org/property/composer\u003e ?uri. \u003chttp://dbpedia.org/resource/Moondog_Matinee\u003e \u003chttp://dbpedia.org/ontology/subsequentWork\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Motorpsycho Nitemare",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Motorpsycho_Nitemare",
        "seq": "60,80"
      },
      {
        "label": "Moondog Matinee",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Moondog_Matinee",
        "seq": "24,39"
      }
    ],
    "id": "e6a2aa8819844614aa86e76b7ef9cc94",
    "predicate mapping": [
      {
        "label": "composer",
        "uri": "http://dbpedia.org/property/composer",
        "seq": "48,56",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "subsequent work",
        "uri": "http://dbpedia.org/ontology/subsequentWork",
        "seq": "5,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "311",
    "question": "Name the stock holders of soccer club whose one of the stockholder is Carl Sanders ?",
    "SerialNumber": "4898",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/owner\u003e \u003chttp://dbpedia.org/resource/Carl_Sanders\u003e . ?x \u003chttp://dbpedia.org/ontology/owner\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/SoccerClub\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Carl Sanders",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Carl_Sanders",
        "seq": "70,82"
      }
    ],
    "id": "120552b5f83c4469b65f4e0a718d330b",
    "predicate mapping": [
      {
        "label": "stockholder",
        "uri": "http://dbpedia.org/property/owner",
        "seq": "55,66",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "stockholder",
        "uri": "http://dbpedia.org/ontology/owner",
        "seq": "55,66",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "soccer club",
        "uri": "http://dbpedia.org/ontology/SoccerClub",
        "seq": "26,37",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Who was the parent of person whose child is William C P breckinridge?",
    "SerialNumber": "4899",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/children\u003e \u003chttp://dbpedia.org/resource/William_Campbell_Preston_Breckinridge\u003e . ?x \u003chttp://dbpedia.org/ontology/parent\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "William C P breckinridge",
        "matchedBy": "NER-1-1",
        "uri": "http://dbpedia.org/resource/William_Campbell_Preston_Breckinridge",
        "seq": "44,68"
      }
    ],
    "id": "ce1c25a295524cd3ad8096741360c0a5",
    "predicate mapping": [
      {
        "label": "child",
        "uri": "http://dbpedia.org/property/children",
        "seq": "35,40",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "parent",
        "uri": "http://dbpedia.org/ontology/parent",
        "seq": "12,18",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/Person",
        "seq": "22,28",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which TV show\u0027s producer is Stephen E. Ambrose and company is DreamWorks Television?",
    "SerialNumber": "4901",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/producer\u003e \u003chttp://dbpedia.org/resource/Stephen_E._Ambrose\u003e . ?uri \u003chttp://dbpedia.org/ontology/company\u003e \u003chttp://dbpedia.org/resource/DreamWorks_Television\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Stephen E. Ambrose",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Stephen_E._Ambrose",
        "seq": "28,46"
      },
      {
        "label": "DreamWorks Television",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/DreamWorks_Television",
        "seq": "62,83"
      }
    ],
    "id": "fd8b42814a494505a95d0aad81dbb23d",
    "predicate mapping": [
      {
        "label": "producer",
        "uri": "http://dbpedia.org/ontology/producer",
        "seq": "16,24",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/company",
        "seq": "51,58",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "television",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "-1,9",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "111",
    "question": "How many other race are there of the adult (pornographic) actors whose ethnicity is Cherokee ?",
    "SerialNumber": "4906",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/ethnicity\u003e \u003chttp://dbpedia.org/resource/Cherokee\u003e . ?x \u003chttp://dbpedia.org/property/ethnicity\u003e ?uri }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Cherokee",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Cherokee",
        "seq": "84,92"
      }
    ],
    "id": "c8a69f49e96b42b896b722fd19267e70",
    "predicate mapping": [
      {
        "label": "ethnicity",
        "uri": "http://dbpedia.org/ontology/ethnicity",
        "seq": "71,80",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "ethnicity",
        "uri": "http://dbpedia.org/property/ethnicity",
        "seq": "71,80",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Who is the producer of the single which was the subsequent work of He\u0027s a Liar?",
    "SerialNumber": "4907",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/He\u0027s_a_Liar\u003e \u003chttp://dbpedia.org/ontology/subsequentWork\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/producer\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "He\u0027s a Liar",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/He\u0027s_a_Liar",
        "seq": "67,78"
      }
    ],
    "id": "1b5bc20a93da4301bfd74cf0424d6a5d",
    "predicate mapping": [
      {
        "label": "subsequent work",
        "uri": "http://dbpedia.org/ontology/subsequentWork",
        "seq": "48,63",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "producer",
        "uri": "http://dbpedia.org/ontology/producer",
        "seq": "11,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "Whose shrine is in aachen cathedral?",
    "SerialNumber": "4910",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/majorShrine\u003e \u003chttp://dbpedia.org/resource/Aachen_Cathedral\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "aachen cathedral",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Aachen_Cathedral",
        "seq": "19,35"
      }
    ],
    "id": "de05f30a4e304ecc8294fe2c50948518",
    "predicate mapping": [
      {
        "label": "shrine",
        "uri": "http://dbpedia.org/property/majorShrine",
        "seq": "6,12",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "Giorgos Kaminis is the mayor of what?",
    "SerialNumber": "4912",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/mayor\u003e \u003chttp://dbpedia.org/resource/Giorgos_Kaminis\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Giorgos Kaminis",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Giorgos_Kaminis",
        "seq": "0,15"
      }
    ],
    "id": "543de17bf3734e12bdf36bd202942338",
    "predicate mapping": [
      {
        "label": "mayor",
        "uri": "http://dbpedia.org/ontology/mayor",
        "seq": "23,28",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the incumbent of Linda Jenness ?",
    "SerialNumber": "4913",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Linda_Jenness\u003e \u003chttp://dbpedia.org/ontology/incumbent\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Linda Jenness",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Linda_Jenness",
        "seq": "22,35"
      }
    ],
    "id": "40ce6c3ca38043918ce00a735a2e4c98",
    "predicate mapping": [
      {
        "label": "incumbent",
        "uri": "http://dbpedia.org/ontology/incumbent",
        "seq": "9,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "401",
    "question": "Give me a count of mammals which have their order as Primate?",
    "SerialNumber": "4916",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/ontology/order\u003e \u003chttp://dbpedia.org/resource/Primate\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Mammal\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Primate",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Primate",
        "seq": "53,60"
      }
    ],
    "id": "1db54969ed89429596435519a1e8fbf2",
    "predicate mapping": [
      {
        "label": "order",
        "uri": "http://dbpedia.org/ontology/order",
        "seq": "44,49",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "mammal",
        "uri": "http://dbpedia.org/ontology/Mammal",
        "seq": "19,25",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "6",
    "question": "What are the things whose leader was a monarch of Willem-Alexander of the Netherlands?",
    "SerialNumber": "4917",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/monarch\u003e \u003chttp://dbpedia.org/resource/Willem-Alexander_of_the_Netherlands\u003e . ?uri \u003chttp://dbpedia.org/ontology/leader\u003e ?x  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Willem-Alexander of the Netherlands",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Willem-Alexander_of_the_Netherlands",
        "seq": "50,85"
      }
    ],
    "id": "c062bc8772114beb9ceec478ec91a279",
    "predicate mapping": [
      {
        "label": "monarch",
        "uri": "http://dbpedia.org/ontology/monarch",
        "seq": "39,46",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "leader",
        "uri": "http://dbpedia.org/ontology/leader",
        "seq": "26,32",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which county seat of the King County, Washington and PLACE OF DEATH of the Phil Lumpkin ?",
    "SerialNumber": "4921",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/King_County,_Washington\u003e \u003chttp://dbpedia.org/ontology/countySeat\u003e ?uri. \u003chttp://dbpedia.org/resource/Phil_Lumpkin\u003e \u003chttp://dbpedia.org/property/placeOfDeath\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "King County, Washington",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/King_County,_Washington",
        "seq": "25,48"
      },
      {
        "label": "Phil Lumpkin",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Phil_Lumpkin",
        "seq": "75,87"
      }
    ],
    "id": "d49b451c4f0b4b8ea1109469adecf4f1",
    "predicate mapping": [
      {
        "label": "county seat",
        "uri": "http://dbpedia.org/ontology/countySeat",
        "seq": "6,17",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "PLACE OF DEATH",
        "uri": "http://dbpedia.org/property/placeOfDeath",
        "seq": "53,67",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Name the river whose mouth place is Old Lyme, Connecticut?",
    "SerialNumber": "4922",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/mouthPlace\u003e \u003chttp://dbpedia.org/resource/Old_Lyme,_Connecticut\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/River\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Old Lyme, Connecticut",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Old_Lyme,_Connecticut",
        "seq": "36,57"
      }
    ],
    "id": "6e2e3195d6044ab2890e512d68f6fc15",
    "predicate mapping": [
      {
        "label": "mouth place",
        "uri": "http://dbpedia.org/ontology/mouthPlace",
        "seq": "21,32",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Which  person has opponent Ike Clanton?",
    "SerialNumber": "4924",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/opponent\u003e \u003chttp://dbpedia.org/resource/Ike_Clanton\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Person\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ike Clanton",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ike_Clanton",
        "seq": "27,38"
      }
    ],
    "id": "56f3779c92104d1396a551a1d1dbf549",
    "predicate mapping": [
      {
        "label": "opponent",
        "uri": "http://dbpedia.org/ontology/opponent",
        "seq": "18,26",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/Person",
        "seq": "7,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "List the affiliation of Indian general election, 2004 (Andhra Pradesh) ?",
    "SerialNumber": "4925",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Indian_general_election,_2004_(Andhra_Pradesh)\u003e \u003chttp://dbpedia.org/ontology/affiliation\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Indian general election, 2004 (Andhra Pradesh)",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Indian_general_election,_2004_(Andhra_Pradesh)",
        "seq": "24,70"
      }
    ],
    "id": "b45a5663ebe3439a9c8032edaa8750b3",
    "predicate mapping": [
      {
        "label": "affiliation",
        "uri": "http://dbpedia.org/ontology/affiliation",
        "seq": "9,20",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which municipality of the Brown\u0027s Corners, toronto also place of birth of Krista Kelly ?",
    "SerialNumber": "4927",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Brown\u0027s_Corners,_Toronto\u003e \u003chttp://dbpedia.org/ontology/municipality\u003e ?uri. \u003chttp://dbpedia.org/resource/Krista_Kelly\u003e \u003chttp://dbpedia.org/property/placeOfBirth\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Brown\u0027s Corners, toronto",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Brown\u0027s_Corners,_Toronto",
        "seq": "26,50"
      },
      {
        "label": "Krista Kelly",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Krista_Kelly",
        "seq": "74,86"
      }
    ],
    "id": "d8be9b09c9444929b370acbb8f2f1d66",
    "predicate mapping": [
      {
        "label": "municipality",
        "uri": "http://dbpedia.org/ontology/municipality",
        "seq": "6,18",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "place of birth",
        "uri": "http://dbpedia.org/property/placeOfBirth",
        "seq": "56,70",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "305",
    "question": "Where are the shrines of the saints who were beatified by Pope Pius XI?",
    "SerialNumber": "4929",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/property/beatifiedBy\u003e \u003chttp://dbpedia.org/resource/Pope_Pius_XI\u003e . ?x \u003chttp://dbpedia.org/ontology/majorShrine\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Saint\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Pope Pius XI",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Pope_Pius_XI",
        "seq": "58,70"
      }
    ],
    "id": "33a68bbb7cbb44749a300fcafe94dadf",
    "predicate mapping": [
      {
        "label": "beatified by",
        "uri": "http://dbpedia.org/property/beatifiedBy",
        "seq": "45,57",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "shrines",
        "uri": "http://dbpedia.org/ontology/majorShrine",
        "seq": "14,21",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "saint",
        "uri": "http://dbpedia.org/ontology/Saint",
        "seq": "29,34",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "In which areas is the radio station broadcasted which is a sister station of WXME ?",
    "SerialNumber": "4936",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/WXME\u003e \u003chttp://dbpedia.org/property/sisterStations\u003e ?x . ?x \u003chttp://dbpedia.org/property/area\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/RadioStation\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "WXME",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/WXME",
        "seq": "77,81"
      }
    ],
    "id": "836e49a87e9346fa8ff7e57ab6d765c1",
    "predicate mapping": [
      {
        "label": "station",
        "uri": "http://dbpedia.org/property/sisterStations",
        "seq": "28,35",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "area",
        "uri": "http://dbpedia.org/property/area",
        "seq": "9,13",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "radio station",
        "uri": "http://dbpedia.org/ontology/RadioStation",
        "seq": "22,35",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the location town of Seattle Great Wheel ?",
    "SerialNumber": "4940",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Seattle_Great_Wheel\u003e \u003chttp://dbpedia.org/property/locationTown\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Seattle Great Wheel",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Seattle_Great_Wheel",
        "seq": "29,48"
      }
    ],
    "id": "0e96324fa1db4239b4f08a7cc5d7d4a1",
    "predicate mapping": [
      {
        "label": "location town",
        "uri": "http://dbpedia.org/property/locationTown",
        "seq": "12,25",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the office holder whose alma mater is Harvard-Westlake School and resting place is Alta Mesa Memorial Park?",
    "SerialNumber": "4941",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/almaMater\u003e \u003chttp://dbpedia.org/resource/Harvard-Westlake_School\u003e . ?uri \u003chttp://dbpedia.org/property/restingPlace\u003e \u003chttp://dbpedia.org/resource/Alta_Mesa_Memorial_Park\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/OfficeHolder\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Harvard-Westlake School",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Harvard-Westlake_School",
        "seq": "43,66"
      },
      {
        "label": "Alta Mesa Memorial Park",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Alta_Mesa_Memorial_Park",
        "seq": "88,111"
      }
    ],
    "id": "c2b314ca2fe44f229ce588a5c38f9e76",
    "predicate mapping": [
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/ontology/almaMater",
        "seq": "29,39",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "resting place",
        "uri": "http://dbpedia.org/property/restingPlace",
        "seq": "71,84",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "office holder",
        "uri": "http://dbpedia.org/ontology/OfficeHolder",
        "seq": "9,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "Which band had members who are now in The Bleeding Heart Band?",
    "SerialNumber": "4942",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/associatedBand\u003e \u003chttp://dbpedia.org/resource/The_Bleeding_Heart_Band\u003e . ?uri \u003chttp://dbpedia.org/ontology/formerBandMember\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Band\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "The Bleeding Heart Band",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Bleeding_Heart_Band",
        "seq": "38,61"
      }
    ],
    "id": "e06bff7bae994f78aab16d712b680296",
    "predicate mapping": [
      {
        "label": "band",
        "uri": "http://dbpedia.org/ontology/associatedBand",
        "seq": "6,10",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "members",
        "uri": "http://dbpedia.org/ontology/formerBandMember",
        "seq": "15,22",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "band",
        "uri": "http://dbpedia.org/ontology/Band",
        "seq": "6,10",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "5",
    "question": "In which cities do some railways operated by Russian railways start?",
    "SerialNumber": "4943",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x \u003chttp://dbpedia.org/ontology/operatedBy\u003e \u003chttp://dbpedia.org/resource/Russian_Railways\u003e . ?x \u003chttp://dbpedia.org/ontology/routeStart\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Russian railways",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Russian_Railways",
        "seq": "45,61"
      }
    ],
    "id": "f2000de1be65469e8d691b9d6e3732e5",
    "predicate mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/ontology/operatedBy",
        "seq": "0,0",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "start",
        "uri": "http://dbpedia.org/ontology/routeStart",
        "seq": "62,67",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Where was Girls (The Prodigy song)  recorded ?",
    "SerialNumber": "4948",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Girls_(The_Prodigy_song)\u003e \u003chttp://dbpedia.org/property/recorded\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Girls (The Prodigy song)",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Girls_(The_Prodigy_song)",
        "seq": "10,34"
      }
    ],
    "id": "47f4b2253dac4f8f978ff5b8c2166041",
    "predicate mapping": [
      {
        "label": "recorded",
        "uri": "http://dbpedia.org/property/recorded",
        "seq": "36,44",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the party of Indira Gandhi ?",
    "SerialNumber": "4949",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Indira_Gandhi\u003e \u003chttp://dbpedia.org/ontology/party\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Indira Gandhi",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Indira_Gandhi",
        "seq": "18,31"
      }
    ],
    "id": "01dc45d5615b43ea9c0888c88020fb68",
    "predicate mapping": [
      {
        "label": "party",
        "uri": "http://dbpedia.org/ontology/party",
        "seq": "9,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "301",
    "question": "Who are the scientists known for the Manhattan Project?",
    "SerialNumber": "4950",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/knownFor\u003e \u003chttp://dbpedia.org/resource/Manhattan_Project\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Scientist\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Manhattan Project",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Manhattan_Project",
        "seq": "37,54"
      }
    ],
    "id": "cea7ee307d2845a187dc51d08d6f2047",
    "predicate mapping": [
      {
        "label": "known for",
        "uri": "http://dbpedia.org/property/knownFor",
        "seq": "23,32",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "scientist",
        "uri": "http://dbpedia.org/ontology/Scientist",
        "seq": "12,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "What are the regions in which the distributor of Secrets and Lies serves ? ",
    "SerialNumber": "4951",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Secrets_and_Lies_(U.S._TV_series)\u003e \u003chttp://dbpedia.org/ontology/distributor\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/regionServed\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Secrets and Lies",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Secrets_and_Lies_(U.S._TV_series)",
        "seq": "49,65"
      }
    ],
    "id": "175941bf0105430bb779fd7038f266bf",
    "predicate mapping": [
      {
        "label": "distributor",
        "uri": "http://dbpedia.org/ontology/distributor",
        "seq": "34,45",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "regions",
        "uri": "http://dbpedia.org/ontology/regionServed",
        "seq": "13,20",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Which is the common past team of the Charlie Justice (American football player) and Bobby Hoppe ?",
    "SerialNumber": "4954",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Charlie_Justice_(American_football_player)\u003e \u003chttp://dbpedia.org/property/pastteams\u003e ?uri. \u003chttp://dbpedia.org/resource/Bobby_Hoppe\u003e \u003chttp://dbpedia.org/property/pastteams\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Charlie Justice",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Charlie_Justice_(American_football_player)",
        "seq": "37,52"
      },
      {
        "label": "Bobby Hoppe",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Bobby_Hoppe",
        "seq": "84,95"
      }
    ],
    "id": "adbab66762494d168acfc5e78c49f7e6",
    "predicate mapping": [
      {
        "label": "team past",
        "uri": "http://dbpedia.org/property/pastteams",
        "seq": "-1,8",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "team past",
        "uri": "http://dbpedia.org/property/pastteams",
        "seq": "-1,8",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "111",
    "question": "How many other school are there of the rugby players whose school is Michaelhouse ?",
    "SerialNumber": "4957",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/ontology/school\u003e \u003chttp://dbpedia.org/resource/Michaelhouse\u003e . ?x \u003chttp://dbpedia.org/property/school\u003e ?uri }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Michaelhouse",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Michaelhouse",
        "seq": "69,81"
      }
    ],
    "id": "c65bca36d5634c848c7619d8c6a1f36c",
    "predicate mapping": [
      {
        "label": "school",
        "uri": "http://dbpedia.org/ontology/school",
        "seq": "15,21",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "school",
        "uri": "http://dbpedia.org/property/school",
        "seq": "15,21",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "7",
    "question": "Whose relatives are Clan McDuck and Huey, Dewey, and Louie?",
    "SerialNumber": "4961",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri \u003chttp://dbpedia.org/property/relatives\u003e \u003chttp://dbpedia.org/resource/Clan_McDuck\u003e . ?uri \u003chttp://dbpedia.org/property/relatives\u003e \u003chttp://dbpedia.org/resource/Huey,_Dewey,_and_Louie\u003e . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Clan McDuck",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Clan_McDuck",
        "seq": "20,31"
      },
      {
        "label": "Huey, Dewey, and Louie",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Huey,_Dewey,_and_Louie",
        "seq": "36,58"
      }
    ],
    "id": "8adc86df67ad4f3694781a4fe7f98495",
    "predicate mapping": [
      {
        "label": "relatives",
        "uri": "http://dbpedia.org/property/relatives",
        "seq": "6,15",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "relatives",
        "uri": "http://dbpedia.org/property/relatives",
        "seq": "6,15",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "16",
    "question": "Which location country of Ennejma Ezzahra is also the origin of Boga ?",
    "SerialNumber": "4962",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Boga_(soft_drink)\u003e \u003chttp://dbpedia.org/property/origin\u003e ?uri. \u003chttp://dbpedia.org/resource/Ennejma_Ezzahra\u003e \u003chttp://dbpedia.org/property/locationCountry\u003e ?uri} ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Boga",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Boga_(soft_drink)",
        "seq": "64,68"
      },
      {
        "label": "Ennejma Ezzahra",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ennejma_Ezzahra",
        "seq": "26,41"
      }
    ],
    "id": "bc2f6bbbd8bb4055b65d42a97608f366",
    "predicate mapping": [
      {
        "label": "origin",
        "uri": "http://dbpedia.org/property/origin",
        "seq": "54,60",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "location country",
        "uri": "http://dbpedia.org/property/locationCountry",
        "seq": "6,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the PLACE OF DEATH of Charles Gordon (artist) ?",
    "SerialNumber": "4963",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Charles_Gordon_(artist)\u003e \u003chttp://dbpedia.org/property/placeOfDeath\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Charles Gordon (artist)",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Charles_Gordon_(artist)",
        "seq": "30,53"
      }
    ],
    "id": "f22fef56a0c84c86886dc2dc2243a721",
    "predicate mapping": [
      {
        "label": "PLACE OF DEATH",
        "uri": "http://dbpedia.org/property/placeOfDeath",
        "seq": "12,26",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which office holder\u0027s constituency is Haight-Ashbury and has military unit as USS Kittiwake ?",
    "SerialNumber": "4967",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/constituency\u003e \u003chttp://dbpedia.org/resource/Haight-Ashbury\u003e . ?uri \u003chttp://dbpedia.org/ontology/militaryUnit\u003e \u003chttp://dbpedia.org/resource/USS_Kittiwake_(ASR-13)\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/OfficeHolder\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Haight-Ashbury",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Haight-Ashbury",
        "seq": "38,52"
      },
      {
        "label": "USS Kittiwake",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/USS_Kittiwake_(ASR-13)",
        "seq": "78,91"
      }
    ],
    "id": "b35488681e4c4dbb94efcbc1eb49a31d",
    "predicate mapping": [
      {
        "label": "constituency",
        "uri": "http://dbpedia.org/property/constituency",
        "seq": "22,34",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "military unit",
        "uri": "http://dbpedia.org/ontology/militaryUnit",
        "seq": "61,74",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "office holder",
        "uri": "http://dbpedia.org/ontology/OfficeHolder",
        "seq": "6,19",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "Name the composer of motorpsycho Nitemare ?",
    "SerialNumber": "4968",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Motorpsycho_Nitemare\u003e \u003chttp://dbpedia.org/property/composer\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "motorpsycho Nitemare",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Motorpsycho_Nitemare",
        "seq": "21,41"
      }
    ],
    "id": "9b3d41fd10154e0099da01bfaf7daf4a",
    "predicate mapping": [
      {
        "label": "composer",
        "uri": "http://dbpedia.org/property/composer",
        "seq": "9,17",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Which TV show\u0027s writer is Erik Jendresen and distributor is HBO?",
    "SerialNumber": "4969",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/writer\u003e \u003chttp://dbpedia.org/resource/Erik_Jendresen\u003e . ?uri \u003chttp://dbpedia.org/property/distributor\u003e \u003chttp://dbpedia.org/resource/HBO\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/TelevisionShow\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Erik Jendresen",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Erik_Jendresen",
        "seq": "26,40"
      },
      {
        "label": "HBO",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/HBO",
        "seq": "60,63"
      }
    ],
    "id": "812a3d6cf42c439cb59c16744da1932d",
    "predicate mapping": [
      {
        "label": "writer",
        "uri": "http://dbpedia.org/property/writer",
        "seq": "16,22",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "distributor",
        "uri": "http://dbpedia.org/property/distributor",
        "seq": "45,56",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "show\u0027s",
        "uri": "http://dbpedia.org/ontology/TelevisionShow",
        "seq": "9,15",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "308",
    "question": "Name the military conflict whose commander was Colin Powell and took place in israel ?",
    "SerialNumber": "4971",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/commander\u003e \u003chttp://dbpedia.org/resource/Colin_Powell\u003e . ?uri \u003chttp://dbpedia.org/ontology/place\u003e \u003chttp://dbpedia.org/resource/Israel\u003e  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/MilitaryConflict\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Colin Powell",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Colin_Powell",
        "seq": "47,59"
      },
      {
        "label": "israel",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Israel",
        "seq": "78,84"
      }
    ],
    "id": "8246341ae9094f0e9ddd0b1becf8a139",
    "predicate mapping": [
      {
        "label": "commander",
        "uri": "http://dbpedia.org/ontology/commander",
        "seq": "33,42",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "place",
        "uri": "http://dbpedia.org/ontology/place",
        "seq": "69,74",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "military conflict",
        "uri": "http://dbpedia.org/ontology/MilitaryConflict",
        "seq": "9,26",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "In which city did The Ultimate Fighter: Team Rousey vs. Team Tate take place ?",
    "SerialNumber": "4972",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/The_Ultimate_Fighter:_Team_Rousey_vs._Team_Tate\u003e \u003chttp://dbpedia.org/property/city\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "The Ultimate Fighter: Team Rousey vs. Team Tate",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/The_Ultimate_Fighter:_Team_Rousey_vs._Team_Tate",
        "seq": "18,65"
      }
    ],
    "id": "bc638eba36ac42a4ad637b88465f433e",
    "predicate mapping": [
      {
        "label": "city",
        "uri": "http://dbpedia.org/property/city",
        "seq": "9,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "3",
    "question": "Who are all the people who used to figure skate with the current partner of Alexa Scimeca?",
    "SerialNumber": "4973",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/Alexa_Scimeca\u003e \u003chttp://dbpedia.org/ontology/currentPartner\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/formerPartner\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Alexa Scimeca",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Alexa_Scimeca",
        "seq": "76,89"
      }
    ],
    "id": "a6b97c0cc3ad4ba4964258498472eafa",
    "predicate mapping": [
      {
        "label": "current partner",
        "uri": "http://dbpedia.org/ontology/currentPartner",
        "seq": "57,72",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "partner",
        "uri": "http://dbpedia.org/ontology/formerPartner",
        "seq": "65,72",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "315",
    "question": "Which company was the designer of South African class 11e and RENFE class 333 ?",
    "SerialNumber": "4974",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/South_African_Class_11E\u003e \u003chttp://dbpedia.org/ontology/designer\u003e ?uri. \u003chttp://dbpedia.org/resource/RENFE_Class_333\u003e \u003chttp://dbpedia.org/ontology/designer\u003e ?uri . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Company\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "South African class 11e",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/South_African_Class_11E",
        "seq": "34,57"
      },
      {
        "label": "RENFE class 333",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/RENFE_Class_333",
        "seq": "62,77"
      }
    ],
    "id": "066bf38e50c649399528f93568815cf5",
    "predicate mapping": [
      {
        "label": "designer",
        "uri": "http://dbpedia.org/ontology/designer",
        "seq": "22,30",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "designer",
        "uri": "http://dbpedia.org/ontology/designer",
        "seq": "22,30",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company",
        "seq": "6,13",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "108",
    "question": "How many have family as Ape and order (taxonomy) is Primate ?",
    "SerialNumber": "4977",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE {?uri \u003chttp://dbpedia.org/ontology/family\u003e \u003chttp://dbpedia.org/resource/Ape\u003e . ?uri \u003chttp://dbpedia.org/ontology/order\u003e \u003chttp://dbpedia.org/resource/Primate\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Ape",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Ape",
        "seq": "24,27"
      },
      {
        "label": "Primate",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Primate",
        "seq": "52,59"
      }
    ],
    "id": "f14140c456b043708cbc1405ee4fbde7",
    "predicate mapping": [
      {
        "label": "family",
        "uri": "http://dbpedia.org/ontology/family",
        "seq": "14,20",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "order (taxonomy)",
        "uri": "http://dbpedia.org/ontology/order",
        "seq": "32,48",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "111",
    "question": "Count the total awards won by the writer who has won Goethe Prize ?",
    "SerialNumber": "4978",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/awards\u003e \u003chttp://dbpedia.org/resource/Goethe_Prize\u003e . ?x \u003chttp://dbpedia.org/property/awards\u003e ?uri }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Goethe Prize",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Goethe_Prize",
        "seq": "53,65"
      }
    ],
    "id": "2549956a9313466db645ee46bb1f01b8",
    "predicate mapping": [
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards",
        "seq": "16,22",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards",
        "seq": "16,22",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "8",
    "question": "Whose resting place is William Henry Harrison Tomb State Memorial and has kids named John Scott Harrison?",
    "SerialNumber": "4980",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/property/restingplace\u003e \u003chttp://dbpedia.org/resource/William_Henry_Harrison_Tomb_State_Memorial\u003e . ?uri \u003chttp://dbpedia.org/ontology/child\u003e \u003chttp://dbpedia.org/resource/John_Scott_Harrison\u003e  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "William Henry Harrison Tomb State Memorial",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/William_Henry_Harrison_Tomb_State_Memorial",
        "seq": "23,65"
      },
      {
        "label": "John Scott Harrison",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/John_Scott_Harrison",
        "seq": "85,104"
      }
    ],
    "id": "79debf2d75fe4c2c9651c15e18116af1",
    "predicate mapping": [
      {
        "label": "resting place",
        "uri": "http://dbpedia.org/property/restingplace",
        "seq": "6,19",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "has kids",
        "uri": "http://dbpedia.org/ontology/child",
        "seq": "70,78",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "102",
    "question": "Muhammad Yunus has won how many awards?",
    "SerialNumber": "4981",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { \u003chttp://dbpedia.org/resource/Muhammad_Yunus\u003e \u003chttp://dbpedia.org/ontology/award\u003e ?uri  . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Muhammad Yunus",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Muhammad_Yunus",
        "seq": "0,14"
      }
    ],
    "id": "29513d9bf3fb453da72170be9f27bc0d",
    "predicate mapping": [
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/award",
        "seq": "32,38",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "15",
    "question": "Which currency can I use both in Kerguelen islands and French southern and antarctic lands?",
    "SerialNumber": "4987",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/French_Southern_and_Antarctic_Lands\u003e \u003chttp://dbpedia.org/ontology/currency\u003e ?uri. \u003chttp://dbpedia.org/resource/Kerguelen_Islands\u003e \u003chttp://dbpedia.org/ontology/currency\u003e ?uri . }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "French southern and antarctic lands",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/French_Southern_and_Antarctic_Lands",
        "seq": "55,90"
      },
      {
        "label": "Kerguelen islands",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Kerguelen_Islands",
        "seq": "33,50"
      }
    ],
    "id": "7fb2e2a29f6247bf9a36f9dae36fa67d",
    "predicate mapping": [
      {
        "label": "currency",
        "uri": "http://dbpedia.org/ontology/currency",
        "seq": "6,14",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "currency",
        "uri": "http://dbpedia.org/ontology/currency",
        "seq": "6,14",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "2",
    "question": "What is the burial place of Iyoas I ?",
    "SerialNumber": "4990",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { \u003chttp://dbpedia.org/resource/Iyoas_I\u003e \u003chttp://dbpedia.org/property/placeOfBurial\u003e ?uri } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Iyoas I",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Iyoas_I",
        "seq": "28,35"
      }
    ],
    "id": "88fe11d131e142dfa0952fca359787eb",
    "predicate mapping": [
      {
        "label": "burial place",
        "uri": "http://dbpedia.org/property/placeOfBurial",
        "seq": "12,24",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "303",
    "question": "Who are the tenants of the stadium which is a venue of WCW Mayhem ?",
    "SerialNumber": "4991",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { \u003chttp://dbpedia.org/resource/WCW_Mayhem\u003e \u003chttp://dbpedia.org/property/venue\u003e ?x . ?x \u003chttp://dbpedia.org/ontology/tenant\u003e ?uri  . ?x \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Stadium\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "WCW Mayhem",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/WCW_Mayhem",
        "seq": "55,65"
      }
    ],
    "id": "a05e1d00e47e4843ac91a9fc0905efba",
    "predicate mapping": [
      {
        "label": "venue",
        "uri": "http://dbpedia.org/property/venue",
        "seq": "46,51",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "tenant",
        "uri": "http://dbpedia.org/ontology/tenant",
        "seq": "12,18",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "stadium",
        "uri": "http://dbpedia.org/ontology/Stadium",
        "seq": "27,34",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "306",
    "question": "List all the movies whose music has been made up with someone under RCA records?",
    "SerialNumber": "4992",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x \u003chttp://dbpedia.org/ontology/recordLabel\u003e \u003chttp://dbpedia.org/resource/RCA_Records\u003e . ?uri \u003chttp://dbpedia.org/property/music\u003e ?x  . ?uri \u003chttps://www.w3.org/1999/02/22-rdf-syntax-ns#type\u003e \u003chttp://dbpedia.org/ontology/Film\u003e}",
    "checked": "false",
    "entity mapping": [
      {
        "label": "RCA records",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/RCA_Records",
        "seq": "68,79"
      }
    ],
    "id": "61779d70e408400886f2c2932d7b5e69",
    "predicate mapping": [
      {
        "label": "records",
        "uri": "http://dbpedia.org/ontology/recordLabel",
        "seq": "72,79",
        "mappedBy": "byPriorLabelMatch"
      },
      {
        "label": "music",
        "uri": "http://dbpedia.org/property/music",
        "seq": "26,31",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film",
        "seq": "13,18",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "151",
    "question": "Is Brazilian jiu-jitsu the trainer of Nick Diaz?",
    "SerialNumber": "4993",
    "sparql_query": "ASK WHERE { \u003chttp://dbpedia.org/resource/Nick_Diaz\u003e \u003chttp://dbpedia.org/ontology/trainer\u003e \u003chttp://dbpedia.org/resource/Brazilian_jiu-jitsu\u003e }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Nick Diaz",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Nick_Diaz",
        "seq": "38,47"
      },
      {
        "label": "Brazilian jiu-jitsu",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Brazilian_jiu-jitsu",
        "seq": "3,22"
      }
    ],
    "id": "b7433a3ea1cf4a279f781878b61b08b5",
    "predicate mapping": [
      {
        "label": "trainer",
        "uri": "http://dbpedia.org/ontology/trainer",
        "seq": "27,34",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "111",
    "question": "What is the total number of other combatant of the military conflicts whose combatant is Choctaw?",
    "SerialNumber": "4995",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x \u003chttp://dbpedia.org/property/combatant\u003e \u003chttp://dbpedia.org/resource/Choctaw\u003e . ?x \u003chttp://dbpedia.org/property/combatant\u003e ?uri }",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Choctaw",
        "matchedBy": "spotlight",
        "uri": "http://dbpedia.org/resource/Choctaw",
        "seq": "89,96"
      }
    ],
    "id": "56b56d6d68fc4235bafbf28b726a4dff",
    "predicate mapping": [
      {
        "label": "combatant",
        "uri": "http://dbpedia.org/property/combatant",
        "seq": "34,43",
        "mappedBy": "byLabelMatch"
      },
      {
        "label": "combatant",
        "uri": "http://dbpedia.org/property/combatant",
        "seq": "34,43",
        "mappedBy": "byLabelMatch"
      }
    ]
  },
  {
    "sparql_id": "1",
    "question": "What movies have been produced by the production house owned by Larry J. Franco?",
    "SerialNumber": "4996",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri \u003chttp://dbpedia.org/ontology/producer\u003e \u003chttp://dbpedia.org/resource/Larry_J._Franco\u003e } ",
    "checked": "false",
    "entity mapping": [
      {
        "label": "Larry J. Franco",
        "matchedBy": "byLabel",
        "uri": "http://dbpedia.org/resource/Larry_J._Franco",
        "seq": "64,79"
      }
    ],
    "id": "f81e51fa36714841b71d71f2c518a477",
    "predicate mapping": [
      {
        "label": "produced",
        "uri": "http://dbpedia.org/ontology/producer",
        "seq": "22,30",
        "mappedBy": "byPriorLabelMatch"
      }
    ]
  }
]